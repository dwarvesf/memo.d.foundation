<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Labs Team on Dwarves Foundation</title><link>https://memo.d.foundation/playground/</link><description>Recent content in Labs Team on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Fri, 07 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/playground/index.xml" rel="self" type="application/rss+xml"/><item><title>Implement a Token Swap from the base chain to Bitcoin for cross-chain transactions</title><link>https://memo.d.foundation/playground/blockchain/cross-chain-transfers-implementing-a-token-swap-from-base-chain-to-bitcoin/</link><pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/cross-chain-transfers-implementing-a-token-swap-from-base-chain-to-bitcoin/</guid><description>Swapping ICY tokens for Bitcoin means exchanging one type of digital currency for another across different blockchain systems. Since ICY tokens (on the Base chain) and Bitcoin (on its own blockchain) operate on incompatible networks, specific tools are needed to make this process work.</description></item><item><title>Building MVP for AI-driven interview platform</title><link>https://memo.d.foundation/playground/use-cases/ai-interview-platform-mvp/</link><pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/ai-interview-platform-mvp/</guid><description>Our engineering team collaborated with a confidential HRTech client to create an MVP for AI-based, real-time voice interviews. Built in just two weeks to validate the concept, the solution leverages advanced AI and AI voice processing to conduct sales-specific interviews.</description></item><item><title>Frontend Report February 2025</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-february-2025/</link><pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-february-2025/</guid><description>React CRA is officially dead - here&amp;rsquo;s what to use now React finally pulled the plug on Create React App.</description></item><item><title>Hedge Foundation - Optimizing UI for effective investment experience</title><link>https://memo.d.foundation/playground/use-cases/optimizing-ui-for-effective-investment-experience/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/optimizing-ui-for-effective-investment-experience/</guid><description>Designing the UI for a blockchain-based hedge fund platform like Hedge Foundation is not just about creating a visually appealing interface.</description></item><item><title>Frontend Report January 2025</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-january-2025/</link><pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-january-2025/</guid><description>React React 19 is officially here The moment we&amp;rsquo;ve all been waiting for! React 19 has officially landed. React 19 is here with game-changing features!</description></item><item><title>Implement Binance Futures PNL analysis page by Phoenix LiveView</title><link>https://memo.d.foundation/playground/use-cases/implement-binance-future-pnl-analysis-page/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/implement-binance-future-pnl-analysis-page/</guid><description>As Binance doesn&amp;rsquo;t allow Master Account see MSA account Future PNL Analysis, so we decide to clone Binance Future PNL Analysis page with Phoenix Live View to show all Account Future PNL</description></item><item><title>Migrate regular tables into TimescaleDB hypertables to improve query performance</title><link>https://memo.d.foundation/playground/use-cases/migrate-normal-table-to-timescale-table/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/migrate-normal-table-to-timescale-table/</guid><description>Due to increasing trading volume, the user_trades and incomes tables have grown significantly, causing slower performance in our reporting queries. To address this, we propose migrating these tables to TimescaleDB, which will allow us to partition the data into time-based chunks.</description></item><item><title>Database hardening for a trading platform</title><link>https://memo.d.foundation/playground/use-cases/database-hardening-for-trading-platform/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/database-hardening-for-trading-platform/</guid><description>Introduction Database vulnerabilities are a silent threat in trading platforms. They lurk in unrestricted access controls, posing risks of data breaches, operational disruptions, and loss of client trust.</description></item><item><title>Tracking Bitcoin-Altcoin Performance Indicators in BTC Hedging Strategy</title><link>https://memo.d.foundation/playground/use-cases/bitcoin-alt-performance-tracking/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/bitcoin-alt-performance-tracking/</guid><description>In recent years, alongside the growth of blockchain technology, the cryptocurrency market has attracted significant attention from investors and traders. These market participants develop strategies based on their experience and knowledge, primarily demonstrated through their ability to analyze market indicators.</description></item><item><title>Building a data archive and recovery strategy for high-volume trading system</title><link>https://memo.d.foundation/playground/use-cases/data-archive-and-recovery/</link><pubDate>Fri, 13 Dec 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/data-archive-and-recovery/</guid><description>Data safeguarding strategies Data is an important part of software development and one of the most valuable assets for any organization, especially in economics and finance.</description></item><item><title>Go Commentary #24: Coming in Go 1.24: testing/synctest experiment for time and concurrency testing</title><link>https://memo.d.foundation/playground/go/weekly/dec-13/</link><pubDate>Fri, 13 Dec 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/dec-13/</guid><description>Coming in Go 1.24: testing/synctest experiment for time and concurrency testing Context func Test(t *testing.T) { before := time.Now() time.</description></item><item><title>Implementing data snapshot pattern to persist historical data</title><link>https://memo.d.foundation/playground/use-cases/persist-history-using-data-snapshot-pattern/</link><pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/persist-history-using-data-snapshot-pattern/</guid><description>With the growth of financial models, transactional data has become larger and increasingly diverse. It includes a wide range of fields:</description></item><item><title>Go Commentary #23: Draft Release Notes for Go 1.24 and weak pointers in Go</title><link>https://memo.d.foundation/playground/go/weekly/dec-06/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/dec-06/</guid><description>Draft Release Notes Go 1.24 Go 1.24 is not yet released. These are work-in-progress release notes. Go 1.24 is expected to be released in February 2025.</description></item><item><title>Frontend Report Second Half of November 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-second-half-of-november-2024/</link><pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-second-half-of-november-2024/</guid><description>A second half of November 2024 frontend roundup featuring React Router v7, Tailwind CSS v4 Beta, and Vite 6.0. Explore tools like Next Cloudinary, Extism, and SmarkForm, plus insights on SSR cost-effectiveness, JavaScript Symbols, and new CSS strategies.</description></item><item><title>Go Commentary #22: GoMLX: ML in Go without Python</title><link>https://memo.d.foundation/playground/go/weekly/nov-29/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/nov-29/</guid><description>GoMLX: ML in Go without Python How ML models are implemented Written in Python, using frameworks like TensorFlow, JAX or Pytorch that take care of:</description></item><item><title>Intro to Model Context Protocol</title><link>https://memo.d.foundation/playground/ai/model-context-protocol/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/model-context-protocol/</guid><description>By making a new protocol known as the Model Context Protocol (MCP) open-source, Anthropic made a major change in AI. By overcoming the limitations of traditional data integration techniques and addressing the recurrent problem of data isolation, this protocol aims to enhance the connections between data hubs and AI systems.</description></item><item><title>Go Commentary #21: Go sync.Once is Simple</title><link>https://memo.d.foundation/playground/go/weekly/nov-22/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/nov-22/</guid><description>Go sync.Once is simple&amp;hellip; Is it really? What is sync.Once? &amp;ldquo;Once is an object that will perform exactly one action&amp;rdquo; var once sync.</description></item><item><title>AI-powered Ruby travel assistant</title><link>https://memo.d.foundation/playground/use-cases/ai-ruby-travel-assistant-chatbot/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/ai-ruby-travel-assistant-chatbot/</guid><description>&amp;ldquo;When the easy path isn&amp;rsquo;t the right path, true engineering shines in adapting the right tools for the job.&amp;rdquo;</description></item><item><title>Building chatbot agent to streamline project management</title><link>https://memo.d.foundation/playground/use-cases/building-chatbot-agent-for-project-management-tool/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/building-chatbot-agent-for-project-management-tool/</guid><description>Umbrella is a project management platform tailored for athletes, musicians, creatives, and businesses alike, bringing everything from team collaboration to secure document sharing under one roof.</description></item><item><title>Building data pipeline for OGIF transcriber</title><link>https://memo.d.foundation/playground/use-cases/building-data-pipeline-ogif-transcriber/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/building-data-pipeline-ogif-transcriber/</guid><description>At Dwarves, we faced the challenge of efficiently transcribing and summarizing our weekly OGIF event recordings for our Brainery knowledge hub.</description></item><item><title>Quantization for large language models</title><link>https://memo.d.foundation/playground/ai/building-llm-system/quantization-in-llm/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/quantization-in-llm/</guid><description>As large language models (LLMs) continue to evolve, their parameter counts grow exponentially, with some models reaching trillions of parameters. This exponential growth presents significant challenges for deployment on edge devices and in resource-constrained environments due to extensive memory and computational requirements.</description></item><item><title>Setup centralized monitoring system for Hedge Foundation trading platform</title><link>https://memo.d.foundation/playground/use-cases/centralized-monitoring-setup-for-trading-platform/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/centralized-monitoring-setup-for-trading-platform/</guid><description>Hedge Foundtion, a private trading platform serving select traders, required a robust centralized monitoring system to ensure platform reliability and prevent financial losses.</description></item><item><title>Building better Binance transfer tracking</title><link>https://memo.d.foundation/playground/use-cases/binance-transfer-matching/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/binance-transfer-matching/</guid><description>Binance is one of the most popular Decentralized Exchanges worldwide, so the demand for building Binance-integrated applications is growing daily. My team is also onboarding.</description></item><item><title>Reconstructing historical trading PnL: a data pipeline approach</title><link>https://memo.d.foundation/playground/use-cases/reconstructing_trading_pnl_data_pipeline_approach/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/reconstructing_trading_pnl_data_pipeline_approach/</guid><description>Executive summary Recovering historical trading profit and loss (PnL) data is a critical challenge for finance and cryptocurrency platforms. When historical records are unavailable, users cannot validate past trading strategies, assess long-term performance, or reconcile discrepancies.</description></item><item><title>Transfer mapping: enhancing loggers for better transparency</title><link>https://memo.d.foundation/playground/use-cases/enhancing-cryptocurrency-transfer-logger/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/enhancing-cryptocurrency-transfer-logger/</guid><description>What is a logger, and why does it matter? A logger is a fundamental component of modern software systems, designed to record system events, user actions, and issues in real-time.</description></item><item><title>Visualizing crypto market performance: BTC-Alt dynamic indicators in Golang</title><link>https://memo.d.foundation/playground/use-cases/crypto-market-outperform-chart-rendering/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/crypto-market-outperform-chart-rendering/</guid><description>Crypto trading is not just gambling. It has strategies. Once traders can take advantage of it effectively, they can earn. One of the most popular strategies in cryptocurrency is Hedge, which is often mentioned with the name Hedge Bitcoin.</description></item><item><title>AI digest #2 New command Aider, OpenHands, Qwen2.5 Coder 32B, Predicted Output</title><link>https://memo.d.foundation/playground/ai/digest/ai-digest-02/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/digest/ai-digest-02/</guid><description>Aider v0.63.0 release Support for Qwen 2.5 Coder 32B. /webÂ command just adds the page to the chat, without triggering an LLM response.</description></item><item><title>Frontend Report First Half of November 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-first-half-of-november-2024/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-first-half-of-november-2024/</guid><description>This report provides a detailed look at the significant developments in frontend development during the first half of November 2024. It covers the latest updates, tools, and approaches shaping the frontend scene, including React 19&amp;rsquo;s full-stack features, XState for managing state, Shopify&amp;rsquo;s move to React Native, improvements in Next.</description></item><item><title>Go Commentary #20: Go Turns 15</title><link>https://memo.d.foundation/playground/go/weekly/nov-15/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/nov-15/</guid><description>Go Turns 15 So much has changed since Go&amp;rsquo;s 10 year anniversery
Goâs user base x3 in the past five years, making it one of the fastest growing languages.</description></item><item><title>Project Operations Copilots</title><link>https://memo.d.foundation/playground/ai/copilots/projects-operations/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/copilots/projects-operations/</guid><description>Introduction to Project Operations Copilots Managing projects effectively requires careful attention to documentation, reporting, and smooth transitions between team members.</description></item><item><title>Project reports system: a case study</title><link>https://memo.d.foundation/playground/use-cases/ai-powered-monthly-project-reports/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/ai-powered-monthly-project-reports/</guid><description>At Dwarves, we&amp;rsquo;ve developed a Monthly Project Reports system that transforms communication data into actionable intelligence. This lean system orchestrates multiple data streams into comprehensive project insights while maintaining enterprise-grade security and cost efficiency.</description></item><item><title>Team Copilots</title><link>https://memo.d.foundation/playground/ai/copilots/team-copilots/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/copilots/team-copilots/</guid><description>Introduction to Team Copilots Effective team management requires efficient task management, clear communication, and continuous improvement. Our suite of team copilots addresses these key areas by providing AI-assisted tools for managing tasks, facilitating communication, and enhancing productivity.</description></item><item><title>Natural Language to Database Queries: Text-to-MongoDB</title><link>https://memo.d.foundation/playground/ai/text-to-mongodb/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/text-to-mongodb/</guid><description>graph TD A[Natural Language Interface] --&amp;gt; B{Data Access} B --&amp;gt; C[Non-Technical Users] B --&amp;gt; D[Data Scientists] B --&amp;gt; E[Business Analysts] A --&amp;gt; F{Analytics} F --&amp;gt; G[Real-Time Insights] F --&amp;gt; H[Interactive Exploration] F --&amp;gt; I[Agentic Workflows] A --&amp;gt; J{Data Integration} J --&amp;gt; K[Cross-Database Queries] J --&amp;gt; L[Cross-Domain Analysis] There are a lot of external efforts in creating text2sql LLMs and workflows to facilitate in Retrieval Augmented Generation and agentic workflows.</description></item><item><title>Go Commentary #19: Writing secure Go code</title><link>https://memo.d.foundation/playground/go/weekly/nov-08/</link><pubDate>Fri, 08 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/nov-08/</guid><description>Writing secure Go code Context:
What does it mean to keep security in mind when writing Go code?
Solution:</description></item><item><title>Frontend Report October 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-october-2024/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-october-2024/</guid><description>This monthâs newsletter highlights key advancements in web development, including Reactâs new compiler beta and top updates from Next.js Conf 2024, featuring optimizations like Edge Functions and React Server Components.</description></item><item><title>Market report October 2024</title><link>https://memo.d.foundation/playground/market-report/2024-october/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-october/</guid><description>Key takeaways AI chat evolves: Chat interfaces advance, potentially leading to a unified tool for diverse tasks, such as browser and OS integration.</description></item><item><title>Go Commentary #18: Fuzz Testing Go HTTP Services</title><link>https://memo.d.foundation/playground/go/weekly/nov-01/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/nov-01/</guid><description>Fuzz Testing Go HTTP Services Context:
You can&amp;rsquo;t envision all of the possible inputs your code could receive =&amp;gt; You can only find bugs that you expect to find Solution:</description></item><item><title>GraphRAG - Building a knowledge graph for RAG system</title><link>https://memo.d.foundation/playground/ai/building-llm-system/graphrag/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/graphrag/</guid><description>In baseline Retrieval Augmented Generation (RAG), sometimes the result might not be accurate as expected since the query itself have multiple layers of reasoning or the answer requires traversing disparate pieces of information through their shared attributes in order to provide new synthesized insights.</description></item><item><title>Salesforce use cases</title><link>https://memo.d.foundation/playground/ai/use-cases/salesforce/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/use-cases/salesforce/</guid><description>Salesforce agentforce platform Salesforce&amp;rsquo;s Einstein GPT is a key component of their AI-driven capabilities. It serves as a user interface that connects Salesforce&amp;rsquo;s core offerings (Sales Cloud, Service Cloud, Marketing Cloud, etc.</description></item><item><title>Code splitting in React</title><link>https://memo.d.foundation/playground/frontend/react/code-splitting/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/code-splitting/</guid><description>Code splitting is a technique used to optimize JavaScript bundles by breaking them into smaller chunks, loading only the necessary parts when theyâre needed.</description></item><item><title>Component composition patterns in React</title><link>https://memo.d.foundation/playground/frontend/react/component-composition-patterns/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/component-composition-patterns/</guid><description>Component composition patterns are foundational for creating scalable, flexible, and reusable React components. They allow us to build UIs by combining smaller, single-purpose components in various ways.</description></item><item><title>Design system integration in react</title><link>https://memo.d.foundation/playground/frontend/react/design-system-integration/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/design-system-integration/</guid><description>Design system integration in React involves creating a set of reusable, consistent, and easily maintainable components that reflect your appâs design guidelines.</description></item><item><title>Hook architecture in react</title><link>https://memo.d.foundation/playground/frontend/react/hook-architecture/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/hook-architecture/</guid><description>Hooks architecture in React refers to the systematic approach of using hooks to manage state, side effects, and reusable logic across components.</description></item><item><title>Rendering strategies in React</title><link>https://memo.d.foundation/playground/frontend/react/rendering-strategies/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/rendering-strategies/</guid><description>Client-side rendering (CSR), server-side rendering (SSR), and static-site generation (SSG) are three key rendering strategies in modern web development. Each approach has unique advantages and trade-offs, impacting application performance, SEO, and user experience.</description></item><item><title>State management strategy in React</title><link>https://memo.d.foundation/playground/frontend/react/state-management-strategy/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/state-management-strategy/</guid><description>State management is a core architectural topic in React, especially as applications grow in complexity. While local component state (using useState or useReducer) is suitable for small to medium apps, more sophisticated state management strategies become essential as your app scales.</description></item><item><title>Testing strategies in React</title><link>https://memo.d.foundation/playground/frontend/react/testing-strategies/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react/testing-strategies/</guid><description>Testing is essential for ensuring that your code works as expected, is maintainable, and doesn&amp;rsquo;t introduce bugs with future changes. React testing involves unit tests, integration tests, and end-to-end (e2e) tests, each targeting different aspects of your application&amp;rsquo;s functionality.</description></item><item><title>AI digest #1 Aider reasoning, OpenAI Realtime API, Cline - pre Claude-dev</title><link>https://memo.d.foundation/playground/ai/digest/ai-digest-01/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/digest/ai-digest-01/</guid><description>This week&amp;rsquo;s AI updates are all about making life easier for developers working with agentic tools. Cline, formerly known as Claude Dev, just dropped its v2.</description></item><item><title>Go Commentary #17: Leveraging benchstat Projects in Go benchmark and Go Plan9 memo on 450% speeding up calculations</title><link>https://memo.d.foundation/playground/go/weekly/oct-25/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/oct-25/</guid><description>Leveraging benchstat Projections in Go Benchmark Analysis! Context: (golang.org/x/perf/cmd/benchstat)
Old-school:
Creating the benchmark test code: func BenchmarkFoo(b *testing.B) { b.</description></item><item><title>Go extension interface pattern</title><link>https://memo.d.foundation/playground/go/extension-interface-pattern/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/extension-interface-pattern/</guid><description>The extension interface pattern is when an interface embeds another one. The extension pattern helps to add new features to an existing object without changing its original code.</description></item><item><title>Go import design: using git repo path</title><link>https://memo.d.foundation/playground/go/go-import/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-import/</guid><description>Goâs import system, linked directly to git repository paths, was crucial to its early adoption. Unlike most languages, Goâs approach tightly integrates version control with package management, enhancing developer experience and reusability.</description></item><item><title>Package first design</title><link>https://memo.d.foundation/playground/go/go-package/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-package/</guid><description>Here&amp;rsquo;s another article that I want to reassure everyone to know about it. As Go pushes more type composition over inheritance, the POV on building &amp;lsquo;unit&amp;rsquo; is different compare to other languages.</description></item><item><title>Guardrails in llm</title><link>https://memo.d.foundation/playground/ai/building-llm-system/guardrails-in-llm/</link><pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/guardrails-in-llm/</guid><description>Inspite of having strength to process and produce highly coherent human-like, behavior of LLM is unpredictable, so the need of a safety mechanisms and boundaries that control and direct an AI model&amp;rsquo;s behavior to ensure it operates safely, ethically, and within intended parameters is crucial.</description></item><item><title>Automata</title><link>https://memo.d.foundation/playground/00_fleeting/automata/</link><pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/automata/</guid><description>What are Finite State Automata and why should a programmer know about them? Formally, an FSA is a algebraic structure F = â¨Î£, S, s0, F, Î´â© where Î£ is the input alphabet, S is a set of states, s0 â S is a particular start state, F â S is a set of accepting states, and Î´:SÃÎ£ â S is the state transition function.</description></item><item><title>Go Commentary #16: Understand sync.Map</title><link>https://memo.d.foundation/playground/go/weekly/oct-18/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/oct-18/</guid><description>Go sync.Map: The Right Tool for the Right Job Context:
func main() { m := make(map[string]int) go func() { for { m[&amp;quot;blog&amp;quot;] = 1 } }() go func() { for { fmt.</description></item><item><title>ReAct(Reason + Act) in LLM</title><link>https://memo.d.foundation/playground/ai/building-llm-system/react-in-llm/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/react-in-llm/</guid><description>Working with Large Language Models (LLMs) may seem straightforward at first glance. Initially, we might think that simply prompting the AI model with a task is sufficient for it to assist us.</description></item><item><title>ReWOO: Reasoning without observation - A deeper look</title><link>https://memo.d.foundation/playground/ai/building-llm-system/rewoo-in-llm/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/rewoo-in-llm/</guid><description>In the process of improving Large Language Model (LLM) performance, many techniques have been proposed. The Augmented Language Model (ALM) approach boosted LLM accuracy by enabling the attachment of external sources to enhance the model&amp;rsquo;s knowledge.</description></item><item><title>Yelp use cases</title><link>https://memo.d.foundation/playground/ai/use-cases/yelp/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/use-cases/yelp/</guid><description>Yelp Inc. is a platform that helps users discover local businesses through reviews, ratings, and recommendations. Recently, they&amp;rsquo;ve integrated AI and large language models (LLMs) to improve content moderation, search capabilities, and user interactions with features like Yelp Assistant.</description></item><item><title>Model selection</title><link>https://memo.d.foundation/playground/ai/building-llm-system/model-selection/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/model-selection/</guid><description>Choosing the right model isnât about finding a one-size-fits-all solution; itâs about understanding what works best for your specific needs. Each model comes with its own set of strengths and trade-offs, so the key is identifying what truly matters for your application.</description></item><item><title>Error Handling Patterns</title><link>https://memo.d.foundation/playground/00_fleeting/error-handling-patterns/</link><pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/error-handling-patterns/</guid><description>Error handling is one of the most critical aspects of software development, as it ensures that applications behave correctly even in the presence of unexpected inputs or conditions.</description></item><item><title>How does Go achieve type safety when it enables generics?</title><link>https://memo.d.foundation/playground/go/go-generics-type-safety/</link><pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-generics-type-safety/</guid><description>Go introduced generics with Go 1.18, which was officially released in March 2022. This update allowed Go developers to write more flexible and reusable code by supporting type parameters, enabling functions, and data structures to work with different types without sacrificing type safety.</description></item><item><title>Founder Liquidity</title><link>https://memo.d.foundation/playground/00_fleeting/founder-liquidity/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/founder-liquidity/</guid><description>Ask most venture-backed founders why they get 10x more equity than employee #1, 100x more equity than employee #5, and 1000x more equity than employee #15, and you&amp;rsquo;ll get the same answer: &amp;ldquo;I&amp;rsquo;M TAKING SO MUCH RISK, IT&amp;rsquo;S SO HARD TO START A COMPANY, I MADE A BIG MOVE!</description></item><item><title>Go Commentary #15: Using Go embed, and Reflect</title><link>https://memo.d.foundation/playground/go/weekly/oct-11/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/oct-11/</guid><description>Using Go Embed The go:embed directive tells the Go compiler to include files and folders into the compiled binary at build time.</description></item><item><title>Logging</title><link>https://memo.d.foundation/playground/ai/building-llm-system/logs-pillar/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/logs-pillar/</guid><description>When youâre working with generative AI application, one thing that often gets overlooked is logging. Logging helps you keep track of whatâs happening under the hood and gives you the insights you need to improve your model.</description></item><item><title>Metrics</title><link>https://memo.d.foundation/playground/ai/building-llm-system/metric-pillar/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/metric-pillar/</guid><description>When it comes to observability in Large Language Model (LLM) applications, metrics have significance delivering that these systems work correctly. Metrics provide information on both system performance and model efficiency, enabling developers and researchers to fine-tune their systems.</description></item><item><title>Observability in AI platforms</title><link>https://memo.d.foundation/playground/ai/building-llm-system/observability-in-ai-platforms/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/observability-in-ai-platforms/</guid><description>Introduction Importance of observability Observability in AI systems, especially LLMs, is about understanding whatâs happening behind the scenes. Itâs essential for ensuring smooth operations, building user trust, and meeting compliance standards by monitoring performance, spotting issues, and staying accountable.</description></item><item><title>Tracing</title><link>https://memo.d.foundation/playground/ai/building-llm-system/trace-pillar/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/trace-pillar/</guid><description>What is tracing Tracing is a way to keep track of, debug, and get a clear picture of how an LLM app is running.</description></item><item><title>Why Hollywood and gaming struggle with AI</title><link>https://memo.d.foundation/playground/00_fleeting/why-hollywood-and-gaming-struggle-with-ai/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/why-hollywood-and-gaming-struggle-with-ai/</guid><description>Incumbent entertainment and video game companies are experiencing friction in experimenting with generative AI, creating opportunities for startups to innovate. There are several reasons why big companies are hesitant to embrace AI aggressively:</description></item><item><title>Intent classification by LLM</title><link>https://memo.d.foundation/playground/ai/building-llm-system/intent-classification-by-llm/</link><pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/intent-classification-by-llm/</guid><description>User intent classification is a crucial aspect of conversational AI, start with machine learning models, but now advanced language models (LLMs) are being explored for this task.</description></item><item><title>Market report September 2024</title><link>https://memo.d.foundation/playground/market-report/2024-september/</link><pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-september/</guid><description>Key takeaways In the latest models from OpenAI (o1-preview and o1-mini) introduce new trade-offs between cost and performance, and their effectiveness is still being questioned.</description></item><item><title>Frontend Report September 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-september-2024/</link><pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-september-2024/</guid><description>This roundup covers the latest in React, Next.js, and web development. React Server Actions are now Server Functions, and there&amp;rsquo;s a deep dive into the React 19 compiler.</description></item><item><title>Go Commentary #14: Golang compile-time evaluation and Go bindings to SQLite using wazero</title><link>https://memo.d.foundation/playground/go/weekly/oct-04/</link><pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/oct-04/</guid><description>Prep: Golang comptime. Pure blasphemy A small Go tool that enables compile-time function evaluation. By using prep.Comptime, you can evaluate functions at build time, replacing them with their computed results.</description></item><item><title>LLM as a judge</title><link>https://memo.d.foundation/playground/ai/building-llm-system/llm-as-a-judge/</link><pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/llm-as-a-judge/</guid><description>With the robust growth of LLM models currently, there is a new method used to evaluate the performance of large language models (LLMs): LLM-as-a-Judge, also known as LLM-evaluators.</description></item><item><title>Use cases for LLM applications</title><link>https://memo.d.foundation/playground/ai/building-llm-system/use-cases-for-llm-applications/</link><pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/use-cases-for-llm-applications/</guid><description>The potential applications of large language models (LLMs) and other AI foundation models seem truly endless. If you can dream it up, chances are there&amp;rsquo;s an AI system out there that can help bring your vision to life.</description></item><item><title>The rise of AI applications with LLM</title><link>https://memo.d.foundation/playground/ai/building-llm-system/the-rise-of-ai-applications-with-llm/</link><pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/the-rise-of-ai-applications-with-llm/</guid><description>In the course of technological history, few developments have captured the imagination and transformed industries as swiftly and profoundly as the recent surge in artificial intelligence.</description></item><item><title>Go Commentary #13: Compiler Quests and Vector Vexations</title><link>https://memo.d.foundation/playground/go/weekly/sep-27/</link><pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/sep-27/</guid><description>Register Allocation in the Go Compiler Red Hat has graced us with a deep dive into Go&amp;rsquo;s register allocation in the compiler.</description></item><item><title>Evaluation guidelines for LLM applications</title><link>https://memo.d.foundation/playground/ai/building-llm-system/evaluation-guideline-for-llm-application/</link><pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/evaluation-guideline-for-llm-application/</guid><description>Overview Evaluation is a hard part of building an RAG system, especially for application-integrated LLM solving your business problem. This guide outlines a clear, step-by-step approach to effectively evaluating and optimizing the integration of a third-party Large Language Model (LLM) into your application.</description></item><item><title>Prevent prompt injection</title><link>https://memo.d.foundation/playground/ai/building-llm-system/prevent-prompt-injection/</link><pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/prevent-prompt-injection/</guid><description>Nowadays, Large Language Models (LLMs) have become integral to various applications. However, with great power comes great responsibility, and the rise of LLMs has introduced new security challenges.</description></item><item><title>Go Commentary #12: CLI Renaissance with Kubernetes, REST, and Terminal Readers in the Age of Complexity</title><link>https://memo.d.foundation/playground/go/weekly/sep-20/</link><pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/sep-20/</guid><description>kl: An interactive Kubernetes log viewer for your terminal An interactive Kubernetes log viewer for your terminal.
// Example usage of kl kl --context my-context,other-context -n default,other-ns This tool allows you to view logs across multiple containers, pods, and even clusters.</description></item><item><title>Go Commentary #11: The Gopher's LLM Revolution - Actors, Frameworks, and the Future of Go</title><link>https://memo.d.foundation/playground/go/weekly/sep-13/</link><pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/sep-13/</guid><description>Go Survey The feedbacks from us - Gophers will help Go Team to understand: How Go is being used across various industries and organizations The challenges you face as a Go developer The features and improvements youâd like to see in future releases How we can better support the thriving Go community Building LLM-powered applications in Go Ah, the sweet smell of progress mixed with the stench of hype.</description></item><item><title>Who is using Go in enterprise?</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/who-using-golang-in-enterprise/</link><pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/who-using-golang-in-enterprise/</guid><description>Who is using Go in enterprise? Technology Giants Google
Created Go in 2007 Uses Go for many internal tools and services Examples: Kubernetes, Docker (partially) Reference: Go at Google: Language Design in the Service of Software Engineering</description></item><item><title>Evaluate Chatbot Agent by User Simulation</title><link>https://memo.d.foundation/playground/ai/evaluate-chatbot-agent-by-simulated-user/</link><pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/evaluate-chatbot-agent-by-simulated-user/</guid><description>When building a chatbot agent, it&amp;rsquo;s important to evaluate its performance and user satisfaction. One effective method is user simulation, which involves creating virtual users to interact with the chatbot and assess its responses.</description></item><item><title>Â§ Building LLM system</title><link>https://memo.d.foundation/playground/ai/building-llm-system/building-llm-system/</link><pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/building-llm-system/</guid><description>In recent years, the emergence of large language models (LLMs) has revolutionized AI applications, providing new opportunities for solving complex problems with natural language understanding and generation.</description></item><item><title>Journey of Thought Prompting: Harnessing AI to Craft Better Prompts</title><link>https://memo.d.foundation/playground/ai/journey-of-thought-prompting/</link><pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/journey-of-thought-prompting/</guid><description>The Problem with Prompt Engineering Let&amp;rsquo;s face it: prompt engineering is hard. We&amp;rsquo;re all fumbling in the dark, trying to coax these large language models into doing what we want.</description></item><item><title>LLM tracing in AI system</title><link>https://memo.d.foundation/playground/ai/llm-tracing-in-ai-system/</link><pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/llm-tracing-in-ai-system/</guid><description>When Building software with Large Language Models (LLMs) involves several steps, from planning to deployment. LLM tracing emerges as a final step in this process, providing ongoing insights and enabling continuous improvement of LLM-powered applications.</description></item><item><title>Frontend Report August 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-august-2024/</link><pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-august-2024/</guid><description>A comprehensive August 2024 update on key advancements in React 19, Next.js 15, and web development tools. Highlights include new async transitions, server components, SSR performance comparisons, and emerging technologies in the web development landscape.</description></item><item><title>Go Commentary #10: Script, Telemetry</title><link>https://memo.d.foundation/playground/go/weekly/sep-06/</link><pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/sep-06/</guid><description>Script: Making it easy to write shell-like scripts in Go Go library that simplifies writing shell-like scripts by providing a fluent API for common operations like file manipulation, text processing, and command execution.</description></item><item><title>Multi-agent collaboration for task completion</title><link>https://memo.d.foundation/playground/ai/building-llm-system/multi-agent-collaboration-for-task-completion/</link><pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/multi-agent-collaboration-for-task-completion/</guid><description>In AI integrated systems, instead of putting all the workload on a single agent, we can apply a divide and conquer strategy to distribute workload to multiple agents.</description></item><item><title>Efficient Union of Finite Automata in Golang: A Practical Approach</title><link>https://memo.d.foundation/playground/go/compute-union-2-finite-automata/</link><pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/compute-union-2-finite-automata/</guid><description>1. What is Finite Automata? (A Simple Explanation) Finite Automata (FA), also known as Finite State Machines, are abstract computational models used to recognize patterns or process sequences of symbols.</description></item><item><title>Go as an Enterprise Standard Language</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/enterprise-standard-language/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/enterprise-standard-language/</guid><description>Go As Enterprise Standard Language What is An Enterprise standard language (From Java story)? Why Go? How to use Go in enterprise?</description></item><item><title>Go Commentary #9: TinyGo, SQLite Vector Search, and Authorization</title><link>https://memo.d.foundation/playground/go/weekly/aug-30/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/aug-30/</guid><description>TinyGo 0.33.0: The Go Compiler for &amp;lsquo;Small Places&amp;rsquo; Context:
TinyGo is a Go compiler designed for small environments like microcontrollers, WebAssembly (wasm/wasi), and command-line tools.</description></item><item><title>How to use Go in the Enterprise</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/how-to-use-go-in-enterprise/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/how-to-use-go-in-enterprise/</guid><description>How to use Go in enterprise? uber-go/guide
Golang for enterprise application (Reddit)
Golang Benefits and Best Practices for Highly Scalable App Development (Blog post)</description></item><item><title>When to use Go in the Enterprise</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/when-to-use-golang-in-enterprise/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/when-to-use-golang-in-enterprise/</guid><description> When to use Go in the Enterprise? Golang a programming language for modern enterprise applications (Blog post)</description></item><item><title>Why Enterprise Chose Java</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/why-enterprise-chose-java/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/why-enterprise-chose-java/</guid><description>Why Java is chosen by enterprises Historical Context Initially developed by Sun Microsystems, Java was born out of an experimental project.</description></item><item><title>Why Go?</title><link>https://memo.d.foundation/playground/go/go-for-enterprise/why-go/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-for-enterprise/why-go/</guid><description>Why Go Historical Context The Go programming language was developed at Google by Rob Pike, Robert Griesemer, and Ken Thompson.</description></item><item><title>Market report August 2024</title><link>https://memo.d.foundation/playground/market-report/2024-august/</link><pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-august/</guid><description>Key takeaways Tools like Cursor and Claude 3.5 Sonnet are redefining programming by shifting focus from manual coding to guiding AI-generated code, signaling a move toward AI-driven development.</description></item><item><title>Go Commentary #8: Jupyter Notebooks, Kubernetes Tools, GopherCon Talks</title><link>https://memo.d.foundation/playground/go/weekly/aug-23/</link><pubDate>Fri, 23 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/aug-23/</guid><description>GoNB: A Go Notebook Kernel for Jupyter Auto-complete and contextual help while coding. Rich content display: HTML, markdown (with latex), images, javascript, svg, videos, etc.</description></item><item><title>Go Commentary #7: Releases, Websockets, and Struct Behavior</title><link>https://memo.d.foundation/playground/go/weekly/aug-16/</link><pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/aug-16/</guid><description>Go 1.23 Release Note Full notes that you should skim through to get full-fledged of Go 1.23 A New Home for nhooyr/websocket nhooyr/websocket is adopted by Coder, CDE - Cloud Development Environment Go structs are copied on assignment Inspired by Common Go Mistakes type Thing struct { Name string } func main() { thing := Thing{&amp;quot;record&amp;quot;} other_thing := thing other_thing.</description></item><item><title>Â§ Devbox</title><link>https://memo.d.foundation/playground/devbox/devbox/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/devbox/</guid><description>Why Devbox? The Big Picture The Game-Changing Reasons to Choose Devbox The Building Blocks Devbox: Supercharge Your Development Workflow Devbox Services: Tame Complex Setups with Ease Devbox Plugins: Extend and Customize Like a Pro From Zero to Hero Craft Your Perfect Shell with Devbox Devbox.</description></item><item><title>Devbox in Production: Our Success Story</title><link>https://memo.d.foundation/playground/devbox/story/devbox-production-success-story/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/story/devbox-production-success-story/</guid><description>Remember when setting up a new project felt like assembling IKEA furniture blindfolded? Yeah, those days are over. Here&amp;rsquo;s how Devbox revolutionized our workflow, from dev to production.</description></item><item><title>Evaluating caching in RAG systems</title><link>https://memo.d.foundation/playground/ai/caching-with-rag-system/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/caching-with-rag-system/</guid><description>Introduction In the rapidly evolving landscape of artificial intelligence, Retrieval-Augmented Generation (RAG) systems have emerged as a powerful paradigm for combining the strengths of retrieval-based and generative models.</description></item><item><title>Frontend Report July 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-july-2024/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-july-2024/</guid><description>The report for July 2024 gives you a snapshot of whatâs happening in the world of web development. React is evolving with Server Components, and Next.</description></item><item><title>Go Commentary #6: GUI Framework, Leadership Change</title><link>https://memo.d.foundation/playground/go/weekly/aug-09/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/aug-09/</guid><description>Cogent Core: A New GUI Framework for Go GUI framework written in Go that allows you Code Once, Rune Everywhere (Core) (macOS, Windows, Linux, iOS, Android and web)</description></item><item><title>What is Generative UI?</title><link>https://memo.d.foundation/playground/ai/generative-ui/</link><pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/generative-ui/</guid><description>What is Generative UI? A generative UI (genUI) is a user interface that responds to the user with AI-generated elements instead of just text messages.</description></item><item><title>Go Commentary #5: Features, Memory Optimization, Minecraft Server, Code Editor, and LLM Tool</title><link>https://memo.d.foundation/playground/go/weekly/aug-02/</link><pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/aug-02/</guid><description>Go Features By Version Context:
Go is released every six months. Each major Go release is supported until there are two newer major releases.</description></item><item><title>Devbox Plugins: Turbocharge Your Dev Setup</title><link>https://memo.d.foundation/playground/devbox/introduction/devbox-plugins/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/devbox-plugins/</guid><description>Ever spent hours configuring a new package in your dev environment? Yeah, we&amp;rsquo;ve all been there. It sucks. That&amp;rsquo;s why we created Devbox Plugins.</description></item><item><title>Devbox Services: Tame Your Daemons with process-compose</title><link>https://memo.d.foundation/playground/devbox/introduction/devbox-services/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/devbox-services/</guid><description>Ever wished you could manage your development services as easily as with Docker Compose, but without all the Docker baggage? Say hello to Devbox Services, powered by process-compose.</description></item><item><title>Devbox Shell: Your Dev Environment, Your Rules</title><link>https://memo.d.foundation/playground/devbox/guide/run-your-own-shell/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/guide/run-your-own-shell/</guid><description>Devbox Shell: Your Dev Environment, Your Rules So you&amp;rsquo;ve installed Devbox with that nifty one-liner:
curl -fsSL https://get.jetify.com/devbox | bash Now what?</description></item><item><title>Devbox vs Nix: Why We Chose Simplicity</title><link>https://memo.d.foundation/playground/devbox/introduction/why-devbox-but-not-nix/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/why-devbox-but-not-nix/</guid><description>Let&amp;rsquo;s cut to the chase: Devbox is Nix with training wheels, and that&amp;rsquo;s a good thing. Here&amp;rsquo;s why we&amp;rsquo;re all in on Devbox for building killer dev environments.</description></item><item><title>Devbox vs Nix: Why We Chose Simplicity</title><link>https://memo.d.foundation/playground/devbox/research/content-addressable-storage-in-docker/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/content-addressable-storage-in-docker/</guid><description>Let&amp;rsquo;s cut to the chase: Devbox is Nix with training wheels, and that&amp;rsquo;s a good thing. Here&amp;rsquo;s why we&amp;rsquo;re all in on Devbox for building killer dev environments.</description></item><item><title>Devbox: Your Dev Environment on Steroids</title><link>https://memo.d.foundation/playground/devbox/introduction/devbox/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/devbox/</guid><description>Remember the last time you onboarded a new developer? Or tried a new tool without wrecking your setup? Yeah, it probably sucked.</description></item><item><title>Devbox.json: Your Project's DNA</title><link>https://memo.d.foundation/playground/devbox/guide/devboxjson/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/guide/devboxjson/</guid><description>Devbox.json: Your Project&amp;rsquo;s DNA Ever wished you could clone your perfect dev environment? With devbox.json, you can. This little file is the beating heart of your Devbox setup.</description></item><item><title>Ditch the Containers: Go Containerless with Devbox</title><link>https://memo.d.foundation/playground/devbox/guide/containerless/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/guide/containerless/</guid><description>Ditch the Containers: Go Containerless with Devbox Containers are great, but sometimes they&amp;rsquo;re overkill. With Devbox Services and Plugins, you can create a sleek, containerless environment for local development.</description></item><item><title>Docker Build Issues</title><link>https://memo.d.foundation/playground/devbox/research/docker-issues/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/docker-issues/</guid><description>Docker build is not deterministic. This means that with the same Dockerfile, different build times (or builds on different machines) can result in different outcomes.</description></item><item><title>Fixed-output Derivation in Nix</title><link>https://memo.d.foundation/playground/devbox/research/fixed-output-derivation/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/fixed-output-derivation/</guid><description>On different machines with different nixpkgs versions, Nix build will result different packages.
To handle this issue, Fixed-output derivation is raised.</description></item><item><title>Nix - Build the same thing at any time</title><link>https://memo.d.foundation/playground/devbox/research/nix-build-the-same-thing-at-any-time/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/nix-build-the-same-thing-at-any-time/</guid><description>Nix gives us the ability to build Docker image with minimum deterministic by providing some solid mechanisms.
Firstly, using Nix, we can specify exactly the version of each package and its dependencies, and keep it completely the same each time the package build happens.</description></item><item><title>Nix - Minimum changes, Minimum redundancies</title><link>https://memo.d.foundation/playground/devbox/research/nix-minimum-changes-minimum-redundancies/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/nix-minimum-changes-minimum-redundancies/</guid><description>The reproducible issue is resolved in the previous part. But we still have another problem when using Docker build, it is shadow copies.</description></item><item><title>Nix Flakes: Next-Level Package Management</title><link>https://memo.d.foundation/playground/devbox/introduction/nix-flakes/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/nix-flakes/</guid><description>Ever tried to share your perfect dev setup, only to hear &amp;ldquo;It doesn&amp;rsquo;t work on my machine&amp;rdquo;? Nix Flakes is about to make that headache a thing of the past.</description></item><item><title>Nix is Faster Than Docker Build</title><link>https://memo.d.foundation/playground/devbox/research/nix-is-faster-than-docker-build/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/nix-is-faster-than-docker-build/</guid><description>As I mentioned in the Build the same thing at any time, Nix knows the exact content of packages and dependencies before builds.</description></item><item><title>Nix Shell: Bulletproof Development Environments</title><link>https://memo.d.foundation/playground/devbox/introduction/nix-shell/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/nix-shell/</guid><description>Ever wished you could clone your perfect dev setup to any machine? Or test a new package without breaking your system?</description></item><item><title>Nix: Revolutionizing Docker Image Builds</title><link>https://memo.d.foundation/playground/devbox/research/nix-in-building-docker-images/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/nix-in-building-docker-images/</guid><description>Docker&amp;rsquo;s great, but let&amp;rsquo;s face it: building images can be a pain. Enter Nix, the tool that&amp;rsquo;s about to change your Docker game forever.</description></item><item><title>Pinning nixpkgs in Nix</title><link>https://memo.d.foundation/playground/devbox/research/pinning-nixpkgs/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/pinning-nixpkgs/</guid><description>Pinning nixpkgs means you can choose the version of nixpkgs, and then all packages required for building your application and its dependencies are fetched from this nixpkgs version where the version of each package is specified and not changed over time.</description></item><item><title>Shadow Copies in Docker Builds</title><link>https://memo.d.foundation/playground/devbox/research/shadow-copies/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/shadow-copies/</guid><description>One more issue that comes from internet access of Docker build is Shadow copies aka redundant files that are not cleaned after new versions of packages are installed.</description></item><item><title>The reason for being</title><link>https://memo.d.foundation/playground/devbox/introduction/the-reason-for-being/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/introduction/the-reason-for-being/</guid><description>The Pursuit of Consistency With the rise of cloud services, we first adapted Docker as a containerization tool to wrap our application into an isolated environment for running on the cloud for production.</description></item><item><title>Unstable Package Installation in Docker</title><link>https://memo.d.foundation/playground/devbox/research/unstable-package-installation/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/research/unstable-package-installation/</guid><description>For example, let&amp;rsquo;s suppose that we have the following Dockerfile.
FROM ubuntu:20.04 RUN apt-get update &amp;amp;&amp;amp; apt-get install -y python3 Imagine that the first time you build your Docker image, the version of Python is 3.</description></item><item><title>Go Commentary #4: Ethical Hacking, HTTP Requests, Mac App Development</title><link>https://memo.d.foundation/playground/go/weekly/jul-26/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/jul-26/</guid><description>Using Go to send 500 Million HTTP Requests to 2.5 Million Hosts Context:
(Ethical hacking) To send 500 million of non RFC HTTP/1.</description></item><item><title>Market report July 2024</title><link>https://memo.d.foundation/playground/market-report/2024-july/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-july/</guid><description>Key takeaways Meta&amp;rsquo;s Llama 3.1, particularly the 405B parameter model, marks a significant advancement in open-source AI, competing with leading closed-source alternatives.</description></item><item><title>Re-ranking in RAG</title><link>https://memo.d.foundation/playground/ai/re-ranking-in-rag/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/re-ranking-in-rag/</guid><description>One of the primary problems in RAG systems is the retrieval of a heterogeneous set of documents or pieces of information.</description></item><item><title>Subscription Pricing Models</title><link>https://memo.d.foundation/playground/00_fleeting/subscription-pricing-models/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/subscription-pricing-models/</guid><description>Pricing Models Freemium Model Description: Attracts users with a free basic version, encouraging upgrades to paid plans for premium features.</description></item><item><title>Function calling in AI agents</title><link>https://memo.d.foundation/playground/ai/function-calling/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/function-calling/</guid><description>Introduction Function calling is a critical component in the architecture of AI agents, facilitating the integration of external functionalities and resources.</description></item><item><title>Ton's base concepts</title><link>https://memo.d.foundation/playground/blockchain/ton_core_concept/</link><pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/ton_core_concept/</guid><description>In my previous post, Ton: Blockchain of Blockchains, I talked about some core technologies that make TON strong. However, it was just an overview.</description></item><item><title>Erlang Finite State Machine</title><link>https://memo.d.foundation/playground/00_fleeting/erlang-fsm/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/erlang-fsm/</guid><description>Finite State Machines (FSMs) are a crucial concept in computer science and software development, providing a robust method for modeling the behavior of systems.</description></item><item><title>Go Commentary #3: Generic Collections, Generics Constraints, AI Bot</title><link>https://memo.d.foundation/playground/go/weekly/jul-12/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/jul-12/</guid><description>Writing generic collection types in Go: the missing documentation Context:
Generics were released in Go 1.18 (~2y), is not used very much - only in some good cases for methods in slices and maps packages.</description></item><item><title>Streamlining Internal Tool Development with Managed LLMOps: A Dify Case Study</title><link>https://memo.d.foundation/playground/ai/building-llm-powered-tools-with-dify/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-powered-tools-with-dify/</guid><description>Organizations are always looking for ways to improve efficiency and productivity. Large Language Models (LLMs) are a powerful technology that can help create smart internal tools.</description></item><item><title>Thumbs up and Thumbs down pattern</title><link>https://memo.d.foundation/playground/ai/thumbs-up-and-thumbs-down-pattern/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/thumbs-up-and-thumbs-down-pattern/</guid><description>Collecting user feedback is importance for improving the accuracy and relevance of responses. One simple yet powerful feedback mechanism is the thumbs up and thumbs down system.</description></item><item><title>Building Agent Supervisors to Generate Insights</title><link>https://memo.d.foundation/playground/ai/supervisor-ai-agents/</link><pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/supervisor-ai-agents/</guid><description>Introduction In the rapidly evolving field of artificial intelligence, the concept of agent supervisors has emerged as a powerful approach to orchestrating multiple AI agents for complex tasks.</description></item><item><title>Ton: Blockchain of blockchains</title><link>https://memo.d.foundation/playground/blockchain/ton_blockchain_of_blockchains/</link><pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/ton_blockchain_of_blockchains/</guid><description>TON (The Open Network) is a blockchain platform originally developed by the team behind Telegram Messenger. By taking advantage of unique sharding technology, Multi-blockchain architecture and Instant Hypercube Routing protocol, TON aims to enable fast transactions and smart contracts with a high level of scalability and security.</description></item><item><title>RAPTOR: Tree-based Retrieval for Language Models</title><link>https://memo.d.foundation/playground/ai/raptor-llm-retrieval/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/raptor-llm-retrieval/</guid><description>What is it? RAPTOR (Recursive Abstractive Processing for Tree-Organized Retrieval) is a new technique for improving retrieval-augmented language models, particularly for long documents: https://arxiv.</description></item><item><title>Go Weekly #2: Go 1.23 Iterators</title><link>https://memo.d.foundation/playground/go/weekly/jul-05/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/jul-05/</guid><description>Why People are Angry over Go 1.23 Iterators Context:
Most languages provide standardized way to iterate over values stored in containers.</description></item><item><title>Proximal Policy Optimization</title><link>https://memo.d.foundation/playground/ai/proximal-policy-optimization/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/proximal-policy-optimization/</guid><description>Introduction Proximal Policy Optimization (PPO) is an algorithm that aims to improve the stability of training by avoiding overly large policy updates.</description></item><item><title>Rust Trait</title><link>https://memo.d.foundation/playground/00_fleeting/rust-trait/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/rust-trait/</guid><description>Rust&amp;rsquo;s trait system is a powerful feature that enables developers to define shared behavior across different types. Traits play a crucial role in achieving code reusability, abstraction, and flexibility.</description></item><item><title>Multimodal in rag</title><link>https://memo.d.foundation/playground/ai/building-llm-system/multimodal-in-rag/</link><pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/building-llm-system/multimodal-in-rag/</guid><description>In spite of having taken the world by storm, Large Language Models(LLM) still has some limitations such as limited context window and a knowledge cutoff date.</description></item><item><title>Go Weekly #1: Mastering Go Performance - eBPF and PGO Optimization Techniques</title><link>https://memo.d.foundation/playground/go/weekly/june-27/</link><pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/weekly/june-27/</guid><description>An Applied Introduction to eBPF with Go Context:
We usually write software in user space (outside the OS&amp;rsquo;s kernel, e.</description></item><item><title>Explaining Gradient Descent in Machine Learning with a simple analogy</title><link>https://memo.d.foundation/playground/00_fleeting/explaining-gradient-descent-in-machine-learning-with-a-simple-analogy/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/explaining-gradient-descent-in-machine-learning-with-a-simple-analogy/</guid><description>Gradient descent is a fundamental optimization algorithm in machine learning. It&amp;rsquo;s a bit like finding your way down a mountain in the fog: you take small steps in the direction that seems to be going downhill the fastest.</description></item><item><title>Organize team know-how with Zettelkasten Method</title><link>https://memo.d.foundation/playground/00_fleeting/organize-team-know-how-with-zettelkasten-method/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/organize-team-know-how-with-zettelkasten-method/</guid><description>Whenever you dive into a topic, there&amp;rsquo;s always a mix of what you know and what&amp;rsquo;s new to you. It is important to leverage what you already know, learn new information related to it, and see the connection between them.</description></item><item><title>How to talk to ChatGPT effectively</title><link>https://memo.d.foundation/playground/00_fleeting/how-to-talk-to-chatgpt-effectively/</link><pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/how-to-talk-to-chatgpt-effectively/</guid><description>ChatGPT, an advanced language model by OpenAI, offers a unique way to interact with AI. The quality of results depends on the information and how well you craft your input.</description></item><item><title>Introduce to Solana Token 2022 - new standard to create a token in solana</title><link>https://memo.d.foundation/playground/blockchain/introduce-to-solana-token-2022-new-standard-to-create-a-token-in-solana/</link><pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/introduce-to-solana-token-2022-new-standard-to-create-a-token-in-solana/</guid><description>Introduction Solana Token 2022 Program (Token extensions) is the next generation of the Solana Program Library standard. Token extensions introduce a new set of ways to extend the normal token functionality.</description></item><item><title>Market report may 2024</title><link>https://memo.d.foundation/playground/market-report/2024-may/</link><pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-may/</guid><description>Key takeaways GPT-4o&amp;rsquo;s new advancements can challenge many current businesses while making LLMs foundational for a new wave of software applications.</description></item><item><title>Solana core concepts</title><link>https://memo.d.foundation/playground/blockchain/solana-core-concept/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/solana-core-concept/</guid><description>Introduction Solana is a high-performance blockchain platform designed for decentralized applications and cryptocurrencies. Known for its fast transaction speeds and low costs, Solana uses a unique consensus mechanism called Proof of History (PoH) to achieve high throughput and scalability.</description></item><item><title>A Grand Unified Theory of the AI Hype Cycle</title><link>https://memo.d.foundation/playground/ai/a-grand-unified-theory-of-the-ai-hype-cycle/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/a-grand-unified-theory-of-the-ai-hype-cycle/</guid><description>The Cycle The history of AI goes in cycles, each of which looks at least aÂ littleÂ bit like this:</description></item><item><title>Using Devbox to setup local development environment</title><link>https://memo.d.foundation/playground/devbox/story/devbox-local-development-env/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/story/devbox-local-development-env/</guid><description>Welcome back to our Devbox series! Previously, we&amp;rsquo;ve explored the journey from the early days of virtualization to the widespread adoption of Docker.</description></item><item><title>Market report April 2024</title><link>https://memo.d.foundation/playground/market-report/2024-april/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-april/</guid><description>Key takeaways Meta&amp;rsquo;s Llama 3, Databricks&amp;rsquo; DBRX, and Mixtral 8x22B are setting new standards in AI capabilities, offering high-quality options for self-hosted LLM applications.</description></item><item><title>Developing rapidly with Generative AI</title><link>https://memo.d.foundation/playground/ai/developing-rapidly-with-generative-ai/</link><pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/developing-rapidly-with-generative-ai/</guid><description>Generative AI Generative AI is a subset of artificial intelligence that focuses on creating new content, such as images, text, or audio, based on patterns learned from existing data.</description></item><item><title>The overview into Nix &amp; how we use Devbox @ Dwarves</title><link>https://memo.d.foundation/playground/devbox/story/devbox-nix-and-our-devbox-adoption/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/story/devbox-nix-and-our-devbox-adoption/</guid><description>This is the 3rd post of Devbox series includes
Devbox #1: The world before Docker Devbox #2: Our Docker adoption and its challenges Devbox #3: The overview into Nix &amp;amp; how we use Devbox @ Dwarves In the previous session, that is Devbox #2: Our Docker adoption and its challenges , we talked about âHow Docker is adopted in my development team and its challenges encountered along the way?</description></item><item><title>Our Docker adoption and its challenges</title><link>https://memo.d.foundation/playground/devbox/story/devbox-docker-adoption-and-challenges/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/story/devbox-docker-adoption-and-challenges/</guid><description>This is the 2nd post of Devbox series includes
Devbox #1: The world before Docker Devbox #2: Our Docker adoption and its challenges Devbox #3: The overview into Nix &amp;amp; how we use Devbox @ Dwarves In the previous session that is Devbox #1: The world before Docker, we discussed the world from the beginning before container and Docker concepts emerged as groundbreaking advancements in software development.</description></item><item><title>The world before Docker</title><link>https://memo.d.foundation/playground/devbox/story/devbox-a-world-before-docker/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/devbox/story/devbox-a-world-before-docker/</guid><description>This is the 1st post of Devbox series includes
Devbox #1: The world before Docker Devbox #2: Our Docker adoption and its challenges Devbox #3: The overview into Nix &amp;amp; how we use Devbox @ Dwarves The It-works-on-my-machine time Sometimes, in my software development team, a strange issue is raised.</description></item><item><title>Market report March 2024</title><link>https://memo.d.foundation/playground/market-report/2024-march/</link><pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-march/</guid><description>In this month&amp;rsquo;s market report, we explore the evolving landscape of artificial intelligence, API techniques, toolings, programming languages, and the intersection of design and engineering.</description></item><item><title>Market report February 2024</title><link>https://memo.d.foundation/playground/market-report/2024-february/</link><pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-february/</guid><description>Trends on our radar This month has been a continuation of AI and an upwards trend on FinOps and CyberSecurity.</description></item><item><title>Market report January 2024</title><link>https://memo.d.foundation/playground/market-report/2024-january/</link><pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-january/</guid><description>Trends on our radar Here are some of the few trends we are seeing across the industry, in our projects, as well as our community.</description></item><item><title>Market report December 2023</title><link>https://memo.d.foundation/playground/market-report/2023-december/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2023-december/</guid><description>Trends on our radar Here are some of the few trends we are seeing across the industry, in our projects, as well as our community.</description></item><item><title>WebSockets</title><link>https://memo.d.foundation/playground/frontend/websockets/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/websockets/</guid><description>What are WebSockets Previously, creating web applications that need bidirectional require a HTTP polling for updating the data from the server.</description></item><item><title>From Markup to Pixels - A look inside the DOM, CSSOM, and Render Tree</title><link>https://memo.d.foundation/playground/frontend/from-markup-to-pixels-a-look-inside-the-dom-cssom-and-render-tree/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/from-markup-to-pixels-a-look-inside-the-dom-cssom-and-render-tree/</guid><description>Inside a web browser, there exists a software component responsible for determining the content to show you based on the data it receives.</description></item><item><title>Window and iframe communication</title><link>https://memo.d.foundation/playground/frontend/window-and-iframe-communication/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/window-and-iframe-communication/</guid><description>When working with web development, communicating between a main window and an embedded iframe is often necessary for various tasks, such as content creation or widget implementation.</description></item><item><title>RLHF with Open Assistant</title><link>https://memo.d.foundation/playground/ai/rlhf-with-open-assistant/</link><pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/rlhf-with-open-assistant/</guid><description>What is Open Assistant? Open Assistant (abbreviated as OA) is a chat-based and open-source assistant. The vision of the project is to make a large language model that can run on a single high-end consumer GPU.</description></item><item><title>Story map for LLMs</title><link>https://memo.d.foundation/playground/ai/story-map-for-llms/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/story-map-for-llms/</guid><description>Story Map: Journey for Engineers Developing Applications on top of Large Language Models (LLMs) Below is a story map of a kind of simplified learning and execution path for engineers starting out in developing AI.</description></item><item><title>Adversarial Prompting in Prompt Engineering</title><link>https://memo.d.foundation/playground/ai/adversarial-prompting/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/adversarial-prompting/</guid><description>Adversarial prompting is a crucial aspect of prompt engineering, as it aids in understanding the risks and safety concerns associated with Large Language Models (LLMs).</description></item><item><title>Chunking strategies to overcome context limitation in LLM</title><link>https://memo.d.foundation/playground/ai/chunking-strategies-to-overcome-context-limitation-in-llm/</link><pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/chunking-strategies-to-overcome-context-limitation-in-llm/</guid><description>When it comes to Large Language Models (LLMs) like GPT, managing context size - the number of tokens per prompt - is a unique challenge.</description></item><item><title>LLM's Accuracy - Self Refinement</title><link>https://memo.d.foundation/playground/ai/llms-accuracy-self-refinement/</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/llms-accuracy-self-refinement/</guid><description>Self-refinement is a technique where the model evaluates and refines its own output. Normally, when using an LLM, you provide a prompt and the model generates a completion.</description></item><item><title>Applying Mock Service Worker (MSW) for Seamless Web Development</title><link>https://memo.d.foundation/playground/frontend/applying-mock-service-worker-msw-for-seamless-web-development/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/applying-mock-service-worker-msw-for-seamless-web-development/</guid><description>Introduction Mock Service Worker (MSW) is an API mocking library that leverages the Service Worker API to intercept requests. It offers unique features that set it apart from traditional mocking libraries, making it a go-to choice for developers.</description></item><item><title>Query Caching for Large Language Models</title><link>https://memo.d.foundation/playground/ai/llm-query-caching/</link><pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/llm-query-caching/</guid><description>It&amp;rsquo;s quite fascinating to see the increasingly pivotal role that Large Language Models (LLMs) are playing in various applications, covering the spectrum from natural language processing tasks to predictive typing, and more.</description></item><item><title>Render optimization in data-fetching libraries</title><link>https://memo.d.foundation/playground/frontend/render-optimization-in-data-fetching-libraries/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/render-optimization-in-data-fetching-libraries/</guid><description>Data-fetching libraries are software tools or frameworks that can help improve the performance and scalability of your application by handling network requests and data processing more efficiently.</description></item><item><title>Introduction to Reinforcement Learning and Its Application with LLMs</title><link>https://memo.d.foundation/playground/ai/reinforcement-learning/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/reinforcement-learning/</guid><description>Introduction Reinforcement Learning (RL) is a machine learning method in which an automated system, known as an agent, interacts with a dynamic environment to learn and improve its action strategy.</description></item><item><title>A Fragment Colocation Pattern with React &amp; Apollo GraphQL</title><link>https://memo.d.foundation/playground/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql/</guid><description>When working with complex GraphQL schemas, it&amp;rsquo;s common to have shared fields across different types. A fragment colocation pattern allows us to define fragments alongside their corresponding components, resulting in a more cohesive and maintainable codebase.</description></item><item><title>Scroll-driven animations</title><link>https://memo.d.foundation/playground/frontend/scroll-driven-animations/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/scroll-driven-animations/</guid><description>Scroll-driven animations are popular effects used in web design. They are animations that are connected to the scroll position of a scroll container.</description></item><item><title>React Server Components, NextJs Route and Data Fetching</title><link>https://memo.d.foundation/playground/frontend/react-server-component/</link><pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react-server-component/</guid><description>React Server Components, NextJs Route and Data Fetching React Server Components (RSCs) offer the flexibility to decide where to render components based on their purpose, diverging from the client-side rendering approach of Single-Page Applications.</description></item><item><title>URL formats for sharing via social networks</title><link>https://memo.d.foundation/playground/frontend/url-formats-for-sharing-via-social-networks/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/url-formats-for-sharing-via-social-networks/</guid><description>Why? With the rise of social platforms likeÂ Facebook,Â Twitter andÂ LinkedIn, it&amp;rsquo;s easier than ever to share URLs with a large audience quickly and efficiently.</description></item><item><title>Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines</title><link>https://memo.d.foundation/playground/go/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</guid><description>Introduction Go provides us great and convenient ways to write concurrent programs with high performance to execute tasks concurrently (perhaps in parallel if the program is run on a machine with multiple physical cores, GOMAXPROCS are automatically set to the number of physical cores of the machine that the program is running on)</description></item><item><title>Foundation Models: The Latest Advancement in AI</title><link>https://memo.d.foundation/playground/ai/foundation-model/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/foundation-model/</guid><description>Foundation models are the latest advancement in the AI realm, proposed by Stanford researchers. Unlike conventional AI systems, they aren&amp;rsquo;t limited to specific tasks, making them a game-changer for a variety of applications.</description></item><item><title>Select Vector Database for LLM</title><link>https://memo.d.foundation/playground/ai/select-vector-database-for-llm/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/select-vector-database-for-llm/</guid><description>During our research on applying LLM to real-world applications, we have observed the widespread usage and increasing popularity of Vector databases in various fields.</description></item><item><title>Shadow DOM</title><link>https://memo.d.foundation/playground/frontend/shadow-dom/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/shadow-dom/</guid><description>I&amp;rsquo;m currently working on a new application called Javis, which operates as a Chrome extension. Functioning as an AI assistant, Javis is designed to facilitate a smooth and enriching web browsing experience for users.</description></item><item><title>Message Queues And Streaming Platforms Eg Kafka Nats Rabbitmq</title><link>https://memo.d.foundation/playground/go/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq/</guid><description>At Dwarves Foundation, we host a few learning sessions to understand some of the technology around us. We regularly pick up topics we find interesting to dive deeper into to understand them better and present our findings.</description></item><item><title>Build your chatbot with open source Large Language Models</title><link>https://memo.d.foundation/playground/ai/build-your-chatbot-with-open-source-large-language-models/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/build-your-chatbot-with-open-source-large-language-models/</guid><description>Currently, AI chatbot services like ChatGPT are being widely used, but these services are restricted in many countries and also prohibited by many schools due to the high quality of results they produce compared to the level of studentsâ knowledge.</description></item><item><title>Retain scroll position in infinite scroll</title><link>https://memo.d.foundation/playground/frontend/retain-scroll-position-in-infinite-scroll/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/retain-scroll-position-in-infinite-scroll/</guid><description>Infinite scroll - Benefits and Challenges Infinite scroll has become a popular web design technique in recent years, as it offers several benefits over traditional pagination models such as reducing page load times or minimizing the need for users to browse through multiple pages.</description></item><item><title>Workaround with OpenAI's token limit with Langchain</title><link>https://memo.d.foundation/playground/ai/workaround-with-openais-token-limit-with-langchain/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/workaround-with-openais-token-limit-with-langchain/</guid><description>Problem Tuning OpenAI&amp;rsquo;s ChatGPT comes as a very finicky problem as we don&amp;rsquo;t have access to the model and other forms of tuning GPT are very limited.</description></item><item><title>Working with langchain document loaders</title><link>https://memo.d.foundation/playground/ai/working-with-langchain-document-loaders/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/working-with-langchain-document-loaders/</guid><description>Langchain is a framework that enables the development of applications that utilize language models. It provides support for various main modules, including Models, Prompts, Memory, Indexes, Chains, and Agents.</description></item><item><title>Continuous Translation</title><link>https://memo.d.foundation/playground/frontend/continuous-translation/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/continuous-translation/</guid><description>Continuous Translation (CT) is a modern approach to translation management that involves synchronizing software development and translation workflows. This means that developers, translators, and product owners work together in a continuous cycle to ensure that all translations are up-to-date and aligned with the latest software developments.</description></item><item><title>Unit Testing Best Practices In Golang</title><link>https://memo.d.foundation/playground/go/unit-testing-best-practices-in-golang/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/unit-testing-best-practices-in-golang/</guid><description>One common issue we often tackle in backend engineering is writing test cases. In this article, we will explore the techniques for crafting effective tests in Go, discussing best practices for writing unit tests and utilizing mocks to achieve better isolation.</description></item><item><title>What is PNPM Compare To NPM/Yarn</title><link>https://memo.d.foundation/playground/frontend/what-is-pnpm-compare-to-npmyarn/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/what-is-pnpm-compare-to-npmyarn/</guid><description>What is PNPM? At Dwarves Foundation, we are always on the lookout for new tech. Researching PNPM was originally from research on what package manager Next.</description></item><item><title>Profiling in Go</title><link>https://memo.d.foundation/playground/go/profiling-in-go/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/profiling-in-go/</guid><description>Profiling in Go: Gotta catch &amp;rsquo;emÂ all Introduction Those of you who have watched the Pokemon series will undoubtedly recognize the famous catchphraseâ-â&amp;ldquo;Gotta catch &amp;rsquo;em all&amp;rdquo;â-âthat refers to the main character&amp;rsquo;s goal of catching all the Pokemon in the world.</description></item><item><title>Why Micro Frontend</title><link>https://memo.d.foundation/playground/frontend/why-micro-frontend/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-micro-frontend/</guid><description>Micro-Frontend - What &amp;amp; Why? As web applications become more complex and feature-rich, traditional frontend architectures such as monolithic will become harder to maintain, scale, and evolve.</description></item><item><title>Why We Chose Our Tech Stack Accelerating Development With A Robust Frontend Solution</title><link>https://memo.d.foundation/playground/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution/</guid><description>At Dwarves Foundation, we pride ourselves on being a team of seasoned technology experts, passionate about crafting innovative solutions for our clients.</description></item><item><title>Metaplex NFT Compression</title><link>https://memo.d.foundation/playground/blockchain/metaplex-nft-compression/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/metaplex-nft-compression/</guid><description>With the rise of NFTs on the Solana blockchain, there is a growing demand for these digital assets to be as commonplace as any other item on the internet.</description></item><item><title>Tackling Server State complexity in Frontend Development</title><link>https://memo.d.foundation/playground/frontend/tackling-server-state-complexity-in-frontend-development/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/tackling-server-state-complexity-in-frontend-development/</guid><description>Frontend development has become increasingly complex over the years, and with it, the need for efficient state management. Global State is one such programming pattern that has emerged as a solution to the problem of prop drilling.</description></item><item><title>Variable Fonts</title><link>https://memo.d.foundation/playground/frontend/variable-fonts/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/variable-fonts/</guid><description>What&amp;rsquo;s variable font? Variable fonts - officially known as OpenType Font Variations - are a font format that allows for a single font file to contain multiple variations of a typeface, such as different weights, widths, and styles, that can be dynamically adjusted in real-time using font variations.</description></item><item><title>When should we use useReducer instead of useState?</title><link>https://memo.d.foundation/playground/frontend/when-should-we-use-usereducer-instead-of-usestate/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/when-should-we-use-usereducer-instead-of-usestate/</guid><description>Imagine we have a component with multiple states. It is simple enough not to use state management libraries. useState is surely a choice for the sake of brevity and clarity.</description></item><item><title>Case study: Write-heavy scalable and reliable inventory platform</title><link>https://memo.d.foundation/playground/00_fleeting/202302281019-case-study-write-heavy-scalable-and-reliable-inventory-platform/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202302281019-case-study-write-heavy-scalable-and-reliable-inventory-platform/</guid><description>https://doordash.engineering/2023/02/22/how-doordash-designed-a-successful-write-heavy-scalable-and-reliable-inventory-platform/ TLDR; Case study: Write-heavy scalable and reliable inventory platform
The technical requirements
High Scalability High reliability Low latency High observability Database table optimization</description></item><item><title>Plonky2</title><link>https://memo.d.foundation/playground/blockchain/plonky2/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/plonky2/</guid><description>Introduction Plonky2 is a non-Interactive Proof of Proof of Knowledge (NIPoPoK) chain developed to reduce the size of the blockchain and speed up transaction confirmations.</description></item><item><title>Preserving and Resetting state in React</title><link>https://memo.d.foundation/playground/frontend/preserving-and-resetting-state-in-react/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/preserving-and-resetting-state-in-react/</guid><description>Why should you read this article? Understand how state in React works const [isPlayerA, setIsPlayerA] = useState(true) function Counter(name) { const [score, setScore] = useState(0) return ( &amp;lt;&amp;gt; &amp;lt;div&amp;gt; {name}: {score} &amp;lt;/div&amp;gt; &amp;lt;button onClick={() =&amp;gt; setScore(score + 1)}&amp;gt;+1&amp;lt;/button&amp;gt; &amp;lt;/&amp;gt; ) } // ---------- // Do you think they are the same?</description></item><item><title>Mixpanel</title><link>https://memo.d.foundation/playground/frontend/mixpanel/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mixpanel/</guid><description>Mixpanel is a powerful analytics platform that assists companies in monitoring and analyzing user behavior on their websites and mobile applications.</description></item><item><title>Multi-column index in DB</title><link>https://memo.d.foundation/playground/00_fleeting/202301191192-multi-column-index-in-db/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202301191192-multi-column-index-in-db/</guid><description>Multi-column index in DB
Databases support creating composite indexes (index on multiple columns). If you specify the columns in the right order in the index definition, a single composite index can speed up several kinds of queries on the same table.</description></item><item><title>Validation with Zod</title><link>https://memo.d.foundation/playground/frontend/validation-with-zod/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/validation-with-zod/</guid><description>Zod is the TypeScript-first schema validation library with static type inference. It&amp;rsquo;s functional approach to data validation is parse-dont-validate-in-typescript which parses the data in order to validate and catch errors.</description></item><item><title>Invoking component functions in React</title><link>https://memo.d.foundation/playground/00_fleeting/202301091379-invoking-component-functions-in-react/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202301091379-invoking-component-functions-in-react/</guid><description>What happens if you invoked the component function directly in React?: Let&amp;rsquo;s take a look at this example:
const ExampleComponent = () =&amp;gt;{ const [input, setInput] = useState('') //do something here } export const App = () =&amp;gt;{ const [show, setShow] = useState(false) return ( &amp;lt;div&amp;gt; &amp;lt;button onClick={() =&amp;gt; setShow(!</description></item><item><title>Parse, don't validate in TypeScript</title><link>https://memo.d.foundation/playground/frontend/parse-dont-validate-in-typescript/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/parse-dont-validate-in-typescript/</guid><description>The &amp;ldquo;parse, don&amp;rsquo;t validate&amp;rdquo; approach is all about processing incoming data and failing in a controlled manner if parsing fails. It is all about leveraging trustworthy, secure, and typed data structures within your code and ensuring that all incoming data is handled at the very edges of your systems.</description></item><item><title>Webassembly</title><link>https://memo.d.foundation/playground/frontend/webassembly/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/webassembly/</guid><description>What WebAssembly (abbreviatedÂ Wasm) was launched in 2017 as a low-level assembly-like language with a compact binary format, so itâs fast to load, execute, and run with near-native performance.</description></item><item><title>Polygon zkEVM architecture</title><link>https://memo.d.foundation/playground/blockchain/polygon-zkevm-architecture/</link><pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/polygon-zkevm-architecture/</guid><description>Polygon zkEVM Architecture The main purpose of this architecture is Efficiency, the first strategy is incentivize the most efficient aggregators to participate in the proof generation process.</description></item><item><title>StarkNet architecture</title><link>https://memo.d.foundation/playground/blockchain/starknet-architecture/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/starknet-architecture/</guid><description>StarkNet layer 2 solution StarkNet is a layer 2 blockchain solution using ZK rollup, it provides StarkDex technology for well-known applications such as dYdX, ImmutableX, Sorare.</description></item><item><title>How to deal with technical debt in Scrum</title><link>https://memo.d.foundation/playground/00_fleeting/202212131609-how-to-deal-with-technical-debt-in-scrum/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202212131609-how-to-deal-with-technical-debt-in-scrum/</guid><description>How to deal with Technical debt in Scrum:
Technical debt is a common issue faced by teams that use the Scrum framework.</description></item><item><title>zk-SNARKs</title><link>https://memo.d.foundation/playground/blockchain/zk-snarks/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/zk-snarks/</guid><description>What is this? ZK-SNARKs stands for Zero-Knowledge Succinct Non-Interactive Argument of Knowledges.
Nowadays, we often hear this word when mentioning zk-rollups.</description></item><item><title>Layer 2: Scaling Solutions for Ethereum</title><link>https://memo.d.foundation/playground/blockchain/layer-2/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/layer-2/</guid><description>What? Ethereum scaling solutions Separate blockchain Extends Ethereum Inherits the security guarantees of Ethereum All user transactions on the Layer 2 can ultimately settle back to Layer 1 Ethereum also functions as a data availability layer for Layer 2s Layer 2 will post their transactions data onto Ethereum Rely on Ethereum for data availability Used to get the state of Layer 2 Dispute transaction of Layer 2 Why?</description></item><item><title>Solana Account</title><link>https://memo.d.foundation/playground/blockchain/solana-account/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/solana-account/</guid><description>Unlike most blockchain, Solana separates logic and data into two separate components: Program and Account. What that means is that instead of storing data inside variables internally, Programs interact with external data stored in Accounts with the ability to mutate them.</description></item><item><title>Go JSON parser: number &lt;-> interface</title><link>https://memo.d.foundation/playground/00_fleeting/202211141287-go-json-parsing/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202211141287-go-json-parsing/</guid><description>Go JSON parser: number &amp;lt;-&amp;gt; interface TLDR; becareful when using map[string]interface{} to hold json number value, use custom decoder with newDecoder.</description></item><item><title>Materialized View Pattern</title><link>https://memo.d.foundation/playground/00_fleeting/202211141513-materialized-view-pattern/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202211141513-materialized-view-pattern/</guid><description>Materialized View Pattern TL,DR; Versus &amp;ldquo;normal&amp;rdquo; view
A normal view provides ease-of-use and flexibility features, but it DOES NOT speed up data access A Materialized view is the cache of views.</description></item><item><title>Error Messaging</title><link>https://memo.d.foundation/playground/00_fleeting/202211081111-error-messaging/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202211081111-error-messaging/</guid><description>What makes a bad error message
Inappropriate tone Technical jargon Passing the blame Generic for no reason What make a good error message</description></item><item><title>Sign-in Form Best Practices</title><link>https://memo.d.foundation/playground/00_fleeting/202210172128-sign-in-form-best-practices/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210172128-sign-in-form-best-practices/</guid><description>Sign-in Form Best Practices Use meaningful HTML elements: &amp;lt;form&amp;gt;, &amp;lt;input&amp;gt;, &amp;lt;label&amp;gt;, and &amp;lt;button&amp;gt;. Label each input with a &amp;lt;label&amp;gt;. Use element attributes to access built-in browser features: type, name, autocomplete, required.</description></item><item><title>Singleton Design Pattern in Javascript</title><link>https://memo.d.foundation/playground/frontend/singleton-design-pattern-in-javascript/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/singleton-design-pattern-in-javascript/</guid><description>Overview For global state management in some frameworks like ReactJs; we already have Redux, React Context, Recoil, and Mobx&amp;hellip; for handling that.</description></item><item><title>The Best of CSS TLDR</title><link>https://memo.d.foundation/playground/00_fleeting/202210162154-the-best-of-css-tldr/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210162154-the-best-of-css-tldr/</guid><description>https://www.youtube.com/watch?v=CQuTF-bkOgc tl;dr
three main categories that most UI libraries fall into a/ pure: pure css, no javascript/composite styling, what you write is what you get when compile (tailwind, SASS), focus on how they look b/ behavioral: pure javascript for a11y purpose, unstyled (no css at all) components to make them work the same across different browsers (headlessUI, radix, react-aria), in other words - focus on how they work c/ style system: predefined components that are built upon a layer of pure css (tailwindUI, bootstrap, mantineUI, daisyUI), opinionated a.</description></item><item><title>Migration Planning</title><link>https://memo.d.foundation/playground/00_fleeting/202210150019-migration-planning/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210150019-migration-planning/</guid><description>https://newsletter.pragmaticengineer.com/p/real-world-engineering-challenges
tl;dr Migration plan What do we need to consider?
Downtime Data consistency Rollback plan Observable and measurable Team awareness Common steps</description></item><item><title>An Introduction to Atomic CSS</title><link>https://memo.d.foundation/playground/frontend/an-introduction-to-atomic-css/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/an-introduction-to-atomic-css/</guid><description>Definition A definition to Atomic CSS:
Atomic CSS is the approach to CSS architecture that favors small, single-purpose classes with names based on visual function.</description></item><item><title>Behavior Driven Development</title><link>https://memo.d.foundation/playground/00_fleeting/202210131000-behavior-driven-development/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210131000-behavior-driven-development/</guid><description>Behavior Driven Development (BDD) Three Practices First, take a small upcoming change to the system â a User Story â and talk about concrete examples of the new functionality to explore, discover and agree on the details of whatâs expected to be done.</description></item><item><title>Intro to IndexedDB</title><link>https://memo.d.foundation/playground/frontend/intro-to-indexeddb/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/intro-to-indexeddb/</guid><description>Overview &amp;amp; When to use IndexedDB IndexedDB is a low-level API for client-side storage like localStorage and cookies. But this built-in non-relational database is much more powerful than those 2 counterparts.</description></item><item><title>React Fiber</title><link>https://memo.d.foundation/playground/00_fleeting/202210131516-react-fiber/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210131516-react-fiber/</guid><description>An Introduction to React Fiber Fiber is the new reconciliation algorithm since React 16, a completely backward-compatible rewrite of the old reconciler (Stack Reconciler).</description></item><item><title>Forward Proxy</title><link>https://memo.d.foundation/playground/00_fleeting/202210122014-forward-proxy/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210122014-forward-proxy/</guid><description>Forward proxy: is a server that sits between user devices and the internet. use for:
protect clients avoid browsing restrictions block access to certain content Reverse proxy: is a server that accepts a request from the client, forwards the request to web servers, and returns the results to the client as if the proxy server had processed the request.</description></item><item><title>The fundamental of web performance</title><link>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</link><pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</guid><description>The key to improving your website speed is to understand where the bottlenecks are, and how much time each step takes.</description></item><item><title>WAI-ARIA</title><link>https://memo.d.foundation/playground/frontend/wai-aria/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/wai-aria/</guid><description>Since modern websites and applications contain huge amounts of dynamic content and complex components with no semantics to describe what they mean, users with disabilities, those dependent on assistive technologies such as Screen Reader, text-to-speech or screen magnification tools might suffer to interact with those components.</description></item><item><title>Build polymorphic React components with Typescript</title><link>https://memo.d.foundation/playground/frontend/build-polymorphic-react-components-with-typescript/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/build-polymorphic-react-components-with-typescript/</guid><description>Let&amp;rsquo;s say we want to create a Text component with React and Typescript. A basic implementation could look like:
import React from 'react' type TextProps = { children: React.</description></item><item><title>Cameras in ThreeJS</title><link>https://memo.d.foundation/playground/frontend/threejs/cameras-in-threejs/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/threejs/cameras-in-threejs/</guid><description>ThreeJS is a JavaScript 3D library that allows developers to develop and describe data in 3 dimensions, and then convert them into 2 dimensions and display them on HTML Canvas.</description></item><item><title>Prevent Layout Thrashing</title><link>https://memo.d.foundation/playground/frontend/prevent-layout-thrashing/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/prevent-layout-thrashing/</guid><description>What is Layout Thrashing Layout thrashing means forcing the browser to calculate a layout that is never rendered to the screen, which hurts performance.</description></item><item><title>Pure CSS Parallax</title><link>https://memo.d.foundation/playground/frontend/pure-css-parallax/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/pure-css-parallax/</guid><description>This article demonstrates how to use CSS transforms, perspective and some scaling trickery to create a pure CSS parallax scrolling website.</description></item><item><title>Zero-knowledge Proofs</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/zero-knowledge-proofs/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/zero-knowledge-proofs/</guid><description>Zero-knowledge proof is a way of proving the validity of a statement without disclosing the statement itself. A &amp;ldquo;validator&amp;rdquo; is the party attempting to prove a claim, while a &amp;ldquo;verifier&amp;rdquo; is responsible for validating the claim.</description></item><item><title>CSS Container Queries</title><link>https://memo.d.foundation/playground/frontend/css-container-queries/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/css-container-queries/</guid><description>Published on August 30, 2022, Chrome 105 included Container Queries, one of the most highly requested features in CSS.
The Problem With Media Queries When we want to create a responsive layout, we can use media queries to adjust styles based on the screen size of the device viewing our site.</description></item><item><title>HSL Color</title><link>https://memo.d.foundation/playground/frontend/hsl-color/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/hsl-color/</guid><description>Frontend engineers use Hexadecimal color codes to represent colors, but they have some limitations:
Hexadecimal color codes are difficult to write and adjust, requiring the use of a third-party application to get right.</description></item><item><title>Mitigate blocking the main thread</title><link>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</guid><description>We all know that for web applications, perceived performance is highly importance for our users. For data intensive SPAs with CPU-intensive tasks, the single-threaded nature of Javascript starts to hinder the application&amp;rsquo;s perceived performance when you cannot fit those CPU-intensive tasks into a 16.</description></item><item><title>CSS in JS</title><link>https://memo.d.foundation/playground/frontend/css-in-js/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/css-in-js/</guid><description>CSS-in-JS is a styling technique where Javascript is used to style the component. These are multiple implementations of this concept in the form of libraries such as emotion, styled-component, JSS.</description></item><item><title>Dark mode flickers a white background for a fraction of a second</title><link>https://memo.d.foundation/playground/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second/</guid><description>The dark mode feature uses local storage to store a user&amp;rsquo;s preference for future usage. The problem is that when the dark mode is enabled and the page is reloaded, there&amp;rsquo;s a flicker of white background all over the page before it turns dark.</description></item><item><title>Multisign wallet</title><link>https://memo.d.foundation/playground/blockchain/multisign-wallet/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/multisign-wallet/</guid><description>Intro Multisig wallet Usually, blockchain wallets are generally generated by a unique private key. All assets or transactions are controlled and signed by that private key.</description></item><item><title>Why DOM manipulation is slow?</title><link>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</guid><description>Actually, the DOM is not slow. Adding or removing a DOM node is not much more than setting a property on the JS object.</description></item><item><title>Why Virtual DOM is fast?</title><link>https://memo.d.foundation/playground/frontend/why-virtual-dom-is-fast/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-virtual-dom-is-fast/</guid><description>React and Vue, two popular front-end frameworks, both use Virtual DOM to improve page rendering efficiency. Understanding the concept of Virtual DOM sheds light on an important aspect of performance optimization on the client side.</description></item><item><title>ViteJS native modules</title><link>https://memo.d.foundation/playground/frontend/vitejs-native-modules/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/vitejs-native-modules/</guid><description>Before ES modules was supported in the browser, we have no native mechanism for authoring javascript-modules in a modularized fashion. That is why the concept of &amp;ldquo;bundling&amp;rdquo; and tools like Webpack, Rollup, and Parcel exist to improve the development experience for frontend developers.</description></item><item><title>Anchor framework</title><link>https://memo.d.foundation/playground/blockchain/anchor-framework/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/anchor-framework/</guid><description>This article features a short tutorial to start smart contract development on Solana using Anchor framework. Before you get started, we assume you already had the experience with:</description></item><item><title>JavaScript modules</title><link>https://memo.d.foundation/playground/frontend/javascript-modules/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/javascript-modules/</guid><description>Modules have always been a part of JavaScript development and providing mechanisms for splitting JavaScript programs up into separate modules that can be imported when needed was the absolutely necessity for JavaScript developers.</description></item><item><title>Blockchain Bridge</title><link>https://memo.d.foundation/playground/blockchain/blockchain-bridge/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/blockchain-bridge/</guid><description>Web3 or Dapp has evolved into an ecosystem of L1 blockchains and L2 scaling solutions, each designed with unique tradeoffs and processing capabilities.</description></item><item><title>NFT Fractionalization</title><link>https://memo.d.foundation/playground/blockchain/nft-fractionalization/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/nft-fractionalization/</guid><description>What is a fractional NFT? A fractional NFT is simply a whole NFT that has been divided into smaller fractions, allowing different numbers of people to claim ownership of a piece of the same NFT.</description></item><item><title>Blocks</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/blocks/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/blocks/</guid><description>Blocks 1. Define block in the blockchain A block is thus a permanent store of records that, once written, cannot be altered or removed.</description></item><item><title>Distributed systems</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/distributed-systems/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/distributed-systems/</guid><description>Distributed systems on blockchain As defined on Wiki, distributed computing is a branch of computer science that studies distributed systems.</description></item><item><title>PoS</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/pos/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/pos/</guid><description>The Proof of Stake The Proof of Stake consensus algorithm was introduced in 2011 on the Bitcointalk forum to solve the problems of the most popular algorithm in use â Proof of Work.</description></item><item><title>Smart Contract</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/smart-contract/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/smart-contract/</guid><description>Smart contracts Smart contracts, also known as smart contracts, are computer programs that operate on the blockchain. Entities interacting with the contract do not need to know each other or trust each other.</description></item><item><title>Topics</title><link>https://memo.d.foundation/playground/blockchain/foundational-topics/topics/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/foundational-topics/topics/</guid><description> Blocks Distributed System Smart contract Zero-knowledge Proofs PoW &amp;amp; PoS</description></item><item><title>Atomic Design Pattern</title><link>https://memo.d.foundation/playground/frontend/atomic-design-pattern/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/atomic-design-pattern/</guid><description>Atomic design pattern Atomic design is a methodology for crafting design systems with five key fundamental building blocks, which, when combined, promote consistency, modularity, and scalability.</description></item><item><title>Focus trap</title><link>https://memo.d.foundation/playground/frontend/focus-trap/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/focus-trap/</guid><description>Focus trap is a web technique to improve accessibility by forcing keyboard focus inside a DOM element, to prevent the user navigating outside that element.</description></item><item><title>HTML inert</title><link>https://memo.d.foundation/playground/frontend/html-inert/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/html-inert/</guid><description>inert is a boolean HTML property that makes the browser ignore the user input events for an element, including focus events and events from assistive technologies.</description></item><item><title>useEffect double calls in React 18</title><link>https://memo.d.foundation/playground/frontend/useeffect-double-calls-in-react-18/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/useeffect-double-calls-in-react-18/</guid><description>In the React 18 version, the useEffect hook has been updated to called twice compare to only one in the older version in StrictMode.</description></item><item><title>How Tokens Work on Solana</title><link>https://memo.d.foundation/playground/blockchain/how-tokens-work-on-solana/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/how-tokens-work-on-solana/</guid><description>How tokens work on solana - explain for EVM developers Let&amp;rsquo;s say you want to create a new type of fungible token, mint some to yourself, and then transfer some to your friend.</description></item><item><title>React 18</title><link>https://memo.d.foundation/playground/frontend/react-18/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react-18/</guid><description>React 18 was released in March 2022. This release focuses on performance improvements and updating the rendering engine.
React 18 Feature Quick Guide Now let&amp;rsquo;s look at each of these updates in more detail.</description></item><item><title>Remix Versus Nextjs</title><link>https://memo.d.foundation/playground/frontend/remix-versus-nextjs/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/remix-versus-nextjs/</guid><description>A brief comparison between Remix and Next.js frameworks
Introduction of Remix Remix describes itself as:
Remix is an edge native, full-stack JavaScript framework for building modern, fast, and resilient user experiences.</description></item><item><title>Zaplib post-mortem</title><link>https://memo.d.foundation/playground/frontend/zaplib-post-mortem/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/zaplib-post-mortem/</guid><description>Zaplib is a frontend framework that helps to port your JS/TS app to Rust/Wasm. This idea was found after the founder&amp;rsquo;s painful work at https://webviz.</description></item><item><title>Parallelism in JavaScript</title><link>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</guid><description>Most of applications nowadays are created with the aim to be on the web. JavaScript has become a mainstream programming language to support the direction.</description></item><item><title>Liquidity pool</title><link>https://memo.d.foundation/playground/blockchain/liquidity-pool/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/blockchain/liquidity-pool/</guid><description>1. What is a Liquidity Pool? Basically, a liquidity pool is a pool of tokens that are locked in a smart contract.</description></item><item><title>MPA, SPA and Partial Hydration</title><link>https://memo.d.foundation/playground/frontend/mpa-spa-and-partial-hydration/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mpa-spa-and-partial-hydration/</guid><description>If you&amp;rsquo;ve been on Twitter lately, you might&amp;rsquo;ve seen the term &amp;ldquo;Partial Hydration&amp;rdquo; as well as MPA going along and hyped by web advocates, wondering what about them?</description></item><item><title>Micro Frontends Microservices For Frontend Development</title><link>https://memo.d.foundation/playground/frontend/micro-frontends-microservices-for-frontend-development/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/micro-frontends-microservices-for-frontend-development/</guid><description>What is Micro-frontend ? An architectural style where independently deliverable frontend applications are composed into a greater whole
Benefits Smaller, more cohesive, and maintainable codebases More scalable organizations with decoupled, autonomous teams The ability to upgrade, update, or even rewrite parts of the frontend in a more incremental fashion than was previously possible Easier maintenance: Keeping frontend repositories small and specialized allows them to be more easily understood, and this simplifies long-term maintenance and testing.</description></item><item><title>Go In Software Engineering</title><link>https://memo.d.foundation/playground/go/go-in-software-engineering/</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-in-software-engineering/</guid><description>Go is a type-safe, cloud-native language designed for simplicity with first-class support for concurrency.
The software community has been hungering for a small, simple, easy-to-learn and pragmatic programming language.</description></item><item><title>Go Concurrency</title><link>https://memo.d.foundation/playground/go/go-concurrency/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/go-concurrency/</guid><description>Golang concurrency When we talk about Golang, its most basic and popular characteristic is concurrency-support. Unlike other languages what is quite complex to build an concurrency system, Go concurrency primitives via Goroutines and channels make concurrent programming easy.</description></item><item><title>Using Correct Html Element To Increase Website Accessibility</title><link>https://memo.d.foundation/playground/frontend/using-correct-html-element-to-increase-website-accessibility/</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/using-correct-html-element-to-increase-website-accessibility/</guid><description>Website Accessibility Website Accessibility is a term for approaching a website of which the potential user are people with disabilities (eye disorders or illiterate).</description></item><item><title>Remove Unused CSS Styles From Bootstrap Using Purgecss</title><link>https://memo.d.foundation/playground/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss/</guid><description>Introduction Reducing assets size is one of the most practical ways to speed up your web application. I have a simple use case, lets imagine your HTML file looks like this</description></item><item><title>Slice And Array In Golang</title><link>https://memo.d.foundation/playground/go/slice-and-array-in-golang/</link><pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/slice-and-array-in-golang/</guid><description>Array TL;DR: The differences between array in Go and C:
Arrays are values. Assigning one array to another copies all the elements.</description></item><item><title>Use Go Selenium To Crawl Data</title><link>https://memo.d.foundation/playground/go/use-go-selenium-to-crawl-data/</link><pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/use-go-selenium-to-crawl-data/</guid><description>Crawl data Crawl is a widespread issue occurring in making software. News, discount news, film ticket, etc are some examples of crawl.</description></item><item><title>Connecting Vim With Golang</title><link>https://memo.d.foundation/playground/go/connecting-vim-with-golang/</link><pubDate>Fri, 16 Oct 2015 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/go/connecting-vim-with-golang/</guid><description>An introduction to Vim and how to use Vim with Golang Vim is a powerful text-editor, usually used server environments with no graphical interfaces.</description></item></channel></rss>