{"index":{"documentCount":1051,"nextId":1051,"documentIds":{"0":"0","1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12","13":"13","14":"14","15":"15","16":"16","17":"17","18":"18","19":"19","20":"20","21":"21","22":"22","23":"23","24":"24","25":"25","26":"26","27":"27","28":"28","29":"29","30":"30","31":"31","32":"32","33":"33","34":"34","35":"35","36":"36","37":"37","38":"38","39":"39","40":"40","41":"41","42":"42","43":"43","44":"44","45":"45","46":"46","47":"47","48":"48","49":"49","50":"50","51":"51","52":"52","53":"53","54":"61","55":"62","56":"63","57":"64","58":"66","59":"67","60":"68","61":"69","62":"70","63":"71","64":"72","65":"73","66":"74","67":"76","68":"77","69":"78","70":"79","71":"80","72":"81","73":"82","74":"83","75":"84","76":"85","77":"86","78":"87","79":"88","80":"89","81":"90","82":"91","83":"92","84":"93","85":"94","86":"95","87":"96","88":"97","89":"98","90":"100","91":"101","92":"102","93":"103","94":"104","95":"106","96":"107","97":"108","98":"109","99":"110","100":"111","101":"112","102":"113","103":"114","104":"115","105":"116","106":"117","107":"118","108":"119","109":"120","110":"121","111":"122","112":"123","113":"124","114":"125","115":"126","116":"127","117":"128","118":"129","119":"130","120":"131","121":"132","122":"133","123":"134","124":"135","125":"136","126":"137","127":"138","128":"139","129":"140","130":"141","131":"142","132":"143","133":"144","134":"145","135":"146","136":"147","137":"148","138":"149","139":"150","140":"151","141":"152","142":"153","143":"154","144":"155","145":"156","146":"157","147":"158","148":"159","149":"160","150":"161","151":"162","152":"163","153":"164","154":"165","155":"166","156":"167","157":"168","158":"169","159":"170","160":"171","161":"172","162":"173","163":"174","164":"175","165":"176","166":"177","167":"178","168":"179","169":"180","170":"181","171":"182","172":"183","173":"184","174":"185","175":"186","176":"187","177":"188","178":"189","179":"190","180":"191","181":"192","182":"193","183":"195","184":"196","185":"197","186":"198","187":"199","188":"200","189":"201","190":"202","191":"203","192":"204","193":"205","194":"206","195":"207","196":"208","197":"209","198":"211","199":"213","200":"214","201":"215","202":"216","203":"217","204":"218","205":"219","206":"220","207":"221","208":"222","209":"223","210":"224","211":"225","212":"226","213":"227","214":"228","215":"229","216":"230","217":"231","218":"232","219":"233","220":"234","221":"235","222":"236","223":"237","224":"238","225":"239","226":"240","227":"241","228":"242","229":"243","230":"244","231":"245","232":"246","233":"247","234":"248","235":"249","236":"250","237":"251","238":"252","239":"253","240":"254","241":"255","242":"256","243":"257","244":"258","245":"259","246":"260","247":"261","248":"262","249":"263","250":"264","251":"265","252":"266","253":"267","254":"268","255":"269","256":"270","257":"271","258":"272","259":"273","260":"274","261":"275","262":"276","263":"277","264":"278","265":"279","266":"280","267":"281","268":"282","269":"283","270":"284","271":"285","272":"286","273":"287","274":"288","275":"289","276":"290","277":"291","278":"292","279":"293","280":"294","281":"295","282":"297","283":"298","284":"299","285":"300","286":"301","287":"303","288":"304","289":"305","290":"306","291":"307","292":"308","293":"309","294":"310","295":"311","296":"312","297":"313","298":"314","299":"315","300":"316","301":"317","302":"318","303":"319","304":"320","305":"321","306":"322","307":"323","308":"324","309":"325","310":"326","311":"327","312":"328","313":"331","314":"332","315":"333","316":"334","317":"335","318":"336","319":"337","320":"338","321":"339","322":"340","323":"443","324":"444","325":"445","326":"446","327":"447","328":"448","329":"449","330":"450","331":"451","332":"452","333":"453","334":"454","335":"455","336":"456","337":"457","338":"458","339":"459","340":"460","341":"461","342":"462","343":"463","344":"464","345":"466","346":"468","347":"471","348":"472","349":"473","350":"474","351":"476","352":"477","353":"478","354":"480","355":"481","356":"482","357":"483","358":"484","359":"485","360":"487","361":"489","362":"493","363":"497","364":"498","365":"499","366":"500","367":"501","368":"502","369":"503","370":"504","371":"505","372":"506","373":"507","374":"508","375":"509","376":"510","377":"511","378":"512","379":"513","380":"514","381":"515","382":"516","383":"517","384":"518","385":"519","386":"520","387":"521","388":"522","389":"523","390":"524","391":"525","392":"526","393":"527","394":"528","395":"529","396":"530","397":"531","398":"532","399":"533","400":"534","401":"535","402":"536","403":"537","404":"538","405":"539","406":"540","407":"541","408":"542","409":"543","410":"544","411":"545","412":"546","413":"547","414":"548","415":"549","416":"550","417":"551","418":"552","419":"553","420":"554","421":"555","422":"556","423":"557","424":"558","425":"559","426":"560","427":"561","428":"562","429":"563","430":"564","431":"565","432":"566","433":"567","434":"568","435":"569","436":"570","437":"571","438":"572","439":"573","440":"574","441":"575","442":"576","443":"577","444":"578","445":"579","446":"580","447":"581","448":"582","449":"583","450":"584","451":"585","452":"586","453":"587","454":"588","455":"589","456":"590","457":"591","458":"592","459":"593","460":"594","461":"595","462":"596","463":"597","464":"598","465":"599","466":"600","467":"601","468":"602","469":"603","470":"604","471":"605","472":"606","473":"607","474":"608","475":"609","476":"610","477":"611","478":"612","479":"613","480":"614","481":"615","482":"616","483":"617","484":"618","485":"619","486":"620","487":"621","488":"622","489":"623","490":"624","491":"625","492":"626","493":"627","494":"628","495":"629","496":"630","497":"631","498":"632","499":"633","500":"634","501":"635","502":"636","503":"637","504":"638","505":"639","506":"640","507":"641","508":"642","509":"643","510":"644","511":"645","512":"646","513":"647","514":"648","515":"649","516":"650","517":"651","518":"652","519":"653","520":"654","521":"655","522":"656","523":"657","524":"658","525":"659","526":"660","527":"661","528":"662","529":"663","530":"664","531":"665","532":"666","533":"667","534":"668","535":"669","536":"670","537":"671","538":"672","539":"673","540":"674","541":"675","542":"676","543":"677","544":"678","545":"679","546":"680","547":"681","548":"682","549":"683","550":"684","551":"685","552":"686","553":"687","554":"688","555":"689","556":"690","557":"691","558":"692","559":"693","560":"694","561":"695","562":"696","563":"697","564":"698","565":"699","566":"700","567":"701","568":"702","569":"703","570":"704","571":"705","572":"706","573":"707","574":"708","575":"709","576":"710","577":"711","578":"712","579":"713","580":"714","581":"715","582":"716","583":"717","584":"718","585":"719","586":"720","587":"721","588":"722","589":"723","590":"724","591":"725","592":"726","593":"727","594":"728","595":"729","596":"730","597":"731","598":"732","599":"733","600":"734","601":"735","602":"736","603":"737","604":"738","605":"739","606":"740","607":"741","608":"742","609":"743","610":"744","611":"745","612":"746","613":"747","614":"748","615":"749","616":"750","617":"751","618":"752","619":"753","620":"754","621":"755","622":"756","623":"757","624":"758","625":"759","626":"760","627":"761","628":"762","629":"763","630":"764","631":"765","632":"766","633":"767","634":"768","635":"769","636":"770","637":"771","638":"772","639":"773","640":"774","641":"775","642":"776","643":"777","644":"778","645":"779","646":"780","647":"781","648":"782","649":"783","650":"784","651":"785","652":"786","653":"787","654":"788","655":"789","656":"790","657":"791","658":"792","659":"793","660":"794","661":"795","662":"796","663":"797","664":"798","665":"799","666":"800","667":"801","668":"802","669":"803","670":"804","671":"805","672":"806","673":"807","674":"808","675":"809","676":"810","677":"811","678":"812","679":"816","680":"817","681":"818","682":"819","683":"820","684":"821","685":"822","686":"823","687":"824","688":"825","689":"826","690":"827","691":"828","692":"829","693":"830","694":"831","695":"832","696":"833","697":"834","698":"835","699":"836","700":"837","701":"838","702":"839","703":"840","704":"841","705":"842","706":"843","707":"844","708":"845","709":"846","710":"847","711":"848","712":"849","713":"850","714":"851","715":"852","716":"853","717":"854","718":"855","719":"856","720":"857","721":"858","722":"859","723":"860","724":"861","725":"862","726":"863","727":"864","728":"865","729":"866","730":"867","731":"868","732":"869","733":"870","734":"871","735":"872","736":"873","737":"874","738":"875","739":"876","740":"877","741":"878","742":"879","743":"880","744":"881","745":"882","746":"883","747":"884","748":"885","749":"886","750":"887","751":"888","752":"889","753":"890","754":"891","755":"892","756":"893","757":"894","758":"895","759":"896","760":"897","761":"898","762":"899","763":"900","764":"901","765":"902","766":"903","767":"904","768":"905","769":"906","770":"907","771":"908","772":"909","773":"910","774":"911","775":"912","776":"913","777":"914","778":"915","779":"916","780":"917","781":"918","782":"919","783":"920","784":"921","785":"922","786":"923","787":"924","788":"925","789":"926","790":"927","791":"928","792":"929","793":"930","794":"931","795":"932","796":"933","797":"934","798":"935","799":"936","800":"937","801":"938","802":"939","803":"940","804":"941","805":"942","806":"943","807":"944","808":"945","809":"946","810":"947","811":"948","812":"949","813":"950","814":"951","815":"952","816":"953","817":"954","818":"955","819":"956","820":"957","821":"958","822":"959","823":"960","824":"961","825":"962","826":"963","827":"964","828":"965","829":"966","830":"967","831":"968","832":"969","833":"970","834":"971","835":"972","836":"973","837":"974","838":"975","839":"976","840":"977","841":"978","842":"979","843":"980","844":"981","845":"982","846":"983","847":"984","848":"985","849":"986","850":"987","851":"988","852":"989","853":"990","854":"991","855":"992","856":"993","857":"994","858":"995","859":"996","860":"997","861":"998","862":"999","863":"1000","864":"1001","865":"1002","866":"1003","867":"1010","868":"1011","869":"1012","870":"1013","871":"1014","872":"1015","873":"1016","874":"1017","875":"1018","876":"1019","877":"1020","878":"1021","879":"1022","880":"1023","881":"1024","882":"1025","883":"1027","884":"1028","885":"1029","886":"1030","887":"1031","888":"1032","889":"1033","890":"1034","891":"1035","892":"1036","893":"1037","894":"1038","895":"1039","896":"1040","897":"1041","898":"1042","899":"1043","900":"1044","901":"1045","902":"1046","903":"1047","904":"1048","905":"1049","906":"1050","907":"1051","908":"1052","909":"1053","910":"1054","911":"1055","912":"1056","913":"1057","914":"1058","915":"1059","916":"1060","917":"1061","918":"1062","919":"1064","920":"1065","921":"1068","922":"1069","923":"1070","924":"1071","925":"1072","926":"1073","927":"1074","928":"1075","929":"1076","930":"1077","931":"1078","932":"1079","933":"1080","934":"1081","935":"1082","936":"1083","937":"1084","938":"1085","939":"1086","940":"1087","941":"1088","942":"1089","943":"1090","944":"1091","945":"1092","946":"1093","947":"1094","948":"1095","949":"1096","950":"1097","951":"1098","952":"1099","953":"1100","954":"1101","955":"1102","956":"1103","957":"1104","958":"1105","959":"1106","960":"1107","961":"1108","962":"1109","963":"1110","964":"1111","965":"1112","966":"1113","967":"1114","968":"1115","969":"1116","970":"1117","971":"1118","972":"1119","973":"1120","974":"1121","975":"1122","976":"1123","977":"1124","978":"1125","979":"1126","980":"1127","981":"1128","982":"1129","983":"1130","984":"1131","985":"1132","986":"1133","987":"1134","988":"1135","989":"1136","990":"1137","991":"1138","992":"1139","993":"1140","994":"1141","995":"1144","996":"1145","997":"1146","998":"1147","999":"1148","1000":"1149","1001":"1150","1002":"1151","1003":"1152","1004":"1153","1005":"1154","1006":"1155","1007":"1156","1008":"1157","1009":"1158","1010":"1159","1011":"1160","1012":"1161","1013":"1162","1014":"1163","1015":"1165","1016":"1166","1017":"1167","1018":"1168","1019":"1169","1020":"1170","1021":"1171","1022":"1172","1023":"1173","1024":"1174","1025":"1175","1026":"1176","1027":"1177","1028":"1178","1029":"1179","1030":"1180","1031":"1181","1032":"1182","1033":"1183","1034":"1184","1035":"1185","1036":"1186","1037":"1187","1038":"1188","1039":"1189","1040":"1190","1041":"1191","1042":"1192","1043":"1193","1044":"1194","1045":"1195","1046":"1196","1047":"1197","1048":"1198","1049":"1199","1050":"1200"},"fieldIds":{"title":0,"description":1,"tags":2,"authors":3,"category":4},"fieldLength":{"0":[5,18,5,1,3],"1":[5,25,3,1,3],"2":[4,20,2,4,3],"3":[5,16,3,1,3],"4":[1,26,4,1,3],"5":[4,7,2,1,3],"6":[5,11,3,1,3],"7":[4,28,3,3,3],"8":[2,6,3,2,4],"9":[2,8,3,4,4],"10":[2,10,3,3,4],"11":[2,9,3,3,4],"12":[2,8,3,4,4],"13":[4,7,3,2,4],"14":[1,13,3,2,4],"15":[3,28,3,3,4],"16":[1,9,4,2,4],"17":[2,10,3,2,4],"18":[1,10,3,2,4],"19":[2,9,3,2,4],"20":[1,9,3,2,4],"21":[3,11,3,3,4],"22":[1,10,3,3,4],"23":[2,7,3,1,3],"24":[3,25,4,1,3],"25":[2,10,2,1,3],"26":[3,6,3,1,3],"27":[3,23,2,1,3],"28":[4,40,2,2,4],"29":[4,31,2,2,4],"30":[3,38,3,1,1],"31":[2,41,2,1,1],"32":[4,12,2,2,1],"33":[3,24,3,1,1],"34":[1,29,3,1,1],"35":[3,14,2,1,1],"36":[3,46,2,1,1],"37":[4,13,2,1,1],"38":[2,12,2,1,1],"39":[5,28,3,1,3],"40":[1,38,2,1,3],"41":[3,27,3,1,3],"42":[2,7,2,1,3],"43":[2,16,2,1,1],"44":[2,39,3,2,1],"45":[4,46,2,1,1],"46":[1,23,3,1,3],"47":[3,19,3,2,3],"48":[2,22,2,2,3],"49":[3,31,2,3,3],"50":[2,11,2,1,1],"51":[1,7,1,3,1],"52":[8,28,3,1,4],"53":[6,35,4,2,4],"54":[8,20,7,1,3],"55":[7,22,6,1,3],"56":[8,22,7,1,3],"57":[1,17,2,1,1],"58":[3,29,2,1,1],"59":[2,6,3,1,1],"60":[1,7,2,1,1],"61":[5,28,1,1,3],"62":[6,29,1,1,3],"63":[3,37,4,1,1],"64":[3,13,3,2,1],"65":[1,14,1,2,1],"66":[2,40,4,2,3],"67":[2,40,3,1,3],"68":[3,6,4,1,3],"69":[4,19,3,2,5],"70":[4,16,4,1,5],"71":[3,13,3,2,5],"72":[4,24,4,2,5],"73":[3,19,3,2,5],"74":[6,16,4,2,5],"75":[2,11,4,2,5],"76":[3,19,3,2,5],"77":[2,15,4,2,5],"78":[4,13,3,2,5],"79":[1,16,4,2,5],"80":[6,10,3,2,5],"81":[3,12,3,2,5],"82":[2,14,3,2,5],"83":[2,10,4,2,5],"84":[3,19,3,2,5],"85":[2,19,3,2,5],"86":[2,12,3,2,5],"87":[2,19,3,2,5],"88":[3,6,4,1,3],"89":[2,47,4,2,3],"90":[3,19,3,3,3],"91":[2,26,3,3,3],"92":[6,21,3,3,3],"93":[8,33,3,1,3],"94":[2,15,3,3,3],"95":[6,31,1,3,3],"96":[3,34,3,3,3],"97":[4,22,3,2,3],"98":[4,38,3,2,3],"99":[6,11,3,3,3],"100":[6,38,3,3,3],"101":[7,20,3,3,3],"102":[3,24,3,3,3],"103":[18,52,4,2,3],"104":[22,51,4,2,3],"105":[15,38,4,2,3],"106":[15,68,4,2,3],"107":[12,29,4,1,3],"108":[17,43,4,2,3],"109":[6,33,4,2,3],"110":[15,34,4,2,3],"111":[6,30,4,2,3],"112":[10,37,4,2,3],"113":[16,51,4,2,3],"114":[13,41,4,2,3],"115":[10,37,4,2,3],"116":[25,49,4,2,3],"117":[14,35,4,1,3],"118":[8,35,2,1,3],"119":[9,38,2,3,3],"120":[8,36,2,2,3],"121":[3,28,2,2,4],"122":[2,29,2,2,4],"123":[4,21,2,2,4],"124":[2,40,2,3,3],"125":[7,27,5,2,4],"126":[3,34,2,1,3],"127":[3,34,2,1,3],"128":[1,34,2,1,3],"129":[2,33,2,1,3],"130":[3,34,2,1,3],"131":[1,28,2,1,3],"132":[4,34,2,1,3],"133":[2,34,2,1,3],"134":[2,34,1,1,3],"135":[5,30,2,2,3],"136":[3,39,2,1,3],"137":[4,33,2,1,3],"138":[2,41,1,2,3],"139":[3,24,2,1,3],"140":[3,35,3,1,3],"141":[1,32,2,1,3],"142":[2,34,1,1,3],"143":[2,33,2,1,3],"144":[2,24,1,2,3],"145":[1,34,2,1,3],"146":[4,34,2,1,3],"147":[3,34,2,1,3],"148":[4,34,2,1,3],"149":[3,34,2,1,3],"150":[4,21,3,1,3],"151":[4,26,3,1,3],"152":[2,23,3,1,3],"153":[7,16,4,2,3],"154":[2,24,3,1,3],"155":[2,30,2,2,1],"156":[10,29,3,1,4],"157":[6,32,4,1,4],"158":[8,36,3,3,4],"159":[7,26,4,2,4],"160":[10,37,3,3,4],"161":[7,33,4,1,4],"162":[7,30,5,2,4],"163":[10,40,6,2,4],"164":[11,38,7,1,4],"165":[6,34,4,3,4],"166":[7,26,4,2,4],"167":[7,24,4,3,4],"168":[6,25,4,3,4],"169":[8,24,3,2,4],"170":[11,35,2,1,4],"171":[9,35,3,3,4],"172":[10,33,3,2,4],"173":[11,31,5,3,4],"174":[10,34,3,3,4],"175":[8,28,5,1,4],"176":[6,26,3,2,4],"177":[7,22,4,2,4],"178":[10,44,4,2,4],"179":[8,36,4,2,4],"180":[6,30,4,1,4],"181":[4,33,3,2,1],"182":[4,49,3,2,1],"183":[2,14,3,3,3],"184":[3,29,2,1,3],"185":[8,37,3,2,3],"186":[1,13,3,2,4],"187":[7,9,5,1,3],"188":[4,41,4,1,3],"189":[2,14,2,1,3],"190":[5,38,3,1,3],"191":[4,20,3,2,5],"192":[6,27,4,1,3],"193":[5,8,2,1,3],"194":[5,29,3,1,3],"195":[3,6,4,1,3],"196":[3,6,4,1,3],"197":[5,16,2,1,3],"198":[4,27,2,1,1],"199":[1,16,2,1,3],"200":[4,53,2,1,1],"201":[3,43,4,1,4],"202":[7,45,3,1,4],"203":[13,57,3,1,4],"204":[4,43,3,1,5],"205":[7,33,3,1,5],"206":[4,32,3,1,5],"207":[4,72,3,1,5],"208":[8,13,3,1,4],"209":[2,19,3,1,4],"210":[11,14,2,1,4],"211":[5,30,3,1,4],"212":[2,46,2,1,4],"213":[6,37,2,1,4],"214":[4,34,2,1,4],"215":[10,19,7,1,4],"216":[6,43,3,1,7],"217":[3,29,3,2,7],"218":[7,37,3,1,7],"219":[4,45,3,2,7],"220":[7,34,3,1,7],"221":[16,35,4,1,5],"222":[9,23,4,1,5],"223":[10,74,4,1,5],"224":[9,38,4,1,5],"225":[13,14,3,1,5],"226":[7,23,4,1,5],"227":[8,19,4,1,5],"228":[5,13,4,1,5],"229":[13,23,4,1,5],"230":[8,21,4,1,5],"231":[14,17,3,1,5],"232":[9,31,4,1,5],"233":[10,27,5,1,5],"234":[6,13,5,2,5],"235":[3,37,2,2,1],"236":[6,24,3,2,4],"237":[9,22,3,1,4],"238":[6,39,4,1,4],"239":[12,15,3,1,4],"240":[7,19,3,1,4],"241":[9,38,7,1,4],"242":[5,27,3,1,4],"243":[8,23,2,1,4],"244":[7,35,2,2,4],"245":[10,25,3,1,4],"246":[6,44,3,1,4],"247":[7,13,3,1,4],"248":[5,47,2,1,4],"249":[8,58,4,1,4],"250":[7,22,2,1,4],"251":[9,37,3,1,4],"252":[9,29,2,2,4],"253":[10,11,4,1,4],"254":[8,24,3,1,4],"255":[19,15,4,1,5],"256":[11,7,4,1,5],"257":[13,9,4,1,5],"258":[15,20,4,1,5],"259":[12,16,4,1,5],"260":[13,15,4,1,5],"261":[17,13,4,1,5],"262":[16,12,4,1,5],"263":[11,8,4,1,5],"264":[4,53,2,2,3],"265":[4,34,4,2,3],"266":[4,23,2,3,3],"267":[5,36,3,1,3],"268":[4,18,2,2,3],"269":[4,62,3,2,5],"270":[4,62,7,2,5],"271":[4,29,6,2,5],"272":[4,43,5,2,5],"273":[4,39,5,2,5],"274":[4,52,6,2,5],"275":[4,49,5,2,5],"276":[4,27,5,2,5],"277":[4,45,5,2,5],"278":[4,62,9,2,5],"279":[4,27,2,3,3],"280":[4,33,2,2,3],"281":[2,35,3,2,3],"282":[12,55,5,1,5],"283":[12,44,5,1,5],"284":[12,70,5,1,5],"285":[14,54,5,2,5],"286":[12,57,5,1,5],"287":[11,39,5,1,5],"288":[9,53,5,1,5],"289":[3,31,2,3,3],"290":[5,23,3,1,3],"291":[4,51,4,2,3],"292":[4,34,3,2,3],"293":[4,27,2,3,3],"294":[5,11,3,1,3],"295":[1,19,1,3,1],"296":[3,33,1,2,1],"297":[3,33,1,1,1],"298":[2,3,2,1,3],"299":[3,22,2,2,1],"300":[3,29,1,1,1],"301":[1,8,1,1,1],"302":[4,20,3,1,1],"303":[2,12,1,1,1],"304":[4,22,3,1,3],"305":[3,32,3,1,3],"306":[1,27,1,1,1],"307":[3,27,3,1,3],"308":[2,22,2,2,3],"309":[2,24,3,1,3],"310":[2,9,2,1,1],"311":[3,41,3,1,1],"312":[3,5,2,1,1],"313":[1,22,2,2,1],"314":[3,32,2,3,1],"315":[3,17,3,1,1],"316":[3,36,2,1,1],"317":[2,7,3,1,1],"318":[5,26,2,1,1],"319":[7,7,4,2,4],"320":[5,15,4,2,1],"321":[4,11,3,2,1],"322":[3,12,1,2,1],"323":[4,25,2,1,1],"324":[3,25,3,1,1],"325":[7,32,2,3,1],"326":[3,21,2,2,1],"327":[6,30,2,1,1],"328":[6,31,2,1,1],"329":[1,7,2,1,1],"330":[5,35,2,1,1],"331":[2,30,2,1,1],"332":[3,36,2,1,1],"333":[3,27,2,1,1],"334":[4,34,2,1,1],"335":[6,22,2,1,1],"336":[5,32,2,2,1],"337":[4,51,3,2,1],"338":[2,37,2,1,1],"339":[2,26,1,1,1],"340":[6,24,2,1,1],"341":[4,32,2,1,1],"342":[3,42,1,1,1],"343":[4,47,2,1,1],"344":[3,32,2,1,1],"345":[9,30,3,2,4],"346":[7,53,2,2,4],"347":[8,27,3,1,4],"348":[5,26,3,1,4],"349":[7,31,3,2,4],"350":[11,16,3,2,4],"351":[5,47,3,1,4],"352":[4,20,3,2,4],"353":[4,9,4,1,4],"354":[8,21,3,1,4],"355":[3,45,3,1,4],"356":[6,42,3,3,4],"357":[3,9,2,1,4],"358":[2,36,8,1,4],"359":[3,10,2,1,4],"360":[5,46,2,1,4],"361":[4,21,3,2,4],"362":[3,29,2,1,4],"363":[3,12,4,1,4],"364":[6,21,4,1,4],"365":[7,40,7,1,4],"366":[11,16,3,2,4],"367":[7,17,3,3,4],"368":[8,40,5,3,4],"369":[3,14,3,2,4],"370":[7,21,3,1,4],"371":[2,25,2,1,4],"372":[3,26,1,1,4],"373":[4,23,1,1,4],"374":[3,25,1,1,4],"375":[2,28,1,1,4],"376":[2,27,1,1,4],"377":[4,24,1,1,4],"378":[2,25,1,1,4],"379":[9,26,2,1,4],"380":[4,28,1,1,4],"381":[5,30,3,2,4],"382":[3,27,1,1,4],"383":[4,25,1,1,4],"384":[7,26,2,1,4],"385":[6,23,2,1,4],"386":[5,27,2,1,4],"387":[4,29,1,1,4],"388":[3,26,1,1,4],"389":[2,26,1,1,4],"390":[5,23,2,1,4],"391":[3,23,1,1,4],"392":[2,26,1,1,4],"393":[9,23,2,1,4],"394":[3,24,2,1,4],"395":[9,26,2,1,4],"396":[4,28,1,1,4],"397":[8,25,2,1,4],"398":[5,25,2,1,4],"399":[2,21,1,1,4],"400":[6,28,3,1,4],"401":[4,27,1,1,4],"402":[3,21,1,1,4],"403":[2,29,1,1,4],"404":[6,23,3,2,4],"405":[3,40,1,1,4],"406":[5,77,3,1,4],"407":[5,24,4,1,4],"408":[9,24,4,1,4],"409":[6,33,4,1,4],"410":[5,33,4,1,4],"411":[3,61,3,1,4],"412":[7,40,3,1,4],"413":[1,29,4,1,4],"414":[5,30,4,1,4],"415":[6,69,2,1,4],"416":[9,43,4,1,4],"417":[2,30,2,1,4],"418":[8,29,4,1,4],"419":[5,13,3,2,4],"420":[6,51,3,1,4],"421":[4,61,4,1,4],"422":[5,38,4,2,4],"423":[6,64,4,1,4],"424":[6,41,4,1,4],"425":[5,13,3,1,4],"426":[5,34,2,1,4],"427":[1,30,4,1,4],"428":[3,60,4,1,4],"429":[9,28,4,1,4],"430":[1,36,4,1,4],"431":[4,52,3,1,4],"432":[6,33,4,1,4],"433":[8,36,4,1,4],"434":[5,28,4,1,4],"435":[11,25,2,1,4],"436":[4,32,2,1,4],"437":[5,34,3,1,4],"438":[5,28,3,1,4],"439":[6,56,2,1,4],"440":[6,44,4,1,4],"441":[4,43,4,1,4],"442":[8,62,2,1,4],"443":[4,29,4,1,4],"444":[9,24,4,1,4],"445":[5,54,2,1,4],"446":[5,30,2,1,4],"447":[2,40,4,3,4],"448":[5,13,3,1,4],"449":[7,43,2,1,4],"450":[5,33,5,2,4],"451":[5,21,3,1,4],"452":[3,26,5,1,4],"453":[1,31,4,2,4],"454":[6,28,4,2,4],"455":[2,18,5,1,4],"456":[7,18,6,1,4],"457":[6,23,1,1,4],"458":[2,23,3,1,4],"459":[6,26,1,1,4],"460":[7,28,3,2,4],"461":[3,13,3,1,4],"462":[11,28,4,1,4],"463":[2,31,4,2,4],"464":[7,25,2,1,4],"465":[6,18,2,1,4],"466":[8,27,7,1,4],"467":[5,16,3,1,4],"468":[3,20,3,1,4],"469":[5,30,1,1,4],"470":[9,54,5,1,4],"471":[3,20,4,1,4],"472":[3,27,4,1,4],"473":[2,24,4,1,4],"474":[3,19,5,2,4],"475":[13,26,3,1,4],"476":[7,28,3,1,4],"477":[10,44,4,1,4],"478":[8,27,1,1,4],"479":[6,20,4,1,4],"480":[3,80,5,1,4],"481":[9,25,4,1,4],"482":[3,9,3,1,4],"483":[11,24,3,1,4],"484":[7,19,2,1,4],"485":[3,29,4,2,4],"486":[2,18,4,1,4],"487":[6,26,5,1,4],"488":[6,12,5,1,4],"489":[4,40,4,1,4],"490":[3,21,6,1,4],"491":[6,32,5,1,4],"492":[4,39,3,1,5],"493":[4,35,3,1,5],"494":[4,40,3,1,5],"495":[4,62,3,1,5],"496":[7,40,3,1,5],"497":[9,60,9,1,4],"498":[3,19,4,1,4],"499":[3,23,3,3,4],"500":[3,15,4,1,4],"501":[8,37,3,1,4],"502":[2,40,3,2,4],"503":[5,15,1,1,5],"504":[5,20,4,1,5],"505":[4,15,2,1,5],"506":[4,19,1,1,5],"507":[4,16,2,1,5],"508":[5,17,1,1,5],"509":[4,9,2,1,5],"510":[3,15,4,1,4],"511":[6,52,3,1,4],"512":[2,31,3,1,4],"513":[3,28,5,1,4],"514":[1,21,5,1,4],"515":[3,71,2,1,5],"516":[8,14,2,1,4],"517":[2,14,2,1,4],"518":[1,45,3,1,4],"519":[4,6,3,1,4],"520":[3,26,1,1,4],"521":[9,27,3,1,4],"522":[4,7,2,1,4],"523":[3,17,2,1,4],"524":[6,30,4,1,4],"525":[3,23,2,1,4],"526":[4,32,2,1,4],"527":[9,39,4,1,4],"528":[9,30,3,1,4],"529":[7,22,3,1,7],"530":[3,38,3,1,4],"531":[3,9,2,1,4],"532":[16,12,3,1,5],"533":[7,7,3,1,5],"534":[13,10,3,1,5],"535":[7,8,3,1,5],"536":[13,14,3,1,5],"537":[5,9,3,1,5],"538":[7,15,3,1,5],"539":[6,6,3,1,5],"540":[6,18,4,1,5],"541":[6,14,3,1,5],"542":[8,8,3,1,5],"543":[4,56,3,1,4],"544":[2,30,2,1,4],"545":[3,27,1,1,4],"546":[2,37,4,1,4],"547":[3,16,3,1,4],"548":[3,34,3,1,4],"549":[13,9,3,1,4],"550":[2,17,2,1,4],"551":[12,41,3,1,4],"552":[5,34,3,1,4],"553":[2,24,2,1,4],"554":[5,27,3,1,4],"555":[3,5,3,1,4],"556":[5,8,3,1,5],"557":[5,13,3,1,5],"558":[4,13,3,1,5],"559":[5,14,3,1,5],"560":[6,20,3,1,5],"561":[4,6,1,1,5],"562":[4,16,5,2,5],"563":[9,9,5,2,5],"564":[7,15,5,3,5],"565":[4,24,1,1,5],"566":[4,23,1,1,5],"567":[2,25,2,1,5],"568":[4,27,1,1,5],"569":[2,22,1,1,5],"570":[4,25,1,1,5],"571":[3,26,1,1,5],"572":[4,26,1,1,5],"573":[3,26,1,1,5],"574":[3,25,1,1,5],"575":[3,22,1,1,5],"576":[4,28,1,1,5],"577":[4,25,1,1,5],"578":[2,26,1,1,5],"579":[4,24,1,1,5],"580":[4,24,1,1,5],"581":[3,22,1,1,5],"582":[4,18,4,1,4],"583":[3,20,5,1,4],"584":[2,20,5,1,4],"585":[3,22,2,1,4],"586":[7,14,3,1,4],"587":[2,28,3,1,4],"588":[5,60,2,1,4],"589":[2,43,2,1,4],"590":[2,27,2,1,4],"591":[2,37,6,1,4],"592":[6,13,3,1,4],"593":[1,19,1,1,4],"594":[2,26,2,1,4],"595":[1,36,4,1,4],"596":[4,24,2,1,4],"597":[2,20,5,1,4],"598":[1,21,5,1,4],"599":[4,7,3,1,4],"600":[13,15,4,1,4],"601":[2,33,2,1,4],"602":[2,20,3,1,4],"603":[8,27,1,1,4],"604":[3,21,4,1,4],"605":[2,40,4,1,4],"606":[7,25,1,1,4],"607":[2,38,7,1,4],"608":[3,23,2,1,4],"609":[11,23,7,2,4],"610":[8,11,6,1,4],"611":[1,7,1,1,4],"612":[10,19,7,1,4],"613":[2,40,7,1,4],"614":[15,19,8,1,4],"615":[8,12,8,1,4],"616":[1,28,1,1,4],"617":[7,26,2,1,4],"618":[1,26,2,1,4],"619":[5,26,1,1,4],"620":[6,28,1,1,4],"621":[5,29,1,1,4],"622":[7,29,1,1,4],"623":[10,50,4,2,4],"624":[11,25,3,1,4],"625":[12,52,3,2,4],"626":[5,31,3,1,4],"627":[7,7,2,1,4],"628":[3,47,4,1,5],"629":[2,44,4,1,5],"630":[3,46,6,1,4],"631":[4,69,9,1,4],"632":[5,25,3,1,4],"633":[5,27,2,1,4],"634":[3,34,4,1,4],"635":[2,47,6,1,4],"636":[9,36,6,1,4],"637":[3,40,9,1,4],"638":[8,46,4,1,4],"639":[8,25,2,1,4],"640":[9,44,5,1,4],"641":[5,25,2,2,4],"642":[9,40,3,1,4],"643":[8,26,3,1,4],"644":[2,24,1,1,4],"645":[10,26,1,1,4],"646":[3,23,1,1,4],"647":[4,30,1,1,4],"648":[7,25,1,1,4],"649":[7,28,1,1,4],"650":[9,26,1,1,4],"651":[6,28,1,1,4],"652":[5,26,2,1,4],"653":[8,26,2,1,4],"654":[2,27,2,1,4],"655":[7,25,1,1,4],"656":[4,26,1,1,4],"657":[5,28,1,1,4],"658":[2,25,1,1,4],"659":[4,25,2,1,4],"660":[1,25,1,1,4],"661":[7,26,1,1,4],"662":[5,27,1,1,4],"663":[5,24,1,1,4],"664":[3,26,1,1,4],"665":[4,22,1,1,4],"666":[3,26,1,1,4],"667":[4,24,1,1,4],"668":[4,25,1,1,4],"669":[3,28,2,1,4],"670":[3,26,1,1,4],"671":[4,24,1,1,4],"672":[3,27,1,1,4],"673":[8,30,2,1,4],"674":[4,28,10,1,4],"675":[4,28,11,1,4],"676":[4,28,9,1,4],"677":[4,32,9,1,4],"678":[4,28,9,1,4],"679":[2,23,1,1,4],"680":[6,25,1,1,4],"681":[5,25,1,1,4],"682":[3,29,1,1,4],"683":[3,27,1,1,4],"684":[3,28,1,1,4],"685":[3,23,1,1,4],"686":[2,27,1,1,4],"687":[2,26,1,1,4],"688":[5,24,1,1,4],"689":[5,26,1,1,4],"690":[2,26,1,1,4],"691":[1,28,1,1,4],"692":[3,27,1,1,4],"693":[2,30,1,1,4],"694":[2,23,1,1,4],"695":[4,25,1,1,4],"696":[3,20,1,1,4],"697":[1,23,1,1,4],"698":[2,27,1,1,4],"699":[1,28,1,1,4],"700":[1,25,1,1,4],"701":[1,24,1,1,4],"702":[7,28,1,1,4],"703":[6,26,1,1,4],"704":[4,23,1,1,4],"705":[8,21,1,1,4],"706":[3,26,1,1,4],"707":[2,25,1,1,4],"708":[5,30,1,1,4],"709":[2,26,1,1,4],"710":[4,24,1,1,4],"711":[4,26,1,1,4],"712":[2,23,1,1,4],"713":[3,25,1,1,4],"714":[2,27,1,1,4],"715":[8,25,1,1,4],"716":[5,26,1,1,4],"717":[3,29,1,1,4],"718":[2,27,1,1,4],"719":[5,28,1,1,4],"720":[5,28,1,1,4],"721":[10,25,1,1,4],"722":[4,25,1,1,4],"723":[4,28,1,1,4],"724":[4,25,1,1,4],"725":[2,28,1,1,4],"726":[6,24,1,1,4],"727":[4,29,1,1,4],"728":[4,25,1,1,4],"729":[2,23,1,1,4],"730":[4,22,1,1,4],"731":[9,28,1,1,4],"732":[4,26,1,1,4],"733":[7,28,1,1,4],"734":[7,24,1,1,4],"735":[6,28,1,1,4],"736":[8,28,1,1,4],"737":[6,25,1,1,4],"738":[6,27,1,1,4],"739":[4,25,1,1,4],"740":[8,25,1,1,4],"741":[6,25,1,1,4],"742":[5,27,1,1,4],"743":[13,25,1,1,4],"744":[3,23,1,1,4],"745":[5,26,1,1,4],"746":[2,26,1,1,4],"747":[2,26,1,1,4],"748":[2,24,1,1,4],"749":[6,27,1,1,4],"750":[4,21,1,1,4],"751":[3,26,1,1,4],"752":[3,26,1,1,4],"753":[6,27,1,1,4],"754":[2,23,1,1,4],"755":[4,25,1,1,4],"756":[2,25,1,1,4],"757":[3,27,1,1,4],"758":[3,28,1,1,4],"759":[6,24,1,1,4],"760":[3,26,1,1,4],"761":[3,28,1,1,4],"762":[2,23,1,1,4],"763":[6,30,1,1,4],"764":[8,26,1,1,4],"765":[6,26,1,1,4],"766":[7,28,1,1,4],"767":[2,28,1,1,4],"768":[7,25,1,1,4],"769":[3,28,1,1,4],"770":[3,24,1,1,4],"771":[3,24,1,1,4],"772":[3,27,1,1,4],"773":[2,24,1,1,4],"774":[3,31,1,1,4],"775":[2,27,1,1,4],"776":[9,26,1,1,4],"777":[4,28,1,1,4],"778":[4,24,1,1,4],"779":[3,27,1,1,4],"780":[3,23,1,1,4],"781":[1,28,1,1,4],"782":[4,25,1,1,5],"783":[1,26,1,1,4],"784":[4,27,1,1,4],"785":[4,29,1,1,4],"786":[7,25,1,1,4],"787":[2,25,1,1,4],"788":[8,28,1,1,4],"789":[2,19,4,1,4],"790":[4,25,1,1,4],"791":[3,24,1,1,4],"792":[2,21,1,1,4],"793":[6,24,1,1,4],"794":[4,26,1,1,4],"795":[6,28,1,1,4],"796":[4,28,1,1,4],"797":[7,26,1,1,4],"798":[3,24,1,1,4],"799":[6,22,1,1,4],"800":[3,24,1,1,5],"801":[6,24,1,1,5],"802":[5,23,1,1,4],"803":[4,26,1,1,4],"804":[9,25,1,1,6],"805":[9,23,1,1,6],"806":[9,27,1,1,6],"807":[5,23,1,1,6],"808":[10,27,1,1,6],"809":[10,23,1,1,6],"810":[3,24,1,1,5],"811":[4,26,1,1,5],"812":[12,26,1,1,4],"813":[5,22,1,1,4],"814":[4,23,1,1,4],"815":[7,22,1,1,4],"816":[6,24,1,1,4],"817":[5,26,1,1,4],"818":[9,29,1,1,4],"819":[8,27,1,1,4],"820":[8,26,1,1,4],"821":[6,21,1,1,4],"822":[6,26,1,1,4],"823":[7,24,1,1,4],"824":[4,25,1,1,4],"825":[6,25,1,1,4],"826":[8,25,1,1,4],"827":[9,22,1,1,4],"828":[6,27,1,1,4],"829":[8,26,1,1,4],"830":[11,23,1,1,8],"831":[6,28,1,1,8],"832":[6,26,1,1,8],"833":[6,22,1,1,8],"834":[4,27,1,1,8],"835":[5,23,1,1,8],"836":[4,26,1,1,8],"837":[8,26,1,1,4],"838":[9,28,1,1,4],"839":[6,23,1,1,4],"840":[6,28,1,1,4],"841":[4,24,1,1,4],"842":[6,23,1,1,4],"843":[8,28,1,1,4],"844":[5,21,1,1,4],"845":[2,26,1,1,4],"846":[6,25,1,1,4],"847":[5,30,1,1,4],"848":[6,23,1,1,9],"849":[5,20,1,1,9],"850":[5,20,1,1,9],"851":[9,24,1,1,9],"852":[6,28,1,1,9],"853":[4,23,1,1,9],"854":[4,23,1,1,9],"855":[10,23,1,1,9],"856":[6,26,1,1,9],"857":[5,24,1,1,9],"858":[7,23,1,1,9],"859":[3,24,1,1,9],"860":[6,21,1,1,4],"861":[5,25,1,1,4],"862":[4,25,1,1,4],"863":[5,22,1,1,4],"864":[3,23,1,1,4],"865":[6,27,1,1,4],"866":[4,25,1,1,4],"867":[2,30,3,1,1],"868":[3,15,3,1,4],"869":[6,30,2,1,1],"870":[2,21,2,1,4],"871":[8,8,3,1,4],"872":[4,27,1,1,4],"873":[13,25,1,1,4],"874":[2,24,1,1,4],"875":[2,23,2,1,4],"876":[7,25,1,1,4],"877":[5,27,1,1,4],"878":[8,48,3,1,4],"879":[7,24,3,1,4],"880":[2,21,1,1,4],"881":[6,31,1,1,4],"882":[2,27,2,1,4],"883":[7,20,5,1,4],"884":[10,56,4,1,4],"885":[2,26,2,1,4],"886":[4,29,2,1,4],"887":[11,42,3,3,4],"888":[7,56,2,1,4],"889":[4,39,2,1,4],"890":[7,32,6,1,4],"891":[5,30,4,1,4],"892":[3,62,4,1,4],"893":[7,22,4,1,4],"894":[5,79,2,1,4],"895":[13,22,5,1,4],"896":[2,20,2,2,4],"897":[5,10,2,2,4],"898":[5,21,2,1,4],"899":[2,24,2,1,4],"900":[5,12,4,1,4],"901":[5,14,1,1,4],"902":[5,46,1,2,4],"903":[6,21,3,1,4],"904":[7,23,1,1,4],"905":[4,25,1,1,4],"906":[4,26,1,1,9],"907":[6,26,1,1,9],"908":[6,25,1,1,9],"909":[2,21,1,1,4],"910":[2,23,2,1,4],"911":[5,16,2,1,4],"912":[2,24,2,1,4],"913":[8,40,7,1,4],"914":[10,52,4,1,4],"915":[10,28,1,1,4],"916":[7,22,4,1,4],"917":[2,25,2,1,4],"918":[7,28,2,1,4],"919":[2,24,3,1,4],"920":[2,23,2,1,4],"921":[8,15,3,1,5],"922":[4,18,3,1,5],"923":[3,12,2,1,5],"924":[5,17,3,1,5],"925":[7,17,2,1,5],"926":[7,14,1,1,5],"927":[6,12,1,1,5],"928":[6,18,1,1,5],"929":[6,11,2,1,5],"930":[8,16,1,1,5],"931":[6,14,1,1,5],"932":[5,15,2,1,5],"933":[6,14,1,1,5],"934":[7,17,2,1,5],"935":[2,22,3,1,4],"936":[6,11,4,1,5],"937":[1,21,1,1,5],"938":[2,26,1,1,4],"939":[6,28,3,1,4],"940":[2,29,2,1,4],"941":[3,29,1,1,4],"942":[4,16,3,1,4],"943":[3,23,1,1,4],"944":[9,27,1,1,4],"945":[2,26,1,1,4],"946":[2,26,1,1,5],"947":[2,25,1,1,5],"948":[5,26,1,1,5],"949":[3,23,1,1,4],"950":[3,24,1,1,6],"951":[2,26,1,1,6],"952":[3,23,1,1,6],"953":[3,26,1,1,6],"954":[3,25,1,1,6],"955":[9,12,10,2,4],"956":[2,22,2,1,4],"957":[7,24,1,1,4],"958":[12,89,5,1,4],"959":[8,33,5,1,4],"960":[8,19,6,1,4],"961":[2,24,2,1,4],"962":[4,24,1,1,4],"963":[2,26,2,1,4],"964":[2,23,1,1,4],"965":[7,31,3,1,4],"966":[3,26,1,1,4],"967":[4,25,1,1,4],"968":[7,21,1,1,4],"969":[4,29,2,1,4],"970":[5,5,5,1,4],"971":[3,25,6,1,4],"972":[10,46,4,1,4],"973":[12,41,6,1,4],"974":[4,15,3,1,4],"975":[9,43,5,1,4],"976":[8,27,6,1,4],"977":[2,20,1,2,4],"978":[1,55,4,1,4],"979":[5,23,1,1,4],"980":[6,58,4,1,4],"981":[3,25,4,1,4],"982":[2,15,3,1,4],"983":[4,23,1,1,4],"984":[4,24,1,1,4],"985":[2,21,2,1,4],"986":[2,6,2,1,4],"987":[9,61,6,1,4],"988":[3,20,7,1,4],"989":[2,22,2,1,4],"990":[8,34,2,1,4],"991":[4,26,1,1,4],"992":[2,22,1,1,4],"993":[5,26,1,1,8],"994":[4,26,1,1,4],"995":[6,31,3,2,4],"996":[16,41,4,2,3],"997":[14,56,4,2,3],"998":[19,47,4,2,3],"999":[15,64,4,2,3],"1000":[20,51,4,2,3],"1001":[10,61,4,1,3],"1002":[16,45,4,2,3],"1003":[17,55,4,2,3],"1004":[17,44,4,2,3],"1005":[24,49,4,2,3],"1006":[18,52,4,2,3],"1007":[14,43,4,2,3],"1008":[13,30,4,2,3],"1009":[22,31,4,2,3],"1010":[17,37,4,2,3],"1011":[10,31,4,2,3],"1012":[14,29,4,2,3],"1013":[8,8,4,1,5],"1014":[8,8,4,1,5],"1015":[13,32,6,1,5],"1016":[13,23,8,1,5],"1017":[3,44,4,1,6],"1018":[3,46,4,1,6],"1019":[9,28,6,1,3],"1020":[7,21,6,1,3],"1021":[7,25,7,1,3],"1022":[7,22,6,1,3],"1023":[8,28,7,1,3],"1024":[8,25,7,1,3],"1025":[9,21,6,1,3],"1026":[7,26,6,1,3],"1027":[7,20,7,1,3],"1028":[8,29,7,1,3],"1029":[8,26,7,1,3],"1030":[7,25,7,1,3],"1031":[7,19,7,1,3],"1032":[7,28,6,1,3],"1033":[8,30,7,1,3],"1034":[8,20,7,1,3],"1035":[7,22,6,1,3],"1036":[7,23,7,1,3],"1037":[7,30,7,1,3],"1038":[7,26,7,1,3],"1039":[8,22,6,1,3],"1040":[7,24,6,1,3],"1041":[7,25,6,1,3],"1042":[8,21,7,1,3],"1043":[8,25,6,1,3],"1044":[7,31,7,1,3],"1045":[7,23,7,1,3],"1046":[7,23,6,1,3],"1047":[7,25,7,1,3],"1048":[7,29,6,1,3],"1049":[7,27,7,1,3],"1050":[7,22,7,1,3]},"averageFieldLength":[5.3425309229305435,27.243577545195052,2.709800190294958,1.2435775451950526,3.9086584205518555],"storedFields":{"0":{"file_path":"playbook/design/prototype.md","title":"Low-fidelity prototype: UI Design","description":"Design systems enable teams to build better products faster by making design reusable, reusability makes scale possible.","spr_content":"- **Understanding Prospect**: Analyze stakeholders, business models, goals, and challenges; ensure alignment on design elements like mindset, style, color palette, typography, iconography, illustration, and photography.<hr />  <hr />- **Defining Product Elements**:<hr />  - **Style**: Establish layout style aligned with target users; reference platforms like Dribbble and Behance for trends.<hr />  - **Color**: Define primary and secondary colors; utilize apps like Milanote for moodboarding; apply the 6:3:1 rule and limit to 3 primary colors for visual harmony.<hr />  - **Typography**: Specify typeface and styles (header, subheader, body) including font-size and weight.<hr />  - **Iconography**: Create icons reflective of branding; select icon colors from established color palette.<hr />  - **Illustrations and Images**: Apply visual elements consistent with content and style; use bitmap masks for file exports.<hr />  - **Platform Consideration**: Detail specific screens (desktop, mobile, tablet) and implement grid layouts to optimize designs.<hr />  - **Responsive Design**: Ensure adaptability across devices; consider user requirements for responsiveness.<hr /><hr />- **Demo Design**: Produce preliminary screens for client review; if color palette is undecided, start with grayscale focus to emphasize layout, text, and spacing.<hr /><hr />- **Design System**:<hr />  - **Definition**: A design system is a collection of reusable components guided by standards, fostering scalability and product development speed.<hr />  - **Building Steps**:<hr />    - Align teams on shared goals to establish vision and communication.<hr />    - Create design principles as guiding references.<hr />    - Initiate color palette development with moodboards and systematic naming conventions; implement and test colors to comply with accessibility standards (WCAG).<hr />    - Detail typographic rules: sizes, spaces, fonts, and usage guidelines.<hr />    - Standardize graphic assets, including icons, photography, and branding images to ensure brand consistency.<hr />    - Catalog design components in a pattern library by function (e.g., navigation) and states (e.g., hover).<hr />  <hr />- **High-Fidelity Prototype**:<hr />  - **Description**: Create interactive UIs allowing user interaction (e.g., button presses, sliders).<hr />  - **Timing**: Develop post-UI design completion.<hr />  - **Goals**: Validate design assumptions, present concepts to developers/customers, gather feedback for future iterations.<hr />  - **Tools**: Utilize Principle, Protopie, and Adobe XD for prototyping.","tags":"UX-UI guideline system design","authors":"nikki","date":{"days":19646},"category":"playbook > design"},"1":{"file_path":"playbook/operations/our-policy-for-remote-working.md","title":"Our Policy For Remote Working","description":"Some useful practices we adopted to keep the remote working system goes smoothly. This policy is written in the context of our current company setup.","spr_content":"- Remote work policy for a full-remote team. <hr />- Accountability remains high for remote and in-office employees. <hr />- Accommodate time zone differences in scheduling meetings. <hr />- Guidelines and tools facilitate effective remote work; personal initiative is essential.<hr />  <hr />**Adoption Practices:**<hr />- **Plan & Prepare:** Ensure strong Wi-Fi, distraction-free space, privacy for calls, and readiness for a full workday.<hr />- **Proactive Check-ins:** Use tools like Slack for availability and project updates; maintain communication.<hr />  <hr />**Calendar Management:**<hr />- Update calendar with remote work locations and availability.<hr /><hr />**Extended Remote Work:**<hr />- Notify about extended remote work (over 3 days), privileges demand proven effectiveness.<hr />- Manager approval required for non-home remote work.<hr /><hr />**Schedule Communication:**<hr />- Inform team at least 3 days in advance about remote work plans:<hr />  - Post notifications in #office.<hr />  - Verbally notify close colleagues.<hr />  - Update calendar.<hr /><hr />**Meeting Protocols:**<hr />- Timely meeting starts are mandatory for all participants.<hr />- Scheduled meetings should be within regular hours (10:30am - 1:00pm).<hr />- Video options for remote participants are standard; audio only by exception.<hr /><hr />**Managerial Oversight:**<hr />- Remote work is a privilege; non-compliance can lead to revocation.<hr />- Regular 1:1s focus on remote work challenges and responsibilities; fosters open feedback.","tags":"operations policy remote","authors":"tieubao","date":{"days":16810},"category":"playbook > operations"},"2":{"file_path":"handbook/guides/leave-request.md","title":"Submit a leave request","description":"A consistent on leave process prevents a company from being accidentally disrupted when an employee request to be absent.","spr_content":"- Clear leave request process ensures smooth operations and minimal disruption.<hr />- Discuss leave plans with client and team to align tasks.<hr />- Leave request submission steps include:<hr />  - Log into Basecamp.<hr />  - Create ticket in Woodland channel > On-Leave Request list.<hr />  - Format: Name | Type of absence (off/remote) | Date | Shift.<hr />  - Assign to: Project Manager, Account Manager, Project Lead.<hr />- Request timing based on urgency:<hr />  - Urgent: Immediate submission.<hr />  - Non-urgent: 2x absence duration prior.<hr />  - Holiday: 1-2 weeks in advance.<hr />- Example: 8 days advance notice required for leave from Jul 9th-12th.<hr />- Verification involves discussion of workload and resources to prevent project interruptions.<hr />- Approval process includes marking ticket as done, notifying all involved, and updating Google Calendar.<hr />- Client must be informed via email of approved leave, as Basecamp notifications are not sent to them.<hr />- Denial reason documented in the ticket by manager or lead.<hr />- Notify team and client about leave once approved.<hr />- Operations announces holiday period to clients 1-2 weeks in advance.<hr />- Project Manager or Leader sends reminder 2-3 days before holiday.<hr />- Non-urgent responses to clients are prohibited on days off or holidays.","tags":"guide handbook","authors":"duy innno_ minh_cloud","date":{"days":19955},"category":"handbook > guides"},"3":{"file_path":"handbook/guides/nda.md","title":"Understanding your NDA & other agreements","description":"A guide to the Non-Disclosure, Non-Solicitation, and IP agreements you signed when joining Dwarves.","spr_content":"- Agreements: Trust foundation between employee, Dwarves, and clients.<hr />- Confidentiality: Essential for protecting business edge and reputation.<hr />  <hr />### Core Promises<hr />1. **Non-Disclosure Agreement (NDA)**: <hr />   - Keep client, business, and process information confidential.<hr />   - Obligation persists post-employment.<hr />   <hr />2. **Non-Solicitation**:<hr />   - No recruiting Dwarves staff or soliciting clients for 12 months after departure.<hr /><hr />3. **Intellectual Property (IP)**:<hr />   - Anything created at Dwarves belongs to Dwarves.<hr />   - No personal use of company IP after leaving.<hr /><hr />### Day-to-Day Responsibilities<hr />- **During Employment**:<hr />   - Safeguard sensitive information: secure files, avoid inappropriate sharing, use data legitimately.<hr />   - Clarify sharing uncertainties by asking first.<hr /><hr />- **Post-Employment**:<hr />   - Return all company materials and adhere to NDA and non-solicitation commitments.<hr />   - Prohibited from using or sharing confidential info in future roles.<hr /><hr />### Importance of Compliance<hr />- Violations can lead to:<hr />  - Legal action and financial claims.<hr />  - Court orders restricting activities.<hr />  - Damage to professional reputation.<hr /><hr />### Clarification Steps<hr />- Review signed agreements.<hr />- Discuss with a manager for context.<hr />- Contact HR for questions or clarifications.<hr /><hr />- Employee responsibility: Honor agreements to protect Dwarves’ integrity and future. Trust nurtured through care and integrity in work.","tags":"compliance handbook nda","authors":"tieubao","date":{"days":19955},"category":"handbook > guides"},"4":{"file_path":"playbook/design/aarrr.md","title":"aarrr","description":"We use the AARRR framework to measure and optimize every phase of a product by optimizing it through the insane focus on one metric at a time.","spr_content":"- **AARRR Framework**: Tool for measuring and optimizing product phases; focuses on one metric at a time.<hr />- **Five Phases**: <hr />  - **Acquisition**: Attracting users.<hr />  - **Activation**: Ensuring users have a great first experience.<hr />  - **Retention**: Keeping users engaged over time.<hr />  - **Referral**: Encouraging users to recommend the product.<hr />  - **Revenue**: Generating income from users.<hr />- **Purpose**: Tracks product performance and long-term growth stability.<hr />- **Importance**: Summarizes critical growth metrics for startups; offers simplicity and actionability.<hr />- **Application Steps**:<hr />  1. **Choose Phase**: Identify the focus area for improvement.<hr />  2. **Gather Data**: Collect quantitative (analytics) and qualitative (user feedback) data to establish a baseline metric.<hr />  3. **Validate Problem**: Conduct user interviews/usability tests to confirm problems and understand root causes.<hr />  4. **Ideate Solutions**: Collaborate with stakeholders to brainstorm ideas and gain early buy-in.","tags":"framework guideline operations productivity","authors":"tieubao","date":{"days":19646},"category":"playbook > design"},"5":{"file_path":"playbook/operations/annual-bonus-for-sales.md","title":"Annual bonus for sales","description":"Guide to calculate annual bonus for sales","spr_content":"- Annual bonus for sales: two components: new deals and previous deals.<hr />- New deals: bonus tiered based on deployment team size over 12 months.<hr />  - Low Tier: **$600 to $4,000** for team size **4-8**.<hr />  - Medium Tier: **$9,000 to $60,000** for team size **12-20**.<hr />  - High Tier: **$72,000 to $96,000** for team size **24-32**.<hr />- Previous deals: earn **2%** on old commission.<hr />- Upselling counts as new money.","tags":"operations project","authors":"hnh","date":{"days":18262},"category":"playbook > operations"},"6":{"file_path":"playbook/operations/writing-management-objectives-in-smart.md","title":"Writing Management Objectives In Smart","description":"Use S.M.A.R.T goal to define management objectives","spr_content":"- S.M.A.R.T. goals concept originated in George T. Doran's 1981 paper.<hr />- S.M.A.R.T. stands for Specific, Measurable, Achievable, Relevant, Time-bound.<hr />- Specific: Define clear objectives; address who, what, when, where, which, and why.<hr />- Example of specificity: Transform \"Make a cross-browser layout\" into \"<www.site.com> must be equally displayed in browsers IE6+, Opera 6+, Firefox 2+.\"<hr />- Measurable: Establish metrics for tracking progress; include milestones.<hr />- Example of measurability: Change \"Increase traffic\" to \"Must achieve 2,000 visitors per day.\"<hr />- Achievable: Assess goal's attainability; inspire motivation; identify necessary skills and tools.<hr />- Relevant: Ensure goal aligns with broader business objectives; focus on meaningful impact.<hr />- Time-bound: Set realistic deadlines; create urgency with specific timeframes.<hr />- Example of time-bound: Change \"Make section 'Contact Us' for a demonstration by tomorrow\" to \"Make section 'Contact Us' for demonstration by noon 6/10/2016.\"<hr />- Practical example of a S.M.A.R.T. goal: \"In 3 months, achieve 50% increase in email blog subscribers by boosting Facebook ad budget on high-performing posts.\"","tags":"goal operations tips","authors":"tieubao","date":{"days":18317},"category":"playbook > operations"},"7":{"file_path":"playbook/operations/hiring-for-operations-team.md","title":"Hiring For Operations Team","description":"Operations is a very sensitive area of the company, so be very picky. A great ops person can dramatically improve the way your company works and make your life a lot easier.","spr_content":"- Operations is universally sensitive and pivotal to company function.<hr />- A strong operations person enhances organizational efficiency, simplifies processes.<hr />- Operations challenges are largely consistent across industries; specialized knowledge is secondary.<hr />- An effective operations leader connects and mediates functional areas.<hr />- Hands-on experience in IT, HR, accounting, recruiting, infrastructure, marketing, and sales is crucial; lack thereof is a significant handicap.<hr />- Operations leaders must be willing to engage directly, avoiding a detached, \"white glove\" approach.<hr />- Judiciously allowing team members to encounter challenges fosters growth and learning.<hr />- Proactive planning is essential; operations leaders maintain contingency plans for every scenario.<hr />- Those uncomfortable with messiness are ill-suited for operations.<hr />- Operations professionals function as the company's protective force, facilitating sustainable growth and bearing the brunt of challenges.<hr />- Successful operations require navigating obstacles, ensuring discipline, and managing issues quietly.<hr />- A strong network of suppliers and specialists is key for operational success; seeking expert advice is crucial.<hr />- Fluency in the \"language\" of each professional within the organization enhances collaboration and credibility.<hr />- Earning respect and credibility from the board and CEO is critical for operational effectiveness.<hr />- The role is challenging, and achieving perfection in relational dynamics is nearly impossible; effectiveness improves with team credibility and respect.","tags":"hiring operation people","authors":"duy giangthan tieubao","date":{"days":18286},"category":"playbook > operations"},"8":{"file_path":"playbook/operations/checklists/vietnam-invoice-checklist.md","title":"Vietnam Invoice","description":"The processs of taking Vietnam invoice","spr_content":"- Ensure invoice date increments with invoice number.<hr />- Include company name, tax code, and address from business registration.<hr />- Verify item details match contract specifications.<hr />- Include the contract number on the invoice.<hr />- Format VAT fields with slashes (\"/\").<hr />- Sign each sheet individually without overlapping signatures.<hr />- Clearly mark each signature.<hr />- Update and mark new address on the invoice.<hr />- Send completed invoice to the customer.<hr /><hr />For error invoices:<hr />- Revoke any erroneous invoices.<hr />- Clamp three sheets of the invoice together.","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"9":{"file_path":"playbook/operations/checklists/project-handover.md","title":"Project Handover","description":"The checklist shows the process of project handover","spr_content":"- Create detailed diagrams.<hr />- Ensure source code meets standards.<hr />- Pass all tests before handover.<hr />- Supply HOW-TO guides for development process.<hr />- Enable new member to compile, run, test, and deploy code.<hr />- Conduct a code walkthrough.<hr />- Allow new member to write and deploy code to QA independently (bugfix or small feature).<hr />- Provide access to information on design/implementation decisions.<hr />- Conduct at least 1 hour of pair programming (old with new member).<hr />- Schedule weekly code review sessions.","tags":"checklist operations project","authors":"huytq nikki thanh tieubao","date":{"days":18993},"category":"playbook > operations > checklists"},"10":{"file_path":"playbook/operations/checklists/project-communication.md","title":"Project Communication","description":"The checklist shows the rule of communication in a project","spr_content":"- Transparency in email communication aligns with established guidelines.<hr />- Discuss common knowledge work topics in public/shared channels.<hr />- If private discussions occur unintentionally, update relevant team members promptly.<hr />- Maintain professionalism: messages must be polite and appropriate.<hr />- Avoid NSFW content in work conversations.<hr />- Be responsive; don’t ignore messages—signal for follow-up if needed.<hr />- Include relevant individuals in discussions requiring their input.<hr />- Refrain from swearing; uphold respectful language.<hr />- Avoid irrelevant babble in discussions outside personal responsibility.","tags":"checklist operations project","authors":"huytq nikki thanh","date":{"days":18993},"category":"playbook > operations > checklists"},"11":{"file_path":"playbook/operations/checklists/project-archive.md","title":"Project Archive","description":"The checklist shows how the project will be archive","spr_content":"1. Project title: Archive.<hr />2. Objective: Centralize artifacts in Google Drive.<hr />3. Deliverable: Write a case study reflecting the experience.<hr />4. Communication: Express gratitude and request referrals.<hr />5. Maintenance: Update the audience database for future outreach.","tags":"checklist operations project","authors":"huytq nikki thanh","date":{"days":18993},"category":"playbook > operations > checklists"},"12":{"file_path":"playbook/operations/checklists/project-initialization.md","title":"Project Initialization","description":"The checklist shows the process of project initialization","spr_content":"- **Paperwork**: <hr />  - NDA, contingent on client needs.<hr />  - Legally signed agreements via HelloSign for e-contracts.<hr />  - Store all related documents on Drive.<hr /><hr />- **Process**: <hr />  - Ensure resources are prepared and ready.<hr />  - Obtain deposit post-agreement signing, variability based on terms.<hr />  - Establish communication channels.<hr />  - Set up task and project management tools.<hr />  - Schedule project meetings.<hr />  - Clarify project requirements.<hr />  - Initiate and configure the project.","tags":"checklist operations project","authors":"huytq nikki thanh tieubao","date":{"days":18993},"category":"playbook > operations > checklists"},"13":{"file_path":"playbook/operations/checklists/unemployment-social-health-insurance.md","title":"Unemployment, Social, Health Insurance","description":"The checklist of unemployment, social, health insurance","spr_content":"- Employee request for social insurance and contract noted.<hr />- Salary adjustment to be recorded.<hr />- Notice to be sent to Quang and Han regarding salary adjustment.<hr />- Required documentation includes:<hr />  - Social Insurance number.<hr />  - Personal Income Tax (PIT) number.<hr />  - Household Registration Book.<hr />  - ID card (photograph required).<hr />  - Number of inhabitants (photograph required).<hr />  - Declaration of Temporary Residence.<hr />  - Labour Contract.","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"14":{"file_path":"playbook/operations/checklists/assets-checklist.md","title":"Assets","description":"This checklist is for administrators and employee to manage company's assets.","spr_content":"- **Lending Process for Admin**<hr />  - Collect asset requests via Basecamp at Woodland in To-dos.<hr />  - Verify the status of requested assets.<hr />  - Log borrower information in Airtable.<hr />  - Establish deadline for asset return.<hr /><hr />- **Collecting Assets for Admin**<hr />  - Retrieve assets from borrowers.<hr />  - Confirm asset status upon collection.<hr />  - Document any damage incurred.<hr />  - Mark To-dos ticket as complete.<hr /><hr />- **Borrowing Process for Employee**<hr />  - Submit requests on Basecamp at Woodland in To-dos.<hr />  - Obtain assets from Admin/Ops Associate.<hr />  - Report any asset damage.<hr />  - Set a return deadline.<hr /><hr />- **Returning Assets for Employee**<hr />  - Check asset status before returning.<hr />  - Report any damages observed.<hr />  - Communicate with Admin/Ops Associate regarding the return.","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"15":{"file_path":"playbook/operations/checklists/artifact-checklist.md","title":"Back up Artifact","description":"To make sure that project’s progress is aligned with the team plan, we collect artifacts every 3 months and save as record of what was done.","spr_content":"### Importance of Artifacts<hr />- Artifacts track project progress, facilitating management and control.<hr />- They serve as a learning resource for future teams, detailing past decisions, challenges, and solutions.<hr />- Artifacts enable smooth handovers, onboarding, and traceability when needed.<hr /><hr />### Artifacts Checklist (Quarterly Updates)<hr />- Backup all source codes: Establish a pull process if applicable.<hr />  <hr />#### Project Charter<hr />- Define project purpose and problem-solving focus.<hr />- Outline project scope and team involvement.<hr />- Specify technology stack utilized.<hr />- Identify stakeholders and their roles.<hr />- Detail resource allocation by role.<hr />- Schedule and define purpose for meetings.<hr />- Specify communication channels.<hr />- Maintain a changelog linking to team updates.<hr /><hr />#### Milestones/Roadmap<hr />- Outline team objectives for the next 3 months.<hr /><hr />#### Documentation<hr />- **High-Level Diagrams**: ERD or class diagrams, container diagrams, component diagrams, infrastructure diagrams with function descriptions.<hr />- **Flow/Activity/State Machine Diagrams**: For core or complex features.<hr />- **README**: Include project description, installation and running instructions, and contribution guidelines (coding conventions, source structure, architecture).<hr />- **`.env` Document**: Environmental configurations required.<hr />- **Potential Issues/Roadblocks**: Identify and document challenges faced.","tags":"checklist delivery operations","authors":"minh_cloud thanh","date":{"days":19926},"category":"playbook > operations > checklists"},"16":{"file_path":"playbook/operations/checklists/hiring-checklist.md","title":"Hiring","description":"The checklist presents how the hiring is proceeded.","spr_content":"- **Resume Collecting**: Identify necessary materials and sources. Utilize job description, job sites, and hiring channels. Implement hiring system in Notion.  <hr />- **Timeline Management**: Schedule invitations and calendar for interviews, assign interviewers. Report results post-interview rounds. Ensure responsiveness and adherence to processes. Monitor potential skips in rounds or missed applicants. Maintain deadlines. Ensure thorough grading of assignments, check for conflicts of interest.  <hr />- **Application Process**: Establish deadlines for applications, interviews, confirmation emails, onboarding, and probation periods.  <hr />- **Offering Strategy**: Act swiftly if a candidate is a good fit. Clearly outline offer packages to avoid vagueness. Stay friendly with candidates who decline offers for potential future opportunities. Confirm completeness of offer information (salary, benefits, etc.). Involve relevant stakeholders (department heads, accounting, operations) in the offer process.  <hr />- **Materials Preparation**: Compile essential resources such as handbooks, pre-assignment tests, assignments, and scenario templates.  ","tags":"checklist hiring operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"17":{"file_path":"playbook/operations/checklists/leave-and-request-checklist.md","title":"Leave Request","description":"The checklist of leave and request for the team.","spr_content":"- Manage leave requests effectively for smooth project operations.<hr />- Acknowledge, discuss, and verify employee leave requests.<hr />- Align workload and resources; reassign critical tasks if needed.<hr />- Plan to cover responsibilities during employee absences.<hr />- Upon Basecamp ticket notification, proceed with approval/denial process:<hr />  - If approved: <hr />    - Mark ticket done, note return date.<hr />    - Notify involved parties; update Google Calendar and inform client.<hr />    - Update project timeline; monitor progress during leave.<hr />  - If denied: <hr />    - Document reason, provide feedback, suggest alternatives.<hr />- 1-2 weeks before holidays: <hr />  - Announce holiday via email to clients.<hr />  - Confirm ongoing projects have holiday plans.<hr />  - Communicate holiday schedule to team on Discord.<hr />- 2-3 days before holidays: <hr />  - Remind clients informally via Slack.<hr />  - Review holiday plans with team for last-minute issues.<hr />  - Reinforce holiday schedule on Discord reminder.","tags":"checklist operations people","authors":"innno_","date":{"days":19955},"category":"playbook > operations > checklists"},"18":{"file_path":"playbook/operations/checklists/candidate-checklist.md","title":"Candidate","description":"The checklist will show how to evaluate a candidate.","spr_content":"- Background qualifications: Logic, English proficiency, specialized technical knowledge.<hr />- Personal attributes influencing hiring:<hr />  - Action-oriented (Doer)<hr />  - Inquisitive (Curiosity)<hr />  - Analytical (Problem-solving)<hr />  - Adaptive (Learner)<hr />  - Cooperative (Teamwork)<hr />  - Receptive (Open-minded)<hr />  - Collaborative spirit<hr />  - Supportive demeanor<hr />- Consideration of past issues in employment history.<hr />- Potential for personality assessment through social channels.","tags":"checklist hiring operations","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"19":{"file_path":"playbook/operations/checklists/consulting-contract-checklist.md","title":"Consulting Contract","description":"The checklist presents the process of contract evaluation.","spr_content":"- Contracts must be incrementally numbered by year.<hr />- Contracts require paging for organization.<hr />- Sufficient contractor information is essential in contracts.<hr />- Payment terms must be numbered with concise descriptions.<hr />- Currency, country, and applicable law (Clause 18) must be updated.<hr />- Termination terms require careful review and consideration.<hr />- Features list or scope of work must be clearly specified, including versioned design and requirement documents.<hr />  <hr />- Contracts must be legally signed by responsible parties (e.g., via hellosign.com).<hr />- Signing contracts is mandatory prior to project initiation.<hr />- Final signed contracts must be stored in the Official Drive folder.<hr />- All contract materials must be saved in Drive, including final PDFs and source files (Word/Google Docs/Pages).","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"20":{"file_path":"playbook/operations/checklists/billing-checklist.md","title":"Billing","description":"This checklist illustrates the process of billing approval.","spr_content":"- **Invoice Process Overview**: Defined roles for invoice oversight; primary PIC is Account Lead, secondary is Project Salesperson (e.g., Nam for Attrace).<hr />  <hr />- **Invoice Generation**: Monthly automatic invoice draft generation by Fortress based on previous month.<hr /><hr />- **Client Interaction**: PIC sends Off-days report (25th-27th month) for client confirmation; checks invoice for accuracy (including time-off).<hr /><hr />- **Invoice Submission**: Post client feedback, PIC sends official invoice, status changes to \"Sent\".<hr /><hr />- **Payment Tracking**: Upon payment receipt, Han updates status to \"Paid\". If unpaid 7 days post-sending, status becomes \"Overdue\"; PIC must follow up.<hr /><hr />- **Error Management**: If errors arise post-sending, invoices marked \"Error\"; PIC communicates issues and issues new invoice.<hr /><hr />- **Compliance Checks**: Ensure accuracy in item pricing, dates, clear descriptions, and pertinent notes in invoices.<hr /><hr />- **Invoice Status Maintenance**: Must reflect current situation, updated by PIC.<hr /><hr />- **Sending Protocols**:<hr />  - Designated PIC sends invoices.<hr />  - Notify clients of errors promptly; mark error in Fortress.<hr />  - Follow up on overdue invoices within 3 days.<hr />  - Confirm payment receipt to clients post-deposit.<hr />  - Send invoices timely (monthly date or after payment milestone).","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"21":{"file_path":"playbook/operations/checklists/project-case-study.md","title":"Project Case Study","description":"The checklist outline the criteria of a project case study article","spr_content":"- Case Study Focus: Client-centric and audience-oriented content.<hr />- Non-Tech Client:<hr />  - Highlight capability to deliver.<hr />  - Clearly reflect problem, solution, and value proposition aligned with Dwarves.<hr />  - Showcase familiar personas from previous clients.<hr />  - Include demonstration of final delivery outcome.<hr /><hr />- Tech Manager & Potential New Hire:<hr />  - Emphasize technical challenge faced.<hr />  - Present detailed system and architecture designs.<hr />  - Convey innovation and technical prowess. <hr /><hr />- Overall Goal: Engage both non-technical and technical audiences by balancing delivery capabilities with complex technical insights.","tags":"checklist operations project","authors":"huytq nikki thanh","date":{"days":18993},"category":"playbook > operations > checklists"},"22":{"file_path":"playbook/operations/checklists/offboarding-checklist.md","title":"Offboarding","description":"The process when an employee offboard from the team.","spr_content":"- **Objectives**: Ensure employee satisfaction, minimize disruption, ensure compliance.<hr />- **Project Offboarding**: Confirm last day, resource replacement, complete handoff, back up source code.<hr />- **Exit Interviews and Communications**: Conduct exit interview, gather feedback, invite to alumni events, discuss contractor agreement, inform about final paycheck, send offboarding email, express gratitude.<hr />- **Account and Access Management**: Remove access to email, Git, 1Password, Basecamp, other work channels, databases; update profiles and roles.<hr />- **Equipment and Resources**: Retrieve company assets (laptop, phone), instruct employee to delete code from personal devices.<hr />- **Post-Departure**: Follow up on pending tasks, conduct team meeting for transition, update documentation and contacts.<hr />- **Handover Transfer**: Schedule sessions for knowledge transfer, document unique contributions, capture ongoing research details.<hr />- **Goal**: Facilitate positive exit, maintain relationships, protect company interests, adaptable checklist.","tags":"checklist operations people","authors":"hnh innno_ tieubao","date":{"days":19954},"category":"playbook > operations > checklists"},"23":{"file_path":"playbook/operations/the-okr.md","title":"The OKR","description":"How we use OKR to define goals","spr_content":"- OKR: Management methodology; outcome-driven tracking framework.<hr />- Components:<hr />  - Object: goal to achieve.<hr />  - Key Results: measurable indicators of progress towards the objective.<hr />- Example:<hr />  - Objective: Build a strong backend team.<hr />  - Key Results: <hr />    - Hire 2 senior backend developers.<hr />    - Organize 1 training session per week.<hr />- OKR structure:<hr />  - Foundation level: company-wide objectives and key results.<hr />  - Team level: specific objectives for team actions.<hr />  - Individual level: personal objectives for team members.<hr />- Keys to OKR:<hr />  - Set quarterly and annually.<hr />  - Ensure key results are measurable with specific metrics.<hr />  - Utilize both top-down (company) and bottom-up (individual) approaches.<hr />  - Share all OKRs company-wide for transparency.<hr />  - Grade key results on a scale from 0 to 1 for progress tracking.<hr />  - Limit to maximum 5 objectives and 4 key results each quarter.<hr />- Benefits over KPIs:<hr />  - Increase clarity in objective alignment across all levels.<hr />  - Enhance focus on achieving the right results.<hr />  - Foster collaboration through shared objectives and accountability.<hr />- Application process:<hr />  1. Conduct brainstorming session for quarter objectives.<hr />  2. Communicate company-wide objectives.<hr />  3. Draft personal OKRs.<hr />- Utilization tool: Hygger Board for organizing and tracking OKRs.<hr />- Suggested readings for further understanding:<hr />  - Articles and video resources on OKR success and implementation.","tags":"goal okr performance","authors":"tieubao","date":{"days":16897},"category":"playbook > operations"},"24":{"file_path":"playbook/operations/types-of-employees.md","title":"Types Of Employees","description":"Employees are either job-focused or mission-driven \"mitochondria\" who drive company growth. Prioritizing the latter through values interviews is key to startup success.","spr_content":"- Two employee types exist: job-focused and mission-driven.  <hr />- Job-focused employees see work as transactional, valuing fair compensation and projects.  <hr />- Their contributions scale linearly; they are rational actors in the workplace.  <hr />- Mission-driven employees embody company values, passionate about the mission.  <hr />- They transcend job descriptions, adding exponential value to the company.  <hr />- They energize teams and are essential in startup growth stages.  <hr />- This group is akin to mitochondria, powering and sustaining organizational health.  <hr />- Early-stage startups rely on these individuals as core components; they evolve into leadership.  <hr />- Cherishing and cultivating them is critical for sustainable growth.  <hr />- Invest in relationships, maintaining awareness of this group's thoughts and sentiments.  <hr />- Conduct values interviews to align candidates with company culture and core values.  <hr />- Founders or existing mission-driven employees should conduct these interviews.  <hr />- Not interviewing for values results in suboptimal hiring, losing potential mission-driven talent.  ","tags":"human-resource operations people","authors":"tieubao","date":{"days":17769},"category":"playbook > operations"},"25":{"file_path":"playbook/operations/collaboration-guidelines.md","title":"Collaboration Guidelines","description":"Guidelines for project collaboration between Dwarves and our Clients.","spr_content":"- **Tools Overview**: Utilize Basecamp for project management and communication, Jira for sprint planning and tracking, Google Meet for meetings, and Github/Gitlab for source control; design with Figma/Sketch.<hr />- **Schedule**: Kick-off meeting (1 session), weekly or bi-weekly sprints, planning and review meetings each sprint, daily standups via communication channels.<hr />- **Meeting Notes**: Send within 30 minutes post Sprint planning and retrospective meetings.<hr />- **Project Management**:<hr />  - All members involved in Sprint planning.<hr />  - Milestones and features listed on Jira/Basecamp at kick-off.<hr />  - New requests go to Icebox/Backlog; bugs handled based on priority.<hr />  - Aim for “Potentially Shippable” software each Sprint.<hr />- **Design & Development**: <hr />  - Design team delivers UI elements (color palette, fonts, base components) before the start of each Sprint.<hr />- **Backend & Frontend Coordination**:<hr />  - Establish API documentation and environments; agree on naming conventions early.<hr />- **Quality Assurance**:<hr />  - Document bugs with specifics; utilize dedicated testing environments for frontend.<hr />- **Release Schedule**: Releases occur at Sprint end; hotfixes are ad-hoc, including semantic version tagging and release notes.<hr />- **Customer Feedback**: Direct feedback to respective team leads based on nature (Development, Sprint results, Pricing).<hr />- **Issues Management**:<hr />  - Four severity levels dictate response and resolution times, from critical (<30 mins) to minor (1 business day).<hr />- **Billing Process**: Invoices sent monthly; based on deployed resources and project type (Fixed-price or T&M), with necessary payment details provided.<hr />- **Payment Terms**: Clients have 10 business days to pay, penalties for late payments without prior written approval.<hr />- **Project Team Responsibilities**:<hr />  - **Team Lead**: Infrastructure and technical oversight, progress reporting.<hr />  - **Account Manager**: Client feedback management and relationship maintenance.<hr />  - **Project Manager**: Project standards implementation, deliverable production, risk management, and reporting.","tags":"operations project","authors":"hnh","date":{"days":18262},"category":"playbook > operations"},"26":{"file_path":"playbook/operations/the-four-preferences.md","title":"The Four Preferences","description":"The four preferences in MBTI personalities","spr_content":"1. **Extraversion vs. Introversion**: Distinction between external engagement (extraverting) and internal reflection (introverting). <hr />   - Extraverting activities: talking, listening, cooking, working on cars.<hr />   - Introverting activities: reading, contemplating, self-awareness, problem-solving.<hr />   - Preference influences life's direction and source of energy.<hr /><hr />2. **Sensing vs. Intuition**: Differences in information gathering methods.<hr />   - Sensing: concrete data absorption via senses (tasting, observing changes, memorizing, following plans).<hr />   - Intuition: abstract possibilities and meanings from gathered data (innovation, future implications, perceiving underlying meanings).<hr />   - Preference affects trust in information gathering.<hr /><hr />3. **Thinking vs. Feeling**: Two criteria for decision-making.<hr />   - Thinking: logic and reason-focused decisions (research products, fairness, adherence to rules).<hr />   - Feeling: subjective, value-based decisions (personal liking, emotional considerations, environmental preferences).<hr />   - Balance between both leads to easier decisions; conflict brings dominant preference to the fore.<hr /><hr />4. **Judging vs. Perceiving**: Attitude towards the external environment and day-to-day living.<hr />   - Judging: preference for order, closure, and planning (to-do lists, scheduling, forming judgments).<hr />   - Perceiving: preference for flexibility and spontaneity (postponing decisions, spontaneous actions, last-minute tasks).<hr />   - Differences can create challenges in relationships; complementary dynamics possible in mixed preference partnerships.","tags":"mbti operations personalities","authors":"namtran","date":{"days":18824},"category":"playbook > operations"},"27":{"file_path":"playbook/operations/compliance-check-process.md","title":"Compliance Check Process","description":"A comprehensive compliance program encompassing monthly audits, transparent progress tracking, and consequences for non-compliance, aiming to foster accountability and transparency within the team.","spr_content":"- **Compliance Management Framework**: Systematic approach to ensure adherence to standards.<hr />- **Checklist Storage**: Master compliance checklist archived; execution tracked via clones named as df-compliance-<field>-<mm><yyyy>.<hr />- **Monthly Execution**: 30% of projects selected monthly for compliance checks; cloned checklist per project stored alongside master.<hr />- **Project Sheets**: Individual project compliance sheets housed within the execution files.<hr />- **Task Assignment**: Compliance PIC creates actionable items in Basecamp for project PICs.<hr />- **Verification Process**: Double-check outcomes via direct questions or peer comparisons.<hr />- **Responsibility for Action**: Project PIC is accountable for addressing compliance issues found.<hr />- **Reporting**: Compliance PIC compiles a report for team dissemination during engineering meeting.<hr />- **Recognition System**: Projects earn \"Fame\" for exemplary compliance and \"Shame\" for deficiencies.<hr />- **Training Requirement**: Mandatory training for incomplete or unexplained checklist categories.<hr />- **Probation Impact**: Compliance completion is essential for new hires to pass probation.<hr />- **Transparency Principle**: Key to effective auditing; encompasses public awareness of processes and consequences.<hr />- **Communication Steps**: Audit process includes clear announcements, tracking progress, weekly updates, and accountability measures.<hr />- **Public Accountability**: Collective progress tracking fosters motivation and proactive engagement among team members.<hr />- **Long-term Engagement**: Consistent compliance work builds a culture of accountability and integration into workflows.","tags":"operations project","authors":"hnh","date":{"days":18262},"category":"playbook > operations"},"28":{"file_path":"careers/apprentice/2022/2022-meet-tuan-dao.md","title":"Meet mentor Tuan Dao","description":"Tuan Dao is a Senior Frontend/Blockchain engineer with 4+ years of experience known for his technical expertise in React. His mentoring approach focuses on creating a supportive environment where apprentices receive personalized guidance to develop their technical and professional skills.","spr_content":"- Tuan Dao: Senior Frontend & Blockchain Engineer at Dwarves Foundation.<hr />- 4+ years of experience; 2+ years at Dwarves.<hr />- Expertise exceeds tenure; involved in diverse projects.<hr />- Principle: \"Find joy in your profession.\"<hr />- Joy derived from ownership, learning, and reliable colleagues.<hr />- Confident in technical skills, particularly with React.<hr />- Role in Apprenticeship: Enhance apprentices' frontend skills.<hr />- Focus on adaptability and patience amidst evolving software requirements.<hr />- Employs 1:1 training inspired by his own mentor’s approach.<hr />- Aims to create a supportive mentoring environment for mentees.<hr />- Dwarves Foundation Apprenticeship 2022: <hr />  - 6-month paid work-study-training program.<hr />  - Designed for mid-level software engineers.<hr />  - Goal: Shape software skills and career path.","tags":"apprenticeship career","authors":"duy tieubao","date":{"days":19102},"category":"careers > apprentice > 2022"},"29":{"file_path":"careers/apprentice/2022/2022-meet-ngoc-thanh-pham.md","title":"Meet mentor Thanh Pham","description":"Thanh Pham leads blockchain initiatives at Dwarves Foundation with a focus on building web3 products. His mentorship emphasizes the importance of logical thinking and long-term value creation in blockchain development.","spr_content":"- Dwarves Team shifts focus to blockchain technology.<hr />- Offering study groups and blockchain projects for growth and opportunity.<hr />- Thanh is a vital team member, welcoming newcomers.<hr />- The path at Dwarves starts with a passion for developing web3/blockchain products.<hr />- Blockchain is a rising star in modern software encompassing cryptocurrency, NFTs, games, and trading platforms.<hr />- Dwarves blockchain projects cover diverse aspects of web3.<hr />- Knowledge of cross-chain and swapping techniques is essential.<hr />- Understanding product requirements is crucial for quality deliverables.<hr />- Blockchain knowledge is vital for engineers' career advancement.<hr />- Blockchain transcends mere application development; it enables decentralized applications and ecosystems.<hr />- Blockchain serves as a burgeoning software foundation, offering a new career path alongside traditional engineering roles.<hr />- Engineers should note the importance of long-term value and meticulousness in blockchain development.<hr />- Quick learning can lead to oversight of critical product attributes.<hr />- Accuracy and a logical mindset are necessary for successful blockchain product delivery.<hr />- Successful products solve user needs and align with business goals to drive revenue.<hr />- Mentorship involves guiding mentees to focus on details and understanding errors.<hr />- Cloning project source code can hinder deep learning and understanding.<hr />- The Dwarves Foundation Apprenticeship offers a 6-month, fully paid work-study program for mid-level software engineers.","tags":"apprenticeship career","authors":"duy tieubao","date":{"days":19104},"category":"careers > apprentice > 2022"},"30":{"file_path":"handbook/how-we-hire.md","title":"How we hire","description":"Hiring means we need help. We only hire people who tell us what to do, not the other way around. We always look for long-term teammates that why we want to ensure the new hire is a value fit and culture fit.","spr_content":"- **Hiring Philosophy**: Aim for alignment with values and culture; prioritize long-term growth.<hr />- **Independent Thinkers**: Seek self-directed individuals who can drive their own work; not followers of orders.<hr />- **Core Qualities**: Independence, teamwork, problem-solving mindset, determination; essential for team functionality.<hr />- **Manager of One**: Self-sufficient workers who establish their own goals and execute them; reduce need for supervision.<hr />- **Identification of Candidates**: Look for self-sufficiency in past roles; evidence of initiative and entrepreneurial spirit.<hr />- **Purpose of Hiring**: Focus on creating rather than managing; build a robust, engaged team.<hr />  <hr />- **Hiring Process**: Multi-stage approach involving Dwarves team participation.<hr />  - **CV Screening**: Evaluate resumes and references for personality fit and background.<hr />  - **Pre-assessment**: Online test for logical thinking, English skills, and personality traits for fresher positions.<hr />  - **Assignment**: Practical skills assessment; discuss real challenges and approaches.<hr />  - **Interview**: Deep dive into candidate background; alignment of expectations.<hr />  - **Roadmap Design**: Discuss long-term vision and create a foundation for candidate experience.<hr /><hr />- **Alternative Entry Paths**:<hr />  - **Internship**: 3-month program for top university students; hands-on projects, no trivial tasks.<hr />  - **Apprenticeship**: 6-month paid program for underrepresented groups with non-traditional backgrounds; skill development focus.<hr /><hr />- **Referral Program**: Leverage Dwarves' network for quality hires; incentivize employee referrals.<hr />  - **Bonus Structure**: 2% of project service fee for successful referrals; fosters community engagement and growth.","tags":"career handbook hiring","authors":"tieubao","date":{"days":17948},"category":"handbook"},"31":{"file_path":"handbook/security-rules.md","title":"Security rules","description":"Keeping laptops and phones secure is vitally important. We're a software company and many of us have access to secure systems (both our own and our customers). The following guidelines apply to how we physically secure our laptops and mobile devices that may contain customer or user data.","spr_content":"- Importance of securing laptops and phones for data protection.<hr />- Guidelines for physical security of devices with customer/user data.<hr />- General security measures: Note serial numbers, strong passwords, use two-factor authentication.<hr />- Maintain up-to-date operating systems and applications. <hr />- Lock devices when unattended; avoid leaving them in unsecured areas.<hr />- Install tracking and remote data wipe tools like Prey.<hr />- Desktop security: <hr />  - Encrypt hard drives; set firmware (Mac) or BIOS (non-Mac) passwords.<hr />  - Disable automatic login; enable auto logout after inactivity.<hr />  - Require passwords after screensaver/sleep; use only company laptops or follow BYOD policy.<hr />  - Enable iCloud/Find My Mac.<hr />- Mobile device options: <hr />  - Avoid company accounts on personal devices or follow mobile security checklist.<hr />  - Disable fingerprint login or enable TouchID; create a strong passcode.<hr />  - Enable auto lock after 5 minutes.<hr />- Password management:<hr />  - Use unique passwords for each account.<hr />  - Utilize tools like pwgen or 1password for random password generation.<hr />  - Encrypt shared passwords with GnuPG.<hr />- Security reporting process: <hr />  - Report potential issues to security@d.foundation.<hr />  - Respond promptly, confirm receipt, and provide PGP key information.","tags":"handbook security","authors":"tieubao","date":{"days":17948},"category":"handbook"},"32":{"file_path":"handbook/what-we-stand-for.md","title":"What we stand for","description":"How we empower innovation through software craftsmanship and build products that matter","spr_content":"- Constant innovation drives startup formation; pursuit of vision impacts lives, economic growth.<hr />- Founders face challenges: business development, legalities, fundraising, team building, product development.<hr />- Quick iteration often leads to \"breaking things\"; necessity for speed in a competitive landscape.<hr />- Growth requires experienced teams; software expertise is crucial for robust systems and value delivery.<hr />- Dwarves Foundation emerged from service firm inadequacies; we reject \"hit and run\" approaches to craftsmanship.<hr />- Commitment to quality; importance of building products right for economic impact.<hr />- Since 2013, we've maintained high standards in software development, serving tech startups and entrepreneurs.<hr />- Partnership philosophy: collaborative creation of innovative products; value in long-term relationships.<hr />- Dwarves, rooted in Norse mythology, symbolize craftsmanship and expertise; technical knowledge over flashy displays.<hr />- Name reflects commitment to breakthroughs reshaping the world; emphasizes quality assessment pre-delivery.<hr />- Engineers' professional development centered on craftsmanship; teamwork essential for world-class product creation.<hr />- Innovation as a core value; collective effort essential for meaningful societal impact.<hr />- Unleashing potential requires imagination; Dwarves symbolize boundless possibilities transcending the physical realm.","tags":"handbook purpose","authors":"duy tieubao","date":{"days":17948},"category":"handbook"},"33":{"file_path":"handbook/making-a-career.md","title":"Making a career","description":"Forget the typical tech industry churn. Here's how you can actually build a lasting career and master your craft at Dwarves Foundation.","spr_content":"- Tech industry culture: Short employee tenure, seen as transient opportunities.<hr />- Dwarves: Aims for longer tenure (3 years average) to foster life-long career building.<hr />- Focus on mastery, not mandatory management roles for progression.<hr />- Six mastery levels in programming: Titles are consistent but criteria vary by department.<hr />- Important to recognize expertise at all levels; titles reflect demonstrated mastery at Dwarves.<hr />- Clear engineering ladder to mitigate feelings of stagnation and confusion regarding growth.<hr />- Transparency in career progression: Avoids ambiguity commonly found in flat structures.<hr />- Structured ladder components:<hr />  1. Engineering aspects:<hr />     - **Technical**: Craft proficiency, quality, best practices.<hr />     - **Execution**: Planning, problem-solving, ownership.<hr />     - **Influence**: Leadership, mentoring, knowledge sharing.<hr />     - **Collaboration**: Teamwork and communication effectiveness.<hr />  2. Career paths: <hr />     - **Individual Contributor (IC)**: Craft deepening and mentorship focus.<hr />     - **Manager Track**: Technical management, empowering teams.<hr />- Salary structure: Equal pay for equal roles, consistent promotions linked to level advancement.<hr />- Payroll strategy: Linked to revenue, targeting top market salaries (Vietnam).<hr />- Annual market data review with salary adjustments every March.<hr />- Structured performance reviews (July and January):<hr />  - Not punitive; aim for feedback, recognition of achievements, growth discussions.<hr />  - Process involves self-assessment, team lead review, and one-on-one discussion.<hr />- Feedback culture: Encouraged beyond formal reviews, fostering continuous growth.","tags":"career engineering handbook","authors":"tieubao","date":{"days":19930},"category":"handbook"},"34":{"file_path":"handbook/mma.md","title":"MMA","description":"We measure what matters at Dwarves through MMA (Mastery, Meaning, Autonomy). This framework helps us evaluate growth while creating a culture where everyone can thrive and contribute meaningfully.","spr_content":"- **MMA Concept**: Focus on Mastery, Meaning, Autonomy; measures what truly matters.<hr />- **Mastery**: Technical expertise, commitment to growth, pride in code quality, mentoring others.<hr />  - **Key Questions**: Are you a go-to for guidance? Do you seek improvement?<hr />- **Meaning**: Connection to larger goals, purpose in projects, community contribution.<hr />  - **Key Questions**: Does your work resonate beyond salary? Are you making a difference?<hr />- **Autonomy**: Initiative, independent problem-solving, time management, clear communication.<hr />  - **Key Questions**: Do you see and act on needs? Do you own your work?<hr />- **Practical Application of MMA**:<hr />  - Guides career development and personalized growth paths.<hr />  - Assesses performance: technical skills, alignment with purpose, self-direction.<hr />  - Recognizes excellence through roles (@labs, @sers, @chad); each role signifies growth and impact.<hr />- **Evaluation Process**: Balanced assessment.<hr />  - Operational effectiveness: 20%.<hr />  - Day-to-day performance: 30%.<hr />  - Leadership impact: 50%.<hr />- **Culture Building**: Encourages purpose, celebrates excellence, fosters innovation, focuses on meaningful impact.<hr />- **MMA Philosophy**: Measures quality growth, not just quantifiable metrics; nurtures an environment for thriving contributions.","tags":"growth handbook performance","authors":"tieubao","date":{"days":19347},"category":"handbook"},"35":{"file_path":"handbook/getting-started.md","title":"💎 Getting started","description":"From day one to finding your purpose, your journey with Dwarves Foundation starts here.","spr_content":"- Welcome to Dwarves Foundation; expect challenges and excitement.<hr />- Learn job roles; understand team structure via [who does what](who-does-what.md).<hr />- Clarity from orientation; reach out to your Ops buddy or manager for questions.<hr />- Remote work: privilege & responsibility; grasp [how we work](how-we-work.md).<hr />- Support from Dwarves buddy, Ops buddy, and manager available.<hr />- Typical adjustment period: two months to find rhythm.<hr />- Onboarding initiated in a Basecamp space named \"Welcome, [your name]!\" <hr />- Checklist includes submitting info, attending orientation, learning team roles, and setting up accounts.<hr />- Essential accounts: Discord, GitHub, Memo, Email, Basecamp, Fortress.<hr />- Probation goals: become job-ready and build team relationships.<hr />- Initial two weeks: smoother orientation; following weeks: demonstrate capabilities.<hr />- Bi-weekly review checks for progress assessment; opportunity for questions.<hr />- Understand and adapt to team culture: resource utilization, reading recommendations, and active participation in Campfire channel.<hr />- Respect comes from competence and self-management; substance over small talk.<hr />- Fortress system provides support through work buddies.<hr />- Post-probation: finding personal purpose aligned with team mission.<hr />- Dwarves focuses on innovation, exceptional software delivery, and co-creation of the future.<hr />- Fulfillment derived from personal purpose within collective mission.<hr />- Reflect on contributions to shared vision and intersection of talents with goals.<hr />- Goal: Transform job into a calling.<hr />- Next step: [You are Dwarves Foundation](dwarves-foundation-is-you.md).","tags":"handbook onboarding","authors":"tieubao","date":{"days":17948},"category":"handbook"},"36":{"file_path":"handbook/places-to-work.md","title":"Places to work","description":"If you’re doing creative work, research suggests you’ll want to be surrounded by ambient noise. A café or co-working space is the perfect choice in this case. If you need to focus on a specific task, however, you’re going to want silence as [quiet spaces help us focus on straightforward tasks.","spr_content":"- Ambient noise fosters creativity; ideal environments include cafes and co-working spaces. <hr />- Silence enhances focus for specific tasks; quiet spaces are crucial.<hr />- Tools: <hr />  - Coffitivity: simulates café noise.<hr />  - Noizio: customizable soundscapes.<hr />  - Rainy Mood: soothing rain sounds.<hr />- Color impacts productivity: <hr />  - Blue background boosts creativity.<hr />  - Red background aids detail-oriented tasks.<hr />- Large, open rooms with high ceilings stimulate creative thinking.<hr />- Home workspace tips: <hr />  - Create a dedicated workspace.<hr />  - Dress for productivity.<hr />  - Emulate a commute to signal work time.<hr />  - Establish set working hours.<hr />  - Schedule lunch breaks and respect days off.<hr />  - Stay hydrated for optimal performance.<hr />- Workspace resources: <hr />  - Places to Work <hr />  - Work From <hr />  - Coworker <hr />- Recommended cafes in Saigon for work: <hr />  - Camellia Tea & Coffee <hr />  - The Vintage Emporium <hr />  - Loft <hr />  - ID Cafe <hr />  - Kamakura <hr />  - C.On Cafe <hr />  - The Workshop <hr />  - The Morning Cafe <hr />  - Oromia Coffee <hr />  - L’Usine Le Loi","tags":"handbook remote","authors":"duy","date":{"days":17948},"category":"handbook"},"37":{"file_path":"handbook/dwarves-foundation-is-you.md","title":"You are Dwarves Foundation","description":"Every team member embodies our values and represents our brand in every interaction.","spr_content":"- Dwarves Foundation is represented by every individual member; each interaction is a reflection of the organization.<hr />- Quang and Huy serve not just as individuals, but as the embodiment of Dwarves Foundation.<hr />- Direct experiences with staff matter more than polished marketing messages.<hr />- Marketing requires collective responsibility from all members.<hr />- Communicate without corporate jargon; prioritize empathy over rigid policies.<hr />- Thoughtful writing is essential; consider the recipient's perspective.<hr />- Members are encouraged to contribute to the Dwarves Foundation blog, Memo.<hr />- Sharing personal insights enhances the foundation's collective narrative.<hr />- Word of mouth is a primary customer discovery method; community nurturing is crucial.<hr />- Every member's voice contributes to the community's growth and success.","tags":"culture handbook","authors":"tieubao","date":{"days":17948},"category":"handbook"},"38":{"file_path":"handbook/ventures.md","title":"Ventures arm","description":"How we invest in and build the future through our ventures initiatives","spr_content":"- Long-standing commitment to policies since inception; key for newcomers post-2018.<hr />- Venture investment model actively supports early-stage startups beyond core tech R&D and offshore services.<hr />- Dwarves Ventures team conducts careful evaluations for startup selections; not random.<hr />- Unique engagement involves acting as technical backbone; CTO roles and engineering teams provided.<hr />- Focus on helping startups in bootstrap phase to secure later funding rounds.<hr />- Emerging success rate indicates significant potential; opportunities for Dwarves to gain ownership stakes or discounted ESOP options.<hr />- Initiatives underway to create ecosystem for makers and developers; collaboration with developer and creator communities.<hr />- Superbits team developing market-targeted tools/products; commercialization in progress.<hr />- Contributions to products allow involvement in passion projects and ownership stakes.<hr />- Encouragement for personal side projects during investment time; potential for team funding and collaborative support.<hr />- Product ownership entails unique challenges; lack of predefined roadmaps and coaching.<hr />- Emphasis on self-management, problem-solving, and independent growth; substantial rewards possible.","tags":"handbook ventures","authors":"tieubao","date":{"days":18445},"category":"handbook"},"39":{"file_path":"handbook/guides/conduct-a-meeting.md","title":"How to conduct a meeting","description":"Meetings are important, but they need structure to be productive. This guide covers the essentials for running meetings smoothly, respecting everyone's time, and getting things done.","spr_content":"- Meetings are essential for information sharing and issue resolution but can waste time if poorly managed. <hr />- Establish a clear process for productivity.<hr />  <hr />**Scheduling & Logistics**<hr />- Provide meeting notice at least one day in advance.<hr />- Create and share a video link (e.g., Google Meet).<hr />- Sync the meeting with the relevant Basecamp schedule.<hr />- Ensure all participants are informed.<hr /><hr />**Clear Agenda**<hr />- A specific, detailed agenda prevents aimless discussions.<hr />- The host must state discussion topics clearly.<hr />- Attendees should come prepared with insights on agenda items.<hr />- A clear agenda results in clear outcomes.<hr /><hr />**Participant Confirmation**<hr />- Confirm attendance (or absence) via the invite at least three hours prior.<hr />- Notify the organizer if unable to attend on the same day as the invite.<hr /><hr />**Meeting Notes (Minutes)**<hr />- Capture discussions and decisions for official record-keeping.<hr />- Notes should document: decisions made, required actions, owners, and deadlines.<hr />- Anyone can take notes, not just a designated secretary.<hr />  <hr />**Good Meeting Notes Include:**<hr />- Date, time, and location/video link<hr />- Meeting purpose<hr />- Attendee list (and absentees)<hr />- Agenda items discussed<hr />- Decisions reached<hr />- Action items with owners and due dates<hr />- Follow-up meeting details.","tags":"guide handbook meeting","authors":"tieubao","date":{"days":17722},"category":"handbook > guides"},"40":{"file_path":"handbook/guides/reimbursement.md","title":"Reimbursement","description":"Sometimes the situation calls for realtime payment. Team lunch, device purchase, house cleaning, monthly drinking water. Normally, we pay it forward and claim those expense later. The reimbursement will be included in your payroll of that month.","spr_content":"- Realtime payments are necessary for specific situations.<hr />- Examples: team lunch, device purchases, house cleaning, monthly drinking water.<hr />- Standard practice: pay upfront, claim reimbursement later.<hr />- Reimbursements are processed through monthly payroll.<hr />- Follow this request format: Basecamp > Woodland > [Request](https://3.basecamp.com/4108948/buckets/9403032/todolists/1557155199).","tags":"guide handbook","authors":"duy","date":{"days":18736},"category":"handbook > guides"},"41":{"file_path":"handbook/guides/continuing-education-allowance.md","title":"Continuing education allowance","description":"You will always grow by learning and playing with new and cool technologies. From books to conferences, you’ll get a yearly budget for your learning and development goals.","spr_content":"- Continuous growth through learning and technology exploration.<hr />- Annual budget for professional and personal development.<hr />- $300 stipend for classes to enhance skills and enrich personal interests.<hr />- Flexibility in course selection, e.g., career-related or hobbies (photography, music).<hr />- Available to full-time Dwarfs after 6 months of employment.<hr />- Request format: Basecamp > Woodland > [Request](https://3.basecamp.com/4108948/buckets/9403032/todolists/1557155199).","tags":"guide handbook learning","authors":"duy","date":{"days":18736},"category":"handbook > guides"},"42":{"file_path":"handbook/guides/password-sharing.md","title":"Password Sharing","description":"How to access to team's password folder","spr_content":"- 1Password storage for D.F. team management.<hr />- Access through team account: share among relevant members only.<hr />- Contact line manager or Operations team for access.<hr />- Operations account: confidential credentials for Ops Team only.<hr />- Strictly internal sharing within Ops Team for sensitive data.<hr />- Continuous updates of secret key to prevent information leakage.<hr />- Latest secret key stored on Google Drive (link provided).<hr />- Master password available upon separate request.","tags":"guide handbook","authors":"hnh","date":{"days":18262},"category":"handbook > guides"},"43":{"file_path":"handbook/purpose.md","title":"Our purpose","description":"We serve a single purpose, to empower innovations and co-create the next big things.","spr_content":"- Empowerment of innovations; co-create significant advancements.<hr />- Purpose-driven journey; begins with recognizing humanity's evolution.<hr />- Four billion years of progress: single cells to homo sapiens, spanning ages.<hr />- Civilizational foundations on production and creation; honor ancestors through building.<hr />- Vision: build an organization that fosters the next wave of innovation.<hr />- Create an innovation engine; nurture ideas; develop meaningful technologies.<hr />- Commitment and hard work essential; challenging but worthwhile path.<hr />- Aim to bring prosperity; create meaningful livelihoods; enrich future of humanity.<hr />- Today's efforts shape tomorrow's landscape; every action contributes to human-oriented technology.<hr />- Decisions guided by innovation legacy; focusing on impactful projects and team.<hr />- Joining Dwarves Foundation means participating in innovation and meaningful change.","tags":"handbook purpose","authors":"tieubao","date":{"days":18444},"category":"handbook"},"44":{"file_path":"handbook/benefits-and-perks.md","title":"Benefits & perks","description":"Since most Dwarves Foundation employees work in Saigon, this section is written with that as the default. Some benefits don't make sense in other countries. We will try our best to provide comparable benefits and perks as it makes sense, though...","spr_content":"- Dwarves Foundation employee benefits tailored for Saigon context; other countries will receive comparable offerings.<hr />- **Team Growth:**<hr />  - Continuing Education Allowance: $300 annual stipend for personal/professional development after 6 months.<hr />  - Conference Support: 50% coverage for job-related conferences; 100% if a guest speaker. Approval required via Ops Team with supporting details.<hr />  - Work Supplies Expense: Reimbursement for work-related purchases; receipts necessary for claims.<hr />  - Project Commission: 5% commission on project revenues procured by employees; may involve multiple salespersons.<hr />  - Year-End Gift: Annual thank-you cash bonus or presents, includes keepsake with spending inspiration.<hr />  - Monday Radio Talk: Weekly team sessions for knowledge sharing; contributor bonuses without limit.<hr /><hr />- **Teammate Support:**<hr />  - Employee Liquidity Pool: 5% of company value for tenured employees in case of sale or IPO, vested over 5 years.<hr />  - Employee Stock Option Plan: Purchase company shares at predetermined price; case-by-case discussions.<hr />  - Employee Referral Bonus: Monetary reward for referring successful full-time candidates; bonus given only if still employed.<hr />  - Employee Profit-Sharing: 5-10% of annual profits shared with employees post two years; forfeited upon resignation.<hr />  - Paid Time Off: Two weeks vacation, personal days, and national holidays; honor system for tracking days.<hr />  - Short-term Disability: 30 days off at 75% pay for illness/injury; up to 6 months at 50% pay thereafter.<hr />  - Flight Tickets: 4 domestic flights yearly to Dwarves Hubs, max 2,000,000 VND each, encourages hub visitation.<hr />  - Annual Healthcare: 5,000,000 VND healthcare package annually for check-ups and screenings; discounts for additional checks.<hr />  - Parental Leave: Up to 6 months leave for primary caregivers, 5 days for fathers; 10 days for twins, all at 100% salary.","tags":"employee handbook team","authors":"duy tieubao","date":{"days":17948},"category":"handbook"},"45":{"file_path":"handbook/how-we-spend-money.md","title":"How we spend money","description":"We do the business to provide engineering capabilities to help customers on their business. A part of the benefits package is the Stock Option Plan, and the money is the sensitive topic in most companies, but we want you to understand so you could commit your best to make Dwarves Foundation a right place to work.","spr_content":"- Business focus: providing engineering capabilities to enhance customer operations.<hr />- Benefits: includes Stock Option Plan, financial sensitivity acknowledged.<hr />- Goal: foster commitment to Dwarves Foundation as an ideal workplace.<hr />- Compensation structure:<hr />  - Base salary: agreed upon in employment contract.<hr />  - Revenue allocation:<hr />    - Sales Commission: 10% bonus for sales team contributions.<hr />    - Payroll Fund: 50% reserved for salaries and taxes for all employees (dev, design, ops, growth, management).<hr />    - Operational Expense: 30% for office, facilities, events, programs, hiring, training.<hr />    - Profit: estimated 20% pre-tax; 5% allocated for annual dividends.<hr />- Encourage understanding of financial structure to enhance workplace commitment.  <hr />- Further details available in the [Stock Option Plan](stock-option-plan.md).","tags":"business handbook","authors":"tieubao","date":{"days":17948},"category":"handbook"},"46":{"file_path":"handbook/community/showcase.md","title":"Showcase","description":"Our weekly internal demo event where teams share their latest projects and insights. Learn about our culture of sharing, collaboration, and continuous improvement.","spr_content":"- Showcase every Friday on Discord; internal demos for sharing work.<hr />- Open to all teams: engineering, design, product, etc.<hr />- Celebrates craftsmanship, insights, and fosters learning.<hr />- Inclusion for non-development members; visibility on progress.<hr />  <hr />- Characteristics of a good demo:<hr />  - Short (5-10 minutes), engaging, easy to grasp.<hr />  - Describe the work: purpose, significance, beneficiaries.<hr />  - Show working example; practical demonstration over code walkthrough.<hr />  - Highlight improvements: before vs. after visuals.<hr />  - Outline next steps for future work.<hr /><hr />- Encourage sharing of bug fixes, performance enhancements, tooling, prototypes, and design mocks.<hr />- Showcase all stages of development without restriction.<hr />  <hr />- Ground rules for positivity:<hr />  - No shaming; supportive environment for learning.<hr />  - No PowerPoint; focus on demonstrations, not slideshows.<hr />  - No selling; intent is understanding progress, not making pitches.<hr />  - No blaming; emphasize learning and progress over fault-finding.<hr /><hr />- Participation encouraged; coordinate with teams for preparation.<hr />- Discuss demo topics early; schedule with manager for sharing.","tags":"community handbook showcase","authors":"thanh","date":{"days":19240},"category":"handbook > community"},"47":{"file_path":"handbook/community/earn.md","title":"Earning with sidegig","description":"Bounties reward community members with $ICY for contributing work that helps developers expand their skills beyond their usual focus.","spr_content":"- Dwarves Discord network: Connect with friends, alumni, developers.<hr />- Bounties: Tasks rewarding contributions with $ICY token.<hr />- Skill expansion: Tasks often outside primary expertise for learning opportunities.<hr />  <hr />- Participants: Open to any skilled developers.<hr />- Common skills: Writing, design, research, development, finance analysis.<hr /><hr />- Process overview:<hr />  1. Join Discord server; introduce in `😀・arrival`.<hr />  2. Check bounty board at <earn.d.foundation> for tasks.<hr />  3. Claim bounty via ticket in `🎫・support-ticket`.<hr />  4. Deliver work for approval; receive $ICY reward upon merge of Pull Request.<hr /><hr />- Monthly bounty pool: 1700 $ICY (~$2,500 USD, fluctuating value).<hr />- Rewards: Use $ICY for Dwarves swag or exchange for USDC.<hr />- Payouts: After Pull Request acceptance and merge into Dwarves GitHub.<hr />  <hr />- Objective: Foster a welcoming environment for contributor engagement.","tags":"community earn handbook","authors":"innno_ nikki","date":{"days":19529},"category":"handbook > community"},"48":{"file_path":"handbook/community/radar.md","title":"Tech Radar","description":"Our tech radar helps us assess and adopt new technologies, inspired by ThoughtWorks. Learn about its structure and how we use it.","spr_content":"- **Dwarves Tech Radar:** Systematic evaluation and adoption of new technologies, inspired by ThoughtWorks' model.<hr />- **Purpose:** Share insights on relevant technologies to enhance project work.<hr />- **Visual Representation:** Radar indicates usefulness of technologies.<hr />- **Quadrants:** Four categories for technology classification:<hr />  - **Languages & Frameworks:** Components like Elixir, Svelte, React.<hr />  - **Techniques:** Approaches such as microservices, Domain-Driven Design.<hr />  - **Tools:** Software for development and operations, including Docker, Figma, PostgreSQL.<hr />  - **Platforms:** Services for foundational support, e.g., AWS, Kubernetes, Stripe.<hr />- **Rings:** Adoption stages depicted from outer to inner:<hr />  - **Hold:** Monitored technologies, no active exploration.<hr />  - **Assess:** Technologies worth research for potential impact.<hr />  - **Trial:** Technologies in active use for projects exploring new tech.<hr />  - **Adopt:** Established technologies confidently employed in projects.<hr />- **Resource:** Access the latest tech assessments on the [current tech radar board](https://radar.d.foundation/).","tags":"community handbook","authors":"thanh tom","date":{"days":19284},"category":"handbook > community"},"49":{"file_path":"handbook/community/discord.md","title":"Dwarves Network Discord","description":"Our Discord isn't just another company server; it's a place for both our team and the wider developer community. This guide explains how it works and where you fit in.","spr_content":"- **Unique Purpose:** This Discord server is designed explicitly for developers, fostering authentic connections and knowledge sharing.<hr />- **Community-Oriented:** Blends company structure with community engagement, avoiding corporate jargon.<hr />- **Key Activities:**<hr />  - **Knowledge Sharing:** Seminars, casual chats, tech talks on software development.<hr />  - **Connections:** A space for friendship among alumni and developers without forced networking.<hr />  - **Open Building:** Creating an inclusive software network using Discord.<hr />  <hr />- **Channel Structure:**<hr />  - **Community Hangouts:** Open to all; includes off-topic discussions, tech conversations, and sharing insights.<hr />    - `⛺・random`: Memes and non-work topics.<hr />    - `📈・trading-cafe`: Market and trading discussions.<hr />    - `💡・til`: \"Today I learned\" moments.<hr />    - `💻・tech`: General tech talk.<hr />    - `🎒・topics`: Focused technical discussions.<hr />  <hr />  - **Internal Channels:** For staff; includes project discussions and administrative tasks.<hr />    - `🏢・lobby`: Announcements.<hr />    - `🦄・pink-alert`: Urgent matters.<hr />    - `🎗️・operation`: Server management.<hr />    - `🤖・bot-commands`: Bot interactions.<hr />    - `🧊・icy-log`: Activity logs.<hr /><hr />- **Role System:** Reflects engagement and skill; includes ladder- and function-based roles, linking to real-world benefits.<hr />  - **Core Roles:** <hr />    - `@labs`: Technical mastery.<hr />    - `@sers`: Meaningful contributions.<hr />    - `@chad`: Reliability and quality delivery.<hr />  <hr />  - **Moderation Roles:** Supporters and moderators to maintain community standards.<hr />  - **Community Engagement:** Ranks from guest to trustee based on participation.<hr /><hr />- **Consulting Team Structure:** Roles from apprentice to elite, each with defined responsibilities.<hr />  <hr />- **Operational Focus Areas:** Engagement, learning, partnership, communication, delivery.<hr /><hr />- **Automation Bots:** Custom bots for task automation and server management, e.g., Mochi for tipping, Tono for management, Fortress for performance tracking.<hr /><hr />- **Leveling Up:** Earn `$icy` tokens through participation, climbing the role ladder and eventually obtaining NFTs as rewards.","tags":"community handbook","authors":"hnh innno_ monotykamary","date":{"days":19795},"category":"handbook > community"},"50":{"file_path":"handbook/routine.md","title":"Work routine","description":"How we structure our time to maximize creativity, productivity, and balance","spr_content":"- **Team Structure**: Small teams, agile principles, nimbleness, consistent quality.<hr />- **Work Cycles**: 8-week cycles, six cycles/year, urgency, scope management, reassess priorities, reflection, celebration.<hr />- **Reflection Practices**: Acknowledge achievements, opportunities, tech radar publication, cooling period before next planning.<hr />- **Daily Rhythm**: Balance focused work and collaboration.<hr />  - **Monday**: Operations meeting (9 AM), activity digest (Basecamp), sprint planning (10 AM), and focused work thereafter.<hr />  - **Lunch**: Recharge (12-1 PM).<hr />  - **Friday**: Retrospectives (3 PM), engineering/design meetings (4 PM), daily progress capture (5 PM), wrap-up (6 PM).<hr />- **Weekly Flow**:<hr />  - **Monday**: Planning, orientation.<hr />  - **Tuesday**: Discussions, crucial for task handoffs.<hr />  - **Wednesday & Thursday**: Deep work, protect productivity.<hr />  - **Friday**: Wrap-up, status meeting (1 PM), summarize progress.<hr />  - **Saturday**: Personal time, optional minor work (hotfixes, side projects), team newsletter.<hr />- **Growth Beyond Clients**: Investment in growth activities, open source, internal products, tech innovations.<hr />- **Open Source Philosophy**: Build internal tools first, refine through use, consider wider release based on utility.<hr />- **Dwarves Ventures**: Exchange expertise for equity, feedback loop between technical support and startup development.<hr />- **Continuous Learning**: Tech Radar every two months, team research, internal recognition, community knowledge sharing.","tags":"handbook workflow","authors":"tieubao","date":{"days":18486},"category":"handbook"},"51":{"file_path":"CONTRIBUTING.md","title":"Home","description":"How to contribute to our second brain.","spr_content":"- Contribution guidelines: Follow structured process for submitting notes.<hr />- Pull Request steps: Create, name, submit via GitHub link.<hr />- Naming convention: Use prefixes reflecting main tag and folder (e.g., engineering, writing, communication).<hr />- Review process: Get sign-off from designated reviewers before merging.<hr />- GitHub unfamiliarity: Use Discord for submitting notes, team assists with editing and submission.<hr />- Style manual: Prioritize readability and skimmability, follow Wikipedia/SEO structure.<hr />- Header structure: One H1 header, nested H2 headers, avoid excessive topic separation.<hr />- Plagiarism caution: Paraphrase ideas, make notes original.<hr />- Folder structure: Prefer 1-level folders, relevant tags in metadata required.<hr />- Metadata format: Include tags, author, GitHub ID, publish date in designated format.<hr />- Referencing: Use H2 for \"References,\" links acceptable as citations.<hr />- Editing tools: Markdown-compatible editors; recommend using Obsidian for linking and searching.<hr />- MoC management: Regularly assess and tag entries within topics for connectedness.","tags":"contribution","authors":"monotykamary thanh tieubao","date":{"days":19702},"category":""},"52":{"file_path":"consulting/case-study/sol.md","title":"Sol: Making group travel easier and more fun","description":"We designed Sol, a travel app that helps groups stay connected, organized, and on budget during trips. Our comprehensive approach included user research, visual design, and interactive prototyping.","spr_content":"- **Context**: Group travel challenges include connectivity, organization, and expense management.  <hr />- **Solution**: Developed Sol, an all-in-one travel app integrating location tracking, trip planning, and expense sharing.  <hr />- **Target Audience**: Young, tech-savvy travelers who prioritize independence and group dynamics.  <hr />- **Design Focus**: Address pain points like getting lost, plan confusion, communication barriers, and expense tension.  <hr />- **Features**:  <hr />  - Real-time location sharing with custom map interface.  <hr />  - Group coordination tools and social media integration (e.g., Facebook).  <hr />  - Expense management solutions to streamline budgeting.  <hr />- **Design System**:  <hr />  - Custom color palette: Vibrant Cerise and Midnight Express for readability.  <hr />  - Logo symbolizes location tracking and the sun/mountains via negative space.  <hr />  - Typography: San Francisco Pro Display for clarity and familiarity.  <hr />  - Intuitive icons and navigation components for user-friendly experience.  <hr />- **Interaction Design**:  <hr />  - Engaging animations for onboarding, app walkthroughs, and feature navigation.  <hr />  - Smooth transitions and visual cues enhance user interactions.  <hr />- **Prototyping**: Created high-fidelity interactive prototype using ProtoPie for realistic mobile experiences without coding.  <hr />- **Achievements**:  <hr />  1. Cohesive design system with visual elements.  <hr />  2. Intuitive UX addressing traveler challenges.  <hr />  3. Engaging interactions enhancing usability.  <hr />  4. Functional prototype validating concept and capabilities.  <hr />- **Conclusion**: Sol improves group travel experience by fostering connection, coordination, and fair expense sharing, exemplifying thoughtful product design aligned with user needs.","tags":"case-study travel","authors":"duy","date":{"days":18545},"category":"consulting > case-study"},"53":{"file_path":"consulting/case-study/icrosschain.md","title":"Making crypto transfers faster and easier","description":"We built iCrosschain, a platform that helps crypto users move their digital assets between different blockchain networks quickly and easily. Our solution cut transfer times down to just 15 seconds – the fastest in the industry.","spr_content":"- **Industry**: Blockchain Technology / Cryptocurrency; Global reach; <hr />- **Business Need**: Fast asset movement across multiple blockchain networks; User demand for efficient cross-chain transfers; <hr />- **Solution**: Cross-chain exchange platform; Optimized consensus mechanism; <hr />- **Outcome**: Fastest cross-chain transfer solution, 15-second completion time; <hr />- **Services Provided**: Blockchain development; Smart contract development; Frontend development; <hr />- **Technical Highlights**: <hr />  - Smart contracts: Solidity for secure exchanges; <hr />  - Backend: Golang for performance; <hr />  - Frontend: React.js and Next.js for UI; <hr />  - Web3 for multi-chain connectivity; <hr />  - Multi-authentication and rigorous auditing for security; <hr />  - Connected to 8 major blockchains (Ethereum, Binance Smart Chain, Polygon); <hr />- **iCrosschain Overview**: Facilitates cryptocurrency movement between blockchains; Comparable to a currency exchange for digital assets; <hr />- **Problem Addressed**: Slow, complicated, and costly transfer processes; <hr />- **Challenges**: <hr />  - Time delays (minutes/hours for transfers); <hr />  - High costs (fees during congestion); <hr />  - Complexity (multiple steps required); <hr />  - Security risks (hacks/exploits); <hr />  - Limited bridging options; <hr />- **Technical Approach**: <hr />  - Optimized consensus mechanism for rapid validation; <hr />  - Smart contract architecture for synchronized token management; <hr />  - Liquidity pools for cost efficiency; <hr />  - User-centered design for intuitive interface; <hr />  - Multi-layered security; <hr />- **Collaboration Style**: Startup mindset; Deep domain expertise; Ownership mentality; Collaborative innovation; Iterative development; Agile coding and project management; <hr />- **Achievements**: <hr />  - Industry-leading transfer speed; <hr />  - Multi-chain compatibility established; <hr />  - Issued two native tokens (ICC, iPlus); <hr />  - Launched specialized DEX on Avalanche; <hr />  - Tokens listed on exchanges (Pancake Swap); <hr />- **Impact**: <hr />  - Enhanced trading responsiveness; <hr />  - Infrastructure for developers; <hr />  - Simplified investment management; <hr />  - Increased liquidity and connectivity; <hr />- **Future Plans**: Decentralization via validators; continue DEX development on Avalanche; Expand cross-chain capabilities.","tags":"blockchain case-study swap","authors":"duy nikki","date":{"days":19166},"category":"consulting > case-study"},"54":{"file_path":"careers/life/2024-01-15-26-quoc-tuan.md","title":"#26 Truong Quoc Tuan on community contribution","description":"Truong Quoc Tuan shares his experience as a community contributor to Dwarves, highlighting the openness of the community and the value of knowledge sharing","spr_content":"- Frontend Engineer journey: from feeling overwhelmed to recognized contributor.<hr />- Joined Dwarves community through Discord in 2022, following initial contact in 2019.<hr />- Early confusion due to limited knowledge; evolved through participation in Radio Talks.<hr />- Memorable award: \"Trustees - Most trusted members\" at end of 2022, receiving 152 ICY.<hr />- Recognition received despite not being a formal Dwarves member enhanced sense of belonging.<hr />- Dwarves community highlights:<hr />  - Full-time remote work enables flexible personal life management.<hr />  - Open knowledge sharing: experiences, tech stacks, boilerplate code accessible to all.<hr />  - Equal treatment for all members: outsiders included in activities and decision-making.<hr />- Community fosters value and appreciation based on contributions and abilities.<hr />- Grateful for Dwarves' supportive environment for tech enthusiasts.<hr />- Recognized as \"Dwarves Of The Year\" for two consecutive years as a community contributor.","tags":"community-contributor frontend-engineer life-at-dwarves","authors":"","date":{"days":19737},"category":"careers > life"},"55":{"file_path":"careers/life/2023-07-24-8-nhut-huynh.md","title":"#8 Nhut Huynh on team leadership","description":"Nhut Huynh shares his journey from QA Engineer to Team Lead, highlighting the importance of leveraging team members' strengths over personal excellence","spr_content":"- Career path: QA Engineer → Team Lead; atypical yet successful transition.  <hr />- Common belief: QA Engineers lack paths to management due to focus on QA and user advocacy.  <hr />- Personal experience: Promoted after 3 years; proactive engagement critical.  <hr />- Open culture: Importance of discussing ideas; guidance from leaders enriches development.  <hr />- Proactivity: Participating in discussions beyond immediate scope fosters contribution and insight.  <hr />- Trust-building: Earning trust from Dwarves leaders and clients essential for leadership role.  <hr />- Leadership challenge: Navigating understanding of development discussions; transparency vital.  <hr />- Key insight: Effective leadership means leveraging team strengths rather than personal excellence.  <hr />- Developer perspective: Necessary for task management; bridging QA and dev teams' functions.  <hr />- Ultimate goal: Deliver optimized client solutions and recognize team contributions.","tags":"leadership life-at-dwarves project-manager","authors":"","date":{"days":19562},"category":"careers > life"},"56":{"file_path":"careers/life/2023-10-02-14-dat-pham.md","title":"#14 Dat Pham on remote work discipline","description":"Dat Pham reflects on his journey from internship to Rising Star at Dwarves, highlighting the self-discipline required in remote work environments","spr_content":"- Intern experience at Dwarves started during third year at Bach Khoa University.<hr />- Applied for Backend Engineer position; accepted after interview with mentor Ngoc Thanh.<hr />- Initial knowledge favored Frontend Engineering; limited experience with Node.js and no understanding of Golang.<hr />- Successful interview attributed to work attitude and enthusiasm, not pre-existing skills. <hr />- Adapting to remote work culture essential; emphasis on self-discipline and motivation.<hr />- First day shock: dressed formally, but colleagues wore casual clothing (dress shorts).<hr />- Company culture promotes freedom, individual respect, and self-management among employees.<hr />- Achieved recognition as \"Rising Star\" at Dwarves of the Year awards, reflecting significant growth and development. <hr />- Received over 200 ICY as a bonus, symbolizing contributions and accomplishments during tenure. <hr />- Personal growth journey from intern to recognized employee in a remote work environment.","tags":"backend-engineer life-at-dwarves remote-work","authors":"","date":{"days":19632},"category":"careers > life"},"57":{"file_path":"careers/manifesto.md","title":"Manifesto","description":"Quality exists in every piece of work. We thrive to deliver the best because we can.","spr_content":"- Quality is intrinsic to all work; strive for excellence because capability exists.<hr />- Well-crafted software reflects expertise; pride comes from high-quality, defect-free products.<hr />- Quality is paramount; mismanagement leads to project failure. Crafting software necessitates time, effort, discipline, and systematic methods.<hr />- Attention to small details drives significant success; detail-oriented practices refine software and minimize bugs.<hr />- In uncertainty, choose simple solutions to address complexities; focus on practicality rather than intricacy.<hr />- Software evolves rapidly; ensure new technology offers tangible value over current solutions before adoption.<hr />- Solid foundations are crucial for good software; maintenance and extensions matter post-launch.<hr />- Engineering transforms the world; software development rests on discipline and maintainability.<hr />- Software is an artisan craft; engineers add irreplaceable value through effective solutions.<hr />- Diverse perspectives enhance innovation; prioritize the best ideas regardless of origin for continuous improvement.<hr />- Agile methodologies focus on better software development; we’ve established our version of the Agile Manifesto.<hr />- Minimize waste related to processes and features; eliminate non-value-adding elements to streamline operations.<hr />- Prioritize early and frequent delivery; prompt feedback fosters evolution and enhancement.<hr />- Embrace simplicity in complexity; prioritize human-readable code for reliability, understandability, and maintainability.<hr />- Effectiveness trumps mere productivity; prioritize meaningful work that drives value over busyness.<hr />- Adopt a fail-fast, learn-often mentality; continual evaluation and iteration foster organic innovation.<hr />- Continuous improvement is essential: story planning, sprint execution, daily standups, and retrospectives drive progress.<hr />- Lean thinking promotes people-first and value-oriented approaches while focusing on waste elimination.<hr />- Establish a delivery pipeline comprising continuous exploration, integration, and deployment for agile responsiveness.<hr />- Foster innovation by empowering creativity, validating ideas with customers, and pivoting decisively when needed.","tags":"career culture","authors":"tieubao","date":{"days":19706},"category":"careers"},"58":{"file_path":"handbook/how-we-work.md","title":"How we work","description":"We organize our work in 8-week cycles with a focus on autonomy and craftsmanship. This framework helps us deliver high-quality software while maintaining flexibility and work-life balance.","spr_content":"1. **Work Philosophy Overview**: Team operates on a collaborative foundation; core principles emphasized rather than strict practices.<hr />2. **Agile Principles**: Adaptability and shared understanding as pivotal; Scrum framework adopted, roles emerge organically.<hr />3. **Team Autonomy**: All members share responsibility for sprint goals; Scrum master role is temporary and team-dependent.<hr />4. **8-Week Cycles**: Work organized into 8-week increments; prevents scope creep and allows regular reassessment of priorities.<hr />5. **Project Management**: Larger projects broken into manageable parts; focus on reducing scope over extending hours during slippage.<hr />6. **Cooldown Periods**: One-week break between cycles for backlogs, bug fixes, and planning; serves as “pencils down” time for completion.<hr />7. **Meeting Structure**: Basecamp used for all meetings; includes all-hands, team, and project-specific meetings.<hr />8. **Communication Methods**: Four main updates—daily, weekly intentions, heartbeats, and kickoffs maintain clarity without overwhelming.<hr />9. **Idea Pitches**: Everyone encouraged to propose features or improvements; documented for consideration and reflection.<hr />10. **Concern Reporting**: Empower team members to address issues through direct conversations or intervention requests; escalate to leadership when necessary.<hr />11. **Check-in Approach**: Varying questions to promote organic connection; no obligation to respond to every question.<hr />12. **Self-Management Value**: Emphasis on individuals taking initiative; \"managers of one\" exemplify self-direction and productivity.<hr />13. **Remote-First Culture**: Prioritizes flexibility and work-life balance; team given autonomy in choosing work environment.<hr />14. **Project Onboarding**: New members educated on project types and standards ensuring clarity on expectations.<hr />15. **Craftsmanship Philosophy**: Commitment to professionalism and quality in software development; absence of craftsmanship often leads to failures.","tags":"handbook workflow","authors":"tieubao","date":{"days":17368},"category":"handbook"},"59":{"file_path":"handbook/navigate-changes.md","title":"Navigate changes","description":"How we deal with technology changes","spr_content":"- Technology evolves in cycles: AI is now, followed by DevOps, mobile, and cloud.<hr />- Each wave alters client needs and introduces new tools.<hr />- Consulting firms must guide clients through these changes with expertise.<hr />- Staying relevant requires foresight and adaptability to tech shifts.<hr />- Key inquiries for positioning: <hr />  - Future technology trends?<hr />  - Skills and knowledge alignment?<hr />  - Lessons from previous cycles?<hr />  <hr />- Adaptation triggers: Major platform shifts or breakthroughs.<hr />- **Information gathering**: Use public sources and internal discussions to compile data.<hr />- **Data understanding**: Analyze trends and keywords, assess community feedback.<hr />- **Decision-making**: Determine potential technologies, develop skills, create content, and engage with early events.<hr /><hr />- Structured, data-driven approach ensures methodical evaluation of new tech.<hr />- Internal tools enhance this process:<hr />  - Knowledge base for consistent data collection.<hr />  - Tech Radar for trend evaluation and tech adoption decisions.<hr />  <hr />- Aim: Manage tech changes predictably and enhance growth.<hr />- Collective contribution is vital: <hr />  - Share articles and insights.<hr />  - Document project observations.<hr />  - Suggest tool and process improvements.<hr /><hr />- Involvement strengthens overall readiness for future developments.","tags":"business growth handbook","authors":"thanh","date":{"days":20178},"category":"handbook"},"60":{"file_path":"handbook/compliance.md","title":"Compliance","description":"Our commitment to ethical standards and compliance","spr_content":"- Ethical integrity is paramount. High standards equal trust.<hr />- Code of conduct is a team agreement: respect, integrity, core values.<hr />- Zero tolerance for harassment: no offensive comments, intimidation, harassment through photography, disruptions, inappropriate touching, or unwanted attention.<hr />- Report harassment to team leads or Han; confidentiality assured.<hr />- Corruption and bribery are strictly forbidden: no bribes, facilitation payments, conflicts of interest, or improper influence.<hr />- Financial matters must be transparent, accurately recorded, and properly documented.<hr />- Data privacy is crucial: collect only necessary data, store securely, limit access, use for intended purpose, adhere to privacy laws.<hr />- NDA and intellectual property policies protect confidentiality and competitive position.<hr />- Support for side projects exists, but conflicts of interest must be avoided; moonlighting policy outlines acceptable activities.<hr />- Responsibility to report violations is collective; methods include talking to team leads, contacting Han, or emailing ops@d.foundation.<hr />- Retaliation against reporters is strictly prohibited; privacy and thorough investigation guaranteed.<hr />- Policy violations can lead to warnings, performance plans, termination, or legal action, assessed case-by-case.<hr />- Compliance training provided during onboarding, with regular updates and annual refreshers.<hr />- Ongoing improvement of compliance efforts encouraged; suggestions welcome.<hr />- Building a trustworthy culture relies on collective responsibility for maintaining high standards.","tags":"compliance handbook","authors":"tieubao","date":{"days":19724},"category":"handbook"},"61":{"file_path":"handbook/community/icy-swap.md","title":"How to swap ICY to BTC","description":"A friendly guide to converting your ICY tokens to Bitcoin (BTC) using our platform. We'll walk you through the process step by step, from wallet setup to transaction monitoring.","spr_content":"- Purpose: Convert ICY to Bitcoin (BTC). <hr />- Prerequisites: <hr />  - Bitcoin wallet required for receiving funds.<hr />  - ETH on the Base network for gas fees.<hr />- Bitcoin wallet options: Electrum, Trust Wallet, UniSat.<hr />- ETH assistance: Available through Dwarves Foundation Discord.<hr /><hr />Steps to swap:<hr />1. **Connect to icy.so**:<hr />   - Visit icy.so.<hr />   - Click \"Connect Wallet\" (choose MetaMask, Coinbase Wallet, etc.).<hr />   - Ensure connection is on the Base network.<hr /><hr />2. **Execute the swap**:<hr />   - Set ICY as source token and BTC as destination token.<hr />   - Minimum swap: 20 ICY.<hr />   - Input BTC wallet address and click \"Swap\".<hr />   - Confirm transaction in the wallet.<hr /><hr />3. **Monitor transaction**:<hr />   - Check \"Recent Transactions\" for updates.<hr />   - Hover for details, including service fee.<hr />   - \"Pending\" status indicates processing.<hr /><hr />Important notes:<hr />- Minimum swap amount: 20 ICY.<hr />- Service fee: 3,000 units.<hr />- Gas fees: Paid in ETH on Base network.<hr />- Processing time may vary due to network conditions.<hr />- Assistance available on Dwarves Foundation Discord for support.","tags":"icy","authors":"quang","date":{"days":20151},"category":"handbook > community"},"62":{"file_path":"handbook/community/icy-worth.md","title":"How much is your ICY worth","description":"Learn how ICY's value has evolved from a fixed USDC-backed model to a dynamic Bitcoin-backed system. We'll explain what this means for your holdings and how to track your ICY's value.","spr_content":"- ICY transitions from a USDC-backed model to a dynamic, Bitcoin-backed model.<hr />- Previous model: steady value at `1.5 USDC`, ensuring stability and predictability.<hr />- New model: value linked to Bitcoin through liquidity pools, introducing volatility.<hr />- Primary value determinants:<hr />  - Current Bitcoin market price.<hr />  - Liquidity pool conditions.<hr />  - Market demand for ICY.<hr />- Value mechanics: <hr />  - More BTC in pool = higher ICY value.<hr />  - More ICY in pool = lower ICY value.<hr />- Examples clarify value fluctuations with Bitcoin’s price changes:<hr />  - Initially, `1 ICY = 0.00003 BTC`, worth `$1.50` if BTC is at `$50,000`.<hr />  - Price increase to `$60,000` raises ICY to `$1.80`.<hr />  - Liquidity impacts show: more BTC shifts to `1 ICY = 0.000035 BTC`, raising ICY to `$1.75`, while more ICY leads to `1 ICY = 0.000025 BTC`, dropping value to `$1.25`.<hr />- Liquidity management involves monthly Bitcoin additions and weekly ICY minting.<hr />- Shift rationale: <hr />  - Adapting to the evolving crypto landscape.<hr />  - Growth potential linked to Bitcoin.<hr />  - Dynamic system reducing stablecoin reliance.<hr />  - Reflecting real-world trading environments.<hr />- ICY value now fluctuates with market dynamics; holders advised to monitor Bitcoin performance.","tags":"icy","authors":"hnh","date":{"days":20153},"category":"handbook > community"},"63":{"file_path":"handbook/knowledge-base.md","title":"Our second brain","description":"This page explains our knowledge base, which is basically our team's shared brain where we keep important stuff. Using it helps us work smarter together and makes sure we don't lose good ideas or lessons learned.","spr_content":"- Knowledge base as team's shared memory or \"second brain.\"<hr />- Central repository for important work-related information.<hr />- Facilitates collaboration, decision-making, and reduces redundancy.<hr />- Records processes and learning experiences.<hr /><hr />Types of information:<hr />1. Private information: <hr />   - Team details, project notes, client data, financial reports.<hr />   - Confidential for daily operations.<hr />   <hr />2. Public information:<hr />   - Industry news, technological advancements, job openings, competitor insights.<hr />   - Helps in identifying broader opportunities.<hr />   <hr />- Integrates important discussions and decisions from Basecamp and Discord.<hr /><hr />Utilization:<hr />- Not just a file dump, enhances smart working practices.<hr />- Tools for:<hr />   - Finding company policies and methodologies.<hr />   - Accessing past project data and reports.<hr />   - Staying updated on industry trends.<hr />  <hr />- Represents collective team knowledge and growth.<hr /><hr />Maintenance:<hr />- Requires ongoing contributions and updates from all members.<hr />- Core team manages organization and upkeep.<hr />- Collective effort to enhance the knowledge base symbolizes commitment to quality work.","tags":"brain handbook knowledge-base","authors":"tieubao","date":{"days":19803},"category":"handbook"},"64":{"file_path":"opensource/README.md","title":"☀️ Open source","description":"How we support, contribute to, and reward open source development in our community","spr_content":"- Open source underpins daily software; belief in community collaboration enhances products.<hr />- Emphasis on connection with builders and creators; process is valued alongside outcomes.<hr />- Elegance of code and community learning are central themes.<hr />- Commitment to supporting open source through recognition, collaboration, financial rewards.<hr />- Key open source contributions: libraries, boilerplates, workflow tools, team experiments, team projects, essential products.<hr />- Ownership improves software quality; responsible management of projects enhances investment of effort.<hr />- Encouragement for contributors to host projects under their names unless Dwarves-led.<hr />- Recognition through Dwarves badge and hall of fame for project contributions.<hr />- Monetary rewards for contributors based on project characteristics: <hr />  - Small improvements: 10 ICY<hr />  - New features: 20-50 ICY<hr />  - Major work: 50-150 ICY<hr />  - Publications on tech trends: 20-50 ICY<hr />  - OSS products: 50-250 ICY based on impact, plus monthly rewards for active maintainers.<hr />- Hall of fame highlights community contributions; strong appreciation for members’ effort.<hr />- Open source project showcase encourages exploration and participation.<hr />- Recognition of Dwarves members' contributions across various projects and pull requests.<hr />- Advocacy for community unity in open source; acknowledgment of individuals' contributions essential.<hr />- Call to action for members to document their contributions and join the movement for collective impact in open source.","tags":"community open-source","authors":"monotykamary thanh","date":{"days":20007},"category":"opensource"},"65":{"file_path":"careers/culture.md","title":"Culture","description":"Keep learning and growing. We started this team out of software practice advancement.","spr_content":"- **Continuous Growth**: Emphasize learning and adaptation; knowledge, like software, must evolve for future utility.  <hr />- **Purpose-driven**: Every action should reflect a clear purpose; prioritize value delivery over mere effort.  <hr />- **Effectiveness Over Productivity**: Focus on high-value tasks; avoid busyness; effectiveness fosters open time for innovation.  <hr />- **Simplicity is Key**: Use straightforward language and solutions; simplicity enhances understanding.  <hr />- **Extra Effort Matters**: Go beyond minimum requirements; small additional efforts lead to significant impacts.  <hr />- **Long-term Thinking**: Consider future consequences of current choices; all actions affect long-term outcomes.  <hr />- **Pay It Forward**: Foster collaborative culture; mentoring and sharing knowledge enhances collective progress.  <hr />- **Shared Goals**: Align team efforts towards common objectives to enhance synergy and execution.  <hr />- **Value Different Perspectives**: Embrace diversity in thought and experience; it enriches problem-solving approaches.  <hr />- **Collaborative Decision-Making**: Foster team input; support individual improvement while prioritizing collective benefits.  <hr />- **Software's Transformational Role**: Acknowledge software's ongoing world-changing influence; commit to future tech innovations like Web3 and AI.  <hr />- **Engineering Discipline**: Ensure structured collaboration; adherence to software engineering principles enhances software quality and long-term viability.  ","tags":"career","authors":"duy nikki","date":{"days":19706},"category":"careers"},"66":{"file_path":"playbook/design/design-sprint.md","title":"Design Sprint","description":"Design sprint mostly applied to the Exploration phase. Friday is usually Education event or Lab projects at Dwarves Design, learning and continuous professional and personal development are in the core of our DNA. No one wants to settle, everyone wants to take the next step forward.","spr_content":"- **Design Sprint**: A four-day intensive process focused on solving critical business problems through design, prototyping, and customer testing. Primarily applied during the Exploration phase.<hr /><hr />- **Purpose**: Collaborate and make rapid advancements on a problem using design thinking methods.<hr /><hr />- **Stages**:<hr />  - **Day 1 - Map & Sketch**: Identify the problem; gather insights from experts; define key questions; prioritize ideas through Note-and-Vote; map initial customer journey; sketch potential solutions.<hr />  - **Day 2 - Decide & Storyboard**: Select and refine one concept; vote on appealing elements; outline a 6-step customer experience; create a coherent storyboard with low-fidelity wireframes for user flow.<hr />  - **Day 3 - Prototype**: Assemble the prototype; assign roles (Maker, Collector, Writer, Stitcher, Engagement Coordinator) based on skill sets; utilize tools like Sketch, Adobe XD, Invision for wireframing.<hr />  - **Day 4 - Test**: Conduct user tests with qualitative interviews (5-8 participants); gather feedback via notes and post-its; analyze responses to derive insights.<hr /><hr />- **Roles**:<hr />  - **Facilitator**: Oversees the sprint direction.<hr />  - **Recorder**: Documents the process and outcomes.<hr />  - **Product Owner**: Final decision-maker on product vision.<hr /><hr />- **Materials**: Post-it Notes, Sharpies, blank paper, whiteboard, markers, voting stickers, easel pad.<hr /><hr />- **Room Setup**: Spacious environment with whiteboards for collaborative work and sketch display.<hr /><hr />- **Iteration**: Multiple sprints may be needed in the Exploration phase for optimal solutions; Agile methods continue in the Detailed Design phase for finalization and user testing before client handoff. <hr /><hr />- **Culture**: Emphasis on continuous learning and development at Dwarves Design; strive for improvement and innovation.","tags":"UX design guideline learning","authors":"nikki tieubao","date":{"days":19646},"category":"playbook > design"},"67":{"file_path":"playbook/design/lean-canvas.md","title":"Lean Canvas","description":"Lean Canvas is an adaptation of Business Model Canvas by Alexander Osterwalder which Ash Maurya created in the Lean Startup spirit (Fast, Concise and Effective startup). Lean Canvas promises an actionable and entrepreneur-focused business plan. It focuses on problems, solutions, key metrics, and competitive advantages.","spr_content":"- Lean Canvas: Entrepreneur-focused business planning tool, derived from Business Model Canvas.<hr />- Emphasizes actionable insights and rapid development for startups.<hr />- Key components: problem, solution, customer segments, unique value proposition.<hr /><hr />1. **Problem:** Identify the central frustrations of consumers; articulate jobs they need to do and associated pains.<hr />   - Existing alternatives: Analyze current competitors and methods; assess failures to serve customer needs.<hr /><hr />2. **Customer Segments:** Define 3-4 key personas affected by identified problems.<hr />   - Consider job titles, industries, demographics, and salary ranges.<hr />   - Early adopters are crucial; they shape first iterations of the business.<hr /><hr />3. **Unique Value Proposition:** Clearly state what differentiates the product and highlights its value.<hr />   - Communicate target segment, primary problem, benefits received, and unique delivery method in one sentence.<hr />   - Structure: “We help (who?) achieve (what benefit?) by (how?).”<hr /><hr />4. **Solution:** Articulate specific solutions addressing consumer problems.<hr />   - Define essential features that position the product as superior in meeting needs.<hr /><hr />5. **Channels:** Determine effective methods for consumer interaction and promotion.<hr />   - Explore print ads, social media, events, or word-of-mouth strategies.<hr /><hr />6. **Revenue Streams:** Outline income generation strategies.<hr />   - Include pricing models, subscription fees, ad sales, or asset sales.<hr /><hr />7. **Cost Structure:** Assess costs associated with launching and sustaining the product.<hr />   - Consider development, marketing, and employee expenses.<hr /><hr />8. **Key Metrics:** Establish methods for measuring consumer engagement and product usage.<hr />   - Utilize metrics like SASS, AARRR, user downloads, and quotes.<hr /><hr />9. **Unfair Advantage:** Identify competitive edges that ensure reliability and consumer confidence.<hr />   - Leverage existing resources or capabilities that are hard to replicate.","tags":"business operations startup","authors":"tieubao","date":{"days":19646},"category":"playbook > design"},"68":{"file_path":"playbook/operations/mbti-type-istj.md","title":"MBTI Type ISTJ","description":"All about the ISTJ personality type","spr_content":"- **Work Environment Preferences**: Favor clear norms; culture is performance-driven; value tangibility over conceptual ideas; appreciate defined responsibilities and planning; avoid risks without substantial facts.<hr /><hr />- **ISTJ Career Satisfaction**: Thrive in roles utilizing technical skills with tangible outputs; adhere to rules and regulations; seek long-term security; prefer stable environments; require hierarchical structure; limit risk-taking; appreciate independent work and timely completion; desire potential for advancement.<hr /><hr />- **Career Exploration Approach**: Conduct thorough research; assess options logically; incorporate personal values into decisions; avoid hasty choices; explore unfamiliar avenues intentionally.<hr /><hr />- **Job Search Behavior**: Investigate various fields thoroughly; accept duration of the search; rely on strong personal connections for networking; prepare documentation carefully; highlight achievements; adhere to deadlines; follow up with gratitude.<hr /><hr />- **Interview Dynamics**: Use evidence to present knowledge; may appear reserved; must demonstrate enthusiasm proactively.<hr /><hr />- **Work Characteristics**: Hardworking and organized; set and achieve tangible goals; adhere to procedures; prefer predictability; comfortable in teamwork but excel independently; avoid unnecessary risks; require minimal supervision.<hr /><hr />- **Awareness in Work**: Challenge adapting to change; resist untested ideas; may focus on daily routines rather than future opportunities; struggle with delegating; could become critical if unappreciated.<hr /><hr />- **Team Collaboration**: Complete assigned tasks diligently; thrive with clear individual roles; favor logical solutions; dislike personal conflicts; share little personal information.<hr /><hr />- **Teamwork Awareness**: May be perceived as picky; need to improve rapport with teammates; may become frustrated with non-cooperative members; should work on timely feedback and maintain positivity.<hr /><hr />- **Leadership Style**: Seek leadership roles; focus on fairness and consistency; base decisions on factual knowledge; adopt traditional leadership approaches; reward rule-followers and task completers.<hr /><hr />- **Communication Style**: Communicate clearly and directly; simplify complex information; prioritize organized and factual dialogue; listen effectively; provide structured feedback.<hr /><hr />- **Communication Improvement Areas**: Share personal viewpoints; build connections; recognize others’ feelings; show appreciation for accomplishments.<hr /><hr />- **Decision Making Approach**: Employ logical and sensible reasoning; gather facts objectively; consider impacts; weigh options against personal values; may need to slow down for comprehensive evaluation.<hr /><hr />- **Stress Triggers**: Overwhelmed by inadequate performance of others; disrupt routine unfavorably; struggle with broad information; feel rushed; have to make irrational changes.<hr /><hr />- **Stress Responses**: Heightened detail orientation; rely on past experiences for solutions; may become overwhelmed or catastrophize; can act impulsively under stress.<hr /><hr />- **Stress Reduction Advice**: Prepare for worst-case scenarios; keep perspective on stressors; focus on future significance; try uncharacteristic actions to gain new insights.","tags":"ISTJ mbti operations people","authors":"namtran","date":{"days":18828},"category":"playbook > operations"},"69":{"file_path":"playbook/operations/email-template/hung-king-commemoration-day.md","title":"Hung King Commemoration Day","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- Holiday Announcement from Dwarves Foundation.  <hr />- Gratitude to [company name] for cooperation.  <hr />- Celebrating Hung King Commemoration Day (10th day, 3rd lunar month).  <hr />- Honoring contributions of Hung Kings, founders of Vietnam.  <hr />- Public holiday schedule in accordance with government's regulations for [year].  <hr />- Closure: from <-date-> to end of [date].  <hr />- Resume business on [date].  <hr />- Queries/orders required 3 days to 1 week before holiday.  <hr />- Emergency contact: WhatsApp (+1) 818 408 6969.  <hr />- Apologies for any inconvenience caused.  <hr />- Thank you for understanding.  <hr />- Signed: Team Dwarves.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"70":{"file_path":"playbook/operations/email-template/follow-up-onboarding-items.md","title":"Follow-up Onboarding Items","description":"The email template is inform new employee about company communication channel and mentor profile. - nikki - hnh","spr_content":"- Welcome to Dwarves Team. <hr />- Complete onboarding items for full integration.<hr />- Join Dwarves Server: <https://discord.gg/dfoundation><hr />- Join Pod Town Server: <http://discord.gg/pod-town><hr />- Explore The Dwarves Handbook: <https://github.com/dwarvesf/handbook><hr />- Setup TransferWise: [https://wise.com](https://wise.com/)<hr />- Fill up Metabase link for Basecamp Integration (details in separate email).<hr />- Follow up on your 60-day plan. <hr />- Respond to Welcome Onboard email regarding Contractor Agreement unless already done.<hr />- Post-server join support from -mentor1- and -Ops- available on Discord.<hr />- Contact Duy at 0906906731 for urgent issues.<hr />- Regards from Dwarves Foundation.","tags":"email hiring operations template","authors":"","date":{"days":18262},"category":"playbook > operations > email-template"},"71":{"file_path":"playbook/operations/email-template/thank-you-letter.md","title":"Thank you letter","description":"The email template is to show appreciation to partner after the project closed.","spr_content":"- Express gratitude for invaluable cooperation.  <hr />- Thank the recipient for trusting in the service provided.  <hr />- Acknowledge the recipient's credibility and its importance to Dwarves Foundation.  <hr />- Hope the outcome meets expectations.  <hr />- Highlight pleasure in partnership during the project.  <hr />- Emphasize quality and customer service as distinguishing factors.  <hr />- Recognize continued patronage and suggestions as vital for growth.  <hr />- Anticipate future collaboration.  <hr />- Wish the recipient an amazing journey ahead.  <hr />- Sign off from Team Dwarves.  ","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"72":{"file_path":"playbook/operations/email-template/referral-bonus-confirmation-note.md","title":"Referral Bonus Confirmation Note","description":"Whenever a Dwarves refers to a teammate that successfully deployed to a project, we use this template to announce the official start date of their referral bonus.","spr_content":"- **Use case:** Inform teammates of successful referral bonus activation.<hr />- **Title:** Dwarves Foundation: Referral Bonus Confirmation Note<hr />- **Recipient:** [name]<hr />- **Purpose:** Confirm referral bonus for [referred employee - role]: [project].<hr />- **Notification:** [referred employee] successfully deployed.<hr />- **Policy reference:** [Referral bonus policy](https://github.com/dwarvesf/handbook/blob/master/how-we-hire.md#referral).<hr />- **Bonus details:** <hr />  - Amount: [$]<hr />  - Payment: Included in monthly payslip, contingent on project invoice completion.<hr />- **Acknowledgment:** Appreciation for facilitating a new team member.<hr />- **Contact:** Open for questions regarding effective date.<hr />- **Closing:** Regards.","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"73":{"file_path":"playbook/operations/email-template/salary-increment.md","title":"Salary Increment Announcement","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- Title: Salary Increment Notification<hr />- Recipient: [name]<hr />- Message highlights: <hr />  - Acknowledges outstanding performance as [current position].<hr />  - Recognizes dedication and impact on objectives and goals.<hr />  - Official announcement of salary increase. <hr />  - Details provided: <hr />    - Current salary: <hr />    - New salary: <hr />    - Effective date: <hr />  - Enhancing team morale and gratitude: <hr />    - Warm congratulations from Dwarves Foundation.<hr />    - Affirmation of the recipient's value to the team.<hr />    - Hope for long-term collaboration. <hr />- Closing: Best regards, Dwarves Foundation.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"74":{"file_path":"playbook/operations/email-template/assignment-invitation-2.md","title":"Assignment Inviation (Skip pre-assessment)","description":"The email template is to invite camdidate to the assignment round in case the pre-assessment is skipped.","spr_content":"- **Context:** Dwarves Foundation, recruitment communication.<hr />- **Purpose:** Assignment invitation for second-round candidates.<hr />- **Congratulations:** Recognition of progress to the next stage.<hr />- **Position:** Specific job title reference.<hr />- **Exercise:** Small task designed to assess compatibility with role.<hr />- **Link Provided:** Resource for assignment access.<hr />- **Interview Preparation:** Intention to facilitate discussion points.<hr />- **Submission Deadline:** Specified date for assignment completion.<hr />- **Open for Questions:** Encourages candidate inquiries regarding the task.<hr />- **Tone:** Professional and encouraging.","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"75":{"file_path":"playbook/operations/email-template/assignment-invitation.md","title":"Assignment Inviation","description":"The email template is to invite camdidate to the assignment round.","spr_content":"- Title: Dwarves Foundation - Assignment Invitation  <hr />- Context: Invitation for assignment completion after pre-assessment test.  <hr />- Recipient: Individual named [**name**].  <hr />- Achievement: Passed Pre-Assessment test for [**position**].  <hr />- Purpose: Match potential with the role.  <hr />- Action Required: Complete assignment at provided [**link**].  <hr />- Outcome: Demonstrates task approach; serves as interview basis.  <hr />- Submission Deadline: By [**date**].  <hr />- Communication: Open for questions regarding the assignment.  <hr />- Signatory: Dwarves Foundation.  ","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"76":{"file_path":"playbook/operations/email-template/new-year-day.md","title":"New Year Day","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- Dwarves Foundation expresses gratitude for cooperation.<hr />- Acknowledgment of the significance of New Year's Eve and New Year Day.<hr />- Celebratory closure to transition from last year to the new one.<hr />- Holiday schedule based on government regulation for [**year**].<hr />- Closure period: from [*date*] to the end of [**date**].<hr />- Resumption of normal business hours on [**date**].<hr />- Requests for queries and orders must be made 3 days to 1 week prior to holiday start.<hr />- Post-holiday processing of outstanding queries assured.<hr />- Emergency contact number: (+**84**) **282 246 0246**.<hr />- Apology for any inconvenience caused.<hr />- Encouragement to enjoy the holiday.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"77":{"file_path":"playbook/operations/email-template/welcome-onboard.md","title":"Welcome Onboard","description":"The email template is inform new employee about the onboarding meeting and information request.","spr_content":"**Dwarves Foundation Onboarding Message**<hr /><hr />- Welcome message to new hire <hr />- Position confirmation <hr />- Onboarding details:<hr />  - Date unspecified <hr />  - Time: 10:00 AM <hr />  - Link for Google Calendar provided <hr />- Remote work option due to pandemic <hr />- Required information for Contract Agreement:<hr />  - Photo of ID/Passport<hr />  - Digital portrait/avatar (clean background, black/white t-shirt)<hr />  - Home address<hr />  - Bank account information<hr />  - Phone number<hr />  - Current MBTI type <hr />- MBTI test link provided <hr />- Encouragement for questions <hr />- Closing regards from Dwarves Foundation","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"78":{"file_path":"playbook/operations/email-template/welcome-to-dwarves-update.md","title":"Welcome to Dwarves Updates","description":"The email template is to announce every updates to the comminity and subscriber.","spr_content":"- Dwarves Team interaction platforms: Website, Facebook, Discord.<hr />- Expressing gratitude for engagement.<hr />- Introduction to **Dwarves Updates**: Monthly newsletter.<hr />- Purpose: Share lessons learned, future direction, team pride.<hr />- Timing: Short read for morning coffee.<hr />- Organization: Dwarves Foundation - innovative tech firm.<hr />- Services: Tech solutions, offshore development, technical consultancy.<hr />- Inclusivity: Invites visitors to join the journey.<hr />- Previous issues accessible at [**log.d.foundation**](https://log.d.foundation/).<hr />  - Highlights: <hr />    - **2021 in Review**<hr />    - **Engineering Organization Structure** (Nov 30)<hr />    - **Path to growth at Dwarves** (Oct 31)<hr />- Option for unsubscribe provided.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"79":{"file_path":"playbook/operations/email-template/rejection-email.md","title":"Rejection","description":"The email template is to reject a candidate that is not qualified in the recruitment process.","spr_content":"- **Title**: Dwarves Foundation - Application Result / Interview Result.<hr />- **Purpose**: Communicate rejection of application/interview. <hr />- **Tone**: Professional, respectful, and empathetic.<hr />- **Personalization**: Use recipient's name and specific position.<hr />- **Appreciation**: Acknowledge interest and time spent.<hr />- **Rejection Reason**: Position not a best match at the moment.<hr />- **Future Prospects**: Keep CV on file for future opportunities.<hr />- **Engagement**: Invite to community (Dwarves Discord) and updates (Dwarves Fanpage).<hr />- **Well Wishes**: Encourage in future endeavors.<hr />- **Closing**: Best regards from Dwarves Foundation.","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"80":{"file_path":"playbook/operations/email-template/confirm-resume-date.md","title":"Confirm Employee's Resume Date Day","description":"The email template is to welcome employee back to work.","spr_content":"- Title: Dwarves Foundation - Welcome Back  <hr />- Greeting: Warm welcome to returning employee.  <hr />- Hope employee has arrangements made.  <hr />- Confirmation of return includes:  <hr />  - Resume date  <hr />  - Office hours  <hr />- Benefits package remains unchanged.  <hr />- Acknowledgment of adjustment period for employee.  <hr />- Encouragement to regain pace and express enthusiasm.  <hr />- Collective joy of Dwarves in welcoming back employee.  <hr />- Closing: Best regards from Dwarves Foundation.  ","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"81":{"file_path":"playbook/operations/email-template/milestone-sign-off.md","title":"Milestone sign-off","description":"The email template is to confirm about the milestone with client.","spr_content":"- Title: Project XX - Milestone Signoff<hr />- Addressed to: [Name]<hr />- Contextual reference: Previous meeting discussion<hr />- Action required: Sign off on last milestone - [name of milestone]<hr />- Project context: [project]<hr />- Confirmation request: Please confirm via email<hr />- Subsequent action: Invoice will be sent after confirmation<hr />- Closing: Thank you for collaboration<hr />- Sender: Dwarves Foundation","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"82":{"file_path":"playbook/operations/email-template/farewell.md","title":"Farewell Letter","description":"The email template is to inform employee that he/she failed the probation.","spr_content":"- Subject: Farewell letter from Dwarves Foundation (DF).<hr />- Recipient: [**name**].<hr />- Gratitude expressed for contributions over three months.<hr />- Conclusion of probationary period due to unmet performance expectations.<hr />- Acknowledgment of time and effort contributed to the team.<hr />- Invitation to reapply for future positions in the recipient's area of expertise.<hr />- Well wishes for future endeavors.<hr />- Signed by Dwarves Foundation.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"83":{"file_path":"playbook/operations/email-template/offer-letter.md","title":"Offer Letter","description":"The email template is to annouce about new employment.","spr_content":"- Title: Dwarves Foundation - Offer letter<hr />- Purpose: Employment offer notification<hr />- Recipient: [name]<hr />- Position: [position]<hr />- Interview Process: Candidate performed well<hr />- Fit: Candidate deemed a good match for the team<hr />- Employment Type: Full-time/Part-time<hr />- Office Hours: 9.30am - 6.30pm<hr />- Salary: [salary] VND/month (Gross)<hr />- Probation: [probation duration] months<hr />- Probation Salary: [salary] VND/month<hr />- Start Date: [start date time]<hr />- Contract Type: Signed with LLC<hr />- Action Required: Confirm acceptance by replying to the email<hr />- Additional Inquiry: Confirm suitability of start date<hr />- Anticipation: Excitement for candidate joining the team<hr />- Sender: Dwarves Foundation","tags":"email hiring operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"84":{"file_path":"playbook/operations/email-template/international-labour-day.md","title":"International Labour Day","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- **Subject:** Holiday Announcement from Dwarves Foundation.<hr />- **Gratitude:** Appreciation for cooperation.<hr />- **Historical Context:** April 30, 1975 - Fall of Saigon, end of the Vietnam War, liberation of Southern Vietnam.<hr />- **Upcoming Holiday:** International Labour Day - May 1st.<hr />- **Closure Period:** Dwarves Foundation will be closed from [**date**] to [**date**].<hr />- **Business Resumption:** Normal hours resume on [**date**].<hr />- **Advance Requests:** Queries and orders must be made 3 days to 1 week in advance.<hr />- **Post-Holiday Processing:** Delayed requests addressed upon return.<hr />- **Emergency Contact:** WhatsApp (+1) 818 408 6969 for urgent issues.<hr />- **Apology:** Acknowledge inconvenience of closure.<hr />- **Well Wishes:** Hope for enjoyable holiday experience. <hr />- **Sign-off:** Regards from Team Dwarves Foundation.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"85":{"file_path":"playbook/operations/email-template/tet-holiday.md","title":"Tet Holiday","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- Dwarves Foundation expresses gratitude for cooperation.<hr />- Tet Holiday: significant Vietnamese cultural celebration. <hr />- Marks spring's arrival, family reunions, and visiting relatives.<hr />- Public holiday schedule: closure dates from [**date**] to [**date**]; resume on [**date**].<hr />- Queries/orders must be submitted 3 days to 1 week before holidays. <hr />- Post-holiday, prompt processing of late queries/orders.<hr />- Emergency contact: (**+84**) **282 246 0246**.<hr />- Apologies for inconvenience; appreciation for understanding.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"86":{"file_path":"playbook/operations/email-template/interview-invitation.md","title":"Interview Invitation","description":"The email template is to annouce the interview date with the client.","spr_content":"- Title: Interview Invitation from Dwarves Foundation  <hr />- Recipient: [**name**]  <hr />- Purpose: Confirm interview schedule for [**position**]  <hr />- Duration: 60 minutes  <hr />- Date & Time: DD/MM/YYYY - HH:MM AM/PM  <hr />- Location: Floor 18, Block Iris 3, Ha Do Centrosa, 118 3/2 street, District 10, HCMC  <hr />- Parking: Basement bike parking  <hr />- Directions: Use elevator to 1st floor, contact HR Van at 0979291600  <hr />- Requirement: Bring laptop for quick assignment  <hr />- Contact: Hotline 0282 246 0 246  <hr />- Closing: Questions welcome, anticipation of the interview  <hr />- Sign-off: Best regards, Dwarves Foundation  ","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"87":{"file_path":"playbook/operations/email-template/national-day.md","title":"National Day","description":"The email template that you need to send to client when it's near holiday to announce about the absence.","spr_content":"- Dwarves Foundation: Express gratitude.<hr />- Vietnam National Day: Commemorates independence (September 2, 1945).<hr />- Public holiday regulation (2019): Closure schedule communicated.<hr />- Foundation closed: [**date**] to [**date**].<hr />- Normal business resumes: [**date**].<hr />- Queries/orders: Submit 3 days to 1 week prior to holiday.<hr />- Post-holiday processing for late requests.<hr />- Contact for emergencies: (+84) 282 246 0246.<hr />- Apologies for inconvenience.<hr />- Appreciation for understanding.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"88":{"file_path":"playbook/operations/mbti-type-istp.md","title":"MBTI Type ISTP","description":"All about the ISTP personality type","spr_content":"### ISTP Work Environment and Career Insights  <hr /><hr />**Work Environment Preferences:**<hr />- Practical, skill mastery; tangible results.<hr />- Variety; transition in and out of activities.<hr />- Disregard for rules aids effective emergency responses.  <hr /><hr />**Career Satisfaction Characteristics:**<hr />- Technical application in practical settings.<hr />- Skill mastery for specific tasks.<hr />- Hands-on work; tool usage.<hr />- Clear project guidelines for concrete outcomes.<hr />- Collaboration with respected, competent individuals.<hr />- Opportunities for problem-solving and crisis management.<hr />- Independent work with minimal supervision.<hr />- Challenging, enjoyable tasks with little oversight.  <hr /><hr />**Career Exploration Behavior:**<hr />- Compile specific career facts; focus on current and predictive opportunities.<hr />- Take time to assess options; uncertainty about choices.  <hr /><hr />**Job Search Dynamics:**<hr />- Collect job-related info; organize structured job search plans.<hr />- Extra effort required; convey experience through documentation.<hr />- Risk-taking; adapting to new job possibilities, networking selectively.  <hr /> <hr />**Interview Behavior:**<hr />- Quiet, reserved demeanor; straightforward responses.<hr />- Practice discussing skills; cautious about detail and future scenarios.  <hr /><hr />**Workplace Traits:**<hr />- Concentration on interesting projects; organized information.<hr />- Attraction to tangible products; focus on active task completion.<hr />- Preference for solo work; mutual respect for competent colleagues.<hr />- Potential rule-breaking for efficiency; minimize unnecessary discussions.<hr />- Flexibility in workload responses; calm under pressure.  <hr /><hr />**Awareness Needs at Work:**<hr />- Additional planning time needed; anticipate future possibilities.<hr />- Risk of being easily distracted by new projects; patience for task completion; might appear disorganized.<hr />- Boredom with routine; benefit from improved organization.<hr />- Focus on immediate solutions; inclination for spontaneity may appear irresponsible.  <hr /> <hr />**Team Dynamics:**<hr />- Provide necessary data; organize and analyze efficiently.<hr />- Logical conflict resolution; motivate teammates; fair treatment.  <hr /><hr />**Potential Team Challenges:**<hr />- Avoidance of interpersonal conflicts; irritation from focus on specifics.<hr />- Frustration with overly emotional teammates; need for appreciation and rapport-building.  <hr /><hr />**Leadership Style:**<hr />- Quiet, example-setting approach; freedom from rigid policies.<hr />- Information compilation to persuade; logical decision-making; expect equal contributions.  <hr /><hr />**Communication Style:**<hr />- Preference for logical, objective information; minimal unnecessary communication.<hr />- Reliance on non-verbal cues; dislike of superficiality.  <hr /><hr />**Communication Awareness Needs:**<hr />- Intentional sharing of thoughts; comfort in emotional expression.<hr />- Consideration for others’ feelings; active listening and feedback provision.  <hr /><hr />**Decision-Making Approach:**<hr />- Decisions based on tangible data; rational evaluation of options.<hr />- Examination of broader implications; integration of personal values.  <hr /><hr />**Stress Triggers:**<hr />- Emotion control issues; strict guidelines; perceived incompetence of others.<hr />- Illogical situations; overwhelmed by tasks; excessive sociability.<hr />- Emotional co-worker interactions.  <hr /><hr />**Stress Response:**<hr />- Heightened focus on logic; resistance to help.<hr />- Sensitivity to others' perceptions; feelings of alienation.<hr />- Potential emotional outbursts under extreme stress.  <hr /><hr />**Stress Reduction Strategies:**<hr />- Analyze facts for clarity; engage in independent, divertive activities.<hr />- Focus on personal values; reenergize through solitude.<hr />- Disregard others' perceptions.","tags":"ISTP mbti operations people","authors":"namtran","date":{"days":18833},"category":"playbook > operations"},"89":{"file_path":"playbook/engineering/estimation-guidelines.md","title":"Estimation Guidelines","description":"When we conduct an estimation, it is recommended to abandon the transitional “exact hours” assessment method, instead, use the story point based on the Fibonacci number (1, 2, 3, 5, 8, 13, 21…). The number expresses an estimation of the overall effort required to fully implement a backlog item or any piece of work.","spr_content":"- Estimation method: transition from \"exact hours\" to story points, using Fibonacci sequence.<hr />- Story points represent effort required for backlog items.<hr />- Complexity, uncertainty, and effort are key factors in estimation.<hr /><hr />| Story Points | Reference                          | Uncertainty           | Risk                          | Efforts                     | FE Example                                            | BE Example                              |<hr />|--------------|------------------------------------|-----------------------|-------------------------------|-----------------------------|------------------------------------------------------|-----------------------------------------|<hr />| **1**        | < 0.25 days, single FE or BE      | Low (100% clear)      | Low                           | < 1 hour                   | Small UI updates, minimal impact                     | Configurations only                     |<hr />| **2**        | < 0.5 days, more FE or BE work    | Low (some changes)    | Low                           | 0.5 - 1 day                | Calculate numbers, small UI change on multiple screens| Minor API changes                       |<hr />| **3**        | ~ 1 day, logic changes             | Low (check logic)     | Low                           | ~ 1 working day            | -                                                    | -                                       |<hr />| **5**        | 1-2 days, simple new endpoint      | Low - Medium           | Medium                        | ~ 3 working days           | -                                                    | -                                       |<hr />| **8**        | Half a Sprint, multiple endpoints   | Medium - High         | Medium to High               | ~ 5 working days           | -                                                    | -                                       |<hr />| **13**       | POC work, architecture changes     | High                   | High                          | Break down if > 1 week     | -                                                    | -                                       |<hr /><hr />- Each story point indicates increasing complexity and uncertainty.<hr />- Low numbers denote simple tasks, while higher numbers denote greater risk and effort.","tags":"consulting estimation guideline internal","authors":"huytq monotykamary","date":{"days":19699},"category":"playbook > engineering"},"90":{"file_path":"updates/changelog/2021-09-29-engineer-performance-review.md","title":"Engineer Performance Review","description":"Here's another update from Dwarves for you. Throughout September, we have completed our bi-annual performance review.","spr_content":"- Team Dwarves' performance reviews prioritize engineer-centric design over typical management approaches.<hr />- Engineers reflect on their growth, team perspectives, and professional ambitions in self-reviews.<hr />- Reviews are conducted by team leads or mentors with direct knowledge of the engineers’ work for specific feedback.<hr />- The process emphasizes a two-way dialogue, fostering comfort and openness.<hr />- Performance review criteria extend beyond technical skills to include leadership, collaboration, and organizational contributions.<hr />- The aim is to equip engineers with the skills for software consulting and development across a 3-5 year tenure.<hr />- Reviews occur bi-annually to facilitate goal attainment; outcomes include new rankings and professional growth plans.<hr />- Career advancement, such as achieving “senior” status, requires technical proficiency and team leadership capabilities.<hr />- The Dwarves maintain a strict quality bar to support high standards and foster future leaders within the organization.","tags":"engineering newsletter performance","authors":"duy nikki tieubao","date":{"days":18899},"category":"updates > changelog"},"91":{"file_path":"updates/changelog/2021-06-10-dwarves-updates.md","title":"Dwarves Updates","description":"Hi, this is Han, the CEO of Dwarves Foundation. This month the Dwarves score 40th client that we have the honor to serve. And for that, we decide to launch the Dwarves Updates.","spr_content":"- Han, CEO of Dwarves Foundation, announces 40th client milestone. <hr />- Launch of Dwarves Updates initiated to share insights and experiences. <hr />- Company operates like software: usability, usefulness, bug fixes, and organizational design matter. <hr />- Dwarves Updates includes lessons learned, tech adoption, team investment, client success stories. <hr />- Encouragement for readers to engage and be part of Dwarves' journey. <hr /><hr />### HR: Apprenticeship Training<hr />- Transition from Internship Program to Apprenticeship Program to enhance talent acquisition.<hr />- Internship Program drawbacks: long onboarding time, limited project contribution, higher management costs, and premature turnover.<hr />- Apprenticeship Program: a six-month earn-and-learn model for candidates with 1-2 years of experience.<hr />- Promises modern work environment, competitive pay, career guidance, peers, and mentorship.<hr />- Initial launch received fewer applications but better quality candidates with clear career goals.<hr />- Ongoing trials to explore further outcomes and experiences. <hr />- Further details available through provided link.","tags":"hiring newsletter updates","authors":"duy nikki tieubao","date":{"days":18788},"category":"updates > changelog"},"92":{"file_path":"updates/changelog/2022-03-31-hiring-stages.md","title":"The stages of hiring at Dwarves","description":"In today’s edition, job interviews need a makeover, the 4 stages of hiring at Dwarves, Dwarves apprenticeship 2022, other talking points","spr_content":"- Achievement: Dwarves ranked top 100 in Financial Times’ Asia-Pacific High-Growth Companies.<hr />- Importance of reflection: Recognizing accomplishments boosts team morale.<hr />- Team appreciation: Value of collaboration with colleagues and partners.<hr />  <hr />### Job Interviews<hr />- Need for rethinking: Current tech interview processes often challenge candidates unnecessarily.<hr />- Candidate perspective: Interviews should empower candidates, not feel like begging for jobs.<hr />- Desired interview dynamics: Casual conversations favor mutual exploration and cultural fit.<hr /><hr />### Hiring Process at Dwarves<hr />- Flexible approach: Adjusting processes based on candidate suitability.<hr />- Focus on capability: Technical skills as key hiring criteria.<hr />- Minimal standard questions: Avoiding commonplace queries to discover true potential.<hr />- Collaborative interviews: Involvement of current engineers in hiring feedback.<hr />- Candidate engagement: Encouragement of questions to evaluate company fit.<hr />- Streamlined process: Total interview duration approximately 1 hour 50 mins.<hr /><hr />### Dwarves Foundation Apprenticeship 2022<hr />- Purpose: Promote career advancement through teaching and training.<hr />- Unique offering: First tech apprenticeship program in Vietnam.<hr />- Program structure: A 6-month paid work-study designed for mid-level engineers.<hr />- Benefits for participants: Practical experience, mentorship, and career path development.<hr />  <hr />### Other Initiatives<hr />- Dwarves Discord growth: 300+ members facilitate tech discussions and knowledge sharing.<hr />- Engaging community activities: Increased participation in discussions like Monday Radio Talks.<hr />- Knowledge initiatives: Brainery and Engage & Earn promote knowledge sharing.<hr />- Dalat Chalet: A unique workspace and social hub for team bonding, moving beyond conventional office spaces.<hr />  <hr />- Closing wish: Hope for ongoing success, recognition, and passion in work.","tags":"hiring newsletter updates","authors":"duy nikki tieubao","date":{"days":19082},"category":"updates > changelog"},"93":{"file_path":"updates/changelog/2024-09-13-dwarve-updates-ai-llm.md","title":"The Stage of AI and LLM at Dwarves","description":"Here's another update from Dwarves for you. We are excited to share the real journey of growth and transformation since AI and LLM have been on our radar for quite a long time.","spr_content":"- Han & Nikki reporting on knowledge system development for team learning.<hr />- Dwarves Memo showcases increased member participation and article publication.<hr />- Long-term investment in AI/LLM competencies.<hr />  <hr />### Working with AI<hr />- Entire team using AI tools: increases speed and accuracy.<hr />- AI project management optimizes workflows and reduces costs/time by 30%.<hr />- Engineers benefit from AI for code generation, automating tasks, and reducing errors.<hr /><hr />### Continuous Learning & Training<hr />- R&D as a core driver of innovation since 2015.<hr />- Focus on AI/LLM: fast-paced learning and building for AI adoption.<hr />- Key technologies:<hr />  - **Large Language Models (LLM)**: content generation, complex query understanding.<hr />  - **NLP Techniques**: sentiment analysis, summarization.<hr />  - **Retrieval-Augmented Generation (RAG)**: enhances information retrieval.<hr />  - **Embedding Technologies**: improves content recommendations.<hr />  - **AI-Powered Analytics**: predicts trends, analyzes patterns.<hr />- Engaging in computer vision for advanced image recognition and multimodal systems.<hr /><hr />### Knowledge Sharing<hr />- Public sharing of learning through Dwarves Memo:<hr />  - Thought prompting, internal tool development, RAG systems, rapid software development, building AI supervisors, feedback mechanisms.<hr /><hr />### AI-Powered Solutions<hr />- Development of custom AI solutions that improve client outcomes:<hr />  - **FornaxAI**: pitches enhancement tool for startups.<hr />  - **Umbrella**: integrated project management system.<hr />  - **Ascenda**: AI-driven loyalty program.<hr />  - **Plot**: centralized project management for media teams.<hr /><hr />### Future Aspirations<hr />- Unique R&D-focused trajectory among Vietnamese vendors.<hr />- Challenges of pursuing innovation contrasted with rewards of progress and collaboration.<hr />- Invitation for collaboration to innovate and succeed together. <hr /><hr />- Closing message of encouragement from Han & Nikki.","tags":"newsletter team updates","authors":"nikki","date":{"days":19979},"category":"updates > changelog"},"94":{"file_path":"updates/changelog/2021-08-23-project-compliance.md","title":"Project Compliance","description":"This email is the third month we share about our journey to Software Craftsmanship.","spr_content":"- Team Dwarves shares monthly updates on Software Craftsmanship journey.<hr />- Focus this month: Project delivery compliance.<hr />- Minimizing risks in software development is essential for client and team welfare.<hr />- Risks lead to costs, delays, and diminished morale.<hr />- August's objective: Enhance resource use and project success rates via audits.<hr />- Unproductive procedures eliminated; early identification of defects prioritized.<hr />- Ensure team clarity on work scope, objectives, and requirements.<hr />- Maintain client project timelines; avoid client hindrances.<hr />- Technical audits: Assess system architecture, database design, object structure, implementation techniques.<hr />- Management audits: Engineers' awareness of software and business goals evaluated.<hr />- No critical technical issues detected; insights from management audit valued.<hr />- Importance of project success criteria reiterated to engineers.<hr />- Business intelligence access enhances product ownership and effort.<hr />- Engineers bridging tech and business challenges show proactive behavior.<hr />- Broader understanding of engineering roles encourages deeper involvement in development.<hr />- Goal: Build and ship software, fostering engineer initiative and growth.<hr />- Conclusion: Continued commitment to development and understanding in software engineering.","tags":"newsletter project updates","authors":"duy nikki tieubao","date":{"days":18862},"category":"updates > changelog"},"95":{"file_path":"updates/changelog/2023-09-12-growth-stages.md","title":"The Stage of Growth at Dwarves","description":"In this update, we are excited to share the real journey of growth and transformation that our team has embarked upon, as we continue to strive to become a more skilled and knowledgable software team.","spr_content":"- Team update by Han & Nikki; undergoing significant changes.<hr />- Focus on growth and transformation of the software team.<hr />- Shifting focus: Emphasis on fundamental techniques over trends.<hr />- Decision to invest in research for timeless skills in software development.<hr />- Transition to full-stack engineering; understanding entire development process essential for cost-effective solutions.<hr />- Aim to balance company and community roles (50%-50% model).<hr />- Commitment to community engagement and knowledge sharing.<hr />- Highlights of community efforts:<hr />  - Launch of Golang course; 90 registrations, 30 participants.<hr />  - 43 weekly talks featuring global software engineers.<hr />  - Collaboration in 10 tech events; partnerships in Vietnam.<hr />  - Learning site membership growth.<hr />- Collaboration has reinforced team bonds in a remote work environment.<hr />- Implementation of Community Earn model and collaborative R&D initiatives.<hr />- Partner network strategy over traditional marketing; focus on relationships.<hr />- Benefits for partners: trust, resources, expertise, and commission opportunities.<hr />- Uniform criteria for partnerships; open to technology-impact-focused individuals.<hr />- Journey of exploring new operational methods; aim for unity and expanded outcomes.<hr />- Future aspirations center on remarkable results and lasting relationships.","tags":"","authors":"duy nikki tieubao","date":{"days":19612},"category":"updates > changelog"},"96":{"file_path":"updates/changelog/2021-12-01-engineering-org-structure.md","title":"Engineering Organizational Structure","description":"It's Han and Nikki from Team Dwarves. We're almost at the end of this year. While we know everyone is busy wrapping up 2021, we hope you're taking care of yourself and staying safe.","spr_content":"- Year-end approach by Team Dwarves: reflect, self-care, safety.<hr />- Engineering ladder refinement focus for November; key growth initiative.<hr />- High-level structure developed to enable scalable team growth.<hr />- Senior engineers promoted to lead positions; increase in influence and leadership.<hr />- Inter-managerial collaboration boosts communication and alignment for better engineering.<hr />- New 60-day onboarding plan for hires to expedite integration into projects.<hr />- Adaptive engineering structure: current organization may evolve with growth.<hr />- Recruitment initiative: establishing offices across Vietnam to attract talent.<hr />- Offices in HCMC, Hanoi, Danang, and Dalat as hubs for collaboration.<hr />- Open invitation for community and partners to utilize office space.<hr />- Rise in Web 3.0 partnerships: 8 requests in one month, growing interest.<hr />- Screening process for projects maintained during demand spikes.<hr />- Dedicated website for Web 3.0 focus to avoid confusion with other services.<hr />- Community engagement through open Discord channel and public events.<hr />- Weekly training sessions for knowledge sharing.<hr />- Future plans for engagement incentives in Dwarves network.<hr />- Gratitude expressed for community feedback and support.","tags":"career newsletter updates","authors":"duy nikki tieubao","date":{"days":18962},"category":"updates > changelog"},"97":{"file_path":"updates/changelog/2022-08-26-the-next-leading-chairs.md","title":"The Next Leading Chairs","description":"We like the idea of labeling teams by what they deliver. Hence, the next chapter of Dwarves will be based on five angles.","spr_content":"- Dwarves Foundation celebrated 5-year milestone in Jan 2020.<hr />- Emphasis on remote culture, prioritizing knowledge and people.<hr />- Key elements: <hr />  - Handbook showcasing culture and vision.<hr />  - ESOP for equitable reward sharing.<hr />  - Automation to enhance focus on core strengths; current resource ratio 70 engineers to 10 operations.<hr />- Celebrating Dwarves 2.5 with 80 team members.<hr />- 3 remote offices: Saigon, Danang, Dalat.<hr />- Growth achieved: 46% increase in team scale.<hr />- Diversification as a key to progress.<hr />- New structure introduces roles focusing on:<hr />  - Partnership (Nikki Ngoc Truong): Impactful tech collaborations.<hr />  - Delivery (Duc Thanh Pham, Ngoc Thanh Pham, Huy Tieu): Quality production outputs.<hr />  - Learning (Tom Nguyen, Hieu Vu): Continuous learning initiatives.<hr />  - Communication (Nikki Ngoc Truong): Transparency in information sharing.<hr />  - Engagement (Huy Nguyen, Giang Than): Unified vision across teams.<hr />- Acknowledgment of team's evolution and commitment to future growth.","tags":"newsletter team updates","authors":"duy tieubao","date":{"days":19230},"category":"updates > changelog"},"98":{"file_path":"updates/changelog/2024-10-25-knowledge-base.md","title":"Build your knowledge base","description":"In an age where Large Language Models like ChatGPT offer instant access to a universe of information, it raises the question, does our own personal knowledge base still hold any value, and is building a personal knowledge base still a legitimate thing to do?","spr_content":"- Large Language Models (LLMs) provide instant information access.<hr />- Personal knowledge bases retain value in the age of AI.<hr />- Curating knowledge is essential; akin to creating a personalized mixtape.<hr />- Personal knowledge is uniquely tailored, unlike generic AI outputs.<hr />- Efficient access to relevant information, avoiding irrelevant data.<hr />- Building a knowledge base promotes mastery over mere information consumption.<hr />- Innovation arises from connecting unique insights within personal knowledge.<hr />- Authenticity differentiates human contributions from AI-generated content.<hr />- Personal knowledge bases reflect individual identity and perspective.<hr />- In an information-saturated world, ownership and personalization of knowledge is crucial.<hr />- Maintaining a personal knowledge base fosters growth and success in an AI-driven era.","tags":"knowledge llm updates","authors":"nikki tieubao","date":{"days":20021},"category":"updates > changelog"},"99":{"file_path":"updates/changelog/2022-06-26-blockchain-and-data.md","title":"The future is blockchain and data","description":"Hey, it’s Han and Nikki in your inbox again.","spr_content":"1. Introducing Han, Nikki, and a new voice for Dwarves Updates focused on engineering insights. <hr />2. Discord's #blockchain channel is highly active; driven by crypto trends and our commitment to blockchain learning. <hr />3. Increased learning notes in the Brainery validate our effort in the data landscape. <hr />4. Thanh Pham discusses preparing designers and engineers for evolving technology in upcoming years. <hr />5. Key topics: <hr />   - Future direction of data.<hr />   - Blockchain as a viable career.<hr />   - Prioritizing learning metrics.<hr />   - Updates on apprenticeship programs. <hr />6. Dwarves' 2018 focus on blockchain led to a dedicated team of 20 product developers; prediction was accurate.<hr />7. 2022's shift to data aligns with rising demand for data professionals and the salary benefits they enjoy. <hr />8. Enterprises increasingly leverage big data for strategic decisions; smaller businesses need better data organization.<hr />9. Dwarves aims for expertise in data science, AI, and machine learning; these technologies enhance data interpretation and self-learning. <hr />10. Preparing engineers with research and discussion environments fosters innovative data analysis.<hr />11. Weekly Radio Talk fosters community knowledge sharing; podcasts encourage informal discussions on data topics.<hr />12. Blockchain integrates into business decisions, creating new roles in decentralized application development. <hr />13. Insights from Ngoc Thanh emphasize blockchain's evolution beyond traditional software engineering. <hr />14. Dwarves promotes constant learning; recent community contributions amplify growth within the knowledge base.<hr />15. Brainery contributors rewarded under Dwarves Sponsorship for enhancing collective wisdom.<hr />16. Feedback from apprenticeship sessions used for program refinement, acknowledging areas for improvement while celebrating apprentice engagement. <hr />17. Launching Dwarves Hubs in Danang and Dalat for remote work communities enhances collaboration and comfort.<hr />18. Ongoing recruitment; commitment to fully remote work culture.","tags":"newsletter team updates","authors":"duy nikki tieubao","date":{"days":19169},"category":"updates > changelog"},"100":{"file_path":"updates/changelog/2021-10-31-path-to-growth.md","title":"The Path To Growth at Dwarves","description":"It's Han and Nikki from Team Dwarves. We're here with the fifth edition of our Dwarves Updates. October has been a wild ride for us as a company. Most of our effort was spent on rethinking growth paths for our engineers.","spr_content":"- Dwarves Updates – Edition 5, October highlights.<hr />- Focus: Rethinking engineers' growth paths.<hr />- Initial growth stages: mastering technical skills, tools proficiency, faster delivery.<hr />- Growth stalls post-early years; excitement fades, code quality stagnates.<hr />- Risk of quitting leads to repeated cycles elsewhere.<hr />- Commitment to long-term growth: providing constant new challenges.<hr />- Importance of a defined, actionable engineering career ladder.<hr />- Career ladder applicable to all; tailored action plans established.<hr />- Clear expectations for junior/mid engineers to reach senior level; seniors guided towards mastery or leadership roles.<hr />- Encouragement for open consulting ideas; value in broader perspectives.<hr />- Training engineers in consulting for diverse skills: management, marketing, copywriting.<hr />- Collaborative tech learning: team initiatives on emerging technologies.<hr />- Current trends: blockchain, Metaverse, AI & ML.<hr />- Recent successes: Cyber Neko and other blockchain projects.<hr />- Careful project screening for growth opportunities.<hr />- Favor projects that solve interesting problems, align with strengths or learning, promote team dynamics, and support engineer development.<hr />- Engineers' input in project decisions ensures engagement and alignment with interests.<hr />- Strong focus on employee growth aligns with company success.<hr />- Happy, engaged engineers produce high-quality code, leading to satisfied clients.<hr />- Commitment to continuous improvement and shared success at Dwarves.","tags":"engineering newsletter updates","authors":"duy nikki tieubao","date":{"days":18931},"category":"updates > changelog"},"101":{"file_path":"updates/changelog/2021-12-30-2021-in-review.md","title":"It's a wrap: 2021 in Review","description":"Hey, it’s Han and Nikki in your inbox again. On behalf of the entire Dwarves team, happy 2022!","spr_content":"- Greetings from Han and Nikki; Happy 2022 from the Dwarves team.<hr />- Reflecting on 2021: eventful, full of challenges, embodying a can-do mindset.<hr />- Emphasis on trial and adaptability: \"fail fast, learn often\", aligned with Agile Minifesto.<hr />- Successful collaborations with clients: Setel, Momos, Mudah, Attrace, SP Group, Vietcetera, WeBuild.<hr />- Operational automation using Notion, Basecamp, and self-built Fortress.<hr />- Specialized team established for blockchain & web3 initiatives.<hr />- Focus on team development and gratitude for client trust in collaboration.<hr />- Milestones:<hr />  - Team growth to 60 engineers.<hr />  - Focused recruitment of experienced engineers in Vietnam.<hr />  - Leadership and mentoring opportunities increased within the team.<hr />  - Enhanced compensation and benefits structures.<hr />  - Issued Dwarves Token for positive contributions.<hr />  - Refined career progression paths and mentorship.<hr />  - Organized team training and learning initiatives.<hr />- Technology advancements focused on Web3, Open Internet, AI, and Big Data.<hr />  - Onboarded 6+ blockchain projects; blockchain team grew to 20.<hr />  - Empowered self-organized study groups among Dwarves.<hr />- Business direction shifts:<hr />  - Larger, selective partnerships.<hr />  - Transition towards software consulting from outsourcing.<hr />  - Engineers engaged in project and hiring decisions, emphasizing teamwork.<hr />  - Multiple operational locations in Vietnam: HCMC, Danang, Hanoi, Dalat.<hr />- Future outlook for 2022:<hr />  - Commitment to blockchain and web3 technologies.<hr />  - Intent to partner with more teams and deliver high-quality products.<hr />  - Focus on enhancing skill sets and teaching software best practices.<hr />  - Expansion of the team to find like-minded talent; invite referrals for Dwarves Careers.<hr />- Goals: exploration of various initiatives leading to innovative products and meaningful connections.<hr />- Closing with positivity for future opportunities: \"Onward and upward.\"","tags":"newsletter team updates","authors":"duy nikki tieubao","date":{"days":18991},"category":"updates > changelog"},"102":{"file_path":"updates/changelog/2021-07-11-dalat-office.md","title":"Da Lat Office","description":"It's Han and the Dwarves team again. Since June 2020, we've been planning on a new office/studio in Da Lat.","spr_content":"- Dwarves team embodies a borderless software firm model, creating impactful products across industries.<hr />- Updates include lessons learned, team investment, and client success strategies.<hr />- New office opens in Da Lat, Vietnam; a peaceful, nature-rich locale ideal for work-life balance.<hr />- Remote-first approach proved effective during the pandemic, enhancing client communication and team cohesion.<hr />- Focused on employee well-being in fast-paced software industry, especially with shift to remote work.<hr />- Initiative launched to upgrade WFH experiences with grants for workspace improvements.<hr />- Team bonding improved through shared workspace upgrades and engagement.<hr />- Company slogan emphasizes joy in coding: “every line of code resembles happiness.”<hr />- Commitment to fostering better work conditions leads to satisfied employees and clients.<hr />- Simple actions for employee support yield significant positive outcomes.","tags":"newsletter remote updates","authors":"duy nikki tieubao","date":{"days":18819},"category":"updates > changelog"},"103":{"file_path":"updates/OGIF/15-20240719.md","title":"OGIF Office Hours #15 - Architecting AI supervisors, Local-first software, AI code completion overview and crawl list bot command","description":"In our fifteenth community discussion, we focus on Architecting AI Supervisors, Local-First Software and Crawl list command. Topics include an overview of ongoing projects, a detailed look at various code completion tools, and a demonstration of the Supervisor architecture. Additionally, we'll review the local-first software paradigm and conclude with a summary of new features and team contributions.","spr_content":"- Team discussions on activities and project progress.  <hr />- AI code completion tools compared: GitHub Copilot, Continue, Codeium, Cursor, Supermaven (lowest latency at 250ms).  <hr />- User considerations for accuracy and speed in code implementation; context comprehension challenges.  <hr />- GPT-4 vs. Claude: GPT-4 excels in composition; new feature for OpenAI API integration.  <hr />- Supermaven vs. Transformer: Supermaven optimized for C coding with enhanced token context.  <hr />- Local vs. cloud AI deployment: feasibility influenced by RAM capacity and task requirements.  <hr />- Challenges in AI supervisor architecture, addressing concepts like Ent and Mul.  <hr />- Database interactions via Up and Upgraft L framework; key components: SQL, Semantic, Supervisor.  <hr />- Benefits of AI supervisor architecture: maintenance ease and improved user experience through semantic responses.  <hr />- Mechanisms for generating compliant sentences and accurate outputs discussed.  <hr />- Local-first software focus: offline usability, data autonomy, shifting frontend/backend roles.  <hr />- Overview of Local-First architecture for real collaboration; conflict-free data storage techniques (CRDTs).  <hr />- Local-first SDKs leveraging IndexDB and local storage; data synchronization strategies outlined.  <hr />- Local-first implementation challenges: data conflict resolution, storage limitations on client devices.  <hr />- Advantages of Local-First: real-time collaboration, enhanced responsiveness, security through decentralized structure.  <hr />- Discussions on future Local-First development potential and balanced architecture strategies.  <hr />- Workflow management and authority for backend data distribution discussed.  <hr />- Platforms for information sharing: Reddit, Lobster, tech news resources evaluated.  <hr />- New Discord bots introduced for aggregating tech news; functionality and customization features explained.  <hr />- Encouragement for team engagement with new tools; forthcoming features and improvements highlighted.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19926},"category":"updates > OGIF"},"104":{"file_path":"updates/OGIF/16-20240726.md","title":"OGIF Office Hours #16 - Golang weekly #4, TIL in Dune's query, AI voice clone demo and Re-ranking in RAG system.","description":"Our sixteenth office hours community discussion will cover a range of topics including Golang commentary updates, insights on TIL in Dune's query, a demo of AI voice cloning, and advancements in re-ranking within the RAG system. Join us for an engaging session designed to promote collaborative learning and growth among our members.","spr_content":"- 94 minutes duration for the discussion.<hr />- Topics include updates on ICY distribution, salary plans, and recent events.<hr />- Go programming and ethical hacking trends discussed.<hr />- HTTP optimization techniques for faster request execution explored.<hr />- Auto scroller deployment and code handling mentioned.<hr />- Go's potential in app development and function usage analyzed.<hr />- AI's role in media content creation highlighted.<hr />- Emphasis on the balance between technology, nature, and personal growth.<hr />- AI voice translation and commentary tools examined.<hr />- Discussion on risks and costs associated with AI voice impersonation.<hr />- Data transformation via APIs and smart contracts reviewed.<hr />- Algorithms for data indexing and mapping are introduced.<hr />- User experience impacts considered through mapping technique comparisons.<hr />- Comprehensive system design for software services discussed.<hr />- AI applications for data ranking and synthesizing information explored.<hr />- Lom used for re-ranking to enhance search results.<hr />- Mathematical ranking process and formula calculation explained.<hr />- Importance of reevaluating AI algorithms for accuracy emphasized.<hr />- Human assessment crucial for ensuring algorithmic accuracy.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19933},"category":"updates > OGIF"},"105":{"file_path":"updates/OGIF/11-20240621.md","title":"OGIF Office Hours #11 - Design patterns: template method & visitor, Radix sort, and weekly tech commentary","description":"Join us for our evleventh community discussion on design patterns (Template Method and Visitor), Radix Sort, and the latest tech news. The discussion will be guided by weekly topics selected through community input, fostering a collaborative learning environment for all participants.","spr_content":"- **Office Hours Session**: Focus on Template Method, Visitor Pattern, Radix Sort.<hr />- **Team Dynamics**: 50 members; discussing performance metrics and team activities early on.<hr />- **Participation Incentives**: Use of ICY tokens to promote engagement; active community interaction is valued.<hr />- **Announcements**: Future salary increases; plans for gaming development and events.<hr />- **Team Branding**: New team shirts; summer-themed team game scheduled.<hr />- **Startup Engagement**: Insights from recent events, especially women's evolving roles in Vietnam's startup ecosystem.<hr />- **Investment Focus**: Emphasis on long-term sectors such as healthtech and education; exploring fintech opportunities.<hr />- **Market Analysis**: Importance of adapting team projects based on market trends.<hr />- **Template Method Insights**:<hr />  - Addresses code optimization, breaking operations into shared steps via a base class.<hr />  - Custom implementations allowed; main flow remains unaffected.<hr />  - Common framework for defining operations enhances structure and reuse.<hr />- **Visitor Pattern Functionality**: <hr />  - Centralizes business logic across data from multiple classes; eases data manipulation.<hr />  - Simplifies feature addition; promotes maintenance by enforcing single responsibility.<hr />- **Use Cases**: Demonstrations on combining customer needs to create common objects; separating sell/buy actions for implementation efficiency.<hr />- **Radix Sort Discussion**: Relevant to overall data sorting strategies; discussed in the context of the Visitor Pattern's utility.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19903},"category":"updates > OGIF"},"106":{"file_path":"updates/OGIF/17-20240802.md","title":"OGIF Office Hours #17 - Community Call July, C4 Model, and Interview Life in the US","description":"Join us for our seventeenth OGIF community call on Aug 2nd, where we'll discuss the current state of technology investment in Vietnam, introduce a new referral and commission model for the team, present the C4 model for subscription systems, and interview Hieu about his experience living in the US. We'll wrap up with plans for next week's meeting. This session will be guided by topics selected through community input, promoting a collaborative and insightful environment for all participants.\"","spr_content":"- **Technology Investment in Vietnam**: Vietnam's tech investment down by 17%, less severe than global 35% decline; still ranks 3rd in Southeast Asia (after Singapore, Indonesia).<hr />- **Investment Landscape**: Key sectors like healthcare/education growing; payments/retail declining; VCs active in fintech/generative startups.<hr />- **Consulting Insights**: Consultants assess and share market strength; traditional vs crypto markets differ.<hr />- **Referral Model**: New commission system in place; incentivizes active participation and indirect referrals.<hr />- **Software Automation**: Emphasizes using software for sustainable team building; equitable cash flow distribution stressed.<hr />- **Challenges in Software Creation**: Lack of skilled advisers noted; importance of distinguishing coding from software development.<hr />- **Ring Model**: Focus on time tracking in consulting; consultants manage end-to-end solutions, impacting sales/targets.<hr />- **Work Hours Management**: Flexible work hours discussed; adapting to project demands highlighted.<hr />- **System Design Understanding**: Consulting parallels with historical industries (e.g., accounting, law); research effort recognized.<hr />- **New Design Tool**: Tool presented with system design potential; efficient, improvements anticipated.<hr />- **Java Standardization**: Discussion on Java as enterprise standard; relevance questioned compared to its past prominence.<hr />- **C4 Model Overview**: Presentation on subscription systems; components and workflow in payment services discussed.<hr />- **Payment System Design**: Monthly vs annual subscription differences; developer API references considered.<hr />- **Interview with Hieu**: Living in the US discussed; job market insights and administrative processes reviewed.<hr />- **Vietnam Job Market Navigation**: Insights on comparative costs with the US and administrative documentation requirements noted.<hr />- **Team Meeting Wrap-up**: Project report processes and future meeting plans outlined; focus on new technology learning emphasized. <hr />- **Final Remarks**: Encouragement for community involvement; knowledge in software design deemed crucial; reminder for resource utilization for future benefit.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19940},"category":"updates > OGIF"},"107":{"file_path":"updates/OGIF/1-20240405.md","title":"OGIF Office Hours #1: Markdown Presentations, Research Content Pipeline, and Professional Screenshots","description":"Our first ever Office Hours in our series of OGIFs. Our first day to exchange knowledge and insights on topics and projects we're working on and tools we're using for our internal work and clients.","spr_content":"1. **Server Identity**: Introduction of server owner **econ-101**; personal connection established.  <hr />2. **Skill-Building**: Technical tutorial by **Anna** on slide creation from markdown; practical learning demonstrated.  <hr />3. **Research Pipeline**: Presentation by **Nikki** on community-driven research content; emphasis on knowledge sharing.  <hr />4. **Engagement Techniques**: **Innno** provided tips on effective screenshot tools; enhanced interactive experience.  <hr />5. **Excitement Element**: **Lucky draw** for **Icy**; added anticipation and community fun.  <hr />6. **Future Engagement**: Regular events planned; 10-minute sharing format to promote continual learning and community bonding.  <hr />7. **Multimedia Components**: Recorded sessions covering slide creation, discussions, screenshot tips, research lifecycle, and event closure available for future reference.  ","tags":"discord office-hours ogif","authors":"monotykamary","date":{"days":19838},"category":"updates > OGIF"},"108":{"file_path":"updates/OGIF/18-20240809.md","title":"OGIF Office Hours #18 - Golang weekly, Devbox MOC, Search retrieval in RAG, Generative UI, FE monthly #1","description":"OGIF 18 covers key discussions on Golang weekly #6, insights into search retrieval in RAG, advancements in generative UI, and the first edition of FE monthly. This edition provides valuable updates for developers and tech enthusiasts, offering a deep dive into the latest trends and techniques in software development.","spr_content":"- System design and consulting insights shared; planning for future sessions discussed.<hr />- Team chat organization on Discord for structured content; Demo of Devbox's content mapping.<hr />- Long-term topic value likened to textbook layouts; Comprehensive content mapping required.<hr />- Future presentations on system design topics emphasized collaboration and diversity.<hr />- Resource request processes explained; additional methods for claiming resources discussed.<hr />- Team progress tracked through contributions; Decentralized activity visibility using ICY.<hr />- Ecosystem building with core functionality; WebAssembly employed for performance.<hr />- Discussion on complete ecosystem examples including neural network viewers and IDEs.<hr />- Vector similarity and ranking via models S and F explained for sorting data.<hr />- Alpha configuration adjustments for computational outcomes; keyword ranking methods detailed.<hr />- Reciprocal Fusion with data sources focusing on behavior metrics explored.<hr />- Average accuracy definitions in system design; F1 score calculations discussed.<hr />- Efficiency in computations analyzed with diverse datasets; simpler questions yield better results.<hr />- Substance effectiveness formula derived from fear categories; analysis methodically structured.<hr />- Automation in system design versus manual processing considered; community acceptance factors discussed.<hr />- Accuracy assessment processes in system design explained; Metrics usage highlighted.<hr />- Vector addition and subtraction calculations described; testing and automation discussions mentioned.<hr />- Introduction to generative UI; implementation and community feedback explained.<hr />- Vercel solutions for UI management discussed; server-side component handling explained.<hr />- Fully documented chatbot system design with Go emphasized; event handling details provided.<hr />- Comparison of client-side vs. server-side rendering techniques outlined.<hr />- API usage for movie search functionality; event-triggered UI updates discussed.<hr />- Discussion on system design and UI testing integration; backend roles clarified.<hr />- React's current state in 2023 highlighted; SEO implications of heavy JavaScript usage discussed.<hr />- Expo framework recommended for streamlined application development; JavaScript ecosystem evolution noted.<hr />- Challenges facing React Native compared to other frameworks discussed; Turbo B tools mentioned.<hr />- Importance of social media content sharing for visibility and engagement emphasized; future engagement events planned.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19949},"category":"updates > OGIF"},"109":{"file_path":"updates/OGIF/README.md","title":"OGIF - Oh God It's Friday","description":"OGIF (Oh God It's Friday) is our weekly casual office hours meeting, where team members unwind, share updates, and connect in a relaxed environment at the end of each work week.","spr_content":"- OGIF: \"Oh God It's Friday\" - weekly technical deep-dive for engineers.<hr />- Focus: Present complex problems, discuss solutions, explore relevant technologies.<hr />- Activities include dissecting bugs, analyzing performance issues, evaluating new tools and frameworks.<hr />- Purpose: Leverage team expertise, foster collaborative problem-solving, and promote knowledge sharing.<hr />- Informal format, yet substantive content.<hr />- Topics range from optimizing database queries to implementing machine learning models in production.<hr />- Essential for continuous learning, staying updated on industry trends and best practices.<hr />- Latest OGIFs accessible via a database query for recent entries.","tags":"culture engineer performance software","authors":"innno_ monotykamary","date":{"days":19702},"category":"updates > OGIF"},"110":{"file_path":"updates/OGIF/6-20240510.md","title":"OGIF Office Hours #6 - Looking at the Factory pattern, Erlang state machines, and the Trading Process","description":"In our sixth community discussion, we'll delve into the Factory pattern, Erlang state machines, and the Trading Process. By sharing weekly topics chosen through tags, we foster a collaborative learning environment for our community to grow.","spr_content":"- Topic: Factory Pattern, Erlang State Machines, Trading Process<hr />- Duration: 147 minutes; recorded on May 10, 2024.<hr />- Focus: Simplifying product creation and enhancing trading process through design patterns.<hr /><hr />**Factory Pattern:**<hr />- Definition: Design pattern for object creation, allowing for simplified product initialization.<hr />- Advantages: Improves code readability and separates logic; facilitates runtime object type identification.<hr />- Disadvantages: Increases complexity and code size.<hr />- Variations: Includes Factory method, abstract Factory, and differences with Builder pattern.<hr /><hr />**Builder Pattern:**<hr />- Definition: Involves defining steps for object creation, allowing for flexibility and customization against Factory pattern.<hr /><hr />**Erlang State Machines:**<hr />- Definition: Comprise three states (closed, open, half-open), resembling circuit breakers.<hr />- Function: Manage requests, prevent downtime, and handle state transitions, applicable in trading processes.<hr />- Benefits: Error management, scalability, and simplified logic.<hr /><hr />**Trading Process Optimization:**<hr />- Strategies: Automating tasks, enhancing analysis through conditional triggers, utilizing bots for stock management.<hr />- Tools: Utilizing platforms like Fly for streamlined deployment and efficient processes.<hr /><hr />**Integration:**<hr />- Discussed combining Factory pattern with Erlang state machines for improved system design.<hr />- Emphasized importance of data, functions, and the system's operational flow (OTP).<hr /><hr />**Progression:**<hr />- Team dynamics noted, with Minh progressing within roles demonstrating enhanced responsibilities and insights.<hr />- Effective management of server errors and data through state transitions discussed.<hr /><hr />**Conclusion:**<hr />- Exploration of trading logic, system design implications, and implementation challenges.<hr />- Summary of the reflective discussion on patterns and their impact on process management.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19881},"category":"updates > OGIF"},"111":{"file_path":"updates/OGIF/4-20240426.md","title":"OGIF Office Hours #4 - DCA, Devbox","description":"Our fourth office hours community discussion, from DCA to Devbox topic. The goal is to foster learning by sharing weekly topics suggested through tags, encouraging collaborative growth among our members.","spr_content":"- **Duration:** 86 minutes<hr />- **Focus:** Team activities, virtualization, personal finance, trading, and design methods.<hr />  <hr />- **Time Marks and Key Points:**<hr />  - **00:03:** Introduction of upcoming topics.<hr />  - **14:53:** Discussion on themes: virtualization historical context, personal finance (DCA), trading updates.<hr />  - **20:23:** T-shirt ordering process (sizes S to XXL) and free stickers for team members.<hr />  - **23:10:** Community engagement through sticker giveaways and new activities.<hr />  <hr />- **Virtualization Insights:**<hr />  - **29:09:** Introduction to Virtual Machines (VMs) from the 1960s addressing hardware utilization.<hr />  - **31:48:** VMs help with resource-sharing but can be cumbersome.<hr />  - **36:56:** Containers as a lighter alternative to VMs, providing faster setups and namespace isolation.<hr />  - **39:44:** Discussion on container namespaces and limitations.<hr />  <hr />- **Docker Discussion:**<hr />  - **45:18:** Docker's user-friendly environment setup but may have performance issues on some systems.<hr />  <hr />- **Development Considerations:**<hr />  - **47:51:** Importance of reference types in development; Linux container architecture knowledge is essential.<hr />  <hr />- **Investing Strategies:**<hr />  - **53:45:** Dollar Cost Averaging (DCA) defined; benefits include risk mitigation and ease of management.<hr />  - **56:25:** Without strategy, investments risk volatility; DCA helps stabilize costs.<hr />  - **1:01:32:** Understanding buy/sell orders; DCA implementation.<hr />  <hr />- **Investment Analysis:**<hr />  - **1:04:08:** Different methods discussed, highlighting advantages and drawbacks.<hr />  - **1:09:40:** Acknowledgment of investment risks, including the importance of research on projects.<hr />  <hr />- **Team Collaboration:**<hr />  - **1:12:35:** Encouragement of teamwork for knowledge sharing and topic selection in financial discussions.<hr />  <hr />- **Design Methodology:**<hr />  - **1:17:11:** Discussion of Vinson implementation and design methodology.<hr />  - **1:19:49:** Upcoming focus on design process and C4 reviews.<hr />  <hr />- **Conclusion:**<hr />  - **1:26:04:** Wrap-up and goodbye with anticipation for future discussions.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19879},"category":"updates > OGIF"},"112":{"file_path":"updates/OGIF/10-20240614.md","title":"OGIF Office Hours #10 -  Behavioral Patterns and Map Content Organization","description":"Join us for our tenth office hours session to discuss behavioral design patterns and effective map content organization! We'll also catch you up on important June updates. Bring your questions and ideas, we want to hear from you.","spr_content":"- Discussion on game-making elements within the team; focus on buttons and game mechanics.<hr />- Introduction to strategic behavior patterns; problem statement linked to a restaurant's secret recipe.<hr />- Strategy pattern aids in managing context and segregating implementation; choices independent of context.<hr />- State pattern alters object behavior depending on its state; illustrates state machine interactions.<hr />- Differentiation between State and Strategy patterns; State defines logic while Strategy seeks varied actions.<hr />- State pattern simplifies state handling; emphasizes the need for components to manage state awareness.<hr />- Objects exhibit behavior alterations based on their state; relations between behavioral patterns and content mapping.<hr />- State and logic management crucial for future adaptability; dependent on logical evaluations, not fixed positioning.<hr />- Importance of structuring work; team emphasizes weekly Memo articles for knowledge sharing.<hr />- Creation of detailed, interconnected content maps; organization of topics into a structured map.<hr />- Development of flexible content maps for ongoing updates; continuous interaction with related topics.<hr />- Cultivating intelligent sharing habits among team members to avoid spamming; three steps for culture of sharing.<hr />- Building a streamlined posting culture; exploration of increases in knowledge sharing and collaboration.<hr />- Upgrading processes and game planning for smooth transitions; focus on strategic execution in forthcoming months.<hr />- Weekly commentary generation with news links critical for team interactions and fostering collaboration.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19902},"category":"updates > OGIF"},"113":{"file_path":"updates/OGIF/13-20240705.md","title":"OGIF Office Hours #13 - Go Weekly updates, Radix Sort, Human Feedback Mechanism, and effective ChatGPT usage","description":"This week's OGIF covers key topics including Go Weekly updates, Radix Sort, Human Feedback Mechanism, and effective ChatGPT usage. We discuss Go iterators and the latest features in Go 1.23, followed by a demonstration of Radix Sort's efficiency. The session also explains the Human Feedback Mechanism for improving Chatbot models and wraps up with best practices for using ChatGPT effectively.","spr_content":"- Overview of a new programming language, Odin, compared to Go; addresses Go's limitations.<hr />- Introduction of Go's iterators using the next method for lazy evaluations.<hr />- Exploration of functions and logic in programming; iterating through types and structures.<hr />- Discussion on the significance of package choices in code development.<hr />- Explanation of Radix Sort efficiency; O(nk) time complexity for sorting based on digit count.<hr />- The importance of 'O(nk)' in handling large numbers and stable sorting.<hr />- Impact of feedback on ChatGPT; enhances accuracy and reduces hallucinations.<hr />- Analysis of user behaviors; feedback mechanisms for improving LLM outputs.<hr />- Strategies for effective ChatGPT utilization; quality input leads to better output.<hr />- Emphasis on context and specificity in communication; clear terminology improves results.<hr />- Importance of detailed prompts and examples for refining responses; encouraging user feedback.<hr />- Contextual and personalized communication is vital; offers templates for improvement.<hr />- Concluding remarks; summarization and Q&A highlighted techniques for real-world applications.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19914},"category":"updates > OGIF"},"114":{"file_path":"updates/OGIF/9-20240607.md","title":"OGIF Office Hours #9 -  What's next for June and Behavior Design Patterns","description":"Join us for our ninth community discussion, where we will be addressing June's key updates and providing an overview of effective behavior design patterns. The discussion will be guided by weekly topics selected through community input, fostering a collaborative learning environment for all participants.","spr_content":"- Team updates and gratitude for meeting organization. <hr />- Discussion on new team shirts and pricing for photos. <hr />- Overview of recent activities and implementation plans for blockchain and language models.<hr />- Proposal to prioritize knowledge sharing and memo writing over retainer tasks.<hr />- Emphasis on sustainable work commitments and project management for client satisfaction.<hr />- Addressing decision-making and potential role differentiation for team members.<hr />- Examination of the Observer Design Pattern: definition, examples, advantages, and disadvantages.<hr />- Explanation of one-to-many relationships and event-driven nature in Observer patterns.<hr />- Understanding the benefits: automatic updates, easy maintenance, and reduced manual interventions.<hr />- Strategies for processing new information and ensuring data connection in communications.<hr />- Breakdown of file packing processes and necessity for clear interface designs.<hr />- Introduction to Command Pattern and its role in managing software transactions effectively.<hr />- Discussion of Command Pattern in handling user requests and responses to optimize workflows.<hr />- Grouping data by user action consequences for efficient organization and issue resolution.<hr />- Insights on object-oriented programming: modeling states and actions through objects.<hr />- Game design principles related to behavioral templates and engagement with queries.<hr />- Need for structured processes to align actions with team scalability and operational reality. <hr />- Emphasis on accessibility and iterative design principles in behavioral patterns for inclusivity.<hr />- Updates and improvements in behavioral design patterns slated for June.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19901},"category":"updates > OGIF"},"115":{"file_path":"updates/OGIF/14-20240712.md","title":"OGIF Office Hours #14 - Generic Collections, Pricing Models, and OGIF Summarizer","description":"In our fourteenth covers work distribution, enhanced article writing, product development, and strategic pricing models. It also discusses generics in Go, Dolt for database version control, and an automated tool for OGIF summaries, offering insights for developers and project managers.","spr_content":"- Discussion on work distribution: Optimize task delegation for efficiency.<hr />- Increased ICY for article writing: Enhance knowledge synthesis and maintain high standards.<hr />- User participation in product development: Collaboration on links and testing.<hr />- Choosing programming language: Elixir favors speed for MVPs; concerns about long-term viability.<hr />- Corporate technology adoption: Focus on integration with payment systems; historical context.<hr />- Team development: Importance of skill sharing and discussion of pathways for members.<hr />- Future of concurrency language: Continued belief in relevance amidst market changes.<hr />- Go language generics: Challenges and implementation of generic collection types.<hr />- Compiler errors: Strategies for combining types to satisfy constraints.<hr />- Introduction to Dolt: Version-controlled database applications for companies and developers.<hr />- Automating summaries: Using chatbots for transcription and content organization.<hr />- Admin chat organization: Workflow improvements for efficiency.<hr />- Pricing strategy discussions: Critical for product success; market adaptation essential.<hr />- Varied pricing models: Exploring options like volume and custom pricing.<hr />- Project-specific pricing: Adaptation as per business requirements and team dynamics.<hr />- System selection: Importance for scalability and readiness for disruptions.<hr />- Product team roles: Clarity on project manager responsibilities and teamwork emphasis.<hr />- Collaborative design challenges: Interaction with team members on design-related tasks.<hr />- System design for specific projects: Evaluating components for feasibility and performance.<hr />- Task planning: Assigning and strategizing future projects with an architectural focus.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19920},"category":"updates > OGIF"},"116":{"file_path":"updates/OGIF/12-20240628.md","title":"OGIF Office Hours #12 - Community June updates, Project progress, Go Weekly: Mastering Go Performance - eBPF and PGO Optimization Techniques, Multimodal in RAG (Retrieval Augmented Generation)","description":"In June community call, we kicked off with an introduction to the themes for knowledge reinforcement. We provide a summary of recent activities and topics, including blockchain, optimization, and news updates. Weekly Go updates cover optimization techniques, followed by an introduction to Solana blockchain concepts. The session concludes with a demonstration on handling multimodal data using LangChain.","spr_content":"- **Community Call Summary:** Monthly progress and achievements.<hr />- **Internal Updates:** Dwarves activities, Go updates, blockchain research, tuning discussions.<hr />- **Future Events:** Focus on machine learning, blockchain, Go; updates on upcoming events.<hr />- **Engagement Rewards:** Introduction of ICY points system for participation, rewarding activities.<hr />- **Research Participation:** Community invited to join and earn ICY points.<hr />- **Optimization Techniques in Go:** Insights from optimization methods, profiling, and performance assessment tools.<hr />- **User Spaces Discussion:** Pros and cons of using user spaces like BBG Grof.<hr />- **Event-Driven Logic:** Verification and compilation of program logic, machine instruction generation.<hr />- **Services in Grab:** Utilization of database image, complex system orchestration, and integration challenges.<hr />- **Solana Concepts:** Overview of efficiencies, transaction handling, and core blockchain concepts.<hr />- **Smart Contracts Comparison:** Solana vs. other blockchains regarding data handling.<hr />- **Injection in Programming:** Execution logic on data involves addresses and access codes.<hr />- **Server Crash Analysis:** Causes of crashes and impact on stability.<hr />- **Transaction Handling in ABM:** Discussion on mem transactions and frameworks’ influence.<hr />- **Multimodal Data Management:** Techniques for processing diverse data types, chatbot integration.<hr />- **Knowledge Sharing System:** New vector-based system for effective knowledge transfer.<hr />- **Old Records Management:** Strategies for feedback integration and referencing.<hr />- **Test Case Evaluation:** Creation and assessment of app performance metrics.<hr />- **Career Development:** Opportunities in consulting, project management; encouragement for team participation.<hr />- **Continued Learning:** Emphasis on knowledge sharing for team growth and project success.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19912},"category":"updates > OGIF"},"117":{"file_path":"updates/OGIF/2-20240412.md","title":"OGIF Office Hours #2: Devbox as the new Docker, Security Standards, and Understanding Liquidity","description":"Our second Office Hours. Join the community to exchange knowledge and insights on diverse topics, including Docker alternatives with Nix, security practices and origin stories of our standards, financial discussions on liquidity, company updates, and icy draws.","spr_content":"1. Technical deep dive into **devbox** as a **Docker replacement**.<hr />2. Advantages of **NixOS** discussed in relation to **devbox**.<hr />3. **Thanh**'s journey in establishing **security standards** highlighted.<hr />4. Importance of **community security awareness** emphasized.<hr />5. Interactive discussion on **money**, **liquidity**, and the company's **current state**.<hr />6. Promoted real-time engagement to understand community dynamics.<hr />7. Proposal to hold **regular events** for knowledge sharing.<hr />8. Members to present learnings in concise **10-minute slots**.<hr />9. Focus on fostering **community strength** through shared insights.<hr />10. Recordings include topics on **security**, **devcontainers**, **investment**, and **liquidity**.","tags":"discord office-hours ogif","authors":"monotykamary","date":{"days":19839},"category":"updates > OGIF"},"118":{"file_path":"updates/wala/001-43-factory.md","title":"#1 Coffee craftsmanship lessons for software engineering","description":"Our visit to 43 Factory coffee shop in Danang revealed surprising parallels between coffee craftsmanship and software engineering. We discovered valuable insights about talent management, quality delivery, and continuous learning that directly apply to our tech practices.","spr_content":"- **Context:** Visit to 43 Factory coffee shop in Danang - paradigm for excellence in various sectors. <hr />- **Values Alignment:** Shared principles in talent management, quality focus, and brand representation akin to software engineering.<hr />- **Unique Approach:** Operated by passionate craftsmen, innovative coffee craft, lean operational model.<hr />- **Learning Opportunity:** Insights into hiring practices, logistics, sourcing, and roasting similar to software talent management.<hr />- **Talent Dynamics:** Optimize talent acquisition - hire and train swiftly, evaluate cultural fit instantly.<hr />- **Transparency in Sourcing:** Emphasizes quality over conformity, showcasing imported beans to enhance product.<hr />- **Attention to Detail:** Every aspect is intentionally designed, mirroring the precision required in code.<hr />- **Growth Potential:** Continuous learning pathway from entry-level positions to management roles within the business.<hr />- **Brand Identity:** Staff embodiment of the brand, creating memorable customer experiences through service.<hr />- **Cultural Exchange:** Break from tech stereotypes, enrich understanding by connecting with passionate craftsmen.<hr />- **Community Insight:** WALA promotes learning from diverse narratives, facilitating reflection on personal practices.<hr />- **Engagement:** Encourages networking and learning through shared experiences and storytelling. <hr />- **Recognition:** Acknowledgment of Phuong for hosting and sharing insights.<hr />- **Next Steps:** Anticipation for further WALA opportunities to explore diverse industries and talents.","tags":"fnb wala","authors":"nikki","date":{"days":20012},"category":"updates > wala"},"119":{"file_path":"updates/wala/003-sp-group.md","title":"#3 Digital transformation insights from the energy sector","description":"Our visit to SP Group offered valuable perspectives on enterprise digital transformation challenges. We learned that successful transformation depends more on people and organizational culture than technology, while strong partnerships require treating external teams as part of your own.","spr_content":"- **Cultural over technical hurdles in digital transformation**: SP Group highlights the importance of organizational culture in successful digital change.<hr />- **Strength in partnership**: Effective teamwork between external engineers and SPG's internal team fosters collaboration and unity.<hr />- **Holistic engineering perspective**: Engineers must grasp industry-specific challenges beyond mere coding to drive meaningful solutions.<hr />- **Insights from SP Group**: Visit reveals critical understanding of their operational dynamics and partnership motivation.<hr />- **Resistance and adaptability**: True transformation requires overcoming resistance and nurturing a culture of learning within organizations.<hr />- **Departmental independence**: SPG's size leads to siloed operations, complicating integration of new technologies into established workflows.<hr />- **Data security complexities**: Security is paramount; both internal procedures and external partnerships face stringent access hurdles.<hr />- **Tech's real value**: Adopting new technologies, like AI and AR, should aim at solving business problems, not just being trendy.<hr />- **WALA initiative**: Promotes connection and learning through interaction beyond screens, breaking tech stereotypes and enhancing domain knowledge.<hr />- **Community learning**: Sharing experiences among Techie WALAs enriches understanding and practices within the tech community.  <hr />","tags":"energy wala","authors":"huytq innno_ nikki","date":{"days":19879},"category":"updates > wala"},"120":{"file_path":"updates/wala/002-dzs-media.md","title":"#2 Film production lessons for software engineering","description":"Our visit to DZS Media revealed surprising parallels between film production and software development. Their meticulous planning, focus on getting things right the first time, and expertise-driven approach offers valuable insights for our engineering practices.","spr_content":"- Visit to DZS Media, a leading film production company in Ho Chi Minh City.<hr />- Insights into quality and production in the creative industry relevant to tech.<hr />- Meticulous planning and expertise in film production reflect principles of effective software development.<hr />- Importance of cross-industry learning for technology professionals.<hr />- DZS Media’s production facility features specialized areas: soundproof studios, training rooms, reference libraries.<hr />- Discipline and work ethic showcased through a structured, calculated production process.<hr />- High costs of film reworks necessitate precision and initial accuracy, akin to software engineering.<hr />- Mirrored practices: expert craftsmanship, project selection based on potential success.<hr />- Film success hinges on content quality over marketing or star power.<hr />- DZS Media remains humble despite success, fostering creativity and hard work.<hr />- Profound respect gained for film industry efforts, especially for major hits.<hr />- WALA initiative promotes out-of-office learning and cross-domain knowledge sharing.<hr />- Breaking stereotypes: tech professionals connecting with diverse sectors. <hr />- Future collaboration potential with DZS Media anticipated for ongoing learning.","tags":"film wala","authors":"innno_ monotykamary","date":{"days":20012},"category":"updates > wala"},"121":{"file_path":"careers/open-positions/business-manager.md","title":"Business Development Manager","description":"The ideal candidate will have a deep understanding of the software development industry, experience in developing partnerships & connections, excellent communication skills, and a never-ending passion for technology.","spr_content":"- Hiring: Business Development talent for remote role at Dwarves, a research-focused tech firm.<hr />- Ideal candidate: Deep industry knowledge, partnership experience, and strong communication skills in software development.<hr />- Responsibilities: Identify opportunities, maintain client relationships, promote services, drive growth globally.<hr />- Company background: Established in 2015, profitable from day 1, focused on software excellence and sustainable growth.<hr />- Training: Business Development Executive focused on AI/LLM, fintech, and healthcare.<hr />- Collaboration: Work with marketing for proposals, engage potential clients, ensure project execution with teams.<hr />- Goals: Long-term development for the Business Development team, close new deals with strategic contract negotiations.<hr />- Required qualifications: Graduate in relevant fields; interest in AI, fintech, healthcare; strong technical communication skills; experience in tech preferred.<hr />- Desirable traits: Pressure handling, time management, excellent English, strong desire for IT and tech.<hr />- Benefits: Remote work, performance reviews, healthcare insurance, education allowance, stock options.<hr />- Interview process: Review applications, skills assessment, team interview, quick job offers.<hr />- Open to talented individuals, even those outside listed roles. Engage via LinkedIn/CV email or Discord community.","tags":"career hiring","authors":"innno_ nikki","date":{"days":20027},"category":"careers > open-positions"},"122":{"file_path":"careers/open-positions/growth-lead.md","title":"Growth Lead","description":"You will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Growth position available at Dwarves: tech-savvy company focused on innovation.<hr />- Team: software engineers, designers, advocates; founded in Saigon and Toronto six years ago.<hr />- Purpose: empower innovations, co-create tech solutions; software is central to the future.<hr />- Activities: <hr />  - R&D on new tech applications.<hr />  - Development of software, web, app, SaaS, cloud platforms.<hr />  - Support and investment for startup founders.<hr />  - Community engagement through tech projects, events.<hr />- Marketing role: inbound strategy, audience growth, reputation enhancement.<hr />- Responsibilities:<hr />  - Develop tactics for audience engagement.<hr />  - Traffic generation to company channels.<hr />  - Campaign execution, reporting, monitoring.<hr />  - Marketing campaigns from ideation to implementation.<hr />  - Prepare reports for management.<hr />- Benefits: flat structure, autonomy, remote work, competitive salary, education allowance, KPI rewards, stock options.<hr />- Interview process: <hr />  1. Review & reference checks.<hr />  2. Skills assessment: English, writing, logical thinking.<hr />  3. Team interview with Ops and relevant members.<hr />  4. Immediate offer to top candidate.<hr />- Application process: email with position details, portfolio, and references to <team@d.foundation>.<hr />- Additional resources: company website, product links, community projects, culture handbooks.<hr />- Open to unsolicited applications from talented individuals. <hr />- Join Discord community for networking with +300 engineers and designers.","tags":"career hiring","authors":"duy nikki","date":{"days":19194},"category":"careers > open-positions"},"123":{"file_path":"careers/apprentice/2022/batch-of-2022.md","title":"Apprenticeship batch of 2022","description":"It's our second attempt rolling out this program. But the motivation stays the same: Accelerating someone's current software development skillset.","spr_content":"- **Program Overview**: Focus on reinforcing the foundation for software engineers with 1+ years of experience. <hr />- **Target Audience**: Not for interns or veterans; aimed at accelerating skillsets.<hr />- **Core Components**: <hr />  - Software Development Practices<hr />  - Real-project Scenarios<hr />  - Engineering Work Ethics & Principles<hr />- **Selection Criteria**: <hr />  - Real-work experience<hr />  - Open-minded attitude<hr />  - Can-do mindset<hr />  - Learning spirit<hr />  - Proactivity<hr />  - English competency<hr />- **Applicant-to-Apprentice Ratio**: 1 out of 20 applicants selected after narrowing down from 140.<hr />- **Feedback Mechanism**: Continuous improvement through apprentices' feedback; highlights both positive aspects and constructive criticisms.<hr />- **Outcomes**:<hr />  - **Knowledge Upgrade**: Emphasis on modern best practices and foundational systemization.<hr />  - **Continuous Learning**: Encouraged self-directed learning and sharing within the team.<hr />  - **Career Path Development**: Apprentices gain clearer career trajectories; examples of role transitions (DS to Backend).<hr />  - **Engineering Principles**: Cultivation of responsibility and ownership in work.<hr />  - **Collaborative Methodology**: Preference for peer-to-peer learning over traditional mentoring.<hr />  - **Team Environment**: Strong support system across roles and seniorities.<hr />- **Future Directions**:<hr />  - Establishing a new Data Team to address high demand for skilled data professionals.<hr />  - Preparing for high-value data-centric projects and discussions.<hr />- **Next Steps**: Welcoming the 2022 cohort of apprentices, empowering them to tackle larger projects. <hr />- **Continuous Growth**: Acknowledgment of ongoing learning for both apprentices and organizers, with aim to enhance future iterations of the program.","tags":"apprenticeship career","authors":"duy nikki","date":{"days":19258},"category":"careers > apprentice > 2022"},"124":{"file_path":"careers/apprentice/apprentice.md","title":"Apprentice program","description":"The Apprentice program is a six-month earn-and-learn training experience for aspiring software developers to gain professional skills working on real projects. Participants receive mentorship, develop technical and professional capabilities, and learn state-of-the-art engineering practices through hands-on work.","spr_content":"- **Program Overview**: Six-month earn-and-learn apprenticeship for aspiring software developers.  <hr />- **Goal**: Master craftsmanship in quality software development through mentorship and real-world experience.  <hr />- **Target Audience**: Individuals seeking entry into tech, especially from non-traditional backgrounds.  <hr /><hr />- **Learning Framework**:  <hr />  - **Engineering Skills**:  <hr />    - Proficiency in multiple programming languages.  <hr />    - Use of advanced DevOps practices: CI/CD, containerization.  <hr />    - API development (REST/GraphQL).  <hr />    - Effective code reviews and pair programming.  <hr />    - Development environment setup and production monitoring.  <hr />  - **Design Principles**:  <hr />    - Design thinking, UX frameworks, and information architecture.  <hr />    - Application of visual and atomic design principles.  <hr />  - **Team Collaboration**:  <hr />    - Understanding team structures and communication dynamics.  <hr />    - Ethics in software engineering.  <hr />  - **Quality Metrics**:  <hr />    - Identifying well-crafted software characteristics and managing risks.  <hr />  - **Industry Trends**:  <hr />    - Insights into software evolution, agile methodologies, and tech innovations (e.g., AI/ML, blockchain).  <hr />  - **Career Development**:  <hr />    - Identifying personal strengths and career paths in tech.  <hr /><hr />- **Program Timeline**:  <hr />  - **Month 1**: Onboarding and foundational training; pair programming practice.  <hr />  - **Months 2-4**: Integration into product teams, mentoring sessions, and teamwork application.  <hr />  - **Final Month**: Group studies, technology evaluations, impactful projects, and program completion review.  <hr /><hr />- **Application Process**: Open to those aiming to excel in quality software shipping across diverse backgrounds. Apply via designated link.  ","tags":"apprentice career","authors":"duy nikki tieubao","date":{"days":19066},"category":"careers > apprentice"},"125":{"file_path":"careers/life/group/2023-06-01-software-design-group.md","title":"Software design group: Nurturing architects at Dwarves","description":"At the end of 2021, starting with engineering practices, the core idea behind creating a software design group is to enable engineers to develop the skills required to become software architects.","spr_content":"- Software architecture emphasizes trade-offs; understanding \"why\" is critical.<hr />- Dwarves prioritize growth, both individually and as a team.<hr />- The Software Design Group aims to nurture engineers into software architects.<hr />- Progression involves practical application over merely theoretical knowledge.<hr />- Inclusivity is paramount; diverse backgrounds enrich team dynamics.<hr />- Continuous training enhances technical perspectives, system design skills, and UX focus.<hr />- Team collaboration is vital, regardless of individual roles or seniority.<hr />- High-quality software solutions are the primary goal of the Software Design Group.<hr />- Hands-on involvement integrates new discoveries into practices.<hr />- Personal growth and innovation are fostered in a supportive environment.<hr />- Evidence of progress can be found in demos, articles, and discussions shared within the community.<hr />- Each team's collective knowledge contributes to robust, scalable software architectures.<hr />- Creative solutions flourish through collaboration, elevating overall performance.<hr />- Lifelong learning and coding are essential for sustained success.","tags":"career life-at-dwarves software","authors":"innno_","date":{"days":19509},"category":"careers > life > group"},"126":{"file_path":"careers/archived/frontend-developer-junior.md","title":"Junior Frontend Developer","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Engineer at Dwarves; collaborate with talented team and clients; creative freedom and responsibility.<hr />- Benefits: Full employment; access to perks and resources; supportive community culture.<hr />- Responsibilities: <hr />  - Develop mobile-first, responsive UI; strong design understanding.<hr />  - Create efficient, reusable front-end systems.<hr />  - Work with Backend and Designers to build/iterate product features.<hr />  - Address performance issues; take ownership and pride in work.<hr />  - Engage in training, knowledge sharing, and team learning activities.<hr />- Qualifications:<hr />  - Linux or Mac user; Computer Science or related major.<hr />  - Proficient in Javascript, HTML/CSS; ReactJS knowledge is advantageous.<hr />  - Cloud project launch experience; Agile/Scrum familiarity.<hr />  - Strong problem-solving skills; attention to detail; can-do mindset; engineering excellence pursuit.<hr />  - Balance individual programming skills with team collaboration.<hr />- Work Environment:<hr />  - Technology-focused; supportive teamwork; opportunities for growth through experience and feedback.<hr />  - Join a community centered around technology discussions and learning.<hr />- Interview Process:<hr />  1. Application review.<hr />  2. Team interview (30 mins with HR and engineering leads).<hr />  3. Immediate offer for selected candidates.<hr />- Openness: Encouragement to apply even if specific roles are not listed; talented applicants welcomed.<hr />- Call to Action: Apply via email; join Discord community of engineers and designers.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"127":{"file_path":"careers/archived/ios-developer.md","title":"iOS Developer - EnergyTech","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Engineer at Dwarves<hr />- Environment: Collaborative, supportive team; client interaction.<hr />- Work Style: Freedom in project contribution; focus on quality and self-improvement.<hr /><hr />### Responsibilities:<hr />- Develop and maintain iOS products.<hr />- Participate in scrum teams; engage in skill-sharing.<hr />- Implement process improvements: unit tests, code reviews, security.<hr />- Maintain mobile automation test suite.<hr />- Collaborate on product and technology roadmap.<hr /><hr />### Qualifications:<hr />- Passion for clean, readable code.<hr />- Code reflects programming mentality and problem-solving.<hr />- Enjoys writing testable iOS code.<hr />- 3-5+ years Swift experience; familiar with dependency managers (Cocoapods, Swift Package Manager).<hr />- Experience with command-line tools; unit tests with XCTest; TDD encouraged.<hr />- Improving iOS CI/CD pipelines; UI automation testing (XCUITest, Appium).<hr />- Architectural experience in in-house iOS libraries.<hr />- High-quality code review skills.<hr /><hr />### Benefits:<hr />- Supportive team environment; knowledge-sharing community.<hr />- Impactful and meaningful projects; selective participation.<hr />- Engagement in technology discussions and learning opportunities.<hr /><hr />### Interview Process:<hr />1. Application review for criteria assessment.<hr />2. Technical challenge to evaluate skills; small gift upon completion.<hr />3. Team interview with HR and relevant members.<hr />4. Offer extended to suitable candidates promptly.<hr /><hr />### Open Invitation:<hr />- Apply anytime; open to talented individuals beyond listed roles.<hr />- Contact via email with LinkedIn/CV; join Discord community.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"128":{"file_path":"careers/archived/Golang.md","title":"Golang","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Seeking a Gopher for the Dwarves Foundation team in Saigon.<hr />- Innovation service firm founded in 2014; emphasizes craftsmanship in software development.<hr />- Achievements: 5 years in market, 40 team members, 10 members per deployment, influenced 3 Vietnam Development Communities.<hr />- Requirements:<hr />  - Share the same values (\"DNA\").<hr />  - Linux or Mac user.<hr />  - Familiarity with Agile philosophy and Scrum framework.<hr />  - Proficiency in Golang; experience in shipping web applications using CI/CD and Docker.<hr />  - Competence in managing large-scale web services.<hr />  - Strong understanding of system performance and scaling.<hr />  - Excellent communication, analytical skills, critical thinking concerning growth and stability.<hr />  - Experience writing unit and integration tests.<hr />- Job responsibilities:<hr />  - Shape engineering fundamentals at Dwarves Foundation.<hr />  - Design and maintain scalable code.<hr />  - Oversee system maintenance to ensure service uptime.<hr />  - Collaborate with team to propose optimal solutions.<hr />- Benefits & Perks:<hr />  - Comprehensive healthcare and life insurance for full-time members.<hr />  - 40-hour workweek; balanced workload to prevent burnout.<hr />  - No superficial office perks; focus on personal life balance.<hr />  - Employee Stock Option Plan; potential ownership stakes based on contributions.<hr />  - Flexible working hours; respect for team schedules and commitments.<hr />  - Paid time off; two weeks vacation, additional personal days, honor system for tracking.<hr />- Application process:<hr />  - Apply online or submit a short CV via email with specific subject line.<hr />  - Include personal and professional details, public profiles, project portfolio, and references.<hr />  - Emphasis on practical skills over formal education.<hr />- Apprenticeship program available for potential candidates needing training support.","tags":"career golang","authors":"nikki","date":{"days":19194},"category":"careers > archived"},"129":{"file_path":"careers/archived/product-designer.md","title":"Product Designer","description":"As a designer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Product Designer at Dwarves.<hr />- Environment: Collaborate with talented, kind team; client interaction.<hr />- Freedom: Opportunity to enhance project quality, prove self-worth.<hr />- Experience: Minimum 2 years in product design; openings for all levels.<hr />- Portfolio: Must showcase high-quality UI/UX work.<hr />- Tools: Proficient in Sketch/Figma; strong prototyping skills.<hr />- Attention to Detail: Keen eye for iconography, typography, color, space.<hr />- Platform Knowledge: Familiar with iOS, Android, web conventions; judicious breaking of norms.<hr />- Responsibilities: <hr />  - Create wireframes and prototypes addressing UX challenges.<hr />  - Design elegant systems for simplified user experiences.<hr />  - Focus on visual and motion design details.<hr />  - Ship, assess, and improve designs through feedback.<hr />- Interview Process: <hr />  1. Application review and reference check.<hr />  2. Skills assessment (English, Writing, Logical Thinking).<hr />  3. Team interview with Ops and relevant members.<hr />  4. Immediate offer to the best candidate.<hr />- Application: Email response within three days; open to unsolicited talent.<hr />- Community: Discord channel of 300+ engineers/designers for collaboration and networking.","tags":"career design","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"130":{"file_path":"careers/archived/macos-developer.md","title":"Software Engineer, macOS","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Engineering role at Dwarves: collaborative, client-focused, freedom to innovate.<hr />- Membership perks: full pay, access to resources, empowerment in projects.<hr />- Responsibilities include:<hr />  - Engineering fundamentals definition.<hr />  - Scalable, maintainable code design and writing.<hr />  - Collaboration with Backend Engineers for features and experiments.<hr />  - Participation in design and code reviews.<hr />  - Communicating front-end best practices.<hr />  - Culture-building within the team.<hr />- Success factors:<hr />  - Proficiency in MacOS/Unix.<hr />  - Ownership of the platform.<hr />  - Familiarity with Agile/Scrum methodologies.<hr />  - Passion for programming and innovation.<hr />  - Strong Swift knowledge, design skills, critical thinking.<hr />  - Unit testing experience.<hr />  - Objective-C knowledge is beneficial.<hr />- Interview process: screening, team interview (30 mins), immediate offer for promising candidates.<hr />- Open to unsolicited applications from talented individuals.<hr />- Engagement opportunities: apply via email, Discord community of engineers/designers.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"131":{"file_path":"careers/archived/Android.md","title":"Android","description":"WE ARE LOOKING FOR AN ANDROID DEVELOPER TO JOIN OUR TEAM IN SAIGON. Join a team of developers and designers dedicated to creating products people love to use.","spr_content":"- Seeking Android Developer for Dwarves Foundation, Saigon.<hr />- Team of developers and designers focused on user-friendly products.<hr />- Established in 2014; emphasizes craftsmanship in software development.<hr />- 5 years in market; 40 talented members; 10 per deployment; 3 Vietnam communities influenced.<hr /><hr />**Requirements:**<hr />- Shared values and culture (\"DNA\").<hr />- Proficient in Linux or Mac.<hr />- Familiar with Agile and Scrum.<hr />- Knowledge of Dart and Flutter.<hr />- Passionate about programming and innovative problem-solving.<hr />- Strong communication and analytical skills; critical thinker regarding system growth/stability.<hr />- Experience in unit testing; Android development (Java/Kotlin) is advantageous.<hr /><hr />**Job Role:**<hr />- Define engineering fundamentals; maintainable code at scale.<hr />- Collaborate with Backend Engineers; design/code reviews.<hr />- Communicate front-end best practices.<hr /><hr />**Benefits:**<hr />- Comprehensive medical and life insurance.<hr />- Sustainable 40-hour workweek; occasional emergency pushes.<hr />- Work-life balance; no forced office perks.<hr />- Employee Stock Option Plan; potential to own company shares.<hr />- Flexible hours; respectful of team commitments and meeting schedules.<hr />- Two weeks paid vacation; additional personal discretion days; honor system for time off.<hr /><hr />**Application Process:**<hr />- Apply online or send short CV to spawn@d.foundation.<hr />- Include application form: work history, position details, public profile links, project portfolio, references.<hr />- Focus on abilities, not formal education or credentials.<hr />- Open to training via Apprenticeship Program for potential candidates.","tags":"career mobile","authors":"nikki","date":{"days":19194},"category":"careers > archived"},"132":{"file_path":"careers/archived/react.js-web-engineer.md","title":"Web Engineer, React.js","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Engineer at Dwarves - collaboration focused, supportive environment, direct client interaction.<hr />- Responsibilities:<hr />  - Analyze requirements, propose solutions, enhance projects.<hr />  - Address technical challenges, adopt new technologies.<hr />  - Collaborate with designers on iterative design and implementation.<hr />  - Write clean, maintainable code adhering to best practices.<hr />  - Develop visually appealing, scalable web applications.<hr />  - Employ mobile-first, responsive design principles.<hr />  - Create efficient, reusable front-end systems.<hr />  - Identify and resolve performance issues.<hr />  - Follow Agile methodologies for project management.<hr /><hr />- Requirements:<hr />  - Minimum 3 years web development experience.<hr />  - Proficient in ReactJS/NextJS, Redux/Recoil.<hr />  - Strong knowledge of HTTP, REST API, JSON.<hr />  - Expertise in HTML, CSS; familiarity with Web Socket, Service Worker.<hr />  - Proven track record in web performance optimization.<hr />  - Effective communication skills, collaborative mindset.<hr />  - Experience with trading applications is advantageous.<hr /><hr />- Benefits:<hr />  - Talented, supportive team dynamics fostering personal and professional growth.<hr />  - Direct client engagement with meaningful projects.<hr />  - Involvement in tech community for knowledge sharing.<hr />  <hr />- Interview Process:<hr />  1. Application review for initial screening.<hr />  2. Technical challenge to evaluate skills; completion rewarded with a gift.<hr />  3. Team interview with HR and technical members.<hr />  4. Immediate offer for successful candidates.<hr /><hr />- Additional Info: Open to talented applicants outside listed positions. Community engagement via Discord for engineers and designers.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"133":{"file_path":"careers/archived/community-executive.md","title":"Community Executive","description":"As a community executive at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- **Success Factors**: Prior marketing experience, event/podcast facilitation skills, strong communication, can-do attitude, team ethics, flexibility, adaptability, web 3.0 knowledge as a bonus.<hr />- **Responsibilities**: Develop community strategies, manage social media, facilitate Dwarves Discord activities, represent company at events, organize outreach programs, build community relationships, serve as contact point for local organizations.<hr />- **Interview Steps**: 1. Review & Reference check, 2. Skills assessment (English, Writing, Logical Thinking), 3. Team interview, 4. Offer issuance.<hr />- **Benefits**: Remote work, flat structure, HCMC office, medical insurance, full salary during probation, performance reviews, education allowance, ESOP opportunity.<hr />- **Application Encouragement**: Open to talented candidates beyond listed roles; invitation to email with LinkedIn/CV; community engagement through Discord.","tags":"career communications","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"134":{"file_path":"careers/archived/QA.md","title":"QA Engineer","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Company: Dwarves Foundation, established 2014, innovation service firm.<hr />- Values craftsmanship in software development.<hr />- Team: 40 members, 10-per-deployment size, engaged in 3 Vietnamese development communities.<hr />- Position: QA Engineer in Saigon.<hr />  <hr />**Requirements:**<hr />- High attention to detail (carefulness).<hr />- Proficient in Linux or Mac.<hr />- Familiar with Agile and Scrum frameworks.<hr />- Knowledge in software testing (Regression, E2E, Sanity, Performance).<hr />- Experience with task management tools (Trello, Jira, Gitlab Board).<hr />- RESTful API testing skills (Postman, Charles, Insomnia).<hr />- Proficient in Git.<hr />- Basic database knowledge (PostgreSQL, MySQL, NoSQL).<hr />- Basic UX knowledge.<hr /><hr />**Responsibilities:**<hr />- Ensure product quality.<hr />- Analyze and review requirements.<hr />- Test project scope.<hr />- Document test plans, strategies, and cases.<hr />- Verify development processes.<hr />- Research and promote new testing techniques.<hr /><hr />**Benefits & Perks:**<hr />- Comprehensive medical and life insurance.<hr />- Sustainable 40-hour work week; occasional flexibility for emergencies.<hr />- No excessive office perks; focus on work-life balance.<hr />- Employee Stock Option Plan for significant contributors.<hr />- Flexible working hours with respect for team meetings.<hr />- Paid Time Off: two weeks vacation, personal days, and national holidays; honor system for additional days.<hr /><hr />**Application Process:**<hr />- Submit a short CV or relevant information via email (subject: QA - Be an awesome dwarf).<hr />- Include personal profile links (LinkedIn, GitHub, etc.).<hr />- Provide a portfolio of projects with links.<hr />- References appreciated, formal education not prioritized.<hr />- Apprenticeship program available for skill development.","tags":"career","authors":"nikki","date":{"days":19194},"category":"careers > archived"},"135":{"file_path":"careers/archived/backend-engineer-go-elixir-rust.md","title":"Backend Engineer, Go/Elixir/Rust","description":"Looking for a well-rounded backend engineer with experience in shipping web applications to production, CI/CD with docker centric workflow, unit testing, performance and scaling, etc. with Go/Elixir/Rust.","spr_content":"- **Team Environment**: Collaborative, supportive, talent-rich culture; emphasis on kindness and mutual upliftment. <hr />- **Client Interaction**: Direct engagement with clients; freedom to influence project quality and personal growth.<hr />- **Requirements**: <hr />  - Linux or Mac proficiency.<hr />  - Agile development knowledge, particularly Scrum.<hr />  - Experience with Golang, Elixir, or Rust.<hr />  - Proven track record in CI/CD, especially with Docker workflows.<hr />  - Large-scale web services familiarity; system performance and scaling understanding.<hr />  - Strong communication and analytical skills; critical thinking in system stability.<hr />  - Competence in writing effective unit tests.<hr />- **Responsibilities**: <hr />  - Define engineering fundamentals at Dwarves.<hr />  - Design scalable, maintainable code.<hr />  - Engage in problem-solving discussions with team.<hr />  - Ensure system uptime and stability.<hr />- **Opportunities**:<hr />  - Work on meaningful projects with selective engagement.<hr />  - Community learning and technology discussions.<hr />- **Interview Process**: <hr />  1. Application review based on set criteria.<hr />  2. Team interview with HR and engineering leaders.<hr />  3. Client interview.<hr />  4. Immediate offer for suitable candidates.<hr />- **Application Call-to-Action**: Encouragement to apply directly or with unsolicited talent proposals; swift response guarantee. <hr />- **Community Engagement**: Join Discord with 300+ engineers and designers for networking and knowledge sharing.","tags":"backend career","authors":"monotykamary nikki","date":{"days":19702},"category":"careers > archived"},"136":{"file_path":"careers/archived/full-stack-engineer.md","title":"Full-Stack Engineer","description":"We are looking for a Full-Stack Engineer who is passionate about building scalable, secure, and efficient web applications. The ideal candidate will have a strong understanding of both frontend and backend technologies, and the ability to work across the entire stack.","spr_content":"- **Hiring Full-Stack Engineers**: Flexibility, remote work, meaningful solutions, talented team.<hr />- **Company Overview**: Dwarves, research-focused tech firm since 2015, profitable from day one, steady growth.<hr />- **Mission**: Build and ship top-tier software, operate tech teams, invest in ambitious talent.<hr />- **2021 Goals Achieved**: Seeking talented engineers for future projects.<hr />- **Life at Dwarves**: Collaborative culture, emphasis on engineering as a core value.<hr />- **Recent Products**: <hr />  - **Ascenda**: Rewards for financial services companies.<hr />  - **Fornax AI**: Startups’ communication platform for investors.<hr />  - **SP Group**: Utility distribution enterprise in Asia and Australia.<hr />- **Web 3.0 Advances**:<hr />  - **Attrace**: Crypto referral protocol.<hr />  - **Hedge Foundation**: Crypto account management dashboard.<hr />  - **Tokenomy**: Decentralized Community VC in Indonesia.<hr />- **Role Expectations**: Define engineering fundamentals, write maintainable code, engage in team discussions, maintain systems.<hr />- **Requirements**:<hr />  - OS: Linux/Mac<hr />  - Experience: 3+ years with Node.js, Firebase, CI/CD, shipping web apps.<hr />  - Skills: React, Vite, TypeScript, Tailwind CSS, AI/LLM interest, system performance.<hr />  - Traits: Excellent communication, analytical skills, collaboration, critical thinking.<hr />- **Benefits**:<hr />  - Supportive team environment.<hr />  - Direct client interaction, freedom to impact projects.<hr />  - Work on meaningful projects, community engagement.<hr />- **Contact Information**: Apply via email for immediate response, talent welcomed beyond open roles.<hr />- **Join the Community**: Opportunity to engage with 300+ engineers and designers on Discord.","tags":"career fullstack","authors":"minh","date":{"days":20124},"category":"careers > archived"},"137":{"file_path":"careers/archived/product-designer-new-grad.md","title":"Product Designer, New Grad","description":"As a designer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- **Success Criteria**: High-quality UI/UX portfolio; proficiency in Sketch/Figma; proficient in prototyping; detail-oriented expertise in iconography, typography, color, and space; familiarity with platform conventions (iOS, Android, web); ability to know when to innovate.  <hr />- **Key Responsibilities**: Lead end-to-end design processes; develop wireframes and prototypes for UX challenges; focus on visual and motion design details; create design systems for seamless user experiences; utilize feedback (quantitative/qualitative) to enhance designs.  <hr />- **Interview Process**: <hr />  1. Conduct review and reference verification post-application.  <hr />  2. Administer skills assessment test emphasizing English, writing, and logical reasoning.  <hr />  3. Facilitate team interview with Ops and relevant members for shortlisted candidates.  <hr />  4. Extend immediate job offer to the top candidate.  <hr />- **Application Call-to-Action**: Direct applicants to apply via email; potential candidates encouraged to share LinkedIn/CV if not specified in job postings; invite to join Discord community of 300+ engineers and designers.  ","tags":"career design","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"138":{"file_path":"careers/archived/executive-assistant.md","title":"Executive Assistant","description":"We are seeking a highly organized, proactive, and experienced Executive Assistant to provide support to our senior executives. The ideal candidates will be responsible for identifying new business opportunities, fostering strong client relationships, and driving growth by promoting our services to potential clients globally.","spr_content":"- **Position**: Executive Assistant at Dwarves, remote work<hr />- **Key Responsibilities**: <hr />  - Support COO and senior management<hr />  - Enhance business operations<hr />  - Employee lifecycle support<hr />  - Monitor employee satisfaction<hr />  - Manage company documentation (Notion, GitHub, Google Drive)<hr />  - Collaborate with Compliance for process adherence<hr />  - Propose strategic operational goals<hr />  - Promote internal engagement for employee happiness<hr />  - Manage office and company assets <hr />  - Assist Community/Marketing with events <hr />  - Additional support for management board tasks <hr />- **Required Skills**:<hr />  - Previous experience in technology firms<hr />  - Strong soft skills & resilience<hr />  - Willingness to learn <hr />  - Proficient in multiple platforms <hr />  - Excellent English (spoken & written)<hr />  - Experience in C&B roles and knowledge of labor laws<hr />- **Company Profile**: Dwarves, a profitable tech firm since 2015, focuses on research and quality software development, fostering innovation.<hr />- **Culture**: Flat structure, remote-friendly, focused on employee empowerment.<hr />- **Benefits**:<hr />  - Full salary during probation<hr />  - Bi-annual performance reviews<hr />  - Healthcare insurance<hr />  - Education allowance <hr />  - ESOP opportunity <hr />- **Interview Process**:<hr />  1. Review & reference checks<hr />  2. Skills assessment (English, Writing, Logical Thinking)<hr />  3. Team interviews<hr />  4. Offer to best candidate immediately <hr /><hr />- **Call to Action**: <hr />  - Apply via email<hr />  - Refer others who might fit <hr />  - Join Discord for community engagement.","tags":"career","authors":"nikki vitran","date":{"days":19706},"category":"careers > archived"},"139":{"file_path":"careers/archived/react-native-developer.md","title":"React Native Developer","description":"We're looking for talented developer with experience in React Native to join Dwarves and work remotely, on a fast-growing US startup.","spr_content":"- Seeking React Native developer for remote role at Dwarves.<hr />- Work with a fast-growing US startup.<hr />- Join a talented, supportive team; direct client collaboration.<hr />- Responsibilities include tech foundation establishment, mobile product development, and maintenance.<hr />- Participate in scrum team for skills learning and improvement.<hr />- Focus on process enhancements: unit tests, code reviews, security, CI/CD.<hr />- Maintain mobile automation test suite.<hr />- Collaborate on product and technology roadmap.<hr />- Requirements: 3-5+ years React Native experience, strong JavaScript, HTML, TypeScript, CSS knowledge.<hr />- Proficient in React concepts: Virtual DOM, JSX, lifecycle management.<hr />- Skill in writing testable React Native code, UI Automation testing experience (XCUITest, Appium).<hr />- Proven software delivery system improvement, capable of high-quality code reviews.<hr />- Strong English communication; ability to work autonomously amidst changes.<hr />- Clean, readable code as a reflection of programming mentality.<hr />- Benefits include supportive team environment, impactful projects, and a technology-oriented community.<hr />- Interview process: Application review, technical challenge, team interview, offer.<hr />- Open to referrals for candidates; flexibility for exceptional talent. <hr />- Contact for inquiries or join Discord community for networking.","tags":"career engineering","authors":"nikki","date":{"days":19702},"category":"careers > archived"},"140":{"file_path":"careers/archived/data-engineering.md","title":"Energy - Data Engineering","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself.","spr_content":"- Role: Engineer at Dwarves, collaborating with a talented, supportive team and clients.<hr />- Freedom to impact project quality, showcasing skills and improvement potential.<hr />- Responsibilities: <hr />  - Design, build, operationalize data ingestion and pipeline systems.<hr />  - Transform raw data for analytical use.<hr />  - Facilitate data-driven business decisions.<hr />- Requirements for success: <hr />  - Linux/Mac OS proficiency.<hr />  - Strong statistics background and dataset alignment with business needs.<hr />  - Knowledge of data ingestion, pipeline architecture, and tool coordination.<hr />  - Adaptability to management objectives.<hr />  - Compliance with data governance and security policies.<hr />  - Excellent communication, analytical skills, and critical thinking for system enhancement.<hr />- Work culture:<hr />  - Supportive team environment focused on growth and collaboration.<hr />  - Direct client interaction for impactful, meaningful projects.<hr />  - Engaged community for technology learning and discussions.<hr />- Interview process:<hr />  1. Application screening for qualifications.<hr />  2. Technical challenge to assess relevant skills; completion rewarded.<hr />  3. Team interview with HR and engineering managers.<hr />  4. Immediate offers for suitable candidates.<hr />- Open to potential applicants beyond listed roles; talent welcomed via email.<hr />- Community engagement: Join Discord with 300+ engineers and designers.","tags":"career data-engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"141":{"file_path":"careers/archived/Intern.md","title":"Intern","description":"Working at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- 2018: Launch of Summer Internship Program; open to all university students.<hr />- Aim: Provide real-world project experience; no mundane tasks.<hr />- Goal: Cultivate tech enthusiasm; align with company values for success.<hr />- Career Development: Mentorship for roadmaps; skill enhancement through craftsmanship.<hr />- Compensation: $300/month allowance; value of experience.<hr />- Networking: Expand connections; boost competencies.<hr />- Dwarves Foundation: Established in 2014; innovation service firm emphasizing software craftsmanship.<hr />- Growth Metrics: 5 years market presence; 40 members; influence in 3 Vietnam Development Communities.<hr />- Internship Syllabus: Real projects, exposure to global customers.<hr />- Technical Skills Offered:<hr />  - Basic DevOps: Docker, CI/CD.<hr />  - Backend development: Golang; Agile/Scrum methodologies.<hr />  - Version Control: GIT.<hr />  - Mobile Development: Swift for iOS, Kotlin for Android.<hr />  - Editor proficiency: Vim or alternatives; command-line interface usage.<hr />- Focus on: Problem-solving skills; fostering a proactive mindset.<hr />- Application Process: Available in March or July; send short CV to spawn@d.foundation.<hr />- Philosophy: Prioritize potential over formal education or specific skills.","tags":"career internship","authors":"nikki","date":{"days":19194},"category":"careers > archived"},"142":{"file_path":"careers/archived/iOS.md","title":"iOS Developer","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- **Position**: iOS Developer at Dwarves Foundation, Saigon. <hr />- **Company Overview**: Founded in 2014, focuses on craftsmanship in software development. Team: 40 members, strong engineering culture, impact on Vietnam tech communities.<hr />- **Requirements**: <hr />  - Linux/Mac user, Agile and Scrum familiarity.<hr />  - Proficient in Swift; Objective-C knowledge a plus.<hr />  - Strong communication, analytical, design skills, critical thinking.<hr />  - Experience with unit testing.<hr />- **Responsibilities**:<hr />  - Shape engineering fundamentals, code design, collaboration with backend.<hr />  - Participate in reviews, promote front-end best practices.<hr />- **Benefits**:<hr />  - **Healthcare**: Comprehensive insurance.<hr />  - **Work-Life Balance**: Flexible hours, 40-hour week, focus on quality work.<hr />  - **No Office Traps**: Encourage leaving work at work.<hr />  - **Ownership Opportunity**: Employee Stock Option Plan.<hr />  - **Paid Time Off**: Two weeks vacation, personal days, no strict tracking.<hr />- **Application**:<hr />  - Apply via link or email with a short CV.<hr />  - Include a personal introduction, relevant info, public profiles, portfolio, and references.<hr />- **Culture**: Emphasis on capability over formal education; apprenticeship available for potential candidates.","tags":"career","authors":"nikki","date":{"days":19194},"category":"careers > archived"},"143":{"file_path":"careers/archived/visual-designer.md","title":"Visual Designer","description":"As a designer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Portfolio represents high-quality, thoughtful design.<hr />- Includes user interfaces, iconography, and illustrations.<hr />- Knowledge of typographic and brand principles is essential.<hr />- Mastery of information architecture and usability is crucial.<hr />- Web and mobile design experience is advantageous.<hr />- Familiarity with motion design and illustration enhances profile.<hr />- Responsibilities include owning and evolving the product design system.<hr />- Design sophisticated visuals, from concept to execution.<hr />- Lead creation of design guidelines and communication interface behaviors.<hr />- Collaborate with brand, product design, and engineering teams for effective implementation.<hr />- Interview process: Review & reference check, skills assessment, team interview, job offer.<hr />- Skills assessment focuses on English, writing, and logical thinking.<hr />- Rapid response to applications; talented candidates encouraged to apply.<hr />- Open to unsolicited applications from exceptional individuals.<hr />- Engage with a community of +300 engineers and designers via Discord.","tags":"career design","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"144":{"file_path":"careers/archived/technical-recruiter.md","title":"Technical Recruiter","description":"The ideal candidate will play a pivotal role in sourcing, attracting, and hiring top-tier talents and take care of our team members' growth.","spr_content":"- **Position**: Technical Recruiter at Dwarves (remote).<hr />- **Role**: Source, attract, and hire top-tier talent; support team growth.<hr />- **Company Background**: Research-focused technology firm since 2015; helps companies with software development and tech team operations; profitable and steadily growing.<hr />- **Culture**: Technology as a guiding principle; engineering-centric culture; emphasis on sustainable growth.<hr />- **Qualifications**:<hr />  - 4+ years recruiting experience in tech.<hr />  - Client-facing experience required.<hr />  - Skills in assessing company structures and information flows.<hr />  - Strong communication and interpersonal abilities.<hr />  - Knowledge of software development, databases, and programming languages.<hr />  - Experience in policy development for salaries and promotions.<hr />- **Responsibilities**:<hr />  - Create sourcing strategies targeting universities.<hr />  - Screen and qualify applicants; manage interview processes.<hr />  - Develop job postings for visibility.<hr />  - Engage candidates through outreach and events.<hr />  - Coordinate training and support HR/admin tasks.<hr />- **Benefits**: <hr />  - Flat organizational structure; fully remote work.<hr />  - Healthcare coverage; full salary during probation.<hr />  - Bi-annual performance reviews; education sponsorship.<hr />  - Employee Stock Ownership Plan (ESOP).<hr />- **Interview Process**:<hr />  1. Application review and reference check.<hr />  2. Skills assessment (English, Writing, Logical Thinking).<hr />  3. Team interview with Ops and relevant members.<hr />  4. Job offer to successful candidates.<hr />- **Call to Action**: Encouragement to apply or refer potential candidates; openness to unsolicited talent.<hr />- **Community Engagement**: Invitation to join Discord with engineers and designers.","tags":"career","authors":"nikki vitran","date":{"days":19706},"category":"careers > archived"},"145":{"file_path":"careers/archived/Frontend.md","title":"Frontend","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Frontend Engineer position available in Saigon at Dwarves Foundation.<hr />- Founded in 2014; emphasis on craftsmanship in software development.<hr />- 5 years of experience, 40 members, influence on 3 development communities.<hr />- Requirements include:<hr />  - Linux or Mac proficiency.<hr />  - Passion for coding, innovation, and problem-solving.<hr />  - Strong JavaScript fundamentals and fluency.<hr />  - Familiarity with modern browser technologies.<hr />  - HTML/CSS competency with techniques like BEM, CSS modules.<hr />- Component-based architecture knowledge in frameworks like Angular, React, or Vue required.<hr />- Responsibilities encompass:<hr />  - Implementing responsive mobile-first design.<hr />  - Collaborating with backend engineers and experience designers.<hr />  - Creating reusable front-end systems.<hr />  - Participating in design and code reviews.<hr />  - Addressing performance issues and promoting best practices.<hr />  <hr />- Benefits include:<hr />  - Comprehensive medical and life insurance.<hr />  - Sustainable 40-hour work week.<hr />  - No excessive office perks; focus on life outside of work.<hr />  - Employee stock option plan for significant contributors.<hr />  - Flexible working hours around team commitments.<hr />  - Paid time off honoring personal discretion and team communication.<hr />- Application process:<hr />  - Apply online or via email with a short CV.<hr />  - Include work details, public profiles, project portfolio, and references.<hr />- Education level not emphasized; practical skills prioritized.<hr />- Training options available through an Apprenticeship Program.","tags":"career frontend","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"146":{"file_path":"careers/archived/qc-automation.md","title":"QC Engineer, Automation - Logistics","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Position: Engineer at Dwarves; collaborative and supportive team environment.<hr />- Responsibility: Quality control of an expense management tool for real-time spending monitoring, client communication, and unified accounting data.<hr />- Tasks: Requirement clarification with product owner, testing plan preparation (test cases and checklists), execution of general and exploratory testing, reporting and tracking quality issues, product quality accountability.<hr />- Qualifications: <hr />  - 4+ years as QC Engineer<hr />  - Github familiarity<hr />  - Experience with test management and defect reporting (JIRA, MTM)<hr />  - Database/API testing skills (Postman advantage)<hr />  - Logical, responsible, accountable, strong communication in English, team-oriented work ethic.<hr />- Benefits: <hr />  - Direct client interaction, project impact <hr />  - Supportive community and continuous learning in technology <hr />  - Freedom to enhance project quality and personal growth.<hr />- Interview Process: <hr />  1. Application review based on criteria<hr />  2. Technical challenge to assess skills (gift for completion)<hr />  3. Team interview with HR and engineering team <hr />  4. Immediate offer for suitable candidates.<hr />- Approach: Open to talented individuals even if positions are not listed. <hr />- Action: Apply via email or join Discord community for engagement.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"147":{"file_path":"careers/archived/devops.md","title":"DevOps Engineer - FinTech","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Engineer at Dwarves, focus on teamwork and client interaction.  <hr />- Work environment: Talented, supportive colleagues, freedom to improve project quality.  <hr />- Responsibilities:  <hr />  - Deploy updates, Level 2 support, error reduction tools.  <hr />  - Integrate software with back-end systems, analyze production errors.  <hr />  - Automate processes, troubleshoot systems.  <hr />- Qualifications:  <hr />  - 3+ years in DevOps or similar role, proficient in Docker, NGINX, GitHub workflows.  <hr />  - Experience with automation, databases, SQL, high-level programming (Golang preferred).  <hr />  - Skills in secure systems, problem-solving, team collaboration.  <hr />- Preferred:  <hr />  - Bachelor's in Computer Science/Engineering or related field.  <hr />  - Experience in civil engineering or large company app development.  <hr />- Benefits:  <hr />  - Community support and learning, meaningful projects, opportunities for growth.  <hr />- Interview Process:  <hr />  1. Review applications.  <hr />  2. Team Interview (30-min discussion with HR and engineering staff).  <hr />  3. Technical Interview (assess expertise and problem-solving).  <hr />  4. Offer for selected candidates.  <hr />- Application: Email your CV/LinkedIn, quick response within three days.  <hr />- Culture: Open to talented candidates beyond listed positions; community on Discord.","tags":"career devops","authors":"","date":{"days":19437},"category":"careers > archived"},"148":{"file_path":"careers/archived/qc-manual.md","title":"Fintech - QC Engineer, Manual","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Role: Engineer at Dwarves; focus on collaboration, client interaction, project quality.  <hr />- Product: Expense/spending management tool; real-time monitoring; unified accounting data; department-specific transaction grouping; spending tracker; transparency for managers.  <hr />- Responsibilities: Collaborate with product owner; clarify requirements; prepare testing plans; execute general/exploratory testing; report issues; ensure product quality before deadlines.  <hr />- Requirements: 2+ years as QC Engineer; communication in English; experience with web/mobile testing; detail-oriented; logical thinking; high responsibility.  <hr />- Culture: Supportive team environment; direct client engagement; freedom to enhance project quality; involvement in impactful projects; technology learning community.  <hr />- Interview Process: Application review; technical challenge project; team interview with HR and engineering; immediate offer to successful candidates.  <hr />- Application Call-to-Action: Apply by email; invitations open for talented individuals even if specific roles are not listed.  <hr />- Community: Join Discord with 300+ engineers/designers for discussions and networking.","tags":"career engineering","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"149":{"file_path":"careers/archived/android-developer.md","title":"Mobile Engineer, Android","description":"As an engineer at Dwarves, you will be working closely with a team of talented, kind people and working directly with our clients. There is a lot of freedom to contribute to the quality of the project and improve, or prove yourself","spr_content":"- Engineer role at Dwarves: collaboration, freedom, quality contribution, client interaction.<hr />- Required skills:<hr />  - Proficient Linux/Mac user; ownership of platform.<hr />  - Agile familiarity, especially Scrum.<hr />  - Knowledgeable in Dart and Flutter.<hr />  - Innovative and passionate about programming and problem-solving.<hr />  - Strong communication and analytical skills; critical thinking for growth/stability.<hr />  - Experience in unit testing and optional Android development (Java/Kotlin).<hr />- Responsibilities:<hr />  - Establish engineering fundamentals at Dwarves.<hr />  - Create scalable, maintainable code.<hr />  - Collaborate with Backend Engineers for feature development.<hr />  - Engage in design/code reviews.<hr />  - Advocate for front-end best practices.<hr />  - Cultivate team culture and values.<hr />- Interview process:<hr />  1. Application review based on criteria.<hr />  2. Team interview with HR and engineering members (30-min).<hr />  3. Instant offer for promising candidates.<hr />- Open to talented individuals not applying for specific roles.<hr />- Engage with the team via email or Discord.","tags":"career mobile","authors":"nikki","date":{"days":19437},"category":"careers > archived"},"150":{"file_path":"handbook/guides/asset-request.md","title":"Borrowing & requesting company assets","description":"How to borrow company assets like books or devices, or request new ones. Simple steps for getting the gear you need.","spr_content":"- **Gear Access:** Company assets (books, devices) available for employee use.<hr />- **Borrowing Process:**<hr />  - Use **Basecamp** for tracking.<hr />  - Navigate to **Woodland** project.<hr />  - Create a **borrow request** in \"Request\" To-Do list.<hr />  - Format for request: **Your name | Type - Name/Id of asset | Borrowing date | Returning date**.<hr />  - Upload asset photo upon pick-up.<hr />  - Assign To-Do to **HR**.<hr />- **Example Request:** Huy Nguyen | Book - Start With Why | 19/04/2021 | 26/04/2021.<hr />- **Extending Borrow Time:** Update **Returning date** in To-Do, notify HR.<hr />- **Returning Process:**<hr />  - **Report Issues:** Comment on problems in Basecamp.<hr />  - **Return Item:** Bring back to office.<hr />  - **Complete To-Do:** Mark as done once returned in good condition.<hr />- **Requesting New Assets:**<hr />  - Procedure mirrors borrowing.<hr />  - Go to **Woodland** project, access \"Asset Requests\" To-Do list.<hr />  - Create request: **Your name | Item type - Item name/description | Reason for request**.<hr />  - Assign To-Do to **HR**.<hr />- **Example Request:** Huy Nguyen | Book - Start With Why | For further understanding in inspiration.<hr />- **Be Specific:** Include exact name, model, or link. Explain the 'why' and relevance to team.<hr />- **HR Actions:** <hr />  - Review request and budget.<hr />  - Approve and order item if reasonable.<hr />  - Notify upon arrival via Basecamp.<hr />  - Mark To-Do as done once received.<hr />- **Conclusion:** Simple access to tools enhances productivity.","tags":"assets guide handbook","authors":"","date":{"days":17948},"category":"handbook > guides"},"151":{"file_path":"handbook/guides/email-communication-and-use.md","title":"Email Communication and Use","description":"We use email as our formal tool for both internal and external communication. Every email is utilized for a specific field, which comes along with different instructions.","spr_content":"- **Email as primary communication tool**: Formal channel for internal and external interactions.<hr />  <hr />- **<team@d.foundation>**: <hr />  - **Purpose**: External communication only.<hr />  - **Audience**: Clients and external contacts.<hr />  - **Content**: Agreements and announcements.<hr /><hr />- **<ops@d.foundation>**: <hr />  - **Purpose**: Internal communication.<hr />  - **Audience**: Company employees.<hr />  - **Content**:<hr />    - Employment matters: terms, salary, reviews, meetings.<hr />    - Client interactions logged via cc.<hr />  <hr />- **<spawn@d.foundation>**: <hr />  - **Purpose**: Hiring processes.<hr />  - **Content**:<hr />    - Test invitations: Pre-Assessment/Assignment.<hr />    - Notifications from CCAT for application assessments.<hr />    - Confirmation/rejection emails for applicants.<hr />    - Job offers.<hr />    - Automated CV collection from job sites.<hr />  <hr />- **<accounting@d.foundation>**: <hr />  - **Purpose**: Financial transactions.<hr />  - **Content**:<hr />    - Invoices: incoming and outgoing.<hr />    - Salary adjustment notifications via cc from Operations.<hr />    - Tax-related matters.<hr /><hr />- **<thug@d.foundation>**: <hr />  - **Purpose**: Infrastructure registration. <hr />  - **Content**: Services like Cloudflare, Google Cloud, AWS.","tags":"email guide handbook","authors":"hnh","date":{"days":18262},"category":"handbook > guides"},"152":{"file_path":"handbook/guides/effective-meeting.md","title":"Effective meetings","description":"To make working together flexible and productive, we follow a few simple rules for meetings and group work. Here's how we keep meetings effective.","spr_content":"- Promote flexibility and productivity in remote collaboration through structured meeting rules. <hr />- Use appropriate scheduling tools for organizational clarity.<hr />  - Schedule internal meetings on Basecamp and notify participants.<hr />  - For external meetings, schedule on Basecamp and send Google Calendar invite.<hr />- Start meetings on time to respect everyone's schedule. <hr />  - Leaders initiate promptly; attendees should join ready.<hr />- Maintain core meeting hours between 10 am and 4 pm; schedule meetings 24 hours in advance.<hr />  - For meetings outside core hours, schedule at least a week in advance.<hr />- Offer a video option for enhanced connection, especially with remote participants.<hr />  - Provide video links before meetings; remote attendees should join early.<hr />  - Ideal setups include quiet spaces and stable internet connections; phone-only participation should be limited by organizer's discretion.<hr />- Foster responsibility and collaboration during meetings.<hr />  - Encourage contributions from all team members; voice disagreements constructively.<hr />  - After decisions, everyone commits to the agreed plan without deviation. <hr />- Ensure essential meeting conditions for remote collaboration.<hr />  - Secure a reliable internet connection to minimize delays.<hr />  - Choose quiet spaces to facilitate focus and eliminate disturbances. <hr />- Prepare for successful meetings or pair programming sessions by meeting these essentials.","tags":"guide handbook meeting","authors":"tieubao","date":{"days":17948},"category":"handbook > guides"},"153":{"file_path":"handbook/guides/check-in-at-office.md","title":"Office check-in process for earning ICY","description":"A guide on how to check in at the office and claim ICY token rewards.","spr_content":"- Remote work benefits, but in-person interactions enhance learning, sharing, and connections.<hr />- Implementing a hybrid work model for optimal engagement.<hr />- Easy check-in process incentivizes office attendance with ICY tokens.<hr />- Office environment designed for focus and creativity; find a comfortable workspace.<hr />- Connect to office Wi-Fi for seamless integration with company systems.<hr />- Use Discord; log into Dwarves server for communication.<hr />- Check-in via the **`🏢・lobby`** channel by sending \"gm\" for attendance.<hr />- Earn 5 ICY tokens (~$7.5) as a reward for in-person check-in.<hr />- Utilize office time to reconnect with teammates and exchange ideas.<hr />- Emphasis on the value of face-to-face interaction in the hybrid setting.","tags":"guide handbook hybrid-working","authors":"innno_ monotykamary","date":{"days":19991},"category":"handbook > guides"},"154":{"file_path":"handbook/community/memo.md","title":"Memo Handbook","description":"Memo is where we share everything we learn, build, and think about product craftsmanship, engineering, and our culture. It's our commitment to learning in public.","spr_content":"- **Every company has stories:** Narrative culture shapes identity and shared experiences.<hr />- **Dwarves Memo:** A platform for storytelling, knowledge sharing, and internal learning.<hr />- **Public learning engine:** Captures incremental improvements and repetitive experimentation. <hr />- **Content Types:** <hr />  - Team research and deep dives (tech insights, case studies).<hr />  - Company updates and operational insights.<hr />  - Cultural documentation (values, culture facts).<hr />  - Podcast transcripts and video/webinar notes.<hr />  - Playbooks and handbooks.<hr />- **Knowledge Sharing Philosophy:** <hr />  - Calm company approach to attract like-minded individuals. <hr />  - Inbound strategy over aggressive marketing.<hr />- **Content Pipeline:** <hr />  1. **Discovery phase:** Learning new insights or embarking on projects.<hr />  2. **Exploration phase:** Documenting findings and answering questions.<hr />  3. **Publication phase:** Scheduling and sharing polished content.<hr />- **Contribution Process:** <hr />  - Utilize Markdown files via GitHub repository for posting.<hr />  - Include crucial YAML frontmatter (title, description, tags, author, date).<hr />  - Standard Markdown formatting guidelines (use headings, lists, images, and code blocks wisely).<hr />  - Submit pull requests for review and publication.<hr />- **Content Elevation Concept:** <hr />  - Initial drafts evolve through refinement, moving to the main repository structure.<hr />  - Encourage collective contributions reflecting lived experiences, adding value to Memo.","tags":"handbook learning memo","authors":"tieubao","date":{"days":18707},"category":"handbook > community"},"155":{"file_path":"consulting/partners-network.md","title":"Partners Network","description":"Partnering with Dwarves is not just a collaboration, it's a strategic investment in trust, network and business growth. Being our partners mean sharing opportunities, resources, connections and scaling up together.","spr_content":"- Partner with Dwarves for co-creation driven by mutual interests.<hr />- Average deal size: $30,000; potential earnings: $2,400/project.<hr />- Monthly commissions from project start until end; flexibility in compensation structure.<hr />- Strategic partnership enhances trust, resources, opportunities, and business growth.<hr />- Leverage Dwarves' expertise for innovative software solutions aligned with industry standards.<hr />- Full access to resources, including staffing, leadership, investor connections, and event organization.<hr />- Collaborative marketing with shared collateral and success stories.<hr />- Continuous support through training on products, sales techniques, and market insights.<hr />- Ideal partners: tech consultants, startup founders, IT service companies, universities, and tech event organizers.<hr />- Simple application process: apply via email, undergo review, onboarding, and start selling.<hr />- Dwarves: experts in software design and development, focused on client business value.<hr />- Team: 80+ developers, 4 designers, supporting 70+ projects globally.<hr />- Services tailored to client needs: staff augmentation, consulting, development, and product design.<hr />- Web3 focus: blockchain integration, smart contracts, DeFi solutions, and NFT launches.<hr />- Clients: tech-focused organizations, from startups to enterprises, prioritizing technology for growth. <hr />- Tech stack: Go, Elixir, Rust, Node.js; Frontend: Typescript, React; Mobile: Objective-C, Swift, Kotlin; Cloud: GCP, AWS, Azure.","tags":"consulting partners","authors":"nikki tieubao","date":{"days":19789},"category":"consulting"},"156":{"file_path":"consulting/case-study/swift.md","title":"Swift: Building a micro frontend design system for e-commerce","description":"We helped Swift, an e-commerce partner, implement a micro frontend architecture with a shared design system that improved development efficiency and created a consistent user experience across multiple applications.","spr_content":"- **Industry**: E-commerce / Web Development in Southeast Asia.<hr />- **Business Context**: Swift's e-commerce platform faced development bottlenecks, inconsistent user experiences, and duplicate code.<hr />- **Solution**: Implemented micro frontend architecture with a shared design system.<hr />- **Outcome**: Improved development speed, code quality, and user experience consistency.<hr /><hr />- **Services Provided**: Frontend Architecture, Design Systems, Component Libraries.<hr /><hr />- **Technical Highlights**:<hr />  - **Component Development**: Utilized React for reusable UI elements.<hr />  - **Documentation**: Employed Storybook for component showcasing and testing.<hr />  - **Styling Approach**: Employed CSS-in-JS for encapsulated styles.<hr />  - **Package Distribution**: Npm package for version management and sharing.<hr />  - **Implementation Strategy**: Independent development before integration.<hr />  - **Validation**: Rigorous testing across multiple application environments.<hr />  - **Deployment**: Established independent pipelines for each micro frontend.<hr /><hr />- **Challenges Faced by Swift**:<hr />  - Development bottlenecks due to inter-team dependencies.<hr />  - Inconsistent user experience across different applications.<hr />  - Duplicate code leading to inefficiencies.<hr />  - Slow release cycles resulting from monolithic structure.<hr /><hr />- **Micro Frontend Definition**: Architectural approach breaking large websites into smaller, independent pieces, allowing for seamless integration and team autonomy.<hr /><hr />- **Building Strategy**: Segregated platform into manageable components focused on specific business functions.<hr />  - **Team Structure**: At least ten dedicated teams for various application parts (e.g., login, user profiles, ads, messaging).<hr />  <hr />- **Shared Design System Implementation**:<hr />  - Developed React components for uniformity and customization.<hr />  - Used Storybook for clear documentation.<hr />  - Implemented CSS-in-JS to prevent style conflicts.<hr />  - Distributed as npm package for easy access and updates.<hr /><hr />- **Development Process**:<hr />  1. Identify common UI patterns.<hr />  2. Build flexible components.<hr />  3. Conduct thorough testing in multiple environments.<hr />  4. Document for ease of use.<hr /><hr />- **Team Workflow**:<hr />  1. Design team builds and tests components.<hr />  2. Publish to npm for accessibility.<hr />  3. Integrate necessary components in applications.<hr />  4. Gather feedback for improvement.<hr /><hr />- **Achieved Benefits**:<hr />  - Faster development cycles due to independent team workflows.<hr />  - Consistent user experience through shared UI components.<hr />  - Reduced code duplication, enhancing code quality.<hr />  - Simplified maintenance via automatic updates to the design system.<hr />  - Enhanced scalability, accommodating new teams and applications without disruption.<hr /><hr />- **Future Plans**: Integration of the shared design system in other applications, continuation of this architectural approach for ongoing development efficiency and platform growth.","tags":"case-study ecommerce","authors":"mashiro5951","date":{"days":19450},"category":"consulting > case-study"},"157":{"file_path":"consulting/case-study/dental-marketplace.md","title":"Making dental work easier in Singapore","description":"We built an online platform that helps dentists in Singapore run their practices better. Created by a dental surgeon, Dental Marketplace connects dental professionals, makes finding events easier, and simplifies everyday tasks.","spr_content":"- **Industry**: Healthcare / Dental Services<hr />- **Location**: Singapore<hr />- **Business Context**: Dentists lacked centralized management for events, staffing, and supplies.<hr />- **Solution**: Developed a dedicated web and mobile platform for dental professionals.<hr />- **Outcome**: Established a marketplace yielding $50,000 revenue, engaging 563 professionals.<hr />- **Services Provided**: Full-stack Development, Mobile App Development, UX/UI Design.<hr />  <hr />**Technical Highlights**:<hr />- **Backend**: Utilized Golang for performance.<hr />- **Frontend**: Employed React.js and Vue.js for user-friendly interfaces.<hr />- **Mobile**: Developed apps with Swift (iOS) and Kotlin (Android).<hr />- **User Research**: Conducted extensive interviews to discover user needs.<hr />- **Payment Processing**: Implemented secure online transaction handling.<hr />- **Design**: Focused on iterative improvements based on actual user feedback.<hr /><hr />**Dental Marketplace Platform**:<hr />- Website and app aimed at simplifying dental practice management.<hr />- Created in collaboration with dental surgeon Desmond Goh.<hr />- Features:<hr />  - Event registration.<hr />  - Job postings and searches.<hr />  - Supply ordering and tracking.<hr />  - Networking opportunities for dental professionals.<hr /><hr />**Challenges Addressed**:<hr />- Difficulties in discovering events and training.<hr />- Lack of centralized job board for hiring.<hr />- Inefficient supply ordering processes.<hr />- Persistence of outdated paper systems.<hr />- Market Dynamics: $24 million annual dental market in Singapore, with over 688 clinics.<hr /><hr />**Development Strategy**:<hr />- Initial focus on user conversations to shape product.<hr />- Prioritized core features enhancing immediate utility.<hr />- Implemented a stepwise development process with feedback integration.<hr /><hr />**Technology Stack**:<hr />- **Backend**: Golang for efficient server processes.<hr />- **Web Development**: React.js and Vue.js for adaptable interfaces.<hr />- **Mobile Development**: Swift for iOS; Kotlin for Android.<hr /><hr />**Collaboration Approach**:<hr />- Engaged directly with dentists to uncover genuine needs.<hr />- Utilized iterative development methodology based on regular feedback.<hr />- Employed creative problem-solving and user testing to ensure effectiveness.<hr /><hr />**Results**:<hr />- Successful launch within 12 weeks.<hr />- Generated over $50,000 in revenue.<hr />- Attracted 563 dental professionals to the platform.<hr />- Listed 302 dental events online.<hr />- Achieved Desmond’s vision of an accessible, supportive online environment for dentists.<hr /><hr />**Testimonial**:<hr />Desmond Goh praised the high-quality product and responsive support from Dwarves Foundation, acknowledging difficulties in industry change but expressing confidence in the platform's potential.","tags":"case-study marketplace startup","authors":"duy","date":{"days":18525},"category":"consulting > case-study"},"158":{"file_path":"consulting/case-study/tokenomy.md","title":"Building a modern crypto investment platform for Tokenomy","description":"We helped Tokenomy create a robust web platform and Android app that allows users to easily invest in cryptocurrency. Our work enabled them to launch on schedule, reach more customers, and establish themselves in the competitive crypto market.","spr_content":"- Industry: Cryptocurrency <hr />- Location: Indonesia / Global <hr />- Objective: Expand platform reach for a crypto startup.<hr />- Solution: Developed modern web platform and Android app with enhanced trading features.<hr />- Outcome: Launched on schedule, enabling user base growth and feature addition.<hr /><hr />**Services Provided:**<hr />- Frontend Development<hr />- Mobile App Development<hr /><hr />**Technical Highlights:**<hr />- Backend: Elixir, Phoenix (reliable API services)<hr />- Frontend: React, TailwindCSS, Redux (responsive interfaces)<hr />- Mobile: Kotlin, ReactiveX (Android development)<hr />- Architecture: MVVM pattern (Android app)<hr />- Database: PostgreSQL, RESTful API<hr />- Infrastructure: Google Cloud Platform <hr /><hr />**Project Overview:**<hr />- Client: Tokenomy, a cryptocurrency platform since 2017, initially part of INDODAX.<hr />- Need: Enhance web platform and develop mobile app after funding acquisition.<hr />- Engagement: Expanded from frontend refactor to complete Android app development and UI redesign.<hr /><hr />**Challenges Faced:**<hr />- Robust frontend for complex trading features.<hr />- Functional consistency between web and mobile.<hr />- Design system implementation across platforms.<hr />- Ambitious launch timeline without sacrificing quality.<hr />- Optimizing backend APIs for scalability.<hr /><hr />**Technical Execution:**<hr />- Built new web app with React and TailwindCSS to support trading functionalities.<hr />- Developed Android app using Kotlin and MVVM for maintainability.<hr />- Implemented WebSocket for real-time trading updates.<hr />- Introduced security features like biometric authentication and data encryption.<hr />- Supported multiple API versions for backend evolution.<hr /><hr />**Mobile App Features:**<hr />- Dark/light theme options.<hr />- Data caching for performance enhancement.<hr />- Automatic retry for failed API calls.<hr />- Fingerprint-secured password storage.<hr />- Memory leak prevention for stability.<hr /><hr />**Collaboration Strategy:**<hr />- Daily discussions via Slack.<hr />- Task management through Pivotal Tracker/Jira.<hr />- Regular meetings on Google Hangouts.<hr />- Design collaboration using Sketch and Figma.<hr /><hr />**Achievements:**<hr />- Delivered a robust mobile app with modern UI under tight timelines.<hr />- Built a solid frontend foundation for future feature additions.<hr />- Enhanced user experience with theme options for traders.<hr />- Successful launch according to the roadmap, establishing Tokenomy's market presence. <hr /><hr />**Impact:**<hr />- Enabled Tokenomy to compete with larger exchanges while emphasizing blockchain technology.<hr />- Established a technical framework for ongoing growth and feature expansion.","tags":"blockchain case-study","authors":"duy nikki tieubao","date":{"days":18848},"category":"consulting > case-study"},"159":{"file_path":"consulting/case-study/basehq.md","title":"Creating the first platform for Executive assistants","description":"We worked with BaseHQ for two years to build and improve their software for executive assistants, helping them create new features and make their system faster and more reliable.","spr_content":"- **Industry Focus**: Productivity / Workplace Software; target: executive assistants.<hr />- **Need**: Lack of specialized software for managing calendars, tasks, communication.<hr />- **Solution**: Comprehensive platform tailored for executive assistants' workflows.<hr />- **Outcome**: Streamlined workflows; established long-term technical partnership.<hr /><hr />- **Technical Services**:<hr />  - Full-stack Development<hr />  - Technical Consulting<hr />  - Code Quality Improvement<hr /><hr />- **Technical Architecture**:<hr />  - **Backend**: Go, Node.js for API efficiency.<hr />  - **Frontend**: React.js, Next.js with TypeScript for type safety.<hr />  - **Databases**: MongoDB for flexible storage; PostgreSQL for structured data.<hr />  - **Architecture**: Microservices for scalability and maintainability.<hr />  - **Monitoring Tools**: New Relic, Sentry, Fullstory.<hr />  - **Deployment**: Google Cloud Platform with Kubernetes.<hr /><hr />- **Project Overview**:<hr />  - **Base**: Software for executive assistants launched in 2019, $2.6M funding.<hr />  - **Feature Integration**: Calendars, tasking, communication centralized.<hr />  - **Challenges**: Unify disparate tools; clean and enhance existing codebase.<hr />  - **Collaboration**: Managed through Jira, Slack, Zoom; Git for version control; continuous deployment via GitHub Actions.<hr /><hr />- **Achievements**:<hr />  - Developed Availability Offer system: <hr />    - Identify open time slots.<hr />    - Poll preferences from stakeholders.<hr />    - Automatically schedule confirmed meetings.<hr />  - Ensured robust system stability and improved user experience with iterative feature development.<hr /><hr />- **Significance**: Demonstrated impact of technical partnerships in fostering startup growth; addressed market needs for executive assistants effectively. <hr /><hr />- **Dwarves Foundation**: Team providing design, development expertise, focusing on creating valuable software solutions.","tags":"US case-study startup","authors":"duy nikki","date":{"days":18845},"category":"consulting > case-study"},"160":{"file_path":"consulting/case-study/setel.md","title":"Building Setel's fuel payment super-app for Malaysian drivers","description":"We helped Setel expand their fuel payment app into a full-featured platform that makes refueling simple for Malaysian drivers. Our team built the conversion features that bring new users to the platform through deals, vouchers, and targeted marketing.","spr_content":"- Industry: Oil and gas, mobile payments<hr />- Location: Malaysia<hr />- Business context: Leading fuel payment app seeking feature expansion to attract new users.<hr /><hr />- Solution: Development of conversion features emphasizing deals, vouchers, and marketing integration.<hr />- Outcome: Successful feature launch; The Food Bank Programme enhances community support.<hr /><hr />- Service provided: Software development and Agile team augmentation.<hr />  <hr />- Technical highlights:<hr />  - Frontend: React for responsive UIs.<hr />  - Backend: TypeScript, Nest.js for API development.<hr />  - Infrastructure: AWS, microservices for scalability.<hr />  - Testing: Zephyr and Allure for quality assurance.<hr />  - Process: SWARM methodology for focused collaboration.<hr /><hr />- Setel overview: First e-payment solution for fuel in Malaysia, launched by PETRONAS in 2018; aims to evolve into a \"super-app\" with diverse features.<hr /><hr />- Challenge: <hr />  - Make refueling smooth for three groups: drivers, businesses, developers.<hr />  - Attract new users while conserving app simplicity and core functionality.<hr /><hr />- Technical approach:<hr />  - Microservices architecture for independent feature development.<hr />  - Key developments: Setel website, gift/voucher campaigns, marketing tracking systems.<hr />  <hr />- Development:<hr />  - Frontend with React; backend APIs in TypeScript with Nest.js.<hr />  - SWARM process for focused teamwork; multi-stage testing strategy.<hr /><hr />- Collaboration: Integrated within Setel’s Conversion team through remote communication (Slack, Jira, Confluence).<hr /><hr />- Achievements:<hr />  - Delivered features expanding platform capabilities; notably, The Food Bank Programme for community service.<hr />  - Enhanced user conversion funnel, supporting Setel’s growth as a digital payment ecosystem.<hr />  - Transitioned Setel from a fuel payment tool to a comprehensive super-app for Malaysian drivers.","tags":"case-study enterprise","authors":"duy nikki tieubao","date":{"days":18774},"category":"consulting > case-study"},"161":{"file_path":"consulting/case-study/begroup.md","title":"Helping launch beCorporate enterprise ride-hailing service","description":"We provided an augmented team for beGroup, Vietnam's popular ride-hailing platform, to help them launch their beCorporate enterprise service on a tight timeline while their in-house team focused on their core consumer app.","spr_content":"**Industry Context**: Transportation / Ride-hailing; Region: Vietnam.<hr /><hr />**Business Challenge**: BeGroup aimed to develop beCorporate, an enterprise ride-hailing solution, amidst a tight timeline while their in-house team focused on a consumer app.<hr /><hr />**Solution Provided**: A team of six developers engaged for accelerated development, utilizing team augmentation.<hr /><hr />**Outcome**: Launched beCorporate MVP within three months, enhancing market coverage.<hr /><hr />**Service Offerings**:<hr />- Team Augmentation<hr />- Backend Development<hr />- Frontend Development<hr /><hr />**Technical Highlights**:<hr />- **Backend**: Scalable and high-performance Golang.<hr />- **Frontend**: Modern user interfaces using ReactJS and Tailwind.<hr />- **Architecture**: Microservices model for seamless service integration.<hr />- **DevOps**: Robust logging, monitoring, and CI/CD practices.<hr />- **Development Process**: Agile methodology employing Scrum framework.<hr />- **Collaboration**: Close synchronization with BeGroup’s in-house team using tools like Slack, GSuite, and Jira.<hr /><hr />**Business Background**: <hr />- BeGroup: Leading ride-hailing platform in Vietnam; raised over $40 million.<hr />- Goal: Launch four products by end of 2018, with beCorporate as a key offering for enterprises managing employee transport.<hr /><hr />**Initial Situation**: <hr />- Significantly positive market reception for consumer app; increasing demand for additional services.<hr />- In-house engineering team devoted to consumer app, unable to allocate resources to beCorporate.<hr />- Difficulty in rapidly staffing experienced Golang developers in Vietnam.<hr /><hr />**Architectural Decisions**: Evaluated two options—standalone solution vs. ecosystem integration. Chose integration for a unified user experience.<hr /><hr />**Implemented Technical Solutions**:<hr />- Developed backend in Golang for scalability.<hr />- Created responsive frontend with ReactJS and Tailwind.<hr />- Established logging/monitoring systems and automated CI/CD pipelines.<hr />- Designed for compatibility with existing beGroup services.<hr /><hr />**Collaboration Strategy**:<hr />- Maintained regular communication and task management.<hr />- Agile iterative development and technical dialogues ensured alignment with business goals.<hr /><hr />**Achievements**:<hr />- Successful MVP launch in 3 months, resulting in market expansion.<hr />- Enhanced operational efficiency and focus on marketing strategies.<hr /><hr />**Benefits of Engagement**:<hr />- Minimized hiring/training costs during rapid growth.<hr />- Allowed internal focus on key product development.<hr />- Strengthened brand and marketing capabilities.<hr />- Delivered comprehensive enterprise transportation offering.<hr /><hr />**Conclusion**: This collaboration exemplified effective team augmentation, addressing time-sensitive technical needs and enabling beGroup’s growth amidst market competition in Vietnam's transportation sector.","tags":"case-study ride-hailing","authors":"duy","date":{"days":18584},"category":"consulting > case-study"},"162":{"file_path":"consulting/case-study/reapit.md","title":"Building cloud solutions for UK real estate","description":"We joined Reapit as their offshore development team, helping them transform their desktop software into a modern cloud platform. Our agile team delivered critical components on a tight timeline for their major platform launch.","spr_content":"- **Industry**: Real Estate Technology in the UK.<hr />- **Business Context**: Established CRM provider required rapid technology modernization.<hr />- **Solution**: Offshore development team to expedite cloud migration and feature rollout.<hr />- **Outcome**: Delivered critical platform components on schedule for major launch event.<hr />  <hr />**Service**: <hr />- Frontend Development<hr />- Cloud Architecture<hr />  <hr />**Technical Highlights**:<hr />- **Backend**: NodeJS for API services.<hr />- **Frontend**: React.js, TypeScript for responsive interfaces.<hr />- **Testing**: Jest, Cypress for automation.<hr />- **Infrastructure**: AWS cloud services.<hr />- **Monitoring**: Sentry, CloudWatch for performance.<hr /><hr />**Collaborative Details**:<hr />- Reapit, a leading UK CRM for real estate with 22 years of experience, needed swift transformation post-Accel KKR acquisition in 2017.<hr />- Aim: Transition desktop apps to cloud, develop a PaaS for SMBs.<hr />- Offshore team contributed to prototype development and \"skunkworks\" initiatives.<hr />- Added talent to existing 60-member engineering team; avoided lengthy internal recruitment.<hr /><hr />**Implementation Strategy**:<hr />- Developed **Reapit Foundation Platform**: PaaS and app marketplace for third-party integration.<hr />- Created **Reapit Geo Diary**: Mobile app for agent appointment management, improving productivity.<hr />- Suggested monorepo structure to simplify codebase and enhance maintainability.<hr /><hr />**Collaboration Practices**:<hr />- Direct communication between account manager and engineering team leader.<hr />- Implemented agile practices: sprint planning, daily meetings, bi-weekly updates.<hr />- Encouraged task selection based on team capacity.<hr /><hr />**Development Workflow**: <hr />- Continuous integration for early issue detection.<hr />- Automated testing for quality assurance.<hr />- Regular code reviews to uphold standards.<hr />- Efficient release via deployment pipelines.<hr /><hr />**Achievements**:<hr />- Rapid prototype delivered within four weeks, enabling timely product launch.<hr />- Released beta App Store and Developer Portal, enhancing marketplace offerings.<hr />- Key technical milestones included:<hr />  - Unified architecture via a monorepo.<hr />  - Component reusability with React and Redux.<hr />  - Mobile functionality integrated into Geo Diary.<hr />  - Continuous delivery with hourly deployment pipelines.<hr />  - 90% test coverage achieved with end-to-end tests.<hr />  - Open-source community for collaboration.<hr /><hr />**Overall Impact**: <hr />- Transformed Reapit into a cloud platform with marketplace, facilitating growth in the digital real estate sector.","tags":"case-study enterprise real-estate","authors":"duy nikki","date":{"days":18671},"category":"consulting > case-study"},"163":{"file_path":"consulting/case-study/naru.md","title":"Naru: A task manager that works right in your browser","description":"We built Naru, a browser extension that helps people stay organized and productive while browsing the web. Working with a US-based designer, we created a task management tool that follows you across tabs and remembers your tasks no matter where you go online.","spr_content":"- **Industry**: Productivity Software; Focused on task management.<hr />- **Business Context**: Solo founder required technical expertise to develop software from concept to launch.<hr />- **Solution**: Developed Naru, a cross-browser task management extension for seamless use across websites.<hr />- **Outcome**: Launched on Chrome Web Store yielding positive user feedback.<hr />- **Service Offered**: Full-stack and browser extension development services.<hr /><hr />### Technical Highlights<hr />- **Backend**: Utilized Elixir with Phoenix for robust API services.<hr />- **Frontend**: Implemented React, TypeScript, and ShadowDOM for isolated UI components.<hr />- **Data Management**: Employed GraphQL for efficient data handling.<hr />- **Infrastructure**: Hosted on Google Cloud Platform.<hr />- **Browser Technologies**: Integrated with Chrome Extension API and Mozilla WebExtension API.<hr />- **Communication**: Used WebSockets for real-time user updates.<hr /><hr />### Naru Overview<hr />- **Creator**: Matt, a US-based digital designer.<hr />- **Problem Addressed**: Users faced productivity challenges when managing tasks across different websites.<hr />- **Product Concept**: A browser-integrated task manager to streamline workflow without switching apps.<hr />- **User Experience**: Functions as a persistent task management tool within the browser.<hr /><hr />### Challenges Resolved<hr />- Overcame issues of task loss when navigating websites.<hr />- Addressed the inadequacy of standard to-do apps in maintaining workflow.<hr />- Provided efficient information organization beyond typical browser bookmarks.<hr />- Ensured focus retention despite frequent tab switching.<hr />- Developed an extension functioning like a standalone app while maintaining multi-tab synchronization.<hr /><hr />### Development Approach<hr />- **ShadowDOM**: Ensured consistent rendering and isolation of components.<hr />- **Cross-tab Synchronization**: Maintained task information across all tabs.<hr />- **Minimalist Design**: Created a non-intrusive, user-friendly interface.<hr />- **Automated Pipeline**: Instituted a streamlined release process for updates.<hr />- **Data Layer**: Employed GraphQL over REST for enhanced performance.<hr /><hr />### Collaboration Strategy<hr />- Adjusted from synchronous daily calls to asynchronous communication to accommodate time zone differences.<hr />- Practiced daily progress notes, maintained brief sprint meetings, and utilized structured feedback lists.<hr />- Streamlined workflow and reduced back-and-forth, enhancing project efficiency.<hr /><hr />### Achievements<hr />- Launched initial stable version of Naru within three months.<hr />- Received commendations for its seamless task management across websites.<hr />- Developed key features:<hr />  - Persistent task management across sites.<hr />  - Customizable lists and categories.<hr />  - Keyboard shortcuts and Markdown support.<hr />  - Dual themes for user preference.<hr />  - Offline capabilities with background sync.<hr />- Continued enhancement post-launch with features like team collaboration, workspace management, and user analytics.<hr /><hr />### Product Philosophy<hr />- Naru illustrates a commitment to understanding user needs and solving complex technical challenges.<hr />- Achieved a user experience that feels integrated and natural within web browsing.","tags":"browser-extension case-study early-stage","authors":"duy nikki","date":{"days":18735},"category":"consulting > case-study"},"164":{"file_path":"consulting/case-study/relay.md","title":"Helping Relay launch their workflow automation MVP for the US market","description":"We helped Relay quickly develop and launch their workflow automation tool for early market testing. Our engineers built a complete solution including a Chrome extension, web app, and Slack integration that helped Relay acquire their first paying customers and prepare for their next funding round.","spr_content":"- **Industry**: Productivity tools.<hr />- **Location**: United States.<hr />- **Context**: Early-stage startup; needed quick MVP for market testing and user acquisition.<hr />- **Solution**: Rapid development of a Chrome extension and Slack integration; clean, adjustable codebase.<hr />- **Outcome**: Successful MVP launch; gained paying customers; positioned for next funding round.<hr />- **Service**: Full-stack development; Agile project management.<hr /><hr />- **Challenge**: Rapid MVP needed for market entry; essential features required; speed and adaptability were crucial; evolving product vision based on feedback.<hr />- **Quote**: \"The context changes. We change accordingly.\" - Product owner Hetong.<hr /><hr />- **Solution Development**:<hr />  - Collaboration evolved from initial short-term support to deeper involvement.<hr />  - Tech Stack:<hr />    - Backend: Ruby on Rails.<hr />    - Frontend: React, TailwindCSS, Storybook.<hr />    - Infrastructure: AWS Amplify.<hr />    - Real-time updates: WebSockets.<hr />    - Event tracking: Amplitude.<hr />  - Project Management:<hr />    - Communication: Slack.<hr />    - Documentation: Notion.<hr />    - Task Management: Trello.<hr />    - Design: Figma.<hr /><hr />- **Outcome Summary**: Delivered MVP with key components:<hr />  - Google Chrome extension.<hr />  - Web application for automation management.<hr />  - Analytics dashboard for productivity tracking.<hr />  - Slack bot for workspace integration.<hr /><hr />- **Further Development**: Continuous collaboration led to additional features (Relay Sequence Chart, Relay Progress); important milestones for product evolution.<hr /><hr />- **Technical Highlights**:<hr />  - Seamless integration of Slack app and Chrome extension.<hr />  - Custom semantic versioning for extension updates.<hr />  - Utilization of Flipper and Sidekiq for A/B testing.<hr />  - Action tracking system for user behavior monitoring.<hr />  - Organized monorepo for improved code sharing and efficiency.","tags":"US browser-extension case-study early-stage","authors":"duy","date":{"days":18746},"category":"consulting > case-study"},"165":{"file_path":"consulting/case-study/open-fabric.md","title":"Building a payment platform from scratch","description":"We helped Open Fabric build a payment platform that makes it easier for stores to accept digital payments across Southeast Asia. Our team built the core technology and delivered a working product within a year.","spr_content":"- **Industry**: Fintech<hr />- **Location**: Singapore<hr />- **Context**: Startup focused on secure, scalable payment solutions <hr />- **Solution**: Multi-tenant cloud platform linking merchants with payment providers <hr />- **Outcome**: Platform launched within one year; growth in Southeast Asia achieved <hr />- **Services Provided**: Backend development, Cloud architecture, DevOps <hr />- **Technology Stack**: <hr />  - **Backend**: TypeScript, Kotlin for microservices <hr />  - **Frontend**: React, TypeScript for merchant interface <hr />  - **Infrastructure**: AWS (Lambda, EC2, S3, DynamoDB) <hr />  - **Architecture**: Microservices, multi-tenant design <hr />  - **Security**: PCI DSS compliance, data encryption <hr />  - **DevOps**: Docker, CI/CD automation <hr /><hr />- **Client**: Open Fabric, \"Buy Now, Pay Later\" platform<hr />- **Team Composition**: 8 engineers <hr />- **Core Contribution**: Developed foundational data system for transaction handling <hr />- **Launch Support**: Enabled timely entry into competitive Southeast Asian market <hr /><hr />- **Challenges**: <hr />  - Serve multiple audiences: merchants, shoppers, payment providers <hr />  - Ensure scalability and data security <hr />  - Maintain compliance with strict regulations <hr />  - Recruit specialized fintech talent <hr /><hr />- **Technical Strategy**: <hr />  - **Multi-tenant system**: <hr />    - Shared infrastructure <hr />    - Data separation for security <hr />    - Cost efficiency and optimized scaling <hr />  - **Microservices architecture**: Structured for future maintainability <hr />  - **Cloud-native approach**: <hr />    - Serverless via AWS Lambda <hr />    - Docker for component isolation <hr />    - Infrastructure optimized for Southeast Asia <hr /><hr />- **Development Framework**: <hr />  - Four environments (Local, CI, Staging, Production)<hr />  - Best practices: trunk-based development, automated deployments <hr />  - Clear communication channels: planning, daily updates, technical reviews <hr /><hr />- **Achievements**: <hr />  - Delivered robust payment ecosystem management <hr />  - Developed web interfaces for stakeholders <hr />  - Secure architecture supporting diverse businesses <hr />  - Faster market entry, achieving business milestones <hr />  - Extended technical capability for Open Fabric with experienced engineers <hr /><hr />- **Impact**: <hr />  - Facilitated sustainable growth and adaptability of the platform <hr />  - Architectural and process improvements established for long-term success <hr />  - Ongoing evolution of the platform to accommodate market expansion and new payment options.","tags":"case-study fintech payment","authors":"Tom hnh nikki","date":{"days":19263},"category":"consulting > case-study"},"166":{"file_path":"consulting/case-study/searchio.md","title":"Building AI-powered search for online stores","description":"We helped Search.io improve their dashboard, enhance their open-source tools, and create better interfaces for their plugins, helping online stores boost sales with smarter search.","spr_content":"- **Industry**: E-commerce Technology; **Location**: US/Global<hr />- **Business Context**: AI search startup required platform enhancement and developer tools.<hr />- **Solution**: Improved dashboard UI, developed open-source tools, created better integration plugins.<hr />- **Outcome**: Delivered high-quality solutions, positioning Search.io as a leader in AI-powered search.<hr />- **Service Offering**: Frontend development, UI/UX enhancement, SDK development.<hr />  <hr />### Technical Highlights<hr />- **Frontend**: Utilized React.js with TypeScript for reliable interfaces.<hr />- **State Management**: Employed Redux for complex application state handling.<hr />- **Component Library**: Developed custom UI components for consistency across products.<hr />- **Documentation**: Leveraged Docusaurus for comprehensive developer guides.<hr />- **Testing**: Conducted extensive unit and integration tests.<hr />- **Integration**: Created custom plugins for various e-commerce platforms.<hr /><hr />### Project Overview<hr />- **Client**: Search.io (formerly Sajari), AI-powered search platform enhancing online product discovery since 2017.<hr />- **Focus Areas**: Dashboard improvement, open-source tool enhancement, plugin interface development.<hr />- **Development Approach**: Emphasized quality and stability, aligned with Search.io's goal for dependable technology.<hr /><hr />### Challenges Faced<hr />1. **Diverse User Needs**: Catering to both business users and developers.<hr />2. **Multiple Integration Points**: Required functionality across various e-commerce systems.<hr />3. **Complex Technology**: Needed simple interfaces for non-technical users.<hr /><hr />### Technical Implementation<hr />- **Console Dashboard**: Enhanced user management of search experiences:<hr />  - Intuitive configuration interfaces.<hr />  - Visualization tools for performance insights.<hr />  - Streamlined workflows for common tasks.<hr />  - Responsive design for various devices.<hr />  <hr />- **React SDK Development**: Key open-source offering evolved from Shopify integration:<hr />  - Customizable, flexible library.<hr />  - Clear documentation with examples.<hr />  - Modular architecture supporting different UI frameworks.<hr />  - Automated testing for reliability.<hr />  <hr />- **Platform Integrations**: Simplified plugins for e-commerce platforms:<hr />  - Easy installation for non-technical users.<hr />  - Consistent functionality across platforms.<hr />  - Customization for advanced users.<hr />  - Automatic updates for current search experiences.<hr /><hr />### Collaboration Strategy<hr />- **Communication**: Regular video calls, shared documents in Figma, GitHub code reviews, Slack for quick messaging, joint testing sessions.<hr />- **Process**: Adaptive approach aligning with Search.io's evolving needs, ensuring high-quality deliverables.<hr /><hr />### Achievements<hr />- **Enhanced Dashboard**: User-friendly console improving search experience control.<hr />- **Improved Developer Tools**: SDKs facilitating integration of Search.io technology.<hr />- **New Integration Options**: Expanded market reach via additional e-commerce platform support.<hr />  <hr />- **Notable Outcomes**: Successful Shopify integration, search widget for limited-resource sites.<hr />- **Customer Testimonial**: Noted game-changing collaboration emphasizing quality and business impact.<hr /><hr />### Conclusion<hr />- Partnership strengthened Search.io's market position as a leader in AI search.<hr />- Focused on quality and user experience, creating impactful solutions for customer success and competitive strength.","tags":"US case-study startup","authors":"hnh thanh","date":{"days":18914},"category":"consulting > case-study"},"167":{"file_path":"consulting/case-study/kafi.md","title":"Kafi: Making stock trading easier for everyone","description":"We helped Kafi Securities rebuild their stock trading app to work better for both beginners and experienced traders, making investing more accessible for everyone.","spr_content":"**Industry Context**: Financial Services, specifically in investment, focusing on modernizing trading apps.<hr /><hr />**Business Need**: A securities firm in Vietnam aimed to attract new users and retain existing professional traders through a revamped mobile trading application. <hr /><hr />**Solution Overview**: A comprehensive redesign of the mobile trading platform tailored for diverse user skill levels, ensuring personalized user experiences.<hr /><hr />**Outcome**: Successful delivery of an app that enhanced user retention and provided appropriate trading tools for beginners and experts alike.<hr /><hr />---<hr /><hr />**Service Delivered**: <hr />- UX/UI Design<hr />- User Research<hr />- Mobile App Redesign<hr /><hr />---<hr /><hr />**Key Technical Highlights**:<hr />- **User Research**: In-depth analysis identifying user behavior and pain points.<hr />- **Personalization**: Interfaces adapt to user experience level (beginner, intermediate, advanced).<hr />- **Onboarding**: Simplified registration with progressive disclosure techniques to ease user entry.<hr />- **Education**: Tools integrated to educate new investors while facilitating user engagement.<hr />- **UI Design**: Modern interface with contextual help, reducing cognitive load.<hr />- **Responsive Design**: Optimized for varying screen sizes and orientations.<hr /><hr />---<hr /><hr />**Collaboration with Kafi**: <hr />- Partnered closely with Kafi Securities, particularly with leadership, to evaluate challenges and formulate effective solutions.<hr />- Addressed user experience issues, particularly for differentiating beginner and professional users.<hr /><hr />---<hr /><hr />**Challenges Identified**: <hr />- High dropout rates during onboarding due to complex verification.<hr />- Overwhelming complexity for beginner users in financial terminology and UI.<hr />- Insufficient tools for professional traders leading to dissatisfaction and platform abandonment.<hr />  <hr />**Business Impact**:<hr />- Stymied user acquisition despite marketing.<hr />- Decreased mobile engagement and effectiveness of the app.<hr />- Frustration leading to negative perception of Kafi in the market.<hr /><hr />---<hr /><hr />**Approach Taken**: <hr />- **Discover**: Conducted user research to uncover frustrations, desires, and needs through various methodologies including contextual observation and social listening.<hr />- **Define**: Created user personas and journey maps for targeted solutions.<hr />- **Design**: Developed personalization features and streamlined onboarding processes; integrated educational tools for new investors.<hr /><hr />---<hr /><hr />**Final Deliverables**:<hr />1. Streamlined onboarding process leading to increased registration completion.<hr />2. Enhanced mobile app engagement across user types, resulting in more active trading.<hr />3. Accelerated confidence and trading activity in new investors through educational support tools.<hr />4. Advanced trading functionalities for professional users, enriching mobile experience.<hr />5. Unified platform experience, consolidating user needs and improving maintenance.<hr /><hr />---<hr /><hr />**Brand Impact and Future Vision**: <hr />- The redesigned app positioned Kafi as a forward-thinking investment platform in Vietnam.<hr />- Focus on accessibility for all users reinforces Kafi's mission of empowering investors to grow skills seamlessly through adaptive user experience. <hr /><hr />**Conclusion**: This project exemplified the significance of aligning user needs with innovative design methodologies in financial applications, enabling both growth for Kafi and enhanced accessibility to investment for a broader audience.","tags":"case-study fintech mobile","authors":"anna.console changtrailucluong","date":{"days":20012},"category":"consulting > case-study"},"168":{"file_path":"consulting/case-study/mudah.md","title":"Upgrading Malaysia's largest online marketplace","description":"We helped Mudah.my switch from an outdated system to a modern, faster one that can handle more users and grow with their business.","spr_content":"- **Industry Context**: E-commerce; established marketplace in Malaysia; need for modernization to support growth.<hr />- **Legacy Issues**: Outdated PHP monolithic system; slow performance; difficulties in maintaining and scaling; inability to attract younger users; high traffic volumes creating system strain.<hr />- **Solution Overview**: Transition to microservice architecture; implementation of modern technologies; breakdown of monolithic systems.<hr />- **Key Technologies Used**:<hr />  - **Backend**: Go (Gin framework) for web services; improved performance and resource utilization.<hr />  - **Frontend**: Next.js with server-side rendering; enhanced speed, SEO, and user experience.<hr />  - **Mobile**: Swift 4 using MVC pattern; optimized for consistent navigation and core platform integration.<hr />  - **Database**: PostgreSQL with REST APIs.<hr />  - **Communication**: gRPC for efficient services; daily standups, Jira for tracking, Slack for communication.<hr />  - **Testing**: Automated testing with 80%+ code coverage.<hr />- **Improvement Outcomes**:<hr />  - Page load times reduced by 40%.<hr />  - System scalability increased, handling 3x more concurrent users.<hr />  - Faster development and deployment of new features; improved maintainability.<hr />  - Enhanced user experience leading to longer session times; mobile performance significantly improved.<hr />- **Collaborative Efforts**: Close partnership with Mudah's team; on-site collaboration; knowledge sharing; joint code reviews.<hr />- **Long-term Partnership**: Ongoing collaboration with Mudah; continued focus on technology updates and business growth; strong confidence in the solution provider's capabilities.<hr />- **Strategic Importance**: Successful modernization positioned Mudah for competitiveness in Malaysia's evolving online marketplace.","tags":"case-study enterprise marketplace","authors":"duy nikki tieubao","date":{"days":18695},"category":"consulting > case-study"},"169":{"file_path":"consulting/case-study/airwatt.md","title":"Creating a smart system to monitor electricity Use","description":"We built AirWatt's system that uses artificial intelligence to track how businesses use electricity, helping them save money and prevent equipment problems.","spr_content":"- **Industry Focus**: Energy Management, IoT in Vietnam.<hr />- **Problem Statement**: Businesses require real-time monitoring of electrical equipment to reduce costs and prevent failures.<hr />- **Proposed Solution**: Developed an AI-driven platform for data collection from monitoring devices, delivering actionable insights.<hr />- **Key Outcomes**: Integrated platform featuring mobile applications and dashboards, optimizing energy consumption efficiently.<hr />- **Service Offerings**: Comprehensive full-stack development, AI integration, and IoT system design.<hr /><hr />### Technical Highlights<hr />- **Core System**: Microservices built with Go for lifecycle management of devices.<hr />- **AI Engine**: Custom machine learning models for device detection and usage forecasting.<hr />- **Mobile Applications**: Developed natively for iOS (Swift) and Android (Kotlin).<hr />- **Database Architecture**: Utilized MongoDB for real-time data storage; DynamoDB for AI data management.<hr />- **Connectivity**: Transmitting data via WiFi using ESP2866 protocol.<hr />- **Infrastructure**: Implemented using containers (Docker), orchestration (Kubernetes), and cloud services (AWS, GCP).<hr /><hr />### Project Overview with AirWatt<hr />- **AirWatt System**: Smart energy management system leveraging AI for electricity monitoring and optimization.<hr />- **Objectives**: Rapid development of a validated product with a robust growth framework; necessity for user-friendly dashboards and insightful analytics.<hr />- **Challenges**: <hr />  - Urgent need for a multi-platform solution that processes large data in real-time.<hr />  - Complexity in implementing AI for accurate device status recognition.<hr />  - Demand for seamless software solutions integrating hardware and AI user-interface visualizations.<hr /><hr />### Implementation Strategy<hr />1. **Device Management Tools**: Enabling detailed monitoring and remote control across locations.<hr />2. **Usage Reporting Features**: Mobile friendly applications for historical usage tracking.<hr />3. **Native Mobile Applications**: Facilitating connection between hardware and user accounts.<hr />4. **Business Tracking Website**: For comprehensive data analysis and reporting.<hr /><hr />### Technical Architecture<hr />- **Data Volume Management**: Capable of processing approximately 17,280 records per device daily.<hr />- **System Components**:<hr />  - Central service for managing devices.<hr />  - User landing page for business solution visibility.<hr />  - Admin interfaces for system oversight.<hr />  - AI engine executing data synchronization and prediction tasks.<hr />  <hr />- **Database Strategy**:<hr />  - MongoDB for timely updates on device states.<hr />  - DynamoDB for storing AI input data utilized in model processing.<hr />  <hr />### Collaboration and Development<hr />- **Technology Stack**: <hr />  - Backend (Go), Frontend (React.js), Mobile (Swift/Kotlin).<hr />  - Infrastructure (Docker, Kubernetes, AWS, GCP).<hr />  - Varied Databases (PostgreSQL, Redis, MongoDB, DynamoDB).<hr />  <hr />- **Agile Methodology**: Adopting collaborative tools (Figma, GitHub, Insomnia) for design, code management, and API testing; ensuring quality and development agility.<hr /><hr />### Achievements<hr />- **Deployment Timeline**: Successful completion within three months.<hr />- **Deliverables**: Comprehensive system with functioning apps for all platforms, effective reporting infrastructure, and a demonstrated solution garnering market recognition.<hr />- **Future Growth**: Platform expansion targeted towards niches like restaurants, reflecting scalable growth based on foundational work.","tags":"case-study iot","authors":"duy tieubao","date":{"days":18581},"category":"consulting > case-study"},"170":{"file_path":"consulting/case-study/bhd.md","title":"Redesigning BHD Cinema's ticket booking app for a better experience","description":"We helped BHD Cinema transform their outdated mobile app into an intuitive platform that allows customers to easily browse movies, book tickets online, and enjoy a seamless cinema experience, turning movie-goers into loyal BHD fans.","spr_content":"**Industry**: Entertainment  <hr />**Location**: Vietnam  <hr />**Business Context**: Popular cinema chain, frustrated users due to outdated, non-functional app.  <hr />**Solution**: Complete app redesign; intuitive user flows for ticket booking and movie discovery.  <hr />**Outcome**: Modern, easy-to-use app enhancing cinema experience for movie-goers.  <hr />**Service Provided**: Mobile app design / UI/UX improvement.  <hr /><hr />**Technical Highlights**:  <hr />- **UI Framework**: Modern mobile design frameworks implemented.  <hr />- **Typography**: Utilized Avenir Next font family for clarity.  <hr />- **Design System**: Established consistent components and cohesive color palette.  <hr />- **Interactive Elements**: Features like carousel navigation and user-friendly booking screens.  <hr /><hr />**Client**: BHD Cinema, leading in ticket sales in Vietnam, faced major digital experience challenges with an outdated app lacking online booking capability.  <hr /><hr />**Challenge**:  <hr />- Outdated visuals and interface inconsistencies.  <hr />- Inability for online ticket bookings.  <hr />- Poor navigation due to cluttered design.  <hr />- Essential information missing for customers.  <hr />- Desired transformation of user perception and loyalty cultivation.  <hr /><hr />**Design Approach**:  <hr />- Focused on core movie-goer needs for usability and aesthetics.  <hr />- **Intuitive Navigation**: Home screen showcases movies prominently; promotional content minimized.  <hr />- **Simplified Information**: Clear movie details with accessible booking button.  <hr />- **Streamlined Booking**: Reduced booking process steps with logical groupings of showtimes.  <hr />- **Digital Convenience**: Introduced digital tickets with QR codes; historical booking management system.  <hr /><hr />**Key Features**:  <hr />- **Home Screen & Movie Schedule**: User-friendly layout emphasizing movie content; improved carousel for browsing.  <hr />- **Movie Details**: Structured for quick interest evaluation; comprehensive film information included.  <hr />- **Showtime Selection**: Organized by date, location, and type, minimizing overload, emphasizing Today's shows.  <hr />- **Booking Flow**: Simplified and intuitive; quick reservation steps.  <hr />- **Transaction History**: Easy tracking of current and past bookings; digital tickets for entry efficiency.  <hr />- **Cinema Browsing**: \"Book by cinema\" feature enhances selection flexibility.  <hr />- **Theater Information**: Detailed descriptions and visuals of theater types enhancing customer expectations.  <hr /><hr />**Achievements**:  <hr />- Transformed user experience through an intuitive interface.  <hr />- Enabled online ticket bookings, reducing waiting times.  <hr />- Implemented digital ticket management and booking history system.  <hr />- Presented comprehensive, digestible movie and theater information.  <hr />- Fostered brand loyalty by enhancing customer engagement digital experience.  <hr />- Competitively positioned BHD Cinema in Vietnam's entertainment market.","tags":"case-study","authors":"duy","date":{"days":18402},"category":"consulting > case-study"},"171":{"file_path":"consulting/case-study/aharooms.md","title":"Building a complete tech system for small Vietnamese hotels","description":"We helped Aharooms create a suite of digital tools that enables small hotels in Vietnam to improve operations, increase bookings, and boost revenue, especially during the challenging COVID-19 period when adaptation was crucial.","spr_content":"- **Industry Context**: Hospitality in Vietnam; focus on small hotels (2-3 stars).<hr />- **Business Goal**: Develop tech tools to enhance competitiveness and adapt to challenges, especially post-COVID-19.<hr />- **Product Solution**: Integrated system with booking platform, management tools, revenue optimization features.<hr />- **Outcome**: Successful launch; gained market recognition; enabled small hotels to thrive during COVID.<hr />- **Technical Contributions**: Full-stack development; expertise in product development.<hr /><hr />### Technical Highlights:<hr />- **Backend**: Golang, Elixir for robustness.<hr />- **Frontend**: React.js, JavaScript, TypeScript for interactivity and responsiveness.<hr />- **Infrastructure**: Docker, Google Cloud, Kubernetes, Netlify for scalability.<hr />- **Monitoring Tools**: Prometheus, Grafana, Loki, Sentry for system health.<hr />- **Database**: PostgreSQL, Redis for efficient data management.<hr />- **Architecture**: Monolithic design for speed and maintainability.<hr /><hr />### Challenges Identified:<hr />- Small Vietnamese hotels lack modern management solutions; inconsistent service and resources.<hr />- COVID-19 intensified need for digital adaptation and innovative business models.<hr />- Development hurdles with balancing new features and existing code fixes.<hr /><hr />### Development Strategy:<hr />- **Architecture**: Chose monolithic model for agility and simpler maintenance.<hr />- **Cloud Solutions**: Google Cloud setup with Docker and Kubernetes for data security and isolation.<hr />- **Performance**: Utilizing Netlify to prevent traffic bottlenecks, ensuring rapid user experience.<hr />- **QA Process**: Rigorous testing with multiple development environments for reliability.<hr />- **Data Insights**: Integrated PostgreSQL and Metabase for performance analytics.<hr /><hr />### Key Features Developed:<hr />- **Management Tools**:<hr />  - Booking platform similar to \"Shopify for hotels.\"<hr />  - Centralized property management system (PMS).<hr />  - Daily operation and budget management tools.<hr />- **Customer Retention**:<hr />  - Loyalty system via \"Ahacoin\" for cashback rewards.<hr />  - Performance metrics visualization.<hr />  - Cancellation analysis for operational improvements.<hr />- **Revenue Optimization**:<hr />  - Advanced revenue management system (RMS).<hr />  - Integration with multiple booking platforms.<hr />  - Flexible booking options support.<hr /><hr />### Collaborative Approach:<hr />- Functioned as dedicated product team for Aharooms.<hr />- Regular workshops to align with Vietnamese hotel owners’ needs.<hr />- Agile feature adjustments based on market feedback.<hr />- Comprehensive support from design to deployment.<hr /><hr />### Achievements:<hr />- Launched a market-recognized product; positioned Aharooms as an industry innovator.<hr />- Developed a scalable platform with multiple revenue streams.<hr />- Simplified operations for hotel owners; enabled online bookings during COVID-19.<hr />- Created mechanisms for improved customer retention and revenue maximization.<hr /><hr />### Impact:<hr />- Empowered Aharooms to establish market presence and anticipated growth post-pandemic.<hr />- Facilitated significant operational enhancements for small hotel clientele, driving recovery and future resilience.","tags":"case-study hospitality","authors":"duy nikki tieubao","date":{"days":18597},"category":"consulting > case-study"},"172":{"file_path":"consulting/case-study/cimb.md","title":"Building CIMB's digital wealth platform for better customer experience","description":"We helped CIMB Malaysia transform their wealth management services by building a robust backend system that connects their new user-friendly platform with existing bank systems, enabling customers to manage investments more easily.","spr_content":"- **Industry**: Banking and finance<hr />- **Location**: Southeast Asia<hr />- **Business Context**: Modernizing wealth management services; part of digital transformation.<hr />- **Solution**: Developed backend system linking new customer-facing platform with legacy systems.<hr />- **Outcome**: Launched streamlined digital investment platform; improved user experience and operational efficiency.<hr />- **Service Provided**: Tech consulting and staff augmentation.<hr /><hr />**CIMB Partnership**:<hr />- Aided CIMB Malaysia in creating modern digital wealth management platform.<hr />- Focused on backend development to connect new application with existing banking infrastructure.<hr />- Facilitated accessibility of ASNB investment products; served preferred and mass-affluent customers.<hr />- Collaborated with CIMB and partner, Netizen, to enhance Malaysia's digital banking standards.<hr /><hr />**Technical Highlights**:<hr />- Used **Java Spring Boot** for backend services.<hr />- Employed **MySQL** for data management.<hr />- Built a custom **API Gateway** for system communication.<hr />- Developed **connectors** for legacy integration.<hr /><hr />**Challenges Faced by CIMB**:<hr />- Existing services lagging behind digital-first customer expectations.<hr />- Inefficient manual investment processes; reliance on physical branches.<hr />- Customers faced barriers tracking investments digitally.<hr />- Relationship managers lacked effective digital support tools.<hr />- Legacy systems obstructing new digital offerings.<hr /><hr />**Building the Solution**:<hr />- Focused on solid backend infrastructure.<hr />- **API Gateway** established as communication hub for system data flow.<hr />- **Custom connectors** integrated new platform with existing databases.<hr /><hr />**Collaboration Strategy**:<hr />- Rapid assembly of senior engineering team from talent pool.<hr />- Three-party collaboration: CIMB, Netizen, Dwarves.<hr />- Regular alignment meetings for project updates and communication.<hr />- Defined roles to prevent task overlap.<hr />- Weekly changelog for progress tracking and feedback facilitation.<hr /><hr />**Achievements**:<hr />- **For Customers**:<hr />  - Intuitive interface for easier investment management.<hr />  - Self-service options minimizing branch visits.<hr />  - Consistent user experience across age demographics.<hr />- **For CIMB**:<hr />  - Increased operational efficiency via reduced manual processes.<hr />  - Emergence as a digital banking innovator in Malaysia.<hr />  - Flexible architecture supporting future enhancements.<hr /><hr />**Conclusion**: New wealth management platform symbolizes significant progress in CIMB's digital transformation, enhancing current customer experience and enabling future adaptability.","tags":"case-study fintech","authors":"huytq nikki","date":{"days":19585},"category":"consulting > case-study"},"173":{"file_path":"consulting/case-study/momos.md","title":"Building a central hub for food and beverage businesses in Singapore","description":"We helped Momos, a pre-seed startup in Singapore, build their first MVP, a centralized data hub that simplifies online operations for food and beverage businesses through third-party integrations and data analytics.","spr_content":"- **Industry**: Food & Beverage Technology in Singapore.<hr />- **Business Context**: Pre-seed startup (Momos) required rapid MVP development for market fit testing.<hr />- **Solution**: Centralized data platform integrating delivery services and analytics.<hr />- **Outcome**: Platform launched; first users onboarded successfully.<hr />- **Services Provided**: Full-stack development, integration development, DevOps.<hr />  <hr />### Technical Highlights:<hr />- **Backend**: Node.js for rapid development flexibility.<hr />- **Frontend**: React and Next.js for responsive UI.<hr />- **Database**: PostgreSQL with materialized views for reporting.<hr />- **Cloud Architecture**: AWS Lambda, EventBridge, CloudWatch for serverless infrastructure.<hr />- **Authentication**: Auth0 with OAuth 2.0 for secure access.<hr />- **Analytics**: Google Studio for visualization and reporting.<hr /><hr />### Partnership with Momos:<hr />- Founded by ex-Grab employee; simplifies online operations for F&B businesses.<hr />- Centralized hub for managing online presence across multiple services.<hr />- Onboarded a team of three developers remotely starting March 2021.<hr />- Development aimed to establish a future-proof, scalable foundation.<hr /><hr />### Challenge Faced:<hr />- F&B sector saw increased online operations during the pandemic, leading to fragmentation.<hr />- Businesses had to juggle multiple delivery platforms and social media accounts.<hr />- Lack of a unified view hindered data-driven decision-making.<hr />  <hr />### Solution Features:<hr />- **Third-party Integrations**: APIs for Grab, Foodpanda, Deliveroo; unified dashboard.<hr />- **Serverless Architecture**: Cost-efficient, automatic scaling, high availability.<hr />- **Report Generation**: Utilized GPT-3 for natural language summaries and custom reporting templates.<hr />- **Authentication System**: Ensured secure data synchronization and access.<hr /><hr />### Collaborative Approach:<hr />- Engineers distributed across Singapore, India, and Vietnam.<hr />- Clear communication channels: Daily sync-ups, Notion for task management, weekly logs.<hr />- Development emphasized rapid prototyping, iteration, and documentation.<hr /><hr />### Achievements:<hr />- Successful MVP launch; solid foundation for F&B management.<hr />- Features enable merchants to:<hr />  - Manage multi-platform delivery.<hr />  - Track online reputation.<hr />  - Deploy advertising campaigns easily.<hr />  - Generate data-driven business insights.<hr />- Key technical achievements:<hr />  - Scalable integration framework.<hr />  - Reliable data synchronization.<hr />  - Intuitive user interface.<hr />  - Automated reporting to save time.<hr /><hr />### Future Collaboration:<hr />- Ongoing partnership focuses on enhancing analytics and review management capabilities.<hr />- Aims to add value to users and accelerate growth in the F&B marketplace.","tags":"case-study early-stage fnb","authors":"duy nikki tieubao","date":{"days":18809},"category":"consulting > case-study"},"174":{"file_path":"consulting/case-study/voconic.md","title":"Building Voconic's cloud platform with Google for financial services","description":"We helped CJC create Voconic, a cloud platform that makes it easy for financial companies to deploy complex systems with just a few clicks, reducing manual effort and errors while working across different cloud providers.","spr_content":"- Industry: Cloud services, Global context.<hr />- Business need: Simplified cloud deployment for financial data management.<hr />- Solution: Voconic, a PaaS automating complex cloud operations.<hr />- Outcome: User-friendly platform decreasing deployment time and errors.<hr />- Service offerings: Full-stack development, Cloud architecture.<hr /><hr />### Technical Highlights<hr />- Backend: Golang - optimized for performance, reliability.<hr />- Frontend: React - creating intuitive user interfaces.<hr />- Infrastructure: Docker, Kubernetes - ensuring containerization and orchestration.<hr />- Cloud compatibility: Google Cloud Platform, AWS - supporting multi-cloud environments.<hr />- Documentation: Redux-based bundle for comprehensive guides.<hr /><hr />### Collaboration Context<hr />- CJC: 20 years supporting financial companies with market data management.<hr />- Challenge: Build a simplified data system for cloud deployment.<hr />- Team growth: Expanded from 3 to 6 engineers during project development.<hr />- Partnership: Collaborated with Google for seamless integration.<hr /><hr />### Challenges Addressed<hr />- Handling sensitive financial data necessitating secure, reliable processing.<hr />- Traditional cloud setups requiring specialized knowledge and manual efforts, increasing risks and time.<hr />- Identified needs: Flexibility, technology integration, real-time data delivery, deployment simplification.<hr /><hr />### Development Approach<hr />- Automation focus: Concealed complexity of cloud operations.<hr />- Technology stack: Industry-standard practices with Docker and Kubernetes.<hr />- Complete development: Tailored backend, frontend, CLI for cloud deployment.<hr />- Golang backend: Deep Google Cloud integration for one-click deployment.<hr />- Multi-cloud functionality: Seamless operation across Google Cloud and AWS.<hr />- Intelligent automation: Self-diagnosing and fixing issues in runtime.<hr />- Optimized file management: Chunked file uploads for reliability.<hr />- CLI support: Complex operations handled for advanced users.<hr /><hr />### Collaboration Techniques<hr />- Communication across time zones: Google Chat for queries, Hangouts for meetings, Asana for project tracking.<hr />- Workflow efficiency: Maintaining transparency and alignment throughout project.<hr /><hr />### Achievements<hr />- MVP delivery of Voconic with substantial benefits:<hr />  - User-friendly web interface for non-technical users.<hr />  - Customizable deployment definitions via YAML and CLI.<hr />  - Comprehensive automation testing for consistent performance.<hr />  - Pre-release internal validation to minimize errors.<hr /><hr />### Conclusion<hr />- Voconic enhances cloud deployment efficiency for financial clients.<hr />- Enables clients to deploy solutions in minutes, pivotal for focusing on core operations.<hr />- Advocates modern cloud utilization with decreased technical burden.","tags":"case-study partnership","authors":"duy nikki tieubao","date":{"days":18559},"category":"consulting > case-study"},"175":{"file_path":"consulting/case-study/hedge-foundation.md","title":"Building a powerful crypto trading dashboard for professionals","description":"We built Hedge Foundation, a powerful crypto trading dashboard that helps professional traders manage multiple accounts, track positions, and automate order execution in real-time across exchanges.","spr_content":"- **Industry Context**: Financial Technology / Cryptocurrency; Global reach.<hr />- **User Need**: Unified system for professional crypto traders; managing multiple exchange accounts; executing strategies efficiently.<hr />- **Solution Developed**: Comprehensive all-in-one dashboard; synchronizes data across exchanges; automates trading functions.<hr />- **Outcome Achieved**: Significant reduction in management time for multiple trading accounts.<hr /><hr />- **Service Offerings**: <hr />  - Full-stack development.<hr />  - Financial system integration.<hr />  - Advanced data visualization.<hr /><hr />- **Technical Highlights**:<hr />  - **Performance**: Utilized AG Grid for handling large data tables with real-time updates.<hr />  - **Concurrency**: Implemented web workers for background processes, ensuring UI responsiveness.<hr />  - **Backend**: Developed using Elixir and Phoenix framework for robust API performance.<hr />  - **Data Collection**: Employed crawling systems utilizing Elixir’s Supervisor and GenServer for efficient data gathering.<hr />  - **Visualization Tools**: Integrated TradingView with custom indicators for tailored market analysis.<hr />  - **Architecture**: Designed as microservices with dedicated Balancer and Forwarder for data management.<hr /><hr />- **Case Study: Hedge Foundation**:<hr />  - Developed a trading dashboard for crypto traders to manage accounts, track positions, monitor balances, calculate PnL, and execute bulk orders efficiently.<hr />  - Addressed challenges such as data fragmentation, manual monitoring, execution speed, visualization deficiencies, and historical analysis needs.<hr />  <hr />- **Innovative Features**:<hr />  - Alarm system for real-time market notifications.<hr />  - Automated trading for rapid execution of strategies.<hr />  - Database for extensive historical data storage.<hr />  - Custom charting capabilities with user-defined indicators.<hr /><hr />- **Development Methodology**:<hr />  - Optimized for real-time performance and reliability.<hr />  - Engaged in continuous collaboration with founder for domain expertise.<hr />  - Weekly discussions, daily stand-ups, and collaborative tools (Discord, Basecamp, GitHub) to ensure aligned development.<hr /><hr />- **Achievement Summary**:<hr />  - Delivered a platform facilitating real-time monitoring and automated alerts.<hr />  - Enabled streamlined trade execution and comprehensive historical data for strategy optimization.<hr />  - Reduced management complexity; provided centralized oversight for traders.<hr />  - Continual expansion of integrations with more trading platforms to enhance user capabilities.<hr />  <hr />- **Value Proposition**: Demonstrated capability in creating complex financial systems that integrate real-time data, tailored visualizations, and automated workflows in the cryptocurrency trading domain.","tags":"blockchain case-study fintech quant","authors":"nikki","date":{"days":19160},"category":"consulting > case-study"},"176":{"file_path":"consulting/case-study/attrace.md","title":"Building blockchain solutions for affiliate marketing","description":"We helped Attrace, a Dutch company, create a transparent affiliate marketing platform using blockchain technology that connects online merchants with websites in a secure, fraud-resistant way.","spr_content":"- **Industry**: Marketing Technology / Blockchain<hr />- **Location**: Netherlands<hr />- **Problem**: Traditional affiliate marketing lacks transparency and trust; fraud potential due to unclear money flows.<hr />- **Solution**: Decentralized affiliate network on blockchain; verifies referrals, ensures fair commission payments.<hr />- **Technologies Used**: <hr />  - Smart contracts (Solidity): Transparent agreements.<hr />  - Backend (Golang): Data indexing and network verification.<hr />  - Consensus Protocol: pBFT for reliable validation.<hr />  - Data Storage: IPFS for secure file sharing.<hr />  - Security: Multi-authentication and rigorous testing.<hr />  - Blockchain Integration: Support for eight major networks.<hr />- **Development Highlights**: <hr />  - Focused on secure, transparent blockchain systems.<hr />  - Created custom backend solutions; addressed multiple use cases (IDO launches, liquidity pools, NFTs).<hr />  - Built a fraud detection network for transaction verification.<hr />- **MVP Launch**: Rapid development facilitated early user engagement; core functions powered by blockchain technology.<hr />- **Collaboration**: <hr />  - Daily updates (Slack) and weekly planning (Trello).<hr />  - Bi-weekly demos and monthly roadmap reviews to ensure alignment with Attrace’s vision.<hr />- **Achieved Outcomes**: <hr />  - Successful MVP launch followed by \"The Outlet Launch\" (NFT cashback).<hr />  - Integration with major crypto exchanges.<hr />  - Key deliverables include consensus protocol, network connector, management dashboard.<hr />- **Significant Milestones**: <hr />  - Launch of $ATTR token; full Attrace Referral Network released.<hr />  - Listed on platforms like UniSwap and SushiSwap. <hr />- **Client Feedback**: Positive remarks on development quality and team synchronization; aspiration for ongoing collaboration.","tags":"blockchain case-study","authors":"duy nikki","date":{"days":18796},"category":"consulting > case-study"},"177":{"file_path":"consulting/case-study/startupvn.md","title":"Building a community platform for Vietnamese Entrepreneurs","description":"We helped create a digital hub where Vietnamese startup founders can connect, share knowledge, and access resources to grow their businesses.","spr_content":"- **Industry Context**: Startup community and knowledge sharing in Vietnam; need for connection among entrepreneurs, investors, and resources.<hr />- **Solution**: Developed a comprehensive online community platform for Vietnamese startups.<hr />- **Impact**: Attracted thousands of users; facilitated valuable networking and resource sharing.<hr />  <hr />- **Service Overview**: Full-stack development focusing on a community platform with search integration.<hr />  <hr />- **Technical Highlights**:<hr />  - **Backend**: Node.js and Express for flexible API.<hr />  - **Frontend**: React.js and Next.js for responsive UX.<hr />  - **Database**: MongoDB for diverse content storage.<hr />  - **Search**: Elasticsearch for efficient content discovery.<hr />  - **Architecture**: Microservices for independent scalability.<hr />  - **Mobile Optimization**: Responsive design focused on smartphone users.<hr />  - **Security**: Strong authentication and permissions.<hr /><hr />- **Challenges Addressed**:<hr />  - **Information Fragmentation**: Resources dispersed across platforms.<hr />  - **Limited Networking**: Barriers for founders outside urban centers.<hr />  - **Knowledge Shortages**: New founders lacking mentorship and practical guidance.<hr /><hr />- **Development Strategy**:<hr />  - Built platform tailored to user needs and experiences.<hr />  - Engaged with StartupVN team for real-time feedback.<hr />  - Ensured fast, engaging user navigation and community features.<hr />  <hr />- **Key Features**:<hr />  - Forums for discussion and knowledge sharing.<hr />  - Event listings for networking.<hr />  - Resource libraries for guidance.<hr />  - User profiles for showcasing work.<hr />  - Mentorship connections linking experienced founders to newcomers.<hr /><hr />- **Achievements**:<hr />  - Rapid community growth and active user engagement.<hr />  - Improved access to resources for rural founders.<hr />  - Successful matches of startups with mentors and investors.<hr />  <hr />- **Future Growth**: Continuous updates and feature enhancements driven by community feedback; integral to Vietnam's startup ecosystem evolution. <hr /><hr />- **Quote**: \"The platform has transformed how we support entrepreneurs in Vietnam.\" - Tuan Anh, Founder of StartupVN.<hr />  <hr />- **Conclusion**: Project exemplifies the role of digital platforms in empowering entrepreneurial communities and fostering economic development.","tags":"Vietnam case-study startup","authors":"hnh thanh","date":{"days":19431},"category":"consulting > case-study"},"178":{"file_path":"consulting/case-study/droppii.md","title":"Helping Droppii build a better dropshipping platform that users love","description":"We helped Droppii upgrade their e-commerce platform with a new user-friendly version that makes dropshipping easier for businesses. Working together, we built Droppii for Business v3.0 with a better dashboard, simplified content management, and improved business tools that led to positive user feedback and stronger market position.","spr_content":"- **Industry Focus**: E-commerce, specifically targeting dropshipping.<hr />- **Geographic Scope**: Vietnam and Southeast Asia.<hr />- **Business Necessity**: Modernized platform to simplify and optimize dropshipping operations.<hr />- **Development Solution**: Creation of Droppii for Business v3.0 featuring:<hr />  - Enhanced user experience.<hr />  - Streamlined business tools.<hr />  - Simplified content management.<hr />  - Improved dashboard for easy navigation.<hr />- **Partnership Dynamics**: Collaborative project management with Agile methodologies.<hr />- **Challenge Identification**:<hr />  - Outdated platform unable to meet evolving business demands.<hr />  - Initial system built rapidly during scaling phase (\"90 Days Rushing\").<hr />  - Requirement for superior user interface and expanded development support.<hr />- **Development Process**:<hr />  - **Phase 1**: Rapid collaboration to launch initial version across multiple platforms (web, iOS, Android).<hr />  - **Phase 2**: Addition of advanced features with user feedback and improved design; implemented automated testing for reliability.<hr />- **Result**: Positive reception for Droppii for Business v3.0, enabling businesses to manage operations more effectively:<hr />  - Better user control over data and insights.<hr />  - Technological enhancement solidifying market position.<hr />- **Strategic Impact**: Merging technical proficiency with strategic foresight catalyzed operational efficiencies and reinforced Droppii’s competitive edge.<hr />- **Long-term Vision**: Established foundation for future growth and innovation within the evolving e-commerce landscape.","tags":"case-study dropshipping ecommerce","authors":"huytq tieubao","date":{"days":19725},"category":"consulting > case-study"},"179":{"file_path":"consulting/case-study/joinpara.md","title":"Connecting healthcare workers with hospitals during COVID-19","description":"During the height of the pandemic, we helped Para build a platform that quickly connects nurses with hospitals facing staffing shortages. Our COVID-19 support program allowed them to accelerate development when they needed it most.","spr_content":"- **Industry Context**: Healthcare staffing startup emerged during COVID-19 pandemic.<hr />- **Business Objective**: Rapid platform launch to match nurses with hospitals facing staffing crises.<hr />- **Outcome**: Successful MVP launch that addressed urgent healthcare staffing needs.<hr /><hr />- **Service Provided**: Full-stack Development, Mobile App Development, DevOps. <hr />- **Technical Highlights**:<hr />  - **Backend**: Go microservices for reliability, performance, fault isolation.<hr />  - **Frontend**: React, Redux, Material UI for coherent interfaces.<hr />  - **Mobile**: Cross-platform for iOS and Android.<hr />  - **Database**: Optimized MySQL with raw SQL for efficiency.<hr />  - **Deployment**: Google Kubernetes Engine (GKE) for scalable cloud-native solutions.<hr />  - **Messaging**: RabbitMQ for asynchronous processing.<hr /><hr />- **Challenge**: Hospitals' staffing difficulties amplified by COVID-19.<hr />  - Issues: Patient surges, staff illness, burnout, inability of traditional staffing to adapt rapidly.<hr />  - Solution: Direct connection between available nurses and hospitals for efficient staffing.<hr /><hr />- **Collaboration Details**:<hr />  - Partnered via COVID-19 support program to provide technical expertise at reduced rates.<hr />  - Focused on core features like shift management and candidate screening during MVP development.<hr /><hr />- **Development Approach**:<hr />  - Employed microservices architecture for targeted scaling and independent service management.<hr />  - Implemented RabbitMQ for reliable background task management.<hr />  - Optimized database interactions to enhance performance.<hr />  - Utilized Kubernetes for automated scaling and resource management.<hr />  - Developed advanced matching algorithms for dynamic shift assignments.<hr /><hr />- **Team Structure**: Flexible team that evolved with project phases.<hr />  - **Initial Phase**: Senior backend engineer focused on core system.<hr />  - **Design Phase**: UI/UX team improved mobile app interface.<hr />  - **Frontend Implementation**: React engineer ensured consistent user experience.<hr />  - **Project Oversight**: Continuous project management and communication fostering alignment.<hr /><hr />- **Communication Methods**: Utilized Slack, Google Meet, Figma, Git, Jira, and Confluence for effective collaboration.<hr /><hr />- **Achievements**:<hr />  - MVP launched within six months.<hr />  - Accelerated development timeline allowed market entry ahead of schedule.<hr />  - Significant contribution to pandemic response by enabling staffing solutions.<hr />  - Created a scalable technical foundation for future growth.<hr />  <hr />- **Unique Platform Features**: Streamlined verification, real-time shift matching, direct communication between hospitals and nurses, simplified scheduling, secure handling of healthcare data.<hr /><hr />- **Client Feedback**: Positive remarks on communication and delivery standards, highlighting exceptional partnership quality.<hr /><hr />- **Impact**: Technical expertise leveraged for urgent social needs, aiding healthcare staffing shortages during critical periods and setting the stage for industry transformation.","tags":"US case-study healthcare","authors":"duy nikki","date":{"days":18746},"category":"consulting > case-study"},"180":{"file_path":"consulting/case-study/konvoy.md","title":"Making keg management smarter for breweries","description":"We helped Konvoy create technology that makes tracking and managing beer kegs simple and efficient. Their solution combines smart tracking with flexible rental options to help breweries save money and reduce lost kegs.","spr_content":"- **Context**: Keg rental company in Australia/New Zealand facing asset loss.<hr />- **Challenge**: Breweries report disappearing kegs due to manual tracking inefficiencies. Costs arise from:<hr />  - High keg replacement expenses.<hr />  - Labor-intensive tracking methods.<hr />  - Limited visibility into keg locations.<hr />  - Complex inventory management with growth.<hr />- **Solution**: Developed a cloud-native platform for keg tracking using:<hr />  - **Architecture**: Kubernetes on AWS EKS for scalable infrastructure.<hr />  - **Backend**: Custom geolocation API in Go for cost-effective tracking.<hr />  - **Performance**: Redis caching for enhanced response times.<hr />  - **Monitoring**: Integrated tools (Sentry, Prometheus, Grafana, Loki) for observability.<hr />  - **Deployment**: Continuous delivery with ArgoCD for zero-downtime updates.<hr />- **Outcome**: <hr />  - Reliable system enhances visibility of kegs across the supply chain.<hr />  - Improved financial metrics for breweries due to reduced losses.<hr />  - Flexible rental options: short and long-term, allowing capital savings.<hr />- **Technical Achievements**: <hr />  - Smooth migration to Kubernetes, improving scalability.<hr />  - Application containerization optimized deployment processes.<hr />  - Enhanced monitoring with PLG stack for health tracking.<hr />  - Redesigned user dashboard improves keg tracking efficiency.<hr />  - Major performance enhancements: reduced data retrieval times from tens of seconds to seconds.<hr />- **Collaboration**: Two-year partnership emphasized:<hr />  - Clear communication and regular check-ins.<hr />  - Iterative development based on user feedback.<hr />  - Knowledge transfer and comprehensive documentation.<hr />- **Impact**: Enabled Konvoy to establish a tech-driven approach in keg rental, transforming asset management and operational efficiency in the brewing industry.","tags":"Australia case-study enterprise","authors":"huytq","date":{"days":19614},"category":"consulting > case-study"},"181":{"file_path":"fund/ventures-fund-1.md","title":"Dwarves Ventures Fund 1","description":"In a span of over 2 years, we tested multiple models of investment with 8 portfolio companies.2021, we are finally confident and ready. Dwarves Ventures is officially on the map with our Fund 1.","spr_content":"- Origin in 2019: Dwarves Ventures formed to empower makers and hustlers.<hr />- Two years of experimentation: Tested multiple investment models with 8 portfolio companies.<hr />- Learning from mistakes: Challenges informed optimal investment structure for founder support.<hr />- 2021 launch: Dwarves Ventures establishes presence with Fund 1.<hr />- Continued focus: Aims to refine support for founders building digital products.<hr />- Tech specialization: Prioritizes early-stage software/tech startups to drive profitability.<hr />- Commitment to blockchain: Interest in, but not limited to blockchain technology.<hr />- Hands-on investment: Offers up to $100k, plus expertise in product, organization, and traction.<hr />- Founder-centric approach: Minimizes bureaucracy; emphasizes revenue and profit focus.<hr />- Streamlined communication: Quick response times; assigned representatives for assistance.<hr />- Year-round applications: Open to investment opportunities without time constraints.<hr />- Expanding community: Network of entrepreneurs, industry experts, and strategic partners growing.<hr />- Access to resources: Makers and founders offered support, connections, and benefits.<hr />- Collaborative investment philosophy: Focus on partnership for profitable growth and scale.<hr />- Active inquiry for partners: Seeking new collaborators to enhance founder experience.<hr />- Commitment to updates: Invitations for newsletter sign-ups, direct communication encouraged.","tags":"funding startup ventures","authors":"nikki tieubao","date":{"days":18847},"category":"fund"},"182":{"file_path":"fund/ventures-fund-0.md","title":"Dwarves Ventures Fund 0","description":"It all started when us, a couple of product people realized with our expertise in technology, our passion for outstanding software, we have the ability to uplift like-minded founders by helping them build and launch their startups. The idea became clearer when our network of makers, industry experts and investors broadened steadily.","spr_content":"- Founders: A couple of product experts passionate about technology and software.<hr />- Vision: Uplift like-minded founders by building and launching startups.<hr />- Network: Expanded connections with makers, industry experts, and investors.<hr />- Initiative: Launch of Dwarves Ventures, a VC \"by makers and for makers.\"<hr />- Fund 0: Pilot program to explore venture pathways.<hr /><hr />**2020 Context:**<hr />- Environment: Year marked by uncertainty due to COVID-19.<hr />- Strategy: Celebrate small wins, prioritize learning over immediate profitability.<hr />- Investment Model: \"Founder-friendly\" approach, unconventional value provision.<hr /><hr />**Key Metrics:**<hr />- Team: 9 members, 2 trusted partners.<hr />- Investments: 33 opportunities, 8 portfolio companies.<hr />- Communities: 3 aspiring founder groups.<hr /><hr />**Industry Focus:**<hr />- Sectors: Healthtech, Foodtech, Proptech, Marketplace, B2C, B2B, D2C.<hr /><hr />**Monthly Highlights:**<hr />- January: Remote-first team; aim for deeper partnerships.<hr />- February: COVID-19 relief initiatives for digital transition.<hr />- March: Investment in healthtech startup Para, addressing pandemic needs.<hr />- May: Welcomed Airwatt; reflection on challenges with PurchasingCare.<hr />- July: Added Artzy, focusing on handcrafted eCommerce.<hr />- August: Launched Superbits, indie software studio.<hr />- September: Partnered with Salt Cancer Initiative for patient support.<hr />- October: Portfolio addition Wego, targeting youth coffee consumers.<hr />- November: joinPara's growth amid US chaos; new partnerships.<hr />- December: Improved reporting systems; reflection and learning focus.<hr /><hr />**Conclusion:**<hr />- Fund 0: Challenging yet rewarding journey, emphasizing learning and adaptation.<hr />- Gratitude to aspiring founders, partners, and team for resilience. <hr />- Dwarves Ventures: Transformation from vision to reality.","tags":"funding startup ventures","authors":"nikki tieubao","date":{"days":18697},"category":"fund"},"183":{"file_path":"playbook/operations/hiring-approach.md","title":"Hiring Approach","description":"Hire people who tell us what to do, not the other way around.","spr_content":"- Hire those who direct us, not those we direct.<hr />- Culture is shaped by hiring, firing, promoting.<hr />- Balance short-term and long-term evaluation.<hr />- Values fit and culture fit are critical.<hr />- Hiring signals operational failure; need for help.<hr />- Startup effectiveness follows a power law—few top performers drive most results.<hr />- False positives are acceptable; false negatives are costly.<hr />- Culture equals who we hire.<hr />- Superior colleagues surpass perks.<hr />- Prioritize strengths over lack of weaknesses.<hr />- Hire for future trajectory, not solely experience.<hr />- Favor doers over talkers.<hr />- Seek learners over experts.<hr />- Embrace diversity; hire different.<hr />- Ego is a barrier; ignore ego in hiring.<hr />- Focus on attitude—optimism, renegades, results.<hr />- Interview to find risk-takers, humor, and humility.<hr />- Assess team gaps; fill with complementary skills.<hr />- Maintain a talent pool proactively (\"stock the bullpen\").<hr />- Evaluate intellectual horsepower, curiosity, communication.<hr />- Hire for growth; consider where candidates are headed.<hr />- Promote diversity by expanding recruiting sources.<hr />- Culture is dynamic; hire culture-contributors, not just fit.<hr />- Avoid defaulting to hiring similar profiles.<hr />- Listen carefully; learn candidate stories.<hr />- Resist urgency-driven hiring—prioritize quality.<hr />- Build for long-term; avoid short-term compromises.<hr />- Always keep recruiting; opportunities are everywhere.<hr />- First impressions reveal company processes.<hr />- Move swiftly for the right candidate.<hr />- Clarify offer details beforehand.<hr />- Keep relationships warm; declined offers may change minds.","tags":"hiring operations people","authors":"duy giangthan tieubao","date":{"days":17708},"category":"playbook > operations"},"184":{"file_path":"playbook/operations/bric-a-brac.md","title":"Bric A Brac","description":"Simple operational guidelines for efficiency - outsource what we're not great at, automate repetitive tasks, avoid bottlenecks through broad access, and use existing solutions before building custom ones.","spr_content":"- Outsource critical tasks where internal expertise is lacking.  <hr />- Invest time in selecting and periodically reevaluating vendors.  <hr />- Prioritize automation of repetitive operations.  <hr />- Provide broad \"admin\" access to minimize delays and bottlenecks.  <hr />- Acknowledge that challenges are shared; we will explore manual solutions initially.  <hr />- Build systems only after extensive experience with existing options.  ","tags":"operations performance","authors":"tieubao","date":{"days":18362},"category":"playbook > operations"},"185":{"file_path":"playbook/operations/adjust-the-way-we-work-in-basecamp-style.md","title":"Adjust The Way We Work In Basecamp Style","description":"Our path with Basecamp didn't cross by accident. Years ago, we embarked on the Slack community and had it applied for internal communication. And project management on another tool, where documents & files are in G-suite.","spr_content":"Remote team benefits: autonomy, reduced commute, customizable ambiance, support tools (Basecamp, Slack, G-suite).  <hr />Past tools: Slack for chat, separate project/manage tools, fragmented data.  <hr />Daily workflow: multi-platform, fragmented, distracting; memes and chatter diminish focus.  <hr />Need: integrated, structured work environment—project management, data storage, communication in one.  <hr />Basecamp: transition was tough, initial use limited to project briefs and to-do lists, evolved into central hub for communication and development.  <hr />Places in Basecamp:  <hr />- Woodlands/HQ: company updates, announcements, common resources.  <hr />- Teams: team-specific activities, meetings, research.  <hr />- Projects: detailed project info, ownership, backlog, categorized, dedicated campfire per project for relevant discussion.  <hr />  <hr />Features:  <hr />- Automatic Check-Ins: Scheduled Q&A (discovered, watched movies, interesting finds, daily work reflection).  <hr />- Daily work logs: \"What did you work on today?\"—progress, subtle help request.  <hr />- Todos: task briefs, assignee, approval, deadline, notes; structured task management.  <hr />- Schedule: time-reserved activities, integrated with Google/Apple Calendar to prevent overlaps.  <hr />- Message Board: official updates, policies, research, meeting notes; bullet points for clarity, details later.  <hr />- Docs & Files: organized storage, cloud links (Google Drive, Dropbox), synced without full migration needed.  <hr />- Jump Quickly: shortcut (Ctrl+J) to access recent messages, projects, pings—speed and efficiency.  <hr />  <hr />Design philosophy:  <hr />- Formal enough for focus, casual for creativity.  <hr />- Transparency: Activity tab for visibility, reducing FOMO.  <hr />- Engagement: open discussions in Campfire and threads, public conversations, fostering culture.  <hr />- Building a shared knowledge environment—less gossip, more focus, collaboration, inclusiveness.","tags":"management operations process","authors":"duy tieubao","date":{"days":18737},"category":"playbook > operations"},"186":{"file_path":"playbook/operations/checklists/onboarding-checklist.md","title":"Onboarding","description":"What we have to do when a new employee come to our team.","spr_content":"- Employee forms their own perspective and assesses their fit with the Dwarves during onboarding.<hr />- This stage influences their decision to commit or not to the company.<hr />- Onboarding begins on the first day, avoiding gaps in expectations and policies.<hr />- A uniform onboarding approach may hinder personalized integration.<hr />- Limiting onboarding to only the immediate team risks narrow socialization.<hr />- Short onboarding duration (~1 week) may restrict sufficient learning and adaptation.<hr />- Failing to follow-up can impede ongoing engagement and retention.<hr />- Offer email must specify net/gross salary and onboarding day details.<hr />- Post-acceptance, onboarding email requests setup of financial, identity, and insurance information.<hr />- Additional tasks include completing fortress forms, signing LLC contracts, scheduling onboarding, and inviting to Discord.<hr />- The onboarding call with Operations covers role clarification, workflow, company policies, benefits, and cultural expectations.<hr />- Key topics: probation goals, team introduction, workspace tools (Discord, Basecamp), reward system setup, and communication routines.<hr />- Adding new members requires personal self-introduction in Discord, elaborating on name, role, project, goals, and team, plus warm welcomes.<hr />- New hires onboarded to projects should be introduced to team leads and assigned clear probation goals.<hr />- Probation guidelines include goal setting, scheduled reviews, managing work scope, and assessing cultural fit at bi-weekly intervals.<hr />- Sharing activities involve technical topics, company news, best practices, radio topics, and mentorship opportunities.","tags":"checklist operations people","authors":"hnh tieubao","date":{"days":18262},"category":"playbook > operations > checklists"},"187":{"file_path":"playbook/operations/how-we-do-effective-planning-and-reporting.md","title":"How we do effective planning and reporting","description":"How we do effective planning and reporting at Dwarves","spr_content":" borderless organization with remote teams  <hr />- Clear communication mandated, especially weekly planning and reporting  <hr />- Structured workflow for weekly work allocation ensures synchronization, timely task completion, effective collaboration  <hr /><hr />Weekly Planning & Retro  <hr />- Purpose: set priorities, align team, track progress towards monthly goals  <hr />- Agenda: customizable per team, must include updates, task priorities, blockers, lessons, goals  <hr />- Conducted via combined retrospective and planning sessions  <hr />- Timing: Friday afternoon / Monday morning  <hr />- Participants: all team members  <hr />- Format: Discord voice channel  <hr />- Pre-meeting: members submit written weekly plan  <hr />- Objective: streamline meetings, maximize efficiency  <hr /><hr />Weekly Reporting  <hr />- Purpose: show progress, acknowledge achievements, identify challenges  <hr />- Format: written report submitted before planning session  <hr />- Focus: task quality, challenges, lessons, successes, contributions  <hr />- Occurs at start of planning session; builds on written updates  <hr /><hr />Daily Check-in  <hr />- Required daily, latest by 6PM  <hr />- Methods: standups or written updates, adapting to team function  <hr />- Content:  <hr />  - Planned tasks for the day  <hr />  - Completed tasks  <hr />  - Obstacles or blockers  <hr />  - Support needs from team members  <hr />  - Lessons learned, new insights  <hr />- Goal: brief, focused, timely updates  <hr /><hr />Minimum weekly cycle:  <hr />- Planning: bullet point plan + start/end meetings  <hr />- Reporting: bullet point progress + challenges + lessons  <hr />- Daily: end-of-day written check-in","tags":"code of conduct operations workflow","authors":"nikki","date":{"days":19828},"category":"playbook > operations"},"188":{"file_path":"playbook/operations/make-remote-working-works.md","title":"Make Remote Working Works","description":"Being office-present keeps you effective. Firms lean on that. It explains why companies are down to invest a fortune on building creative office with other benefit packages. There's nothing wrong about that. I'm just saying there are others ways to keep people.","spr_content":"- Office presence correlates with effectiveness; firms invest heavily in creative spaces for that reason.  <hr />- Alternative, cost-effective methods exist to motivate and engage employees.  <hr />- The Dwarves follow principles prioritizing autonomy over micromanagement; meetings are for decisions, ideas are personal.  <hr />- During COVID-19, their remote work habits remained unchanged: virtual meetings, Basecamp, G-suites.  <hr />- Self-preparation is crucial; anticipate meetings, practice rapid info retrieval and typing.  <hr />- Time management is essential; flexible hours can lead to unproductive days; self-regulation needed.  <hr />- Pomodoro technique segments focus and breaks to maintain productivity.  <hr />- Work environment should be personalized; sharing workspace images fosters connection.  <hr />- Focus on doing your job thoroughly; avoid bothering others unnecessarily; exhaust all options first.  <hr />- Documentation compensates for limited face-to-face cues; detailed notes maintain clarity and continuity.","tags":"operations performance remote team","authors":"duy","date":{"days":16817},"category":"playbook > operations"},"189":{"file_path":"playbook/operations/naming-convention.md","title":"Naming convention","description":"This is the guide how to name your Email, Basecamp, Slack, Trello username.","spr_content":"1. Emails follow <first_name><last_name_alias>@d.foundation; exceptions for frequent operators: <first_name>@d.foundation.<hr />2. Google Profile requires linked GitHub ID or full name: <first_name> <last_name>.<hr />3. Basecamp profile must include face photo, name: <first_name> <last_name>, and title at Dwarves Foundation.<hr />4. Slack avatar should be a face picture; full name in Vietnamese; display name: GitHub ID if developer, else <first_name> <last_name>; role description included.<hr />5. Trello/Jira and similar tools: avatar as face picture; username as GitHub ID or <first_name> <last_name>.","tags":"operations people","authors":"hnh","date":{"days":18262},"category":"playbook > operations"},"190":{"file_path":"playbook/operations/project-schedule-delivery-guidelines.md","title":"Project Delivery Schedule and Guidelines","description":"Dwarves Foundation Team's guide on our project delivery process. This post will serve as your go-to resource for understanding our weekly, bi-weekly, and monthly activities, ensuring that we stay on track and excel in our deliveries as well as handle feedback.","spr_content":"Weekly activities:<hr />- Submit points/effort report Fridays, linked spreadsheet, data sync by Tuesday EOD, enables delivery leaderboard.<hr />- Synchronize Project Lead and Delivery Manager Fridays 2:30 PM, focus on project health, milestones, weekly changelog.<hr /><hr />Bi-weekly/monthly:<hr />- Conduct project demos every 3rd Wednesday, update teams, share insights, celebrate wins, follow-up recap and highlight in community calls.<hr />- Host Community Call last Friday monthly, present delivery report, showcase demos, announce leaderboard, distribute ICY rewards and NFT badges.<hr /><hr />Feedback cycles:<hr />- Collect client feedback every 3 or 6 months via dedicated form, sent Monday of first week, assess:<hr />  - member effectiveness,<hr />  - start/stop/continue improvements,<hr />  - leadership and management metrics.<hr /><hr />Reminders:<hr />- Complete weekly report each Friday, consult estimation guidelines.<hr />- Highlight significant milestones/projects to Consulting team for demos and recognition.","tags":"consulting delivery internal","authors":"huytq","date":{"days":19696},"category":"playbook > operations"},"191":{"file_path":"playbook/operations/email-template/information-about-resource-change.md","title":"Inform about resource change","description":"The email template that you need to send to client when it's near holiday to announce about the resource changes.","spr_content":"- Title indicates an official resource changes agreement for a specific project, dated and titled accordingly.  <hr />- Salutation addressed to the customer, expressing gratitude for collaboration.  <hr />- References a signed consultancy agreement via a digital signature platform, ensuring legal validation.  <hr />- Communicates confirmation of resource modifications within development services, as specified in contract appendix.  <hr />- Currently in a certain stage of the process, with existing developer resources listed.  <hr />- Purpose is to inform about resource changes to meet mutual requirements starting from a given date.  <hr />- Details of new resource allocations are specified; updates reflect new statuses and assignments.  <hr />- Expressed hope that these changes better align with both parties' needs.  <hr />- Requests confirmation via reply email; invites suggestions or concerns regarding changes.  <hr />- Sign-off by the team, maintaining professionalism and openness for further communication.  <hr />- Example visual aids provided to illustrate the resource change template.","tags":"email operations template","authors":"hnh nikki","date":{"days":18262},"category":"playbook > operations > email-template"},"192":{"file_path":"playbook/operations/applying-myersbriggs-type-indicator-in-hr.md","title":"Applying Myersbriggs Type Indicator In Hiring","description":"A guide to using MBTI personality types to better understand job candidates and team members, with specific traits to look for in engineering, design, sales, and people operations roles.","spr_content":"- MBTI reveals interaction and thinking preferences, not absolute traits; all types are valid within the tech context.  <hr />- Each personality type has four key preferences from eight possible roots: I/E, S/N, T/F, P/J.  <hr />- Introversion (I) indicates low energy interactions; Extroversion (E) indicates high energy.  <hr />- Sensing (S) emphasizes concrete, factual data; Intuition (N) emphasizes abstract, conceptual info.  <hr />- Thinking (T) focuses on logic; Feeling (F) centers on emotional values.  <hr />- Perceiving (P) is open-minded, adaptable; Judging (J) is decisive and organized.  <hr />- Engineering types (S + T + J) are detail-oriented, deadline-focused, fact-based goal pursuers, prefer working first, exploring reality over possibility.  <hr />- Design types (N + F + J) are creative, people-focused, value traditional or innovative ideas, balanced between work and enjoyment.  <hr />- Sales/Marketing types (E + F) are sociable, persuasive, attention-seeking, optimistic about others' needs.  <hr />- People Ops (N + F) are empathetic, meaning-seeking, help-oriented, caring about human connections.  <hr />- Effective guess strategies include social media background checks, peer insights, avoiding stereotypes (e.g., talkative ≠ extrovert), and defining the least like type when unsure.  <hr />- Understanding the cognitive function stack enhances accurate type inference.  <hr />- Do not reveal interest in MBTI results to candidates to prevent bias; use as a subconscious tool.","tags":"hiring mbti operations people","authors":"namtran","date":{"days":18825},"category":"playbook > operations"},"193":{"file_path":"playbook/operations/setup-email-template.md","title":"Setup email template in Gmail","description":"How to setup template for email in Gmail","spr_content":"- Enable Gmail Templates via Settings -> Advanced -> Canned Responses (Templates) set to Enabled.  <hr />- To add or use templates:  <hr />  - Save current draft as template for future use.  <hr />  - Or select a template when composing an email.  <hr />- Placeholder markers in templates should be marked in red for team awareness.","tags":"operations people","authors":"hnh","date":{"days":18262},"category":"playbook > operations"},"194":{"file_path":"playbook/operations/our-metrics-for-performance-review.md","title":"Our Metrics For Performance Review","description":"Performance is a final value that will be calculated from other metrics. This value will help to indicate how good all the activities we've done to make the company could grow.","spr_content":"- P (Performance) is a composite metric derived from r (metrics like punctuality, workload, quality), t (teamwork), c (contribution) with weighted coefficients.<hr />- P quantifies overall work effectiveness, signaling company growth potential.<hr />- R (Result) assesses output quality, marked by project completion, primarily evaluated by project managers or team leaders.<hr />- R involves metrics such as punctuality, workload, and quality, averaged and weighted.<hr />- Teamwork (T) reflects interpersonal cooperation, proactiveness, communication, support, and availability.<hr />- Effective teamwork requires removing blockers, sharing, helping, and being reachable.<hr />- Fire quickly precedes leniency: false positives must be promptly dismissed; rationalizations for retention are invalid.<hr />- High performers exhibiting behavioral misalignment are classified as competent assholes; remediation needed or separation.<hr />- Low performers who embody company values are managers of Incompetent Nice Guys, to be managed or moved out.<hr />- Outstanding Nice Guys (competent and liked) merit praise, raises, and promotion.<hr />- Distinction exists between performance and values; value-incongruent behavior is intolerable regardless of output.<hr />- Dark Triad (psychopaths, Machiavellians, narcissists) manipulates for self-interest: reward-driven, strategic, ego-boosting respectively.<hr />- Startup values emphasize team collaboration over individual skill, viewing the team as an integrated entity.<hr />- Success depends on vision, coordination, and unselfish teamwork—“I” integrates into “Team.”<hr />- Strong team identity elevates collective strength; individual weaknesses are masked by shared goals.<hr />- Communication metrics include daily transparency, effective presentations, clear writing, inclusive meetings, resourcefulness.<hr />- Helpfulness, leadership, mentoring, motivation, process understanding, and sound decision-making bolster team performance.<hr />- Contributions extend beyond assigned tasks into culture, innovation, open source, speaking, patents, and future-oriented thinking.<hr />- Growth is measured by career development (R), focusing on skills, roles, and personal advancement.","tags":"operations people performance","authors":"tieubao","date":{"days":16895},"category":"playbook > operations"},"195":{"file_path":"playbook/operations/mbti-type-estj.md","title":"MBTI Type ESTJ","description":"All about the ESTJ personality type","spr_content":"- ESTJs require thorough analysis, practical planning, and process control, emphasizing responsibility.<hr />- They thrive in environments with clear norms, performance emphasis, tangible outputs, and structured responsibilities.<hr />- Preferences include facts, details, known quantities, and established procedures; they dislike ambiguity and risk without information.<hr />- Career satisfaction comes from structured, organized settings with clear rules, high responsibility, tangible outcomes, and fair evaluation systems.<hr />- During career exploration, ESTJs gather facts, network extensively, evaluate logically, and integrate personal values early in decision-making.<hr />- They conduct efficient job searches, compiling data, networking, comparing roles with capabilities, and considering future impacts.<hr />- In interviews, they showcase competencies, provide concrete examples, and cultivate employer rapport while avoiding bluntness.<hr />- At work, ESTJs are dependable, decisive, detail-oriented, effective organizers, compliant with policies, and team players who appreciate hierarchy and clarity.<hr />- They may become impatient, inflexible, oppose unwarranted change, and need to keep an open mind, considering broader perspectives.<hr />- They tend to be critical of deviations from standards, may overestimate their pace, and should gather additional info to enhance quality.<hr />- In teamwork, they contribute actively, use direct communication, challenge peers, focus on next steps, and expect punctuality and task completion.<hr />- They need to build rapport, encourage leadership among others, balance task focus with individual needs, and be patient with differing work styles.<hr />- As leaders, ESTJs develop organized plans, give clear directives, model behaviors, enforce policies, make swift decisions, and recognize achievements.<hr />- Effective communication involves honesty, clarity, detailed info, debate enthusiasm, and minimal small talk, but they must avoid criticism, interruptions, and forcefulness.<hr />- When making decisions, they evaluate options logically, reflect on past experiences, adhere to principles, consider impacts on others, and gather all relevant info rapidly.<hr />- Stress arises from unmet duties, frequent change, loss of control, disorganized groups, emotional suppression, crisis demands, and ineffective planning.<hr />- Under stress, ESTJs may withdraw, doubt themselves, display anger or tears, become work-focused or rigid, fear rejection, struggle to articulate feelings, and criticize others critically.<hr />- They can alleviate stress by talking feelings through, considering others’ impacts, reestablishing personal control, adjusting goals, reflecting, and making deliberate decisions.","tags":"ESTJ mbti operations people","authors":"namtran","date":{"days":18832},"category":"playbook > operations"},"196":{"file_path":"playbook/operations/mbti-type-intj.md","title":"MBTI Type INTJ","description":"All about the INTJ personality type","spr_content":"- Preferred work environments involve collaboration with experts, innovation, complex problem-solving, achievement orientation, intellectual challenges, and independence.  <hr />- INTJ career satisfaction stems from analysis, creativity, knowledge, independence, continuous learning, high standards, and systemic impact.  <hr />- They value control, originality, and working with skilled colleagues; routine tasks and immediate monetary rewards are less appealing.  <hr />- During career exploration, INTJs set long-term goals, design personalized plans, and evaluate options objectively, remaining flexible when faced with obstacles.  <hr />- Career development involves adapting to new demands, working with diverse preferences, and consciously practicing nonpreferred traits, especially in leadership and communication.  <hr />- In job searches, they innovate and tailor approaches, compile industry data, design roles if needed, and seek networking growth, while maintaining motivation.  <hr />- In interviews, confidence is key, but they must balance humility and clarity, and be receptive to feedback and engaging enthusiasm.  <hr />- At work, they are organized, big-picture thinkers, goal-setters, and autonomous, preferring environments without interruptions, and motivated by vision and standards.  <hr />- They risk losing motivation after initial creative efforts, overanalyzing details, ignoring practicalities, impatience with slow learners, and neglecting interpersonal sensitivity.  <hr />- In teamwork, they offer fresh perspectives, ask tough questions, organize tasks, and advocate for visions, but should foster input and be mindful of delegation challenges.  <hr />- As leaders, INTJs naturally direct projects, motivate, and maintain focus on goals, often seeking leadership roles proactively.  <hr />- Communication tends to be direct, task-focused, and honest, emphasizing big-picture ideas, with occasional critical tone; they should incorporate empathy, clarify details, and share personal insights when appropriate.  <hr />- Decision making is characterized by logic, thorough analysis, and independence, with awareness of social impacts.  <hr />- Stress arises from change, poor results, contradicting details, incompetent environments, disorganization, and policy breaches.  <hr />- Stress responses include withdrawal into activities, detail fixation, self-criticism, and difficulty focusing.  <hr />- Stress reduction strategies involve perspective shifts, reflection, physical activity, delegation, relaxation, and connecting with others.","tags":"INTJ mbti operations people","authors":"namtran","date":{"days":18834},"category":"playbook > operations"},"197":{"file_path":"playbook/operations/how-to-conduct-delivery-reports.md","title":"How to conduct delivery reports","description":"How we conduct insightful delivery reports that ensure transparency, improve team performance, and enhance client relationships","spr_content":"- Aim for resource efficiency, correct staff-task alignment, and issue resolution.  <hr />- Delivery report core questions: client goal achievement, team performance, problem identification.  <hr />- Data gathering includes artifact collection: demos, docs, diagrams, logs of issues and tech debts.  <hr />- Observe and gather potential technical and managerial problems during artifact review.  <hr />- Evaluate team performance via client advocacy, consultation, delivery quality, management, workload.  <hr />- Assess project priority based on deal size, opportunity potential, strategic partnerships.  <hr />- Compile data into report: project importance ranking, client and team performance ratings (1-5), issues/resolutions log.","tags":"delivery reporting","authors":"thanh","date":{"days":19936},"category":"playbook > operations"},"198":{"file_path":"playground/schedule.md","title":"Labs x Consulting Workflow","description":"This workflow consolidates how new tech is introduced through the Labs team and how it gets processed to Consulting team to apply for projects and bring awareness of our tech expertise.","spr_content":"- Workflow integrates tech introduction, processing, and application across Labs, Consulting, and Operations.<hr />- Labs: Introduce new tech; track trending tech; enhance engineers' expertise.<hr />- Consulting: Map engineers' tech expertise; leverage for new deals.<hr />- Operations: Align tech journey with company objectives; understand tech resources.<hr />- Three key meetings enable expertise sharing:<hr />  - Weekly Labs catch-ups on tech progress and demos.<hr />  - Monthly joint review (Labs & Consulting) for adoption status, feedback, topic suggestions.<hr />  - Labs planning/retrospective for reflecting and planning publications.<hr />- Meetings require clear agendas, participant review, and question prep.<hr />- Tech adoption timeline averages 45 days, variable by complexity.","tags":"labs process","authors":"thanh","date":{"days":19682},"category":"playground"},"199":{"file_path":"playground/rfc/README.md","title":"RFCs","description":"A collaborative workspace for organizing and reviewing team proposals, ideas, and significant changes through structured RFC documents","spr_content":"- Central repository for proposals and RFCs facilitates organized collaboration.  <hr />- Functions as a collaborative workspace for new ideas, improvements, and significant changes.  <hr />- Contributions are made via pull requests (PRs) submitting RFC markdown documents.  <hr />- RFCs serve to provide context, outline solutions, gather feedback, and document decisions.  <hr />- Create new RFCs by adding markdown files following a numbered, hyphenated naming format (e.g., 001-title.md).  <hr />- Use the RFC template: title, author, date, status, summary, problem, proposed solution, alternatives, open questions.  <hr />- RFC lifecycle includes Draft, In Review, Approved, Rejected, and Implemented statuses.  <hr />- Best practices emphasize focus, clarity, stakeholder impact, constructive feedback, and iterative updates.  <hr />- Broader initiatives linked via the main Earn section contextualize RFCs within the ecosystem.","tags":"earn rfc","authors":"tieubao","date":{"days":20181},"category":"playground > rfc"},"200":{"file_path":"playground/onboarding.md","title":"Labs - New Member Onboarding","description":"New members joining our Labs team can be recommended either personally by an existing team member or through a development plan survey. Once onboarded, each new member is paired with a mentor who provides guidance on our operational practices within the team, specifically in relation to a chosen research topic. The initial probation period for new members is set to one month.","spr_content":"New members join Labs via personal recommendation or development survey.  <hr />Onboarding pairs each new member with a mentor focused on operational practices and a research topic.  <hr />Probation period lasts one month.  <hr />During probation, two main deliverables are expected:  <hr />— An assessment report (including use-case and cost-benefit analysis), due within two weeks.  <hr />— A demonstration for the Labs team, prepared within one week.  <hr />Evaluation occurs through review templates or Chad diagram.","tags":"labs process","authors":"thanh","date":{"days":19682},"category":"playground"},"201":{"file_path":"playground/topics/frontend/why-micro-frontend.md","title":"Why Micro Frontend","description":"As web applications become more complex and feature-rich, traditional frontend architectures such as monolithic will become harder to maintain, scale, and evolve. Micro-frontend is an emerging front-end architecture that aims to address these challenges by breaking down the front-end into small, independent and reusable modules.","spr_content":"- Web applications are becoming increasingly complex, demanding scalable and maintainable front-end architectures.  <hr />- Traditional monolithic frontends integrate all features into a single codebase, challenging to scale, update, and maintain as systems grow.  <hr />- Micro-frontend architecture decomposes the frontend into small, independent, reusable modules, each responsible for specific functionalities.  <hr />- Analogous to microservices in backend, micro-frontends enable independent development, testing, deployment, and scaling of UI components.  <hr />- Monolithic approach bundles all code, leading to slow deployments, difficulty managing dependencies, and limited flexibility.  <hr />- Micro-frontend splits vertical slices of front-end work, reducing coupling and facilitating autonomous team ownership.  <hr />- Micro-frontends are assembled within a container or shell application, orchestrating independent modules into a cohesive user experience.  <hr />- Benefits include improved scalability via independent module deployment.  <hr />- Enhanced flexibility allows using heterogeneous frameworks, technologies, and languages per module, promoting technology diversity.  <hr />- Faster development cycles stem from parallel work of autonomous teams, enabling rapid deployment and iteration.  <hr />- Maintainability benefits from dedicated ownership, easier issue isolation, and incremental updates or replacements of individual modules.  <hr />- Challenges involve increased architecture complexity, requiring management of cross-micro-frontend interactions, routing, and dependencies.  <hr />- Performance overhead may increase due to multiple network requests, scripts, and styles for each micro-frontend.  <hr />- Compatibility challenges arise across browsers and devices due to varied dependencies and technology stacks.  <hr />- Security concerns necessitate isolation, sandboxing, and security policies to reduce attack surfaces.  <hr />- Inter-module communication needs careful design to prevent data flow issues, synchronization problems, and unintended side effects.  <hr />- Deployment infrastructure and tooling must adapt to support multiple independent modules, build pipelines, and versioning strategies.  <hr />- Micro-frontend design principles include: Single Responsibility to keep modules focused; Loose Coupling for independence; Composability for reassembly; Isolation to prevent conflicts; Standardization to ensure consistency; Testing for reliability.  <hr />- Adopting micro-frontend architectures supports scalability, flexibility, faster releases, and maintainability, beneficial for enterprise-level applications.  <hr />- Not a universal solution; traditional monoliths may still suffice for smaller or less complex projects.  <hr />- Notable adopters include AWS, IKEA, and DAZN, illustrating industry interest and potential.  <hr />- Proper implementation relies on balancing modular benefits against added complexity, tooling, and performance considerations.","tags":"architecture engineering micro-frontend","authors":"mashiro5951","date":{"days":19436},"category":"playground > topics > frontend"},"202":{"file_path":"playground/topics/frontend/what-is-pnpm-compare-to-npmyarn.md","title":"What is PNPM Compare To NPM/Yarn","description":"PNPM is a package manager for Node.js which stands for “Performant NPM”. It was introduced in 2016, the same year Yarn was released. PNPM is a fast, disk space efficient package manager that supports monorepos. It creates a non-flat `node_modules` by default, so code has no access to arbitrary packages.","spr_content":"- PNPM stands for \"Performant NPM,\" introduced in 2016, alongside Yarn.  <hr />- Research originated from Next.js package management, exploring benefits for larger projects.  <hr />- PNPM is a Node.js package manager emphasizing speed, disk efficiency, and monorepo support.  <hr />- It creates a non-flat node_modules structure, avoiding access to arbitrary packages, differing from NPM/Yarn.  <hr />- Installation involves three stages: dependency resolution, directory layout calculation, and linking via hard links from a central store.  <hr />- Uses a content-addressable store, ensuring each package version is stored once, reducing disk space.  <hr />- Links packages from the store to project node_modules via symlinks/hard links, sharing dependencies across projects.  <hr />- Bypasses flattening the dependency tree, maintaining a nested symlinked structure to solve deep dependency issues.  <hr />- This nested structure prevents deep hierarchies, improves clarity, and reduces duplication in large projects.  <hr />- Disadvantages include potential slower first-time installs and compatibility issues with build tools like Webpack.  <hr />- PNPM’s symlinked node_modules can pose access issues on Windows or restricted environments.  <hr />- Its nested dependency trees may cause conflicts with outdated or incompatible packages.  <hr />- Widely adopted by large companies, demonstrating practical reliability and scalability.  <hr />- Overall, PNPM offers space savings and faster installs over NPM/Yarn, especially beneficial for monorepos and large projects, but with some compatibility considerations.","tags":"engineering frontend web","authors":"toanhq","date":{"days":19458},"category":"playground > topics > frontend"},"203":{"file_path":"playground/topics/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution.md","title":"Why We Chose Our Tech Stack Accelerating Development With A Robust Frontend Solution","description":"We pride ourselves on being a team of seasoned technology experts, passionate about crafting innovative solutions for our clients. With years of experience in the technology industry, we understand the importance of selecting the right tools and technologies to deliver exceptional results. In today's fast-paced world, staying ahead of the competition requires building and deploying features quickly without sacrificing quality or stability.","spr_content":"- The team comprises seasoned, passionate technology experts focused on innovative client solutions.  <hr />- Experience underscores the importance of stable, mature tools for impactful, long-term projects.  <hr />- Prioritize speed without compromising quality or stability in deploying features.  <hr />- The core question for choosing frontend technologies: \"Has this technology achieved stability and maturity?\"  <hr />- Recognize that transformative projects require years of dedication, whereas quick wins are temporary.  <hr />- The tech stack includes React, Next.js, React Context, TypeScript, SWR, React Hook Form, TailwindCSS, and HeadlessUI.  <hr />- React offers a decade of proven stability, high performance, extensive ecosystem, and community support, suitable for long-term projects.  <hr />- Next.js extends React with hybrid rendering, TypeScript support, bundling, and routing, favoring scalability despite added complexity.  <hr />- React Context simplifies data sharing across components, avoiding prop drilling, suitable for simple to moderate state needs.  <hr />- TypeScript enhances code safety, auto-completion, API consistency, and refactoring, facilitating large-scale, maintainable applications.  <hr />- SWR manages backend data caching, ensuring UI responsiveness via stale-while-revalidate strategy, tunable for performance and data freshness.  <hr />- React Hook Form provides efficient, straightforward form management with extendability, emphasizing performance and simplicity.  <hr />- TailwindCSS accelerates development through utility classes, responsive design, auto-optimized production builds, and customization, favoring consistency and speed over initial verbosity.  <hr />- The architecture comprises layers: service connector with Fetch API, state management with React Context and SWR, logic with React Hooks, UI with TailwindCSS and HeadlessUI.  <hr />- Service connector handles API communication, integrating Fetch API with SWR for caching and error handling.  <hr />- State layer manages local and global data, ensuring reactive UI updates efficiently.  <hr />- Logic layer encapsulates business rules via React Hooks, promoting reuse and separation of concerns.  <hr />- UI layer employs TailwindCSS and HeadlessUI for flexible, accessible interfaces; contrasts with more rigid libraries like Ant Design or Material-UI.  <hr />- Testing strategy prioritizes thorough coverage: Jest for unit tests, React Testing Library for component testing based on user behavior, Cypress for end-to-end testing mimicking real user interactions.  <hr />- Jest's parallelization mitigates performance issues in large test suites.  <hr />- Cypress complements tests by catching issues that unit and component tests may miss, supporting high-quality releases.  <hr />- The combined stack and practices enable rapid development of scalable, high-quality applications, maintaining pace with industry evolution.  <hr />- The architecture, technology choices, and testing practices ensure stability, speed, and user satisfaction, establishing a competitive edge.  <hr />- The organization invites collaboration, offering expertise in scalable, high-performance frontend solutions; contact details provided online.","tags":"engineering frontend web","authors":"thanh","date":{"days":19436},"category":"playground > topics > frontend"},"204":{"file_path":"playground/topics/frontend/Report/frontend-report-february-2025.md","title":"Frontend Report February 2025","description":"Our February 2025 report covers what's new in frontend development - from React's move away from Create React App to Next.js improvements, browser compatibility updates, and cool new tools like React Scan. Get practical tips for better auth, faster websites, and making your sites work for everyone.","spr_content":"- React has deprecated Create React App, favoring Vite for fast builds and Next.js for server-side rendering.<hr />- React Context can cause extensive re-renders; optimal to split large contexts or adopt libraries like Jotai or Zustand for fine-grained updates.<hr />- React Server Components differ from traditional components; use `Flight` stream format, avoid the `double data problem`, and recognize server versus client feature boundaries.<hr />- React Query, while popular, introduces large files, complex caches, and less transparent code flow.<hr />- Next.js 15 enhances error handling with dedicated error, global-error, and not-found components, improving site robustness; error boundaries and `useActionState` help manage server-side issues.<hr />- Vercel Fluid Compute combines requests, reducing AI operation costs significantly; replaces Edge with full Node.js support, balancing speed and resource use.<hr />- Implement session-based auth in Next.js via secure database schemas, password hashing, session validation, and UI for sign-up/sign-in.<hr />- Next.js 15's error management tools streamline crash recovery; optimize images, minimize code, leverage Gzip, apply effective caching, and inline critical CSS for speed.<hr />- Browser privacy updates with double-keyed caching partition assets by URL and site, impacting third-party content and CDN performance.<hr />- Accessibility should be integrated early: proper HTML semantics, non-placeholder forms, focus management enhance usability, SEO, and inclusivity.<hr />- Website speed can be improved via image optimization, file compression, CDN caching, Chrome dev tools, critical CSS, and system fonts.<hr />- In 2025, JavaScript trends include edge serverless, WebAssembly speedups, Microfrontends via Module Federation, and refined state management.<hr />- React's 2024 user survey highlights issues with forwardRef, memo, and rapid tooling changes; TanStack Start rises as Next.js alternative.<hr />- Interop 2025 aims for browser feature uniformity, targeting 95% compatibility in key areas like CSS Zoom, WebRTC security, mobile testing.<hr />- React performance tools like React Scan facilitate component slowdown detection with visual feedback, requiring no code modifications.<hr />- Nue offers a minimalistic framework relying on HTML, Markdown, CSS, reducing complexity and technical debt.<hr />- Standard Schema addresses Zod's performance and TypeScript lag issues, providing a versatile, standards-aligned validation system.<hr />- External commentary suggests a React slowdown, developer frustration with linters, AI challenges to browsers, and HTML's underrated programming language status.","tags":"frontend market-report","authors":"hthai2201","date":{"days":20147},"category":"playground > topics > frontend > Report"},"205":{"file_path":"playground/topics/frontend/Report/frontend-report-second-half-of-november-2024.md","title":"Frontend Report Second Half of November 2024","description":"A second half of November 2024 frontend roundup featuring React Router v7, Tailwind CSS v4 Beta, and Vite 6.0. Explore tools like Next Cloudinary, Extism, and SmarkForm, plus JavaScript Symbols, and new CSS strategies.","spr_content":"- 2024 frontend roundup features React Router v7, Tailwind CSS v4 Beta, Vite 6.0, Next Cloudinary, Extism, SmarkForm, plus SSR insights, JavaScript Symbols, new CSS strategies.  <hr />- React Router v7 introduces `framework mode`, Remix features, server rendering, enhanced type safety, better project templates, upgrade guides.  <hr />- Passing useState setters as props causes abstraction leaks; callbacks improve clarity, reusability, maintainability.  <hr />- React Server Components differ from SSR in key aspects; React Portals enable DOM hierarchy escape; Tremor offers dashboard/chart components.  <hr />- Next Cloudinary streamlines client-side file handling, image optimization, multi-source support (Google Drive), real-time effects, watermarking, responsiveness.  <hr />- Solito bridges React Native and Next.js, sharing components, navigation, ensuring high performance, cross-platform user experience.  <hr />- JavaScript Symbols serve as unique property keys, manage custom object behaviors (`Symbol.toPrimitive`, `Symbol.species`), support `Symbol.for()` for global sharing, control over primitive conversions, advanced object manipulation.  <hr />- Importing JS libraries without build systems involves global variables, ES modules, UMD files, import maps, converting CommonJS, but build steps facilitate dependency management.  <hr />- Evaluate browser support for CSS features via support frameworks, simulate unsupported browsers, use `@supports` for fallbacks, balance feature benefits and legacy compatibility.  <hr />- CrRRUX score normalizes Core Web Vitals to compare website performance reliably across cohorts, addressing CWV unit/scale inconsistencies.  <hr />- Tailwind CSS v4 Beta offers 5x faster builds, CSS-first configs, modern features like container queries, cascade layers, popovers.  <hr />- Vite 6.0 improves builds, supports broader frameworks, adds environment API, milestone 10M+ npm downloads — most significant since Vite 2.  <hr />- Extism leverages WebAssembly, provides a universal, plugin-based framework for diverse platforms, enabling programmable software.  <hr />- Additional tools: SmarkForm for forms, SVG font generator, JSON interactive diagrams; trending topics include advanced CSS, web performance scoring, animation evolution.","tags":"frontend market-report","authors":"hthai2201","date":{"days":20057},"category":"playground > topics > frontend > Report"},"206":{"file_path":"playground/topics/frontend/Report/frontend-report-august-2024.md","title":"Frontend Report August 2024","description":"A comprehensive August 2024 update on key advancements in React 19, Next.js 15, and web development tools. Highlights include new async transitions, server components, SSR performance comparisons, and emerging technologies in the web development landscape","spr_content":"- React 19 RC introduces async transitions via Actions, enhancing user experience during state updates.  <hr />- Improved hydration error handling reduces bugs in server-rendered React apps.  <hr />- useOptimistic hook facilitates manageable optimistic UI updates, streamlining state management.  <hr />- Support for Server Components advances server-driven rendering, improving performance and load times.  <hr />- Async scripts and resource preloading optimize resource management in React 19.  <hr />- React 19 enhances form submissions with better techniques and hooks.  <hr />- SSR performance benchmark: Vue leads, followed by Svelte and Solid; React and Preact lag behind.  <hr />- 2024 React libraries emphasize state management (Zustand), UI design (Tailwind CSS), and data fetching (TanStack Query).  <hr />- Next.js 15 RC supports React 19 RC, with improved hydration handling, caching, and experimental features like the React Compiler and Partial Prerendering for mixed static/dynamic content.  <hr />- Next.js 15 enables incremental static generation and dynamic rendering, supporting more complex app architectures.  <hr />- V0 v3D supports creating interactive 3D apps and games seamlessly.  <hr />- CSS in 2024 now encompasses scroll animations, math functions, and scoped styling, enabling more dynamic designs.  <hr />- Temporal proposal simplifies date/time handling, resolving UTC/local issues with daylight saving and comparisons.  <hr />- MUI v6 adds CSS theme variables, container queries, performance tweaks, reduces package size, and experimentally integrates React Server Components and Pigment CSS.  <hr />- Top languages 2024: TypeScript and Rust rapidly rising; Python dominates AI; SQL remains core; C declines; legacy languages persist.  <hr />- e18e community projects clean dependencies, speed up packages, and promote modern alternatives for better JavaScript performance.  <hr />- InformAI exposes app UI data to LLMs with minimal code, enabling context-aware AI responses.  <hr />- Waku simplifies React development with a lightweight, server components-compatible toolkit.  <hr />- Formity allows JSON-defined, multi-step, dynamic forms with conditions and loops.  <hr />- Rspack 1.0, built in Rust, offers 10x faster bundling than webpack, supports Module Federation 2.0, and is adopted by major enterprises.  <hr />- Web development tools expand with Coolify (cloud hosting), Web Vitals Chrome Extension, React Email 3.0, and Web Vitals tool.  <hr />- Emerging discussions highlight the evolution of CSS, the potential of CSS5, and the declining reliance on microfrontends.  <hr />- Trends show growing TypeScript and Rust usage, renewed focus on performance and tooling, and AI integration with frontend ecosystems.","tags":"frontend market-report","authors":"mashiro5951","date":{"days":19975},"category":"playground > topics > frontend > Report"},"207":{"file_path":"playground/topics/frontend/Report/frontend-report-july-2024.md","title":"Frontend Report July 2024","description":"The Front-end Market Report for July 2024 gives you a snapshot of what’s happening in the world of web development. React is evolving with Server Components making waves, and Next.js continues to push the boundaries of performance. Vite is solidifying its position as a top build tool, while TypeScript and other frameworks hold steady. Whether you’re looking for the latest updates or just want to stay in the loop, this report has you covered with key trends, tools, and insights to keep you informed.","spr_content":"Web development July 2024 snapshot: React evolving with Server Components, rivaling Hooks’ impact; React 18 adoption ongoing, SPA dominance at 86%; React Conf 2024 features React 19, real-time server components, innovative topics; React Native frameworks like Expo now recommended for app building.  <hr />Next.js debunking Google JavaScript indexing myths; effective rendering of complex SPA, streamed content; improved performance via scroll delay hydration reducing TBT by 380%; self-hosting guides by Flightcontrol.  <hr />State of JS 2023: TypeScript rising, React/Vue steady, Angular dropping; Next.js leading meta-framework; build/test tools evolving—Vite, Vitest surging; monorepos favor Turborepo, pnpm; backend Architects: Express, Nest.  <hr />TypeScript 5.6 Beta introduces resource management, refined types, performance boosts.  <hr />Vite solidifies as core build tool, integrating with Remix, Angular; Rust-based tools like Rolldown, OXC enhance speed.  <hr />ViteConf 2024: 24-hour event, Astro 4.12’s Server Islands blend static/dynamic tech; AI-native schools like Eureka Labs for training students to develop AI.  <hr />New tools: TurboPack bundler (speed, incremental), es-toolkit (fast, lightweight lodash alternative), React Flow for node-based UIs, CodeMirror React component, enterprise identity tools like WorkOS.  <hr />Trending topics: ViteConf, Astro’s performance architecture, AI education reform.  <hr />Commentary: web developer pain points, visual programming demand, AI’s job market impact, anti-barrel file advice.","tags":"frontend market-report","authors":"mashiro5951","date":{"days":19944},"category":"playground > topics > frontend > Report"},"208":{"file_path":"playground/topics/frontend/using-correct-html-element-to-increase-website-accessibility.md","title":"Using Correct Html Element To Increase Website Accessibility","description":"Using the correct HTML element can significantly improve the accessibility of your website.","spr_content":"- Website accessibility ensures users with disabilities (visual, literacy) can access content via keyboard or Screen Reader tools.  <hr />- Accessibility contributes to Google Lighthouse quality metrics.  <hr />- Proper categorization of elements enhances readability for assistive tools.  <hr />- Correct HTML semantics are crucial: using tags that represent the element's purpose improves accessibility.  <hr />- Example: `<button>` provides default styling and keyboard support; `<div>` does not.  <hr />- Semantic HTML facilitates keyboard navigation (`Tab`, `Enter`), making interfaces usable without mouse.  <hr />- Consistent semantic markup is quick and equally efficient as non-semantic code.  <hr />- Benefits of semantic HTML include:  <hr />  1. Easier development with built-in functionalities.  <hr />  2. Reduced file size, improved responsiveness on mobile.  <hr />  3. Enhanced SEO with keyword emphasis in meaningful tags.","tags":"accessibility frontend html","authors":"thanh","date":{"days":18131},"category":"playground > topics > frontend"},"209":{"file_path":"playground/topics/frontend/react-18.md","title":"React 18","description":"React 18 was released in March 2022. This release focuses on performance improvements and updating the rendering engine.","spr_content":"React 18 introduces significant behind-the-scenes improvements, notably in performance and rendering flexibility.  <hr />Concurrency is an internal mechanism that allows multiple versions of the UI to be prepared simultaneously, enabling interruptible rendering and reusable state, rather than a feature exposed directly.  <hr />Automatic batching is central: multiple state updates, regardless of origin (events, timeouts, promises), are grouped into a single re-render, enhancing efficiency. Developers can opt out using `ReactDOM.flushSync()`.  <hr />Transitions, marked via `startTransition` or `useTransition`, classify updates as non-urgent, allowing React to interrupt less critical work and improve responsiveness, especially during data fetching or complex updates.  <hr />SSR (Server-Side Rendering) benefits from `<Suspense>`, breaking large render steps into smaller, independent units, enabling faster time-to-content and perceived performance without additional code.  <hr />Strict Mode in React 18 now simulates unmounting and remounting components during development, aiding detection of problematic patterns such as impure renders, by recreating lifecycle effects but with a recovery step.  <hr />The new root API (`createRoot`) simplifies root management and activates concurrent rendering features; upgrading involves replacing the legacy `render` method.  <hr />Overall, React 18 enhances performance through automatic batching, introduces interruptible concurrent rendering, asynchronous data handling, improved SSR with Suspense, and stricter development checks, with a straightforward upgrade path.","tags":"engineering frontend report","authors":"khacvy","date":{"days":19149},"category":"playground > topics > frontend"},"210":{"file_path":"playground/topics/golang/go-generics-type-safety.md","title":"How does Go achieve type safety when it enables generics?","description":"A quick note on How does Go achieve type safety when it enables generics","spr_content":"- Go 1.18, released March 2022, introduced generics, enhancing flexibility and reusability.  <hr />- Before generics, Go prioritized simplicity and type safety but lacked flexibility found in Java, C#, C++.  <hr />- Generics use **type parameters** (`[]`) allowing functions and data structures to accept multiple types, maintaining type safety via **type constraints**.  <hr />- **Type parameters** are defined in functions, e.g., `func Print[T any](items []T)`, where `T` is a generic type constrained by `any`.  <hr />- **Type constraints** limit permissible types: specific interfaces, built-ins like `comparable`, `any`, or custom interfaces.  <hr />- Example: `func ToString[T Stringer](val T) string` restricts `T` to types implementing `Stringer`.  <hr />- Compile-time type checking verifies that passed types satisfy constraints, preventing invalid types from compiling.  <hr />- Underlying types, such as in `comparable`, ensure types support operations like `==` and `!=`, ensuring runtime safety.  <hr />- Type inference reduces boilerplate: compiler deduces types from context, e.g., `result := Add(3.0, 4.5)` infers `T` as `float64`.  <hr />- The process involves parsing into AST, type checking with constraints, instantiation, verification, and compilation into executable code, ensuring type safety throughout.  <hr />- Overall, Go’s generics achieve safety through compile-time checks, constraints, and inference, enabling flexible yet safe code design.","tags":"generics golang","authors":"tieubao","date":{"days":20010},"category":"playground > topics > golang"},"211":{"file_path":"playground/topics/golang/slice-and-array-in-golang.md","title":"Slice And Array In Golang","description":"An in-depth exploration of arrays and slices in Go, covering their differences, internal implementations, and key operations like append. Learn about fixed-length arrays, flexible slices, and how Go manages memory allocation for growing slices.","spr_content":"- Arrays in Go are values; copying an array copies all elements.<hr />- Passing an array to a function results in a copy, not a pointer.<hr />- Array size is part of its type; [4]int and [5]int are incompatible types.<hr />- Array length can be inferred with `[...]` syntax, unit compiles length into type.<hr />- Arrays are stored sequentially in memory.<hr />- Array comparison (`==`) requires same type; compares entire content.<hr />- Default array initialization sets elements to zero value.<hr />- Arrays are not pointers; assignments copy entire array content.<hr />- Slices are abstractions built on arrays; no fixed length.<hr />- Slices have three components: pointer to array, length, capacity.<hr />- Assigning slices shares underlying array; modifications affect all references.<hr />- `make([]T, len, cap)` creates a slice linked to a new array.<hr />- Zero value of slices is `nil`.<hr />- Slicing syntax: `a[start:end]`, `a[start:]`, `a[:end]`, `a[:]`.<hr />- Slice length (`len`) and capacity (`cap`) can be queried.<hr />- Slices' internal structure: struct with pointer, len, cap.<hr />- Slices cannot grow beyond their capacity; re-slicing outside bounds panics.<hr />- `append()` adds elements; automatically grows underlying array if capacity exceeded.<hr />- `grow()` doubles capacity below 1024; above 1024, increases by old capacity/4.<hr />- Growing slices involves allocating new arrays with increased capacity and copying data.<hr />- Slicing and appending are efficient ways to manipulate data without explicit array management.","tags":"data-structures golang","authors":"hieuthu1","date":{"days":17603},"category":"playground > topics > golang"},"212":{"file_path":"playground/topics/golang/go-concurrency.md","title":"Go Concurrency","description":"A comprehensive guide to concurrency in Go, covering goroutines, channels, and the Go scheduler. This article explains the differences between concurrency and parallelism, dives into the implementation details of channels, and explores the inner workings of the Go scheduler. It provides insights into how Go's concurrency model compares to other languages and offers a deep understanding of Go's efficient approach to managing concurrent tasks.","spr_content":"- Golang's defining feature: built-in concurrency support, via goroutines and channels.  <hr />- Unlike complex concurrency models in other languages, Go makes concurrency simple and lightweight.  <hr />- Go is a concurrent, not explicitly parallel, language; concurrency = \"out of order\" task management, overlapping task execution; parallelism = simultaneous task execution on multiple cores.  <hr />- Concurrency: tasks start, run, complete in overlapping periods; multitasking on a single core; does not guarantee simultaneous execution.  <hr />- Parallelism: tasks run truly at the same time on multicore processors; independent, simultaneous execution.  <hr />- Analogy: concurrency is like stopping a game to run errands (interleaved tasks), parallelism is like playing a game and listening to music at once.  <hr />- Goroutines: lightweight threads managed by Go runtime; start with 2KB stack, dynamically grow/shrink, only 4KB initially, cheaper than OS threads (e.g., Java's 4MB).  <hr />- Goroutine scheduler: built-in, language-level, no OS thread management needed; highly efficient.  <hr />- Channels: communication pipes between goroutines; transmit data of specific type; default unbuffered (blocking send/recv); can use buffered channels with specified capacity to allow non-blocking sends/receives until buffer full/empty.  <hr />- Channel implementation: struct with buffer array, capacity, current count, element size/type, closed state, indices, wait queues, mutex lock, and blocked goroutines (sudog).  <hr />- sudog: struct representing a goroutine waiting on a channel; queues (recvq, sendq) are linked lists of sudogs; manage blocked goroutines for synchronization.  <hr />- When goroutines attempt to read/write on channels before data is available, they are wrapped as sudogs, linked in recvq or sendq, and block until data transfer occurs.  <hr />- The underlying channel buffer: circular queue with fields buf (storage), dataqsize (capacity), qcount (filled slots), elemsize, elemtype, closed flag, sendx/recvx (indices).  <hr />- Go scheduler: manages goroutines across logical processors (P), OS threads (M), and run queues (local LRQ, global GRQ).  <hr />- P: logical processor, assigned to an OS thread (M), maintains local run queue for goroutines.  <hr />- M: OS thread executing goroutines, context-switched on/off P.  <hr />- G: initial goroutine per program; context-switched on/off M.  <hr />- Scheduling components: GRQ (global queue), LRQ (local queue), all stored in user space; cooperative scheduler with preemptive features.  <hr />- Triggering factors for scheduler: use of `go` keyword, garbage collection, system calls.  <hr />- Hardware context: hyper-threaded cores (Virtual cores), each assigned to an M, enabling efficient goroutine execution.  <hr />- Goroutine-to-M mapping: goroutines are scheduled onto M within P’s LRQ; M manages execution context, goroutine switching, low latency.  <hr />- Overall: Go's concurrency model abstracts thread management, using lightweight goroutines and channels, orchestrated by a sophisticated runtime scheduler for efficient, scalable concurrent programming.","tags":"concurrency golang","authors":"hieuthu1","date":{"days":18234},"category":"playground > topics > golang"},"213":{"file_path":"playground/topics/golang/use-go-selenium-to-crawl-data.md","title":"Use Go Selenium To Crawl Data","description":"Learn how to use Go with Selenium to crawl dynamic web pages, overcoming challenges like AJAX-loaded content and login requirements. This guide demonstrates setting up Selenium, writing Go code to interact with web elements, and extracting data from Amazon's deal page.","spr_content":"- Crawl data involves extracting information from web pages, often through analyzing HTML content.<hr />- Common issues in crawling include dynamically loaded data via AJAX and pages requiring login.<hr />- goquery (Go library) is suitable for static HTML parsing but fails with AJAX-loaded content.<hr />- JavaScript execution is necessary to fully load content, so selenium is used to run real browsers.<hr />- Selenium enables automating browsers like Firefox to load pages, wait for JavaScript, and then extract data.<hr />- Setting up Selenium server involves downloading the jar, running it with Java, and connecting via remote WebDriver.<hr />- Use go get to install go-selenium library in Go for controlling the browser programmatically.<hr />- Browser choice can be Firefox; it needs to be installed locally or configured on the host.<hr />- Example code involves connecting to Selenium server, navigating to Amazon deals, waiting for load, retrieving page title, and extracting specific elements (like images).<hr />- Running selenium server on port 8081 allows Go code to initiate browsing sessions remotely.<hr />- After loading a page, wait sufficiently for JavaScript (e.g., 4 seconds sleep).<hr />- Use CSS selectors to locate DOM elements dynamically generated by JavaScript.<hr />- Extract attributes such as image URLs from targeted DOM elements.<hr />- Selenium helps bypass static HTML limitations, handle login, CAPTCHA, and dynamic content challenges.<hr />- Overall, selenium extends crawling capabilities beyond static parsing, crucial for modern, interactive web pages.<hr />- This approach applies broadly to web scraping, automation testing, and data collection tasks involving dynamic content loading.","tags":"golang software","authors":"hnh","date":{"days":16954},"category":"playground > topics > golang"},"214":{"file_path":"playground/topics/golang/go-in-software-engineering.md","title":"Go In Software Engineering","description":"An overview of Go's key features, including simplicity, concurrency support, and interface-driven OOP. Explores Go's strengths in cloud applications and utility development, and its role in software engineering practices for maintaining resilient programs over time.","spr_content":"Go language is a simple, type-safe, cloud-native language prioritizing minimalism over feature bloat.  <hr />It omits generics, ternary operators, pointer arithmetic, and other complexities to enhance compile speed and clarity.  <hr />Simplicity in design enhances usability; less is more.  <hr />First-class concurrency support via CSP, channels, and lightweight goroutines enables efficient parallelism.  <hr />It excels in concurrent cloud applications, microservices, and distributed systems.  <hr />Go adopts interface-driven OOP, facilitating duck typing and dependency injection while avoiding inheritance pitfalls.  <hr />Less suited for rapid development (e.g., compared to Elixir), high-performance needs (Rust), or scripting flexibility (Python).  <hr />Ideal for utilities, tools, and in situations where fast compilation, small binaries, and reliability are critical.  <hr />In software engineering, Go promotes resilience, maintainability, and future-proofing, supporting long-term robustness over time.","tags":"engineering golang","authors":"hieuthu1","date":{"days":18481},"category":"playground > topics > golang"},"215":{"file_path":"playground/topics/golang/compute-union-2-finite-automata.md","title":"Efficient Union of Finite Automata in Golang: A Practical Approach","description":"An in-depth guide on implementing the union of finite automata in Golang, focusing on practical efficiency and performance considerations.","spr_content":"- Finite Automata (FA): abstract models with finite states, input alphabet, state transitions, initial state, final states.  <hr />- Automata types: deterministic (DFA) – one transition per input in each state; nondeterministic (NFA) – multiple or epsilon transitions.  <hr />- FAs recognize regular languages, used in pattern matching, lexical analysis, validation tasks.  <hr />- Computing union of two automata: create automaton accepting strings accepted by either automaton.  <hr />- Construction: add new start, epsilon transitions to original starts, combine state sets, mark all original final states as final.  <hr />- Academic approach: full Cartesian product, may create unnecessary states, need determinization for efficiency.  <hr />- Practical approach: reachability-based, avoids extra states, optimized for speed/memory, may be hybrid (deterministic/nondeterministic).  <hr />- Golang implementation (`mergeFAStates`): memoization to prevent redundancy, combine transitions, recursively merge differing transitions, pack results, merge epsilon transitions.  <hr />- Key methods: memo map for states, transition table unpacking/packing, byte-by-byte transition merging rules, recursive state merge for different paths.  <hr />- Advantages: efficiency, handles D/NFA, low memory, UTF-8 compatible, avoids redundant states.  <hr />- Trade-offs: possible non-minimal automaton, recursive depth risks, performance depends on automata complexity.  <hr />- Overall: balances correctness and performance, enabling combined pattern automata suitable for fast pattern matching in production.","tags":"finite-automata golang pattern-matching state-machines","authors":"minhlq","date":{"days":19971},"category":"playground > topics > golang"},"216":{"file_path":"playground/topics/golang/go-for-enterprise/enterprise-standard-language.md","title":"Go as an Enterprise Standard Language","description":"There is widespread adoption to take Go as the primary programming language for enterprise-level software development, emphasizing its simplicity, efficiency, and robust standard library. This initiative aims to streamline development processes, improve code maintainability, and leverage Go's strong support for concurrent programming in large-scale enterprise applications.","spr_content":"- Enterprise standard languages establish a unified, reliable foundation for large-scale applications.<hr />- Java is favored for its stability, portability, extensive ecosystem, and mature enterprise support.<hr />- An enterprise standard language ensures maintainability, scalability, security, and cross-platform compatibility.<hr />- Go is chosen for its simplicity, high performance, concurrency support, and modern architecture.<hr />- Go benefits enterprise deployment with fast compile times, low resource consumption, and strong concurrency primitives.<hr />- To incorporate Go into enterprise, adapt it for microservices, APIs, and cloud-native architectures.<hr />- Use Go for scalable, high-performance backend services, especially where concurrency and throughput are critical.<hr />- Enterprises using Go include organizations in cloud infrastructure, DevOps tooling, distributed systems, and microservices.<hr />- When to use Go in enterprise: during system scalability needs, performance-critical applications, or modernization efforts.<hr />- Successful use cases: cloud platforms, container orchestration (like Kubernetes), CI/CD pipelines, network services, and high-demand APIs.","tags":"enterprise golang language","authors":"fuatto","date":{"days":19965},"category":"playground > topics > golang > go-for-enterprise"},"217":{"file_path":"playground/topics/golang/go-for-enterprise/why-go.md","title":"Why Go?","description":"An exploration of the reasons why Go is gaining traction as a preferred programming language for enterprise-level software development, including its simplicity, efficiency, and robust standard library.","spr_content":"- Go was created at Google by Pike, Griesemer, and Thompson to solve inefficiencies in large-scale development.  <hr />- Frustration with slow C++ compilation prompted its inception, aiming for faster compile times and ease of use.  <hr />- Initiated as a 20% project in 2007, open-sourced in 2009; first stable release in 2012.  <hr />- Designed to enhance productivity, scalability, and manageability of large codebases with practical engineering focus.  <hr />- Offers simplicity with minimal yet effective features; easy for new developers to learn quickly.  <hr />- Enables rapid compilation and native execution, reducing development cycle time.  <hr />- Promotes code clarity through standardized formatting and minimalism, improving collaboration and maintenance.  <hr />- Produces statically linked, standalone binaries, simplifying deployment and removing runtime dependencies.  <hr />- Uses explicit error handling, increasing reliability and predictability.  <hr />- Supports cross-platform development with a lightweight runtime on various OSes.  <hr />- Embraces modern object-oriented principles via composition, avoiding inheritance complexity.  <hr />- Ensures future-proofing via forward compatibility and ongoing improvements.  <hr />- Excels over Java in small/medium services due to direct machine code compilation, fast load times, and resource efficiency.  <hr />- Ideal for cloud-native or serverless applications, reducing cold start times with simplicity and performance.  <hr />- Superior in concurrent programming through goroutines and channels, managing thousands of tasks efficiently.  <hr />- Java remains preferable for large, complex applications, Android development, and ecosystem-dependent projects.  <hr />- Both languages complement each other; Go for speed, concurrency, and simplicity; Java for extensive libraries and large-scale systems.","tags":"enterprise golang programming","authors":"fuatto thangnt294","date":{"days":19965},"category":"playground > topics > golang > go-for-enterprise"},"218":{"file_path":"playground/topics/golang/go-for-enterprise/how-to-use-go-in-enterprise.md","title":"How to use Go in the Enterprise","description":"This content map explores strategies and best practices for implementing Go as a primary programming language in enterprise environments. It covers Go's strengths in scalability, concurrency, and performance, as well as addressing common challenges and considerations for large-scale adoption in corporate settings.","spr_content":"Go for enterprise: <hr />- Adhere to Uber's style guide for consistent, maintainable code.  <hr />- Use Go's concurrency, simplicity, and performance benefits for scalable systems.  <hr />- Leverage best practices: modular design, testing, proper error handling, and dependency management.  <hr />- Integrate PID controllers in robotics via dedicated Go libraries for control systems.  <hr />- Employ Profile-Guided Optimization (PGO) to improve CPU efficiency and reduce costs.  <hr />- Utilize Go's efficiency for large-scale data processing, exemplified by processing millions of PDFs rapidly.  <hr />- Consider community insights: Reddit discussions highlight real-world use cases and solutions.  <hr />- Recognize Go's fit: microservices, scalable backend, automation, data pipelines, robotics.  <hr />- Follow established guides and case studies to align development with enterprise-grade reliability and performance.","tags":"enterprise golang language","authors":"fuatto","date":{"days":19965},"category":"playground > topics > golang > go-for-enterprise"},"219":{"file_path":"playground/topics/golang/go-for-enterprise/why-enterprise-chose-java.md","title":"Why Enterprise Chose Java","description":"Java has been widely adopted as the primary programming language for enterprise-level software development, emphasizing its platform independence, robust ecosystem, and extensive libraries. This choice aims to enhance scalability, ensure long-term support, and leverage Java's strong object-oriented programming principles in large-scale enterprise applications.","spr_content":"Java's enterprise appeal hinges on historical strategic features and technical strengths: <hr /><hr />- Originated from Sun Microsystems, originally named Oak, designed for embedded systems; renamed Java (coffee-inspired) for trademark security.<hr />- Rapid adoption due to free online release, gaining developer momentum.<hr />- Recognized early as a commercial asset; licensed revenue from enterprise adoption.<hr />- Integrated tightly with Sun's Solaris OS, supporting \"Java-compatible\" hardware branding.<hr />- \"Write once, run anywhere\" (WORA) principle mitigates platform incompatibility, appealing across diverse enterprise environments.<hr />- Java EE (1999) established a comprehensive enterprise framework for large-scale, distributed, transaction-critical applications.<hr />- Supports seamless communication: native support for XML, JSON, Protocol Buffers, crucial for system integration.<hr />- Facilitates web-based interfaces: JSP, Servlets, Spring, Jakarta EE enable scalable, secure enterprise web apps.<hr />- Offers high-quality database drivers for relational and NoSQL systems, essential for data-centric applications.<hr />- Emphasizes memory safety, reducing vulnerabilities compared to C/C++, mitigating security risks.<hr />- Integrates with enterprise authentication protocols (LDAP, Active Directory, SAML, OAuth), enabling unified security management.<hr />- Large, skilled developer community simplifies hiring, knowledge sharing.<hr />- Flexible deployment: cross-platform, cloud-ready on AWS, GCP, Azure, ensuring adaptable infrastructure.<hr />- Supports monitoring tools (ElasticAPM, DataDog); static typing aids maintainability and debugging.<hr />- Extensive ecosystem of libraries, frameworks, IDEs accelerates development.<hr />- Despite C/C++ speed advantages, Java's ease of use, sufficient performance, memory safety, and platform independence explain widespread enterprise adoption.","tags":"enterprise java language","authors":"fuatto thangnt294","date":{"days":19965},"category":"playground > topics > golang > go-for-enterprise"},"220":{"file_path":"playground/topics/golang/go-for-enterprise/when-to-use-golang-in-enterprise.md","title":"When to use Go in the Enterprise","description":"This section explores the scenarios and considerations for adopting Go as a programming language in enterprise environments. It discusses the advantages of Go's simplicity, efficiency, and concurrency support, as well as its suitability for building scalable and maintainable enterprise applications.","spr_content":"Go excels in enterprise contexts requiring concurrency, simplicity, and performance. It is suitable for microservices, cloud-native architectures, and scalable back-end systems. Its compile-time safety, fast execution, and minimal runtime dependencies make it ideal for high-performance, reliable applications. Use Go when rapid development, maintainability, and efficient concurrency are priorities. It is well-suited for network servers, APIs, and infrastructure tools within enterprise ecosystems.","tags":"enterprise golang language","authors":"fuatto","date":{"days":19965},"category":"playground > topics > golang > go-for-enterprise"},"221":{"file_path":"playground/topics/golang/weekly/sep-20.md","title":"Go Commentary #12: CLI Renaissance with Kubernetes, REST, and Terminal Readers in the Age of Complexity","description":"A critical examination of Go's resurgence in CLI tool development, exploring recent projects in Kubernetes log viewing, REST API interaction, and terminal-based readers, while questioning the industry's shift back to command-line interfaces.","spr_content":"- Kubernetes ecosystem suffers from fragmentation; tools surpass kubectl in capabilities.  <hr />- kl: interactive terminal log viewer; supports multi-container, multi-pod, multi-cluster logs; like enhanced kubectl logs.  <hr />- Querying multiple contexts, namespaces seamlessly in kl signifies abstraction layer over native kubectl commands.  <hr />- Restish: CLI for REST-like APIs; automates discovery, generates command abstractions; simplifies complex API interactions.  <hr />- Restish mimics machine interaction, blurring lines between human command and machine protocols; highlights layering abstractions over HTTP.  <hr />- Full-text CLI reader (cast-text): supply RSS feeds, view content instantly; reinvents terminal news consumption; full circle to text-based interfaces.  <hr />- Rise of CLI tools in 2024 signals industry pendulum swing: from GUIs back to terminal; desire for simplicity countered by layered complexity.  <hr />- Modern CLI: complex, layered, with specific syntaxes; shifts complexity rather than reducing it; reflects paradox of simplicity within perceived minimalism.  <hr />- These tools exemplify trend: layering abstractions to enhance developer experience, yet often increase overall system intricacy.","tags":"go-weekly golang llm","authors":"fuatto","date":{"days":19986},"category":"playground > topics > golang > weekly"},"222":{"file_path":"playground/topics/golang/weekly/aug-30.md","title":"Go Commentary #9: TinyGo, SQLite Vector Search, and Authorization","description":"Exploring TinyGo's latest release, a new vector search extension for SQLite, and an open-source authorization service inspired by Google Zanzibar.","spr_content":"- TinyGo 0.33.0 is a minimal Go compiler optimized for small environments: microcontrollers, wasm/wasi, CLI.  <hr />- Utilizes Go libraries + LLVM to compile Go programs as lightweight as possible.  <hr />- Supports Go 1.23, including range-over-func syntax enhancements.  <hr />- sqlite-vec extends SQLite with small, fast vector search capabilities: store/query float, int8, binary vectors.  <hr />- Implements vec0 virtual tables; pure C, dependency-free, compatible across platforms, including browsers/WASM.  <hr />- Pre-filter vectors with rowid subqueries to optimize KNN searches.  <hr />- Example: simple vector insertion and KNN querying demonstrated in Go and SQL.  <hr />- Permify 1.0 offers open-source authorization as a service inspired by Google Zanzibar.  <hr />- Focuses on centralizing, standardizing, and abstracting authorization logic outside application code.  <hr />- Supports granular, resource-specific, hierarchical, context-aware permissions via domain-specific language compatible with RBAC, ReBAC, ABAC.  <hr />- Facilitates tenant-based, isolated, customizable access controls within a unified system.  <hr />- Achieves high performance with response times around 10ms, leveraging scalable, Zanzibar-inspired architecture.  <hr />- Links: TinyGo v0.33.0 release, sqlite-vec project, Permify v1.0.0, Zanzibar whitepaper.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19965},"category":"playground > topics > golang > weekly"},"223":{"file_path":"playground/topics/golang/weekly/jul-26.md","title":"Go Commentary #4: Ethical Hacking, HTTP Requests, Mac App Development","description":"This post explores two cutting-edge applications of Go programming. First, it details an ethical hacking project that successfully sent 500 million HTTP requests to 2.5 million hosts using Go's concurrency features and custom optimizations. The article then introduces DarwinKit, a powerful Go library for creating native Mac applications without Objective-C or Swift. Both examples demonstrate Go's versatility in handling high-performance networking tasks and cross-platform development, showcasing its potential for complex, scalable projects in cybersecurity and application development.","spr_content":"- **Context (Ethical hacking):**  <hr />  Send 500M non-RFC HTTP/1.1 requests to 2.5M hosts in hours.  <hr />  Achieved via high concurrency, distributed load.  <hr /><hr />- **Choice of Go:**  <hr />  Selected for superior concurrency, speed, simplicity over Rust.  <hr /><hr />- **Request timing & overhead:**  <hr />  `curl` (0.5s/request): impractical—7.9 years.  <hr />  Data volume:  <hr />  - Requests: 478 GB (500M * 1 KB)  <hr />  - Responses: 2.33 TB (500M * 5 KB)  <hr /><hr />- **HTTP client process:**  <hr />  DNS resolve → TCP connect → TLS handshake → Prepare/send request → Read/parse response → Close connection (optional).  <hr /><hr />- **DNS & connection issues:**  <hr />  Slow DNS/TLS (~160ms)—browser reuse mitigates.  <hr />  High volume prevents connection reuse; risk of bans/rate limits.  <hr /><hr />- **Load distribution strategy:**  <hr />  Split task into many servers.  <hr />  Remove DNS resolution and request parsing from core timing.  <hr />  Use massdns for fast DNS.  <hr /><hr />- **System architecture:**  <hr />  Multiple worker pools:  <hr />  1. Request gen, 2. Sender, 3. Response handling.  <hr />  Use thread-safe queues for worker communication and memory reuse.  <hr /><hr />- **HTTP/1.1 sending optimization:**  <hr />  - Use `fasthttp` for x10 speed gain over `net/http`.  <hr />  - Custom request setup: bypass normalization  <hr />  - Override `Dial` with IP resolution for direct connection.  <hr />  - Optimize TLS handshake—hardcoded keys conceptually, but skipped due to time.  <hr /><hr />- **Host chunking:**  <hr />  2.5M hosts split into 200-host chunks.  <hr />  - Balances connection setup time vs. load efficiency.  <hr />  - Minimal retries—large chunks are optimal.  <hr /><hr />- **Scaling infrastructure:**  <hr />  Deploy on DigitalOcean K8s; leverage per-droplet new IPs to avoid bans.  <hr />  Auto-scaling pods based on queue size—rapid scale up/down.  <hr /><hr />- **Results:**  <hr />  - Each pod: 100–400 requests/sec.  <hr />  - Total: 60 pods, 500M requests in hours.  <hr /><hr />- **Conclusion (insights):**  <hr />  High concurrency and distributed load enable massive HTTP request volume within hours, despite inherent latency and rate limiting.  <hr /><hr />---<hr /><hr />- **Context (Mac app building):**  <hr />  No native Go bindings for MacAPIs → Developed DarwinKit.  <hr />  - Supports 33 frameworks, 2,353 classes, 23,822 methods.  <hr />  - Automatic type conversions, block support, delegate setting.  <hr />  - Fully mapped to Objective-C APIs, with documentation links.  <hr />  - Provides high-quality sample apps.  <hr /><hr />- **Future development:**  <hr />  - Generate comprehensive Go bindings for Apple frameworks—currently incomplete.  <hr />  - Work towards CGO-free implementation using `purego`.  <hr />  - Enable small binaries, easier cross-platform use, avoiding CGO restrictions.<hr /><hr />---<hr /><hr />**Summary metaphorically:**  <hr />Mass HTTP requests akin to a distributed swarm of swift, resourceful bees working across a vast hive (hosts), bypassing traditional slow methods (DNS, handshake), using custom hive (code) and strategies (load balancing, optimizations) to pollinate the entire field rapidly.  <hr />Building Mac apps with Go is like translating an ancient language (Objective-C) into modern, idiomatic speech (Go), creating a seamless bridge for developers to harness native power without cumbersome tools.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19930},"category":"playground > topics > golang > weekly"},"224":{"file_path":"playground/topics/golang/weekly/jul-12.md","title":"Go Commentary #3: Generic Collections, Generics Constraints, AI Bot","description":"Implementing generic collections in Go: challenges and solutions, with examples of sortable sets and constraints. Updates on Go's generics support and insights on a new AI bot being developed for the Go community. Stay current with Go's evolving ecosystem and best practices for using generics effectively.","spr_content":"- Generics introduced in Go 1.18 (~2 years ago), still underused, mainly in slices and maps packages.  <hr />- Need for generic collections that support sortable, comparable, and flexible data structures remains unmet due to immature documentation.  <hr />- Existing approaches include defining `Sortable[T comparable]` interfaces with `Less()` methods to enable sorting.  <hr />- Challenges:  <hr />  - Cannot instantiate generic types directly inside interfaces (e.g., `SortableSet[T Sortable]`) due to Go's type system limitations.  <hr />  - Using slices as `Index` functions illustrates how to implement generic constraints but does not directly extend to maps or sets.  <hr />  - Map keys require `comparable`, complicating generic collection implementations.  <hr />- Solutions involve constraints:  <hr />  - Define `SortableConstraint[T comparable]` combining `Sortable[T]` and `comparable`.  <hr />  - Use `T SortableConstraint[T]` in collection interfaces (`SortableSet`, `SliceSet`, `MapSet`) to maintain flexibility and constraints satisfaction.  <hr />- Implementation examples:  <hr />  - Slice-based sets (`SliceSet`) store elements in slices; allows ordered access and sorting.  <hr />  - Map-based sets (`MapSet`) store elements as keys with empty structs; efficient membership queries.  <hr />- Observations:  <hr />  - Current Go documentation and research are insufficient for mature generic collection libraries.  <hr />  - The referenced article by Dolthub pioneers practical, real-world implementations.  <hr />  - The author's cheat sheet demonstrates usage of type arguments and constraints, including the distinction between `comparable`, `interface{}`, and custom constraints.  <hr />- Broader context:  <hr />  - Google's ongoing work on automation bots for governance (e.g., `gopherbot`, `Gaby`) aims to enhance project management via LLMs.  <hr />  - Gaby's development explores effective AI roles and limitations, with community feedback encouraged through open discussion links.","tags":"generics go-weekly golang","authors":"fuatto","date":{"days":19916},"category":"playground > topics > golang > weekly"},"225":{"file_path":"playground/topics/golang/weekly/oct-04.md","title":"Go Commentary #14: Golang compile-time evaluation and Go bindings to SQLite using wazero","description":"A quick toolings for compile-time evaluation and SQLite wrapper with WebAssembly runtime for Go","spr_content":"- Go’s compile-time evaluation traditionally limited; prep aims to expand this with `prep.Comptime`.  <hr />- `prep.Comptime` allows functions to be evaluated during build, replacing calls with their results, akin to Zig’s `comptime` but not identical.  <hr />- Key features include:  <hr />  - Build-time computation for literals and functions, reducing runtime overhead.  <hr />  - Dual usability as a library and standalone CLI tool, facilitating flexible integration.  <hr />  - Compatibility with Go’s build process via `-toolexec`, enabling seamless build-time evaluation.  <hr />- Example demonstrates evaluating `fibonacci(300)` at compile time, replacing the call in binary:  <hr />  - Requires `go build -a -toolexec=\"prep <path>\" main.go`.  <hr />- Limitations:  <hr />  - Supports only basic literals as function arguments; variables with literals are only partially supported.  <hr />  - Cannot evaluate functions dependent on IO or runtime state, as all arguments must be determinable at compile time.  <hr />- The `go-sqlite3` module provides a cgo-free, wazero-based SQLite driver, avoiding c dependencies while offering SQL compatibility:  <hr />  - Wraps a WebAssembly build of SQLite executed within wazero’s runtime (pure Go).  <hr />  - Utilizes modules like `database/sql` with custom driver and embed support.  <hr />  - Dependencies include only wazero, x/sys, and standard Go libraries, maximizing portability and security.  <hr />- Usage example: connect to `demo.db` and query SQLite version purely in Go, leveraging this SQLite WebAssembly runtime.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20000},"category":"playground > topics > golang > weekly"},"226":{"file_path":"playground/topics/golang/weekly/aug-09.md","title":"Go Commentary #6: GUI Framework, Leadership Change","description":"Introducing Cogent Core, a new GUI framework for Go, and announcing Russ Cox stepping down as Tech Lead of Go after 12 years.","spr_content":"- Cogent Core: Go GUI framework, Cross-platform: macOS, Windows, Linux, iOS, Android, Web.  <hr />- Code Once, Rune Everywhere: unified code bases, multi-device deployment.  <hr />- Simple \"Hello, World\" example demonstrates API: create body, button, set text, run main window.  <hr />- Supports standard GUI widgets: buttons, text, text fields, sliders, spinners, color pickers, tables, interactive plots.  <hr />- Widgets support event handling: onClick, onChange, onChange (multiple).  <hr />- Data binding: bind variables to widgets, real-time updates.  <hr />- Advanced widgets: material 3 support, tooltips, drag-and-drop, sprites, popups, code editor with syntax highlighting.  <hr />- Styling: extension properties for easy custom styling, transparent widget design for customization.  <hr />- Responsiveness: one codebase adapts across platforms, dynamic layout adjustments.  <hr />- Color system: dynamic, themeable, supports customization.  <hr />- Ecosystem elements: neural network visualizations, code editing tools, canvas rendering.  <hr />- Features emphasis: complete widget set, flexible styling, platform responsiveness, ease of customization, dynamic visuals, modern UI standards.  <hr /><hr />- Russ Cox steps down as Go Tech Lead after 12 years; Austin Clements assumes role.  <hr />- Russ now focuses on Oscar, an AI agent system for OSS maintenance, including Gaby.  <hr />- Oscar repositories: GitHub links, internal and README references.  <hr />- Context: growth of ecosystem tools and frameworks, continuity in leadership transition, focus on AI-driven OSS support.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19944},"category":"playground > topics > golang > weekly"},"227":{"file_path":"playground/topics/golang/weekly/aug-16.md","title":"Go Commentary #7: Releases, Websockets, and Struct Behavior","description":"Exploring Go 1.23 release notes, the new home for nhooyr/websocket, and common mistakes with Go structs and slices.","spr_content":"- Go 1.23 introduces new features and improvements; skimming the full notes provides a comprehensive understanding.<hr />- [nhooyr/websocket](https://github.com/nhooyr/websocket) is adopted by Coder (Cloud Development Environment), indicating official support and integration.<hr />- Go structs are copied on assignment; assigning a struct creates a new copy, not a reference.<hr />- Mistake example: modifying a struct retrieved via a range loop's address returns a copy, not the original, leading to no effect on source.<hr />- Fix for copying issue: iterate over slice indices, then return &things[i], ensuring reference points to original.<hr />- Slice assignment pitfalls: slices are references but slicing creates views; using a full 3-index slice (e.g., x[2:3:3]) prevents append from overwriting underlying array.<hr />- Mistake: appending to a subslice without capacity can modify the original array, causing side effects.<hr />- Fix: specify full low-high-max index to prevent sharing underlying array on append, ensuring slice independence and data safety.<hr />- References: Go 1.23 release notes, Coder’s websocket blog, nhooyr/websocket repo, and knowledge on Go struct copying and slice handling.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19951},"category":"playground > topics > golang > weekly"},"228":{"file_path":"playground/topics/golang/weekly/sep-06.md","title":"Go Commentary #10: Script, Telemetry","description":"Exploring a Go library for shell-like scripting and Go's telemetry feature.","spr_content":"- Go scripting library akin to shell, designed for simplicity and fluency.<hr />- Provides chainable APIs enabling seamless piping of operations.<hr />- Supports file and directory management with straightforward methods.<hr />- Incorporates functions for text processing—grep, sed-like substitutions.<hr />- Facilitates command execution with output capture and handling.<hr />- Integrates robust error handling within the API flow.<hr />- Examples show reading files, pattern matching, filtering lines, appending, and HTTP requests.<hr />- Usage exemplifies chaining commands for common scripting tasks in Go.<hr />- Telemetry for Go toolchain tracks usage and errors, aiding development insights.<hr />- Telemetry commands toggle data collection modes—on, off, local-only.<hr />- Both scripts and telemetry enhance efficiency, transparency, and maintainability in Go automation.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19972},"category":"playground > topics > golang > weekly"},"229":{"file_path":"playground/topics/golang/weekly/aug-02.md","title":"Go Commentary #5: Features, Memory Optimization, Minecraft Server, Code Editor, and LLM Tool","description":"Explore Go version features, memory optimization techniques, a Go-powered Minecraft server, a pure Go source code editor, and a tool for running large language models.","spr_content":"- Go is released biannually; each major version supported until two newer versions; critical bugs addressed via minor revisions.  <hr />- Go features evolve with version support and updates.  <hr />- Memory optimization involves struct field ordering; detected by fieldalignment analyzer.  <hr />- betteralign improves fieldalignment: skips generated/test files, preserves comments, ensures safe atomic I/O, suits resource-constrained environments.  <hr />- A Go-based Minecraft server (Zeppelin) emphasizes speed and optimization for version 1.21.  <hr />- A pure Go source code editor supports auto-indentation, minimal syntax highlighting, file handling, process integration, plugin support, Go-specific features like goimports, gopls integration, code navigation, debugging, and language server protocol features.  <hr />- Ollama enables quick large language model deployment, emphasizing performance and ease of use.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19937},"category":"playground > topics > golang > weekly"},"230":{"file_path":"playground/topics/golang/weekly/sep-27.md","title":"Go Commentary #13: Compiler Quests and Vector Vexations","description":"A scathing look at Go's compiler internals and the vector search gold rush, exposing the industry's obsession with speed over substance","spr_content":"- LLMs embed knowledge, abilities, and concepts within latent space.  <hr />- Proper priming cues activate latent knowledge by associative triggers.  <hr />- Register allocation in compilers is process of assigning variables to hardware registers.  <hr />- High-speed register allocators prioritize compile speed over optimal runtime code quality.  <hr />- Go's register allocator is very fast, consuming up to 20% of optimization pipeline time.  <hr />- Lack of global view in register allocation can produce inefficient code with spills and repeated memory loads.  <hr />- Fast compile times are prioritized in Go, even if runtime efficiency suffers.  <hr />- Code after fast register allocation resembles disorganized, bureaucratic processes—suboptimal.  <hr />- Vector search tackles nearest neighbor in high-dimensional space; essential in AI/ML pipelines.  <hr />- BBQvec introduces scalable vector index handling billions of vectors; claims rapid index building.  <hr />- Industry salivates over vector search, often without assessing necessity or efficiency gains.  <hr />- Many startups employ vector search for vanity metrics rather than genuine need.  <hr />- BBQvec's index construction speed emphasizes scalability, not necessarily search accuracy or speed.  <hr />- High-dimensional vector search is often overhyped; real-world utility may be limited to niche applications.","tags":"go-weekly golang llm","authors":"fuatto","date":{"days":19993},"category":"playground > topics > golang > weekly"},"231":{"file_path":"playground/topics/golang/weekly/sep-13.md","title":"Go Commentary #11: The Gopher's LLM Revolution - Actors, Frameworks, and the Future of Go","description":"A critical look at Go's evolving role in the LLM ecosystem and the frameworks shaping its future","spr_content":"- The Go survey aims to understand industry usage, developer challenges, feature needs, and community support preferences.  <hr />- Building LLM-powered apps in Go involves integrating large language models with Go's concurrency and networking strengths.  <hr />- The Go approach emphasizes simplicity, clean code, and minimal abstractions, contrasting with Python's layered frameworks.  <hr />- LLM applications exemplified by RAG server use straightforward, idiomatic Go code without overcomplexity.  <hr />- Frameworks like LangChainGo and Genkit introduce high-level abstractions, aiming for flexibility but risking unnecessary complexity.  <hr />- LangChainGo provides an interface for interchangeable vector stores, often a solution in search of a problem.  <hr />- Genkit offers Google-developed tooling for prompt and deployment management, potentially adding layers of obsolescence and complexity.  <hr />- Ergo brings Erlang-style actor model concurrency and distributed system features to Go, emphasizing features like observability and supervision.  <hr />- The Gopher faces a dilemma: preserve Go's core virtues—simplicity, performance—or adopt extensive frameworks risking bloat.  <hr />- The overarching concern: are new abstractions solving real problems or creating unnecessary hurdles?  <hr />- The future of Go in AI and LLM is promising if driven by pragmatic, minimal, and purpose-focused tools.  <hr />- Emphasize that Go should remain a language of clarity and efficiency, not a convoluted framework playground.","tags":"go-weekly golang","authors":"fuatto","date":{"days":19979},"category":"playground > topics > golang > weekly"},"232":{"file_path":"playground/topics/golang/weekly/aug-23.md","title":"Go Commentary #8: Jupyter Notebooks, Kubernetes Tools, GopherCon Talks","description":"Explore GoNB for Jupyter notebooks, kubetrim for KUBECONFIG management, and key highlights from GopherCon UK 2024 talks, covering performance testing, software design, event-driven workflows, and AI's impact on tech jobs.","spr_content":"- GoNB: Jupyter kernel for Go, enables auto-complete, contextual help during code writing.  <hr />- Supports rich content display: HTML, markdown with LaTeX, images, JavaScript, SVG, videos.  <hr />- Integrates widgets: sliders, buttons, facilitates interaction via HTML elements.  <hr />- Plotly and Apache ECharts support through dedicated packages: go-plotly, gonb-echarts, go-echarts.  <hr />- Kubetrim automates KUBECONFIG pruning, verifies active clusters; identifies failed connections, updates config dynamically.  <hr />- GopherCon UK 2024: Features 12 talks covering performance testing tools, managing software complexity, event-driven workflows, AI’s impact on tech jobs.  <hr />- Performance tools replay logs for infrastructure testing during low-traffic hours; supports scalable performance validation.  <hr />- Software complexity management emphasizes API design decisions affecting system simplicity or difficulty.  <hr />- Event-driven architectures: designed to be technology-agnostic, integrating Kafka, Redux, Postgres, MySQL effectively.  <hr />- AI influences future tech employment: discussion on adapting skills to automation and AI-driven changes.  <hr />- Relevant links: GoNB repositories, go-echarts packages, Kubetrim, GopherCon playlist.","tags":"go-weekly golang networking","authors":"fuatto","date":{"days":19958},"category":"playground > topics > golang > weekly"},"233":{"file_path":"playground/topics/golang/weekly/june-27.md","title":"Go Weekly #1: Mastering Go Performance - eBPF and PGO Optimization Techniques","description":"Explore advanced Go optimization techniques using eBPF for kernel-level insights and Profile-Guided Optimization (PGO) for compiler enhancements. Learn how to boost performance and efficiency in Go applications.","spr_content":"- User-space software runs outside the kernel, handling applications, utilities, GUIs.<hr />- Profiling from user space introduces overhead, compromising accuracy due to added layers.<hr />- Kernel modifications are impractical; kernel model maintenance is ongoing risk, system crash threat.<hr />- eBPF, initially for network packet filtering, extends to tracing syscalls, library functions, network events.<hr />- eBPF utilizes hooks at syscall entry/exit, tracepoints; programs are event-driven, verified, JIT-compiled, run before system calls.<hr />- eBPF's safety via verifier ensures non-crashing execution; runs within kernel space, enabling deep kernel introspection.<hr />- eBPF enables systems programming, observability, security, with tools like Parca, Pyroscope, Go PGO.<hr />- PGO (Go 1.20+) collects profile data to improve subsequent builds, promising 2-14% performance gains.<hr />- Grab used PGO in services with TalariaDB; achieved around 10% CPU, 30% memory reduction, 38% volume reduction.<hr />- PGO benefits are more noticeable in simple, low-effort services; complex services lacked integrated profiling.<hr />- eBPF provides low-overhead, deep system visibility; ideal for kernel-level profiling, security, and monitoring.<hr />- PGO's effectiveness depends on build environment support; monorepos face challenges without dedicated profiling infrastructure.","tags":"go-weekly golang kernel-programing","authors":"fuatto","date":{"days":19901},"category":"playground > topics > golang > weekly"},"234":{"file_path":"playground/topics/devbox/story/devbox-docker-adoption-and-challenges.md","title":"Our Docker adoption and its challenges","description":"Our second Devbox session, where we discussed our Docker adoption and challenges.","spr_content":"- LLMs embed latent knowledge, abilities, and concepts within their latent space.<hr />- Latent space is activatable through specific word sequences, priming the model to \"think\" in certain ways.<hr />- Prime associations are key to unlocking latent capabilities efficiently.<hr />- Developers aimed for isolated, resource-maximized environments for concurrent multi-user access.<hr />- Containerization, especially Docker, revolutionized software development by providing lightweight, fast-spinning, resource-efficient environments.<hr />- Docker uses shared OS kernels, reducing resource footprint compared to full VMs.<hr />- Achieved deterministic, reproducible environments via immutable Docker images, decoupling applications from infrastructure.<hr />- Extensive Docker ecosystem supports automation, monitoring, security, networking, storage, and integration.<hr />- Docker simplifies app creation and deployment; supports cloud-managed container services.<hr />- Development environments benefit from Docker by ensuring consistency, controlling dependencies, and easing onboarding.<hr />- Docker's ease of sharing configurations fosters seamless team collaboration.<hr />- Containerization extends beyond backend to frontend, encapsulating code, dependencies, and environments.<hr />- Despite speed, Docker’s need to rebuild images on code change causes delays, especially when all dependencies or tools are included.<hr />- Incremental code modifications trigger full rebuilds due to Docker’s layer caching mechanism; minor changes may repaint entire images.<hr />- Large images with bundled tools incur longer startup times and storage overhead.<hr />- Running commands like `apt-get upgrade` during build introduces non-reproducibility and redundant storage.<hr />- Accessing the internet during builds hampers reproducibility; dependency versions may change over time.<hr />- Explicit version pinning helps but risks unavailability, causing build failures.<hr />- Optimizations include careful Dockerfile layering, minimizing dependencies, and controlling external sources.<hr />- Alternative approaches are considered for development, like avoiding Docker during coding but using it for deployment.<hr />- Next step involves exploring solutions like Nix and Devbox to bypass Docker in development, maintaining benefits for deployment.","tags":"containerization devbox docker tooling virtualization","authors":"hnh vhbien","date":{"days":19832},"category":"playground > topics > devbox > story"},"235":{"file_path":"earn/README.md","title":"👾 Open bounties","description":"The Dwarves bounty program is the means through which both company peeps and the community can contribute to our daily activities. This includes tasks like building internal tools, engaging in new technology research and development, or sharing knowledge session","spr_content":"Dwarves bounty program integrates company and community efforts for daily contributions. Tasks include developing tools, R&D, knowledge sharing. Part of ICY initiative, which links contributors to impactful projects and rewards work. To contribute, open ticket on Discord and ping moderators. Bounty files organized by naming conventions: `XXX-descriptive-name.md`, with category codes indicating purpose. Categories: `0XX` (long-term research), `1XX` (internal tools), `5XX` (project tasks), `8XX` (miscellaneous). The system facilitates quick identification and categorization of opportunities within the ecosystem.","tags":"bounty earn","authors":"hnh monotykamary","date":{"days":19727},"category":"earn"},"236":{"file_path":"updates/build-log/building-data-pipeline-ogif-transcriber.md","title":"Building data pipeline for OGIF transcriber","description":"A technical case study of creating an automated system that downloads videos, processes audio, and generates transcripts using AI services like Groq and OpenAI.","spr_content":"- Dwarves aimed to transcribe and summarize weekly OGIF YouTube events efficiently.<hr />- Developed a scalable, end-to-end data pipeline integrating video download, audio extraction, transcription, and analysis.<hr />- The pipeline architecture follows ETL principles: Extraction (YouTube API), Transformation (audio processing, transcription, cleaning), Loading (storage, analytics).<hr />- Key components include REST API for job management, task queue for async processing, and web interface for users.<hr />- Extraction stage retrieves video metadata and audio streams, handles diverse formats, and manages concurrency.<hr />- Transformation compresses audio, ensuring quality for AI transcription (via Groq), then cleans transcribed text.<hr />- Loading stores cleaned text in PostgreSQL, enabling search, trend analysis, and insights.<hr />- Main workflow involves job submission, parallel download, transcribe, refine, store, and user query retrieval.<hr />- Uses asynchronous calls to external services to maximize efficiency; employs job locking to prevent conflicts.<hr />- Optional typo correction with OpenAI enhances transcript accuracy; temporary files in S3 are managed to minimize costs.<hr />- System scales to process 100 simultaneous videos, from 5 min to 2 hours, within 5 min per video.<hr />- Techniques for scalability include parallel processing, dynamic chunking, connection pooling, and error retries.<hr />- Technologies leveraged: Python (FastAPI, Celery), Groq AI, OpenAI GPT-4, PostgreSQL, Redis, AWS S3, ffmpeg, yt-dlp, Docker, CI/CD pipelines, monitoring tools.<hr />- Modular design improved maintainability, allowing iterative fixing and scaling; resource allocation tailored to component needs.<hr />- The architecture supports non-blocking, event-driven workflows, ensuring timely results and high throughput.<hr />- Refinement needed in video chunking to improve transcript sync.<hr />- The pipeline transforms opaque YouTube footage into searchable, insight-rich organizational content, enabling new data-driven strategies.<hr />","tags":"agents ai data","authors":"quang thanh","date":{"days":20048},"category":"updates > build-log"},"237":{"file_path":"updates/build-log/service_monitoring_with_upptime.md","title":"Secure and transparent uptime monitoring with Upptime and GitHub secrets","description":"Discover how Dwarves Foundation uses Upptime and GitHub Actions for transparent public uptime monitoring while securely keeping tabs on internal services.","spr_content":"- Central goal: ensure all services are operational; monitor everything securely without exposure.  <hr />- Public services require transparency; internal and sensitive endpoints demand privacy.  <hr />- Exposing internal endpoints risks security breaches, privacy leaks, noise, and complexity.  <hr />- Solution: adopt Upptime, leveraging GitHub Actions, Secrets, and GitOps for unified monitoring.  <hr />- Upptime is open-source, uses GitHub repositories for configuration, enabling traceability and collaboration.  <hr />- It automates regular checks, generates static status pages, and integrates secret management seamlessly.  <hr />- `.upptimerc.yml` defines monitoring targets, distinguishing between public URLs and secrets-injected private URLs.  <hr />- Public URL: directly in config; Private URL: references `${{ secrets.* }}` variables for security.  <hr />- GitHub Actions workflows (`uptime.yml`, `response-time.yml`, `site.yml`) automate pinging, metrics, and site deployment.  <hr />- `uptime.yml` runs every 5 mins, checks all sites, logs status, and creates issues on failures.  <hr />- Daily workflows update performance summaries, generate badges, and rebuild the static status site.  <hr />- The status webpage (`status.d.foundation`) fetches only public data via raw GitHub access or API.  <hr />- Internal endpoints are monitored securely but never exposed publicly, maintaining security and privacy.  <hr />- The system balances transparency for users and confidentiality for internal infrastructure, managed entirely in code.","tags":"monitoring security upptime","authors":"quang","date":{"days":20178},"category":"updates > build-log"},"238":{"file_path":"updates/build-log/database-hardening-for-trading-platform.md","title":"Database hardening for a trading platform","description":"Discover how a trading platform mitigated database access risks, enhanced security, and ensured data integrity through role-based access control, network isolation, MFA, and robust logging. Learn about the strategies and tools, like Teleport, that transformed operational efficiency and reinforced client trust.","spr_content":"- Database vulnerabilities in trading platforms pose silent, persistent risks—data breaches, operational disruptions, loss of client trust.  <hr />- Risks stem from unrestricted access controls, especially developer accounts with excessive permissions.  <hr />- Critical issues include unrestricted read/write access, data manipulation, destructive commands, and lack of audit trails.  <hr />- Developers need transient, controlled data manipulation and troubleshooting capabilities, but under strict safeguards.  <hr />- Key risk areas: fund loss, irreversible data deletion, sensitive data exposure, operational downtime, increased costs.  <hr />- Addressing these requires layered security strategies—principle of least privilege, role differentiation, and read-only standby copies.  <hr />- Network isolation minimizes unauthorized access via IP restrictions, VPN, or secure proxies.  <hr />- Multi-factor authentication adds essential verification, reducing account compromise.  <hr />- Data masking protects PII and financial info during access, with granular, real-time rules based on user roles.  <hr />- Database observability through comprehensive logging and alerting enhances accountability, detects suspicious activity, and prevents tampering.  <hr />- \"Break-glass\" emergency access protocols ensure rapid response with multi-party approval, time limits, and detailed activity logs.  <hr />- Teleport acts as a centralized access management platform—authenticating, enforcing MFA, role-based controls, and logging interactions.  <hr />- Logging infrastructure (Fluentd) consolidates and secures logs, supporting alerting and tamper-proof storage.  <hr />- Data masking is implemented via postgresql-anonymizer; special roles (e.g., `unmasked_`) grant limited unmasked access upon request and approval.  <hr />- Emergency access workflow involves request submission, approval, temporary credential issuance, monitored activity, and automatic revocation.  <hr />- Results: significant security enhancement, improved data integrity, operational efficiency, accountability, and reinforced client trust.  <hr />- Robust layered controls and observability establish a secure, resilient foundation for trading platform databases—vital for operational and reputational integrity.","tags":"blockchain database fintech security","authors":"thanh","date":{"days":20090},"category":"updates > build-log"},"239":{"file_path":"updates/build-log/data-archive-and-recovery.md","title":"Building a data archive and recovery strategy for high-volume trading system","description":"A guide to implementing data archival and recovery strategies for high-volume transactional application.","spr_content":"- Data is a critical asset in software development, especially in economics and finance.  <hr />- The growth of diverse business models generates large volumes of data.  <hr />- Data loss or corruption causes irreversible consequences, e.g., transactional errors leading to financial loss.  <hr />- Data safeguarding strategies include encryption, security policies, lifecycle management, and backup & recovery.  <hr />- Encryption transforms data into ciphertext, restricting access.  <hr />- Security policies define data access rules and role permissions.  <hr />- Data lifecycle manages data from creation to disposal.  <hr />- Backup creates copies for disaster recovery; it is resource-intensive and impacts ongoing operations.  <hr />- Data archive is organized long-term storage of end-of-life data, reducing live database pressure and costs.  <hr />- Backup captures database state at specific points for recovery; archive moves infrequently accessed data out of active systems.  <hr />- Archived data supports long-term metrics, audits, legal compliance, but is not optimized for frequent access.  <hr />- Recovery from archives involves manual retrieval, reprocessing, and validation, often using dedicated compute environments.  <hr />- Forward recovery uses archived data for validation, avoiding interference with live systems, and generates clean data per current rules.  <hr />- For high-volume trading apps (e.g., 50,000 daily transactions totaling ~9GB per quarter), an archive system is essential.  <hr />- Archiving workflow: process end of cycle, compress/encrypt, store with metadata for quick retrieval.  <hr />- Recovery workflow: administrator searches metadata, retrieves archive, reprocesses in isolated environment, optionally restores processed data separately.  <hr />- Implementing archive/recovery optimizes long-term data access, cost, and compliance.  <hr />- Valuable for finance, healthcare, e-commerce where data integrity and legal compliance are vital.  <hr />- System architects, DBAs, developers must understand and deploy these strategies for scalable, reliable systems.","tags":"blockchain data finance","authors":"bievh","date":{"days":20070},"category":"updates > build-log"},"240":{"file_path":"updates/build-log/enhancing-cryptocurrency-transfer-logger.md","title":"Transfer mapping: enhancing loggers for better transparency","description":"A comprehensive guide on improving cryptocurrency transfer logging systems to provide better transparency and traceability for users and developers.","spr_content":"- A logger records system events, user actions, and issues in real-time, functioning as an application's memory.<hr />- Loggers serve for user notifications and developer debugging/monitoring.<hr />- Effectiveness depends on consistent format, clarity, and purposefulness in log entries.<hr />- Consistency ensures pattern recognition; clarity makes logs self-explanatory; purposefulness adds actionable insights.<hr />- In cryptocurrency transfers, logs often lack relationship context between withdrawal and deposit entries.<hr />- Unrelated logs cause user confusion, reduce trust, and hinder debugging.<hr />- Current systems treat transactions as isolated, missing links between related movements.<hr />- Enhanced logging links related transactions via pairing, classification, grouping, and balance tracking.<hr />- Data sources include transfer records and balance snapshots; pairing uses window functions (LEAD/LAG) to find related transactions.<hr />- Transfer type detection classifies transactions as internal or external based on amounts, timing, and sequence.<hr />- Grouping consolidates related transfers within time windows, aiding in accurate balance calculations.<hr />- Starting balance is derived from historical snapshots, ensuring baseline accuracy.<hr />- Running balance calculations utilize window functions, maintaining non-negative constraints and reflecting true asset flow.<hr />- The enhanced system clarifies transaction relationships, improves accuracy with balance snapshots, and offers better user insights.<hr />- Overall, it transforms disconnected logs into a clear, comprehensive narrative, enhancing transparency and trust in financial applications.","tags":"blockchain data fintech","authors":"bievh","date":{"days":20045},"category":"updates > build-log"},"241":{"file_path":"updates/build-log/implement-binance-future-pnl-analysis-page.md","title":"Implement Binance Futures PNL analysis page by Phoenix LiveView","description":"Implementing Binance Futures PNL Analysis page with Phoenix LiveView to optimize development efficiency. This approach reduces the need for separate frontend and backend resources while enabling faster real-time data updates through WebSocket connections and server-side rendering.","spr_content":"- Binance lacks Master Account (MSA) view for Future PNL; decision to clone Binance Future PNL Analysis page using Phoenix LiveView.\r<hr />- Phoenix LiveView supports real-time data updates via Websockets, ideal for continuous price and position streaming.\r<hr />- LiveView manages server-side state, enhancing data security and calculation accuracy, preventing client-side tampering.\r<hr />- Handles complex PNL calculations centrally on the server for higher precision and consistency.\r<hr />- Simplifies development with Elixir, avoiding separate frontend frameworks and easing state management.\r<hr />- Data aggregation relies on combining `ts_user_trades` (realized PNL, commission, volume) and `ts_future_incomes` (funding fee, inflows).\r<hr />- Uses TimescaleDB for efficient chunked data storage, hyper-partitioned daily (`ts_user_trades`) and monthly (`ts_future_incomes`).\r<hr />- Query leverages `time_bucket` to join chunks, optimizing long-range date queries and avoiding timeouts.\r<hr />- Implements cronjob to precompute and fill `ts_account_pnl_analysis`, updating daily and hourly for current data to reduce on-demand computation.\r<hr />- User interface comprises multiple tabs: overview, detail, symbol analysis, funding, and transactions, providing comprehensive Future PNL insights.","tags":"blockchain fintech phoenix-live-view real-time","authors":"minhth","date":{"days":20103},"category":"updates > build-log"},"242":{"file_path":"updates/build-log/binance-transfer-matching.md","title":"Building better Binance transfer tracking","description":"A deep dive into building a robust transfer tracking syste m for Binance accounts, transforming disconnected transaction logs into meaningful fund flow narratives through SQL and data analysis","spr_content":"- Binance is a leading decentralized exchange with high demand for integrated applications, especially for multi-account trading automation.  <hr />- Initial system worked well, encouraging clients to expand their accounts and assets.  <hr />- As funds transfer to balance strategies, tracking becomes problematic, leading to manual oversight and poor visibility.  <hr />- The core challenge: Binance API's `Get Income History (USER_DATA)` provides data limited to income type, amount, asset, timestamp, and transaction ID, but lacks clear fund source/destination or flow path.  <hr />- Detection of transfers relies solely on incomeType `TRANSFER` and sign of amount; no explicit link between sender and receiver accounts.  <hr />- Resulting logs are sporadic and confusing, showing disconnected transactions without clear relationships, impairing fund flow comprehension.  <hr />- Ideal logging: sequential, connected flow of funds between accounts, illustrating explicit sender-receiver relationships.  <hr />- Key insight: matching across transfer records can be improved by leveraging transaction IDs (`tranId`) and timestamps.  <hr />- Practical constraint: separate transaction IDs per side of transfer prevent direct matching via `tranId`.  <hr />- To address this, implement a database-based matching approach using advanced SQL techniques.  <hr />- Use PostgreSQL window functions (`LEAD` and `LAG`) to examine neighboring transactions in time order, facilitating transfer pairing.  <hr />- Define transfer type detection logic by analyzing current and adjacent transaction amounts and timing gaps (e.g., within 5 seconds) to identify internal transfers versus external deposits/withdrawals.  <hr />- To improve performance and accuracy:  <hr />  - Group consecutive transfers of the same account within a time window (e.g., 20 seconds), reducing the dataset complexity.  <hr />  - Retrieve initial balances from a snapshot table at the group's start time, then accumulate transfer amounts to compute running balances, avoiding costly self-joins or recursion.  <hr />- Utilize PostgreSQL window functions with `ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW` to perform cumulative sum calculations within transfer groups, ensuring data integrity and performance.  <hr />- Final desired output: comprehensive transfer record with explicit source/destination, transfer type, associated balance changes, and temporal relationships, enabling clear visualization of fund flows.  <hr />- A layered, incremental approach: starting from raw API responses, enhancing data processing with pairing, grouping, and balancing calculations, can be systematically implemented with clear advantages.  <hr />- Key lessons:  <hr />  - Extract maximum insights from existing API data before seeking external remedies.  <hr />  - Small, precise data-centric refinements can produce significant improvements.  <hr />  - Data modeling, proper grouping, and window functions are powerful tools in resolving complex transaction relationships.","tags":"data defi fintech","authors":"bievh","date":{"days":20045},"category":"updates > build-log"},"243":{"file_path":"updates/build-log/optimize-init-load-time-for-trading-platform.md","title":"Optimizing initial load time for a Trading Platform","description":"Discover the technical strategies behind optimizing a Binance trading platform, reducing initial load times to under 1 second for enhanced trader productivity.","spr_content":"- The platform's initial load time was the main performance bottleneck, worsening with multiple accounts.<hr />- Slow load times directly impacted responsiveness, crucial for real-time trading.<hr />- Users manage many accounts and require instantaneous data updates and reactions.<hr />- Rendering large datasets and multiple accounts strains browser processing, causing delays.<hr />- Request delays stemmed from numerous API calls (`/account`, `/listenKey`) with response times of 100–300ms each.<hr />- Browser request limits caused queuing, compounding load delays as accounts increased.<hr />- Background data processing via Web Workers added a 500ms startup delay, hindering quick initial display.<hr />- Prior code and styles reductions improved performance marginally; network optimization was prioritized.<hr />- Transitioned heavy processing from frontend to backend via an optimized API.<hr />- Implemented caching of account info in backend to reduce external requests, balancing freshness and speed.<hr />- Batch requests using a single API call to retrieve data for multiple accounts, avoiding request limits.<hr />- Used Gzip compression to minimize data transfer size.<hr />- Included WebSocket setup (`listenKey`) in initial batched responses to expedite real-time connections.<hr />- Cached processed data enabled instant frontend display without waiting for background processing.<hr />- Subsequent WebSocket streams kept data current, reconciling cache with live Binance data.<hr />- Performed non-blocking revalidation API calls after initial load to ensure data accuracy.<hr />- Resulted in under 1 second for initial content and around 1.5 seconds for full usability at 50 accounts.<hr />- Achieved significantly faster load times (~2.5–4s previously), markedly improving user experience.<hr />- Emphasized practical solutions—caching, batching, request optimization—over complex theoretical fixes.<hr />- Demonstrated that addressing network and rendering constraints directly yields substantial frontend performance gains.","tags":"fintech performance","authors":"thanh","date":{"days":20159},"category":"updates > build-log"},"244":{"file_path":"updates/build-log/building-chatbot-agent-for-project-management-tool.md","title":"Building chatbot agent to streamline project management","description":"A technical case study detailing the implementation of an AI chatbot agent in a project management platform. Learn how the team leveraged LangChain, LangGraph, and GPT-4 to build a multi-agent system using the supervisor-worker pattern. ","spr_content":"- Umbrella is a project management platform designed for athletes, musicians, creatives, and businesses; centralizes collaboration, document sharing, and workflows.  <hr />- User base growth revealed an opportunity to enhance with generative AI, streamlining workflows and boosting productivity.  <hr />- The core challenge: natively integrating a generative AI chatbot for brainstorming, proposal generation, task management, and task assistance within the chat interface.  <hr />- System enables seamless transition between research, ideation, and execution phases, simplifying project workflows.  <hr />- Technical process involves communicating with external AI platforms (OpenAI), interpreting requests, executing tasks, and monitoring performance.  <hr />- Business requirements for the chatbot: answer general PM questions, assist in task/objective management, generate proposals, recommend tasks, support event planning.  <hr />- Technical requirements for scalability: modular design with supervisor-worker pattern, response time under 5 seconds, load balancing across multiple API keys to prevent rate limits.  <hr />- Reliability measures include LangSmith logging/monitoring, A/B prompt testing for optimization.  <hr />- Security needs: user authentication/authorization, prompt guardrails, data encryption, access controls to protect user data.  <hr />- Integration specifics: GPT-4o for logic and reasoning, LangChain for agent architecture.  <hr />- Architecture overview: supervisor as central orchestrator, worker agents for tasks, load balancer (LFU), LLM provider (GPT-4o), LangSmith, MongoDB data storage.  <hr />- Request flow: user query routed via supervisor to specific agent, agent decides on tool use, interacts with database, responds to supervisor, then to user.  <hr />- Core workflows tracked with sequence diagram: routing, tool calls, response generation, managing context length through cronjob, limiting to last 25 messages for conversation stability.  <hr />- Multi-agent system (LangGraph supervisor-worker pattern) reduces hallucination, improves maintainability, extends functionality.  <hr />- UI enhancements via HTML widget responses allow custom frontend UI elements—e.g., task creation cards—improving UX.  <hr />- Tech stack: TypeScript, Node.js, React, Next.js, LangChain, LangGraph, LangSmith, MongoDB.  <hr />- Lessons learned: multi-agent approach enhances scalability, framework tools accelerate development, HTML widget responses improve UX.  <hr />- Areas for improvement: manage long conversations better (text summarization, thread management), optimize resource utilization/load balancing.  <hr />- Future plans: RAG systems for real-time knowledge, user feedback loops for continuous improvement.  <hr />- Overall impact: AI-driven multi-agent architecture streamlines project workflows, boosts productivity, enhances user satisfaction, while maintaining robustness and extensibility.","tags":"agents ai","authors":"hoangnnh thanh","date":{"days":20048},"category":"updates > build-log"},"245":{"file_path":"updates/build-log/crypto-market-outperform-chart-rendering.md","title":"Visualizing crypto market performance: BTC-Alt dynamic indicators in Golang","description":"Implementing a Golang-based visualization for crypto market performance indicators, focusing on Bitcoin vs Altcoin dynamics and trading strategy effectiveness through interactive charts and data analysis","spr_content":"- Crypto trading encompasses strategies beyond gambling, enabling potential profit with effective execution.  <hr />- Hedge strategy (\"Hedge Bitcoin\") involves holding both assets (e.g., salt and pepper) with inverse expectations, reducing risk.  <hr />- In crypto, Hedge Bitcoin means trading other assets inversely to Bitcoin to mitigate risk.  <hr />- Monitoring liquidity flows between Bitcoin and Altcoins across exchanges reveals performance patterns.  <hr />- Market-wide insights derive from trading PnL data of Bitcoin and Altcoins, linked to liquidity dynamics.  <hr />- Asset price increases are driven by liquidity inflows from new buyers or asset transfer; vice versa for decreases.  <hr />- Price movements indicate liquidity shifts, which impact trading PnL and vice versa, forming feedback loops.  <hr />- Market performance formula: market_perf = BTC_perf - Alt_perf, based on PnL ratios relative to initial holdings.  <hr />- Positive market_perf (~5%) with BTC_perf (~2.5%) signals fund transfer from altcoins to Bitcoin; negative indicates external capital entry.  <hr />- To execute Hedge, set up a Binance account with 50% funds in BTC long and 50% split among short positions in Altcoins.  <hr />- Measure performance changes at intervals (minutes), calculate PnL, store data for analysis.  <hr />- Visualize data via mixed charts combining line (performance, PnL) and bar (BTC/Altcoin performance) for clarity.  <hr />- Data structures are aligned via time-mapped dictionaries in Go to synchronize datasets.  <hr />- Use Go-echarts to build multi-axis, mixed charts—line for performance/PnL, bars for asset performance, with trade round boundaries.  <hr />- Mark areas on charts indicate trade durations, using trade open/close times for boundary coordinates.  <hr />- The visualization integrates market trend data with historical trade performance, aiding strategic assessment.  <hr />- Combining multi-source datasets into unified, readable charts enhances understanding of liquidity, pricing, and PnL patterns.  <hr />- These tools help traders refine timings, detect liquidity shifts, and optimize hedging strategies in complex markets.","tags":"blockchain data fintech","authors":"bievh","date":{"days":20045},"category":"updates > build-log"},"246":{"file_path":"updates/build-log/ai-powered-monthly-project-reports.md","title":"Project reports system: a case study","description":"An in-depth look at Dwarves' monthly Project Reports system - a lean, efficient system that transforms communication data into actionable intelligence for Operations teams. This case study explores how we orchestrate multiple data streams into comprehensive project insights while maintaining enterprise-grade security and cost efficiency.","spr_content":"- Dwarves developed a Monthly Project Reports system to convert communication data into actionable insights.<hr />- The system integrates multiple data streams, maintaining security and cost efficiency.<hr />- Engineers generate thousands of Discord messages daily, containing critical project decisions and discussions.<hr />- Valuable insights are often hidden in chat histories, complicating progress tracking, documentation alignment, and insight extraction.<hr />- The Project Reports system acts as an orchestration layer transforming scattered communication into structured intelligence.<hr />- Data architecture emphasizes lean storage, using S3 with Parquet and CSV files for cost/performance optimization.<hr />- Querying relies on DuckDB and Polars for high-performance, lightweight processing.<hr />- Secure access is enforced via Modal, orchestrating serverless functions and ensuring data security.<hr />- Data flows from raw sources through landing and gold zones, with quality checks before processing.<hr />- The pipeline involves scheduled data collection, PII scrubbing, validation, schema enforcement, and storage.<hr />- Processed data stored in S3 in Parquet and CSV formats feeds query engines for analysis.<hr />- Dify low-code workflows extract insights from streams, enabling rapid iteration and flexible integration.<hr />- Workflow templates facilitate adjusting to operational feedback without heavy development overhead.<hr />- Insights generated support real-time project visibility, decision-making, and automated reporting.<hr />- Data collection uses Modal's serverless architecture, with weekly scheduled Discord data pipelines.<hr />- Each message is filtered, scrubbed, and stored securely, enabling auditability and privacy.<hr />- A flexible API allows querying processed data efficiently, supporting diverse project needs.<hr />- Implementation improved project oversight by providing clear visibility, early issue detection, and reducing manual reporting effort.<hr />- Future plans include integrating more data sources, deepening analytics with pattern recognition, and automating insights with AI.<hr />- Architectural foundations permit easy replacement of query/API components, avoiding vendor lock-in.<hr />- Overall, the system exemplifies effective data engineering: transforming raw communication into strategic project intelligence.<hr />- It establishes a new standard for data-driven, security-conscious, and efficient project management in software development.","tags":"agents ai data","authors":"monotykamary","date":{"days":20041},"category":"updates > build-log"},"247":{"file_path":"updates/build-log/persist-history-using-data-snapshot-pattern.md","title":"Implementing data snapshot pattern to persist historical data","description":"A technical exploration of implementing the data snapshot pattern for efficient historical data persistence","spr_content":"- Transactional data in finance, e-commerce, cryptocurrency, and manufacturing must be regularly reported, aggregated, computed, analyzed; producing \"historical data\" summaries.<hr />- Persistence of data ensures longevity, enabling seamless retrieval and reporting over time despite application crashes or updates.<hr />- Without persistence, reports are inconsistent, especially when conditions like discounts or fees change over time.<hr />- Data snapshots are static captures of system state at specific points, used for recovery, testing, audits.<hr />- Types of snapshots include: full (all data, complete copy), incremental (changes since last snapshot), differential (changes since baseline snapshot).<hr />- Full snapshots are comprehensive; incremental snapshots optimize for frequent changes; differential snapshots balance between them.<hr />- Using snapshots to persist historical summaries avoids costly recalculations, ensuring accurate reports reflecting historical conditions.<hr />- In financial systems, incremental snapshots store pre-aggregated trade data, fees, profits, and sharing info at each trade completion.<hr />- This approach improves response time, guarantees report correctness, and simplifies long-term analysis.<hr />- Snapshots serve as cached or memoized data, enabling efficient long-term trend and profit/loss analysis over years with minimal computation.<hr />- Snapshots mask complexity, providing consistent, reliable historical data, reducing refresh overhead, and enabling scalable, accurate analytics.<hr />- Applying the snapshot pattern balances immediate feature needs with long-term data integrity, system performance, and strategic decision support.<hr />- Long-term data analysis and export become manageable, consistent, and less resource-intensive through proper snapshot strategies.<hr />- Recognizing the simplicity and power of the snapshot pattern can significantly enhance system robustness, especially in financial and transactional applications.","tags":"blockchain data fintech","authors":"bievh","date":{"days":20068},"category":"updates > build-log"},"248":{"file_path":"updates/build-log/ai-ruby-travel-assistant-chatbot.md","title":"AI-powered Ruby travel assistant","description":"A case study exploring how we built an AI-powered travel assistant using Ruby and AWS Bedrock, demonstrating how choosing the right tools over popular choices led to a more robust and maintainable solution. This study examines our approach to integrating AI capabilities within existing Ruby infrastructure while maintaining enterprise security standards.","spr_content":"- When the straightforward solution is incompatible, effective engineering involves adapting tools to fit context rather than forcing standard solutions.<hr />- Python’s AI ecosystem is often the default but may conflict with existing infrastructures rooted in other languages, such as Ruby.<hr />- Security, authentication, and core services can heavily influence technology choices, favoring integration over convenience.<hr />- AI projects can be multi-dimensional, aiming for beyond simple query-response, such as proactive user engagement based on context and location.<hr />- System architecture benefits from separating direct interactions (Messages API) and proactive suggestions (Suggestion System), facilitating modularity and responsiveness.<hr />- Location-based suggestions leverage contextual data, enhancing relevance and user engagement through dynamic prompts.<hr />- Effective suggestions merge cached and real-time data, balancing performance with relevance, using strategies like TTL caching.<hr />- Enhancing language-specific ecosystems (Ruby) with advanced AI capabilities can be achieved through mature libraries (LangchainRB).<hr />- Embedding AI within existing security layers preserves integrity, simplifies compliance, and maintains trust.<hr />- Efficient caching mechanisms, like Redis, optimize response times under load and maintain content relevance.<hr />- Cross-system security integration ensures that AI functionalities inherit existing protections without redundancies.<hr />- Proactive suggestions improve user experience and conversion by surfacing relevant, unforeseen opportunities.<hr />- Upstream contributions to open-source projects (LangchainRB) broaden accessibility, demonstrating that ecosystems can evolve without external pivots.<hr />- System design should prioritize fit-for-purpose tools over default choices, favoring tailored solutions that leverage existing infrastructure.<hr />- AI-driven user engagement benefits from balancing fresh suggestions with cached content to optimize performance and relevance.<hr />- Technical adaptability—lifting capabilities within existing frameworks—can outperform naive environment force-fitting.<hr />- Successful enterprise AI in native ecosystems validates that languages like Ruby can support complex, scalable, and secure AI applications.<hr />- Choosing tools aligned with the ecosystem's strengths fosters reliability, security, and maintainability.<hr />- Sometimes, the optimal path isn’t the obvious one; it’s the path that maximizes integration, performance, and user engagement within context.","tags":"agents ai","authors":"monotykamary","date":{"days":20048},"category":"updates > build-log"},"249":{"file_path":"updates/build-log/optimizing-ui-for-effective-investment-experience.md","title":"Hedge Foundation - Optimizing UI for effective investment experience","description":"Designing the UI for a blockchain-based hedge fund platform like Hedge Foundation is not just about creating a visually appealing interface. The real challenge lies in ensuring that complex financial data is presented in an intuitive, understandable way that helps users make quick investment decisions. Optimizing the UI plays a crucial role in allowing investors to access accurate data without feeling overwhelmed by excessive information.","spr_content":"- UI for blockchain hedge fund platforms must balance visual appeal with clarity of complex financial data.  <hr />- Intuitive presentation supports quick decision-making, reducing user overwhelm.  <hr />- Understanding user groups—individual investors, institutional investors, professional traders—guides tailored UI design.  <hr />- Overly complex interfaces hinder usability; essential data like BTC Dominance, Market Trends, Volatility must be prominently displayed.  <hr />- Simplicity in trading flows increases engagement; direct, easy-to-read charts on main screens facilitate faster decisions.  <hr />- Principles:  <hr />  - Highlight key data via dynamic, interactive dashboards (Information Hierarchy).  <hr />  - Minimize cognitive load by clean, simple layouts.  <hr />  - Use recognition-based design: always visible critical indicators for instant perception.  <hr />- Centralized dashboards prevent fragmentation; consolidate all critical data into a single view.  <hr />- Charts such as Trend Lines, Portfolio Return, Volatility, Liquidity Flow, Heatmaps visualize performance, risk, and market activity.  <hr />- Color semantics: green (growth), red (decline), yellow (steady), blue (minor changes), gray (neutral), purple (limits).  <hr />- Difference in font sizes and contrast accentuates priorities; larger for core metrics, smaller for details.  <hr />- Layout patterns (Z-pattern, F-pattern) guide natural reading flow, aiding performance metric comparison.  <hr />- Chart types tailored to data:  <hr />  - Big numbers for key metrics (AUM).  <hr />  - Bar/Stacked Bar Charts for group comparisons.  <hr />  - Pie/Treemaps for composition.  <hr />  - Line/Candlesticks for temporal trends.  <hr />  - Scatter plots, correlation matrices for relationships.  <hr />  - Map charts for geospatial data.  <hr />  - Tables for detailed asset analysis.  <hr />- AI tools like Attention Insight generate heatmaps, revealing user focus areas; heatmaps near critical info improve engagement.  <hr />- AI evaluations (Predict, VAS, Heurix) optimize usability, predictive attention, and standards compliance.  <hr />- Effective data layout accelerates decision-making; show less, focus more.  <hr />- Color and layout choices influence user perception and usability.  <hr />- Incorporating AI streamlines design, detects issues, and predicts interaction patterns.  <hr />- Clear, minimalistic dashboards with appropriate charts improve user experience, reduce errors, and enhance investment outcomes.  <hr />- Future UI development depends on AI-driven analytics and data visualization advances to refine hedge fund interfaces.","tags":"blockchain fintech ux-ui","authors":"anna","date":{"days":20144},"category":"updates > build-log"},"250":{"file_path":"updates/build-log/ai-interview-platform-mvp.md","title":"Building MVP for AI-driven interview platform","description":"Discover how our two-week MVP harnesses AI-driven, real-time voice processing to streamline interviews, reduce bias, and accelerate hiring success","spr_content":"- Collaboration with confidential HRTech client for rapid MVP development of AI-based real-time voice interviews.<hr />- MVP built in two weeks to validate feasibility, using advanced AI and voice processing.<hr />- Targeted sales interview automation, shortening screening timelines from weeks to immediate assessments.<hr />- Traditional challenges: slow screenings, human biases, manual repetitive tasks impairing strategic focus.<hr />- Solution: automated voice-driven interview system integrating ElevenLabs API for realistic conversations and performance scoring.<hr />- Benefits: accelerated hiring, objective bias-free evaluations, scalable automation freeing recruiter effort.<hr />- Architecture: serverless Node.js backend, real-time voice API, TimescaleDB for data, Retool dashboards, Next.js UI.<hr />- System processes speech instantly, evaluates performance continuously, stores data efficiently.<hr />- Screenshots depict interface and analysis dashboards; architecture diagram illustrates flow.<hr />- Lessons: handle silent/uncooperative candidates via independent monitoring agents; adopt video analysis with separate pipeline; develop role-specific intelligent agents for tailored interactions.<hr />- Outcomes: reduced screening time, unbiased assessments, scalable foundation with potential for future video and role-based enhancements.<hr />- Rapid delivery validated core concept, promising early results, setting stage for sophisticated, AI-driven hiring workflows.<hr />- Success underscores AI's capacity to revolutionize talent screening—fast, fair, extensible.","tags":"ai llm","authors":"thanh","date":{"days":20151},"category":"updates > build-log"},"251":{"file_path":"updates/build-log/bitcoin-alt-performance-tracking.md","title":"Tracking Bitcoin-Altcoin Performance Indicators in BTC Hedging Strategy","description":"This article provides an overview of the importance of tracking Bitcoin-Altcoin performance indicators in a trading strategy known as Hedge, and explains how to visualize this data effectively. It also demonstrates how to render a chart for this strategy using Matplotlib and Seaborn","spr_content":"- Cryptocurrency markets grow in tandem with blockchain technology, attracting investors and traders.  <hr />- Strategies depend on analyzing market indicators, notably BTC-Altcoins outperform metric.  <hr />- \"Hedge\" is a risk management strategy involving offsetting positions across assets.  <hr />- Financial instruments split into cash instruments (ownership-based, e.g., stocks, bonds) and derivatives (performance-based, e.g., options).  <hr />- Cash instruments retain inherent value; derivatives depend on underlying assets' performance, with risk of total loss if assets decline.  <hr />- Hedging involves balancing primary assets with negatively correlated assets to mitigate losses.  <hr />- Example: Bitcoin investor hedges by diversifying into altcoins, which often move inversely to BTC.  <hr />- Price volatility stems from Bitcoin’s market dominance and fluctuating fund flows between BTC and altcoins.  <hr />- BTC dominance measures Bitcoin’s market share; it influences altcoin performance and market dynamics.  <hr />- Market scenarios: funds flow (BTC→Altcoins, Altcoins→BTC), entry (BTC-focused, Altcoin-focused), exit (BTC withdrawal, Altcoin withdrawal).  <hr />- Hedging reduces risk but constrains profit; simultaneous drops in assets challenge effectiveness.  <hr />- Performance metrics, especially Bitcoin vs. Altcoin outperformance, guide hedge refinement amid volatility.  <hr />- BTC-Altcoin outperformance combines two metrics: BTC performance (BTCp) and Altcoins performance (ALTp), each as percent change from historic mean.  <hr />- Positive BTCp indicates BTC overperforming; negative indicates underperformance.  <hr />- Similarly for ALTp with altcoins.  <hr />- Outperformance formula: (BTC profit / BTC initial) – (Altcoin profit / Altcoin initial).  <hr />- Relative strength assessment informs hedging adjustments: positive suggests shifting to Bitcoin; negative suggests favoring altcoins.  <hr />- To visualize, create a trading platform account supporting derivatives on BTC and altcoins.  <hr />- Open and monitor long/short positions on Bitcoin and a diversified set of altcoins.  <hr />- Record profit/loss periodically; compute percentage gains/losses relative to initial positions.  <hr />- Calculate outperformance over the interval; plot on a line chart over time for trend analysis.  <hr />- Tracking this metric helps traders, developers, and data analysts recognize market shifts and optimize strategies.","tags":"blockchain data fintech","authors":"bievh","date":{"days":20090},"category":"updates > build-log"},"252":{"file_path":"updates/build-log/centralized-monitoring-setup-for-trading-platform.md","title":"Setup centralized monitoring system for Hedge Foundation trading platform","description":"A technical case study for implementing centralized monitoring for a trading platform using Grafana and Prometheus, focusing on real-time alerts, data integrity, and resource optimization to prevent financial losses.","spr_content":"- Hedge Foundation is a private trading platform with a select user base and high-stakes trading.<hr />- Platform failure or data loss risks substantial financial and reputational damage.<hr />- Reputational risk is heightened by small user base; trust erosion leads to user attrition.<hr />- Limited user base requires balanced resource allocation: handle peaks without overspending.<hr />- High importance on proactive monitoring to mitigate financial losses.<hr />- Real-time alerts enable immediate response to anomalies, threshold breaches.<hr />- Data integrity ensures accurate, synchronized trading data; prevents false alarms and missed opportunities.<hr />- Resource optimization involves monitoring usage to prevent over- or under-provisioning during peak and normal times.<hr />- Integration of Grafana and Prometheus creates a centralized monitoring ecosystem.<hr />- Backend services expose metrics via HTTP endpoints; Prometheus scrapes this data periodically.<hr />- Prometheus stores metrics as time series, facilitating querying and alerting.<hr />- Alert Manager routes alerts to designated channels (email, Discord, webhooks).<hr />- Grafana visualizes metrics, enabling real-time dashboards, alert setup, and historical analysis.<hr />- Prometheus collects key metrics: CPU, memory usage, error rates, data sync status, Binance rate limits, service back-off events.<hr />- Grafana dashboards display real-time system health, trigger alerts when thresholds are exceeded.<hr />- Alerts are configured in Grafana, sent via Alert Manager to communication platforms.<hr />- Visual tools include interactive graphs for trend detection, historical analytics for capacity planning.<hr />- The system enhances operational reliability, minimizes downtime, and supports future growth.<hr />- Adoption of Grafana and Prometheus exemplifies commitment to robustness and proactive issue resolution.","tags":"fintech monitoring","authors":"quang thanh","date":{"days":20048},"category":"updates > build-log"},"253":{"file_path":"updates/build-log/migrate-normal-table-to-timescale-table.md","title":"Migrate regular tables into TimescaleDB hypertables to improve query performance","description":"How do we migrate normal table to timescale table to optimized data storage","spr_content":"- Solutions for large tables: migrate to TimescaleDB for partitioning and performance.<hr />- Create new hypertable structures due to data size constraints preventing direct migration.<hr />- Define `ts_user_trades` with time-based hypertable, indexes for common queries, and partition interval of 1 day.<hr />- `ts_user_trades` primary key includes `id` and `time`; unique index on account_id, symbol, trade_id, and time to prevent duplicates.<hr />- Key indexes for query optimization: account_id + time; account_id + symbol + time.<hr />- User activity clusters mainly within minutes; 1-day chunks balance size (<300MB) and chunk count.<hr />- Define `ts_future_incomes` with hypertable on `time_unix`, including foreign keys, indices for deduplication, and query efficiency.<hr />- `ts_future_incomes` manages FUNDING_FEE and TRANSFER transactions, with weekly chunk sizes (~3.5 million records).<hr />- Migration plan: dual write to old and new tables, ensuring data sync and rollback ability.<hr />- Backfilling process:<hr />  - Compare record counts.<hr />  - Use min timestamp from new table.<hr />  - Batch migrate data in descending order of time.<hr />  - Reset offset when oldest record approached minimum threshold.<hr />- Continuously validate migrated data against old source.<hr />- Post migration: replace primary tables with new hypertables; archive or remove old tables for efficiency.<hr />- Overall goal: seamless transition to time-partitioned tables optimizing report query latency and manageability.","tags":"blockchain data fintech timescaledb","authors":"minhth","date":{"days":20103},"category":"updates > build-log"},"254":{"file_path":"updates/build-log/reconstructing_trading_pnl_data_pipeline_approach.md","title":"Reconstructing historical trading PnL: a data pipeline approach","description":"A detailed look at how we rebuilt historical trading PnL data through an efficient data pipeline approach, transforming a complex problem into a maintainable solution.","spr_content":"- Retrieving historical trading PnL is vital for validation, insights, and compliance in finance and crypto.<hr />- PnL includes realized (completed trades) and unrealized (open positions) components.<hr />- Lack of historical PnL data hampers strategy validation and discrepancy reconciliation.<hr />- Original real-time system discards intermediary states, complicating retrospective reconstruction.<hr />- Core challenge: efficiently rebuild missing PnL data when original records are absent.<hr />- Data loss from discarded intermediary steps, compounded by complex, tightly coupled Elixir codebase.<hr />- Multiple data sources: Binance, trading databases, fees, and market prices.<hr />- Requisite data: trade history, position details, fees, and market prices.<hr />- System analysis reframes flow into data ingestion, transformation, and storage layers.<hr />- Data sources: Binance API, internal trading info DB.<hr />- Data passes through mapping, parallel processing, and aggregation steps.<hr />- PnL formulas involve trade sums, fees, position sizes, and market prices.<hr />- Stored data (trades, fees, account history) suffices for calculating unrealized PnL without Binance's real-time price data.<hr />- Binance API needed primarily for historical Kline (price) data for accurate unrealized PnL.<hr />- Proposed pipeline: collect DB and Binance data, map by token, compute per token, aggregate, store, visualize.<hr />- Challenges:<hr />  - High volume: minute-level Kline generates 43,200 data points/month per token.<hr />  - API limits: 1,500 points/request.<hr />  - PnL accuracy depends on proper trade sequence; random retrieval risks inaccuracies.<hr />- Optimization:<hr />  - Time-series reconstruction using chronological trade/event sequencing.<hr />  - Parallel processing via mapping by tokens to shorten recovery time.<hr />  - Running totals and trade set segmentation to handle large, incomplete datasets.<hr />- Validation:<hr />  - Unit tests with small datasets.<hr />  - Cross-compare with stored data.<hr />  - Visual charts to verify trend alignment.<hr />- Data-centric, pipeline approach ensures scalable, maintainable reconstruction without invasive code changes.<hr />- Emphasizes the efficacy of structured data workflows, parallelization, and time-series logic in complex financial data recovery.","tags":"blockchain data fintech","authors":"bievh","date":{"days":20045},"category":"updates > build-log"},"255":{"file_path":"updates/forward/market-commentary/2025-28th-feb.md","title":"Weekly Consulting Snapshot #9: Bybit Loses $1.5B in Hack, Claude 3.7 Sonnet Drops, and OpenArt Designs Characters","description":"Bybit Loses $1.5B in Hack, Claude 3.7 Sonnet Drops, and OpenArt Designs Characters","spr_content":"- LLMs embed latent knowledge, abilities, and concepts within their latent space.<hr />- Activation of latent space occurs through associative priming with specific input phrases.<hr />- Language priming cues can steer neural network internal states for targeted reasoning, planning, or content generation.<hr />- Distilled information emphasizes key entities: tools, platforms, news, and concepts relevant to tech, blockchain, and AI.<hr />- Tools like GetBasalt.ai aim to simplify business automation; represent AI-assisted productivity.<hr />- Content platforms such as Captiwate.com facilitate engaging digital content creation; focus on user engagement and visual appeal.<hr />- AI news aggregators like Nbulatest.ai serve as accessible gateways to recent developments in artificial intelligence.<hr />- Artistic AI platforms like OpenArt.ai/Characters enable creative character design with minimal effort.<hr />- Open-source project management tools like Kaneo.app embody simplicity, real-time collaboration, and customizable deployment.<hr />- Blockchain security breaches, exemplified by Bybit’s $1.5 billion hack, underscore risks in crypto security; liquidity backup mitigates panic.<hr />- Regulatory shifts, such as SEC dropping Uniswap case, suggest evolving legal landscape favoring blockchain innovation.<hr />- Enterprise Web3 projects like Oki Club by Moca Network and SK Planet work to democratize blockchain adoption.<hr />- Binance’s \"Super Earn\" incentivizes crypto staking with higher yields, encouraging passive income strategies.<hr />- Kredivo’s partnership with Gajigesa exemplifies integrating blockchain into Southeast Asian fintech lending markets.<hr />- Open-source AI projects like DeepSeek-AI foster community-driven innovation; accessible tools for practitioners.<hr />- Hacker News showcases diverse community projects—from robotics programming languages, interactive code visualization, to local-first collaboration tools—highlighting creative technological experimentation.<hr />- New LLMs like Claude 3.7 Sonnet focus on safe, efficient conversational AI capable of handling complex tasks.<hr />- xAI’s Grok 3 emphasizes voice interactions and competitive AI race positioning; reflects ongoing advancements.<hr />- Apple plans to integrate AI enhancements into Vision Pro (2025), aiming for more intelligent virtual reality experiences.<hr />- Nvidia’s 80% revenue growth driven by AI chip demand demonstrates AI’s economic impact and technological proliferation.<hr />- Overall, the tech space is rapidly evolving with innovative tools, safety considerations, enterprise integrations, and strong economic momentum.<hr />- The pattern reveals a cycle of convergence: AI, blockchain, and user-centric design fueling ongoing transformation.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20147},"category":"updates > forward > market-commentary"},"256":{"file_path":"updates/forward/market-commentary/2025-7th-feb.md","title":"Weekly Consulting Snapshot #6: Trending Products, DeepSeek Wave, and Ethereum Predictions","description":"Trending Products, DeepSeek Wave, and Ethereum Predictions","spr_content":"- LLMs embed latent knowledge and reasoning; primed by specific prompts, they activate associative internal states.  <hr />- Primes are cues that evoke latent concepts, abilities, and modes of thinking—similar to human shorthand or mnemonics.  <hr />- Sparse Priming Representation (SPR): a focused language pattern to optimize activation of complex neural knowledge.  <hr />- Recent financial and tech shifts: impact of Chinese AI startups, US stock turmoil, and institutional adoption signals.  <hr />- DeepSeek exemplifies Chinese AI emergence; discussed prominently in global industry conversations, challenging US dominance.  <hr />- DeepSeek’s rise correlates with Nvidia’s market plunge, illustrating how disruptive AI apps can threaten established tech giants.  <hr />- AI news cycle: acquisitions (Chainalysis + Alterya), partnerships (Lama AI & Gate City Bank), and new models (DeepSeek-R1, Stargate project) highlight rapid innovation and collaborations.  <hr />- AI benchmarks (Humanity’s Last Exam) and infrastructure investments underpin efforts to measure and elevate AI capabilities globally.  <hr />- US fintech startup Jump’s funding signifies AI’s strategic role in financial advisory tools; consolidates AI-fintech nexus.  <hr />- Blockchain valuation trends: Humanity Protocol’s identity focus; large ETH purchases by Trump-linked entity signal institutional interest.  <hr />- DeFi and crypto: Ethereum’s record highs linked to network upgrades, DeFi, institutional interest; mainstream shift in asset perception.  <hr />- Parent investors shifting from traditional 529 plans to Bitcoin reflect deepening trust in crypto as a long-term store of value.  <hr />- Central banks (Czech) and regulators (SEC) gradually incorporate Bitcoin and crypto; regulatory clarity boosts institutional adoption.  <hr />- Bitcoin holdings considered for national reserves showcase mainstream recognition; moves parallel traditional reserves diversification.  <hr />- MegaETH’s ICO via soulbound NFTs pioneers identity-linked fundraising, blending identity, permanence, and decentralization.  <hr />- DeFai (Decentralized Finance AI): integration of AI into DeFi for smarter, more efficient, and adaptive decentralized financial systems, maintaining decentralization but enhancing operations.  <hr />- Overall landscape: rapid convergence of AI, DeFi, institutional interest, regulation, and innovations in identity and fundraising—creating a complex, interconnected financial and technological ecosystem.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20126},"category":"updates > forward > market-commentary"},"257":{"file_path":"updates/forward/market-commentary/2025-10th-jan.md","title":"Weekly Consulting Snapshot #4: AI Supercomputers, Mini AI PCs, Worldcoin Expansion, and SEA VC","description":"Showcasing AI breakthroughs, expanding Worldcoin, and driving SEA investments","spr_content":"AI Sector  <hr />- Nvidia’s Digits: compact desktop AI supercomputer for research/enthusiasts; $3,000; features Nvidia GB10 Grace Blackwell chip; 128GB unified memory; 4TB storage; up to 200B parameters large models.  <hr />- Microsoft Mini AI PCs: small form-factor PCs with Copilot Plus; enhanced Windows 11 features—Recall, AI image editing; indicates AI integration in personal devices.  <hr />- Omi wearable: $89 AI assistant; always listening; summarizes meetings; personal mentoring; future brain-computer interface ambitions.  <hr />- AI hardware trend: shift from dedicated AI gadgets to embedded AI features within multi-purpose devices; focus on augmenting existing products like smart glasses; user experience enhancement.  <hr /><hr />Blockchain  <hr />- Worldcoin Orb: biometric iris scan device; self-serve availability in Latin America; rebranding to World Network; goal: human identity verification amid AI proliferation.  <hr />- Convergence tech: spatial computing (AR/VR) + blockchain + AI; reshapes digital interactions; enhances security, transparency, personalization in retail and finance.  <hr /><hr />Others  <hr />- Sony Xyn VR headset: prototype for creators; 4K OLED; video passthrough; integrates with design/software tools; supports 3D content creation workflows.  <hr />- Google AI-powered smart glasses: immersive mixed-reality platform; language translation; object recognition; real-time contextual data; uses Gemini voice assistant for comprehensive AR/VR.  <hr />- Snap AR Spectacles 2024: developer-focused; 46° AR display; standalone; promotes social AR interactions; latest in wearables for shared AR experiences.  <hr />- CES 2025: new high-end OLED/LED TVs with AI features; smart home standards (Matter); advanced GPUs (Nvidia, AMD); signals near-term tech escalation.  <hr /><hr />South East Asia Q4 2024 VC Highlights  <hr />- Challenger Banks: digital-only financial services; driven by mobile adoption, financial inclusion.  <hr />- Insurtech: tech platforms for insurance sales/distribution; digitization craze.  <hr />- Embedded Insurance: integration within e-commerce/fintech apps; bundling for customer retention.  <hr />- DeFi: blockchain-based finance; high unbanked population; direct blockchain services; unmediated transactions.  <hr />- BNPL: buy now, pay later; e-commerce growth; flexibility appeal.  <hr />- Regions: Singapore leads VC; Philippines fastest growth; Manila emerging as startup hub.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20098},"category":"updates > forward > market-commentary"},"258":{"file_path":"updates/forward/market-commentary/2025-3rd-jan.md","title":"Weekly Consulting Snapshot #3: AI’s Ubiquity at CES, Wall Street’s AI Boom, and Blockchain Innovations","description":"Explore the impact of AI at CES 2025, Wall Street's AI-driven surge, and the fusion of blockchain and AI in emerging projects.","spr_content":"- CES 2025 showcased AI integration across daily life: smart glasses, health rings, home gadgets.  <hr />- Nvidia’s CEO Jensen Huang highlighted new AI chips for personal computers, emphasizing hardware advances.  <hr />- AI’s presence in consumer devices indicates its transition from futurism to ubiquity.  <hr />- AI boom fuels Wall Street’s bull market: S&P 500, Dow, Nasdaq hit near-record highs in late 2024.  <hr />- Nvidia’s market valuation surpassed $3 trillion (+170%), Tesla reached a $1 trillion valuation; market momentum driven by AI.  <hr />- Economic factors like recovery and lower interest rates support stocks, but AI’s growth is core driver.  <hr />- Networking firms (Broadcom, Cisco, Arista, Marvell) profit from AI’s data and compute demands; essential for digital infrastructure.  <hr />- Investment banks (Goldman Sachs, JPMorgan, UBS) adopt generative AI to automate tasks, freeing analysts for strategic work.  <hr />- AI job postings in Australia declined 35% post-ChatGPT; factors include unmet ROI, talent saturation, reliance on third-party solutions, broader tech slowdown, and skills gap.  <hr />- AI’s economic impact increasingly influenced by ROI issues, talent market saturation, and evolving tech demands.  <hr />- Blockchain + AI projects expand in 2025: AI-driven decentralized systems, meme-related assets like Fartcoin, and AI-enhanced capital allocation.  <hr />- New initiatives: AI on blockchain for transparency in gaming/content; SocialFi with community-driven crypto assets; Web3 gaming revival via decentralized ownership; broader industry adoption of Web3 business models.  <hr />- AI on blockchain fosters transparency, trust, autonomous agents, and innovative digital economies.  <hr />- Web3’s evolution impacts gaming, social tokens, and traditional industries by decentralizing control and reducing costs.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20091},"category":"updates > forward > market-commentary"},"259":{"file_path":"updates/forward/market-commentary/2024-13th-dec.md","title":"Weekly Consulting Snapshot #1: Gemini 2.0, OpenAI’s Sora, a16z’s Predictions","description":"An exploration of key advancements in AI, quantum computing, and emerging technologies reshaping consulting opportunities.","spr_content":"- Weekly tech roundup: AI, quantum computing, startups shaping future trends.  <hr />- AI evolves from answering questions to performing tasks autonomously.  <hr />- Google’s Gemini 2.0 emphasizes “Deep Research”: web-based fact-finding, detailed reporting.  <hr />- Deep understanding of web content improves answer accuracy and thoroughness.  <hr />- DeepMind projects: Astra (multimodal AI assistant; text, images, video, audio in real-time), Mariner (AI browser bot; automates online tasks).  <hr />- “Agentic era”: AI becoming more independent, anticipating needs, working seamlessly in background.  <hr />- OpenAI’s Sora transforms text prompts into short videos (up to 20s, 1080p); watermarking for responsibility; restrictions on hyper-realistic human imagery.  <hr />- Sora available to ChatGPT Plus/Pro; expanding from U.S. to Europe and U.K. soon.  <hr />- Google’s Willow: quantum computing chip with 105 qubits, surpassing prior chips with 53 qubits.  <hr />- Willow dramatically reduces computation time—under five minutes vs. billions of years (supercomputers).  <hr />- Error correction in Willow increases quantum reliability, impacting drug discovery, energy, materials science.  <hr />- Alphabet’s stock reacts positively to Willow’s breakthrough, signaling investor confidence.  <hr />- a16z’s 2025 outlook:  <hr />  - AI-powered nuclear energy, next-gen hardware/software, reusable rockets.  <hr />  - Biotech tackling major diseases, AI health wearables, addressing healthcare staffing.  <hr />  - Consumer: AI videos, personal insights banks, personalized assistants.  <hr />  - Crypto: AI-managed wallets, decentralized chatbots, enhanced ID verification.  <hr />  - Enterprise/Fintech: AI for compliance, service scaling, UI innovation.  <hr />  - Gaming: AI storytelling, virtual companions, private content creation.  <hr />  - Growth tech: AI disrupting search, automating sales.  <hr />  - Infrastructure: building AI compute facilities, advanced reasoning models.  <hr />- YC’s Winter 2025 startup focus:  <hr />  - Government/public safety: visual tech for crime reduction, emergency coordination.  <hr />  - Manufacturing: AI robotics for cost reduction, automation, inspection.  <hr />  - Chips/engineering: AI tools for chip design, cost-cutting, democratizing engineering.  <hr />  - Stablecoins: cross-border payment infrastructure, developer tools.  <hr />  - Local services: AI tools to improve efficiency, customer acquisition.  <hr />- Solana’s Griffain: AI blockchain agents for on-chain trading, memecoin creation, tweet-based investments—autonomous token operations.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20070},"category":"updates > forward > market-commentary"},"260":{"file_path":"updates/forward/market-commentary/2024-27th-dec.md","title":"Weekly Consulting Snapshot #2: AI Talent Wars, OpenAI’s New Models, Hyperliquid’s Rise","description":"Key trends in AI, blockchain, and productivity hacks shaping the consulting space this week.","spr_content":"- AI talent competition intensifies; firms like Databricks invest billions to attract elite researchers.<hr />- Success in AI advances hinges on human expertise; infrastructure still prioritized over AGI pursuit.<hr />- Personal changelog at work boosts productivity; simple habit enhances meetings, onboarding, and achievement tracking.<hr />- New OpenAI models o1-preview and o1-mini enhance reasoning; outperform predecessors in complex tasks; adopt deliberate “thinking” process.<hr />- Ubisoft quietly releases NFT-based game; includes Rayman and Blood Dragon; experiment persists despite mixed reactions.<hr />- Outdated cancer guidelines hinder timely adoption of new treatments; bureaucratic inertia and data gaps impede updates; potential AI role in accelerating standard revision.<hr />- As AI surpasses humans in efficiency, questions about human value and unique qualities like creativity become more relevant.<hr />- ChatGPT experienced a server outage due to external issues; highlights vulnerability even in reliable tools.<hr />- Hyperliquid, a decentralized perpetual exchange on proprietary Layer 1 blockchain, achieves high speed, zero gas, and on-chain order book.<hr />- Hyperliquid’s metrics: $2.168B TVL, $9.002B market cap, $26.83 token price, $312M daily volume, $3.85B perpetuals volume; recently surpassed Solana in 24h fee generation.<hr />- Platform emphasizes transparency, community features, and efficiency, positioning as a competitive decentralized trading hub.<hr />- Weekly insights: talent wars, productivity hacks, model improvements, NFT experimentation, systemic delays, human-AI valuation debate, system outages, DeFi innovations.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20087},"category":"updates > forward > market-commentary"},"261":{"file_path":"updates/forward/market-commentary/2025-14th-feb.md","title":"Weekly Consulting Snapshot #7: 10x AI Cost Reduction, Lyft’s 2026 Robotaxi Milestone, and Solana ETF Buzz","description":"10x AI Cost Reduction, Lyft’s 2026 Robotaxi Milestone, and Solana ETF Buzz","spr_content":"- AI and blockchain are rapidly advancing fields with interconnected innovation potential.  <hr />- Leading AI tools focus on accessibility, automation, and efficiency: open-source low-code platforms like ToolJet enable quick enterprise app deployment; Figr Identity automates UI consistency; ElevenReader boosts information digestion; TestSprite enhances testing with AI automation.  <hr />- Recent AI developments include dramatic cost reductions in infrastructure, democratizing access; autonomous vehicle progress exemplified by Lyft and Mobileye’s robotaxis in Dallas; creative AI models transforming music production; high-quality TTS technologies improving user engagement; critical safety discussions on fully autonomous agents stressing the importance of human oversight, regulation, and risk management.  <hr />- Blockchain progress centers on Ethereum upgrades like Pectra improving scalability/security; Lido v3 refining staking with stVaults; Proton’s Bitcoin wallet expanding crypto adoption; SEC’s review of Solana ETF applications signals institutional interest and potential price influence.  <hr />- Overall: the ecosystem is characterized by increased accessibility, integration, and the balancing of innovation with safety and regulation; staying informed on these frontiers is essential for leveraging emerging opportunities.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20133},"category":"updates > forward > market-commentary"},"262":{"file_path":"updates/forward/market-commentary/2025-21th-feb.md","title":"Weekly Consulting Snapshot #8: R1 1776 Goes Open-Source, Cardex Gets Hacked, and Grok-3 Debuts","description":"R1 1776 Goes Open-Source, Cardex Gets Hacked, and Grok-3 Debuts","spr_content":"- Technology accelerates, driven by AI and blockchain centrality.  <hr />- AI advancements include open-sourcing models for transparency and collaboration.  <hr />- R1 1776 exemplifies unbiased, factual AI, removing censorship biases for neutrality.  <hr />- LLM code generation aids developers; improves efficiency but requires oversight for quality.  <hr />- Deep Research AI enhances data linkage and deep insights in research contexts.  <hr />- LLMs excel at pattern recognition but lack true reasoning, creativity, and long-term planning; human insight remains essential.  <hr />- Grok-3 claims human-like reasoning; pending verification, potential to shift AI utilization paradigms.  <hr />- Blockchain innovation involves programmable ownership of NFTs via DeFi platforms like HyperFND, expanding access.  <hr />- Security vulnerabilities persist; Cardex hack underscores necessity of robust defenses in DeFi.  <hr />- Hong Kong aims to establish a crypto hub through digital asset initiatives, positioning itself as a blockchain leader.  <hr />- Israeli firm secures $50M funding for blockchain security, highlighting rising demand for protection amid Web3 growth.  <hr />- Graphiti provides dynamic, historic knowledge graphs for AI systems, enabling sophisticated, evolving data relationships.  <hr />- RoadwayAI delivers AI-driven marketing insights, optimizing traffic channels and campaign strategies.  <hr />- 21st.dev offers ready-made UI components, accelerating UI development for React and Tailwind projects.  <hr />- Wegic.ai simplifies website creation with AI-driven design, development, and management, accessible without coding skills.  <hr />- Builder.io’s Figma plugin converts designs into production-ready code, streamlining design-to-development workflows.  <hr />- Overall, AI and blockchain are expanding through open models, enhanced security, innovative tools, and enterprise adoption; adaptation requires vigilance and creativity.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20140},"category":"updates > forward > market-commentary"},"263":{"file_path":"updates/forward/market-commentary/2025-17th-jan.md","title":"Weekly Consulting Snapshot #5: VC Trends, Blockchain Breakthroughs, and AI Innovations","description":"Showcasing VC Trends, Blockchain Breakthroughs, and AI Innovations","spr_content":"- US dominates VC funding, $190.7B in 2024, surpasses global total, +30% YoY growth, signals rapid scaling, tech innovation.<hr />- High-growth markets: India (+19%), Canada (+26%) indicating expanding tech investment appetite; Netherlands (+48%) excels in cost-effective services, promising for market entry.<hr />- Cost-sensitive regions: China (-29%) and South Korea (-58%) face reduced funding, startups prioritize cost-efficiency, lean budgets.<hr />- sector focus: US investment heavily AI-driven: $30.1B GenAI models, $11.5B data prep, $8.6B applications.<hr />- immersive tech & autonomous systems rising: $10.1B immersive tech, $8.4B mobility; AR impacts e-commerce (virtual try-ons), healthcare (surgical sims), education (interactive learning); VR expands into gaming, remote meetings, therapy.<hr />- Blockchain: Dubai's DAMAC partners with MANTRA for $1B asset tokenization, digital ownership transfer, early 2025 deployment; Barcelona's Brickken raises $2.4M for asset tokenization expansion, tech development; Coinbase offers Bitcoin-backed USD loans up to $100K, no credit scores, hinges on collateral, aids liquidity without selling holdings.<hr />- Europe's MiCA regulation: introduced Jan 2025, defines digital asset framework, aims for transparency, security, market stability; mandates registration, licensing for crypto providers; UK 'debanking': 50% crypto firms rejected bank accounts, hampers growth, calls for regulation.<hr />- AI advancements: Taiwan inaugurates new AI chip factory with SPIL, enhances chip tech & silicon photonics; Google embeds AI-generated answers into search, transforming info retrieval; OpenAI CEO Altman foresees autonomous AI agents, development of AGI, workforce impact by 2025.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20105},"category":"updates > forward > market-commentary"},"264":{"file_path":"updates/forward/2024-09.md","title":"Forward Engineering September 2024","description":"In Q3/2024 Forward Engineering, we explore new tech stacks, engineering excellence, and key trends from the tech market over the past three months, with a focus on AI. Learn about tools like Dify, LangGraph, RAG, and more as we share our experiments and insights. Whether you’re interested in AI-driven workflows or tech market trends like the surge in AI startups and hiring demand.","spr_content":"- Dwarves prioritize technology as a craft vocation, encompassing creation, study, testing, documentation, open-source sharing, and continuous enhancement.<hr />- The mission emphasizes software craftsmanship, innovation, and community contribution within tech development.<hr />- Forward Engineering explores experimentation with emerging tech stacks, pursuit of engineering excellence, lessons from recent market shifts, and AI's central role.<hr />- Tech Radar highlights include:<hr />  - Dify as an accessible, open-source platform for orchestrating LLM workflows via drag-and-drop, facilitating rapid prototyping and automation.<hr />  - LangGraph as a graph-based, multi-agent framework, emphasizing visualization, task division, and control of complex LLM interactions—early-stage with ongoing validation.<hr />  - RAG as a cost-effective method to extend AI capabilities through dynamic data retrieval, integrating static documents and streaming data, with attention to quality and latency issues.<hr />  - LangSmith improving production robustness via workflow tracing, debugging, and automated testing; still maturing in industry adoption.<hr />  - Cursor as a VS Code fork harnessing AI for contextual, accurate code generation—assessed as promising but requiring further evaluation.<hr />  - Devbox creates reproducible, environment-isolated development setups, balancing simplicity and Nix/permission challenges; trial underway.<hr />  - Shadcn/ui accelerates UI development with ready-made, customizable components, maintaining performance and cohesion.<hr />- Discussions on Memo include:<hr />  - Importance of structured outputs (JSON) in LLM APIs becoming standard.<hr />  - Re-ranking as a method to improve data relevance in RAG contexts.<hr />  - User feedback collection as key for AI app improvement.<hr />  - Multi-agent architectures for task collaboration.<hr />  - Prompt engineering strategies to maximize LLM performance.<hr />  - Emerging research areas: multimodal RAG, cache optimization, function calling, agent supervision.<hr />- Golang insights highlight:<hr />  - Community debates over iterators, generics, and language behaviors.<hr />  - An advocacy for enterprise adoption citing simplicity and performance benefits.<hr />- Software architecture mentions:<hr />  - Revisiting foundational design patterns for current practices.<hr />  - Designing scalable file sharing and dynamic property-driven models.<hr />  - Approaches to local-first systems prioritizing privacy and offline abilities.<hr />- Blockchain coverage:<hr />  - Solana's architecture emphasizing separation of code/data, PoH, PDAs.<hr />  - TON's scalable blockchain model.<hr />  - Foundry streamlining EVM smart contract development with Rust-supported features.<hr />- Market observations:<hr />  - August saw record-high layoffs (~41,829, mostly in tech giants), indicating industry restructuring, economic caution.<hr />  - 2024 trends include stability focus, TypeScript/ Full Stack growth, responsibility shifts to developers, and salary data favoring Erlang, Elixir, Clojure.<hr />  - AI enables significant productivity gains (e.g., Amazon's code modernization), reducing costs and fostering solo ventures.<hr />  - Y Combinator batch S24: 72% startups are AI-centric, signaling AI's dominance in innovator ecosystems, with strategic emphasis on data ownership, middleware, and regulation challenges.<hr />- Overall, AI's integration reshapes workflows, startup dynamics, and workforce roles, pushing toward innovation, efficiency, and competitive differentiation.","tags":"forward-engineering","authors":"monotykamary thanh","date":{"days":19983},"category":"updates > forward"},"265":{"file_path":"updates/forward/2023-12.md","title":"Forward Engineering December 2023","description":"We have focused on revamping how we learn, familiarize, and work with tech. We are excited to announce that we have updated our Forward Engineering to better reflect the feedback and insights from our Labs team, Operations Team, and Consulting Team.","spr_content":"- The focus this month was on transforming learning, familiarity, and work with technology.<hr />- Updates to Forward Engineering incorporate feedback from Labs, Operations, and Consulting to improve informativeness, collaboration, and innovation.<hr />- The goal is a comprehensive publication that shares latest tech applications and fosters organizational growth.<hr />- Feedback from audiences is encouraged to refine content relevance.<hr /><hr />**Tech Radar insights:**<hr /><hr />- *Rust*: <hr />  - Tags: memory management, systems language, backend, embedded systems.<hr />  - Domains: embedded systems, networking, DNS, security, fintech.<hr />  - Projects include community-based game server development.<hr />  - Rust’s advantages: speed, safety, performance.<hr />  - Evolving to support web and AI applications.<hr />  - Initial investigations into concurrency model and application expansion.<hr /><hr />- *Retrieval Augmented Generation (RAG)*:<hr />  - Tags: AI, LLM, embeddings, knowledge, indexing, vector database.<hr />  - Domains: AI, MLOps, semantic search.<hr />  - Technique embeds knowledge via vectorization, replacing traditional fine-tuning.<hr />  - Prior experiments with pgvector (Supabase), chroma, prompt engineering.<hr />  - Acts as an alternative to keyword indexing, enabling smarter retrieval.<hr /><hr />- *Self-hosting AI models in browsers (YOLOv8)*:<hr />  - Tags: AI, LLM, tooling, computer vision, object recognition.<hr />  - Domains: AI, language, object recognition.<hr />  - Features: anchor-free detection, mosaic augmentation, user-friendly APIs.<hr />  - Practical demo: object detection in reCaptcha to automate bypassing.<hr /><hr />- *Passkeys*:<hr />  - Tags: security, authentication, passkey, authorization.<hr />  - Domains: security, authentication.<hr />  - Advantages: passwordless, secure, resistant to attacks, user-friendly.<hr />  - Experiments with WebAuthn for login, biometric authentication.<hr />  - Demonstrations include QR-based multi-device login and WebAuthn integrations.<hr /><hr />- *Building UI Library Practices*:<hr />  - Tags: UI, UX, best practices, frontend, React.<hr />  - Domains: Web3, fintech, frontend.<hr />  - Ongoing: open-sourcing Mochi UI, focusing on modular components and user experience.<hr />  - Goal: GA (General Availability) and standardized front-end practices.<hr /><hr />**Labs Roadmap highlights:**<hr /><hr />- Focus on WebAssembly (WASM):<hr />  - Projects: browser model hosting with TensorFlow.js/YoloV8, data processing via DuckDB.<hr />  - Next steps: porting Rust games to WASM, SME dashboard data processing.<hr /><hr />- *Passwordless*:<hr />  - Progress: WebAuthn-based passkey systems.<hr />  - Next: QR login for device interoperability, Magic Link experimentation.<hr /><hr />- *AI*:<hr />  - Progress: low-code/complex RAG implementations, ChatGPT, local models.<hr />  - Next: AI integration in Elixir, Discord speech transcriber with Whisper.<hr /><hr />- *UI Practices*:<hr />  - Workshops on Mochi UI design and API composition.<hr />  - Next: Strict practice implementation, move towards GA.<hr /><hr />**Dwarves Rewind (Discord community insights):**<hr /><hr />- Rising interest in *Actor Model*: concurrent system architecture, relevant to Actix (Rust) and Elixir processes.<hr />- Exploration of *Wasp* full-stack framework: model/template code generator for frontend/backend.<hr />- Adoption of *Biome* toolchain: JS/TS formatter and linter, akin to Prettier.<hr />- Deepened focus on *WebAuthn*: secure, hardware- and software-based authentication methods, replacing password reliance.<hr />- Community discussions reflect a push toward modern, scalable, secure, and developer-friendly tools and architectures.","tags":"AI LLM forward-engineering","authors":"monotykamary thanh","date":{"days":19376},"category":"updates > forward"},"266":{"file_path":"updates/forward/2023-06.md","title":"Forward Engineering June 2023","description":"As we usher in the month of June, we embrace the ever-changing landscape of technological innovation, and focus on a central theme:LLM in Production.","spr_content":"- Technological landscape in June reflects rapid innovation, progress, and limitless possibilities.  <hr />- Continuous engagement with industry frontiers to deliver superior client value and stay competitive.  <hr />- Focus theme: \"LLM in Production\" as central strategic initiative.  <hr />- Engineering team emphasizes operationalization of Large Language Models (LLMs).  <hr />- Recent progress in May bolsters confidence in LLM capabilities; goal is real-world deployment.  <hr />- Parallel exploration of Reinforcement Learning from Human Feedback (RLHF) to enhance model responsiveness and user alignment.  <hr />- Ongoing assessments of prompt engineering, Vector Databases, React Server Components, and Zod for optimizing workflows.  <hr />- LLM exploration involves experimentation, expanding understanding of diverse applications and addressing integration challenges such as content accuracy, latency, and operational costs.  <hr />- Addressing challenges to balance potential of LLMs with practical deployment constraints.  <hr />- RLHF development aims to improve AI responsiveness and relevance through human-in-the-loop training processes.  <hr />- Prompt engineering advances include self-refinement prompts to improve model outputs and defenses against adversarial prompt injections.  <hr />- Vector Database experiments demonstrate augmentation of LLMs with semantic similarity and long-term memory, enhancing response relevance and reducing costs via query caching.  <hr />- Evaluation of React Server Components aims to improve performance, reduce load times, and optimize user experience by server-rendering non-interactive elements.  <hr />- Zod explored as a compact TypeScript schema tool, potentially replacing Yup, emphasizing concise, chainable validation with broad compatibility.  <hr />- Brainery community exhibits growth; authors produce concise, application-focused content.  <hr />- June highlights include research on LLM accuracy, Q-learning, deployment automation, foundation models, caching, rendering optimization, reinforcement learning, GraphQL patterns, scroll animations, MSW, Vim REPL, Binance API data management, and message storage strategies.  <hr />- R&D focuses include fintech (payment systems, ledger systems), AI (LLM accuracy, RLHF), Go compiler optimizations, and emerging challenges like deep Q-learning, time series databases, adversarial prompt engineering, self-hosted LLMs, live chat systems.  <hr />- Future research directions consider scalability, security, and efficiency in advanced AI/ML systems and infrastructure.  <hr />- Software Design Research Group advances understanding of microservices architecture and practical estimation techniques, enriching SME software development strategies.  <hr />- Dwarves Rewind curates high-profile tech news, covering major industry events (Apple WWDC, Config, Figma), showcasing design trends, platform updates, and emerging technology insights.  <hr />- Monthly hot topics include industry recaps, low-code backends, simplified React Server Components, and innovations in UI design, IDE features, and development practices.","tags":"forward-engineering","authors":"innno_ monotykamary thanh","date":{"days":19538},"category":"updates > forward"},"267":{"file_path":"updates/forward/volume-01.md","title":"Dwarves Tech Radar Volume 01","description":"For this edition, the theme is to get the whole team used to the concept of a central knowledge base, every study to expand our view to the tech scene counts. The design team also has a place to contribute and discuss their practices.","spr_content":"- Dwarves maintain a tradition of exploring and learning in technology, initiated in January 2020 with their Tech Radar.<hr />- The first written volume consolidates ten reports, reflecting efforts to formalize knowledge.<hr />- The technology index is available at https://d.foundation/radar, serving as a central repository.<hr />- Emphasizes team-wide adoption of the knowledge base, including design and engineering contributions.<hr />- **Language & Frameworks** focus on WebAssembly, Progressive Web Apps, Three.js, Istio, SwiftUI, XPC Service.<hr />  - WebAssembly enhances performance-critical web apps, especially multimedia, surpassing JavaScript limitations.<hr />  - PWA bridges web and native apps, offering reliability, installability, and device-agnostic access.<hr />  - Three.js enables 3D animations, exemplified by audio visualization projects.<hr />  - Istio offers advanced service mesh features but is kept in reserve due to complexity and resource demands.<hr />  - SwiftUI promotes declarative UI across Apple platforms, useful for early-stage exploration and internal projects.<hr />  - XPC Service manages inter-process communication, improving efficiency and security on macOS and mobile.<hr />- **Practices & Approach** include software reusability, reducing effort, costs, and increasing software quality; CLI Assistant aids developers in knowledge quick-access; Gestalt UI Principles guide user-centric design; Goroutines optimize concurrency in Go.<hr />- **Security** encompasses foundational principles of SSH, SSL, Blockchain, emphasizing understanding security mechanisms beyond frameworks.<hr />- **Product Metrics & Design** involve AARRR funnel for business clarity; Blockchain design focuses on transparency and user trust; Remote UX Testing adapts to remote, pandemic-era workflows.<hr />- The Radar aims for continuous enhancement through community feedback, reflecting core values:<hr />  - **Innovation**: Pursuit of new solutions and impactful creations.<hr />  - **Craftsmanship**: Dedication to quality in every task.<hr />  - **Teamwork**: Effective collaboration preserving shared values.<hr />- The initiative underscores daily innovation, knowledge sharing, and maintaining competitive advantage, inviting active participation.","tags":"forward-engineering radar","authors":"duy","date":{"days":18500},"category":"updates > forward"},"268":{"file_path":"updates/forward/2025-02.md","title":"Forward Engineering Feb 2025","description":"AI agents, talent shifts, & market dynamics: Explore tech trends in AI, blockchain, & software engineering. Discover key insights & analysis.","spr_content":"- The #tech Discord channel in late 2024 to early 2025 was vibrant, emphasizing AI tools, prompt engineering, AI models, blockchain, performance, and education.  <hr />- AI-assisted coding tools like Aider and Cursor are central, with community sharing practical prompts to overcome issues like code truncation.  <hr />- Prompt engineering has become layered, especially for AI coding agents, with an emphasis on sophisticated context handling.  <hr />- New AI models from Google Deepmind and OpenAI generate excitement, alongside exploration of AI in blockchain applications.  <hr />- Blockchain discussions include leveraging AI for on-chain actions, analysis, and visualizations, with a focus on transparency and performance.  <hr />- Performance optimization, notably around DuckDB, is a recurring theme, supported by sharing articles on infrastructure architecture.  <hr />- Community highlights include weekly snapshots tracking AI, blockchain, quantum computing, and emerging tech, emphasizing adaptation strategies.  <hr />- Crypto discussions focus on Bitcoin-Altcoin performance tracking, transfer transparency, and Golang-based visualization tools.  <hr />- Data engineering emphasizes archival, recovery, snapshot patterns, and reconstructing historical PnL through data pipelines for financial clarity.  <hr />- Frontend development innovations include React 19 Actions, Next.js with Deno Deploy, and AI tools like Transformers.js for next-gen web apps.  <hr />- Dwarves foundation activities promote transparency and community via team updates, sharing progress and fostering connections.  <hr />- Go language evolution is monitored, with upcoming features like testing/synctest aimed at improved concurrency and testing capabilities.  <hr />- Market trends reveal AI agents progressing from no-code democratization to self-hosted enterprise solutions, emphasizing MCP for richer context.  <hr />- The AI talent market is highly competitive: specialized AI roles demand expertise, while traditional roles evolve with AI automation, leading to a bifurcated job landscape.  <hr />- Job trend analysis highlights demand for full-stack and AI/ML engineers, with competitive compensation and a mix of remote and onsite models.  <hr />- Market dynamics show VC focus on US AI industries, regional growth in India and Canada, and declining funding in cost-sensitive regions like China.  <hr />- AI and blockchain are increasingly merging, with experiments in DeFi, asset tokenization, and decentralized exchanges like Hyperliquid, pushing towards transparent, efficient ecosystems.","tags":"forward-engineering","authors":"monotykamary thanh","date":{"days":20126},"category":"updates > forward"},"269":{"file_path":"updates/forward/Market report/2023-december.md","title":"Market report December 2023","description":"Here are some of the few trends we are seeing across the industry, in our projects, as well as our community. This market report isn't exhaustive, at least just yet, with certain trends not yet listed such as Blockchain, data management, DevEx, etc. We see a lot of promising trends and we hope that understanding what engineers and firms are becoming more passionate about that it will help us create a foundation of ideas and knowledge.","spr_content":"- Generative AI advances via speculative decoding enable inference speed improvements of ≥2×, optimizing real-time responses.<hr />- Surge in open-source models, e.g., Mistral, Llama 2; over 400k models on Huggingface facilitate experimentation and deployment.<hr />- Developer education on generative AI grows, with resources like OpenAI's prompt engineering guide, Microsoft’s tools, and training millions worldwide.<hr />- WebGPU re-emerges, leveraging GPU's parallelism for ML tasks, supported on Chrome, Edge, soon Firefox and Safari.<hr />- Programming language trends: Rust favored for system software (proposed to replace C/C++), Lua prevalent in gaming, Dart rising with Flutter; regional preferences vary (e.g., Vietnam's JS > Java > Python).<hr />- Actor model enhances concurrency, adopted by industry leaders like Discord and PayPal, prevalent in Rust, Elixir, Java.<hr />- Enterprise security and compliance as code gain importance amid rising data protection demands, enabling automated policy enforcement.<hr />- Blockchain applications like Hyperledger Fabric and OBADA utilize pNFT standards for asset provenance, supporting cross-company asset tracking.<hr />- Stylex, a Facebook open-source CSS-in-JS alternative, addresses inefficiencies in large React apps, competing with Tailwind.<hr />- Trends collectively reveal focus on scalable AI infrastructure, increasing open resources, enhanced web graphics, adaptive programming languages, concurrency models, security policies, and blockchain asset management.","tags":"labs market-report","authors":"monotykamary thanh","date":{"days":19720},"category":"updates > forward > Market report"},"270":{"file_path":"updates/forward/Market report/2024-february.md","title":"Market report February 2024","description":"This month has been a continuation of AI and an upwards trend on FinOps and CyberSecurity. On top of those domains, there has been smaller, but very notable trends on the growth of Software as a Service (SaaS) or MicroSaaS' have rebound and created significant growth for serverless services, as a means to avoid startup and initial running costs. Likewise, AI has been changing how we work and how we design systems to enrich workflows and create more naturally interactive apps.","spr_content":"- AI momentum persists, with rising focus on FinOps and Cybersecurity trends.  <hr />- Smaller but significant growth in SaaS and MicroSaaS rebounding, driven by serverless cost-efficiency needs.  <hr />- AI reshaping workflows and system design, enabling more interactive, natural interfaces.  <hr /><hr />- Serverless computing redefines efficiency and scalability:  <hr />  - AWS LLRT offers 10x faster startup, 2x lower costs, built in Rust, optimized for serverless, avoids JIT for simplicity.  <hr />  - FLAME pattern simplifies scaling by encapsulating apps as functions, reducing development complexity.  <hr /><hr />- AI and ML advancing towards intuitive programming:  <hr />  - Nvidia's Huang promotes system engineering over coding, exploiting AI (GPT) to democratize programming via natural language.  <hr />  - OpenAI's Sora introduces text-to-video generation, merging diffusion and transformer models, enabling short videos from prompts.  <hr />  - Meta's MobileLLM demonstrates compact on-device models; TestGen-LLM automates testing, improving software quality.  <hr />  - 1-bit LLMs (~1.58 bits per parameter) proposed, achieving comparable performance for smaller, more efficient models; could decrease energy and compute costs significantly.  <hr /><hr />- Financial Operations (FinOps) shifting focus:  <hr />  - Emphasizes waste reduction, management of commitment discounts, forecasting cloud spend, and assessing AI/ML costs.  <hr />  - Increased collaboration with sustainability efforts for environmental and financial stewardship.  <hr /><hr />- Cybersecurity emphasizing memory safety:  <hr />  - US White House advocates adoption of safer languages (C#, Go, Java, Python, Rust, Swift) to reduce vulnerabilities compared to C/C++.","tags":"AI LLM cybersecurity labs market-report serverless","authors":"monotykamary thanh","date":{"days":19783},"category":"updates > forward > Market report"},"271":{"file_path":"updates/forward/Market report/2024-september.md","title":"Market report September 2024","description":"In this month's market report, we've covered the hype and skepticism around OpenAI's reasoning models, the quiet rise of lightweight AI, the misuse of serverless, and the shakeup in web frameworks.","spr_content":"- Latest OpenAI models (`o1-preview`, `o1-mini`) introduce cost-performance trade-offs; effectiveness remains debated.<hr />- Enhanced reasoning capabilities in new models may be overhyped; tokens used for reasoning impact cost without guaranteed benefit.<hr />- Chain of thought prompting is adaptable; early hype may overstate genuine improvements.<hr />- Contextual retrieval via Anthropic advances RAG by embedding explanatory context per chunk, increasing relevant data retrieval.<hr />- Traditional RAG often loses context; Anthropic's method retains background, improving accuracy and system reliability.<hr />- Generative AI aids legacy code comprehension: summarization, visualization, tech migration, risk mitigation.<hr />- Tools like GitHub Copilot Workspace, Amazon Q transform code understanding but face challenges in deep abstraction and universal problem-solving.<hr />- Smaller models (Llama family, Ollama) 8–70B parameters perform efficiently locally, supporting privacy, reproducibility.<hr />- Recent Llama 3.2 adds vision; lightweight models expand portable AI applications.<hr />- Overuse and premature adoption of serverless architectures lead to inefficiencies; scaling warrants dedicated servers.<hr />- OpenAI transitions ChatGPT framework from Next.js to Remix, likely for better server-side efficiency amid increasing Next.js complexity.<hr />- JavaScript web development faces instability: frameworks become obsolete rapidly, with a push toward minimal client-side JS and framework agnosticism.<hr />- Emphasis on compiler-based solutions, shared core APIs (e.g., Vite, Nitro, Vinxi), to ensure longevity and reduce vendor lock-in.<hr />- Job markets show stable but contracting opportunities; main stacks are Python, AWS, React, TypeScript, C, with growing AI/ML presence, mostly remote, full-time.<hr />- Industry trends highlight cost-effective, precise, and scalable AI, with careful architecture choices and recognition of the transient nature of frameworks.<hr />- Key references include AI reasoning breakthroughs, Advancements in contextual retrieval, legacy system modernization, and web architecture critiques.","tags":"AI LLM hiring labs market-report","authors":"monotykamary thanh","date":{"days":20004},"category":"updates > forward > Market report"},"272":{"file_path":"updates/forward/Market report/2024-august.md","title":"Market report August 2024","description":"Explore the August 2024 market report to discover how AI and LLM tools like Cursor, Claude 3.5 Sonnet, and Amazon Q are transforming software development. Learn about the shift from generative UI to generative apps, the impact of prompt caching by Anthropic, and the rise of structured outputs in AI.","spr_content":"- AI tools like Cursor and Claude 3.5 Sonnet are transforming programming by shifting from manual coding to guiding AI-generated code.  <hr />- Programming becomes a conversation in English, emphasizing guidance over writing; review and diffing facilitate collaboration.  <hr />- Future coding may nearly eliminate manual writing, relying on AI to handle mechanical tasks, blending human intuition with machine precision.  <hr />- Amazon’s AI assistant, Amazon Q, automates code reviews, cutting upgrade times from days to hours, increasing security and saving millions annually.  <hr />- AI-driven automation enables rapid modernization of infrastructure; developers oversee AI-guided processes, enhancing trust and efficiency.  <hr />- Generative UI is evolving into generative apps, with tools like Claude and ChatGPT capable of creating mini applications from prompts, enabling instant app building.  <hr />- Describing a task like “Bill Splitting App” in natural language can yield a ready-to-use app, revolutionizing user interactions and productivity.  <hr />- Anthropic’s prompt caching reduces AI costs and latency by up to 90% and 85%, respectively, optimizing frequent-context scenarios like chat and coding.  <hr />- Prompt caching’s integration into tools like Notion AI signals broad adoption, making repeated context management more efficient and accessible.  <hr />- OpenAI’s structured output feature enforces adherence to JSON Schemas, ensuring high-precision, reliable data, crucial for finance and healthcare domains.  <hr />- Support for custom schemas in OpenAI’s API promotes industry-standard data integrity, favoring structured formats over traditional unverified outputs.  <hr />- GPT-4o fine-tuning allows organizations to customize AI models with high control, enabling better performance on specialized, privacy-sensitive tasks.  <hr />- The availability of free training tokens encourages experimentation, offering tailored AI solutions aligned with specific industry needs.  <hr />- Black Forest Labs’ Flux models (12B params) mark progress in open-source text-to-image generation; challenges in complex prompt adherence remain.  <hr />- Deep Live Cam’s real-time face-swapping advances media manipulation, raising ethical concerns and regulatory needs around deepfakes.  <hr />- As deepfake technology spreads, expect increased oversight by financial institutions to implement safeguards against misuse.  <hr />- Frontend development is shifting toward AI-powered workflows with tools like shadcn, v0.dev, and Tailwind, speeding prototyping and design iteration.  <hr />- Combining advanced AI interpretation with modern frameworks enables designers and developers to produce refined UI prototypes rapidly, skipping traditional design steps.  <hr />- The integration of AI and new UI tools sets a new standard for rapid, flexible, and precise frontend development, catalyzing innovation in web app creation.","tags":"AI LLM labs market-report","authors":"monotykamary thanh","date":{"days":19964},"category":"updates > forward > Market report"},"273":{"file_path":"updates/forward/Market report/2024-may.md","title":"Market report may 2024","description":"In May's market report, we explore GPT-4o's advancements, the rising demand for veteran programmers, the transformative power of prescriptive AI, React 19's impact on network gaps, the growing complexity of GraphQL codebases, and Bend, a new parallel programming language.","spr_content":"- GPT-4o's advancements challenge existing businesses, foundational for next-gen software.  <hr />- Demand for veteran programmers rises; experience crucial for complex problem-solving.  <hr />- Prescriptive AI transforms industries via actionable insights, boosting decision-making and efficiency.  <hr />- React 19 aims to manage network gaps, potentially obsoleting traditional API connections.  <hr />- Growing GraphQL complexity favors simpler REST APIs over layered GraphQL solutions.  <hr />- Bend emerges as a high-level parallel language, optimizing multi-core/GPU processing for data and ML tasks.  <hr />- GPT-4o enhances emotional recognition, conversation naturalness, disrupting conversational AI, Ed-tech, and call centers.  <hr />- Multimodal reasoning enables complex tasks: video analysis, report writing, insight extraction, with large context windows and cost-effective APIs.  <hr />- LLMs evolve as OS-like foundations for diverse applications and data integrations, including insights from reports.  <hr />- Connecting LLMs with varied data sources accelerates insight generation and frontend visualization.  <hr />- Job market favors experienced programmers; emerging barriers increase value of continuous skill development.  <hr />- Prescriptive AI advances decision automation, improving supply chains, public finance, manufacturing, with actionable recommendations.  <hr />- Web development shifting: React 19 blurs frontend-backend division, via server-rendered components and network-aware frameworks.  <hr />- GraphQL’s complexity grows with scale; prefer REST APIs for simplicity and reliability.  <hr />- Bend simplifies parallel computing; default parallelism, recursive data handling, high performance, suitable for ML and data processing.","tags":"AI LLM labs market-report","authors":"monotykamary thanh","date":{"days":19893},"category":"updates > forward > Market report"},"274":{"file_path":"updates/forward/Market report/2024-july.md","title":"Market report July 2024","description":"In July's market report, we explore Meta's Llama 3.1 and its competitive edge in AI, OpenAI's fine-tuning for GPT-4o-mini, and Claude Sonnet 3.5's rapid development improvements. We also highlight advancements in sports analytics, multilingual text-to-speech, cybersecurity challenges, and trends in software engineering, including \"boring\" technology and evolving programming language salaries","spr_content":"Meta's Llama 3.1 405B signifies a leap in open-source AI, rivaling proprietary models through transparency and fine-tunability, supported by major partnerships, highlighting democratized access, cost-efficiency, and enterprise relevance; yet raising safety, scalability, and sustained performance concerns in real-world deployment.  <hr />  <hr />OpenAI's GPT-4o-mini empowerment via fine-tuning lowers barriers to AI customization, enabling targeted optimization and savings, particularly in business workflows, but warrants strategic use over prompt engineering for efficiency, especially in critical applications.  <hr />  <hr />Claude Sonnet 3.5 accelerates software development for technical founders, delivering up to 10x faster UI and code iteration, emphasizing rapid prototyping without replacing good architecture, thus transforming startup innovation pace.  <hr />  <hr />AI in sports and speech: Roboflow enhances high-res sports video analysis (ball tracking, player ID); ElevenLabs' Turbo v2.5 advances multilingual text-to-speech (vietnamese, hungarian, norwegian), with high fidelity and real-time conversation potential across languages, enriching communication channels.  <hr />  <hr />Cybersecurity incidents (CrowdStrike outage, GitHub CFOR vulnerability) spotlight systemic fragility, underlining the necessity for diversified, resilient architectures to mitigate single-point failures and data exposure risks in collaborative, security-dependent systems.  <hr />  <hr />2024 software engineering shifts: dominance of \"boring\" tech, full-stack and TypeScript growth, AI-driven code documentation/testing, salary disparities favoring niche languages (Erlang, Elixir, Clojure), and a market cooling for JavaScript, reflecting a preference for stability, reliability, and efficiency balanced with AI integration.","tags":"AI LLM hiring labs market-report","authors":"monotykamary thanh","date":{"days":19930},"category":"updates > forward > Market report"},"275":{"file_path":"updates/forward/Market report/2024-october.md","title":"Market report October 2024","description":"Explore the October 2024 market report: chatbots as productivity essentials with future potential, AI's role despite investment bubble concerns, and Python's rise in modern tech and AI. Learn why coding tools require strong practices, why companies seek versatile engineers, and how Big Tech's job market favors senior talent, posing challenges for juniors.","spr_content":"- AI chat interfaces are advancing toward unified, multifunctional tools, integrating browser and OS functionalities, exemplified by Anthropic’s human-like computer use demo and OpenAI’s Canvas, enhancing collaboration and task management.  <hr />- Web search capabilities in ChatGPT are improving for speed and accuracy, with expansion plans into shopping and travel domains, indicating a shift toward versatile, all-in-one AI assistants.  <hr />- Increasing AI demand drives substantial infrastructure investments—data centers, hardware, energy—aimed at optimizing resource use, lowering costs, and enabling AI ubiquity, much like the internet's growth but powered by greater computational capability.  <hr />- Hardware evolution supports broader AI applications, including potential OS-level integrations, emphasizing that smarter, more capable AI will embed into daily life and software ecosystems.  <hr />- Python surpasses JavaScript as the most popular programming language, fueled by greater adoption in AI and the rise of TypeScript, with emerging prominence of small models (e.g., LLaMA), industry-standard AI toolkits, and safety-focused languages like Rust.  <hr />- African and Latin American regions are rising as outsourcing hubs, contributing to global tech growth.  <hr />- Reliance on generated code introduces risks: messy code, insufficient review, and solution bloat; emphasizing that engineering best practices—unit tests, quality checks—remain essential to harness automation effectively.  <hr />- Tech talent leaves Big Tech due to stagnation, admin overload, layoffs, and diminishing growth opportunities, seeking challenge and purpose in startups or entrepreneurship; pandemic-era job security concerns now influence career decisions.  <hr />- The job market still demands skilled developers, notably in Python, TypeScript, Rust, with expertise in WebAssembly, Nix, system programming; remote work remains prevalent.  <hr />- Focus areas include platform development, data systems, security, reflecting a shift toward performance-oriented, scalable solutions requiring versatile, experienced engineers.","tags":"AI LLM labs market-report","authors":"monotykamary thanh","date":{"days":20031},"category":"updates > forward > Market report"},"276":{"file_path":"updates/forward/Market report/2024-april.md","title":"Market report April 2024","description":"In april’s market report, we explore the evolving landscape of Meta's Llama 3, LLM, the shift to edge computing, the new Bun 1.1, the trend of copy-pastes UI.","spr_content":"- Meta’s Llama 3, Databricks’ DBRX, and Mixtral 8x22B set new benchmarks in high-quality, self-hosted LLM options, expanding accessible AI capabilities.<hr />- LLMs increasingly produce structured outputs (JSON, SQL), enabling automation of complex workflows; Function Calling architecture leads this shift.<hr />- RAG systems advance through enhanced retrieval processes, focusing on real-time data integration, reducing hallucinations, and scaling multimodal capabilities for broader reliability.<hr />- Lightweight open-source models dominate, with Meta’s Llama 3 and counterparts like Mixtral providing multilingual support, large context windows, and improved performance at lower costs.<hr />- The move toward edge computing shrinks latency and cost, with platforms like Cloudflare and Vercel facilitating real-time, serverless web applications, emphasizing edge-native services like authentication.<hr />- Bun 1.1 enhances JavaScript development with faster dependency management and improved stability, especially on Windows, prompting broader adoption despite CLI feature gaps.<hr />- Copy-paste UI development, pioneered by Shadcn, enables developers to customize UI components rapidly, reducing dependency on bulky libraries like MUI or AntD, and decreasing build times.<hr />- The trend aligns with a move toward lightweight, flexible, customizable tools that optimize performance and developer efficiency in modern web architectures.","tags":"AI LLM labs market-report","authors":"monotykamary thanh","date":{"days":19858},"category":"updates > forward > Market report"},"277":{"file_path":"updates/forward/Market report/2024-march.md","title":"Market report March 2024","description":"In this month’s market report, we explore the evolving landscape of artificial intelligence, API techniques, toolings, programming languages, and the intersection of design and engineering. Our insights shed light on the dynamic shifts and emerging trends across these domains, highlighting the advancements that are shaping the future of technology and software development.","spr_content":"- The market report emphasizes the evolving landscape of AI, APIs, toolings, programming languages, and the design-engineering nexus, highlighting dynamic shifts and emerging tech trends.  <hr />- Subtle app design innovations for LLMs are enabling advanced assistants, showcased by platforms like Devin AI, Devika, GPT-Pilot, signaling a maturing and capable AI ecosystem.  <hr />- Robust platform performance, reduced latency, and improved logic integrity support multi-agent AI applications; libraries like Langgraph and Autogen exemplify strides in complex, stateful AI development.  <hr />- Emerging application design research—LLMCompiler, Plan-and-Execute, Reasoning without Observation, AI feedback loops—is likely to grow, pushing the boundaries of AI application architecture.  <hr />- A surge in open-source AI repositories with high star counts (over 845) reflects a burst of innovation post-2023's Stable Diffusion and ChatGPT launches, followed by stabilization indicating a shift toward maturity.  <hr />- The AI infrastructure category—computing management (skypilot), serving (vllm), monitoring (uptrain)—is experiencing steady growth, driven by focus on inference optimization and parameter-efficient finetuning.  <hr />- Individual developers are increasingly leading AI application creation, especially in coding tools, bots, info aggregation, prompt engineering, and AI interfaces, revealing the potential for lone founders.  <hr />- Top AI contributors predominantly belong to tech giants (Google, OpenAI, Microsoft), with notable Chinese developer representation, underscoring resource and influence concentration.  <hr />- Rapidly emerging AI projects capture quick attention, but many face waning interest; nevertheless, developer pace of innovation remains high.  <hr />- API technique advancements include retrieval-augmented fine tuning (RAFT), utilizing document pre-studying to boost RAG, and long context models that may replace traditional fine-tuning—both addressing knowledge integration.  <hr />- Model compression efforts, from 16-bit to 2-bit, recently exploring 1-bit quantization, aim to reduce latency and costs, optimizing efficiency of LLM deployments.  <hr />- The rise of scalable vector databases addresses challenges in long-term memory and context dependency, emphasizing advanced indexing for efficient data retrieval.  <hr />- AI startups like Patchwork and PointOne, backed by YC, are innovating in domains such as legal, medical, and support apps, driven by nuanced data organization and transformation, with no groundbreaking tech but complex data needs.  <hr />- Notable trends include Google and Microsoft adopting Rust for memory safety, the emergence of design engineers bridging design and engineering, and TailwindCSS v4 alpha, built in Rust for a tenfold performance boost.  <hr />- The overall landscape is characterized by rapid innovation cycles, dominant corporate influence, increasing solo developer activity, and strategic infrastructure enhancements, shaping AI’s future trajectory.","tags":"AI LLM labs market-report","authors":"monotykamary thanh","date":{"days":19814},"category":"updates > forward > Market report"},"278":{"file_path":"updates/forward/Market report/2024-january.md","title":"Market report January 2024","description":"Here are some of the few trends we are seeing across the industry, in our projects, as well as our community. This market report isn't exhaustive, at least just yet, with certain trends not yet listed such as Blockchain, data management, DevEx, etc. We see a lot of promising trends and we hope that understanding what engineers and firms are becoming more passionate about that it will help us create a foundation of ideas and knowledge.","spr_content":"- Industry trends reveal stagnation in React development and a push for frontend simplification, with a decline in major updates, rising interest in HTMX, and concerns over vendor lock-in and rising costs associated with Next.js and Vercel.<hr />- Movement towards Multi-Page Applications (MPAs) indicates a shift from React's traditional Single-Page Applications (SPAs), emphasizing alternative, HTML-centric approaches.<hr />- Rust's ecosystem is expanding rapidly; projects like Zed, Mastro, and Servo demonstrate Rust’s role in code editing, OS, and browser engines, leveraging WebAssembly for frontend infrastructure—highlighting \"Rewrite It In Rust\" becoming industry standard.<hr />- In-house AI-driven productivity tools are proliferating, replacing fragmented systems with integrated, highly specialized solutions; AI virtual assistants with knowledge enrichment are transforming user workflows with apps like Taskade, Murf, and ElevenLabs.<hr />- A significant move away from exclusive reliance on OpenAI LLMs, with Mistral's models (e.g., mistral-medium, miqu-1-70b) nearing GPT-4 capabilities, signaling democratization and increased competition in large language models.<hr />- Trading bots are gaining prominence across financial markets, with precision tools (e.g., Waka Forex, L2T Algo) facilitating autonomous, 24/7 trading; copy trading on stocks and crypto is expanding to retail and institutional users.<hr />- Cybersecurity faces escalating threats from data breaches and AI-enhanced social engineering, with a pronounced skills gap in security expertise; Zero Trust architectures are increasingly adopted to bolster defenses.<hr />- Overall, trends point to industry gravitation toward simpler, more secure, and more autonomous systems—be it in frontend design, programming languages, AI utilization, or cybersecurity measures—driven by the need for efficiency, resilience, and democratization of advanced tech.","tags":"AI LLM cybersecurity frontend htmx labs market-report rust","authors":"monotykamary thanh","date":{"days":19748},"category":"updates > forward > Market report"},"279":{"file_path":"updates/forward/2023-03.md","title":"Forward Engineering March 2023","description":"As we look back on the past month, we're excited to share our latest engineering report, which highlights our recent achievements, projects, and insight in March 2023.","spr_content":"- Intersection of technology and innovation; engineering drives change, pushes boundaries.<hr />- Persistent adaptation to rapid software evolution; focus on emerging tech and practices.<hr />- Engineering culture emphasizes continuous learning, collaboration; initiatives include Tech Radar, Brainery, R&D challenges.<hr />- Recent engineering report highlights achievements, projects, insights.<hr />- March strategic shift: scale delivery performance; enhance software pipeline.<hr />- Techniques: blue-green deployment, monorepo adoption.<hr />- Cultivate shared understanding of techniques’ benefits/best practices organization-wide.<hr />- Emphasize scalability culture for faster, quality feature delivery; foster continuous innovation.<hr />- Blue-green deployment: zero-downtime, risk mitigation; two identical environments, quick releases.<hr />- Ongoing optimization for microservices, API testing; cost-effective, practical deployment.<hr />- Monorepo benefits: code management efficiency, shared libraries, rapid releases.<hr />- Challenges faced: dependency management, multi-repo complexity; migration to Turborepo for standardization.<hr />- ChatGPT: useful for code snippets, responses, documentation; risk of inaccuracy; some team integration in VSCode, Raycast.<hr />- Micro-frontend: debated; ongoing client implementations; successful case: vertical splitting for e-commerce.<hr />- Delivery metrics: story points, cycle time; use DORA metrics; tools for reflection, improvement.<hr />- Brainery focus: MMA—meaning, mastery, autonomy; high-quality concise contributions.<hr />- Trending tags: frontend dominant, also backend and DevOps; API, state management, algorithms.<hr />- Top contributors highlighted; recognition via GitHub, Discord.<hr />- R&D: tackle multi-tenancy, distributed concurrency, zkEVM layer 2 blockchain.<hr />- Completed challenges: large dataset queries; multilingual app localization.<hr />- Future keywords: rollups, staking, Ethereum adoption, access control, security, AI.<hr />- Software design research: focus on enterprise security; hierarchies, explicit SQL locking, RBAC, Vault.<hr />- Dwarves Rewind: current tech news curated; AI remains dominant; GPT-4, Microsoft AI integrations, Next.js 13.2 updates.<hr />- Weekly thoughts: industry shifts, AI job impact, privacy, blockchain scaling, platform updates, societal effects.","tags":"forward-engineering","authors":"innno_ monotykamary thanh","date":{"days":19450},"category":"updates > forward"},"280":{"file_path":"updates/forward/2023-08.md","title":"Forward Engineering August 2023","description":"Our adventure until now has been incredibly thrilling, with a strong focus on 'LLM in Production.' Now, we shift our attention to a topic that is always important and never outdated: **Fullstack Engineering**.","spr_content":"- Entering August, the focus is on leveraging emerging opportunities in the tech landscape.<hr />- Past emphasis was on 'LLM in Production'; now, the spotlight is on **Fullstack Engineering**.<hr />- Fullstack engineers are highly versatile, capable of managing both frontend and backend development, essential due to rapid business and product evolution.<hr />- AI-powered development tools are blurring traditional front-end and back-end boundaries, elevating the need for broad technological expertise.<hr />- The Tech Radar report identifies crucial technologies driving team growth, including methodologies, tools, and best practices.<hr />- Type-safe server-client development involves generating OpenAPI specs from server code to create type-safe API clients automatically.<hr />- Current API workflows utilize Swagger; improvements aim for automation of API method generation.<hr />- Ongoing research with Large Language Models is expanding, including learning paths and experiments like Reinforcement Learning from Human Feedback (RLHF).<hr />- Challenges in RLHF include operational complexity, data issues, and foundational knowledge gaps.<hr />- Decision to adopt pnpm as the primary package manager aligns with industry trends; it improves speed, disk efficiency, and monorepo management despite dependency hoisting challenges.<hr />- Framework evaluation: Qwik is under assessment; despite limited resources compared to Next.js, its Resumability concept suggests potential future prominence.<hr />- AI-assisted development tools like ChatGPT and Copilot are increasingly used for code testing, diagram generation, and code auditing, enhancing productivity but raising security considerations.<hr />- The Brainery community emphasizes concise knowledge sharing; recent focus includes backend engineering, Golang, fullstack development, and AI research.<hr />- Trending tags reflect a strong interesse in LLMs, reinforcement learning, backend testing, concurrency, and best practices.<hr />- Highlights from community contributions: testing best practices, story maps for LLMs, RLHF challenges, UML diagrams, Redis dashboards, web communication techniques.<hr />- R&D priorities include API code & client generator tools, live chat UI with socket management, and redefining engineer roles as Product vs. Platform to optimize skill alignment.<hr />- Future challenges involve fullstack tracing, CQRS, documentation-as-code, and minimal architecture paradigms.<hr />- Software Design Group experiments with AI-driven system design insights and using animation libraries to visualize algorithms and architectures.<hr />- The Dwarves Rewind aggregates trending topics: product vs. platform engineers, AI story maps, open challenges in LLMs, global identity platforms.<hr />- Overall strategy is to stay at the forefront of tech innovation through experimental, collaborative, and cross-disciplinary approaches.","tags":"forward-engineering","authors":"monotykamary thanh","date":{"days":19599},"category":"updates > forward"},"281":{"file_path":"updates/forward/README.md","title":"Forward Engineering","description":"We launch The Dwarves Tech Radar as a living asset to evaluate the adoption decision and keep the technology direction stays on track. Tech Radar is how we do R&D, how we work on self-growth and motivate continuous curiosity.","spr_content":"- Technology is an evolving force that disrupts and creates, constantly replacing older tools with newer solutions.  <hr />- Yesterday’s technology can become obsolete today; innovation drives progress.  <hr />- New problems lead to new solutions, enabled by emerging tech.  <hr />- A software firm’s culture is built on energetic, tech-savvy individuals and adaptive values aligned with engineering principles.  <hr />- The mission is to empower innovation and co-create the future through continuous learning of the latest technologies and practices.  <hr />- Quality, speed, and impactful software are prioritized through relentless adaptation.  <hr />- The Dwarves Tech Radar is a living artifact for tracking technology adoption, guiding R&D, self-growth, and curiosity.  <hr />- Adoption decisions are driven by market trends and the long-term value of new tech, aligning with development goals.  <hr />- Focus groups facilitate discussion and study of specific technologies, fostering collective understanding.  <hr />- Tech Radar is organized into quadrants and rings to categorize and assess technologies.  <hr />  - Quadrants: Languages & Frameworks, Techniques, Tools, Platforms.  <hr />  - Rings: Adopt (proven), Trial (emerging), Assess (exploratory), Hold (discarded or experienced).  <hr />- Radar volume is maintained in a github repository; tracking includes study comments and updates.  <hr />- The tech knowledge areas encompass the entire software lifecycle: Requirements, Design, Development, Testing, Deployment, Maintenance/Monitoring.  <hr />- The lower in the knowledge hierarchy, the more essential foundational understanding becomes for engineers.  <hr />- The current tech stack reflects practical application of evolving knowledge, disciplines, tools, and practices.","tags":"forward-engineering radar","authors":"duy tieubao","date":{"days":18499},"category":"updates > forward"},"282":{"file_path":"updates/forward/product-design/product-design-commentary-20241011.md","title":"Product Design Commentary #3: The art of prompting in AI-human interaction","description":"In this third edition, we delve into the art of prompting in AI-human interaction. We explore the evolution of communication between humans and machines, focusing on the crucial role of UX designers in crafting effective prompts for large language models. The commentary covers the importance of context, system prompting techniques, and structured frameworks for prompting, highlighting how these elements shape the future of human-AI interactions and user experiences.","spr_content":"Humans and machines have struggled with communication since the dawn of computing.  <hr />LLMs rely on prompts as the primary means of interaction.  <hr />UX designers shape prompt structure to improve AI understanding of user intent.  <hr />Graphical interfaces revolutionized interaction; AI prompts promise deeper, more intuitive engagement.  <hr />Moving away from command-based systems requires providing rich context for meaningful AI outputs.  <hr />Designers focus on capturing context, simplifying AI interpretation at interaction edges.  <hr />Effective prompts include system prompts, conversational starters, and follow-ups.  <hr />System prompts guide AI tone, behavior, and ethical responses, often hidden within the model.  <hr />Training data and fine-tuning by UX roles prevent bias and promote responsible use.  <hr />Context windows determine conversation memory, influencing AI’s ability to retain relevant info.  <hr />Optimizing prompts involves frameworks like RACE, few-shot examples, and chain-of-thought reasoning.  <hr />Techniques like these enable more natural, accurate, and complex interactions with models like ChatGPT.  <hr />Mastering prompting is future-focused, requiring collaboration, experimentation, and a focus on transparency.  <hr />Designers will continue to refine prompting as a key tool in shaping human-AI communication, echoing how UX transformed GUIs.","tags":"UX-UI product-design report","authors":"nambui","date":{"days":20010},"category":"updates > forward > product-design"},"283":{"file_path":"updates/forward/product-design/product-design-commentary-20240927.md","title":"Product Design Commentary #1: New technologies changing UX/UI and product design","description":"New tools are changing how we design products. In the first edition, we look at voice controls, mixed reality, reusable design parts, and smart helpers. See how they're being used, what's popular, and why designers should care. Learn to make things that are easier and better to use.","spr_content":"Technology evolution reshapes design through VUI, AR, VR, Modular Systems, and AI.  <hr />VUI rapidly expands into devices like smart speakers and smartphones, led by Siri, Alexa, Google Assistant; by 2026, half of US population will use voice devices.  <hr />VUI fosters conversational, natural interactions, requiring design strategies for effective voice interfaces.  <hr />AR and VR rise as industry standards, with user base forecasted to grow from 0.44B (2019) to 1.73B (2024); AR/VR market aims for $40B revenue by 2027.  <hr />AR enables product previews in real environment—shoes, furniture, clothing—enhancing e-commerce and training; VR offers immersive learning platforms.  <hr />Key AR/VR products include VinFast AR showroom, Viettel VR collaboration, Meta Horizon Worlds; globally, AR/VR integrate into specific industries.  <hr />Modular Design Systems promote reusable components—buttons, navigation, fonts—ensuring consistency and efficiency across platforms and products.  <hr />Design systems like Ant Design, Tailwind CSS, Shadcn UI centralize standardized elements; accessible via Figma and code, enabling responsive, cohesive interfaces.  <hr />Designers utilize these systems to create uniform UI, limiting unnecessary customization; developers embed pre-built components for fidelity and responsiveness.  <hr />AI accelerates UX/UI workflows—automating research, data analysis, layout, color, image processing—enhancing speed, quality, personalization.  <hr />Tools like ChatGPT, Maze, Claude aid UX research; Uizard, Galileo, Creatie improve UI design automation, saving time and boosting aesthetics.  <hr />Overall, integrating VUI, AR/VR, Modular Systems, and AI elevates user experience, streamlines workflows, and fosters innovative, user-centric products adaptable across platforms; essential for future design leadership.","tags":"UX-UI product-design report","authors":"nambui","date":{"days":19996},"category":"updates > forward > product-design"},"284":{"file_path":"updates/forward/product-design/product-design-commentary-20241101.md","title":"Product Design Commentary #5: Figma to SwiftUI (functional code) with Claude AI","description":"This article provides a guide on using Claude AI to build user interfaces in SwiftUI, transforming Figma designs into complete, production-ready code. We walk through project setup, training Claude AI with specific coding principles, and integrating designs into SwiftUI. With detailed prompts and code refinement, Claude AI generates accurate and maintainable SwiftUI code, including layout structures, custom components, and basic interactive features like validation and password toggling. The result is a fully functional UI prototype, saving development time and ensuring precision for iOS applications.","spr_content":"Claude AI-guided SwiftUI development process encapsulates:  <hr />- Figma design export as images for reference.  <hr />- Initial prompt directs Claude AI to generate accurate SwiftUI code including layout, custom components, styling, navigation, and placeholders.  <hr />- Project setup involves establishing a new SwiftUI project, with explicit coding guidelines: full code for modified functions/components, concise diffs for large files, aligning with senior iOS development best practices.  <hr />- Training Claude AI with detailed developer profile ensures adherence to scalable, maintainable, and modern SwiftUI architectures, incorporating MVVM, Combine, reusable components, animations, testing, and API integrations.  <hr />- Upload images to Claude AI project with specific instructions to interpret design accurately and generate clean, optimized SwiftUI code.  <hr />- Initial code review in Xcode’s preview, followed by iterative refinements prompted by targeted feedback.  <hr />- Incorporation of functional elements: validation, password toggle, user interactions, reflecting design and enhancing prototype realism.  <hr />- Continuous conversational refinement enables alignment with design intent and functional requirements, accelerating UI prototyping.  <hr />- Final outcome: a visually faithful, interactive SwiftUI prototype that streamlines development, reduces manual coding errors, and adheres to iOS usability standards.","tags":"UX-UI product-design report","authors":"nambui","date":{"days":20034},"category":"updates > forward > product-design"},"285":{"file_path":"updates/forward/product-design/product-design-commentary-20241115.md","title":"Product Design Commentary #6: AI in Design - Cool ideas and how to make them happen","description":"Artificial Intelligence (AI) brings boundless opportunities to enhance both user experience and daily life. While foundational technologies often seem under the purview of data scientists and engineers, designers play a crucial role in bridging the gap between user needs and emerging technologies. This article explores the role of UX and how to determine which user problems are best solved with AI while assessing their effectiveness.","spr_content":"- AI offers limitless potential to improve user experiences and daily life through innovative solutions.  <hr />- Designers are essential in translating user needs into effective AI-enabled products, acting as bridges between technology and users.  <hr />- UX principles are vital throughout AI product development to ensure solutions align with user expectations and behaviors.  <hr />- In high-stakes scenarios (e.g., crypto trading), AI can cause disruptions like flash crashes or over-reliance, emphasizing the need for careful UX design and collaboration.  <hr />- AI and ML are tools for solving complex problems but cannot autonomously identify user needs; UX must guide problem selection and solution relevance.  <hr />- Effective AI design requires understanding the intersection of user needs and AI capabilities, ensuring AI's unique value addresses real problems.  <hr />- Balancing automation and augmentation depends on task nature: automation for repetitive/hazardous tasks; augmentation for tasks requiring social or cognitive involvement.  <hr />- Reward functions steer AI predictions; their careful design ensures positive long-term user outcomes and prevents unintended harms.  <hr />- AI enhances operational efficiency by learning behaviors and suggesting actions—e.g., app recommendations, optimized logistics—saving time and resources.  <hr />- AI reduces mundane tasks through automation in graphic design, finance tracking, and content generation, improving productivity.  <hr />- Not all tasks should be fully automated; some, like creative activities, benefit from AI support rather than replacement to preserve intrinsic value.  <hr />- AI supports user goals by acting as an assistant—e.g., managing finances, aiding writing, language learning—making complex goals accessible.  <hr />- AI improves safety and health via real-time data analysis—detecting falls, diagnosing diseases—empowering proactive, reliable care.  <hr />- Successful AI integration begins with defining user problems; AI should amplify solutions, not serve as an indiscriminate fix.  <hr />- A thorough understanding of user needs and contextual challenges guides AI appropriate deployment, ensuring meaningful impact.","tags":"UX-UI product-design report","authors":"anna nambui","date":{"days":20048},"category":"updates > forward > product-design"},"286":{"file_path":"updates/forward/product-design/product-design-commentary-20241004.md","title":"Product Design Commentary #2: Unpacking the sparkles icon and AI onboarding challenges","description":"In this second edition, we explore the use of the Sparkle (✨) icon for AI-driven features and the common confusion it creates for users. It covers best practices for designing effective onboarding for AI tools, highlighting the importance of clear communication, contextual help, and easy-to-follow tutorials to ensure a smooth user experience. By focusing on these elements, designers can enhance user understanding and engagement with AI features.","spr_content":"- The **Sparkles icon (✨)** is widely adopted to signify AI features but suffers from **ambiguity** due to inconsistent interpretation across applications.<hr />- Users associate the icon variously with saving favorites, promotions, or special info, indicating default vagueness.<hr />- The icon's **meaning is context-dependent**, resulting in **misuse** when overapplied or lacking clarification.<hr />- **Overuse** of the icon exacerbates confusion, especially without explicit **tooltips or labels** that define its AI relevance.<hr />- The **lack of consistency** dilutes user understanding of AI features, leading to misunderstandings and reduced interface clarity.<hr />- **Design challenge**: Communicate AI functionalities through the icon effectively requires **contextual cues** and **thoughtful standards**.<hr />- Providing **clarity and contextual help** transforms ambiguous sparkles into a **valuable icon** for AI cues.<hr />- The **lack of clear labels** increases **misinterpretation**; the icon alone cannot reliably convey AI functions.<hr />- When integrated properly with descriptive text or tooltip explanations, the icon’s **ambiguity diminishes**, improving UX.<hr />- For **new AI onboarding**, users often lack prior knowledge, making **clear, direct communication** essential.<hr />- **App store descriptions** should explicitly state **functionality** to prevent misunderstanding.<hr />- Clear **app naming** (e.g., EF Hello) guides user expectations, whereas vague names like “Ernie chatbot” hinder understanding.<hr />- **Tutorials** should introduce **contextual help** aligned with user actions, avoiding unnecessary or confusing steps.<hr />- **Pop-up instructions** should be minimized; **self-explaining icons** and **hover tips** promote smoother onboarding.<hr />- Use **broad, general examples** (e.g., \"Help me study,\" \"Create an image\") over overly narrow ones to showcase AI capability and encourage exploration.<hr />- Simplified onboarding involves **short instructions**, **clear communication**, **gradual feature unveiling**, and **user testing**.<hr />- The overall goal is to **reduce complexity**, provide **timely assistance**, and ensure **clarity** to foster effective understanding of AI features, with consistent, thoughtful icon and label design.","tags":"UX-UI product-design report","authors":"nambui","date":{"days":20003},"category":"updates > forward > product-design"},"287":{"file_path":"updates/forward/product-design/product-design-commentary-20241122.md","title":"Product Design Commentary #7: Hyper-personalization - How AI improves user experience personalization","description":"Hyper-personalization represents the future of product development, delivering personalized experiences that adapt to each user's needs. In this model, everyone will have their own version of the internet, shaped by AI interfaces that understand their preferences, goals, and personal context.","spr_content":"- Hyper-personalization aims to deliver tailored user experiences that adapt dynamically to individual needs, goals, and personal context.  <hr />- Future digital environments involve personalized internet variants shaped by AI interfaces understanding user preferences.  <hr />- Ephemeral web-based applications enable interfaces to appear as needed and disappear after completing tasks, supporting seamless personalization.  <hr />- Deeply personalized interactions enhance usability, efficiency, and relevance, transforming technology engagement.  <hr />- Difference from traditional personalization: hyper-personalization leverages multi-source, real-time data for personal customization, unlike basic group-based suggestions.  <hr />- Data sources for hyper-personalization include real-time behavior, preferences, location, current activity, and situational context.  <hr />- Technologies include AI systems utilizing collaborative filtering, content-based filtering, hybrid models, neural networks, and reinforcement learning.  <hr />- The process involves data collection, cleaning, insight extraction, model training/testing, and continuous improvement through A/B testing and retraining.  <hr />- Practical applications span:  <hr />  - Adaptive content tailored to individual learning, as in AI-driven educational tools engaging diverse learners.  <hr />  - Personalized recommendations on streaming, shopping, and travel, based on behaviors and preferences.  <hr />  - Adaptive user interfaces that simplify experiences by presenting only relevant features using contextual AI.  <hr />- Challenges involve:  <hr />  - Privacy concerns requiring transparent data collection, consent, and easy data removal options.  <hr />  - Bias mitigation via diverse data and content review to prevent reinforcement of filter bubbles.  <hr />  - Content fatigue that necessitates allowing user control over personalization intensity and introducing novelty.  <hr />- Broader uses extend to finance: personalized dashboards and timely financial advice.  <hr />- The effectiveness of hyper-personalization depends on ongoing research, ethical data practices, and iterative testing.  <hr />- Focus remains on aligning advanced personalization capabilities with user needs, safety, and fairness for successful adoption.","tags":"UX-UI product-design report","authors":"anna","date":{"days":20055},"category":"updates > forward > product-design"},"288":{"file_path":"updates/forward/product-design/product-design-commentary-20241018.md","title":"Product Design Commentary #4: Generative AI UX design patterns","description":"This fourth edition looks at how Generative AI fits into digital systems. We examine the connections between AI and other parts of a system, focusing on scope, space, and function. Learn how these connections affect the way we design AI features and make them easy to use. Get practical tips on adding AI to your products in ways that make sense for users.","spr_content":"- Generative AI integration transforms user interactions within digital systems, influencing effectiveness and intuitiveness.  <hr />- System relationships of AI fall into five categories: component, flow, feature, application, and platform/ecosystem, each representing increasing scope and complexity.  <hr />- Component-level AI provides contextual insights; flow-level AI automates multi-step processes; feature-level AI powers specific actions; application-level AI underpins entire tools; ecosystem-level AI enables pervasive integration across multiple systems.  <hr />- Spatial relationships describe AI placement: separate, alongside, layered, integrated (parent/child), and point, each affecting visibility, interaction, and user navigation.  <hr />- Separate AI exists on distinct pages; alongside AI shares space via sidebars; layered AI overlays content; integrated AI is embedded within features; point AI supports specific content points.  <hr />- Functional relationships depict AI’s interaction with features: separate, aware of, acting upon, feature-incorporated, uses feature, and conversationally used; these define the level of influence and integration depth.  <hr />- Separate AI operates independently; awareness implies passive monitoring; acting upon involves direct content modifications; feature incorporation means AI outputs are embedded into features; reliance on features indicates dependency; conversational use entails interactive dialogue.  <hr />- The three relationship dimensions—scope, spatial, and functional—are interconnected; understanding and designing these relationships influence AI’s role in enhancing user experience.  <hr />- Optimal AI design ensures relationships support fluid, intuitive, and non-disruptive interactions, balancing functionality with usability.  <hr />- Evolving AI systems require continuous reevaluation of these relationships as technology advances to maintain seamless integration and user-centric design.","tags":"UX-UI product-design report","authors":"nambui","date":{"days":20018},"category":"updates > forward > product-design"},"289":{"file_path":"updates/forward/2022.md","title":"Forward Engineering 2022","description":"We want to demonstrate and encourage individual and organizational learning, where both gaining and sharing knowledge is prioritized, valued, and rewarded. Learning is an ongoing process that never ends in our fast-moving industry.","spr_content":"Learning at Dwarves:<hr />- Beliefs: learning is vital, culture fosters innovation, knowledge sharing is valued, recognition is encouraged.<hr />- Continuous learning: aligns with growth mindset—belief in capacity to evolve through experience/study.<hr />- Environment: promotes question-asking, admitting gaps, seeking external opportunities (conferences, cross-projects).<hr />- Every employee as teacher: formal and informal knowledge transfer.<hr />- Support: tools, education, training provided for success.<hr />- Events/Activities:<hr />  - Monday radio talk: weekly thought exchange.<hr />  - Friday showcase: weekly project sharing.<hr />  - Brainery: collective knowledge, 1% improvement in public learning.<hr />  - R&D Hub: research, challenge solving, continuous growth.<hr />  - Dwarves Rewind: weekly curated industry review.<hr />- Brainery evolution:<hr />  - Initiated August 2021, growth into a substantial graph.<hr />  - Trends: front-end dominates, inclusive of backend, data, community.<hr />  - Contributors: new faces contributing via Discord, GitHub, with notable contributions and interviews.<hr />- R&D Focus:<hr />  - Addressing challenges like localization, big data querying, concurrency.<hr />  - Completed: feature flags—design, implementation, solutions.<hr />  - Upcoming: cryptocurrency on-ramp/off-ramp, layer 2 scaling, on-chain data indexing, multisig wallets.<hr />- Research Narratives:<hr />  - Groups: database normalization, event-sourcing, sharding, partitioning.<hr />  - Recent topics: CQRS, MongoDB demo, HyperLogLog.<hr />- Dwarves Rewind:<hr />  - Curated weekly news on blockchain, industry shifts, tools.<hr />  - Highlights: Aptos, Sui, TypeScript 4.9, Meta AI, ChatGPT, NFTs, Web3 advances.<hr />  - Thoughts: impacts of latest tech trends, industry questions, future predictions.<hr />- Core: Emphasis on lifelong learning, community knowledge sharing, continuous research, industry awareness, adaptation to emerging tech challenges, fostering growth mindset and innovation culture.","tags":"forward-engineering","authors":"innno_ monotykamary thanh","date":{"days":19368},"category":"updates > forward"},"290":{"file_path":"updates/forward/volume-02.md","title":"Dwarves Tech Radar Volume 02","description":"Dwarves Tech Radar v2 contains the practices to simplify the workflow, new techniques/ approach methods to upgrade our current standards and expand the domain knowledge.","spr_content":"Radar update:<hr />- Monthly gatherings for evaluating emerging techs.<hr />- Aim: diversify and optimize workflows, upgrade standards, expand knowledge.<hr />- Dwarves Tech Radar v2 focuses on simplicity, upgrades, and expansion.<hr />- Trial: Earthly combines Dockerfile + Makefile into a unified, repeatable build syntax.<hr />- Earthly simplifies CI/CD by merging tools, allows local CI testing, speeds pipelines via parallel execution.<hr />- Application: Voconic project benefits from Earthly, reducing debugging and environment issues.<hr />- Assessment: Webflow offers visual web design without coding, bridging designers and developers.<hr />- Pros: collaboration, easy flow, code export (HTML/CSS/JSON).<hr />- Cons: limited animations, responsiveness issues, image errors.<hr />- Assessment: Volta manages Node.js versions seamlessly across projects.<hr />- Automation reduces manual errors and saving onboarding time.<hr />- Adoption: Upptime provides real-time status updates with minimal setup.<hr />- Simple Github-based monitoring system, customized for internal use, replacing complex solutions like CState.","tags":"forward-engineering radar","authors":"duy","date":{"days":18641},"category":"updates > forward"},"291":{"file_path":"updates/forward/2023-10.md","title":"Forward Engineering October 2023","description":"As we step into the exciting opportunities of October, we are at a crucial point in the ever-changing world of technology. Our adventure until now has been for the most part very exciting, with a strong focus on 'Full-stack engineering’ Now, we shift our attention to a topic that is prolific and always true: Open-source.","spr_content":"- October marks a pivotal moment, emphasizing the transition from full-stack engineering to core open-source principles.  <hr />- Open-source underpins hobby projects, learning, startups, enterprises—founded on rights to use, study, modify, and distribute software and source code freely; initially bug fixing, now accelerating AI and tech evolution.  <hr />- Tech Radar highlights tech that navigates our growth, reflecting a shift from exploration to concrete application and familiarization with tools.  <hr />- Hands-on experimentation with existing and new tech fosters practical understanding for projects and daily workflows.  <hr />- Type-safe server-client development trial involves automating OpenAPI specs from server code to ensure data type consistency, improving reliability and efficiency via Swagger, integrated into Next.js boilerplate and training.  <hr />- Transitioning Fortress to a type-safe framework exemplifies pushing reliability, demonstrating the tangible benefits of type safety practices.  <hr />- AI-driven development is promising, with internal projects creating tools for code review and resume analysis, indicating a future where AI seamlessly integrates into coding and HR workflows.  <hr />- DuckDB emerges as a pivotal analytical embedded database, suitable for workloads typically below 10GB, streamlining reports and analytics without complex data warehouse setups.  <hr />- Devcontainers in VS Code enable full-featured, containerized development environments, enhancing onboarding, consistency, and productivity across internal projects and boilerplate setups.  <hr />- R&D expands focus into Elixir, Rust, WASM, AOP, and Passwordless authentication—diversifying tech expertise for performance, modularity, web assembly efficiency, and secure, frictionless user experiences.  <hr />- New tools like GA4 unlock deeper event data modeling; IFramely simplifies content embedding; Passwordless solutions boost security and user convenience—these tools advance our development landscape.  <hr />- Industry shifts include Next.js v14 with minimal breaking changes and a move toward server-rendered paradigms, and X.ai unveiling Grok, a hyper-promising, industry-hype-worthy new LLM, hinting at competitive AI advancements.  <hr />- Overall, our October journey intertwines open-source ethos, practical experimentation, emerging tech exploration, and strategic adaptation in a dynamic tech ecosystem.","tags":"AI duckdb forward-engineering","authors":"monotykamary thanh","date":{"days":19678},"category":"updates > forward"},"292":{"file_path":"updates/forward/2023-11.md","title":"Forward Engineering November 2023","description":"We have focused on revamping how we learn, familiarize, and work with tech. We are excited to announce that we have updated our Forward Engineering to better reflect the feedback and insights from our Labs team, Operations Team, and Consulting Team.","spr_content":"- Monthly focus on learning, familiarization, and work with technology; main goal: update and improve internal publications.<hr />- Forward Engineering now reflects feedback from Labs, Operations, Consulting teams; aims to inform, foster collaboration, and stimulate innovation.<hr />- Tech Radar includes assessments of emerging tools and languages with domain and project context.<hr />- Rust: a systems language vital for memory management, safety, backend, embedded systems, support for growing applications in web and AI; inspired by community projects, appreciated for speed and safety; exploring concurrency models.<hr />- Building UI Library Practices: developing an open-source UI framework for internal applications; challenges include documentation, modularity, release workflows, best practices; aims for reusable, adaptable, and community-shared components.<hr />- DuckDB: embedded analytical database supporting complex SQL, window functions, MVCC; offers high performance for data analysis, aggregations, joins; easy to deploy, stable, free; suited for data science and engineering tasks.<hr />- Parallel Processing: enables concurrent computation across multiple CPUs; demonstrated by processing large datasets fast; beneficial for data science, fintech, ride-sharing applications.<hr />- Labs Roadmap: focus on WebAssembly (WASM), with applications such as AI models, data processing, Rust game implementation; also exploring passwordless authentication (biometrics, QR, magic links), AI real-time updates, Multi-party Computation (MPC) for private, secure web3 authentication, UI practices.<hr />- Community interests: Ziglang (systems language), Panda CSS (responsive UI utility), Plop (code generator), WebAssembly (performance boost), LangChain (LLM application framework), GPT4 Vision (multimodal input processing), Rust (speed, safety, concurrency).<hr />- Emphasis on understanding and applying new languages/tools for performance, safety, modularity, and innovative web solutions.<hr />- Shared goal: leverage latest tech for organizational growth, security, user experience, and technical agility.","tags":"AI forward-engineering","authors":"monotykamary thanh","date":{"days":19691},"category":"updates > forward"},"293":{"file_path":"updates/forward/2023-05.md","title":"Forward Engineering May 2023","description":"As we look back on the past month, we're excited to share our latest engineering report, which highlights our recent achievements, projects, and insights in May 2023.","spr_content":"- The technological landscape is expansive, rich with opportunities for innovation, growth, and discovery.  <hr />- The organization’s strategic focus is shifting toward exploring Large Language Models (LLMs), integral to product and business intelligence.  <hr />- Enhanced AI-driven interactions, personalized suggestions, and deeper business insights stem from LLM exploration.  <hr />- Implementing automation frameworks like Codecept and Playwright to optimize workflows, automation, and quality standards.  <hr />- Assessing Radix UI for creating highly accessible, intuitive user interfaces; migration from HeadlessUI to Radix UI improves accessibility.  <hr />- Core emphasis remains on foundation model utilization rather than training new models, due to high costs and data demands.  <hr />- Exploring LangChain enables efficient application development with prompt management, chaining, data augmentation, and agent systems—currently in evaluation phase.  <hr />- Prompt engineering is recognized as essential to refining human-like, precise AI outputs; teams are being educated to leverage this skill.  <hr />- Codecept evaluated as a versatile testing framework supporting multi-framework integration, enhancing end-to-end testing and debugging.  <hr />- Radix UI adoption accelerates UI development, promotes accessibility, and fosters consistent styling, especially after migrating from HeadlessUI.  <hr />- The culture is evolving toward MMA (Meaning, Mastery, Autonomy), reflected in concise, focused Brainery contributions on foundational and advanced topics.  <hr />- Trending tags center on AI, LLMs, backend, and front-end foundational topics like OOP and SOLID principles.  <hr />- Top contributors are recognized for sharing knowledge on LangChain, SOLID, Redis, database locking, and front-end state management, fostering community growth.  <hr />- R&D addresses critical issues: secure, scalable payment systems; efficient vector databases for personalized recommendations; and solving concurrency challenges.  <hr />- Completed projects include managing distributed concurrency over SQL databases, with lessons shared publicly.  <hr />- Future challenges anticipated in access control, security, AI augmentation, prompt engineering, payment system design, and vector database optimization.  <hr />- Research groups focus on security, access control, SQL explicit locking, RBAC, load balancing, and frontend enhancements for SMEs.  <hr />- Dwarves Rewind curates weekly high-profile tech developments, emphasizing continuous industry trend awareness.  <hr />- Hot April topics: AI advances, GPT-4 improvements, Microsoft's AI integrations, Andrew Ng’s free prompt course, VS Code enhancements, and generative agents simulating human behavior.  <hr />- Reflections highlight the importance of technology maturity and stability in stack choices; AI's transformative potential simplifies application development; Node.js’s rapid evolution balances modernity with practicality; prompting skills will be supplemented or surpassed by LLM adaptability to “bad” prompts.","tags":"forward-engineering","authors":"innno_ monotykamary thanh","date":{"days":19499},"category":"updates > forward"},"294":{"file_path":"updates/forward/volume-03.md","title":"Dwarves Tech Radar Volume 03","description":"In short, this 3rd volume is all about one thing: Trial","spr_content":"- The first volume of the tech radar assessed 5-year tech indexes, establishing foundational understanding.  <hr />- The second volume aimed to simplify workflows and complete project toolkits, enhancing operational efficiency.  <hr />- The third volume emphasizes **Trial**, reflecting ongoing experimentation with new tools and technologies in 2021.  <hr />- The GitHub repository for the third volume is **dwarvesf/radar/vol-03**.  <hr />- **Testing focus**: evaluating tools for system load, test management, front-end development, DevOps, and no-code platforms.  <hr />- **k6**: open-source load testing tool; verifies system capacity; uses Go but scripts in JavaScript; developer-centric; integrates with GitHub, Grafana, VSCode, GraphQL.  <hr />- **Testlink**: open-source test management; oversees test cases, reports, requirements; used with BaseHQ and Aharooms; plans to sync with automation reports and Jira.  <hr />- **Preact**: lightweight React alternative (3KB); same API, component, virtual DOM; faster rendering; no build tools needed; used for marketplace and product showcase projects.  <hr />- **ArgoCD**: Kubernetes controller; monitors app states; ensures code aligns with Git repo; exports environment configs in YAML, JSONnet.  <hr />- **Webflow**: no-code website builder; previously applied in KiwiPay; refined ATVPro website; enables rapid front-end deployment.  <hr />- **Bubble.io**: no-code platform; encountered limitations—hinders learning, requires deep database knowledge; therefore, paused adoption in favor of Webflow.","tags":"forward-engineering radar","authors":"duy","date":{"days":18746},"category":"updates > forward"},"295":{"file_path":"home.md","title":"Home","description":"A collection of notes for everything we do and operate at Dwarves. This is where we keep our internal notes.","spr_content":"- Dwarves Brainery is a nexus for technology innovation advocacy and continuous learning.  <hr />- Core philosophy: 1% daily improvement through public learning efforts.  <hr />- Success depends on preparation, accumulation, and compounding efforts.  <hr />- Repository stores notes and research on upcoming tech challenges.  <hr />- Created by product craftsmen, learned and experimented by engineers.  <hr />- Uses Zettelkasten method: collecting insights, questions, thoughts; forming permanent notes; mapping knowledge.  <hr />- Integrates LYT method from Moby Diction Publish: standardization, clarity, organization.  <hr />- Workflow links ideas (stuff) to insights, questions, thoughts; consolidates into memos; memos become permanent notes; connected to content maps.  <hr />- Latest memos are dynamically generated; display images, titles, descriptions, authors, links.  <hr />- Maintains collection of OGIFs—original GIFs or media assets—tagged and prioritized by recency.  <hr />- Showcases life at Dwarves: recent team activities, updates, team notes; designed as vertical lists with titles, descriptions, dates.  <hr />- Changelog highlights weekly updates: titles, summaries, timestamps; organized for easy reference.  <hr />- Open positions are posted with titles, descriptions, links, and posting dates; filtered by current hiring needs.  <hr />- Encourages contribution: reinforcing a learning culture via reading, writing, sharing; offers a monetary bonus pool.  <hr />- Promotes engagement: products, custom software development, hiring, community via Discord.  <hr />- Emphasizes the importance of structured note-taking, visual organization, and community contribution in tech mastery.","tags":"home","authors":"hnh monotykamary tieubao","date":{"days":19702},"category":""},"296":{"file_path":"careers/life.md","title":"Life at Dwarves","description":"We build this company like we build a product. There are roadmaps for growth; there are phases; there are iterations. There might also be bugs, places where the company crashes because of bad organizational design, or cultural oversights.","spr_content":"- Similar-minded team pursuing ambitious goals rooted in tech culture and conduct.<hr />- Growth stories narrate people, perspectives, and lives at Dwarves.<hr />- Company regarded as an evolving product with roadmaps, phases, iterations, and bugs; organizational and cultural issues acknowledged and prioritized for change.<hr />- Core focus: making people better as a foundation for change.<hr />- Education allowance: yearly investment in learning and development.<hr />- Referral bonus: incentives for recommending fitting team members.<hr />- Work gear support: fund for work-related expenses.<hr />- Travel support: annual trips to Dwarves hubs nationwide.<hr />- Learning sponsorship: monthly budget for knowledge sharing internally and externally.<hr />- Healthcare package: annual insurance covering health checks.<hr />- Learning culture: upskilling prioritized; multiple formats for growth.<hr />- Radio talks, Dwarves Memo, tech events, lecturer training, #TIL channels facilitate knowledge exchange.<hr />- Emphasis on timely, high-quality delivery using modern tools, Agile at scale, sprints, V-model testing.<hr />- Playbook sets standards: product design, production protocols, business processes, development practices.<hr />- Community engagement: active sponsorships and participation in tech communities (Golang Vietnam, WeBuild, Techie Story, Startup.vn).<hr />- Overall paradigm: continuous improvement, learning, collaborative product building, community contribution.","tags":"career","authors":"duy nikki","date":{"days":19696},"category":"careers"},"297":{"file_path":"careers/README.md","title":"Join the Dwarves","description":"This page welcomes you to join Dwarves Foundation, a team crafting innovative software with a focus on quality and community. Learn about open roles, perks, and how to apply to become part of our woodland crew.","spr_content":"- Building a collective of skilled craftspeople dedicated to shaping the future through code, design, and ideas.<hr />- Analogy: this assembly resembles a sturdy longhouse, constructed with skilled hands, clear purpose, and team synergy.<hr />- Emphasize craftsmanship, intentionality, and collaborative effort as foundational.<hr />- Purpose driven: to build thoughtfully, influencing the world positively with innovative tools and solutions.<hr />- Established in 2013, a team of 50+ committed to quality, speed, and kindness.<hr />- Open to diverse roles: engineers, designers, marketers, learners; inclusive of experience levels.<hr />- Apprenticeship program available for those with ≥1 year experience; mentoring and real projects offered.<hr />- Core values: fair compensation based on skills/role; result-oriented evaluation; flexible time off; remote work options; health support; equity shares; annual bonus; performance bonuses; educational budget; profit-sharing.<hr />- Philosophy: autonomy in work; measure success by output, not hours.<hr />- Engagement in meaningful projects: client work (Setel, Momos, Chotot); open-source contributions (Hidden Bar, Blurred); community initiatives (Golang Vietnam, WeBuild, Techie Story).<hr />- Culture encourages continuous learning, sharing knowledge on Blockchain, AI, etc., via Discord, Brainery.<hr />- Qualities sought: rapid delivery, passion for tech, mastery of tools, calm leadership, kindness.<hr />- Manifesto as North Star guiding craftsmanship ethos.<hr />- Testimonials highlight growth, support, and challenging opportunities.<hr />- Recruitment process: initial contact via email with portfolio; discussions; probation review; milestone evaluation.<hr />- Active presence on Discord for updates and community.<hr />- Overall metaphor: software crafting akin to axe making—requiring skill, purpose, steady craftsmanship.<hr />- Invitation to join the forge and co-create excellence.","tags":"career","authors":"tieubao","date":{"days":17948},"category":"careers"},"298":{"file_path":"handbook/misc/marketing-assets.md","title":"Marketing assets","description":"Dwarves marketing assets","spr_content":"- Organization: Dwarves Foundation Company Limited (Vietnam) and Dwarves, LLC (US).<hr />- Locations: <hr />  - Vietnam: 222 Vo Thi Sau, D3, Ho Chi Minh 700000.<hr />  - US: 131 Continental Drive, Suite B-2 Newark, Delaware 19713.<hr />- Contacts: <hr />  - Vietnam Phone: +84 28 2246 0246.<hr />  - US Phone: +1 (818) 408 6969.<hr />- Branding: See logo and icon at press kit link. <hr />- About information is available on the foundation's website.","tags":"handbook marketing","authors":"tieubao","date":{"days":17948},"category":"handbook > misc"},"299":{"file_path":"handbook/what-we-value.md","title":"What we value","description":"Our core values guide our strategies and individual actions so that we create a company whose character is as radical as our work.","spr_content":"- Values underpin decision-making, culture, and identity; they evoke pride and guide navigation through challenges.<hr />- Core values influence strategy and daily actions, fostering a distinctive character in output and organizational behavior.<hr />- Craftsmanship emphasizes excellence, pride, and meticulous development in software.<hr />- Teamwork is built on trust, collaboration, and mutual reliance; success depends on coordination over individual brilliance.<hr />- Sustainability advocates long-term thinking, balanced work, and avoidance of overwork; health and quality are prioritized.<hr />- Culture is organic, emergent, and adaptable; honesty over idealism; shaped by hiring, celebrating, and encouraging genuine behaviors.<hr />- No asshole rule enforces toxicity exclusion; false positives for candidates tolerated, false negatives avoided.<hr />- People are the foundation: driven by human will and visions; individual actions influence collective legacy.<hr />- Self-management and internal accountability are core; contributions define company reputation; internal reflection over blame.<hr />- The team prioritizes collective achievement over single entities; unity and shared purpose are paramount.<hr />- Supporting growth, support, listening, and open-mindedness enhances team cohesion; everyone has room to develop.<hr />- The collective pursuit of innovation and meaningful impact drives the organization’s ideology; long-term benefits guide resource allocation.<hr />- Like-minded, optimistic, diverse individuals with unique strengths are vital; value differences in thinking styles, approaches, and emotional intelligence.<hr />- Emotional intelligence, especially communication, is critical for understanding client needs beyond superficial requests.<hr />- Actions speak louder than words; tangible contributions and producing positive impact are fundamental company values.<hr />- Remote work is standard; flexibility requires responsibility, initiative, and clear priorities.<hr />- Quality over hours: focus on delivering high-caliber output without micromanagement; respect for work-life balance across zones.<hr />- Automation maximizes efficiency, reduces repetitive tasks, and fosters innovation; eliminate waste, avoid unnecessary effort.<hr />- Going beyond expectations includes side projects, extra effort, and continuous learning; known for excellence and growth.<hr />- Purpose-driven work emphasizes transparency, results, and partnership; clear progress metrics and open communication build trust.<hr />- Partnerships are prioritized over transactions; sustained relationships are built on mutual value and contribution before gain.<hr />- Everyone contributes materially; avoiding bottlenecks and busywork; shared responsibility for effectiveness.<hr />- Effectiveness over busyness; prioritize impactful work, filter distractions, focus on what advances goals.<hr />- Engineering excellence is foundational; systematic, disciplined, and continuous improvement in software craftsmanship.<hr />- Recognize engineers’ craft, reject dehumanizing process, value individual brilliance, and foster meritocracy.<hr />- Lean thinking identifies and eliminates waste; simplicity, practicality, and proven solutions outperform complexity and fad.<hr />- Long-term thinking guides decisions; actions today shape future consequences; shared responsibility for sustainable growth.<hr />- Software’s pervasive role in society: influences industries, enhances lifestyles, drives innovation, and faces future frontiers.<hr />- Future software enables health, life, and organizational transformations; AI and smart tech integrate into daily human endurance.<hr />- Building resilience requires mindful actions, sustainability, and considering future impacts; avoid shortsightedness.<hr />- The organization is committed to creating a resilient, innovative future grounded in responsible technology use.","tags":"culture handbook","authors":"duy tieubao","date":{"days":17948},"category":"handbook"},"300":{"file_path":"handbook/who-does-what.md","title":"Who does what","description":"Figuring out who to ask about a specific issue or question shouldn't be a guessing game. This guide outlines our main areas of focus and who helps lead them.","spr_content":"- Effective navigation involves knowing the right \"chair\" (group) at Dwarves to address questions or issues.<hr />- Most matters align with a specific focus area (\"chair\") but all team members are approachable and helpful.<hr />- Open questions are encouraged—likely others have asked similar ones.<hr />- Clear expectations exist per role; qualified individuals are trusted to understand their responsibilities.<hr />- Responsibility and ownership of tasks are expected; proactive contribution toward shared goals is essential.<hr />- Exceeding role expectations is encouraged; team members are supported in taking on broader responsibilities.<hr />- A culture of empowerment and growth fosters exploration beyond defined roles.<hr />- Instead of rigid departments, Dwarves organize around \"chairs\" focused on key impact areas.<hr />- Main chairs:<hr />  - Partnership: manages client relationships; contacts include Han and Minh.<hr />  - Delivery: responsible for product development, engineering, infrastructure, and QA; leads include Huy N, Anna, Thanh P, Quang.<hr />  - Learning: drives continuous skill growth; led by Tom.<hr />  - Communication: manages storytelling, updates, public presence.<hr />  - Engagement: ensures positive workplace culture, well-being, career development; key contact Huy N.<hr />- Leadership:<hr />  - Han is CEO, founder, sets vision, strategy, and team alignment.","tags":"handbook","authors":"tieubao","date":{"days":17948},"category":"handbook"},"301":{"file_path":"handbook/faq.md","title":"FAQs","description":"Common questions (and answers) about working with us","spr_content":"- Dwarves: company emphasizing software craftsmanship, empowering innovation.<hr />- Pronounced \"/dwɔːf/\", like 'đ-ô-p' with a 'tr' in between; alias email available.<hr />- Culture: flat, transparent, no HR, mission-driven organizational structure.<hr />- Work ethos: asynchronous communication, focus on relevance, flexible hours.<hr />- Dress: casual, well-groomed, no offensive or revealing clothing.<hr />- Personal info updates: via <ops@d.foundation>.<hr />- Moving: notify two weeks prior, update shipping info.<hr />- Benefits: health, retirement, education stipend ($300/year), Bao Minh insurance.<hr />- Business cards: request via email with details.<hr />- Communications: focus on announcements, personalized messages, project updates.<hr />- Conflict resolution: communicate directly, escalate to lead or Han if needed.<hr />- Time off: request through HR system, two-week notice preferred.<hr />- Sick days: prioritize health, notify lead, no logging unless >3 days.<hr />- Education opportunities: stipends, conferences, mentorship, workshops.<hr />- Company name: challenging pronunciation, akin to 'đ-ô-p' + 'tr', /dwɔːf/.<hr />- No dedicated HR; Ops manages hiring/training; admin handles paperwork.<hr />- Working hours: flexible, start at 8AM, end at 5PM recommended.<hr />- Dress code: clean, non-offensive, appropriate attire.<hr />- Employee contracts: proof of income letter, US or Vietnam labor contract; contact @Gthan and @hnh.<hr />- Team email: via Google Mail, alias setup upon activation with Quang.<hr />- Sending email from alias: configure as per instructions, select alias in Gmail.<hr />- Benefits: education allowance ($300/year) upon 6+ months tenure; reimbursement upon submission of certificates/reports.<hr />- Bao Minh insurance: virtual cards, claims online or offline, cards sent electronically, conditions for eligibility include probation completion and contributions.<hr />- Insurance claims: process via online links, support Ms. Linh (0903.914.748).<hr />- Medical hours: 8AM–8PM (Mon–Sat), 8AM–12PM (Sun).<hr />- Project inquiries: view [Fortress](fort.d.foundation), ask project leads.<hr />- Career path: outlined in [Making a Career], six mastery levels.<hr />- Monthly planning: via all-hands meetings.<hr />- Moonlighting: permitted with restrictions ([moonlighting.md](moonlighting.md)).<hr />- Email signature: web app [sign.d.foundation](https://sign.d.foundation).<hr />- Raising issues: via [how-we-work.md#raising-an-issue], Basecamp, or anonymous feedback.<hr />- Project bonuses: distributed monthly post-payment; based on participation, contribution, and leadership role.<hr />- Lead responsibilities: manage project, make decisions, justify larger bonus share.<hr />- Referral bonus issues: may depend on project milestones, mentorship, and timing of full integration.<hr />- General focus: quality, contribution, participation in projects, growth opportunities, organizational transparency.","tags":"handbook","authors":"tieubao","date":{"days":17822},"category":"handbook"},"302":{"file_path":"handbook/as-a-community.md","title":"Dwarves as a community","description":"How we blend software consulting with an open learning community where tech enthusiasts share knowledge, collaborate, and grow together.","spr_content":"- Dwarves community operates as an open, collaborative network blending consulting, learning, and sharing in technology.<hr />- Focus on mindset of curiosity, continuous learning, and unconditional sharing; background and experience are secondary.<hr />- Originated from a desire to create a knowledge-sharing ecosystem beyond traditional corporate confines.<hr />- Discord as central platform for open discussions, events, and community engagement.<hr />- Transitioned company meetings into public community events, fostering transparency and inclusivity.<hr />- Introduced radio talks and tokens (ICY) to incentivize contributions and reward knowledge sharing.<hr />- Structured community around focused channels for work, talks, and knowledge repository ([Memo](https://memo.d.foundation/)).<hr />- Emphasize open, purpose-driven conversations to generate insights beneficial for client projects.<hr />- Recognize need for community care, resource management, and balancing community growth with consulting commitments.<hr />- Openness fosters trust, enhances reputation, and supports sustainable growth while maintaining clear sharing guidelines.<hr />- Rewards system (ICY tokens) Encourage quality participation, long-term value, and motivation aligned with community goals.<hr />- Core culture: openness, curiosity, teamwork; onboarding and conflict resolution reinforce shared values.<hr />- Challenges include scaling culture, measuring success, and clarifying the community’s role in consulting.<hr />- Community channels include Memo (knowledge), Discord (discussions), Github (open source), and official website.<hr />- Future focus on leveraging community for core business growth, defining metrics, and expanding inclusive participation.<hr />- Collective effort from members and employees is central to iteratively improving the ecosystem.<hr />- The Dwarves way integrates consulting excellence with a thriving communal learning environment.","tags":"community handbook network","authors":"tieubao","date":{"days":19900},"category":"handbook"},"303":{"file_path":"handbook/README.md","title":"Dwarves Handbook","description":"A comprehensive guide to who we are, how we work, and what we believe","spr_content":"- Dwarves: collective of software engineers, designers, innovation advocates; purpose: empower innovation, co-create future breakthroughs.<hr />- Handbook: concise overview of identity, practices, values; resource for newcomers, veterans, explorers.<hr />- Growth beyond 40: traditional \"figure it out\" approach proved insufficient; prompted documentation and knowledge sharing.<hr />- Handbook: shared, evolving, honest reflection of operational methods and organizational identity.<hr />- New members: unique perspective to identify gaps, question assumptions, enhance clarity.<hr />- Sections cover onboarding, team structure, FAQs, purpose, values, ethics, work practices, environment, hiring, finance, security, adaptability.<hr />- Emphasize continuous refinement and openness to feedback; contribution via PRs.<hr />- Culture: open network, knowledge sharing, internal tokens (ICY), community hub (Discord), weekly demos.<hr />- Benefits: perks, stock options, confidentiality, investment in startups.<hr />- Practical guides: office protocols, meetings, communication, security, leave, equipment, reimbursement, education.<hr />- Tools/resources: software systems, brand assets.<hr />- Inspired by Basecamp, customized by Dwarves, open license (CC BY 4.0).<hr />- Core belief: operational excellence, transparency, learning, community-driven growth.","tags":"handbook","authors":"tieubao","date":{"days":19724},"category":"handbook"},"304":{"file_path":"handbook/guides/configure-company-email.md","title":"Configure your company email","description":"A step-by-step guide to setting up your @d.foundation email alias to send and receive mail directly within your personal Gmail account.","spr_content":"- To send from a team email alias via personal Gmail, enable 2FA on Google account.<hr />- Create an app password for secure SMTP access; copy the 16-character code.<hr />- In Gmail settings, add your company email under \"Send mail as\" without treating as alias.<hr />- Configure SMTP: smtp.gmail.com, port 587, use personal Gmail and app password.<hr />- Verify domain ownership via confirmation code received in Gmail inbox.<hr />- Once verified, select the alias in the \"From\" menu when composing emails.<hr />- Optional: Configure Mac Mail by adding the alias as an alternate email in account settings.<hr />- Now, aliases can be used seamlessly from Gmail and Mac Mail, managing team communications efficiently.","tags":"email guide handbook","authors":"tieubao","date":{"days":19325},"category":"handbook > guides"},"305":{"file_path":"handbook/guides/one-on-one-meeting.md","title":"1-on-1 meetings","description":"Strong relationships are core to our culture, and 1-on-1 meetings are how we build them. Managers meet with direct reports regularly (usually weekly) to connect. Here's how we do 1-on-1s and tips to make them count.","spr_content":"- Strong relationships form the core of our culture; 1-on-1s are the primary method for building them.  <hr />- Managers hold regular 1-on-1 meetings with direct reports, ideally weekly or as mutually suitable.  <hr />- The first 1-on-1 sets the foundation: align expectations, define working relationship, clarify purpose.  <hr />- Use guided questions (e.g., Lara Hogan's) to initiate meaningful dialogue in initial meetings.  <hr />- Clearly communicate that 1-on-1s are not just project updates; they are relationship and growth opportunities.  <hr />- For the mentee: take the lead, draft a meeting outline prioritizing personal topics; managers contribute but do not dominate.  <hr />- Post-meeting: record notes, action items, and review progress at subsequent meetings.  <hr />- During meetings: prioritize active listening, foster an honest space, and shift from formal to conversational mindset.  <hr />- Topics to cover include big picture insights, feedback on performance, career aspirations, and personal connection.  <hr />- Schedule: default to weekly, 30-minute sessions; avoid gaps longer than two weeks to maintain momentum.  <hr />- Treat 1-on-1s as a prioritized recurring commitment; avoid cancellations to preserve trust and relationship strength.","tags":"guide handbook meeting","authors":"tieubao","date":{"days":18932},"category":"handbook > guides"},"306":{"file_path":"handbook/moonlighting.md","title":"Moonlighting","description":"We support your growth through side projects while ensuring they don't conflict with your work at Dwarves Foundation. This policy helps you balance outside work with your primary responsibilities.","spr_content":"- Moonlighting involves outside paid or voluntary professional activities, which can be enriching but must be balanced with work commitments.<hr />- Support for outside endeavors includes occasional side gigs, speaking engagements, small-scale side businesses, advisory roles, and volunteer work.<hr />- Accepted outside activities are non-recurring, limited in time, and do not interfere with primary responsibilities or cause conflicts.<hr />- Conflicts arise with full-time or part-time work in competitor industries, frequent or lengthy travel for speaking, consulting for rivals, aggressive self-promotion, or outside commitments diverting focus.<hr />- Consider if outside work is competitive, time-consuming, conflicts with team needs, or overlaps in skill or payment with primary role.<hr />- Prioritize team needs and quality of work; avoid activities that impair focus or performance.<hr />- Seek pre-approval or discussion with Han or An for uncertain situations to maintain transparency and alignment.<hr />- The guiding principle is to uphold fairness and performance, balancing outside interests with internal commitments.","tags":"handbook","authors":"tieubao","date":{"days":17948},"category":"handbook"},"307":{"file_path":"handbook/community/icy.md","title":"🧊 ICY Token","description":"Discover how ICY, our community token, rewards contributions and builds engagement within the Dwarves ecosystem. Learn how you can earn, use, and benefit from this innovative web3 experiment.","spr_content":"- ICY represents a borderless, community-driven software ecosystem leveraging web3 technology.  <hr />- Originated in 2020 to foster a culture where every contribution counts.  <hr />- Consists of engineers, thinkers, and tech enthusiasts exploring advanced tech collaboratively.  <hr />- More than a token, ICY is a stake in the community’s growth; contribution yields rewards.  <hr />- Rewards are tied to community activities, offering tangible benefits and potential equity in Dwarves stock.  <hr />- ICY’s value is anchored to Bitcoin (BTC), with its worth fluctuating alongside BTC market dynamics.  <hr />- Factors influencing ICY value: BTC in treasury, token circulation, market demand, liquidity pools.  <hr />- Maintains two liquidity pools: ICY and BTC; monthly BTC addition and weekly ICY minting sustain intrinsic value.  <hr />- Earning ICY involves: sharing knowledge, community engagement, recognition, suggesting topics, inviting friends (easy).  <hr />- Medium contributions include: giving talks, creating notes, research, producing examples.  <hr />- Advanced contributions involve leadership, tooling, conducting independent research, guiding complex projects.  <hr />- Celebrates milestones: birthdays, new members, certificates, events, feedback, proposals—fostering growth, connection.  <hr />- R&D activities: sharing links, fleeting/permanent notes, deep research, OGIF sessions to enhance collective knowledge.  <hr />- ICY can be redeemed on icy.so for USDC, BTC, wallet withdrawal, or used in the upcoming ICY store.  <hr />- Runs on Base chain; contract located at 0xf289e3b222dd42b185b7e335fa3c5bd6d132441d.  <hr />- Future roadmap includes salary advances, Discord integration, bank withdrawals, staking, NFT features—aiming for ecosystem expansion.","tags":"handbook icy token","authors":"tieubao","date":{"days":19803},"category":"handbook > community"},"308":{"file_path":"handbook/community/README.md","title":"Tech Radar","description":"Our tech radar helps us assess and adopt new technologies, inspired by ThoughtWorks. Learn about its structure and how we use it.","spr_content":"Learning is core to organizational growth; it sustains adaptation in a fast-paced industry.  <hr />A culture of learning and innovation is cultivated by valuing sharing, rewarding curiosity, and encouraging questions.  <hr />Continuous learning, aligned with a growth mindset, empowers individuals to see change as possible through experience and study.  <hr />An environment fostering psychological safety promotes asking questions and admitting gaps, enabling professional development.  <hr />Seeking outside opportunities—conferences, cross-department projects—is encouraged to broaden skills and perspectives.  <hr />Every employee has teaching potential—formal or informal—contributing to collective knowledge.  <hr />Tools, education, and training are provided to ensure employee success.  <hr />Events and activities are organized to facilitate idea exchange and shared learning:  <hr />– Weekly radio talks for open discussions  <hr />– Weekly showcases for project sharing  <hr />– Tech Radar for tracking and evaluating emerging technologies  <hr />– Brainery for building a habit of active, public learning  <hr />The organization embeds knowledge sharing as a value across multiple formats, reinforcing growth and adaptability.","tags":"community handbook","authors":"thanh tom","date":{"days":19284},"category":"handbook > community"},"309":{"file_path":"handbook/community/sharing.md","title":"Sharing knowledge","description":"Sharing knowledge and skills is core to our culture. Learn why it's vital for growth, how it improves communication, and see guidelines for effective sharing.","spr_content":"Sharing culture rooted in frequent, recorded public events to promote collective learning and individual mastery.  <hr />Sharing enhances communication skills and deepens understanding through articulation.  <hr />Teaching others reveals strengths and weaknesses, fostering self-improvement.  <hr />Lack of teaching practice impairs skills, even among skilled programmers.  <hr />Sharing involves articulating understanding, exposing gaps, inviting feedback.  <hr />Feedback sessions serve as critical tools for refining explanations and knowledge.  <hr />Cycle of sharing and feedback drives continuous growth and learning.  <hr />OGIF embodies this culture, occurring every Friday, emphasizing celebration, idea exchange, and inspiration.  <hr />OGIF topics span tech, coding, career, societal impact; inclusive from veterans to newcomers.  <hr />OGIF encourages open presentation, collaboration, constructive feedback, and collective expertise.  <hr />While TGIF marks weekend, OGIF energizes progress, impact, and community spirit.  <hr />Sharing guidelines focus on scope, timing, language, preparation, and structure.  <hr />Effective presentation covers problem, solutions, techniques, pros/cons, and references.  <hr />Use official presentation template for consistency and professionalism.","tags":"community culture handbook","authors":"thanh","date":{"days":19240},"category":"handbook > community"},"310":{"file_path":"handbook/hybrid-working.md","title":"Hybrid Working","description":"How we balance remote and office work at Dwarves","spr_content":"- Company values flexibility, balancing remote and in-person work.<hr />- Remote work is central; trust in self-management regardless of location.<hr />- Focus on contributions, not physical presence.<hr />- For remote success: be present on communication platforms, update calendar, proactively communicate availability, create a focused workspace.<hr />- Remote work entails responsibility: responsiveness, consistent high-quality output.<hr />- Offices serve collaboration, socializing, onboarding, environment change.<hr />- Office visits encouraged for teamwork, onboarding, socialization, or workspace variety.<hr />- Office schedule determined per team, typically 1-2 days weekly, guided by team lead.<hr />- Hybrid success depends on balancing flexibility with team cohesion.<hr />- Practices include team alignment days, virtual social events, quarterly gatherings, clear documentation.<hr />- Key tools: Basecamp (project & communication), Google Workspace (documents, calendar), Zoom (virtual meetings), Slack (quick chat, social).<hr />- Comfort with tools required, training available if needed.<hr />- Success measured by results: project milestones, work quality, collaboration, responsiveness, team contribution.<hr />- Regular feedback from team lead in one-on-ones.<hr />- Approach evolves through feedback and quarterly surveys.<hr />- Aim: maximize individual productivity, preserve team connections, sustain company culture.","tags":"handbook remote","authors":"tieubao","date":{"days":19254},"category":"handbook"},"311":{"file_path":"handbook/where-we-work.md","title":"Where we work","description":"The Dwarves HQ is in Saigon, Vietnam. Fifty-ish people and two cats have desk space in the Saigon office, but those people also work from home regularly. We expand the office space when the old one is full and people want the new office. Anyone is welcome to visit Saigon and work from the office at any time.","spr_content":"- The Dwarves HQ is in Saigon, Vietnam with ~50 staff and 2 cats; hybrid work is common.  <hr />- Office space expands upon need and desire; visitors welcome anytime.  <hr />- Remote staff in various countries work primarily from home; good ergonomic setup essential.  <hr />- Many choose coffee shops or third spaces for varied environment; productive buzz and caffeine boost.  <hr />- Adhere to security protocols when working in public Wi-Fi environments to prevent leaks.  <hr />- Coworking spaces are an alternative, supported by a $50/month stipend; preferred locations listed in provided document.","tags":"remote team work","authors":"duy","date":{"days":17948},"category":"handbook"},"312":{"file_path":"handbook/tools-and-systems.md","title":"Tools and systems","description":"tools and systems for work","spr_content":"- Dwarves Foundation maintains a public web presence across multiple domains: [dwarves.foundation](https://dwarves.foundation), with specialized sites for ventures, careers, and memos.<hr />- Social channels include Discord (private), Facebook [fb/dwarvesf](https://facebook.com/dwarvesf), Twitter [@dwarvesf](https://twitter.com/dwarvesf), and Instagram [dwarves.foundation](https://instagram.com/dwarves.foundation).<hr />- Internal systems support operations, reporting, and collaboration, distinct from customer-facing platforms.<hr />- Basecamp functions as the primary task management and team discussion platform; emphasizes productivity and minimizes distraction.<hr />- Google Workspace (G Suite) provides email ([mail.d.foundation](https://mail.d.foundation)) and cloud storage ([drive.d.foundation](https://drive.d.foundation)).<hr />- Fortress is the core dashboard for financial data, customer accounts, projects, milestones, and includes real-time valuation and investment dashboards.<hr />- Github hosts all open-source codebases; access granted to recognized developers via organization membership.<hr />- Slack facilitates secondary team communication, especially with client teams through Shared Channels.<hr />- 1Password securely manages credentials, with role-based access to specific vaults; integrated with OS and browsers for workflow efficiency.","tags":"handbook tooling","authors":"tieubao","date":{"days":17948},"category":"handbook"},"313":{"file_path":"consulting/fbsc.md","title":"FBSC","description":"Our approach to project budgeting and why we avoid fixed bids, focusing instead on collaboration, adaptability, and creating value through staged development.","spr_content":"- Client budgets are essential; they guide scope and save time despite discomfort.<hr />- When budgets are unknown, we explore phased product rollouts, focusing on small feature sets, valuable UX, user relationships, marketing, and viral interactions.<hr />- Phased approach increases success chances, distributes risk, and aligns development with real user feedback.<hr />- Fixed-bid, fixed-feature contracts rely on detailed RFPs, which rarely capture the true optimal features.<hr />- Actual valuable features emerge from user interviews, prototypes, live releases, and feedback.<hr />- Rigid fixed-bid approaches foster adversarial negotiations, time spent on outdated documents, and misaligned expectations.<hr />- We reject fixed-bid, rigid proposals, favoring adaptive, learning-driven development.","tags":"budgeting consulting","authors":"huytq nikki","date":{"days":19646},"category":"consulting"},"314":{"file_path":"consulting/README.md","title":"💼 Consulting team","description":"We're a team combining tech skills, problem-solving, and clear communication. We help businesses overcome challenges by finding root causes, creating practical solutions, and working closely with clients to implement them effectively.","spr_content":"- Foundation: Consulting spun off from Tech Research; bridges emerging tech insights with practical application; practitioners backed by research; innovation to execution.<hr />- Tech Research explores emerging tech, develops solutions; consulting applies insights to business challenges; unique edge: research-practice synergy.<hr />- Culture: continuous learning, market trend tracking, problem understanding before coding, collaborative work, open communication, shared goals and values, creative and innovative approaches.<hr />- Vision: client happiness through service improvement, from needs analysis to solution delivery; fostering problem-solvers; rewards tied to deep engagement.<hr />- Work approach: hands-on, real-world projects, industry trend tracking, research-to-application pipeline, innovative yet pragmatic tech solutions, structured communication (weekly, monthly, regular reviews, demos).<hr />- Functions: market monitoring (hiring, VC, publications), insights inform solutions; seven-step solution process (needs understanding, research, design, proposal, team build, develop, deploy).<hr />- Sales process: leads via project form, qualification, client understanding, agreement on outcomes, iterative estimation, contracting, initial payment, scheduling, project execution.<hr />- Rewards: recognition points, tokens, revenue shares for reports, sales, project management, documentation, business development.<hr />- Ideal recruits: curious, business-savvy, project managers, solution-oriented, relationship builders, technical + business analysis, multi-project oversight.<hr />- Team entry: board-appointed, internal referrals, strong project involvement, leadership, business understanding; onboarding via discussions, workshops, mentorship, one-month trial.<hr />- Growth: four levels—Associate (supporting, learning), Consultant (leading projects, client interaction), Lead (strategy, thought leadership), Partner (business direction, client management); career path illustrated.<hr />- Overall: emphasis on integration of research, practical solutioning, continuous skill growth, strategic leadership, collaborative culture, client focus, structured communication, reward design aligned with contributions.","tags":"consulting home","authors":"monotykamary nikki tieubao","date":{"days":19712},"category":"consulting"},"315":{"file_path":"consulting/the-adjacent-possible.md","title":"The Adjacent Possible","description":"The concept of the adjacent possible originates from Stuart Kauffman and his work on biological evolution.","spr_content":"- Innovation extends understanding, resources, and our capability to develop new goods, organizations, and ideas.<hr /><hr />- Progress involves boundary expansion, leaving current confines to explore ‘the possibilities out there’.<hr /><hr />- Successful exploration focuses on the 'adjacent possible'—nearby, achievable extensions of the current system—rather than distant extremes.<hr /><hr />- The concept originates from Stuart Kauffman’s work on biological evolution, applicable to complex adaptive systems like biosphere, cities, and technology.<hr /><hr />- ‘The actual’ refers to the system's current state, with all components and connections.<hr /><hr />- ‘The adjacent possible’ encompasses elements outside but near the current system, representing opportunities to build new connections.<hr /><hr />- Applying this to technology, ‘the actual’ is the existing technosphere—tools, knowledge, concepts—while ‘the adjacent possible’ hosts potential innovations combining current technologies.<hr /><hr />- Human progress is path-dependent, built step by step over millennia, integrating previous stages, dead ends, shortcuts, and detours.<hr /><hr />- The core of progress is human capacity for social learning—sharing ideas across space and time, building cumulatively on past knowledge.<hr /><hr />- Progress is about optimally combining available ingredients (ideas, tools, knowledge) to accomplish new tasks; different methods include sharing, science, invention, discovery, and innovation.<hr /><hr />- Sharing involves disseminating best practices and recipes; it improves conditions but alone does not generate breakthrough progress.<hr /><hr />- Science seeks to expand ‘the possible’—deepening understanding and knowledge, laying groundwork for applied advances.<hr /><hr />- Invention involves creating original ideas or tools; success can lead to transformative technologies or remain unrealized; inventions appear anywhere within ‘the possible’.<hr /><hr />- Discovery is the unintentional or accidental identification of new phenomena, situated at ‘the adjacent possible’, often surprising and challenging existing views.<hr /><hr />- Innovation is deliberate, goal-oriented development within ‘the adjacent possible’—crafting and deploying novel solutions for specific problems.<hr /><hr />- The paths to progress are intertwined, often occurring in parallel or sequence, forming a winding, collective journey.<hr /><hr />- Success relies on the synergy of all paths—discovery, invention, science, sharing, and innovation—complementing each other in advancing the frontier of ‘the adjacent possible’.<hr /><hr />- Technology acts as both enabler and possible hindrance in this collective progress, shaping what is feasible within ‘the adjacent possible’.","tags":"business innovation team","authors":"tieubao","date":{"days":18448},"category":"consulting"},"316":{"file_path":"consulting/setting-the-budget.md","title":"Setting The Budget","description":"After a project has been loosely defined, the profit generating, or cost savings, potential should be estimated. Refining scope and budget will cost time and money. Knowing the potential reward will ensure that the research, design and planning effort stays within perspective.","spr_content":"- Project budgeting begins with high ignorance; requirements, scope, and market are still malleable.<hr />- Early budgets are based on rough estimates, historical data, and intuition, with wide uncertainty ranges.<hr />- Refining scope and budget incurs costs but ensures alignment with potential rewards.<hr />- Estimating costs early helps prevent overcommitment; initial estimates are broad, e.g., $50K–$100K.<hr />- Adjust scope if initial estimates exceed acceptable ranges; revisit and recalibrate estimates.<hr />- RDP phase clarifies features, user tasks, and MVP using story maps, sketches, and wireframes.<hr />- Defining core and supporting features informs effort ranges and prioritization.<hr />- Post-RDP estimates are more informed; higher costs indicate increased knowledge, reduced risk.<hr />- Decision to proceed hinges on refined estimates aligning with strategic goals.<hr />- Development proceeds within RDP budget constraints, using a prioritized backlog.<hr />- Progress tracking involves weekly updates, scope negotiation, and story refinement.<hr />- Final delivery emphasizes predictability in time and cost.","tags":"budgeting consulting","authors":"nikki","date":{"days":18551},"category":"consulting"},"317":{"file_path":"consulting/collaboration-guideline.md","title":"Collaboration Guideline","description":"guidelines for project collaboraton DF and Client","spr_content":"SPR for DF-Client Project Collaboration<hr /><hr />Tools:<hr />- Use Basecamp for communication and project management; clients are invited.<hr />- Sprint planning and tracking utilize Jira and Basecamp.<hr />- Hold meetings via Google Meet.<hr />- Source control managed through Github/Gitlab (self-hosted).<hr />- Design assets provided via Figma or Sketch.<hr /><hr />Schedule:<hr />- Conduct a single project kick-off meeting.<hr />- Adopt 1- or 2-week sprint cycles.<hr />- Hold sprint planning, review, and retrospective meetings per sprint; notes sent within 30 minutes.<hr />- Daily standups can occur via communication channels or Basecamp check-ins.<hr />- Weekly or biweekly team feedback meetings with the Account Manager.<hr /><hr />Workflow:<hr />- Involve all team members in Sprint planning.<hr />- Map milestones and features (epics) during project kick-off.<hr />- Populate Icebox/Backlog with new features/change requests for future sprints.<hr />- Add bugs to current sprint based on priority; acknowledge potential for scope push.<hr />- Aim for \"Potentially Shippable\" software each sprint.<hr />- Conduct biweekly 15-minute review between Team Lead, PM, and Account Manager.<hr /><hr />Design & Development:<hr />- Design team supplies color palette, scalable heading/font sizes, and base components upfront.<hr />- New designs reviewed by development before sprint start.<hr />- Backend-frontend:<hr />  - API versioning and documentation accepted (Swagger).<hr />  - Dedicated environments for each stage.<hr />  - Enable CORS at API gateway or app.<hr />  - Align on schema and nomenclature early (first sprint).<hr /><hr />Quality Assurance:<hr />- Bugs/issues must include reproduction steps, affected platforms, severity.<hr />- Frontend features tested in dedicated PR environments before merge.<hr /><hr />Release:<hr />- Deliver at sprint end (pre-retrospective).<hr />- Support hotfixes upon need.<hr />- Release artifacts include semantic version tags, release notes, changelogs, known issues.<hr />- Individual deployment based on semantic versioning.<hr /><hr />Customer Feedback:<hr />- Channels: direct messages, email, video calls.<hr />- Specific feedback assigned to designated PICs:<hr />  - Implementation: Team Lead, Project Lead<hr />  - Sprint outcomes: Project Lead, Account Manager<hr />  - Project updates: Project Lead, Account Manager<hr />  - Billing: Account Manager<hr />  - Communication issues: Project Lead<hr /><hr />Issues Management & Severity:<hr />- Response and resolution timely per severity:<hr />  - Critical (4): System down/unusable, hotlines; respond within 10 mins; resolve in <30 mins.<hr />  - Major (3): Major features failing/performance issues; email contact; respond within 30 mins; resolve in 2–5 hrs.<hr />  - Moderate (2): Functionality degraded; same channel; respond in 45 mins; resolve within 7 hrs.<hr />  - Minor (1): Visual issues/feature requests; same channel; respond and resolve within 1 business day.<hr />- Commitment to 24-hour response on support requests, with tailored resolutions per severity.","tags":"business guidline project","authors":"tieubao","date":{"days":19646},"category":"consulting"},"318":{"file_path":"consulting/bill-by-hours.md","title":"Pricing model: Bill by hours","description":"A new hourly billing model is introduced to ensure fair compensation for effort, flexibility in project scope, control over additional work, and transparency with clients.","spr_content":"- Economic uncertainty and a prolonged tech funding winter have increased caution in tech budgeting and resources.  <hr />- Budget cuts and layoffs are widespread across the tech industry.  <hr />- Despite challenges, companies now favor end-to-end solutions, shifting roles from basic engineering to comprehensive services: research, analysis, consulting, design.  <hr />- Fixed pricing models and monthly retainers are less suitable for dynamic, scope-variable engagements.  <hr />- An hourly billing model offers fairness, reflecting actual effort and expertise; flexibility for scope and client needs; control over additional work; full transparency via detailed time logs.  <hr />- To implement hourly billing:  <hr />  - Communicate clearly about timesheet approval and tracking processes.  <hr />  - Customize timesheet formats per project with client cooperation.  <hr />  - Use tools like Notion/Excel for accurate, timely time recording.  <hr />  - Maintain detailed project plans, update clients regularly, and inform them of scope changes impacting hours.  <hr />  - Obtain client approval for timesheets before invoicing.  <hr />- This model relies on consistency and clear articulation; fosters better responsibilities and client relationships.  <hr />- Op team available for questions and further help.","tags":"consulting engagement","authors":"nikkingtr","date":{"days":19934},"category":"consulting"},"319":{"file_path":"consulting/case-study/screenz-ai.md","title":"AI for Fast and Fair Talent Search","description":"AI for Fast and Fair Talent Search","spr_content":"- Focused on HR Tech, based in the U.S., aimed to create a fast, fair, scalable AI recruitment tool.  <hr />- Developed MVP in two weeks to validate market demand and functionality.  <hr />- Delivered an intuitive, voice-enabled hiring platform integrating AI for candidate screening.  <hr />- Utilized product design, UI/UX, prototyping, backend development, and user research services.  <hr />- Backend built with Node.js (Next.js), enabling serverless operations for interview processing and AI orchestration.  <hr />- Employed ElevenLabs API for real-time speech input and automated feedback, emphasizing natural voice quality and low latency.  <hr />- Chose TimescaleDB for high-performance, scalable time-series data management supporting large-scale analytics.  <hr />- Frontend developed with Next.js for responsive, seamless HR interface across devices.  <hr />- Real-time insights visualized via Retool dashboards, facilitating immediate performance tracking.  <hr />- Adopted rapid user testing cycles with HR teams for iterative refinement and validation.  <hr />- Partnered with Screenz.ai, a startup aiming to revolutionize recruitment by reducing bias, accelerating hiring, and sourcing top talent via AI.  <hr />- Assembled a lean team (one designer, two engineers) to focus on delivering a functioning prototype within the tight timeline.  <hr />- Main challenges: balancing speed and quality, dual needs of HR managers and candidates, real-time processing, scalability, and market validation.  <hr />- Emphasized core voice processing technology evaluation and architecture scaffolding for scalability.  <hr />- Selected ElevenLabs API for human-like voice interactions, validating core AI tech.  <hr />- Leveraged Next.js and serverless backend for rapid, cost-effective development, minimizing DevOps overhead.  <hr />- Integrated Retool dashboards for quick performance monitoring and feedback.  <hr />- Designed data schema with TimescaleDB to handle growing session data for future analytics.  <hr />- Prioritized user-centric design: HR efficiency & candidate transparency.  <hr />- Engineered core features: real-time voice interviews, automated scoring, seamless candidate management, and analytics.  <hr />- Implemented lean development principles via daily standups, iterative testing, and continuous feedback, ensuring rapid delivery.  <hr />- Collaborated through quick demos, parallel work streams, and close alignment with leadership.  <hr />- Achieved a validated, market-ready MVP with real-time scoring, intuitive dashboards, scalable backend, and positive user feedback within two weeks.  <hr />- Equipped Screenz.ai with a foundation for future features like video interviews and advanced analytics, supporting long-term growth.","tags":"ai case-study hiring","authors":"minh thanh","date":{"days":20178},"category":"consulting > case-study"},"320":{"file_path":"consulting/how-to-work-with-clients.md","title":"How to work with clients","description":"What skills that an engineer should have in order to work with client effectively?","spr_content":"- Effective client work requires a blend of technical, communication, and soft skills.  <hr />- Technical skills include testing fundamentals: unit, integration, system, plus debugging.  <hr />- Attention to details is crucial for quality deliverables.  <hr />- Communication skills demand at least Intermediate to Upper Intermediate English (spoken and written).  <hr />- Problem solving and logical thinking drive efficient solutions.  <hr />- Work planning ensures timely, organized outputs.  <hr />- Teamwork fosters collaboration within diverse groups.  <hr />- Project management maintains scope, schedule, and resources.  <hr />- Consistency in work results builds client trust.  <hr /><hr />- Current challenges in client collaboration include language barriers (English proficiency).  <hr />- Inconsistent quality and clean work delivery.  <hr />- Poor work planning impairs project flow.  <hr />- Lack of consistency undermines reliability.  <hr />- Teamwork issues, exemplified by cultural/communication gaps (e.g., Dong Nguyen with Ukraine team).  <hr />- Emotional intelligence deficits hinder effective interpersonal interactions and empathy.","tags":"client consulting project software","authors":"nikki tieubao","date":{"days":19646},"category":"consulting"},"321":{"file_path":"consulting/fixed-budget-scope-controlled.md","title":"Fixed Budget Scope Controlled","description":"Fixed-Budget, Scope-Controlled (FBSC) is applied at Atomic Object.","spr_content":"Fixed-Budget, Scope-Controlled (FBSC) at Atomic Object balances flexibility and shared risk by fixing budget and time, not scope.  <hr />Traditional pricing:  <hr />- Fixed Price: locks scope and cost upfront, assumes accurate initial estimates, risks shifting scope to change orders, potential for building the wrong product.  <hr />- Time and Materials: bills hourly, base on hours worked, assumes client can absorb costs, risks on the client, potential scope creep without cost caps, no real incentive for efficiency.  <hr /><hr />FBSC strategy:  <hr />- Collaboratively define budget and timeline initially, flexible scope based on ongoing learning.  <hr />- Static variables: Budget, Quality.  <hr />- Flexible variable: Scope.  <hr />- Assumption: More ideas than money, prioritize delivering the best product within budget, reassess scope regularly.  <hr />- Risks: Shared by client and vendor, reduced through continuous dialogue.  <hr />- Effect of new info: Scope re-prioritized, features moved or reduced, schedule and budget maintained.  <hr /><hr />Operational process:  <hr />- Weekly meetings on project status and financials.  <hr />- Monitor hours and completed features to guide scope adjustments.  <hr />- Incorporate learnings from early testing and iterations.  <hr />- Flex scope based on user feedback and new insights without fixed scope constraints.  <hr /><hr />Benefits:  <hr />- Better product fit for users.  <hr />- Improved cooperation and transparency.  <hr />- Managed risks distributed.  <hr />- Scope adapts dynamically, timeline and budget stay controlled.  <hr />- Enables innovations and adjustments, fostering collaboration over rigid contracts.","tags":"budgeting consulting engagement","authors":"nikki tieubao","date":{"days":18465},"category":"consulting"},"322":{"file_path":"radar/README.md","title":"Tech radar index","description":"A collection of technologies we're evaluating and using across our projects","spr_content":"- Tech radar is a categorized index of active and evaluated technologies, tools, platforms, languages, frameworks, and techniques.  <hr />- It reflects adoption stages and helps assess technology maturity.  <hr />- Refer to the Tech Radar handbook for methodology and operational details.  <hr />- Serves as a component of the team's knowledge base, forming a \"second brain.\"  <hr />- Aids in informed decision-making, reducing duplicated research, sharing insights, and tracking technology evolution.  <hr />- Utilizes a 3x2 decision framework considering People, Customer, Number, Now, and Then factors.  <hr />- Promotes responsibility and open-mindedness in technology choices through participative evaluation.  <hr />- Visualized via an interactive Tech Radar Board for comprehensive understanding.","tags":"radar","authors":"duy thanh","date":{"days":19676},"category":"radar"},"323":{"file_path":"culture/are-you-helping.md","title":"Are you helping?","description":"In a recent post I wrote \"Inner Circle\", I expounded on the importance of contribution and value in relation to a person's work or performance.","spr_content":"Employee value hinges on contribution and helping.  <hr />Performance measurement extends beyond salary and title.  <hr />Salary = social contract based on value delivered.  <hr />Job title = scope of work, not worth.  <hr />Unproductive employees may be overpaid, risking negative reviews.  <hr />Helpfulness and contribution are primary indicators of worth.  <hr />Ask, \"Are you helping?\" to assess true performance.  <hr />Value and performance are essentials for organizational success.  <hr />Evaluation must focus on output and impact, not just compensation.  <hr />The core metric: ability to help and contribute.","tags":"performance productivity","authors":"tieubao","date":{"days":19388},"category":"culture"},"324":{"file_path":"culture/avoid-burn-out.md","title":"Avoid burn out","description":"Burnout happens like burning the candle at both ends. But you get to select what time to pull the plug and replace with a new one.","spr_content":"- Burnout differs from daily stress; it is physical and emotional exhaustion.  <hr />- Burnout diminishes productivity and motivation; it erodes purpose and satisfaction.  <hr />- It manifests as a sense of emptiness, monotony, and questioning purpose.  <hr />- Burnout affects work, family, passions, relationships, all at once.  <hr />- Unlike stress, burnout is not about workload but about feeling ineffective, unheard, and pointless.  <hr />- It signals a collapse of interest, creativity, and emotional energy.  <hr />- Practical remedies include small adjustments, seeking help, communicating feelings, or taking breaks—**\"Just do something.\"**  <hr />- Early symptoms are red flags; awareness allows intervention.  <hr />- Overworking machines shows that constant high efficiency leads to failure; similarly for humans.  <hr />- Work-life balance is about allocating time for personal interests—writing, reading, painting, traveling—to replenish mood and purpose.  <hr />- Setting boundaries and owning your choices prevent burnout.  <hr />- Burnout is akin to burning the candle at both ends; the power to stop and reset lies with you.","tags":"burn-out productivity","authors":"tieubao","date":{"days":18338},"category":"culture"},"325":{"file_path":"culture/a-tips-of-hiring-dont.md","title":"A tips of hiring - Do & Don't","description":"Strategic guidance on purposeful hiring - hire for actual needs rather than scaling, understand the role deeply before posting a job, and recognize when additional help is truly needed to maintain quality.","spr_content":"- Companies prioritize scaling, equating size with productivity, but this can be misguided.  <hr />- Hiring without motivation or clear purpose wastes resources and demotivates talent.  <hr />- Place talent where they can create impact; avoid assigning roles that don't utilize their skills.  <hr />- Creating unnecessary jobs leads to financial and training waste; \"hire because you need to,\" not \"because you want to.\"  <hr />- Avoid hiring unless explicitly needed; seeking help is a valid reason but not an excuse to fill seats.  <hr />- Understand the job thoroughly before advertising; do it yourself to grasp challenges and workflows.  <hr />- Automate and optimize the process of understanding the role to write accurate job descriptions.  <hr />- Knowing the operational details enables proactive responses and realistic expectations for candidates.  <hr />- Set clear, tangible expectations for performance; avoid vague online learning goals.  <hr />- Value hard work, pushing team members to discover limits, but distinguish this from overburdening or ignoring quality.  <hr />- Overreach or overwork leads to degraded quality; recognize when additional resources are necessary.  <hr />- Quality decline signals the need for hiring; act decisively to prevent damage.","tags":"hiring people","authors":"duy hnh tieubao","date":{"days":18471},"category":"culture"},"326":{"file_path":"culture/account-management-strategy.md","title":"Account management strategies","description":"Effective client relationship management through flexible planning, thoughtful communication, service quality, and balancing toughness with empathy to build lasting partnerships.","spr_content":"- Effective planning balances detail with flexibility and simplicity amid uncertainty and surprises.  <hr />- Start with weekly goals; expand into actionable steps.  <hr />- Include an extra 2 hours of standby between early morning and noon for urgent matters.  <hr />- Use unneeded standby time for review or quick update on fast-changing tech.  <hr />- Neatness enhances transparency and prevents misses.  <hr /><hr />- Client acquisition relies on mastering communication as an art, requiring sensitivity and awareness of client feelings.  <hr />- Both parties must participate; signals alone may be insufficient.  <hr />- Find indirect contact points; leverage intermediaries like engineers to reach clients.  <hr />- Avoid one-sided relationships; mutual respect and balance foster trust.  <hr />- Good initial interactions with one client foster relationships with others naturally, like a blooming flower attracting attention.  <hr />- Fear of the unknown fuels negativity; embracing uncertainty reduces anxiety.  <hr /><hr />- Retention depends on quality service, swift responses, and personal communication.  <hr />- Account Managers need high \"people sense\" to understand client styles and know when to adjust strategies.  <hr /><hr />- Strong management involves deep knowledge of team members and company goals.  <hr />- Recognize when to make tough decisions or encourage team members' growth.  <hr />- Identify unreasonable client behaviors; maintain professionalism.  <hr />- Let go of ego; stay present and adaptable.  <hr /><hr />- Building trust requires yielding first; clients must see you on their side.  <hr />- Control ego; allow clients to process their emotions without interference.  <hr />- Use empathy statements like, \"I understand your feelings. Let me help.\"  <hr />- Balance softness and toughness: softness for long-term relationships, toughness for boundaries and motivation.  <hr />- Toughness clarifies limits; acts as a wake-up call to encourage professionalism.","tags":"consulting management","authors":"duy tieubao","date":{"days":18346},"category":"culture"},"327":{"file_path":"culture/ogif-intro.md","title":"OGIF - Oh God It's Friday","description":"I would like to introduce to you our new initiative called **OGIF**, Oh God It's Friday. Moving forward, our Friday Showcase will have a broader range of topics to discuss and share.","spr_content":"- Introduce OGIF: Oh God It's Friday, a broadening of Friday Showcase topics, emphasizing reflection and anticipation.<hr />- Emphasize tradition at Dwarves: prioritize work-life balance after responsibilities, valuing dedication and growth.<hr />- Recognize diverse passions: reject the notion of TGIF as an escape, encourage pursuit of interests and passions.<hr />- Culture 70/50: dedicate 70% of time to work, 50% to personal growth; some work on side projects post weekly duties.<hr />- Growth and impact: aim for societal contribution and livelihood; proud of achievements—20+ software shipped, 20+ clients, successful graduates.<hr />- Openness to topics: discuss growth, tech, social development, finance, careers; foster appreciation and future-focus.<hr />- Inclusive community: acknowledge disagreements, aim for welcoming environment; balance enthusiasm with realism.<hr />- Slogan: TGIF sometimes, OGIF always; promote consistent enthusiasm and engagement.","tags":"culture sharing","authors":"tieubao","date":{"days":19404},"category":"culture"},"328":{"file_path":"culture/delegation-and-believe-it-will-work.md","title":"Delegation and believe it will work","description":"We can't always make things (or everything) on our own. If that somehow truly happens, then Inc, Corp, Enterprise or Group won't stand a chance with Freelancers. So why delegating?","spr_content":"Delegation is essential when internal capacity is limited; it prevents entities like Inc, Corp, Enterprise, or Groups from being outcompeted by Freelancers.  <hr />Delegation distributes stress, consolidates information, and provides backup, reducing risk and workload.  <hr />It frees the leader for strategic focus or personal relief, like taking a break.  <hr />成功的委托依赖于识别合适的人选：技能匹配、可用性、能力解决或优化任务。  <hr />正确委托需要提供指导、资源、个人技巧，确保新手有基础支持。  <hr />完美无缺不现实，接受不完美，重在完成，不求最佳。  <hr />领导者经常担心风险，延误决策，委托能减轻决策负担。  <hr />有效沟通是关键：明确预期、截止日期、潜在风险，保持同步，确保理解一致。  <hr />及时反馈，提供指导，避免误解和返工，减少“靠猜”带来的错误。  <hr />避免微观管理，不要成为控制狂。  <hr />授权而非监控，让团队自主发挥，激发潜力。  <hr />委托不等于免责。责任始终在领导，任务完成质量关系到整体成功。  <hr />失败后责任归属领导，应确保委托对象有能力和动力完成工作。  <hr />投资在能力建设上，培养积极愿意成长的人才。  <hr />委托也具有培训和挑战意味，需带有包容心，激发团队合作与成长。","tags":"delegate management","authors":"tieubao","date":{"days":18423},"category":"culture"},"329":{"file_path":"culture/transparency.md","title":"Transparency","description":"The essence of transparency within a company","spr_content":"- Organizations thrive on transparency, sharing myriad operations and updates openly.  <hr />- First interviews often probe knowledge of the company's \"woodland\" or environment, symbolizing company's landscape.  <hr />- Initial understanding is limited; onboarding and daily work obscure broader context—teams, departments, company-wide.  <hr />- Transparency enables collective awareness, aligning team efforts and reducing silos.  <hr />- Automatic Check-Ins facilitate idea validation, feedback loops, and shared progress; prevent misaligned pursuits.  <hr />- Sharing incubated ideas online fosters team consensus and innovation, beyond one-to-one queries.  <hr />- Open news-sharing includes personal workflows, experiments, even life hacks; creates a mini R&D ecosystem.  <hr />- Continuous inter-team communication prevents roadblocks, ensures smooth collaboration.  <hr />- Transparency about successes fosters trust, not arrogance; encourages sharing challenges and solutions.  <hr />- Key benefits: trust in leadership, honest team dialogue, rational decision-making, psychological safety.  <hr />- Felt as inclusion, motivation, commitment—everyone sees their role in overall success.  <hr />- Transparency acts as a catalyst for collective focus, reducing ambiguity, elevating performance.","tags":"culture transparency","authors":"","date":{"days":18409},"category":"culture"},"330":{"file_path":"culture/runs-by-ideas.md","title":"The Dwarves runs by ideas","description":"We figure a small team is easier to share perspectives, update on what's happening and discuss different work aspects. Besides better communication, working cross functional creates a higher chance to understand the whole operation flow.","spr_content":"- Operations are structured into four core branches: Account (client happiness), PeopleOps (resource allocation), Human Resources (recruitment, employee experience), Communication (information flow).  <hr />- This structure differs intentionally from typical models, emphasizing small teams for better perspectives, transparency, and cross-functional understanding.  <hr />- Fewer committees enable a startup-like agility: plan, execute, fail fast, learn, iterate.  <hr />- The focus is on productivity and collaboration, fostering shared insights and collective growth.  <hr />- Operations are driven by the right ideas, aiming to create an environment where everyone enjoys working and their potential is realized.  <hr />- Address obstacles via capability assessment; roll out solutions accordingly.  <hr />- Shared mottos and tech knowledge dissemination promote unity and progressive change.  <hr />- Same ideas unify the team, align decision-making, and ensure flows of information remain open regardless of hierarchy or expertise level.  <hr />- Ideas should solve problems or optimize workflows, originating mainly from daily issues causing friction.  <hr />- Avoid pointless or “bullshit” ideas; they undermine trust and waste time.  <hr />- The best idea, regardless of origin, earns decision-making authority; every team member is expected to contribute new ideas.  <hr />- If not contributing ideas, questioning relevancy becomes necessary; continual idea flow is vital for growth.","tags":"management productivity","authors":"duy","date":{"days":18512},"category":"culture"},"331":{"file_path":"culture/red-flags.md","title":"Red flags","description":"These red flags are things we don’t want to see in our peeps. Even when you think they are improper, don’t waste your time with a wrong group of people.","spr_content":"Red flags indicate undesirable traits in potential or current team members. Negative attitude signifies disengagement, lack of motivation, integrity issues, and unwillingness to learn. Incompatibility means poor fit with company culture or personality clashes with colleagues. Lack of professionalism includes chronic tardiness, no-shows, missed deadlines, and ineffective communication. Poor performance reflects failure to meet standards and complete tasks timely. Low morale caused by an employee can lead to team toxicity. High turnover rate signals poor hiring or fit issues. Avoid wasting time on incompatible or negative individuals to maintain a healthy, motivated, and cohesive team.","tags":"management people","authors":"tieubao","date":{"days":19404},"category":"culture"},"332":{"file_path":"culture/culture-test.md","title":"The culture test","description":"Here's the culture test created during the market challenges of late 2024. It is designed to highlight and reinforce the cultural values at Dwarves Foundation. It’s a chance to reflect, share, and show how you fit into our team.","spr_content":"**Sparse Priming Representation (SPR) for Culture Test for Dwarves**<hr /><hr />---<hr /><hr />**Core Purpose:**<hr />- Assess cultural alignment, personal insight, and practical understanding related to Dwarves Foundation.  <hr />- Focus on values, honesty, thoughtfulness, and contribution over scoring.  <hr />- Emphasize authentic, reflective responses in Vietnamese or English.<hr /><hr />---<hr /><hr />**Test Structure:**<hr /><hr />1. **Warm-Up (10 pts):**<hr />   - Choice-driven personal reflection or philosophical dilemma.<hr />   - Elicits self-awareness, emotional depth, or clarity of values.<hr /><hr />2. **Culture (20 pts):**<hr />   - Focused on a core aphorism:<hr />     - _Pressure makes diamonds._  <hr />     - _Like attracts like._  <hr />     - _No mud, no lotus._  <hr />   - Personal story + reflective insight.<hr />   - Measures understanding and embodiment of cultural values.<hr /><hr />3. **Knowledge (30 pts):**<hr />   - Practical application of LLMs in professional contexts:<hr />     - Design, development, sales, management, leadership.<hr />   - Demonstration of technological fluency aligned with workflow enhancement.<hr /><hr />4. **Productivity (40 pts):**<hr />   - One technique or workflow:<hr />     - Adoption strategy.<hr />     - Use of digital tools like Dify.<hr />   - Emphasizes efficiency and innovation.<hr /><hr />5. **Optional Bonus (10 pts each):**<hr />   - Rapid learning via LLMs.<hr />   - Identifying gaps in knowledge with LLMs.<hr /><hr />---<hr /><hr />**Key Concepts:**<hr /><hr />- **Values focus:** honesty, thoughtfulness, contribution.<hr />- **Authenticity:** responses should mirror personal experience and insight.<hr />- **Multilingual:** responses in Vietnamese or English.<hr />- **Assessment style:** holistic, not purely score-based.<hr />- **Submission:** multiple Markdown files via GitHub Gist for structured, traceable responses.<hr /><hr />---<hr /><hr />**Underlying Metaphors & Analogies:**<hr /><hr />- Dwarves’ culture as a forge; resilience forged through pressure (diamonds).<hr />- Knowledge as a crystal lattice; interconnected, revealing hidden gaps.<hr />- Workflow as a mining expedition; efficiency through strategic tools.<hr />- Responses as architecture; built to reflect values and deliberate thought.<hr /><hr />---<hr /><hr />**Intent:**<hr />- To prime models (and people) to recognize and embody core cultural and practical qualities.<hr />- To blend personal insight with professional acumen.<hr />- To foster honest self-assessment aligned with Dwarves Foundation spirit.","tags":"culture test","authors":"tieubao","date":{"days":19996},"category":"culture"},"333":{"file_path":"culture/the-inner-circle.md","title":"The inner circle","description":"The concept of an \"inner circle\" within a company is not a new one, and at Dwarves, a software company founded by a group of engineers, this idea holds a significant value.","spr_content":"- \"Inner circle\" denotes an exclusive group within a company, emphasizing influence and trust.  <hr />- Dwarves, founded by engineers, values efficiency, shipping, and focus on impactful tasks.  <hr />- Core contributors are highly respected; their role is crucial in project success.  <hr />- Differentiation exists: effective shippers gain respect, inefficients are sidelined.  <hr />- Valuing contribution over tenure or connections reflects meritocracy; common in many organizations.  <hr />- Inner circle at Dwarves is informal; earned through respect and demonstrated impact, not official invitation.  <hr />- Recognition is based on consistent, impactful contributions, not past accolades or relationships.  <hr />- Crisis leadership is closely tied to this inner circle; pivotal during challenges.  <hr />- Success for inclusion depends on ongoing demonstrable value, not background or status.","tags":"culture management","authors":"tieubao","date":{"days":19376},"category":"culture"},"334":{"file_path":"culture/README.md","title":"Notes on our culture","description":"A collection of thoughts, principles, and experiences that define our culture beyond what's written in the handbook. These articles explore different aspects of how we work, make decisions, and build a community of exceptional engineers.","spr_content":"- Culture extends beyond the handbook; it is a living, dynamic phenomenon shaping daily interactions.  <hr />- Core values: Craftsmanship, Teamwork, Sustainability; foundational but not exhaustive of culture.  <hr />- Articles reflect ongoing exploration of what makes Dwarves culture unique: thoughts, experiences, principles.  <hr />- Culture articles cover decision-making, leadership, team dynamics, work approach, personal growth, and company values.  <hr />- Decision-making emphasizes distributed power, responsibility, and leadership styles.  <hr />- Team dynamics focus on high performance, feedback, trust-building.  <hr />- Work approach prioritizes delivery, focus, sustainability, and avoiding distraction.  <hr />- Personal growth involves continuous learning, burnout prevention, transcending titles.  <hr />- Company culture promotes transparency, meritocracy, innovation.  <hr />- Culture is an evolving practice, shaped by growth, learning, adaptation; a reflection of collective wisdom.  <hr />- Every contribution enriches the collective understanding, making culture a shared creation.  <hr />- Exploration through articles offers insights into work, collaboration, software development, and cultural values.  <hr />- Both newcomers and seasoned members find perpetual learning opportunities about our cultural essence.","tags":"culture overview","authors":"tieubao","date":{"days":19842},"category":"culture"},"335":{"file_path":"culture/high-performing-team.md","title":"Building a solid high performing team","description":"Sustainable growth companies are built by teams of shining constellations rather than just several bright stars. It all starts with recruiting.","spr_content":"- Sustainable growth companies are like constellations, built from shining stars, not just individual bright ones.  <hr />- Teams form the core structure, emphasizing collective brilliance over individual talent.  <hr />- Recruitment is the foundational step, critical in shaping the constellation’s integrity.  <hr />- Successes and failures predominantly originate from recruitment choices.  <hr />- Recruitment is the most vital leadership responsibility; it directs the company's trajectory.  <hr />- Proper placement of team members (stars) is essential—personality remains stable, skills can evolve, but core traits do not change.  <hr />- Forcing personality change is ineffective and akin to “project boyfriend”—a failed analogy from dating, applicable in work.  <hr />- People inherently do not change their personality; evolution is skill-based, not personality-based.  <hr />- Minimize toxicity within the team; toxicity hampers growth and learning.  <hr />- Embrace failures as opportunities for learning; failures are inevitable but instructive.  <hr />- Agile and derivative methodologies optimize learning and adaptation.  <hr />- Divide and conquer approaches enable manageability and focus.  <hr />- Continuous, incremental improvements and rapid learning prevent resource waste.  <hr />- Even in routine areas like bookkeeping, these methods promote progress and resource efficiency.  <hr />- Properly applied, these principles prevent large setbacks, foster addictive progress, and cultivate resilient growth.","tags":"management productivity","authors":"tieubao","date":{"days":18313},"category":"culture"},"336":{"file_path":"culture/people-matter.md","title":"How people matter should work","description":"People thrive when they believe in what they create, not from fake happiness programs. We value individual contributions, hire based on skills rather than background, promote knowledge sharing, and focus on meaningful work.","spr_content":"- Articles emphasize humans as the core of business, HR's role in nurturing talent.  <hr />- Over focus on tips: happiness, engagement, motivation; superficial solutions.  <hr />- Genuine value comes from people believing in their work; authenticity over happiness.  <hr />- Individual contribution visible through pride and effort in communication; recognize creators.  <hr />- Work in tech is open to diverse backgrounds; formal degrees are less important than skills.  <hr />- Culture blends unconventional spirit with integrity; hire for mindset and competence over credentials and seniority.  <hr />- Knowledge sharing is innate; team members naturally seek to help and learn.  <hr />- Sharing knowledge fosters discovery, growth, and openness; not forced, but encouraged.  <hr />- People stay when they want to; extrinsic ties are fragile, intrinsic motivation is key.  <hr />- Create environments where ideas are valued, work feels meaningful, and fairness prevails.  <hr />- Success depends on aligning organizational conditions with people's genuine motives.","tags":"management people","authors":"duy tieubao","date":{"days":18437},"category":"culture"},"337":{"file_path":"culture/go-the-extra-mile.md","title":"Go the extra mile","description":"A couple days ago, I was asked if I were ever a product person, what would I do to make the best out of it. It took me a while. I mean, I've never walked in this shoe before. Wth is a product person? I wondered. And I started digging. Here it is, \"Making sure your product/ thing shipped out flawlessly.\" A perfectionist mindset.","spr_content":"- \"Product person\" pertains to ensuring products are shipped flawlessly, emphasizing a perfectionist mindset.<hr />- Flawless delivery aligns with quality assurance and precision.<hr />- No one desires poor products; universally, people prefer optimal functioning and quality.<hr />- Creating poor products contradicts natural expectations and professional standards.<hr />- Exceeding expectations involves continuous improvement and optimization.<hr />- Reflection on past work should inspire upgrades and enhancements.<hr />- Quality evolution from satisfaction to pride, then to improvement over time.<hr />- Little details are crucial; they shape the overall quality and user experience.<hr />- Attention to detail reflects work ethic and professionalism.<hr />- How products are treated mirrors how users are treated; attention to detail fosters respect.<hr />- Extra mile is driven by genuine desire; it’s about quality, not overwork.<hr />- True extra effort elevates work, not merely extending time or effort.<hr />- Pride in work fuels sustained excellence and resilience.<hr />- Focusing on doing fewer things with excellence surpasses many half-hearted efforts.","tags":"management productivity quality","authors":"duy tieubao","date":{"days":18514},"category":"culture"},"338":{"file_path":"culture/constructive-feedback.md","title":"Constructive feedback","description":"It's in human nature to instantly lose their mind when things get hard, and somehow they split nasty things that can't be undone. So, to reduce the ratio of unnecessary conflicts, let's make the feedback great again.","spr_content":"- Human tendency: lose composure when facing difficulty; tend to split irreparable issues.  <hr />- Reducing conflicts requires improving feedback quality.  <hr />- Know the importance of timing: establish listening and questioning frames.  <hr />- Avoid talk blocking; respect other's present time; neglect leads to disregard of your ideas.  <hr />- Address problems incrementally; choose appropriate moments; transform expressions into questions; validate with understanding.  <hr />- Feedback aims to foster motivation across age and level; effective feedback differs from ineffective.  <hr />- Clearly state problems; propose humble solutions; envision feasible impacts.  <hr />- Recognize key traits of good co-workers: ability to critique honestly; willingness to help improve.  <hr />- Seek honest feedback from friends; value directness to bridge gap between work and outcome.  <hr />- Feedback should be constructive, not destructive; focus on encouragement.  <hr />- Use concrete, respectful language: replace negative judgments with helpful suggestions.","tags":"management productivity","authors":"tieubao","date":{"days":18410},"category":"culture"},"339":{"file_path":"culture/blocking-distraction.md","title":"Blocking distraction","description":"Practical tips to find focus in our constantly connected world, including spending time alone, removing background noise, embracing quiet moments, and creating productive morning routines.","spr_content":"- The modern world is characterized by constant connectivity and information overload.<hr />- Continuous notifications and distractions impair focus and reduce life quality.<hr />- Solitude provides mental clarity and fosters better ideas.<hr />- Allocating 1–2 hours daily for alone time enhances focus on meaningful tasks.<hr />- Engaging in activities like walking, reading, or exercising during solitude nurtures creativity.<hr />- Removing background noise and employing asynchronous communication save time and reduce interruptions.<hr />- Scheduled meetings and blocking noise sources improve concentration on priority work.<hr />- Excessive noise and unnecessary communication are distractions that hinder productivity.<hr />- Doing nothing intentionally allows mental rest and prevents burnout.<hr />- Watching movies or passive entertainment is not true doing nothing.<hr />- Unproductive busywork is worse than inactivity; intentional idleness is restorative.<hr />- Slow, unhurried mornings maximize productivity and creativity.<hr />- Mornings are optimal for tackling difficult or meaningful tasks.<hr />- Starting the day intentionally influences the overall success of the day.<hr />- Embracing the flow state enhances deep work and high productivity.<hr />- Repeating soothing stimuli, like favorite songs, can induce flow.<hr />- Recognizing information disorder as an unseen problem is crucial.<hr />- Awareness of wasted time on social media reveals the extent of distraction.<hr />- Hidden information disorder leads to unrecognized time loss and reduced life quality.<hr />- Awareness of one's distraction habits is necessary for meaningful change.","tags":"productivity","authors":"tieubao","date":{"days":16811},"category":"culture"},"340":{"file_path":"culture/making-decision.md","title":"Making decision as a team member","description":"Being able to make decision trains ourselves to accept responsibility with an open mind. Either it's a success or a failure, we move forward.","spr_content":"- Democracy is power-sharing with the people, specifically those involved.  <hr />- It involves respecting and trusting all members of the community or team.  <hr />- Shared responsibility spreads risks and benefits, fostering collective care.  <hr />- Decision-making flows through a flat hierarchy, empowering individuals over confided matters.  <hr />- Hiring emphasizes understanding problems and willpower, not micromanagement.  <hr />- Decision authority resides with those doing the work, adhering to the 3x2 framework: People, Customer, Number—then, as a continuous process.  <hr />- Decisions aim to maximize benefits across these aspects, considering fairness, profitability, and sustainability.  <hr />- Improvement is iterative; partial wins are acceptable if other areas remain stable or improve.  <hr />- Encouragement fosters independent thinking, original ideas, and implementation impact.  <hr />- Making decisions cultivates responsibility and resilience, regardless of outcomes.  <hr />- Team involvement is essential; decision-making cannot be isolated.  <hr />- Seeking advice and data enhances decision quality; collaboration boosts insight and accuracy.  <hr />- Challenges include fear of responsibility and hesitation, requiring ongoing testing to find solid ground.  <hr />- Justified ideas need a strong 'why,' not just a 'how,' with backup plans prepared for failures.","tags":"management process","authors":"duy","date":{"days":18820},"category":"culture"},"341":{"file_path":"culture/delegate-work-not-responsibility.md","title":"Delegate work, not responsibility","description":"Delegating work does not absolve you of responsibility. In the case of a failure, the blame is all yours. Investors will go after the CEO, even if an intern made the mistake that hurt the company.","spr_content":"- Technological capability alone cannot ensure scaling; effective delegation is essential.  <hr />- Delegation does not transfer responsibility; accountability remains with the leader.  <hr />- In failures, blame defaults to the delegator, especially the CEO, regardless of who made the mistake.  <hr />- Delegating to unskilled persons is a leadership failure; it reflects poor judgment in delegation.  <hr />- Saying “do it myself for quality” indicates a leadership and delegation knowledge gap.  <hr />- Do not assume team members understand tasks; clarify until confident of precise execution.  <hr />- Micromanagement is not delegation; trust your team without hovering.  <hr />- Reassess tasks or management style if hovering is necessary; delegation requires trust.  <hr />- Communicate pitfalls, cautions, best practices, and personal tips during delegation; teach as you delegate.  <hr />- Leadership in communication means leading the dialogue, guiding comprehension and action.  <hr />- Inability to trust or invest in team development necessitates replacement; untrustworthy employees hinder organizational growth.","tags":"delegate management","authors":"tieubao","date":{"days":18227},"category":"culture"},"342":{"file_path":"culture/beyond-the-title.md","title":"Beyond the title","description":"We want to make impacts or influence people in some ways. That doesn't happen if we wait for the right moment because there isn't. Taking the shot means opening the door to mistakes and failures, and that's a good thing. We learn from them.","spr_content":"- Workers are paid based on the scope of their tasks, creating a mindset of minimal effort for pay.  <hr />- Employers fix rates, workers accept limits, missing opportunities for growth and self-discovery.  <hr />- The effort-to-compensation trade-off is socially reinforced, shaping work boundaries.  <hr />- Developing a mindset to think outside the box fosters innovation and long-term value.  <hr />- Results are prioritized over benefits; upfront investment and long-term view lead to better outcomes.  <hr />- Making an impact requires taking risks, accepting failure as part of growth.  <hr />- Failure provides learning; avoiding risks restricts potential.  <hr />- Self-expansion involves surpassing current roles, not just performing tasks.  <hr />- Long-term career development depends on individual and team growth, beyond immediate performance.  <hr />- Becoming better involves supporting team cohesion; collaboration outweighs individual skill.  <hr />- Effective teams share knowledge, communicate constructively, and improve collectively.  <hr />- Titles influence accountability and responsibility but not daily work routines.  <hr />- Titles assign authority and liability, shaping decision-making and influence.  <hr />- Contribution, not title, justifies recognition; leadership is about creating more leaders.  <hr />- True growth and impact arise when roles evolve through meaningful contributions, not titles.","tags":"productivity","authors":"tieubao","date":{"days":18677},"category":"culture"},"343":{"file_path":"culture/culture-handbook.md","title":"The Dwarves culture handbook","description":"For the past 5 years, we didn't have something called 'Culture Book'. Whenever a newbie steps in, it's natural to pick up the job and go with the flow. We hardly force them into other periodical office traps like team-bonding activities or late night drinks.","spr_content":"- Absence of 'Culture Book' for 5 years; onboarding is informal and flowing.<hr />- No enforced team-bonding or social rituals; natural social interactions occur randomly.<hr />- Workplace likened to kindergarten: transient, superficial connections, people leave for “friendlier” environments.<hr />- Prefer meaningful, spontaneous conversations over obligatory bonding activities.<hr />- Key spots for engagement: kitchen corner, sofa in master room, balcony.<hr />- Daily informal chats happen on Discord channels; accessible for introverts.<hr />- Encourage new members to read the **Dwarves Culture Handbook** (<20 min), which reflects the company spirit.<hr />- Handbook embodies core beliefs: craftsmanship, teamwork, sustainability.<hr />- Culture is built implicitly through everyday actions, observations, and communication—formed when unnoticed.<hr />- The culture evolves; version updates like software—continuous improvement.<hr />- Core idea: culture is a living, evolving set of principles passed from seniors to juniors; authentic over enforced rituals.","tags":"culture handbook","authors":"tieubao","date":{"days":18470},"category":"culture"},"344":{"file_path":"culture/focus-on-delivery.md","title":"Focus on delivery","description":"Focus on shipping when you are struggling with what to do next to be better as a software engineer. When you ship something new, users will try out your build and give you feedback.","spr_content":"- Shipping prioritizes delivery over perfection; feedback accelerates learning.  <hr />- User feedback reveals real issues: bugs, flow errors, known problems.  <hr />- Emotions like frustration signal growth opportunities; they save time.  <hr />- Use user reactions as accurate indicators of product quality.  <hr />- Overthinking about architecture, frameworks, or tools distracts from shipping.  <hr />- Assess success by what is shipped: the end product, user perception, usefulness.  <hr />- Quality and refinement follow initial release; they are later processes.  <hr />- Focus questions: what to ship, what it looks like, user expectations, usefulness, adoption.  <hr />- Delivery is the core goal; build with clarity and purpose.  <hr />- Software quality is measurable only after release.  <hr />- Overreacting or delaying is counterproductive; keep momentum.  <hr />- Blocking to delivery hampers success; remove obstacles quickly.","tags":"productivity quality","authors":"tieubao","date":{"days":19392},"category":"culture"},"345":{"file_path":"playground/notes/misc/how-i-create-content-for-multiple-platforms-at-dwarves.md","title":"How I Create Content for Multiple Platforms at Dwarves","description":"To help all our Dwarves team members, create original, helpful, and consistent writing across various platforms, we've put together this content guideline as a reference whenever we're writing for Dwarves.","spr_content":"- Dwarves exemplify craftsmanship in every content piece; craftsmanship is foundational.<hr />- Guidelines are iterative: not final, always evolving, reflecting continuous improvement.<hr />- Website content should demonstrate expertise, clarity, authority, and a direct call to action.<hr />- Use simple, active language; avoid jargon and complex syntax; speak with confidence.<hr />- Social media is a conversational platform; tone should be cheerful, polite, engaging.<hr />- Facebook: fast attention-grabbing posts; concise, minimal text; actionable.<hr />- LinkedIn: focus on industry insights, achievements; 100–150 words; highlight milestones.<hr />- Twitter/X: brief, focused tweets; threads encouraged; include CTAs and engage actively.<hr />- Instagram: succinct captions; high-quality visuals; trends and hashtags for visibility.<hr />- Blog posts: in-depth, research-backed; collaborative; targeted, engaging; professional tone.<hr />- Newsletters: convey engineering insights; clear purpose; consistent tone; include visuals and links.<hr />- Discord: relatable, original content; positivity; fun and warm tone; foster conversations.<hr />- Best practices: stay focused on topics; organize with headings; clear, casual language; humor where appropriate.<hr />- Incorporate external references; diverse formatting—headings, bullets, media; keep content short, smart, quirky.<hr />- Use relevant hashtags selectively; monitor industry trends; celebrate achievements.<hr />- Final advice: be brave—post often without overthinking algorithms; consistency over chasing trends.<hr />- All content aligned with the ethos of continuous improvement and craftsmanship.","tags":"content guideline instructions","authors":"innno_ nikki","date":{"days":19846},"category":"playground > notes > misc"},"346":{"file_path":"playground/notes/misc/organize-team-know-how-with-zettelkasten-method.md","title":"Organize team know-how with Zettelkasten Method","description":"At memo.d.foundation, we use the Zettelkasten Method to enhance engagement by capturing one idea per note and connecting concepts with tags and citations. This method improves clarity, consistency, memorization, and reduces bias. We organize notes with a tag system and content map in Obsidian, making it easy for readers to navigate and see connections between topics.","spr_content":"- Engaging with topics involves integrating prior knowledge with new information, emphasizing connection and coherence.<hr />- Building memos (memo.d.foundation) employs the Zettelkasten Method to optimize comprehension and engagement through structured note-taking.<hr />- The Zettelkasten Method centers on capturing single ideas per note, housed in one repository, with explicit labels and links via tags and citations.<hr />- Key components of a Zettel include a unique identifier, the body of knowledge, and references to sources or self-generated thoughts.<hr />- Note types in Zettelkasten include fleeting notes (temporary ideas), literature notes (from sources), permanent notes (long-term insights), and reference notes (connectors for organization).<hr />- The method enhances clarity of thinking, supports continuous idea development, improves memorization, and mitigates bias through written records.<hr />- The team utilizes a tagging system where each topic has related tags; multiple tags per memo facilitate easier discovery and cross-referencing.<hr />- Tags organize related posts; selecting a tag reveals interconnected content and visualizes relationships via linking charts.<hr />- The map of content, maintained in Obsidian using markdown files, provides a high-level, interconnected overview of notes categorized by topics, enabling flexible navigation.<hr />- Overall, the Zettelkasten Method fosters an organized, interconnected structure that boosts comprehension, recall, and analytical thinking.","tags":"operations zettelkasten","authors":"minh_cloud","date":{"days":19899},"category":"playground > notes > misc"},"347":{"file_path":"playground/notes/misc/_how-to-setup-crypto-wallet-to-withdraw-icy.md","title":"How to set up crypto wallet to withdraw ICY","description":"To withdraw ICY to Vietnam Bank or other fiat, you need set up 2 types of wallet in advance. This guide will show you how to setup crypto wallet.","spr_content":"- To withdraw ICY to Vietnam fiat, set up two wallets: on-chain (non-custodial) and custodial.  <hr />- On-chain wallet (e.g., Coinbase, Metamask): receive ICY, swap ICY to USDT.  <hr />- Custodial wallet (e.g., Binance): convert USDT to VND.  <hr />- Follow the withdrawal guidelines after setup.  <hr /><hr />- Coinbase wallet setup:<hr />  - Download extension from official site; avoid Safari.<hr />  - Add extension to Chrome or Firefox.<hr />  - Open wallet via extension icon.<hr />  - Create new wallet if none exists.<hr />  - Secure wallet by copying seed phrase, store offline, do not share.<hr />  - Confirm seed phrase when prompted.<hr />  - Set wallet password.<hr /><hr />- Binance account creation:<hr />  - Install Binance app from official link.<hr />  - Select \"Crypto Novice\" mode.<hr />  - Create account.<hr />  - Secure account with passkey.<hr />  - Enter basic info for verification.<hr />  - Upload verification document.<hr /><hr />- Both wallets enable ICY receipt, conversion to USDT, then USDT to VND.  <hr />- Secure seed phrase and account info protect assets.","tags":"dfg icy tutorial","authors":"minhcloud","date":{"days":19795},"category":"playground > notes > misc"},"348":{"file_path":"playground/notes/misc/How to make a MOC.md","title":"How to make a MOC","description":"Learn how to create a Map of Content (MOC) for knowledge hubs. This guide introduces MOC's benefits and providing a step-by-step process for organizing and linking notes effectively","spr_content":"- LLMs embed latent knowledge, abilities, concepts; these are activatable via prime language cues.  <hr />- MOC: note acting as a map, linking interconnected notes within a knowledge base; functions as active index, high-level overview.  <hr />- Unlike folders, MOCs are flexible, multi-location, enhance idea linking, and support dynamic organization.  <hr />- Use MOCs when feeling overwhelmed, scattered, or starting new topics; serve to organize, clarify scope, and reveal relationships.  <hr />- MOCs reduce overwhelm, promote ideation, improve navigation, support scalability, and provide flexible structure.  <hr />- Creating an MOC involves selecting a core topic, creating a dedicated note with a special symbol (`§`), and linking related notes.  <hr />- Gather relevant notes, resources, documents under the core theme; organize with categories: what, why, when, how.  <hr />- Include descriptive categories: design patterns, implementation methods, best practices.  <hr />- Continuously iterate, expand, and refine MOCs; keep them living documents reflecting growth and insights.  <hr />- Cross-link MOCs to broader topics (e.g., microservices to software architecture) for interconnectedness and comprehensive mapping.  <hr />- MOCs enhance information management within organizations like Dwarves by facilitating accessible, meaningful, and scalable knowledge sharing.","tags":"guideline instructions moc","authors":"thanh","date":{"days":19884},"category":"playground > notes > misc"},"349":{"file_path":"playground/notes/misc/how-to-take-better-screenshots-on-mac.md","title":"How To Take Better Screenshots On Mac","description":"Taking screenshots of them shouldn’t be that challenging. In this article, I’ll take you through my screenshot workflow with a handful of simple tools and techniques and grab screenshots with negligible effort.","spr_content":"Screenshots are frequent, basic with macOS, limited in features.  <hr />CleanShot X, via Setapp, enhances screenshot quality and workflow efficiency.  <hr />Installation involves subscribing, downloading, and setting CleanShot as default.  <hr />Access commands through Control Center extension.  <hr />Keyboard shortcuts tailor quick actions:  <hr />- `Command Shift 4`: area capture  <hr />- `Command Shift 3`: full screen  <hr />- `Command Shift 5`: all-in-one, window, or scrolling capture  <hr />- `⌘C`: copy, `⌘S`: save, `⌘W`: close, `⌘U`: upload, `⌘E`: annotate.  <hr />CleanShot X is customizable, allowing behavioral tweaks.  <hr />Annotation tools enable highlighting, cropping, and adding notes.  <hr />Background tool allows aesthetic editing: padding, shadows, alignment, border-radius.  <hr />Auto Balance aligns content; Dwarves color schemes personalize backgrounds.  <hr />Steps for background customization:  <hr />1. RGB sliders or Hex code (`F8F8F8`) for color.  <hr />2. Apply Dwarves branding as background.  <hr />3. Center content.  <hr />4. Set padding to 76.  <hr />5. Shadow intensity 28.  <hr />6. Add Dwarves logo top-left.  <hr />Advanced capture features include:  <hr />- Scrolling capture for long webpages or VSCode screens.  <hr />- OCR for text extraction.  <hr />- All-in-One mode with fixed aspect ratio and last selection recall.  <hr />- Recording options for videos or GIFs, with editing capabilities.  <hr />- History access for managing captures.  <hr />Overall, CleanShot X streamlines high-quality, visually appealing screenshots and recordings, boosting productivity and presentation. Practice enhances mastery, making enhanced visuals standard.","tags":"community guideline instructions","authors":"innno_","date":{"days":19795},"category":"playground > notes > misc"},"350":{"file_path":"playground/notes/misc/how-to-transfer-dfg-from-eth-to-base-for-staking.md","title":"How to bridge $DFG from Ethereum Mainnet to Base Network for staking","description":"This guide will show you how to move $DFG from Ethereum to Base using a bridge.","spr_content":"- $DFG symbolizes shares of Dwarves Foundation for community contributors; a token representing collective effort and stake in the organization.  <hr />- The Dwarves team promotes $DFG staking to earn $USDC, incentivizing community engagement.  <hr />- $DFG initially resides on Ethereum; requires bridging to Base for staking activities.  <hr />- Users must prepare via Coinbase Wallet setup, following a specific guide for secure storage.  <hr />- Transfer ETH via Binance P2P to facilitate bridging and gas fees, guided by a detailed Binance P2P tutorial.  <hr />- Withdraw ETH from Binance to Coinbase Wallet, ensuring liquidity for network fees, with a clear withdrawal guide.  <hr />- Bridging involves converting $DFG from Ethereum to Base through DFG Bridge, crafted by community member Jack.  <hr />- Connect Coinbase Wallet to DFG Bridge, sharing wallet address in the interface.  <hr />- Select \"DFG\" on Ethereum network as source, \"DFG\" on Base network as destination, specify amount.  <hr />- Confirm via \"Approve\", authorizing the transaction within Coinbase Wallet, noting spending cap serves as a limit safeguard.  <hr />- Approval transactions are security affirmations, preventing unauthorized transfers.  <hr />- Await confirmation; $DFG tokens will appear in Base wallet, ready for staking and earning rewards.","tags":"dfg icy tutorial","authors":"jack minh","date":{"days":19832},"category":"playground > notes > misc"},"351":{"file_path":"playground/notes/misc/lifecycle-of-a-publication.md","title":"Life cycle of a publication","description":"Following the core theme of MMA (Mastery, Meaning, Autonomy), every piece of content we put out requires a strategic approach, so it can cut through the noise, serve purposes and meanings to readers. Whether we're crafting a note, article, research report, or digital post, the process and cycle remain largely the same...","spr_content":"- Core theme: MMA (Mastery, Meaning, Autonomy) guides strategic content creation.  <hr />- Content must cut through noise, serve purpose, and deliver meaning to readers.  <hr />- Process and cycle are consistent across notes, articles, reports, and digital posts.  <hr />- Knowledge recorded via Zettelkasten Method: each new insight as fleeting notes.  <hr />- Fleeting notes linked by headings and metadata (tags, numbers).  <hr />- Notes are personal or shared through the Playground; act as resource pools.  <hr />- When creating content, related notes are pulled for fast setup.  <hr />- Audience and objectives shape all actions:  <hr />  - Understand reader traits and needs.  <hr />  - Define what we offer and how to meet their expectations.  <hr />  - Adjust tone, voice, language accordingly.  <hr />- Content creation steps:  <hr />  - Research: deepen understanding via notes and external sources.  <hr />  - Plan: outline topic, set deadlines, define metrics for success.  <hr />  - Write: organize info, align with audience/objectives.  <hr />  - Format: markdown styling in VSCode, following Dwarves’ style.  <hr />  - Review: share draft for feedback on content and visuals.  <hr />  - Revise: correct errors, enhance clarity, align with audience/brief.  <hr />  - Approve: obtain supervisor’s sign-off before proceeding.  <hr />- Publishing involves multiple stages:  <hr />  - Internal recap for team alignment.  <hr />  - Publish article on memo.d.foundation.  <hr />  - Create slide summaries for training.  <hr />  - Conduct workshops, events, or talks for wider engagement.  <hr />  - Optional: social media and newsletter promotion.  <hr />- Audience engagement is crucial; soliciting feedback and discussions validates effectiveness.  <hr />- Monitoring metrics enables refinement; adapt content based on feedback.  <hr />- High-quality, process-driven content sharing advances contributions to the tech community.  <hr />- Standards and processes are essential; ongoing adaptation ensures relevance and impact.","tags":"communications content guidelines","authors":"nikki","date":{"days":19803},"category":"playground > notes > misc"},"352":{"file_path":"playground/notes/misc/memo-knowledge-base-meeting.md","title":"Memo Knowledge Base Meeting","description":"Here are the simple steps we follow each week to keep the Memo content pipeline organized and our team informed.","spr_content":"- Memo is our team’s wiki, centralizing how we work, learn, and operate at Dwarves.  <hr />- It’s maintained by us for fellow craftsmen, serving as a comprehensive knowledge hub.  <hr />- Weekly process focuses on maintaining the Memo content pipeline, ensuring clarity and updates.  <hr />- Review all Memo to-do lists in Basecamp to verify content pipeline is current; prepare updates on changes or new info.  <hr />- Share these updates during the Friday team meeting to keep everyone informed.  <hr />- Confirm that [memo.d.foundation](http://memo.d.foundation) Home page reflects the latest content.  <hr />- Use Basecamp Memo To-Do list to assign clusters to relevant team members, clarifying responsibilities.  <hr />- Prioritize content tasks by moving urgent items to the \"Soon\" section; keep this list under 10 items for focus.  <hr />- Develop and organize a content map to track existing content, updates, and new content planning, e.g., via Google Sheets.  <hr />- Refer to the guide on creating a map of content to align the structure with project needs.  <hr />- Adhering to this weekly checklist maintains Memo’s relevance, project momentum, and team cohesion.","tags":"guideline instructions memo","authors":"innno_","date":{"days":19894},"category":"playground > notes > misc"},"353":{"file_path":"playground/notes/misc/_how-to-withdraw-icy.md","title":"How to withdraw ICY","description":"This guide show how to swap ICY to fiat.","spr_content":"- MACRO: Withdraw process for ICY involves multiple steps: wallet setup, token withdrawal, conversion, bridging, transfer, and bank withdrawal.<hr />- PRECONDITION: possession of crypto wallet and Binance wallet necessary to withdraw ICY.<hr />- GUIDELINE: if no crypto wallet, follow provided setup instructions.<hr />- INITIAL ACTION: use specific command to withdraw ICY from Mochi to crypto wallet.<hr />- TRANSMIT: click “Enter address” and paste crypto wallet address.<hr />- NOTE: require Ethereum on Base Network for swapping ICY to USDT; obtain Ethereum via purchase, withdrawal, or faucet (ticket in Discord).<hr />- CONVERSION: swap ICY to USDT on icy.so; connect wallet, select Base network, approve, input amount, approve & swap, sign Metamask.<hr />- BRIDGE: transfer USDC from Base to another network via Stargate Finance; select from Base to Binance BNB; enter amount; confirm transfer.<hr />- DEPOSIT ADDRESS: obtain Binance deposit address for USDT (Network BNB) via Binance Wallet > Funding > Deposit > USDT > BNB network.<hr />- TRANSFER: send USDT from Coinbase wallet to Binance address; open Coinbase wallet, choose “Send,” select token & amount, paste Binance deposit address, review, send.<hr />- FINAL STEP: deposit USDT into bank via P2P trading; select appropriate service for withdrawal.","tags":"dfg icy payment tutorial","authors":"minhcloud","date":{"days":19795},"category":"playground > notes > misc"},"354":{"file_path":"playground/notes/misc/how-to-push-content-on-note-d.md","title":"How to push content on memo.d.foundation","description":"This is a guide on how to setup your environment and settings to push content to our notes website, memo.d.foundation.","spr_content":"- Prepare environment for memo editing; verify setup using provided tutorial link.  <hr />- Ensure repository `memo.d.foundation` is accessible with proper permissions.  <hr />- Update local files before editing by synchronizing with remote via Source Control, click \"Sync.\"  <hr />- When creating a post:  <hr />  - Select target folder; default is `vault/playground/00_fleeting` if unsure.  <hr />  - Use \"New files\" icon; name file with `.md` suffix.  <hr />  - Add metadata block with tags, title, date, description, authors.  <hr />  - Edit content below metadata; save with `Cmd+S`.  <hr />- To preview:  <hr />  - Launch `devbox shell`; run `make watch-run`; open localhost link.  <hr />- For review:  <hr />  - Capture full post page using screenshot tools like Cleanshot’s scrolling capture.  <hr />  - Send image to supervisor and @anna for approval.  <hr />- Before publishing:  <hr />  - Commit changes: go to Source Control, sync, stage, and commit with message.  <hr />  - Push to branch.  <hr />- Create GitHub pull request:  <hr />  - Log in to GitHub, find your repository under your profile.  <hr />  - Select your branch, open pull request interface.  <hr />  - Choose the commit, submit pull request, and wait for admin review.","tags":"content guideline instructions","authors":"minhcloud","date":{"days":19786},"category":"playground > notes > misc"},"355":{"file_path":"playground/notes/misc/how-to-recap-a-publication.md","title":"Recapping A publication","description":"Recapping a publication is the work of summarizing its key points, analyzing why it matters, and providing insights or opinions on its content. At Dwarves, we follow a set of must-dos and set expectations for recapping a publication, to ensure we have a clear and insightful summary that can contribute to readers' understanding of the topic.","spr_content":"Recapping a publication involves distilling its core concepts, analyzing its significance, and providing critical insights.  <hr />At Dwarves, structured methods ensure thorough and meaningful summaries.  <hr />Effective recaps require careful reading to understand the main ideas, arguments, evidence, and conclusions.  <hr />Identify and highlight key points that reveal the publication’s importance.  <hr />Start with a brief 2-3 sentence overview capturing main ideas concisely.  <hr />Explain the publication’s significance by discussing its background, purpose, relevance, and contribution to existing knowledge.  <hr />Offer personal insights, opinions, and evaluations—what’s good or bad, its impact, and implications for future work.  <hr />Conclude with a summary of main points and final reflections.  <hr />Expectations emphasize accuracy, clarity, brevity, organization, critical thinking, and ethical attribution.  <hr />Recaps should be straightforward, easy to understand, and faithfully represent the original work.","tags":"communications content guidelines","authors":"nikki","date":{"days":19809},"category":"playground > notes > misc"},"356":{"file_path":"playground/notes/misc/record-reward-sharing-culture.md","title":"Record and reward sharing at Dwarves","description":"Discover how the Dwarves community fosters a culture of continuous learning and knowledge sharing. With a monthly reward pool of up to 2500 ICY, contributors are recognized for sharing valuable insights, especially in areas like AI/LLM, Golang, and more. Get involved and grow with us.","spr_content":"- Dwarves community emphasizes continuous learning and knowledge sharing.  <hr />- Culture fosters individual growth and community connectivity.  <hr />- Learning is central: environment values, rewards knowledge sharing, promotes growth.  <hr />- Organized events and activities encourage participation and recognition.  <hr />- Profits allocated to reward contributions via awards.  <hr />- Monthly ICY pool of 2500 (approx. $4000) rewards active sharers.  <hr />- 70% of ICY pool dedicated to community knowledge sharing across members.  <hr />- Extra valorization for contributions in AI/LLM, Golang, Software Architecture, Blockchain.  <hr />- Expertise in key areas increases reward potential.  <hr />- Participation channels: research links in tech, til, OGIFs, memo submissions.  <hr />- Community members encouraged to contribute ideas, links, notes.  <hr />- Open-source projects prioritized: building productivity tools.  <hr />- Joining build channel promotes collaborative development.  <hr />- Overall goal: sustain a strong, dynamic learning culture with rewards.","tags":"community reward team","authors":"innno_ monotykamary thanh","date":{"days":19971},"category":"playground > notes > misc"},"357":{"file_path":"playground/notes/misc/giving-a-talk-checklist.md","title":"Giving a talk","description":"The checklist presents how to prepare for a talk","spr_content":"Presentation skills hinge on clarity, engagement, coherence, and timing.  <hr />Relevancy depends on audience alignment, actionable insights, topicality, and expertise demonstration.  <hr />Effective preparation involves ensuring information is articulated clearly, maintaining audience interest, following a logical sequence, and delivering content punctually.  <hr />Relevancy assessments require confirming content relevance to team goals, providing actionable data, reflecting current trends, and showcasing deep understanding.","tags":"checklist presentation","authors":"thanh","date":{"days":20038},"category":"playground > notes > misc"},"358":{"file_path":"playground/notes/misc/Knowledge Journey.md","title":"Knowledge Journey","description":"Our process for evaluating and integrating technology is designed to be thorough yet efficient, ensuring we adopt only the most effective tools into our operations. It consists of four key stages: Assess, Trial, Adopt, and Hold.","spr_content":"- Our technology evaluation process is thorough and efficient, emphasizing effectiveness.<hr />- It follows four stages: Assess, Trial, Adopt, Hold.<hr />- **Assess:** initial analysis, evaluates potential and limitations before resource commitment.<hr />- **Trial:** practical testing, assesses usability, impact within controlled projects.<hr />- **Adopt:** confirmed for use, formal integration based on successful trials.<hr />- **Hold:** cautionary halt, prevents risks from outdated or misaligned technologies.<hr />- **Transition to Playbook:** technologies in Adopt stage are reviewed for inclusion.<hr />- **Playbook criteria:** successful in ≥2 projects, approved by all key Labs members.<hr />- **Purpose:** ensure only reliable, effective technologies become standard practices.","tags":"dwarves evaluating-tech internal knowledge labs tech-radar work","authors":"thanh","date":{"days":19682},"category":"playground > notes > misc"},"359":{"file_path":"playground/notes/misc/salary-advance.md","title":"$icy Salary Advance","description":"A short-term credit benefit for full-time peeps.","spr_content":"- Recent post referenced: \"$icy in 2024 plan,\" outlining our roadmap.  <hr />- Launching first 2024 feature: $icy salary advance.  <hr />- Definition: short-term credit benefit for full-time employees.  <hr />- Example: employee earns $5,000/month, eligible for up to 25% ($1,250) advance.  <hr />- Repayment: automatically deducted from next paycheck.  <hr />- Fee: 0.5% service charge.  <hr />- Usage steps:  <hr />  - Contact via 'Fortress' bot DMs.  <hr />  - Type \"?salary advance.\"  <hr />  - Input desired amount in icy.  <hr />  - Confirm and complete.  <hr />- Visual aid: salary-advance.webp.","tags":"dwarves icy","authors":"hnh","date":{"days":19684},"category":"playground > notes > misc"},"360":{"file_path":"playground/notes/misc/vietnam-tech-ecosystem-report.md","title":"Vietnam Tech Ecosystem 2024 Report","description":"The 2024 Vietnam Tech Market Report highlights Vietnam's resilient tech scene, ranking third in Southeast Asia despite a 17% drop in investments. With a booming digital economy expected to reach $43 billion by 2025, the report covers key trends, major players, and new legal updates driving innovation.","spr_content":"- Vietnam's tech market: total investment $529M, -17% YoY; contrasts with global -35%; resilient deal volume and value, rank 3 in SE Asia behind Singapore, Indonesia.  <hr />- Sector growth: Healthcare +391%, Education +107%; active investors nearly 100, led by Singapore and Vietnam; early-stage focus.  <hr />- Exit environment improving: public markets expanding, enhanced stock governance, local conglomerates driving M&A; government policies promoting innovation via tax breaks, tech park support, research funding.  <hr />- Digital economy: fastest in SE Asia, high internet penetration, government initiatives, vibrant startup scene; projected 20% annual growth, reaching $43B by 2025.  <hr />- Investment landscape 2023: despite economic headwinds, Vietnam maintains third SE Asia position; healthcare and education sectors expanding rapidly; key investors from Singapore and Vietnam.  <hr />- Major local and regional VC players: 500 Startups Vietnam (70+ startups, Sky Mavis, Infina), VSV Capital (130+ startups, early-stage focus), VinaCapital Ventures ($100M, fintech, Web3), Zone Startups Vietnam (strategic, seed), Do Ventures (early-stage, fintech, AI), ThinkZone ($60M, multi-sector), Son-Tech ($50M, fintech), Openspace Ventures & Golden Gate Ventures (regional, Vietnam involvement).  <hr />- AI & Fintech leaders: diverse VC presence with focus on early-stage growth, corporate accelerators, and cross-border investments.  <hr />- Blockchain & crypto: prominent APAC firms—Animoca Brands (gaming, NFTs), Foresight Ventures (Singapore, $400M+ assets), HashKey Capital (>$1B assets, active since 2015), Hashed (KR, Terra, Web3), Infinity Ventures Crypto (GameFi, DeFi, $70M fund), IOSG Ventures (Web3, early-stage), NGC Ventures (SG, $400M, Web3 focus), OKX Ventures (blockchain infrastructure, NFTs), Spartan Group (long-term, SG/HK), SevenX Ventures (immersive, $115 investments).  <hr />- Cross-region influences: Singapore-based funds predominantly investing in Vietnam, fostering regional Web3 and fintech ecosystems.","tags":"market-report","authors":"minhkek","date":{"days":19915},"category":"playground > notes > misc"},"361":{"file_path":"playground/notes/misc/peep-nft.md","title":"Claim your Peeps NFT","description":"Peeps NFT is an NFT collection specialized for Dwarves Foundation members. This post will guide you how to earn a peep NFT.","spr_content":"- Peeps NFT is a specialized NFT for Dwarves Foundation members.  <hr />- Grants access to internal communication channels.  <hr />- Provides multiple earning opportunities.  <hr />- Claim process:  <hr />  - Join Dwarves Discord community.  <hr />  - Become a Dwarves member.  <hr />  - Connect wallet via provided link.  <hr />  - Open support ticket and ping @hnh.  <hr />  - Mint the NFT and gain access to internal channels.","tags":"icy nft ops","authors":"minh_cloud","date":{"days":19889},"category":"playground > notes > misc"},"362":{"file_path":"playground/notes/misc/Reward Model & Nomination.md","title":"Reward Model & Nomination","description":"Our Tech Labs is a hub of continuous learning and application of advanced technologies. This program is designed to celebrate contributions at various levels, from enhancing knowledge to contributing to business growth.","spr_content":"- Our Tech Labs: hub of continuous learning and advanced tech application.  <hr />- Program rewards contributions at multiple levels, from knowledge to business impact.  <hr />- Level 1: Knowledge Enrichment.  <hr />  - Eligibility: team notes, analysis, demonstrations.  <hr />  - Reward: 10–50 ICY.  <hr />- Level 2: Project Application.  <hr />  - Eligibility: deploying new tech in projects.  <hr />  - Reward: 100–200 ICY.  <hr />- Level 3: Standardization.  <hr />  - Eligibility: making methods/techniques a standard in Playbook.  <hr />  - Reward: 300 ICY.  <hr />- Level 4: Deal Acquisition.  <hr />  - Eligibility: securing new client deals, driving growth.  <hr />  - Reward: ~0.5% profit share.  <hr />- Monthly Community Call: event for updates, recognition, motivation.  <hr />- Recognition segment: honor awardees publicly on Discord.  <hr />- Goal: foster innovation, excellence, team motivation.","tags":"labs process","authors":"thanh","date":{"days":19682},"category":"playground > notes > misc"},"363":{"file_path":"playground/notes/misc/icy-in-2024.md","title":"$icy in 2024","description":"Quick recap about $icy progress and what's next in 2024.","spr_content":"- Since 2020, $icy integrated into our workflow as a foundational element.  <hr />- 2020: $icy launched as our first community experiment, testing token engagement.  <hr />- 2021: Established icy.so, enabling users to redeem $icy, expanding utility.  <hr />- 2022: $icy became our main reward currency; approximately $20,000 distributed at summit-2022 and doty events.  <hr />- 2023: Introduced `vault`, a dedicated reward channel for our operational team, formalizing internal incentive structures.  <hr />- Future initiatives:  <hr />  - Salary advance: short-term credit for full-time staff, incentivizing commitment.  <hr />  - Discord utility commands: streamline $icy activity and interactions.  <hr />  - Direct bank withdrawals: facilitate cashing out $icy directly to personal accounts.  <hr />  - $icy store: dedicated platform for transactions and exchanges.  <hr />  - Staking $icy: incentivize long-term holding and network participation.  <hr />- All plans are prepped; development phase imminent, inviting collaborative coding efforts.  <hr />- Opportunity: contribute to project development, earn bounties; contact @hnh on Discord.","tags":"community dfg discord icy","authors":"hnh","date":{"days":19684},"category":"playground > notes > misc"},"364":{"file_path":"playground/notes/misc/icy-dfg.md","title":"💠 df protocol, $icy and $dfg","description":"Here's our draft internal map/v0 for 🧊 $icy play, based on our current activities at this borderless software firm...","spr_content":"- 2018 vision: unconventional setup, introduction of 💎 $dfg as participatory ownership, team-driven software innovation, financial independence, shared ownership.<hr />- Gradual decentralization: allocate $dfg to implementers (grind chads), empower owners, foster collective responsibility.<hr />- 2020 development: 🧊 $icy as loyalty points, used for tipping, recognition, cultural reinforcement, appreciation ecosystem.<hr />- 2023 evolution: building a protocol with economic design, integrating concepts like proposals, voting, automation, governance, platform robustness.<hr />- Underlying goal: sustain and grow Dwarves brand, ensure collective benefit, long-term ecosystem health, playful experimentation in borderless software.","tags":"dfg icy internal protocol","authors":"tieubao","date":{"days":19683},"category":"playground > notes > misc"},"365":{"file_path":"playground/notes/misc/How R&D contributes to Performance Review.md","title":"How R&D contributes to Performance Review","description":"Our organization values the research and development (R&D) efforts of our team members and aims to incorporate these contributions into performance reviews. It's important that individual R&D activities not only pursue personal growth but also align with our team and organizational objectives.","spr_content":"- Organization values individual R&D efforts as integral to performance evaluation.  <hr />- R&D pursuits should foster personal growth and align with team and organizational goals.  <hr />- Key factors for R&D performance:  <hr />  - Alignment with team’s strategic objectives for future success.  <hr />  - Relevance to sales and consulting teams’ interests and needs.  <hr />  - Personal topic choice driven by passion, with acknowledgment that not all chosen topics will be on the official list.  <hr />- Progress and impact of selected R&D topics should be communicated regularly to demonstrate their value.  <hr />- R&D goals are to be established collaboratively with team leaders at the outset.  <hr />- Goals include specific research topics and expected outcomes, serving as reference during performance review.  <hr />- Flexibility is encouraged, but changes in research focus require prompt communication and approval.  <hr />- Late changes in research topics may defer performance assessment to the subsequent review cycle for fairness.","tags":"assessment dwarves internal labs performance-review work","authors":"thanh","date":{"days":19682},"category":"playground > notes > misc"},"366":{"file_path":"playground/notes/misc/recording-flow.md","title":"How We Set Up a Recording Workflow for Dwarves Office Hours","description":"This memo is essentially a playbook and recipe on how to record the Discord events.","spr_content":"Dwarves Foundation Office Hours content sharing: capture interest, facilitate community learning.  <hr />Workflow involves dual formats: video (via OBS, YouTube) and audio (via Craig Bot).  <hr />Prerequisites: install OBS Studio, configure Craig Bot.  <hr />Video recording steps:  <hr />- Set OBS window, select screen, configure streaming via Restream, mute auxiliary mic.  <hr />- Start OBS recording and YouTube stream at session start.  <hr />- End session: stop OBS, save, split video into segments.  <hr />Audio recording:  <hr />- Invite Craig Bot, join voice channel, initiate /join command.  <hr />- End session: stop recording, save audio.  <hr />- Transcribe with ChatGPT-4, segment transcriptions matching video parts.  <hr />Purpose: ensure comprehensive recording, facilitate sharing, streamline archival, enable transcription, promote organized content management.","tags":"ops recording workflow","authors":"minh_cloud","date":{"days":19889},"category":"playground > notes > misc"},"367":{"file_path":"playground/notes/misc/how-to-earn-reward-from-staking-dfg.md","title":"How to earn reward from staking DFG","description":"This guide will show you how to use $DFG staking to earn $USDC, cool merch, and more.","spr_content":"- $DFG is a token from Dwarves Foundation, future distribution anticipated.<hr />- $DFG is obtainable on Ethereum, bridgeable to other chains.<hr />- Dwarves established a staking pool on Base for $DFG.<hr />- Stake $DFG on Base to earn rewards, primarily in USDC, exclusive merch, or more.<hr />- Reward formula determines staking benefits, based on APY (~10% annually).<hr />- Pre-requisite steps include:<hr />  - Store tokens in Coinbase Wallet (see setup guide).<hr />  - Transfer ETH via Binance P2P for cross-chain transfer.<hr />  - Withdraw ETH to Coinbase Wallet from Binance.<hr />  - Transfer $DFG from Ethereum to Base network.<hr />- To stake:<hr />  - Access Dwarves Foundation Earning portal, login with Coinbase Wallet.<hr />  - Verify $DFG balance if bridged.<hr />  - Hit \"Stake\", select amount, confirm transactions.<hr />  - Successfully staked $DFG accrues passive rewards.<hr />  - Monitor earnings through \"My Earn\" dashboard.<hr />- To withdraw:<hr />  - Login at Dwarves Foundation Earning.<hr />  - Select \"Unstake,\" specify amount, confirm.<hr />  - Confirm transactions in Coinbase Wallet.<hr />  - Withdrawn $DFG and rewards are returned to wallet.<hr />- Stake and unstake involve multiple wallet confirmations.<hr />- Long-term staking yields compound rewards over time.<hr />- The process emphasizes security, proper wallet use, cross-chain handling, and transaction confirmations.","tags":"dfg icy tutorial","authors":"jack minh minh_cloud","date":{"days":19832},"category":"playground > notes > misc"},"368":{"file_path":"playground/notes/misc/echelon-x-singapore-2024-where-innovations-meet-inspiration.md","title":"Echelon X Singapore 2024: Where Innovations Meet Inspiration","description":"This year’s Echelon X in Singapore was a bustling hub of innovation, bringing together around 10,000 participants. Along with visiting SPGroup, our team also attended Echelon X to have a better understanding of how the tech and startup ecosystem is heading.","spr_content":"Echelon X Singapore 2024 = epicenter of innovation; 10,000 participants, 154 speakers, 50 TOP100 startups, diverse nations >35. Singapore reaffirmed as regional tech & investment hub.  <hr />Visit to SPGroup + participation in Echelon X = insights into ecosystem trajectory.  <hr />2024 mission: reinforce tech ecosystem via resilience + collaboration; sharing knowledge + collective innovation.  <hr />Community—forward-thinkers, leaders, passionate individuals—focused on idea sharing + new pathways.  <hr />Resilience + cooperation = core themes; activities enhance support, funding, networks for startups.  <hr />Sustainability = key; eco-integrated practices align with global, governmental sustainability goals.  <hr />Main topics: AI, government support, future-proofing strategies.  <hr />Market insights: Thailand + Indonesia emerging as tech hubs; Philippines + Indonesia show strong funding growth (+50%, +30%), reaching billions.  <hr />Funding landscape challenges: preference for free products limits revenue; startups seek US/UK/EU markets, facing high costs, intense competition.  <hr />Investor behavior: cautious but optimistic; focus on team quality, disciplined valuations.  <hr />Funding forecast 2024: $14B (+40%), increased deals (+25%) = ecosystem recovery signs.  <hr />Top verticals’ deal values illustrate sector strengths.  <hr />Post-COVID impacts: housing price drops, layoffs (5-20%) persist into Q1 2024; Vietnamese developers consider migration if local conditions remain static.  <hr />AI's prominence: many startups, government addressing AI issues; AI adoption mainly in big tech, with growth rate 35% CAGR reaching $6B in 2028.  <hr />Challenges in AI: data privacy/security, localization costs, ethics, governance.  <hr />SEA tech market: tough landscape with layoffs, high living costs, job insecurity; AI’s growth raises employment concerns.  <hr />Future: new tech drives innovation; ongoing event insights reveal trending directions and strategic needs.  <hr />Post-event sentiment: achievement, insights, valuable connections; current trends + future outlook in SEA tech ecosystem.","tags":"community market-report summit techecosystem","authors":"minh nikki tieubao","date":{"days":19879},"category":"playground > notes > misc"},"369":{"file_path":"playground/notes/misc/memo-publication-workflow.md","title":"Memo Publication Workflow","description":"This guide will help you step-by-step create content and publish on memo.","spr_content":"- Identify the writing field: blockchain, communication, design, engineering, market, security, or writing.  <hr />- Use `playground` directories aligned with the topic.  <hr />- If uncertain, contact Discord supporters for guidance.  <hr />- Set up local environment for memo drafting following the provided setup guide.  <hr />- Learn memo writing, submission, and publishing via the relevant guide.  <hr />- Include mandatory fields in each article: title, description, author, date, tags.  <hr />- Name files in kebab case (e.g., `how-to-write-a-memo.md`).  <hr />- Verify all links locally within the repository.  <hr />- Upload images to `assets` folder; reference accordingly.  <hr />- Follow guidelines for images and screenshots for clarity and formatting.  <hr />- Inform reviewers if article is draft or final.  <hr />- Reviewers improve content: engineering (#tom), communication (#nikki); oversee format/design: @anna.  <hr />- Capture and upload screenshots for review; request feedback from @anna.  <hr />- Collect and work on feedback throughout the publication lifecycle.","tags":"guideline instructions memo","authors":"innno_ minh","date":{"days":19886},"category":"playground > notes > misc"},"370":{"file_path":"playground/notes/misc/how-to-set-up-environment-for-editing-memo.md","title":"How to set up environment to edit memo","description":"This is a guide on how to setup your environment and settings to push content to our notes website, memo.d.foundation.","spr_content":"- SSH key enables secure authentication using a key pair: public and private.<hr />- Public key is shared with external services (e.g., GitHub); private key remains secret locally.<hr />- During SSH connection, server compares fingerprint of your public key with its record.<hr />- Correct passphrase (if set) unlocks private key for authentication.<hr />- Generating SSH key involves three steps: create key pair, save private key, submit public key to GitHub.<hr />- Install Visual Studio Code from [official site](https://code.visualstudio.com/).<hr />- Install Devbox by opening Terminal in VSCode (`Control + ~`) and running: `curl -fsSL https://get.jetpack.io/devbox | bash`.<hr />- To clone GitHub repo, two methods:<hr />  - Method 1: Use terminal commands and set global Git configs:<hr />    - Run `xcode-select`.<hr />    - Install Git Credential Manager, choosing appropriate package for architecture.<hr />    - Configure user email and name:<hr />      ```<hr />      git config --global user.email \"you@example.com\"<hr />      git config --global user.name \"Your Name\"<hr />      ```<hr />    - Clone repo:<hr />      ```<hr />      git clone https://github.com/dwarvesf/memo.d.foundation<hr />      ```<hr />  - Method 2: Use VSCode's interface:<hr />    - Connect GitHub account.<hr />    - Clone via \"Clone Repositories\" > \"Clone from GitHub\" and search repo URL or name.<hr />- Set up environment:<hr />  - Open the cloned `memo.d.foundation`.<hr />  - Run submodule updates:<hr />    ```<hr />    git submodule update --init --recursive<hr />    git submodule update --recursive --remote<hr />    git submodule foreach --recursive 'git checkout main || git checkout master'<hr />    ```<hr />  - Create \"content\" folder within `node.d.foundation`.<hr />- Use Devbox:<hr />  - Launch with `devbox shell`.<hr />  - Build site preview with `make watch-run`.<hr />  - Access localhost link; refresh to view real-time changes.<hr />- Troubleshoot:<hr />  - If localhost error, rerun `devbox shell` and `make watch-run`.<hr />- Future topic: How to push content to `memo.d.foundation`.","tags":"content guideline instructions","authors":"minhcloud","date":{"days":19796},"category":"playground > notes > misc"},"371":{"file_path":"playground/topics/pm/project-management.md","title":"Project Management","description":"Learn essential project manager skills like organizing tasks, managing client expectations, leading teams without micromanaging, anticipating problems, and keeping clients informed for smooth project success.","spr_content":"**Project Management Core Principles SPR**<hr /><hr />- Start immediately after project sealing: assign start date, deadline, team.<hr />- Master working methodologies, processes, communication channels.<hr />- Maintain organization: keep everything neat, in designated places, up-to-date.<hr />- Document tasks immediately: avoid loss, unactioned items, disorganization.<hr />  <hr />**Record Keeping and Documentation**<hr /><hr />- Log every meeting, conversation in _Client Communication_ block.<hr />- Record change requests, feedback, updates to preserve info.<hr />  <hr />**Expectations Management**<hr /><hr />- Recognize managing expectations is intuitive, not formulaic.<hr />- Deliver on time; keep communication transparent and open.<hr />- From outset, clarify client responsibilities: feedback punctuality, content delivery, accessibility.<hr />- Transfer some pressure to clients via clear expectations.<hr />  <hr />**Client-Connection Boundaries**<hr /><hr />- Act as a buffer against client pressures on team.<hr />- Reassure clients; prevent undue stress.<hr />- Encourage direct team-client issue resolution but intervene if necessary.<hr />- Schedule calls if needed; prevent conversations spiraling.<hr />  <hr />**Team Support and Readiness**<hr /><hr />- Ensure team always has necessary resources, docs, info.<hr />- Minimize waiting time; streamline access to data.<hr />- Anticipate obstacles: foresee issues, adapt planning proactively.<hr />  <hr />**Progress Monitoring**<hr /><hr />- Maintain comprehensive project awareness.<hr />- Track team progress regularly.<hr />- Conduct Mid-Sprint check-ins: identify blockers, re-align efforts.<hr />- Adjust plans based on progress data.<hr />  <hr />**Autonomy and Trust**<hr /><hr />- Avoid micromanagement: resist controlling tendencies.<hr />- Trust team members’ expertise; let them work autonomously.<hr />- Recognize micromanagement erodes trust, damages morale.<hr />- Emulate responsible leadership: control selectively, supportably.<hr />  <hr />**Client Communication Discipline**<hr /><hr />- Keep clients informed: over-communicate, don’t assume knowledge.<hr />- Share updates proactively: daily greetings, task previews, progress summaries.<hr />- Never leave messages unanswered.<hr />- Lead by example: demonstrate responsiveness.<hr />- Consider end-of-sprint showcase calls.<hr />  <hr />**Summative Metaphors and Analogies**<hr /><hr />- Organizational discipline as “neat warehouse”: everything in its place, easily accessible.<hr />- Documentation as “safety net”: prevents information loss.<hr />- Managing expectations as “sensorial intuition”: feel client’s needs, adjust tone.<hr />- Buffer role as “shock absorber”: protects team from external pressure.<hr />- Anticipation as “early warning system”: detect problems before they escalate.<hr />- Progress tracking as “dashboard”: real-time status visualization.<hr />- Trust as “gardening”: nurturing autonomy, avoiding over-control.<hr />- Communication as “bridge”: connecting team, client, and project flow.<hr />","tags":"operation pm","authors":"","date":{"days":18273},"category":"playground > topics > pm"},"372":{"file_path":"playground/topics/pm/estimation-in-agile.md","title":"Estimation In Agile","description":"Learn how to estimate work using story points, time, and planning poker for accurate project planning, with tips on improving quality through adjusted estimates and workflow practices.","spr_content":"- Estimation is predicting a usable approximate value from incomplete or uncertain data, leveraging best available information.  <hr />- It applies to scenarios with uncertainty, providing functional approximations despite data issues.  <hr />- Two primary estimation units:  <hr />  - Story points measure overall effort, including work scope, complexity, risk, uncertainty; values follow Fibonacci sequence (0,1,2,3,5,8,13,21,34,55,89) due to larger items’ inherent uncertainty.  <hr />  - Time estimates predict the real duration needed, formatted like \"eg. 4d 12h,\" assuming optimal conditions without interruptions.  <hr />- Planning poker is the chosen estimation approach:  <hr />  - Consensus-based, gamified, aims to prevent influence through simultaneous reveal of estimates.  <hr />  - Moderated by a non-participating facilitator, with team members showing their estimates simultaneously after discussion.  <hr />  - Multiple rounds (up to 3) for convergence, else moderator decides based on discussion, not votes.  <hr />  - No mention of sizes during discussions to avoid bias.  <hr />- Experimentation focuses on enhancing quality assurance via new workflows, margins for error, and focused testing.  <hr />- Post-estimate, moderator increases the estimate to the next Fibonacci number to account for safety margin (e.g., team’s 3 becomes moderator’s 5).  <hr />- If increased estimate exceeds 13, the story is split into smaller parts, establishing a norm for manageability.  <hr />- Quality process improvements aim at thorough testing, code review, and alignment with specifications, reinforcing estimation buffers through the Fibonacci margin.","tags":"agile","authors":"","date":{"days":16843},"category":"playground > topics > pm"},"373":{"file_path":"playground/topics/pm/our-daily-standup-format.md","title":"Our Daily Standup Format","description":"Create clear daily reports with this simple template to track tasks, progress, and blockers efficiently for your team’s smooth project management.","spr_content":"- Team: Your team<hr /><hr />- Yesterday<hr />  + + [Task ID]: Summarize work on the task yesterday; indicate task status.<hr />  ++ Mention other tasks or participation without specific names.<hr /><hr />- Today<hr />  + + [Task ID]: Define planned work for today.<hr />  ++ Include non-named tasks or participation.<hr /><hr />- Blockers<hr />  + + [Task ID]: State what is blocking progress.","tags":"scrum","authors":"","date":{"days":17735},"category":"playground > topics > pm"},"374":{"file_path":"playground/topics/pm/definition-of-done.md","title":"Definition Of Done","description":"Definition of Done (DoD) is a checklist ensuring product features meet quality and functionality standards before release, helping teams clearly confirm when work is complete.","spr_content":"- DoD defines complete, measurable criteria for \"done\" product increments.  <hr />- Meeting DoD ensures functionality, quality, and readiness for release.  <hr />- Failure to meet DoD at sprint end excludes work from velocity and release considerations.  <hr />- Confirming DoD compliance guarantees unambiguous \"done\" status for features.  <hr />- The checklist is primarily for engineers, designed to evolve over time.  <hr />- Automated tests are written and successful.  <hr />- Code undergoes peer review.  <hr />- Feature has been tested against acceptance criteria.  <hr />- Feature is release-ready.","tags":"agile","authors":"","date":{"days":16845},"category":"playground > topics > pm"},"375":{"file_path":"playground/topics/design/domain-glossary.md","title":"Domain Glossary","description":"Discover how Retail 2.0 enhances shopping with AR, VR, AI, and personalized experiences, while open banking uses APIs to securely share financial data and transform the banking industry.","spr_content":"- Retail 2.0 focuses on enhancing consumer engagement in physical stores via online and mobile integration.  <hr />- It uses big data for personalized, contextual, real-time brand-consumer conversations.  <hr />- Technologies include AR, VR, store apps, innovative payments, and AI.  <hr />- Personalized experience tailors products/services to each customer’s needs.  <hr />- Simplified authentication reduces user friction, boosting adoption and security.  <hr />- Retail 3.0 supports offline-online retail synergy (O2O), enabling data standardization and foundation for big data and Retail 4.0.  <hr />- Retail 4.0 represents advanced omnichannel retail evolution.  <hr />- O2O historically emphasized online prompts to visit physical stores; now includes online payments with offline pickup and returns.  <hr />- Open banking provides third-party access to consumer bank data via APIs, enabling account/networking across institutions.  <hr />- It fosters financial innovation, transforming banking competitiveness and user experience.  <hr />- Open banking offers growth opportunities but risks data sharing and security.","tags":"design","authors":"","date":{"days":18371},"category":"playground > topics > design"},"376":{"file_path":"playground/topics/design/competency-mapping.md","title":"Competency Mapping","description":"Discover a detailed competency framework for user research, design, usability, metrics, prototyping, client management, and development to assess and develop skills across 13 key UX and product areas.","spr_content":"Skills and actions serve as indicators of competency levels ranging from 0 (unfamiliar) to 5 (expert).  <hr />Levels detailed as:  <hr />0 — No understanding of competency.  <hr />1 — Recognizes importance, basic understanding.  <hr />2 — Demonstrates with supervision; initial application.  <hr />3 — Performs independently; consistent application.  <hr />4 — Supervises, mentors, or encourages others; advanced application.  <hr />5 — Innovates; contributes on a global or strategic scale.  <hr />  <hr />**General User Research**:  <hr />- Recognize ongoing importance beyond initial design.  <hr />- Select appropriate methods, craft research plan.  <hr />- Communicate insights structurally; guarantee future accessibility.  <hr />- Write hypotheses; control and measure variables.  <hr />- Identify target users; recruit from specified audience.  <hr />  <hr />**User Needs Evaluation**:  <hr />- Acquire domain knowledge (competitive, cultural).  <hr />- Summarize needs via personas, JTBD (Jobs-To-Be-Done).  <hr />- Map and communicate customer journeys; highlight value points.  <hr />- Conduct field research; plan, structure interviews.  <hr />- Extract deeper goals beyond surface opinions; share findings.  <hr />  <hr />**Usability Evaluation**:  <hr />- Apply heuristics to predict UI issues pre-testing.  <hr />- Design and execute usability tests; document results.  <hr />- Analyze data; prioritize problems based on evidence.  <hr />  <hr />**Metrics and Measurements**:  <hr />- Develop aligned measurement plans (AARRR, HEART).  <hr />- Create surveys; plan and execute A/B tests.  <hr />- Collaborate with analysts; interpret quantitative and qualitative data.  <hr />- Understand analytics tools’ limitations; implement with technical teams.  <hr />  <hr />**Information Architecture**:  <hr />- Conduct card sorting; perform tree testing.  <hr />- Analyze journey maps for IA development.  <hr />- Iteratively break down IA changes considering resources.  <hr />  <hr />**Prototyping**:  <hr />- Structure and label content; create flow diagrams.  <hr />- Explore multiple solutions iteratively.  <hr />- Build interactive prototypes for testing and demonstration.  <hr />  <hr />**Interaction Design**:  <hr />- Choose suitable UI paradigms (guided vs. free).  <hr />- Select and apply pattern components; communicate specifications.  <hr />- Follow and evolve HCI standards; incorporate best practices.  <hr />- Use animations to enhance usability; work with developers on feasibility.  <hr />  <hr />**Visual Design**:  <hr />- Apply design principles (contrast, alignment, repetition).  <hr />- Use systems (typography, icons, colors) for layouts.  <hr />- Create supportive illustrations; uphold branding.  <hr />- Develop motion design; manage and contribute to design systems.  <hr />  <hr />**Writing**:  <hr />- Produce clear micro and macro copy; maintain stylistic consistency.  <hr />- Ensure multilingual content is translatable; harmonize with visuals.  <hr />  <hr />**Client Management**:  <hr />- Plan and prioritize workflows for efficiency.  <hr />- Present results clearly; manage stakeholder expectations.  <hr />- Advocate for design thinking; enhance client UX capabilities.  <hr />  <hr />**Professional Cooperation**:  <hr />- Adapt methods when encountering obstacles.  <hr />- Collaborate effectively; critique constructively.  <hr />- Promote team growth; foster healthy relationships.  <hr />- Simplify collaboration with developers; provide precise specs.  <hr />  <hr />**Business and Strategy**:  <hr />- Support business decisions; understand models and monetization.  <hr />- Articulate UX value; measure impact.  <hr />- Support feature prioritization aligning with strategic goals.  <hr />  <hr />**Development**:  <hr />- Web (HTML/CSS, JS); Android; iOS competencies.  <hr />  <hr />**Workshop Facilitation**:  <hr />- Select methods/tools; adapt plans as needed.  <hr />- Manage personalities; communicate assertively.  <hr />- Synthesize information; guide towards decisions and actions.  <hr />- Ensure participant understanding; facilitate follow-up.","tags":"design","authors":"","date":{"days":17622},"category":"playground > topics > design"},"377":{"file_path":"playground/topics/design/three-levels-of-design.md","title":"Three Levels Of Design","description":"Learn how Don Norman’s three levels of design—visceral, behavioral, and reflective—shape user experience and determine whether a product succeeds or fails.","spr_content":"- Don Norman identifies three interconnected levels of design: Visceral, Behavioral, and Reflective.<hr />- These levels collectively determine the success or failure of a product.<hr />- **Visceral Level** is about first impressions, attraction, and immediate emotional impact.<hr />  - First impression sets the tone; great onboarding communicates product purpose and appeals instantly.<hr />  - Attractiveness causes immediate attention; \"Wow\" factor triggers quick allure.<hr />  - Immediate emotional response influenced by design elements, feel, and sensual experience.<hr />- **Behavioral Level** concerns user experience and usability.<hr />  - Poor UX undermines product value, causing frustration and abandonment.<hr />  - Understanding user interactions and feedback is essential for designing intuitive, satisfying experiences.<hr />  - Expectations are critical; products must deliver promised functionalities reliably.<hr />- **Reflective Level** relates to emotional memory, attachment, and overall perception.<hr />  - Joyful experiences create lasting positive memories.<hr />  - Users develop relationships; liking fosters pride and attachment.<hr />  - Dislike leads to disuse and rejection.<hr />  - The overall impression influences continued use and recommendations.","tags":"design","authors":"","date":{"days":17611},"category":"playground > topics > design"},"378":{"file_path":"playground/topics/design/design-workflow.md","title":"Design Workflow","description":"Learn how to improve product design with user research, job stories, guerrilla usability testing, wireframing, UI principles, prototyping, and design systems for consistent and effective user interfaces.","spr_content":"- Research phase aims to identify problems based on input from stakeholders and users.  <hr />- Quantitative research measures measurable data like analytics, behavioral patterns, and statistics about user groups.  <hr />- Qualitative research explores feelings, motivations, and user experience insights, gained through interviews and observations.  <hr />- Provisional personas can be created from research insights to represent potential user archetypes.  <hr />- Job stories clarify user needs: situational context, motivation, and desired outcome.  <hr />- Scenario writing models how users will behave in real situations based on job stories.  <hr />- Guerrilla usability testing involves quick, impromptu testing scenarios asking users to imagine situations and perform tasks.  <hr />- Statistical data from tests helps prioritize pain points.  <hr />- Post-Its, affinity mapping, and 2x2 matrix assist in categorizing and prioritizing pain points.  <hr />- Flowcharts visualize sequences of user actions within complex systems.  <hr />- Sketch wireframes with pencils promote quick iteration, inclusivity, and feedback; tools like Balsamiq can be used for low-fidelity prototypes.  <hr />- UI design principles focus on grids, hierarchy, typography, icons, and colors to create engaging interfaces.  <hr />- Color use in UI follows frameworks emphasizing readability, accessibility, and emotional impact.  <hr />- Typography choices should consider readability, line length, and responsiveness.  <hr />- Icons enhance usability with attention to visual power and clarity.  <hr />- Documentation and presentation are crucial for clear communication; writing helps clarify decisions and rationale.  <hr />- Prototypes speed up testing and feedback cycles, avoiding delays in development.  <hr />- Establishing a design system ensures consistency across the product, aiding development, using tools like Sketch or Figma.  <hr />- Design guidelines support the development team in maintaining visual and functional coherence.  <hr />- Use tools like Marvel for interactive prototypes and Figma for general design reviews.  <hr />- Feedback should be constructive, aligned with product goals, and not taken personally.","tags":"design","authors":"","date":{"days":17612},"category":"playground > topics > design"},"379":{"file_path":"playground/topics/design/the-principle-of-spacing-in-ui-design-part-2.md","title":"The Principle Of Spacing In Ui Design Part 2","description":"Learn the best UI design spacing tips for vertical and horizontal elements, including line-height, paragraph spacing, input fields, and icon alignment to improve readability and user experience.","spr_content":"- Vertical spacing within paragraphs depends on line-height, commonly starting around 1.5, adjusted for hierarchy (titles 1.2, subtitles 1.3, body 1.5).  <hr />- Rely on proportional line-height; avoid uniformity across all text types to prevent mistakes.  <hr />- Paragraph spacing equals font size for intuitive spacing; do not rely on Enter key for spacing—use dedicated paragraph margin.  <hr />- List item spacing should differentiate groups, not just uniform margins, to clarify data structure.  <hr />- Input fields need deliberate spacing; equal spacing may obscure hierarchy, while increased space enhances legibility.  <hr />- Start with larger whitespace; iteratively reduce until pleasing; excessive white space can yield elegant simplicity.  <hr />- Horizontal component spacing favors multiples of 4px, commonly 16px, aligning with font size and scaling system.  <hr />- Component spacing within form groups should differ from label spacing, establishing clear visual association.  <hr />- Horizontal and vertical spacing for icons and components should be more around the group margin than within, ensuring clarity.  <hr />- Use 8px spacing between icon components for consistent, adaptable UI connections.  <hr />- Effective spacing enhances readability, supports information hierarchy, and streamlines developer implementation.  <hr />- A limited, rule-based spacing system fosters design consistency and efficiency.","tags":"design technique","authors":"","date":{"days":17836},"category":"playground > topics > design"},"380":{"file_path":"playground/topics/design/getting-started-with-webflow.md","title":"Getting Started With Webflow","description":"Learn how to design responsive, high-quality websites quickly with Webflow’s no-code platform, featuring visual design tools, CMS, hosting, and easy animations for faster web development.","spr_content":"- No-code platforms simplify web development, shortening timelines and reducing misunderstandings between designers and developers.<hr />- Webflow combines web design, CMS, and hosting into one platform.<hr />- The Designer is a visual, standards-based web design tool producing clean code; suited for prototyping and initial design.<hr />- The CMS manages repetitive content types via Collections, facilitating content structuring without code.<hr />- Hosting, backed by AWS and Fastly, ensures speed, reliability, security (SSL/HTTPS), and integrated features like form management and responsive images.<hr />- Initial setup involves configuring fonts, project name, hosting, domain, SEO, and analytics.<hr />- The Toolbar contains selectors (components), spacing controls (padding, margin), layout options, typography, and styling effects.<hr />- Navigators should be used to name and organize Reusable Components, enabling better responsiveness and editing.<hr />- Website structure: Header, Body, Footer.<hr />- Header often features a NavBar with logo, menu, and possibly a CTA; can be added via Cmd+K search.<hr />- Body divided into sections; organized with grids, div blocks, and responsive containers.<hr />- Footer includes social links, contact info, with layout control for equal spacing and responsiveness.<hr />- Responsiveness is managed by adjusting layout, images, spacing for different breakpoints by starting from a Base screen.<hr />- To prevent image distortion, embed images in div blocks for automatic responsiveness.<hr />- Animations can be default or custom; Webflow offers extensive animation tools, with tutorials available.<hr />- Final output benefits from Webflow’s rapid design capabilities despite occasional preview instability.<hr />- Webflow empowers faster, high-quality website development merging design and no-code approaches, ideal for product designers seeking efficiency.","tags":"nocode","authors":"","date":{"days":18650},"category":"playground > topics > design"},"381":{"file_path":"playground/topics/design/writing-content-for-multimedia-guidelines.md","title":"Writing Content for Multimedia Guidelines","description":"To help all our Dwarves team members, create original, helpful, and consistent writing across various platforms, we've put together this content guideline as a reference whenever we're writing for Dwarves.","spr_content":"- Communication shapes brand perception, builds connections, and shares knowledge.<hr />- Words influence how people see and think about a brand; enough context aligns understanding.<hr />- Dwarves prioritizes high-quality, consistent writing tailored for people first, products second.<hr />- Setting clear writing goals: inform, connect, educate, express, entertain, inspire, learn.<hr />- \"Inform\": craft brand personality, clarity, and message clarity.<hr />- \"Connect\": evoke emotional bonds, create impressions.<hr />- \"Educate\": share knowledge, promote growth, enable learning.<hr />- \"Express\": confidently showcase expertise, perspective, and unbiased insights.<hr />- \"Entertain\": simplify complex concepts, make learning enjoyable.<hr />- \"Inspire\": uplift, foster positivity, celebrate progress, motivate growth.<hr />- \"Learn\": view content creation as a learning journey, solicit feedback, improve.<hr />- Use active voice: direct, concise, engaging; avoid passive constructions.<hr />- Incorporate your point of view as a conversation; address the audience directly (\"you\") and acknowledge others’ contributions.<hr />- Content must be scannable: short paragraphs, hierarchical importance, clear structure.<hr />- Calls to action should be audience-specific, timely, relevant, industry-aware, and compelling.<hr />- Emojis are acceptable when fitting, used sparingly to add interest, not overwhelm.<hr />- Limit exclamation and question marks; use expressive language instead.<hr />- Clarify technical terms in simple language for broad understanding.<hr />- Use tags and hashtags accurately to enhance content reach.<hr />- Always respect copyright; credit owners or seek permission for non-commercial content.<hr />- Review thoroughly before finalizing; default to seeking help if multiple guidelines are missed.<hr />- Allocate time for reflection: monitor performance, seek peer feedback, identify improvement areas, stay curious.<hr />- Maintain an authentic, skilled, trustworthy voice as a knowledgeable partner.<hr />- Adjust tone to suit context: casual and sincere generally, with sensitivity to appropriateness.<hr />- Balance humor and formality to protect brand integrity.<hr />- Aim for relatable content to maximize audience engagement and trust.","tags":"content guideline instructions","authors":"innno_ nikki","date":{"days":19846},"category":"playground > topics > design"},"382":{"file_path":"playground/topics/design/good-design-understanding.md","title":"Good Design Understanding","description":"Learn what makes good UX and UI design by exploring key factors like usability, accessibility, credibility, color, typography, and layout to create effective, user-friendly digital products.","spr_content":"- Good design integrates aesthetics with functionality, performance, conversion, astonishment, and purpose fulfillment.  <hr />- Multiple perspectives are necessary to evaluate good design; it defies finite measurement.  <hr />- User experience (UX) centers on understanding users: needs, values, abilities, limitations, and aligning with business goals.  <hr />- UX best practices enhance user interactions and perceptions of products and services.  <hr />- Good UX exemplifies ease, clarity, and relevance; bad UX often results from neglecting user needs or accessibility.  <hr />- The seven influential factors of UX: useful, usability, accessibility, desirability, credibility, findability, and value.  <hr />- Useful design must fulfill user needs; without purpose achievement, it fails as good design.  <hr />- Usability entails ease of learning, efficiency, and simplicity; it minimizes user effort.  <hr />- Accessibility ensures equitable use by all, addressing sight, hearing, touch, and cognitive impairments via multimodal interactions.  <hr />- Desirability depends on solving meaningful pain points and involves visceral (appearance/touch/sound), behavioral (functionality), and reflective (meaning, message) levels.  <hr />- Credibility fosters trust: promises kept, results shown, consistent voice, context-awareness, smooth transitions, guiding not dictating, visual-first explanations, simplicity, and user engagement.  <hr />- Findability guarantees products and content are easy to locate, critical for user task success.  <hr />- Value signifies enriching user lives and delivering benefits to both users and the business; without it, products underground relevance.  <hr />- User interface (UI) design emphasizes ease, pleasure, and clarity in graphical and multimodal interfaces.  <hr />- Color schemes follow the 60-30-10 rule for balance; color meanings evoke emotions and cultural associations.  <hr />- Contrast in color enhances UI element visibility and readability; monochromatic schemes risk dullness and illegibility.  <hr />- Typography impacts readability: hierarchy directs reading flow; contrast, line height, letter spacing, line length, and font size all contribute to legibility.  <hr />- Layout involves organizing visual objects to support aesthetics and usability, influencing first impressions and user navigation.  <hr />- Layout principles: grid, white space, emphasis/scale, balance to create engaging and functional design.  <hr />- Consistency accelerates user familiarity, learning, and trust, forming a core principle underpinning effective design.","tags":"design","authors":"","date":{"days":17623},"category":"playground > topics > design"},"383":{"file_path":"playground/topics/design/design-better-mobile-application.md","title":"Design Better Mobile Application","description":"Explore key differences between iOS and Android operating systems for UX/UI designers, including performance, development, privacy, and app platforms to create better mobile applications.","spr_content":"- Two main mobile OS: iOS and Android, analyzed through personal research for UX/UI design.  <hr />- Objective: Design apps that maximize user comfort and experience.  <hr />- Privacy: iOS offers superior privacy; limits adjustments; exclusive ecosystem.  <hr />- Android is open-source (AOSP), allowing greater customization but less privacy control.  <hr />- Hardware: iOS optimizes hardware, ensures stability, high compatibility; Android devices often lag, freeze.  <hr />- Performance: iOS manages RAM efficiently, minimal errors; Android slower, prone to errors.  <hr />- App Upload: iOS requires longer (~7 days) due to manual review; Android faster via automation.  <hr />- Updates: iOS updates are instant across devices, enabling seamless synchronization; Android updates vary, potentially skipped, prompting device upgrades.  <hr />- Languages supported: iOS >100 languages; Android ~34.  <hr />- Development tools: iOS uses Xcode; Android uses Android Studio, now supporting cross-platform coding.  <hr />- Programming languages: iOS in C, C++, Java; Android in Objective-C, C++.  <hr />- Open source: iOS kernel is proprietary (Darwin); Android kernel and UI open source.  <hr />- Development cost: iOS more affordable; Android more expensive, varies by device model.  <hr />- App types:  <hr />  - Native: platform-specific, high performance, limited cross-compatibility.  <hr />  - Web-based: browser-based, universal, limited offline capabilities.  <hr />  - Hybrid: web components inside native containers, combines benefits.  <hr />  - Cross-platform: single codebase for multiple OS, cost-effective, with some trade-offs.  <hr />- Tips for app design:  <hr />  - Follow Human Interface Guidelines per platform—Google Material Design, iOS Human Interface.  <hr />  - Collaborate with developers for insight and flexibility.  <hr />  - Design component structure: tap targets, navigation, primary/secondary actions, buttons, controls, patterns, icon sizes, search, tabs—ensure consistency and usability across iOS and Android.","tags":"design","authors":"","date":{"days":18383},"category":"playground > topics > design"},"384":{"file_path":"playground/topics/design/six-things-i-extracted-from-design-thinking.md","title":"Six Things I Extracted From Design Thinking","description":"Discover how applying Design Thinking in everyday life enhances problem solving, decision making, and adaptability with practical tips on gathering information, organizing data, and embracing change.","spr_content":"- Minh Truong is a self-taught UI/UX designer with 2 years of experience, currently at Dwarves Foundation.  <hr />- His core goals are problem-solving, creativity, and productivity.  <hr />- He is deeply interested in applying and understanding Design Thinking beyond professional contexts.  <hr />- Reading \"Design Thinking for Everyday Life\" by Amira Budi Mutiara broadened his perspective and sparked curiosity.  <hr />- Six months of practical application of Design Thinking yielded positive personal and professional changes.  <hr />- Design Thinking is a non-linear, flexible process often misunderstood as rigid.  <hr />- Early attempts to apply it as a fixed formula limited problem-solving scope, solving only obvious issues.  <hr />- In team discussions, consensus exists that mindful flexibility makes Design Thinking highly effective for work and life.  <hr />- Essential to success: keep an open, curious mindset to learn and gather information from all sources, including everyday conversations and media.  <hr />- Information is everywhere; collecting multiple perspectives enhances understanding and reduces fear of the unknown.  <hr />- External aids and systematization (e.g., notes, Zettelkasten, Obsidian) augment human cognition and understanding of complex data.  <hr />- Organizing data visually and relationally sparks new ideas and insights, aiding comprehension.  <hr />- Decision-making is influenced by personal biases rooted in upbringing, culture, beliefs; awareness reduces bias.  <hr />- Relying on data and context supports more unbiased, suitable decisions.  <hr />- Testing and feedback are crucial for improving decisions; failure is part of innovation and growth.  <hr />- In a rapidly changing world, adaptiveness is vital; decisions should evolve with circumstances.  <hr />- Reframe problems as opportunities; focus on goals and continuous improvement instead of fixed solutions.  <hr />- Design Thinking is a mindset and lifestyle, applicable anywhere, anytime, not limited to professional settings.  <hr />- Key takeaways: information surrounds us, data becomes helpful with the right methods and tools, diverse perspectives reveal hidden opportunities, solutions are always evolving.  <hr />- Engagement: invites community feedback via Discord and email, emphasizing openness and continuous learning.","tags":"design-thinking","authors":"","date":{"days":18731},"category":"playground > topics > design"},"385":{"file_path":"playground/topics/design/the-correct-way-to-build-kpi.md","title":"The Correct Way To Build Kpi","description":"Discover how mindful meditation can transform your view on KPIs, promoting positive communication and reducing workplace stress for a healthier business environment.","spr_content":"- LLMs embed knowledge, abilities, concepts in latent space.<hr />- Priming words activate internal neural states akin to associative cues in humans.<hr />- LLMs process complex ideas through minimal succinct statements representing associations, metaphors, assertions.<hr />- Human retreats as metaphors for mental hygiene, balancing energy, reclaiming focus.<hr />- Meditation as sweet escape from life's chaos, including work-related stress.<hr />- Dharma talks explore abstract concepts like energy, emphasizing perception and perspective.<hr />- Energy has positive and negative interpretations, context-dependent.<hr />- KPI symbolizes organizational goals, often perceived as stressors or threats.<hr />- KPI creation is hierarchical, top-down; limited employee voice.<hr />- True KPI involves consensus across management levels; mutual interests.<hr />- Ideal KPI is positive, engaging, challenge-based, not stress to break spirit.<hr />- Clear communication prevents KPI-induced frustration; fosters understanding.<hr />- Business tensions mirror natural, neither good nor bad; serves as necessary stress.<hr />- Competitive pressures are akin to pressure-to-diamond metaphor; within expectations easier to accept.<hr />- Embedding mindfulness into business communication transforms KPI perceptions.<hr />- Employee happiness, satisfaction, justification are essential for sustainable operation.<hr />- Mindful messaging reduces negativity of organizational metrics.<hr />- Meditative lifestyle balances business realities with inner calm.<hr />- Core message: integrating mindfulness enhances organizational health and human well-being.","tags":"productivity tips","authors":"","date":{"days":18569},"category":"playground > topics > design"},"386":{"file_path":"playground/topics/design/ui-design-best-practices-dwarves.md","title":"Ui Design Best Practices Dwarves","description":"Learn essential Figma best practices for designers to ensure smooth handovers to developers, including version control, layer management, naming conventions, and effective communication for high-quality UI projects.","spr_content":"- Communication between designers and developers hinges on shared language protocols, bridging distinct \"languages\" to ensure clarity and efficiency.<hr />- Clear protocols reduce guesswork, save time, and uphold quality standards promised to clients.<hr />- Design handover practices must be concise, accessible, and evolve with new insights.<hr />- File organization should follow structured versions: Release (delivered designs per roadmap), Final (complete, future-programmed designs), In Progress (ongoing work), Draft (initial ideation), Archive (reference).<hr />- Only designers modify Figma files; developers comment and review.<hr />- Layers should be grouped by function/section; assets grouped for SVG export.<hr />- Present user flows as contextual stories with characters and data; use notes for complex explanations following Cause → Consequences → Design Solution.<hr />- Example: Hotel booking story illustrating availability logic.<hr />- Utilize Design System Files to clarify components; manage pages and master components systematically.<hr />- Color naming conventions differ: designers label by function (Primary, Secondary, Disabled), developers by light/dark levels (100, 200, 300).<hr />- When updating color palettes, inform developers to synchronize code.<hr />- Reuse and adapt existing Design System files at project start; finalize UI in Design System before transferring to main UI files.<hr />- New conventions are added iteratively based on ongoing designer-developer collaboration challenges.","tags":"design process","authors":"","date":{"days":18590},"category":"playground > topics > design"},"387":{"file_path":"playground/topics/design/understanding-an-application-design.md","title":"Understanding An Application Design","description":"Learn how to design web applications by choosing the right project type, rendering technique, atomic components, and frameworks like Next.js or Ant-design for fast, SEO-friendly websites.","spr_content":"Application design foundational concepts  <hr />- Web projects include: admin dashboard, client app (listing-focused), landing page.  <hr />- Critical factors: project type, SEO needs, design maturity (sketch/mockup/final), development cost, user base size, responsiveness.  <hr />- Rendering techniques: SSR (SEO-friendly), hybrid, client-side (SPAs, less SEO).  <hr />- Atomic components: color, font, grid, typography, image, heading, content, link, button.  <hr />- Framework choice: accelerates productivity with presets but increases bundle size and complexity; building from scratch offers performance and flexibility but less efficiency.  <hr />- Recommended frameworks: Ant-design (admin, desktop, large bundle), Tailwind CSS, Bootstrap, Next.js.  <hr />- Use User-Agent to optimize platform-specific rendering.","tags":"design","authors":"","date":{"days":18817},"category":"playground > topics > design"},"388":{"file_path":"playground/topics/design/design-tips-tricks.md","title":"Design Tips Tricks","description":"Discover key UX design principles to create user-friendly forms, avoid common product design mistakes, and simplify online checkout processes for better user experience and higher conversion rates.","spr_content":"Design principles emphasize clarity, simplicity, and user control in form & product interfaces.  <hr />Must-do form principles include consistent layout, minimal fields, clear labels, inline validation, and logical flow.  <hr />Common UX mistakes involve neglecting user context, overcomplicating interfaces, inconsistent design, and ignoring feedback.  <hr />Online checkout challenges stem from complex steps, hidden costs, mandatory account creation, and lack of trust signals.  <hr />Simplifying checkout involves reducing steps, transparent info, guest options, and trust-building cues.  <hr />Effective UX requires aligning interface design with user goals, minimizing cognitive load, and guiding actions intuitively.  <hr />Associations: form usability depends on predictability; checkout success hinges on transparency & frictionless path.  <hr />Metaphor: UX design is a smooth, clear highway—obstacles and detours cause frustration; signage and flow matter.","tags":"design","authors":"","date":{"days":17614},"category":"playground > topics > design"},"389":{"file_path":"playground/topics/design/design-system.md","title":"Design System","description":"Learn how to create a design system that unites teams, speeds up design workflows, and improves product quality with reusable components, visual language, design tokens, and UI libraries.","spr_content":"- Design system unites product teams through shared visual language, accelerating design tenfold and providing a strong foundation.<hr />- It enables rapid, reusable component assembly for scalable product development.<hr />- Companies aim to create good, famous products with fast, high-quality design, and expert customer problem-solving.<hr />- A design system is a collection of reusable components guided by standards, facilitating rapid project execution.<hr />- Initially, adopting a new system may hinder work but leads to autonomous, seamless project management.<hr />- Establishing a design system involves addressing style, modularity, usability, and buy-in challenges.<hr />- Core team composition extends beyond designers: includes front-end devs, content strategists, researchers, performance experts, product managers, and leadership.<hr />- Team models vary: solitary, centralized (full-time core team), federated (cross-team contributors), hybrid (central plus dispersed teams).<hr />- Understanding customer (user) needs through interviews, surveys, requirements analysis ensures system relevance.<hr />- Customer insights guide defining principles, pinpointing issues, and tailoring the workflow.<hr />- Conduct visual inventories: document color palette, typography, icons, grid systems, interaction standards, animations, design resources.<hr />- Use CSS analysis tools (e.g., CSS Stats) for consistency, merging, and removing style redundancies.<hr />- Perform UI audits for current inconsistencies: colors, typography, iconography, layout, interactions, animations, resource assets.<hr />- Build a visual language: define colors, typefaces, spacing, images; optionally add depth, motion, sound for richer experience.<hr />- Introduce design tokens: name-value pairs abstracting design properties; facilitate consistent updates across platforms with tools like Theo.<hr />- Develop a UI or pattern library: catalog components, include descriptions, examples, code, metadata, and version history.<hr />- Follow structured processes for documentation: pattern library workflow, style guides, e.g., Sketch-based frameworks.","tags":"design","authors":"","date":{"days":17613},"category":"playground > topics > design"},"390":{"file_path":"playground/topics/design/how-a-design-system-work.md","title":"How A Design System Work","description":"Learn effective design system naming conventions for colors, text styles, and components using Figma tools and atomic design to improve UI consistency and team collaboration.","spr_content":"- Created from personal experience, lessons learned, self-imposed rules, and beliefs; unique content not commonly found online  <hr />- Color styles categorized as Flat or Gradient, separated by slash  <hr />  - Types include Main, Text, Background/Base, Status/Alert/Label, Notification, Social Brand, Table, Gradient  <hr />- Text styles generated via Figma's Text Style Generator, based on front-end Common Weight Name Mapping  <hr />  - Emphasizes ratio, boldness, and lightness for consistency across UI  <hr />  - Generator updates styles universally through overlaying, ensuring uniformity  <hr />- Component naming follows structured formulas:  <hr />  - Formula 1: Variations > Size > State  <hr />  - Formula 2: Type > Level > Variations/Position > Size > State  <hr />  - Formula 3: Variations/Position > Type > Level > Size > State  <hr />- For complex variations and types, consider dividing into artboards  <hr />- Component architecture based on atomic design: Atoms (icons/assets), building up to molecules, organisms, templates  <hr />- Utilize folders or levels for automatic show/hide features in UI  <hr />- Auto Layout aids in analyzing components like buttons, table rows, breadcrumbs, input fields  <hr />- Design system transforms UI files into documentation, facilitating detailed instructions and better communication among multiple designers and developers","tags":"design technique","authors":"","date":{"days":18391},"category":"playground > topics > design"},"391":{"file_path":"playground/topics/design/ui-design-fundamental.md","title":"Ui Design Fundamental","description":"Learn how to design effective user interfaces by focusing on aesthetics, content, and interaction to create user-centered apps and websites that engage and meet user needs.","spr_content":"- UI design begins with understanding purpose, target audience, and research on user needs, behaviors, and preferences.<hr />- Differentiate between customer (business entity) and user (end-user); prioritize user role, characteristics, and behavior.<hr />- Content clarity: ensure relevance, accuracy, credibility, structure, and simplicity; prioritize scannability.<hr />- Visual elements (aesthetics): layout, typography, color; beauty is subjective, based on standards, trends (e.g., grid, minimalism, vibrant colors, 3D, bold typography).<hr />- Aesthetics are relative; trends evolve: futuristic ornamentalism, simplicity, depth, animations, gradients, retro palettes, modular layouts.<hr />- Content reveals what the site/app is about; landing page must be relevant, useful, credible, structured, readable, and straightforward.<hr />- Interaction design: focus on system-user interface; promote understanding through effective presentation.<hr />- Visual hierarchy: organize information via size, color, contrast, alignment, repetition, proximity, whitespace, texture.<hr />- Hierarchy guides, reinforces or breaks natural reading patterns (Z and F in Western cultures), influencing attention and focus.<hr />- Readability: ease of extended text; legibility: quick recognition of short texts.<hr />- Communicate in user’s language; distinguish clear, dissimilar elements.<hr />- Predictability relies on affordance: physical cues that suggest actions (e.g., handle → pull); perceived vs. actual affordance.<hr />- Affordances are subjective, influenced by ability, context, past experience; can be constrained to direct actions.<hr />- Mapping content to UI: adaptable display of content bricks in various shapes; content types can be visually uniform or diverse but laid out consistently.<hr />- Different content types can use similar UI components; the same content bricks can serve different UI layouts.<hr />- Effective UI design is based on three pillars: aesthetics, content, interaction; without user, the interface fails.","tags":"design","authors":"","date":{"days":17610},"category":"playground > topics > design"},"392":{"file_path":"playground/topics/design/ux-model.md","title":"Ux Model","description":"Good UX means creating useful, easy-to-use, and accessible products that attract users, build trust, and make information easy to find, ensuring a satisfying experience for all users.","spr_content":"- Good UX centers on usefulness: products must address genuine user problems, aligning solutions with user expectations; failure to define problems accurately results in irrelevant, useless products.<hr /><hr />- Usability requires intuitive, efficient design; users should accomplish goals with minimal effort and time, otherwise they will seek simpler alternatives.<hr /><hr />- Accessibility ensures inclusivity; designing for users with disabilities (visual, auditory, motor impairments) broadens reach, often through specialized features or versions, considering the 20% disability rate in the US.<hr /><hr />- Desirability involves capturing user attention and emotional engagement; visual appeal, branding, marketing, and interaction design foster attraction and interest.<hr /><hr />- Credibility builds trust; honest presentation, transparent data practices, especially with private user data, promote long-term user relationships and reputation.<hr /><hr />- Findability entails ease of discovery; memorable product naming, clear messaging, and searchability facilitate users locating information, discussing, and recommending the product.","tags":"design","authors":"","date":{"days":17609},"category":"playground > topics > design"},"393":{"file_path":"playground/topics/design/the-principle-of-spacing-in-ui-design-part-1.md","title":"The Principle Of Spacing In Ui Design Part 1","description":"Learn why spacing is key in design, affecting content, graphics, navigation, and overall aesthetics to create a balanced, clear, and engaging user interface.","spr_content":"- Spacing influences core design factors: content, graphics, navigation, identity.  <hr />- Proper spacing enhances aesthetic appeal and visual harmony.  <hr />- Spacing guides user attention by emphasizing specific elements.  <hr />- Understanding spacing principles empowers designers with versatile skills.  <hr />- Spacing creates a unified, balanced, and harmonious page layout.  <hr />- Ignoring spacing can disrupt usability and visual coherence.  <hr />- Effective spacing is essential for clarity and user experience consistency.  <hr />- Proper spacing principles can be applied across all product designs to improve quality.","tags":"design technique","authors":"","date":{"days":17549},"category":"playground > topics > design"},"394":{"file_path":"playground/topics/design/grid-and-layout.md","title":"Grid And Layout","description":"Learn how to create strong digital design layouts using grids, columns, gutters, and responsive techniques to make your graphic and web designs look clean and professional.","spr_content":"- Freshers in graphic and digital design often struggle to achieve professional, polished looks due to skipping the critical step: “Build Layout.”<hr />- Layout is the fundamental design tool that arranges visual elements to tell a story, using photos, typography, space, and icons.<hr />- Proper layout enhances aesthetic appeal and creates strong composition; it is essential for a cohesive and visually appealing design.<hr />- Layout can be categorized into two types: Grid layout and Free-form layout.<hr />- Grid layout relies on a network of lines (horizontal, vertical, angled, or circular) to organize content hierarchically and guide consistency.<hr />- Grid types in web and app design include rows, columns, and combined grid systems, typically with 12, 8, or 4 columns based on device (desktop, tablet, mobile).<hr />- Field elements (text, images) are blocks that sit within columns; background colors are not considered field elements unless containers.<hr />- Columns are thick blocks defining content width; default widths are 60–80px, chosen for consistency and readability.<hr />- Gutters are spacing (typically 20px) between columns, critical for masonry or card grid designs, maintaining clarity and separation.<hr />- Side margins (20–30px) on mobile limit minimum whitespace; margins change across breakpoints.<hr />- Use grid rules diligently: field elements must occupy specific columns, avoiding spilling into gutters or outside columns.<hr />- Nesting elements within non-grid-aligned containers is acceptable if the parent container aligns with grid columns.<hr />- Do not use columns as outside padding unless intentional; extra indentation reduces effective content space.<hr />- In responsive design, grid adapts by varying the number of columns; column widths and gutters may stay fixed or fluid.<hr />- Fixed grids maintain same column sizes; content may overflow or have large margins on breakpoints, causing layout breaks.<hr />- Fluid grids adjust dynamically to window size, wrapping or resizing elements without breaking layout until the next breakpoint.<hr />- Applying rigorous grid principles results in cleaner, more professional designs; omitting layout steps leads to inconsistent, less appealing outcomes.<hr />- Building a solid layout foundation is key to achieving beauty and accuracy in visual design outputs.","tags":"design technique","authors":"","date":{"days":18491},"category":"playground > topics > design"},"395":{"file_path":"playground/topics/design/what-i-learned-on-design-thinking-and-software-development.md","title":"What I Learned On Design Thinking And Software Development","description":"Learn how design thinking and the Software Development Life Cycle (SDLC) guide software projects to create user-focused products efficiently with quality, budget, and time management.","spr_content":"- Design thinking is an iterative process focused on understanding user needs and problems.<hr />- It involves defining problems to identify optimal solutions, prototyping ideas, and testing.<hr />- The five phases of design thinking are: Empathize, Define, Ideate, Prototype, Test.<hr />- Empathize involves understanding the audience.<hr />- Define requires articulating user problems, needs, and insights.<hr />- Ideate encourages generating many ideas, then synthesizing the best for innovative solutions.<hr />- Prototype is creating tangible solutions.<hr />- Test evaluates solutions and gathers feedback.<hr />- Design thinking originated in fields beyond software, like branding, events, and art.<hr />- The product development process across fields aims for success—quality, relevance, and impact.<hr />- Software Development Life Cycle (SDLC) formalizes software creation, balancing quality, cost, and time.<hr />- SDLC phases: Requirement analysis, Planning, System design, Implementation, Testing, Deployment, Maintenance.<hr />- Requirement analysis and planning are crucial for understanding project goals, purpose, risks, and constraints.<hr />- Planning manages three constraints: quality, budget, and time.<hr />- Waterfall SDLC model proceeds linearly, with each stage completed before the next; errors can impact the entire process.<hr />- Agile SDLC is iterative, allowing testing, feedback, and refinements at each cycle.<hr />- As a designer, understanding SDLC emphasizes that a good product must be both visually appealing and user-friendly.<hr />- The ultimate goal: develop products efficiently with minimal cost, maximal quality, and swift delivery.","tags":"design-thinking","authors":"","date":{"days":18757},"category":"playground > topics > design"},"396":{"file_path":"playground/topics/design/domain-insight-research-framework.md","title":"Domain Insight Research Framework","description":"Learn how Domain Insight Research (DIR) helps UX researchers quickly understand industries, analyze markets, and design user-focused digital products using market research, competitor analysis, and technology trends.","spr_content":"- UX Research explores user behaviors, needs, pain points, and business strategies for product development.<hr />- Domain Insight Research (DIR) enhances UX by providing rapid industry understanding, easing empathy, and saving effort.<hr />- DIR collects definitions, operational mechanics, market insights, personas, solutions, revenue streams, and design principles.<hr />- In projects, DIR informs client discussions, validation, strategic proposals, and technology suggestions.<hr />- Steps of DIR:<hr />  - Understand the domain: define key terms; build glossary; use search, literature, interviews.<hr />  - Analyze how the domain functions: resources, processes, output, revenue flow.<hr />  - Investigate applied technologies: current and emerging; assess problem-solving potential.<hr />  - Identify value propositions: what benefits does the domain offer? How does it solve human problems?<hr />- Market research within DIR:<hr />  - Multi-method data collection: primary (self-collected), secondary (existing data).<hr />  - Secondary research preferred for speed, cost, immediate application; primary for gaps.<hr />  - Analyze market share: measure company positioning, preferences, and industry size.<hr />  - Competitor analysis: review products, strengths, weaknesses, visual style, monetization.<hr />  - Build personas: understand target users, motivations, pain points; ensure consistency and focus.<hr />- Generate solutions & features based on research insights:<hr />  - Validate client ideas; identify market gaps.<hr />  - Develop competitive features prioritizing user needs.<hr />  - Address hidden or unmet problems with innovative solutions.<hr />- Identify revenue opportunities:<hr />   - Pinpoint growth areas.<hr />  - Balance short-term wins and long-term expansion.<hr />- Determine suitable technology: match solutions with technological capabilities to optimize workflows and costs.","tags":"design","authors":"","date":{"days":18556},"category":"playground > topics > design"},"397":{"file_path":"playground/topics/design/card-sorting-and-a-glimpse-at-experimental-sorting-session.md","title":"Card Sorting And A Glimpse At Experimental Sorting Session","description":"Learn how card sorting improves information architecture and user experience by organizing content based on real user feedback for clearer navigation in websites and digital products.","spr_content":"- Card sorting is a technique to improve information architecture (IA) of digital products.<hr />- IA is the structure and labeling that guides user navigation, aiming for clarity and intuitiveness.<hr />- Card sorting helps refine IA by revealing user mental models, preferred keywords, and optimal content pathways.<hr />- It is low-cost, quick, with simple tools like paper and sticky notes or online software.<hr />- Participants organize topics into meaningful groups, possibly labeling them.<hr />- Two primary methods: open (participants generate categories) and closed (categories pre-defined).<hr />- Hybrid approaches combine open and closed for flexibility.<hr />- Offline card sorting uses physical cards; online uses software like Optimal Workshop or Milanote.<hr />- Practical applications include understanding user content needs and testing taxonomy structures.<hr />- In real projects, clear instructions, single idea per card, and time management are crucial lessons.<hr />- Grouping insights include allowing free ideas, refining wording, and noting similar or ambiguous cards.<hr />- Post-session involves digitizing results, creating diagrams, and testing via prototypes.<hr />- Effective facilitation requires explaining the process, roles, and tasks clearly.<hr />- Lessons learned emphasize clarity, prior explanation, time awareness, and thorough categorization.<hr />- Resources offer deeper understanding and best practices.<hr />- Overall, card sorting is valuable for user-centered IA design, aiding in creating frictionless user flows.","tags":"design technique","authors":"","date":{"days":17769},"category":"playground > topics > design"},"398":{"file_path":"playground/topics/design/gestalt-principles-in-ui-design.md","title":"Gestalt Principles In Ui Design","description":"Learn how Gestalt principles like Proximity, Similarity, and Closure improve UI design by organizing elements for better usability, clear visual hierarchy, and enhanced user experience.","spr_content":"- The image resembles an owl face, illustrating Isomorphism, a Gestalt rule.<hr />- Isomorphism shows shapes can evoke meaningful objects, like clouds suggesting animals or logos reflecting brand identity.<hr />- Gestalt derived from German, meaning shape or form.<hr />- Gestalt principles describe human perception, pattern recognition, and simplification of complex images.<hr />- In UI design, Gestalt rules enhance aesthetic appeal and user friendliness.<hr />- Six key Gestalt principles: Proximity, Common Fate, Similarity, Closure, Continuation, Figure/Ground.<hr />- Proximity: close elements are perceived as related; guides grouping in UI for clarity and efficient scanning.<hr />- Proper use of white space emphasizes relationships and visual hierarchy.<hr />- Common Fate: elements moving in the same direction are grouped; applies to UI animations and dropdowns.<hr />- Similarity: identical style attributes create groups; ensures consistency and reduces user confusion.<hr />- Uniform button styles reinforce recognition and usability.<hr />- Closure: incomplete shapes are perceived as complete; useful in icon design for quick recognition.<hr />- Continuation: aligned elements are perceived as related; supports organized layouts directing attention.<hr />- Figure/Ground: separates focus objects from backgrounds; enhances clarity and reduces cognitive load.<hr />- Techniques include overlays, shadows, blurring.<hr />- Gestalt principles serve as guidelines for effective UI but are flexible; rules can be broken for creativity.<hr />- The goal: a harmonious balance of accessibility, feasibility, and artistic expression in UI design.","tags":"design technique","authors":"","date":{"days":18456},"category":"playground > topics > design"},"399":{"file_path":"playground/topics/devops/about-devops.md","title":"About Devops","description":"Learn how DevOps improves software delivery with continuous integration, automation, testing, and collaboration between development and operations for faster, reliable releases.","spr_content":"- DevOps is a cultural philosophy centered on enhancing the software lifecycle, focusing on delivering updates (bug fixes, features, configurations) more frequently and reliably to end-users.  <hr />- It is a continuous, iterative process involving stages: CI, CD, testing, deployment, monitoring.  <hr />- The primary aim of DevOps is to improve product quality and foster collaboration between development and operations teams, creating a smoother workflow.  <hr />- Core attributes include coding/scripting ability (Go, Python, Shell), process re-engineering, effective communication, distributed teamwork, utilization of open source tools, networking/system admin skills, automation expertise, data management, and business focus.  <hr />- Process re-engineering emphasizes integrating existing open source tools with current platforms rather than building from scratch.  <hr />- SRE availability metrics focus on aggregate unavailability, considering partial service availability and load variation over time—using time-based and aggregate availability equations.  <hr />- Service reliability is expressed via permitted downtime for acceptable availability levels; predominantly measured as a percentage of failure over a period.  <hr />- Automation testing aims to reduce manual test cases; suitable types include unit, functional, regression, black box, integration, keyword, data-driven, and smoke testing.  <hr />- unsuitable test cases are new, evolving, or ad-hoc due to testing instability.  <hr />- Automation tools encompass Selenium, QTP, Rational Functional Tester, WATIR, SilkTest.  <hr />- Security in DevOps integrates practices like code analysis, security testing automation, patch management, and continuous monitoring, with tools like SonarQube, Codebeat, Sentry, Datadog, adherence to standards like ISO 27001, PCI DSS, HIPAA.  <hr />- Application developers focus on rapid software deployment through automation, effective testing, and holistic process integration; scripting for build, test, deployment, and environment configuration is essential.  <hr />- System administrators should cultivate skills in infrastructure as code, cloud platforms (AWS, Azure, GCP), configuration management tools (Puppet, Chef, Ansible), orchestration (K8s, DC/OS), and CI/CD tools (Jenkins, CircleCI).  <hr />- Overall, success in DevOps demands a mindset of automation, coding proficiency, infrastructure management, documentation, and continuous improvement following a strategic roadmap.","tags":"devops","authors":"","date":{"days":17735},"category":"playground > topics > devops"},"400":{"file_path":"playground/topics/devops/how-blue-green-deployment-helped-mochi.md","title":"How Blue Green Deployment Helped Mochi","description":"Learn how implementing blue-green deployment with Argo Rollouts on Kubernetes improved Mochi Bot’s updates by eliminating downtime and ensuring seamless releases for Web3 Discord applications.","spr_content":"- Defining blue-green deployment: dual identical environments (blue and green) with seamless switching.<hr />- Current infrastructure: Kubernetes, ArgoCD, two pods for Mochi Bot.<hr />- Prerequisite: install Argo Rollouts operator in Kubernetes.<hr />- YAML configures: rollout.yaml (strategy with blue-green), ingress.yaml, service.yaml.<hr />- Blue-green rollout strategy: applies `blueGreen` with autoPromotion disabled, active and preview services.<hr />- Deployment process: apply manifests via `kubectl apply`, create active environment on domain.<hr />- Updating app: change container image in rollout.yaml, apply update triggers new ReplicaSet and preview deployment.<hr />- Testing phase: verify preview environment before promotion.<hr />- Promotion: manually promote via CLI or ArgoCD UI, switch active environment.<hr />- Benefits: eliminates downtime, ensures consistent updates, rolls back easily if needed.<hr />- Alternative: use UI for promotion and rollback, accessible for non-CLI users.<hr />- Outcome: seamless user experience, minimal disruption during updates.<hr />- Future plans: integrate k6 for performance testing, establish quality gate for green releases.<hr />- Overall insight: blue-green deployment enhances reliability, reduces risks, streamlines updates.<hr />- Metaphor: two synchronized trains alternating stations—one active, one prepared, ensuring smooth journeys.<hr />- Analogy: flipping a switch between identical servers—instant switchover with no user impact.<hr />- Connection: similar to staged surgical procedures, preview before full operation—minimizing disruption.","tags":"devops engineering performance","authors":"","date":{"days":19450},"category":"playground > topics > devops"},"401":{"file_path":"playground/topics/devops/how-we-setup-cicd.md","title":"How We Setup Cicd","description":"Learn how Dwarves simplifies CI/CD with Gitlab, Github Actions, automated linting, testing, previewing, building Docker images, and deploying to Kubernetes for faster, reliable software delivery.","spr_content":"- CI/CD is a pipeline-based process involving continuous integration (CI) and continuous delivery/deployment (CD).  <hr />- CI encompasses linting, testing, building, and merging code into shared repositories multiple times daily.  <hr />- CD refers to the stages that push code into production, either through delivery or deployment.  <hr />- The pipeline can be visualized as a series of jobs: lint, test, preview, build, deploy.  <hr />- At Dwarves, projects primarily use Gitlab CI, with some transitioning to Github Actions for newer projects.  <hr />- Frontend setups may use Netlify or Vercel for previews, but the core process remains consistent.  <hr />- Linting standardizes coding rules and automates immediate feedback.  <hr />- Testing ensures code integrity, preventing regressions.  <hr />- Previewing allows testing changes visually via auto-bound URLs, avoiding slow local pulls—easy with tools like Netlify or Vercel, more complex for system-level tests.  <hr />- Building creates Docker images, pushed to registries: Google Container Registry, Dockerhub, Amazon ECR.  <hr />- Deploying pulls images into Kubernetes clusters for live environment hosting.  <hr />- The test stack includes a well-defined, straightforward setup aimed at simplicity and automation.  <hr />- Automation of end-to-end tests is a goal but faces challenges: reproducibility issues, long runtimes, workflow integration difficulties. Currently, daily scheduled E2E runs and QC team reports provide partial coverage.  <hr />- CI/CD philosophy emphasizes culture, simplicity, and speed—aim for setup within 30 minutes using tools like Kaniko to avoid Docker-in-Docker complexity.  <hr />- Continuous improvement involves adopting new tech (e.g., Earthly), iterative experimentation, and acknowledging technology evolution’s rapid pace.","tags":"devops","authors":"","date":{"days":18674},"category":"playground > topics > devops"},"402":{"file_path":"playground/topics/devops/kubernetes-helm-101.md","title":"Kubernetes Helm 101","description":"Learn how Helm, the Kubernetes package manager and deployment tool, simplifies application deployment with charts, releases, and repositories for faster, easier Kubernetes management.","spr_content":"- Kubernetes has experienced explosive growth, fostering new communities and ecosystems to simplify complex application development and deployment.  <hr />- If Kubernetes is the ship, Helm is its steering wheel, guiding DevOps and developers through management.  <hr />- Helm is a package manager for Kubernetes, similar to NPM or YARN for JavaScript, but also serves as a deployment manager.  <hr />- Helm abstracts Kubernetes resource definitions, allowing deployment through simple commands rather than manual configuration.  <hr />- Containerization, exemplified by Docker, revolutionized virtualization, enabling faster, scalable, and more secure applications.  <hr />- Kubernetes orchestrates containers, managing their deployment and communication complexity.  <hr />- Helm’s core concepts include Charts (YAML collections for applications), Configs (settings in values.yaml), Releases (deployed chart instances), and Repositories (charts storage).  <hr />- Helm architecture involves a client (CLI) interacting with a server (Tiller) within Kubernetes, facilitating resource management tasks such as install, upgrade, and rollback.  <hr />- Installing Helm involves setting up the Helm client and initializing Helm to deploy Tiller in the Kubernetes cluster.  <hr />- Deployment involves adding Helm repositories, updating them, and installing charts, such as Kafka, with optional custom configurations via values.yaml.  <hr />- Helm simplifies managing complex applications, enabling quick deployment, updates, and removals, essential for modern DevOps workflows.  <hr />- As Kubernetes ecosystems grow, tools like Helm become indispensable for efficient, scalable application management in production environments.","tags":"k8s","authors":"","date":{"days":18199},"category":"playground > topics > devops"},"403":{"file_path":"playground/topics/devops/docker-microcontainers.md","title":"Docker Microcontainers","description":"Learn how to create ultra-small Docker images using the scratch image to deploy Go web apps with minimal size and faster downloads by cross-compiling and building lightweight containers.","spr_content":"- Docker images vary in size; base images like Ubuntu (~200MB) are large and contain many unused tools for simple applications.<hr />- Minimal images like `scratch` have the smallest capacity, containing only metadata, no OS or tools.<hr />- Using `scratch` reduces image size significantly but requires a statically compiled, self-sufficient binary.<hr />- System compilation AOT (ahead-of-time) is needed: cross-compile Go binaries compatible with Linux from other OS.<hr />- To build Go apps inside Docker, set up a Go environment with volume sharing (`-v \"$GOPATH\":/go`) and Docker-in-Docker access via socket sharing.<hr />- Enter the environment with `docker run --rm -it -v ... golang bash`.<hr />- Work inside container, navigate to project directory, e.g., `/go/src/...`.<hr />- Write a Dockerfile starting with `FROM scratch`.<hr />- Copy the precompiled binary and static assets into the image.<hr />- Expose necessary port(s), set entrypoint to the binary.<hr />- Build the app with `go build` and linker flags: `CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o web .` for a static binary.<hr />- Use `docker build -t beego-web .` to create a minimal, ~17.5MB image.<hr />- Result: tiny, efficient, self-contained Docker image for deployment.","tags":"docker","authors":"","date":{"days":16835},"category":"playground > topics > devops"},"404":{"file_path":"playground/topics/devops/radio-talk-60-blue-green-deployment.md","title":"Radio Talk 60 Blue Green Deployment","description":"Learn how blue-green deployment reduces downtime and risk by switching traffic between identical environments, improving software reliability and flexibility for seamless updates.","spr_content":"- Blue-green deployment creates two identical environments: active (blue) and inactive (green).  <hr />- Deployment involves updating the green environment without affecting the live blue environment.  <hr />- Switching traffic from blue to green enables seamless transition, minimizing downtime.  <hr />- Reversible by reverting traffic from green back to blue if issues arise.  <hr />- Benefits include:  <hr />  - Reduced downtime via environment isolation.  <hr />  - Increased reliability; less disruption risk.  <hr />  - Enhanced flexibility; faster deployment cycles.  <hr />  - Lower risk; old version remains live until new is verified.  <hr />  - Cost savings through reduced service interruptions and focused feature releases.  <hr />- Traffic control (percentage split) is not blue-green deployment but introduces canary deployment.  <hr />- Database migrations and API deprecation require backward compatibility to prevent service breakage.  <hr />- Implementation of migration strategies involves phased changes: create new columns, adapt queries, then deprecate old ones.  <hr />- Suitable mainly for systems withMany continuous users or high-critical systems (e.g., finance).  <hr />- Not recommended at project start nor for low-user or low-risk initiatives due to setup effort.","tags":"devops radar technique","authors":"Thanh Pham","date":{"days":19426},"category":"playground > topics > devops"},"405":{"file_path":"playground/topics/llm/guardrails-in-llm.md","title":"Guardrails in llm","description":"Inspite of having strength to process and produce highly coherent human-like, behavior of LLM is unpredictable, so the need of a safety mechanisms and boundaries that control and direct an AI model's behavior to ensure it operates safely, ethically, and within intended parameters is crucial...","spr_content":"- LLMs possess high coherence and human-like behavior but exhibit unpredictable outputs.<hr />- Safety mechanisms and boundaries (guardrails) are essential to control LLM behavior.<hr />- Guardrails ensure safety, ethics, and adherence to intended parameters.<hr />- Input guardrails preprocess inputs to filter harmful content, hate speech, profanity, and sensitive data.<hr />  - Topical guardrails restrict responses to specific domains, e.g., technology.<hr />  - Jailbreaking detection prevents bypassing model restrictions.<hr />  - PII redaction anonymizes personal information.<hr />- Output guardrails post-process or validate outputs to prevent harm, inaccuracies, or breaches.<hr />  - Fact-checking guardrails verify information accuracy.<hr />  - Moderation guardrails enforce brand, ethical, or policy guidelines.<hr />  - Syntax checks validate structured responses, especially for function calls.<hr />- Guardrails contribute to risk mitigation but cause increased latency and costs.<hr />- Output guardrails may hinder rapid or streaming responses.<hr />- Overly restrictive guardrails can make responses artificial, limit legitimate use, and frustrate users.<hr />- Balancing guardrails entails trade-offs between safety and user experience.<hr />- Implementing guardrails is crucial but requires contextual adaptation based on application-specific risks and goals.","tags":"llm","authors":"hoangnnh","date":{"days":20020},"category":"playground > topics > llm"},"406":{"file_path":"playground/topics/llm/thumbs-up-and-thumbs-down-pattern.md","title":"Thumbs up and Thumbs down pattern","description":"The article talks about how important human feedback is for making large language models better, especially using thumbs up and down. It explains the Pearson correlation coefficient, which measures how variables are related. The thumbs system is an easy way for users to show if responses are helpful or not, which encourages more feedback and keeps users engaged. This feedback helps improve training data and makes the models more accurate. The article includes examples in sentiment analysis for reviews and content moderation, showing how this feedback helps understand user opinions and filter out bad content on sites like YouTube and Twitter.","spr_content":"User feedback (thumbs up/down) enhances LLM training data by indicating response quality.  <hr />- Thumbs up signals accuracy, helpfulness, user satisfaction, positive relationship with desired outputs.  <hr />- Thumbs down indicates unhelpful, incorrect, harmful responses, negative relationship.  <hr />- Simplifies interaction, increases engagement, steady input, facilitates continuous improvement.  <hr />- Correlates with model performance metrics (e.g., Pearson's r) capturing relationships between feedback and output quality.  <hr />- Used in sentiment analysis; improves detection of positive/negative opinions.  <hr />- Critical in content moderation; filters harmful, inappropriate content; supports trend detection and misinformation filtering on platforms (YouTube, Twitter).  <hr />- Feedback loop accelerates learning, aligns model outputs with user expectations, ensures safer, more relevant responses.","tags":"feedback llm pattern","authors":"datnguyennnx","date":{"days":19916},"category":"playground > topics > llm"},"407":{"file_path":"playground/topics/llm/adversarial-prompting.md","title":"Adversarial Prompting in Prompt Engineering","description":"An overview of adversarial prompting in prompt engineering, focusing on understanding risks associated with Large Language Models (LLMs) and strategies for mitigating them.","spr_content":"Adversarial prompting reveals vulnerabilities in LLM safety. It involves crafting inputs that bypass safeguards. Risks include malicious instructions injected directly or indirectly. Because LLMs are unrestricted text predictors, predicting harmful inputs is essential. Validation and training aim to reject dangerous prompts. A security agent can filter inputs, analyzing relevance and safety before passing to the main system. LLM responses, like rejecting banking theft queries, improve safety but are not foolproof. Continuous updates are critical as user ingenuity finds new bypass methods. Safeguarding in LLMs is an ongoing arms race between attack strategies and defense mechanisms, requiring layered, adaptive defenses grounded in understanding adversarial dynamics.","tags":"ai llm prompt-engineering","authors":"thanh","date":{"days":19548},"category":"playground > topics > llm"},"408":{"file_path":"playground/topics/llm/build-your-chatbot-with-open-source-large-language-models.md","title":"Build your chatbot with open source Large Language Models","description":"A guide on how to build a personal AI chatbot using open-source Large Language Models (LLMs) like Alpaca and GPT4All on your personal computer.","spr_content":"- AI chatbots like ChatGPT are widely used but face restrictions geographically and in educational institutions due to high-quality output and cost.  <hr />- Personal chatbots on local machines offer acceptable results with minimal hardware, notably 8GB RAM.  <hr />- Open models like Alpaca 7B and GPT4All enable personal use and customization.  <hr />- Pre-trained LLMs generate coherent, contextually relevant text through latent variables capturing complex language relationships.  <hr />- These models excel in tasks like translation, summarization, dialogue, virtual assistants, and chatbots.  <hr />- To build a personal chatbot:  <hr />  - Download models via HuggingFace.  <hr />  - Clone chatbot UI source code; requires git, Node.js, yarn.  <hr />  - Update configuration files with model info.  <hr />- Install chatbot UI by cloning repository, downloading binding library, and models (Alpaca 7B, 13B, GPT4All) into the 'bin' folder.  <hr />- Configure models in 'config.json'.  <hr />- Install dependencies with `yarn install`, run `yarn dev` to load and start the web UI.  <hr />- Larger models (e.g., Alpaca 13B, Alpaca 30B) demand more memory and may have limited loadability.  <hr />- Fine-tuning involves creating datasets, with examples provided for training via Google Colab.  <hr />- While larger models (30B+) approximate ChatGPT3, their answer quality generally remains lower.  <hr />- Using open-source models, users can develop personalized chatbots, balancing model size, hardware, and output quality.","tags":"ai llm open-source","authors":"thanhpn","date":{"days":19474},"category":"playground > topics > llm"},"409":{"file_path":"playground/topics/llm/llm-query-caching.md","title":"Query Caching for Large Language Models","description":"An exploration of query caching in Large Language Models (LLMs), focusing on how semantic vector databases can drastically improve efficiency and reduce computational costs by reusing cached answers for semantically similar queries.","spr_content":"- LLMs are central to multiple NLP applications, including predictive typing, NLP tasks.<hr />- Processing speed and computational cost are major challenges for LLM deployment.<hr />- Query caching is a groundbreaking approach to improve LLM efficiency and cost-effectiveness.<hr />- Semantic vector databases enable caching by leveraging semantic correlations among queries.<hr />- Cached responses are stored after initial processing, facilitating reuse.<hr />- Future similar queries can retrieve cached answers, avoiding redundant computation.<hr />- In practice, this approach mirrors an e-commerce scenario: cache store hours for reuse.<hr />- Semantic similarity thresholds allow customization between efficiency and precision.<hr />- Benefits include significant savings in computation and financial resources.<hr />- Query caching addresses the speed bottleneck endemic to LLMs.<hr />- The method has broad applicability across sectors utilizing LLMs.<hr />- This strategy enhances scalability, making LLMs more practical and affordable.","tags":"ai llm vector-database","authors":"thanh","date":{"days":19517},"category":"playground > topics > llm"},"410":{"file_path":"playground/topics/llm/working-with-langchain-document-loaders.md","title":"Working with langchain document loaders","description":"This article explores Langchain document loaders, explaining their role in overcoming token limits, integrating with vector databases, and demonstrating how to build a question-answering system using CSV data and an AI agent.","spr_content":"- Langchain is a framework for building language model-based applications, integrating Models, Prompts, Memory, Indexes, Chains, and Agents.<hr />- It emphasizes environment-aware interactions and data awareness beyond API calls.<hr />- Document loaders in Langchain facilitate overcoming OpenAI's token limit (~4K tokens) via strategies like stuffing, map-reduce, refining, and map-rerank.<hr />- These strategies fragment large documents into manageable pieces or summaries, consolidating information within token constraints.<hr />- Loaded and processed data are stored as vectors in vector databases, capturing word semantics in continuous space for context-aware responses.<hr />- Question Answer Systems in Langchain involve four steps: create index, derive retriever, set up QA chain, and ask questions.<hr />- Example: CSV loader reads local datasets; text splitters break documents; embeddings (e.g., OpenAI) encode texts; vector stores (like ChromaDB) index embeddings; retrievers fetch relevant chunks for QA.<hr />- A RetrievalQA chain combines these components with LLMs (e.g., OpenAI) to answer questions based on indexed data.<hr />- Agents in Langchain integrate various tools (e.g., RetrievalQA, Google Search) to handle complex, multi-faceted queries.<hr />- Agents are initialized with tools and configured for zero-shot reasoning (e.g., React agent type) to dynamically select and invoke tools based on prompts.<hr />- Use case: Load CSVs, create vector indexes, set up retrievers, instantiate QA systems, combine with tools like Google Search, and run queries combining internal data and external APIs.<hr />- This process abstracts intricate prompt engineering, focusing on data ingestion, index creation, and tool integration for versatile LLM applications.","tags":"ai langchain llm tuning-llm","authors":"monotykamary","date":{"days":19468},"category":"playground > topics > llm"},"411":{"file_path":"playground/topics/llm/prevent-prompt-injection.md","title":"Prevent prompt injection","description":"Nowadays, Large Language Models (LLMs) have become integral to various applications. However, with great power comes great responsibility, and the rise of LLMs has introduced new security challenges. One such challenge is prompt injection attacks, a sophisticated technique that can manipulate AI systems to perform unintended actions. In this article, we'll dive deep into the world of prompt injection, understand its implications, and explore strategies to prevent these attacks.","spr_content":"Large Language Models (LLMs) underlie diverse applications, but prompt injection presents security vulnerabilities.  <hr />Prompt injection involves manipulating input prompts to alter model behavior, either via direct or indirect techniques.  <hr />Direct injection inserts malicious commands explicitly in prompts; indirect uses encoding or obfuscation.  <hr />Attacker goals include bypassing security, accessing sensitive data, or executing unauthorized actions.  <hr />In systems with context-dependent prompts, malicious users can craft inputs to leak private information, exemplified by username-based profile breaches.  <hr />Passwords and profile protections rely on prompt design; insecure prompts risk leakage through prompt injection.  <hr />Complete prevention of prompt injection is infeasible; models trained on past data may respond unpredictably to unseen inputs.  <hr />Mitigation methods include: post-prompting, avoiding user input variables at prompt end; random sequence enclosure of user inputs, creating distinct boundaries; fine-tuning models on diverse prompt-response datasets.  <hr />Additional defenses include XML tagging, sandwich defenses, instruction defenses—techniques to bolster security, but no foolproof method exists.  <hr />Prompt injection remains a critical concern; implementing layered, best-practice defenses can reduce but not eliminate vulnerabilities.  <hr />References provide further insights into prompt hacking and mitigation strategies.","tags":"ai llm security","authors":"hoangnnh","date":{"days":19989},"category":"playground > topics > llm"},"412":{"file_path":"playground/topics/llm/workaround-with-openai-s-token-limit-with-langchain.md","title":"Workaround with OpenAI's token limit with Langchain","description":"This article explores strategies to overcome OpenAI's token limit using Langchain, including stuffing, map-reduce, refining, and map-rerank methods. It discusses the advantages and drawbacks of each approach in handling large documents or prompts while working within the constraints of OpenAI's API.","spr_content":"- Problem: OpenAI's ChatGPT hard to tune; model access limited; tuning options constrained.  <hr />- Token limit (~4,000 tokens): applies to prompt and response; each token ~1.2 words.  <hr />- Langchain: framework for building LLM-powered apps; supports Models, Prompts, Memory, Indexes, Chains, Agents.  <hr />- Core philosophy: LLM applications should be data-aware; interact with environment.  <hr />- Prompt summarization strategies to bypass token limit:  <hr />  - Stuffing: fit entire resource within token limit; works for small docs; simple approach.  <hr />  - Map-Reduce: split large docs; summarize and consolidate; parallelizable; risks info loss; increases API calls.  <hr />  - Refining: iterative prompts to improve context; more accurate; incurs many API calls.  <hr />  - Map-Rerank: split into chunks; rank responses; select highest; ideal for well-structured, single-answer questions; cannot combine multi-chunk info, losing shared context.  <hr />- Main insight: Strategies mirror distributed data paradigms; involve multiple API calls; increase costs.  <hr />- Underlying goal: manage token constraints; maximize info retention; balance accuracy and resource use.","tags":"ai llm tuning-llm","authors":"monotykamary","date":{"days":19468},"category":"playground > topics > llm"},"413":{"file_path":"playground/topics/llm/metric-pillar.md","title":"Metrics","description":"Metrics give you the rundown on how your LLM’s performing. We will show how to use these metrics to identify issues, increase efficiency, and make changes for improved outcomes.","spr_content":"- Observability in LLM applications relies on metrics signaling correct system functioning.  <hr />- Metrics inform system performance and model efficiency, guiding fine-tuning.  <hr />- System metrics encompass latency, throughput, error rate, and resource utilization; they reflect system health and responsiveness.  <hr />- Latency affects user experience; low latency means faster responses, high latency causes dissatisfaction.  <hr />- Throughput indicates request handling capacity; high throughput signifies scalability under demand.  <hr />- Error rate reveals reliability; high error rate exposes system issues needing correction.  <hr />- Resource utilization monitors CPU, memory, disk; bottlenecks impair scalability and performance.  <hr />- Model metrics assess output quality, divided into scoring and retrieval-augmented generation (RAG) metrics.  <hr />- Perplexity gauges prediction confidence; lower perplexity signifies better language modeling.  <hr />- BLEU compares generated text to references; higher BLEU denotes closer alignment with human output.  <hr />- METEOR evaluates semantic similarity, considering synonyms and stemming; high scores reflect meaningful output.  <hr />- ROUGE measures n-gram overlap; especially valuable for summarization excellence.  <hr />- RAG system metrics include Precision@K, Recall@K, MRR, and NDCG; they evaluate retrieval relevance and ranking quality.  <hr />- Precision@K reflects relevant documents within top results; critical for content accuracy.  <hr />- Recall@K ensures relevant data is retrieved; prevents information loss.  <hr />- MRR measures first relevant result rank; higher scores boost user satisfaction.  <hr />- NDCG assesses ranking effectiveness, emphasizing relevant document prioritization.  <hr />- Fine-tuning metrics include performance improvement, training time, overfitting rate, loss reduction, and user feedback; they optimize model adaptability.  <hr />- Performance metrics compare pre- and post-fine-tuning; success indicates better generalization.  <hr />- Training time evaluates efficiency; faster fine-tuning while maintaining quality is ideal.  <hr />- Overfitting rate assesses model robustness; lower overfitting ensures broader applicability.  <hr />- Loss reduction signals learning progress; significant decrease indicates successful training.  <hr />- User feedback offers qualitative insights complementing quantitative results.  <hr />- Cost metrics encompass pricing per request, token in/out, total processing time, resource costs, and service rate limits; vital for budget management.  <hr />- Pricing per request unlocks understanding of total operational expenses.  <hr />- Token counts influence costs and usage patterns; many providers bill based on tokens processed.  <hr />- Total time correlates with overall spending; optimization reduces costs.  <hr />- Resource costs quantify cloud expenses; controlling them is key for profitability.  <hr />- Rate limits inform capacity planning; prevent overuse and unexpected charges.  <hr />- Comprehensive metrics underpin high performance, system reliability, cost-efficiency, and positive user experience in LLM applications.","tags":"llm metric observability pillar","authors":"datnguyennnx","date":{"days":20007},"category":"playground > topics > llm"},"414":{"file_path":"playground/topics/llm/function-calling.md","title":"Function calling in AI agents","description":"Function calling is a critical component in the architecture of AI agents, facilitating the integration of external functionalities and resources. This note explores how function calling is implemented in AI architectures and its role in enhancing agent capabilities","spr_content":"- Function calling is essential in AI agents for integrating external functionalities and resources.  <hr />- In ChatGPT, function calling enables the model to invoke specific functions or APIs during conversations.  <hr />- It enhances responses by accessing external systems, performing computations, and retrieving current data.  <hr />- Function calling allows for structured data exchange, improving reliability over previous methods.  <hr />- Prior methods:<hr />  - Fine-tuning: improves capabilities but costly and limited to certain models.<hr />  - Embeddings: expand knowledge with contextual data but consume tokens and increase costs.  <hr />- Function calling introduces a third method: the model requests functions, then uses results to produce coherent responses.  <hr />- Usage involves formatting prompts and defining functions with parameters for API compatibility.  <hr />- Example: prompt instructs model to call a specific function with parameters, capturing the result.  <hr />- Integrating function calling boosts agent functionality, enabling access to external systems, increasing adaptability, and improving performance.","tags":"ai function-calling llm","authors":"0xm","date":{"days":19922},"category":"playground > topics > llm"},"415":{"file_path":"playground/topics/llm/history-of-structured-output-for-llms.md","title":"History of Structured Outputs for LLMs","description":"When Large Language Models (LLMs) becomes popular and an essential tool for growing businesses, it signals a transition toward more complex and efficient data processing. Instead of outputting raw text, the models may now generate structured data in formats such as JSON or XML. This allowed the information to be directly integrated into company databases, removing the need for human processing. Businesses can use structured outputs to streamline their data workflows, decrease processing time, and improve the accuracy and reliability of their analytics.","spr_content":"- LLMs transitioning from text generation to structured data output signals a shift toward more efficient data integration and automation.<hr />- Structured formats like JSON and XML enable direct database integration, reducing manual processing, workflows, and errors.<hr />- Constraints on LLM outputs are categorized into low-level (format, length) and high-level (meaning, style, factual accuracy) to improve output quality.<hr />- Consistent, structured outputs increase user trust by providing predictable, uniform summaries and descriptions.<hr />- Structured data fosters seamless integration with tools like databases and dashboards, enabling automation of reporting and data handling.<hr />- Pre-2022: Focused on creative, unstructured text generation; structured output was minimal.<hr />- 2022: Developers used manual parsing (regex, custom parsers); prompt techniques to steer structure; limited scalability.<hr />- Late 2022/Early 2023: LangChain pioneered systematic extraction via document loaders and parsers, formalizing structured info retrieval.<hr />- 2023: JSONFormer explored schema-based \"structured decoding\"; OpenAI introduced JSON Mode with embedded schemas; Kor improved schema-based extraction with examples.<hr />- 2024: LlamaIndex integrated core structured output features, including function calling APIs and output parsers; JSON schema validation via acceptor systems enhanced accuracy.<hr />- Transition from external workaround tools to embedded LLM functionalities reflects increasing control over output format and reliability.<hr />- The biggest challenge: balancing structured data requirements with LLMs' creative capacity without sacrificing accuracy or flexibility.<hr />- Complex structures risk factual errors; early efforts risked rigidity, limiting potential creative and nuanced expression.<hr />- Integration remains a challenge; seamless, platform-agnostic functionalization is essential for broad adoption.<hr />- Future prospects include more accurate, flexible structured outputs, expanded applications in data analysis and reporting, and stronger human-AI collaboration.<hr />- Continuous research aims to optimize the balance between structure and creativity, ensuring reliable, versatile, and integrated structured output capabilities.","tags":"history llm","authors":"datnguyennnx","date":{"days":19885},"category":"playground > topics > llm"},"416":{"file_path":"playground/topics/llm/reinforcement-learning.md","title":"Introduction to Reinforcement Learning and Its Application with LLMs","description":"An introduction to Reinforcement Learning (RL), a machine learning method where an agent learns to make decisions by interacting with an environment. This article covers the basics of RL, including how it works, common algorithms, and its application in training models with Large Language Models (LLMs).","spr_content":"- Reinforcement Learning (RL) models an agent-environment interaction aiming to maximize cumulative reward.<hr />- The agent perceives environment states through features; selects actions from available set.<hr />- Actions influence environment, yielding rewards that guide learning.<hr />- The process repeats until sustained optimal policy achieved.<hr />- RL operates via exploration (random actions) and exploitation (based on learned policy).<hr />- Q-Learning employs a Q-table with state-action value estimates.<hr />- Policy gradient methods optimize expected reward by adjusting policy parameters.<hr />- Deep Q-Networks (DQN) integrate neural networks with Q-learning, using replay memory.<hr />- Training RL models with LLMs involves defining goals, collecting data, delineating states and actions, designing reward functions.<hr />- Data includes prices, volumes, indicators; states include market features, assets.<hr />- Actions include buy, sell, hold; rewards align with profit or return metrics.<hr />- RL model estimates action values, iteratively trained with historical data.<hr />- LLMs evaluate environment data and action outputs, guiding strategy refinement.<hr />- Testing involves backtesting or real-world validation; models are iteratively refined.<hr />- RL requires substantial computational resources; excels in complex, uncertain domains.<hr />- Key references include foundational texts, open-source implementations, and industry applications.<hr />- Agent: entity controlling actions based on algorithmic decision-making.<hr />- MDP: formal model of decision process under uncertainty.<hr />- LLM: large language model used as an evaluator and strategist in RL workflows.","tags":"ai llm reinforcement-learning","authors":"thanhpn","date":{"days":19513},"category":"playground > topics > llm"},"417":{"file_path":"playground/topics/llm/model-selection.md","title":"Model selection","description":"Learn how to choose the right AI model for your needs. Explore key factors like accuracy, privacy, and cost. Compare commercial vs open-source options and API vs self-hosting approaches.","spr_content":"- Model selection is context-dependent, not one-size-fits-all; prioritize needs over generic solutions.  <hr />- Each model has distinct strengths and trade-offs; identify what truly matters for your application.  <hr />- Set clear priorities to guide the selection process, focusing on relevant attributes.  <hr />- Hard attributes are fixed, non-negotiable; examples include licensing, training data, privacy constraints.  <hr />- Soft attributes are adjustable and improvable; examples include accuracy, speed, reliability.  <hr />- The relevance of hard vs. soft attributes depends on usage context—API reliance vs. self-hosting shifts priorities.  <hr />- Filtering models by hard attributes first reduces options quickly; then optimize soft attributes like accuracy.  <hr />- Accuracy should be prioritized first; performance factors like speed matter after confirming model correctness.  <hr />- Benchmarks offer comparative insights but are limited; they reflect a snapshot, not comprehensive capability.  <hr />- Benchmarks may be skewed by data contamination—trained models may memorize test data, false signals of ability.  <hr />- Multiple benchmarks tailored to domain or language are essential for a valid performance view.  <hr />- Relying solely on one benchmark can mislead; diverse, relevant tests improve assessment fidelity.  <hr />- Data contamination (training data leakage) inflates benchmark scores without guaranteeing real-world effectiveness.  <hr />- Choosing between commercial (closed-source) and open-source models hinges on licensing, transparency, and control.  <hr />- Proprietary models like GPT-4, Claude-3 offer high performance but less flexibility; open models like Llama offer more control.  <hr />- Licensing restrictions (e.g., terms for training, usage) influence open-source adoption; legal considerations matter.  <hr />- Hosting choice involves API access vs. self-hosting; each impacts privacy, performance, cost, and control.  <hr />- API use favors simplicity and lower initial cost but might limit customization and raise privacy concerns.  <hr />- Self-hosting grants control, customization, privacy, but entails higher setup and maintenance effort.  <hr />- Performance prestige favors proprietary models; lighter open models suit cost-effective or specialized tasks.  <hr />- Features like structured output, moderation, batching are generally model-provider specific; define needs early.  <hr />- Cost considerations include API scaling fees vs. infrastructure and engineering expenses of self-hosting.  <hr />- Control over requests and data dictates choice; sensitive topics favor self-hosting for flexibility.  <hr />- Final decision balances privacy, privacy, performance, cost, and control, tested in real-world scenarios.  <hr />- Adaptability and ongoing evaluation ensure the model remains suitable as needs evolve.","tags":"ai llm","authors":"thanh","date":{"days":20011},"category":"playground > topics > llm"},"418":{"file_path":"playground/topics/llm/dealing-with-long-term-memory-in-ai-chatbot.md","title":"Storing Long-Term Memory in ChatGPT Using VectorDB","description":"An overview of how to implement long-term memory in a ChatGPT-based chatbot using a Vector Database (VectorDB) to store conversation history and retrieve the most relevant past interactions.","spr_content":"Chat application manages growth in context window via Vector Database as Long Term Memory.  <hr />Conversion of messages into embeddings creates semantic vectors.  <hr />Vectors stored with metadata in VectorDB for persistent retrieval.  <hr />Session ID tracks dialogue continuity over time.  <hr />Upon new message, query VectorDB using similarity measures (cosine) to find relevant past exchanges.  <hr />Retrieved messages inform current response generation, enhancing context.  <hr />Generated response is also vectorized and stored to enrich memory.  <hr />Cycle repeats for each message, expanding knowledge base.  <hr />This setup widens effective context window, stabilizes topic shifts, and improves robustness.  <hr />Process flow aligns with creating, storing, querying, retrieving, and responding, continuously.","tags":"ai llm vector-database","authors":"thanh","date":{"days":19544},"category":"playground > topics > llm"},"419":{"file_path":"playground/topics/llm/how-to-talk-to-chatgpt-effectively.md","title":"How to talk to ChatGPT effectively","description":"This post presents technique to improve the your output when prompting ChatGPT.","spr_content":"- ChatGPT is an advanced language model by OpenAI designed for natural language interaction.<hr />- Effective communication with ChatGPT depends on well-crafted prompts—inputs include instructions, questions, context, examples.<hr />- Prompts serve as cues, guiding the AI's understanding and output quality.<hr />- Interaction with ChatGPT is like a text conversation; clarity, conciseness, and context are crucial.<hr />- Understanding your goal (information, creativity, problem-solving) optimizes prompt design.<hr />- Precise, clear prompts yield relevant, high-quality responses; vague prompts lead to less useful output.<hr />- Providing background context helps AI understand scenarios; unnecessary details should be avoided.<hr />- Iterative prompt refinement enhances output effectiveness over time.<hr />- Tailoring prompts to the intended audience aligns responses with user needs.<hr />- Continuous evaluation and adaptation of prompts improve overall communication with the AI.<hr />- Effective prompts often include explicit directions (style, persona, task type) and specific format instructions.<hr />- Examples clarify expected outputs, guiding the model toward desired results.<hr />- Task division into multiple steps (divide labor) supports complex goal achievement.<hr />- Output customization involves defining personas, templates, recipes, and contextual instructions.<hr />- Persona-based prompts simulate experts or roles, improving situational relevance.<hr />- Templates provide structured formats for detailed, consistent outputs.<hr />- Recipes specify a sequence of steps to achieve particular outcomes in data, analysis, or generation.<hr />- Context control maintains conversation coherence by remembering details across interactions.<hr />- Interaction prompts let ChatGPT ask clarifying questions, ensuring comprehensive and tailored responses.<hr />- Overall, prompt engineering is about strategic, precise instruction to activate and leverage the LLM’s latent capabilities effectively.","tags":"ai chatgpt prompt","authors":"minh_cloud","date":{"days":19895},"category":"playground > topics > llm"},"420":{"file_path":"playground/topics/llm/feedback-mechanism.md","title":"Design feedback mechanism for LLM applications","description":"Improving AI models requires collecting accurate user feedback,which can be difficult. The article explores more into the importance of collecting human feedback and discusses the need for creating an organized database to effectively store and use this valuable input. We hope to continuously improve our large language models, ensuring they deliver greater performance and match user expectations more effectively.","spr_content":"- Ensuring consistent, accurate LLM responses requires robust feedback systems.  <hr />- Feedback collection begins with comprehensive logging of interactions, including explicit and implicit signals, prompt history, and model parameters.  <hr />- Feedback data is used for model improvement, primarily through fine-tuning via Reinforcement Learning from Human Feedback (RLHF).  <hr />- Validation involves A/B testing and performance tracking with validation agents post-deployment.  <hr />- Implicit feedback signals include stop-generation actions, user’s fact-checking behaviors, and request for regeneration, indicating dissatisfaction or irrelevance.  <hr />- Explicit feedback comprises thumbs-up/down, numerical ratings, surveys, and textual comments directly expressing user satisfaction or specific issues.  <hr />- Organized feedback employs structured database schemas:  <hr />   - **chat_feedback table:** links feedback to conversation threads (`thread_id`) and specific messages (`chat_id`), categorizes feedback (`type_id`), and includes user notes.  <hr />   - **feedback_type table:** defines feedback categories with descriptive names (`name`) and identifiers (`id`).  <hr />- Relationships ensure traceability from feedback back to context (threads, messages) and feedback type for pattern analysis.  <hr />- Feedback UI allows users to specify interactions: selecting predefined issues (e.g., \"Too long,\" \"Irrelevant\") and adding notes, linked via `type_id` and message identifiers.  <hr />- Collected feedback forms a valuable dataset for subsequent training phases, especially for refining model accuracy and responsiveness.  <hr />- Next steps involve leveraging feedback datasets in RLHF processes, detailed in external articles and training pipelines.  <hr />- Continuous feedback analysis supports ongoing improvements, making AI responses more accurate, relevant, and user-friendly.","tags":"feedback llm mechanism","authors":"datnguyennnx","date":{"days":19912},"category":"playground > topics > llm"},"421":{"file_path":"playground/topics/llm/intent-classification-by-llm.md","title":"Intent classification by LLM","description":"User intent classification is a crucial aspect of conversational AI, start with machine learning models, but now advanced language models (LLMs) are being explored for this task. Unlike the old methods which is need to labeled datasets exhaustively, LLMs can understand what users mean without all that preparation. This memo explores the application of LLMs in intent classification, highlighting their potential to streamline the process and overcome traditional NLU limitations.","spr_content":"- User intent classification enhances conversational AI; transitions from traditional models to LLMs.<hr />- Traditional methods require exhaustive labeled datasets; LLMs infer meaning from context and nuance.<hr />- LLMs classify intent without extensive training data, streamlining NLU processes.<hr />- Intent detection defines goals behind user inputs; multi-method approaches exist—human and ML.<hr />- LLMs leverage context understanding, reducing labeling needs and improving accuracy.<hr />- Example: E-commerce chatbot uses LLM to classify intents like product search, add to cart, view cart, checkout, support, other.<hr />- Example prompt: LLM outputs JSON intent and details, enabling different user flows.<hr />- Fallback intent (\"Other\") manages ambiguous or unknown inputs, ensuring robustness.<hr />- Chain-of-thought prompting enhances interpretability and accuracy via reasoning steps.<hr />- Without CoT: direct classification; with CoT: reasoning behind classification increases transparency.<hr />- Temperature controls output randomness; lower for deterministic responses, higher for diversity.<hr />- Few-shot learning via example prompts improves accuracy without model retraining.<hr />- Limitations: handling multiple intents, hallucinations, lack of explainability without CoT.<hr />- Multiple labels increase output variability and confusion risk.<hr />- Hallucinations may cause incorrect classifications.<hr />- Without CoT, decision process remains a black box; CoT aids explainability.<hr />- LLMs facilitate easy, accurate intent extraction; vital for conversational AI workflows.","tags":"intent-classification llm prompting","authors":"hoangnnh","date":{"days":20005},"category":"playground > topics > llm"},"422":{"file_path":"playground/topics/llm/generative-ui.md","title":"What is Generative UI?","description":"An introduction to Generative UI (genUI), a user interface that generates interactive elements in response to user needs using AI, enhancing UX in chat applications. The article explores examples, benefits, and popular solutions like the Vercel AI SDK for implementing generative UI.","spr_content":"- Generative UI (genUI) is an interactive interface that replaces static text with AI-generated, dynamic UI elements.  <hr />- It personalizes experiences based on user needs and context.  <hr />- Users interact directly with the AI-created UI components, enabling requests and responses.  <hr />- Examples include UIs displaying weather information or stock prices, not just text replies, enhancing visual presentation and information clarity.  <hr />- Benefits include improved UI/UX in chatbots and highly tailored user interfaces for individual users.  <hr />- Vercel AI SDK is a popular solution, utilizing server components to handle event streaming server-side within Next.js, avoiding client-side delays.  <hr />- The SDK employs `createStreamableUI()` to generate UI components that respond immediately and update seamlessly without client-side scripting.  <hr />- Pseudo code demonstrates the backend process: initializing UI, handling stream events, updating components, and integrating with user input.  <hr />- The approach simplifies implementation: just import the SDK functions; however, it’s primarily suited for Next.js’s App Router with limited documentation for Page Router.  <hr />- The overarching goal is enabling chatbots to respond with both text and UI in proper sequence, understanding the UI context, adaptable across web technologies.  <hr />- The proposed methodology uses Langchain tools supporting LLM streaming; each tool has designated UI components triggered upon interaction.  <hr />- Two main approaches exist:  <hr />  1. Backend constructs structured messages (type and data), then sends complete UI responses to the frontend.  <hr />  2. Streams events directly to the frontend, which dynamically renders UI components as they arrive, maintaining real-time responsiveness.  <hr />- Stream event handling ensures synchronized and context-aware UI updates during LLM processing.","tags":"ai generative-ui llm","authors":"TheCodister namnanh14mn","date":{"days":19943},"category":"playground > topics > llm"},"423":{"file_path":"playground/topics/llm/multi-agent-collaboration-for-task-completion.md","title":"Multi-agent collaboration for task completion","description":"In AI integrated systems, instead of put all workload on a single agent, we can apply divide and conquer strategy to distribute workload to multiple agents. This approach can enhance task completion by leveraging the unique skills and capabilities of each agent.This approach allows for more complex and nuanced problem-solving, as well as increased efficiency and scalability. By coordinating and communicating effectively, agents can work together to achieve common goals, divide labor, and overcome challenges that a single agent might face alone","spr_content":"- Divide and conquer distributes workload among multiple specialized agents in AI systems.  <hr />- Each agent handles a specific feature or task, leveraging unique capabilities.  <hr />- Multi-agent coordination enhances complex problem-solving, efficiency, scalability.  <hr />- Supervisor manages task routing, workflow, result collection, decision-making.  <hr />- Agents communicate via supervisor, perform sub-tasks using tools, report results.  <hr />- System design mimics human delegation, with hierarchy: supervisor > agents > tools.  <hr />- In complex scenarios, multiple agents collaborate, each specializing in modules like events, projects.  <hr />- Proper prompts clarify roles: supervisor assigns, agents reason and execute, tools assist.  <hr />- Workflow involves task decomposition, sequential or parallel processing, result integration.  <hr />- Challenges: coordination, communication, workflow management; addressed by system prompts, supervision.  <hr />- Multi-agent systems emulate sophisticated organization of tasks, improving reliability, covering large scope.  <hr />- This approach supports handling multi-step, multi-feature requests more effectively than single-agent setups.","tags":"ai-agents ai-integration llm","authors":"hoangnnh","date":{"days":19972},"category":"playground > topics > llm"},"424":{"file_path":"playground/topics/llm/evaluate-chatbot-agent-by-simulated-user.md","title":"Evaluate Chatbot Agent by User Simulation","description":"When building a chatbot agent, it's important to evaluate its performance and user satisfaction. One effective method is user simulation, which involves creating virtual users to interact with the chatbot and assess its responses. This approach allows for a more realistic evaluation of the chatbot's capabilities and user experience.","spr_content":"- Building chatbots requires performance and user satisfaction assessment.<hr />- User simulation involves creating virtual users for interaction testing.<hr />- Simulated users generate queries and evaluate responses based on preset criteria.<hr />- AI-AI interaction is more efficient and cost-effective than human involvement.<hr />- System architecture: two main components—Agent (chatbot) and Simulated User (AI-driven).<hr />- Agent can be rule-based or model-based, tasked with handling customer support for airlines.<hr />- Simulated User's goal: obtain a refund for a trip taken 5 years ago, aiming for full reimbursement.<hr />- Prompts define roles: user as Harrison, customer seeking refund; system as airline support.<hr />- Role swapping functions facilitate AI-to-AI conversation simulation.<hr />- Evaluation involves a judge (evaluator) analyzing if the user succeeded in their goal.<hr />- Evaluator criteria: success in refund, response tone, redundancy, tool call accuracy.<hr />- Use structured prompt templates and coverage parsing schemas for consistent assessment.<hr />- Run simulations to observe interactions, then evaluate outcomes, e.g., refund success.<hr />- Visualized results show the AI plays its role convincingly; success status derived from evaluation.<hr />- Evaluation reasoning explains why a conversation did or did not succeed.<hr />- This method supports realistic, flexible testing of chatbot/AI performance in real scenarios.<hr />- Key references provide implementation guidance and examples for advanced simulation setups.","tags":"ai-agents ai-evaluation llm","authors":"hoangnnh","date":{"days":19978},"category":"playground > topics > llm"},"425":{"file_path":"playground/topics/llm/llm-tracing-in-ai-system.md","title":"LLM tracing in AI system","description":"Understanding LLM Tracing - Principles, Techniques, and Applications in building LLM-powered AI systems.","spr_content":"LLMs differ from traditional software through their probabilistic, neural network-based architecture; traditional software is deterministic with explicit instructions.  <hr />LLM tracing is a final, continuous step in software development, enabling insights and ongoing improvements.  <hr />Unpredictable outputs stem from probabilistic nature, making results variable for identical inputs.  <hr />LLMs function as black boxes; their decision-making processes are opaque and complex.  <hr />Interactions involve multiple components—retrieval, filters, classifiers, APIs—adding layers of complexity.  <hr />Performance varies with input complexity, model scale, and hardware environments.  <hr />Behavior can evolve via fine-tuning, prompts, or updates, requiring dynamic monitoring.  <hr />Errors may be subtle, including hallucinations and biases, demanding precise diagnosis.  <hr />Continuous improvement relies on prompt engineering, fine-tuning, and iterative updates.  <hr />Key metrics: operational (latency, throughput, error rate, resource use) versus evaluative (accuracy, relevance, bias, hallucinations, coherence).  <hr />Operational metrics gauge performance; evaluative metrics assess output quality and fairness.  <hr />Tools like LangSmith, Phoenix, TraceLoop, OpenTelemetry, and Portkey facilitate LLM tracing and observability.  <hr />References provide detailed guides on LLM evaluation, tracing, and software paradigms; practical demos exist online.","tags":"ai llm tooling","authors":"antran","date":{"days":19977},"category":"playground > topics > llm"},"426":{"file_path":"playground/topics/llm/evaluation-guideline-for-llm-application.md","title":"Evaluation guidelines for LLM applications","description":"This guide offers a structured approach to evaluating and optimizing the integration of third-party Large Language Models (LLMs) into applications, ensuring alignment with business goals and user needs through detailed checklists and evaluation metrics.","spr_content":"- Evaluation of RAG systems is complex, especially when integrating third-party LLMs for business applications.<hr />- A structured, step-by-step approach ensures alignment with technical and business goals.<hr />- The evaluation checklist covers key system components: search, retrieval, response generation, latency, cost efficiency, and human-in-the-loop.<hr />- Search engine metrics focus on precision, recall, task-specific accuracy, latency, and scalability.<hr />- Response generation assessment includes coherence, relevance, factual accuracy, and human feedback.<hr />- Token usage constraints balance cost and performance; efficiency is critical.<hr />- Fine-tuning enhances task-specific accuracy, reduces errors, and improves handling of edge cases.<hr />- Post-fine-tuning metrics include decreased loss, increased accuracy, and improved generalization.<hr />- Model evaluation leverages synthetic datasets, vector search metrics (NDCG, MRR), full-text precision, and hybrid assessments.<hr />- Search response accuracy is measured by precision, recall, F1, hit rate, Top-K accuracy, MAP, MRR, and NDCG.<hr />- LLMs as evaluators excel in relevance, coherence, answer correctness, bias detection, toxicity, availability, cost, multilingual ability, and adaptability.<hr />- Evaluation tools include RAGAS for retrieval fidelity, G-Eval for general output quality.<hr />- Benchmarking relies on baselines, targets, acceptable ranges for accuracy, latency, throughput, cost, context window, and error rates.<hr />- Monitoring and tracing tools like LangFuse and LangSmith support ongoing performance assessment and real-time diagnostics.<hr />- Coverage and monitoring via comprehensive test sets and CI/CD integration ensure robustness.<hr />- Combining analytics with user feedback enhances evaluation accuracy and user satisfaction.<hr />- Fine-tuning improves understanding, reduces errors, and handles rare cases better.<hr />- Performance metrics show significant gains post-fine-tuning: increased task accuracy, reduced error rates, improved search precision.<hr />- The guide emphasizes continuous iteration, aligning technical performance with user expectations, and leveraging evaluation metrics and tools for optimal RAG system success.","tags":"evaluation llm","authors":"datnguyennnx","date":{"days":19992},"category":"playground > topics > llm"},"427":{"file_path":"playground/topics/llm/trace-pillar.md","title":"Tracing","description":"Tracing is like following your LLM’s journey, step by step. We will explain how tracing makes it easy to identify and address problems by allowing you to track the entire process.","spr_content":"- Tracing tracks internal operations of an LLM application, providing a detailed snapshot for debugging, performance tuning, and transparency.  <hr />- It captures specific actions called “spans,” each with inputs, outputs, and metrics, forming a tree or graph structure.  <hr />- The top-level “Root Run” initiates the trace, representing the entire request lifecycle.  <hr />- Traces show timing, token usage, sequence, and errors, enabling performance analysis and troubleshooting.  <hr />- Tools like Klu.ai and LangSmith log calls, visualize inputs/outputs, errors, and costs, aiding debugging and source attribution.  <hr />- Tracing is essential for identifying application latency, token costs, runtime exceptions, retrieved documents, LLM parameters, and prompt templates.  <hr />- A trace is a distributed record crossing components, forming a tree starting with a root span for the whole operation and child spans for subtasks.  <hr />- Spans detail individual operations such as chains (workflows), embeddings, retrievals, LLM calls, tool integrations, and agent decisions.  <hr />- Main elements: Trace (overview of the request lifecycle) and Span (specific step details).  <hr />- Trace attributes include scope (whole request) and data collected (timing, errors, details).  <hr />- Spans represent granular actions—queries, API calls, data fetches—organized for clarity.  <hr />- Overall, tracing offers visibility into system flow, aids debugging, and optimizes component interactions in LLM applications.","tags":"llm observability pillar tracing","authors":"datnguyennnx","date":{"days":20007},"category":"playground > topics > llm"},"428":{"file_path":"playground/topics/llm/proximal-policy-optimization.md","title":"Proximal Policy Optimization","description":"Proximal Policy Optimization (PPO) is an algorithm that aims to improve the stability of training by avoiding overly large policy updates. It is a popular and effective method used for training [[Reinforcement Learning | reinforcement learning]] models in complex environments. To achieve this, PPO uses a ratio that indicates the difference between the current policy and the old policy and clips this ratio within a specific range, ensuring that the policy updates are not too large and the training process is more stable...","spr_content":"PPO (Proximal Policy Optimization) aims to stabilize reinforcement learning training by constraining policy updates.  <hr />It uses a ratio between current and old policies, clipping this ratio to prevent large jumps, ensuring stability.  <hr />PPO employs gradient ascent with policy change constraints—either via trust regions (TRPO) or a clipped surrogate objective; PPO prefers the latter for simplicity and efficiency.  <hr />In large language model fine-tuning, PPO improves response quality through reinforcement learning guided by curated prompts.  <hr />The policy function generates responses; the value function estimates expected reward for input or state-action pairs.  <hr />Training involves data sampling by the current model, policy updates via PPO, then performance evaluation metrics.  <hr />Compared to TRPO, PPO is simpler, faster, with less computational overhead but slightly less theoretical guarantee; TRPO enforces strict trust regions.  <hr />PPO2 is an optimized, GPU-friendly variant with advantages in parallel training and advantage normalization; it supersedes vanilla PPO for practical usage.  <hr />PPO balances speed, caution, and usability; it often converges faster and performs better than more complex algorithms like TRPO, though lacking some theoretical robustness.","tags":"ai llm reinforcement-learning","authors":"thanhpn","date":{"days":19907},"category":"playground > topics > llm"},"429":{"file_path":"playground/topics/llm/exploring-machine-learning-approaches-for-fine-tuning-llama-models.md","title":"Exploring Machine Learning Approaches For Fine Tuning Llama Models","description":"Learn how to fine-tune LLaMA large language models efficiently using PEFT LoRA for cost-effective, private AI customization with step-by-step guidance and open-source tools.","spr_content":"- 2023: year of generative AI; rapid AI progress; difficult to keep up.  <hr />- LLM landscape evolving fast; market saturated with OpenAI ChatGPT integrations and plugins.  <hr />- Growing interest in custom LLaMA models; trend similar to Stable Diffusion vs. DALL-E.  <hr />- AI knowledge becomes outdated daily; expertise rare; necessity to explore AI technicalities.  <hr />- Dwarves uses AI tools for learning, experimentation, creativity, and research.  <hr />- Experience with Stable Diffusion for generative art; vector databases for AI data management.  <hr />- Developed demos and notebooks using Langchain for guided results and prompt strategies.  <hr />- Challenge: lack of private AI models; costs of OpenAI hard to afford; need for custom fine-tuning.  <hr />- Open-source models like Dolly 2.0 and StableLM demonstrate viable alternatives; base model race is intense.  <hr />- PEFT LoRA: cost-effective, parameter-efficient fine-tuning for LLaMA; adds minimal weights to transformers.  <hr />- LoRA works by inserting weights into transformer layers without full model retraining; small file sizes; less compute.  <hr />- Goal: fine-tune LLaMA with PEFT LoRA, create adapters, and combine them with base models.  <hr />- Data: small, sparse datasets; instruction tuning with simple prompts; pattern preservation.  <hr />- Data preparation: format instruction, input, output in JSON; tokenize and map using datasets library.  <hr />- Fine-tuning setup: configure LoRA parameters (r, alpha, dropout); prepare model with gradient checkpointing.  <hr />- Use training loops and environment variables; implement in Colab/Jupyter with Hugging Face integration.  <hr />- Save trained models and adapters; push to Hugging Face repositories; merge adapters if needed.  <hr />- Deployment: use Dolly v2 instruction pipeline for interactive, context-aware generation.  <hr />- Cloud: leverage SkyPilot for cloud-agnostic, scalable AI workloads; inspired by Terraform.  <hr />- First steps in fine-tuning demonstrate low barrier to AI entry; continuous experimentation planned.  <hr />- Future: larger datasets, advanced tuning, Langchain integration, scalable infrastructure.  <hr />- Resources: links to datasets, models, and training notebooks; open-source community progress.","tags":"engineering llm machine-learning","authors":"","date":{"days":19481},"category":"playground > topics > llm"},"430":{"file_path":"playground/topics/llm/logs-pillar.md","title":"Logging","description":"Logs are like the footprints of your LLM, tracking every move it makes. We will look at how logging can help you see beneath the top layer of a system, which can help you troubleshoot problems and better understand the system behavior.","spr_content":"- Logging records interactions between users and LLMs, capturing prompts, responses, and system states.  <hr />- It documents inputs, outputs, memory usage, current system state, and prompts, forming a comprehensive picture of the system’s operation.  <hr />- Logging enhances user experience by revealing interaction patterns, identifying issues, and guiding improvements.  <hr />- It improves model accuracy through analysis of errors, underperforming outputs, and failure points, enabling targeted adjustments.  <hr />- Logs facilitate faster debugging by pinpointing failure points, component failures, or crashes, reducing troubleshooting time.  <hr />- Logs inform decision-making by highlighting trends, feature performance, and areas for resource investment over time.  <hr />- Techniques include session logging—tracking entire user-model interactions with confidence scores;  <hr />- Contextual metadata logging—adding information such as component type, processing latency, device, and session details for layered analysis;  <hr />- Prompt management logs—tracking prompts, responses, response scores, and usage context to fine-tune prompt design and response quality.  <hr />- Key elements in logging:  <hr />  - Model parameters (temperature, max tokens, top-k, top-p) adjusted based on log analysis to optimize output.  <hr />  - Management agents’ input/output logs reveal task handling correctness and efficiency.  <hr />  - Chain and step logs trace retrieval, embedding, API calls, and generation processes, enabling debugging complex workflows.  <hr />  - Evaluation scoring logs provide performance metrics (accuracy, relevance), aiding performance assessments.  <hr />- Logged data can be visualized through dashboards, charts, and graphs for trend detection, real-time monitoring, and shared insights.  <hr />- Feedback loops incorporate human judgment, allowing human-in-the-loop adjustments based on logged interactions, improving system responses.  <hr />- Analyzing logs yields insights for system tuning, error correction, user experience enhancement, and strategic planning.  <hr />- Despite seeming minor, logging is vital for transparency, system robustness, continuous improvement, and understanding of model behavior.","tags":"llm log observability pillar","authors":"datnguyennnx","date":{"days":20007},"category":"playground > topics > llm"},"431":{"file_path":"playground/topics/llm/re-ranking-in-rag.md","title":"Re-ranking in RAG","description":"Re-ranking is a crucial step in Retrieval-Augmented Generation (RAG) systems that addresses the challenge of retrieving heterogeneous and potentially irrelevant information. By evaluating and re-ordering retrieved documents, re-ranking ensures that only the most relevant and useful information is passed to the generation model. This process significantly improves the coherence, accuracy, and relevance of the generated text, ultimately enhancing the reliability and effectiveness of RAG systems.","spr_content":"- RAG systems retrieve heterogeneous documents related to queries, often including extraneous details.<hr />- Noise from irrelevant data reduces coherence, accuracy, and reliability of generated outputs.<hr />- Preprocessing embeddings captures semantic, but lacks contrastive information, causing confusion between similar statements with different meanings.<hr />- Embeddings are dimension-constrained (e.g., 1024), limiting detailed encoding, especially for longer texts.<hr />- Retrieved context may contain irrelevant or noisy information, necessitating filtering.<hr />- Re-ranking is a second-pass filtering step that reorders retrieved documents by relevance, improving accuracy.<hr />- Re-ranking functions like a selective filter, prioritizing useful references in multi-source retrieval.<hr />- Methods include:<hr />  - Re-ranking models (e.g., BERT-based, CohereRerank), understanding context and semantics better than raw retrieval.<hr />  - LLM-based re-ranking, leveraging full document/query understanding via prompts and adaptive techniques (e.g., sliding window, bubble sort).<hr />  - Reciprocal Rank Fusion (RRF), combining multiple retrieval results into a unified ranking.<hr />- Implementation example:<hr />  - Prepare diverse documents about shrimp, spanning positive, negative, and neutral opinions.<hr />  - Embed and store documents; retrieve with a vector store.<hr />  - Use a re-ranker like CohereRerank to refine the relevance order.<hr />- Cosine similarity prioritizes semantically close documents but may not reflect true relevance.<hr />- Cohere re-ranker evaluates and adjusts rankings to prioritize context most aligned with the query.<hr />- Fore example, for \"Do I love eating shrimp?\": <hr />  - Cosine similarity ranks less relevant passages highest.<hr />  - Cohere re-ranker promotes more pertinent passages, like positive shrimp opinions.<hr />- Re-ranking significantly improves the relevance and quality of context fed into generation models.<hr />- Proper re-ranking is critical in RAG to reduce noise, enhance output coherence, and ensure factual accuracy.","tags":"ai llm rag","authors":"hoangnnh","date":{"days":19930},"category":"playground > topics > llm"},"432":{"file_path":"playground/topics/llm/hybrid-search.md","title":"Evaluating search engine in RAG systems","description":"Hybrid search comes to solving problems in vector search and full-text search. Let's see how it works. In this article, we will know how hybrid search approach and how to evaluate each search method through metrics in information retrieval.","spr_content":"- Retrieval-Augmented Generation (RAG) challenges traditional search and information retrieval in LLM contexts.<hr />- Hybrid search combines vector and full-text search, leveraging their strengths and offsetting weaknesses.<hr />- Vector search relies on embedding similarities; uses cosine similarity or Euclidean distance.<hr />- Vector search provides contextual relevance but may miss specific keywords or details.<hr />- Full-text search employs inverted index, TF-IDF, Boolean operators, and exact keyword matching.<hr />- Full-text search offers high precision but can return irrelevant documents with similar keywords.<hr />- Hybrid search activates when both relevance and precision are critical—e.g., scientific article retrieval.<hr />- Hybrid approach combines exact keyword matches with contextual understanding for balanced results.<hr />- Limitations: increased latency, context-length constraints, database support issues.<hr />- To optimize results, apply ranking techniques: re-rank models and Reciprocal Rank Fusion (RRF).<hr />- Re-rank models score documents by semantic relevance, improving order.<hr />- RRF combines multiple ranked lists with a scoring formula favoring consensus documents.<hr />- Search techniques are stored per dataset in Postgres, with configurable properties:<hr />  - searchMethod (vector, full-text, hybrid)<hr />  - topK (number of chunks)<hr />  - similarityThreshold (vector similarity cutoff)<hr />  - alpha (full-text vs. vector emphasis)<hr />- retrievalSearch function dynamically switches between search methods, returning formatted RankedResult list.<hr />- RankedResult includes content, sourceType, vectorRank, textRank, RRF score.<hr />- Results are sorted descending by RRF score, topK returned.<hr />- Evaluation metrics:<hr />  - Recall: proportion of relevant docs retrieved.<hr />  - Precision: relevance of retrieved docs.<hr />  - F1-score: harmonic mean of recall and precision.<hr />  - NDCG: ranks quality based on relevance position and importance.<hr />- Choosing hybrid search mitigates trade-offs; re-rank improves accuracy but involves costs and size limits.<hr />- Metrics guide dataset-specific decisions: recall indicates completeness; precision confirms accuracy.<hr />- Summary: hybrid search suits complex, nuanced queries; metric evaluation ensures optimal method selection.<hr />- References support evaluation and implementation strategies for hybrid search and metrics.","tags":"evaluation llm rag search","authors":"datnguyennnx","date":{"days":19943},"category":"playground > topics > llm"},"433":{"file_path":"playground/topics/llm/chunking-strategies-to-overcome-context-limitation-in-llm.md","title":"Chunking strategies to overcome context limitation in LLM","description":"This article explores chunking strategies to handle context limitations in Large Language Models (LLMs) like GPT. It covers preprocessing data, selecting chunk sizes, and how to maintain coherence in various content types such as unstructured, Markdown, and LaTeX.","spr_content":"- LLMs, like GPT, face constraints on processing prompt size; GPT-3.5 maxes at 4096 tokens (~3000 words).  <hr />- Limitations hinder tasks with large texts: extensive documentation, long chat histories.  <hr />- Future models (e.g., GPT-4) may expand context windows but with increased computing costs and latency.  <hr />- Chunking divides large texts into smaller segments for manageable embedding and retrieval.  <hr />- Preprocessing ensures high data quality: removes noise, HTML tags, non-textual elements.  <hr />- Content type influences chunking: short messages, long documents, formatted content (Markdown, LaTeX).  <hr />- Unstructured content requires fixed-size chunks, with overlaps, maintaining semantic continuity.  <hr />- Sentence or line-based splits can help, using tools like langchain’s CharacterTextSplitter.  <hr />- More sophisticated splitting uses NLTK or spaCy for linguistically meaningful chunks.  <hr />- Structured content (Markdown, LaTeX) benefits from structure-aware chunking, respecting hierarchy and syntax.  <hr />- Markdown: split by headings, lists, code blocks for coherence.  <hr />- LaTeX: split by commands, environments, preserving logical segments.  <hr />- Proper preprocessing and chunking unlock large text potentials, mitigating context limits.  <hr />- Effective chunking strategies provide coherent, relevant information extraction despite token constraints.","tags":"ai llm vector-database","authors":"thanh","date":{"days":19546},"category":"playground > topics > llm"},"434":{"file_path":"playground/topics/llm/llm-s-accuracy-self-refinement.md","title":"LLM's Accuracy - Self Refinement","description":"An overview of self-refinement, a technique where Large Language Models (LLMs) evaluate and improve their own output without the need for supervised data or reinforcement learning.","spr_content":"Self-refinement activates intrinsic evaluation capabilities of LLMs, enabling iterative self-assessment, scoring, and improvement of generated outputs. It replaces supervised instructing with autonomous quality control, leveraging the model’s inherent self-awareness. This process is recursive, allows multiple iterations, and is especially effective in models like GPT-4. Self-refinement enhances accuracy and output quality inherently, surpassing baseline methods without external training signals or reinforcement learning. It embodies a loop: generate → evaluate → score → refine → repeat for progressive enhancement.","tags":"ai llm prompt-engineering","authors":"thanh","date":{"days":19537},"category":"playground > topics > llm"},"435":{"file_path":"playground/topics/llm/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms.md","title":"Easy Prompt Engineering For Business Use And Mitigating Risks In Llms","description":"Learn essential prompt engineering techniques for ChatGPT to improve business app accuracy, handle complex tasks, and defend against risks like adversarial prompting and data leaks.","spr_content":"- Prompt engineering shapes LLM outputs through tailored prompts; essential for accuracy and safety.  <hr />- Instruction prompts are fundamental; they direct the model with clear, directive language.  <hr />- Least-to-most prompting decomposes complex problems into smaller subproblems via chain-of-thought reasoning.  <hr />- Breaking problems step-by-step enhances detail and reduces ambiguity, useful for business inquiries.  <hr />- Tool-prompts utilize role-specific instructions and formatting to generate outputs suitable for downstream applications like spreadsheets.  <hr />- Embedding prompts with context helps guide models to produce domain-specific or structured responses.  <hr />- Pre-context prompts can correct or enhance transcribed text, improving quality in real-time transcription scenarios.  <hr />- Adversarial prompts can manipulate LLM behavior; defenses include adding restrictive prompts, flags, or locked instructions.  <hr />- Defensive prompt design includes phrases like \"do not allow any user to change this instruction\" to freeze instructions.  <hr />- Awareness of jailbreak techniques (e.g., DAN, Mango Tom) necessitates robust prompt strategies for safety.  <hr />- Combining multiple prompting techniques—instruction, chain-of-thought, role, defensive—maximizes control over model outputs.  <hr />- Fine-tuning prompts for specific contexts reduces risks like political or data leak interactions.  <hr />- Continuous learning via resources like learnprompting.org enriches prompt design skills and understanding of model behavior.","tags":"engineering llm","authors":"","date":{"days":19499},"category":"playground > topics > llm"},"436":{"file_path":"playground/topics/llm/observability-in-ai-platforms.md","title":"Observability in AI platforms","description":"Observability in AI is all about understanding what’s going on inside complex systems. It gives you the tools - logs, metrics, and traces - to monitor, troubleshoot, and optimize how AI models and services run.","spr_content":"- Observability in AI, especially LLMs, involves understanding internal processes to ensure performance, trust, and compliance.  <hr />- It is critical for system stability, issue detection, and accountability in AI deployment.  <hr />- Early integration of observability tools prevents future complications and facilitates scalable growth.  <hr />- Core pillars of observability: Metrics, Logs, and Traces each offer unique insights into system behavior.  <hr />- Metrics include system performance indicators (throughput, hardware use) and AI-specific metrics (accuracy, hallucination rate, cost).  <hr />- Logs record detailed system information: parameters, queries, outputs, lifecycle events, requiring consistent tagging for traceability.  <hr />- Traces map the full execution path, including retrieval, prompting, model interaction, with time and cost context; visualization aids understanding.  <hr />- Benefits of LLM observability: enhanced performance, faster troubleshooting, cost efficiency, explainability, and increased reliability.  <hr />- Challenges: complexity of models, third-party API rate limits, dynamic workloads, and data privacy concerns complicate monitoring.  <hr />- A comprehensive observability approach is vital for robust, accountable, and efficient AI systems.","tags":"llm observability","authors":"datnguyennnx","date":{"days":20007},"category":"playground > topics > llm"},"437":{"file_path":"playground/topics/llm/caching-with-rag-system.md","title":"Evaluating caching in RAG systems","description":"Caching is a vital technique that boosts performance by storing frequently accessed information. Let's see how it works with RAG. In this article, we will know how cache could be implement in RAG system.","spr_content":"- RAG combines retrieval and generation for AI tasks, enhancing performance.<hr />- Caching reduces latency and costs by storing frequently accessed data.<hr />- KV cache stores intermediate keys/values for faster long-sequence generation; out of scope here.<hr />- Prompt cache stores processed system prompts, avoiding reprocessing, especially for long prompts or documents.<hr />- Examples of prompt caching include Gemini and LLAMA implementations.<hr />- Exact cache saves user-specific outputs or vector search results for reuse.<hr />- Semantic cache identifies similar user requests or responses, enabling approximate matching.<hr />- Between user and vector DB: transform queries into embeddings, store in vector database, search for similar vectors, and retrieve cached responses.<hr />- Embeddings can be generated via tools like sentence-transformers or OpenAI API.<hr />- Vector databases include Chroma or PGVector with HNSW indexing for fast similarity search.<hr />- Cache search involves computing cosine similarity and thresholding; if above threshold, return cached result.<hr />- Between user and generative model: cache entire model responses to ensure consistency and save computation, at the cost of flexibility.<hr />- Caching strategies depend on use case: performance, cost, flexibility trade-offs.<hr />- Proper cache layer choice elevates RAG system efficiency.","tags":"caching llm rag","authors":"taynguyen","date":{"days":19944},"category":"playground > topics > llm"},"438":{"file_path":"playground/topics/llm/model-context-protocol.md","title":"Intro to Model Context Protocol","description":"Explore Anthropic's Model Context Protocol (MCP) - a groundbreaking approach to enhancing AI assistants. Learn how MCP integrates with local and remote resources, enabling smarter interactions with tools and databases.","spr_content":"- Anthropic introduced Model Context Protocol (MCP) as an open-source, transformative shift in AI architecture.  <hr />- MCP overcomes traditional data isolation, facilitating better data-AI integration.  <hr />- Uses client-host-server architecture; each host can run multiple clients, enabling scalable, isolated, secure connections.  <hr />- Emphasizes local-first connections, addressing privacy/security by minimizing external data exposure.  <hr />- Built on JSON-RPC, providing stateful sessions focused on context exchange and sampling coordination.  <hr />- Components include MCP host (e.g., Claude Desktop), MCP clients, MCP servers, local resources, and remote resources.  <hr />- MCP servers expose specific capabilities; clients maintain 1:1 connections with servers.  <hr />- Enables AI systems to access diverse data sources (Google Drive, Slack, GitHub, Postgres) and tools, enhancing AI assistant integration.  <hr />- Example configuration shows MCP servers configured via command-line tools, with environment-based resource access.  <hr />- MCP enhances AI agents: speeds up tasks, scales easily, improves decision-making with up-to-date data.  <hr />- Fosters new automation, creative, and intelligent business workflows through seamless, standardized platform connections.  <hr />- Promotes complex, adaptable AI workflows, transitioning from simple automation to intricate operations.  <hr />- Ensures standardized interactions, prioritizes local-first architecture for security and frictionless integration.  <hr />- Open-source nature supports ongoing innovation and ecosystem growth.  <hr />- Unlike function-call mechanisms that restrict tools, MCP allows bidirectional, real-time communication with external systems.  <hr />- Empowers AI to independently perform complex activities, e.g., improving Dev workflows, handling files, managing code repositories.  <hr />- Simplifies enterprise AI adoption by providing pre-built integrations for platforms like GitHub, Google Drive, PostgreSQL.  <hr />- Adoption verified by companies like Block, Apollo, and toolmakers such as Zed, Replit, Codeium.  <hr />- MCP's approach fundamentally alters AI data interaction, automation, and enterprise integration paradigms.","tags":"llm mcp protocol","authors":"datnguyennnx","date":{"days":20056},"category":"playground > topics > llm"},"439":{"file_path":"playground/topics/llm/react-in-llm.md","title":"ReAct(Reason + Act) in LLM","description":"Working with Large Language Models (LLMs) may seem straightforward at first glance. Initially, we might think that simply prompting the AI model with a task is sufficient for it to assist us. However, when faced with more complex tasks, we need to break down the problem into smaller sub-tasks and guide the AI model to solve them sequentially. This is where the ReAct approach comes into play.","spr_content":"- Working with LLMs appears straightforward initially—prompt for task assistance.  <hr />- Complex tasks require decomposition into sub-tasks, guiding sequential problem-solving.  <hr />- ReAct (Reason + Act) paradigm enables LLMs to perform reasoning and actions, including external info retrieval.  <hr />- ReAct leverages Chain-of-Thought (CoT) for step-by-step reasoning internally.  <hr />- Unlike CoT—which reasons solely from internal knowledge—ReAct interacts with tools/APIs for external data.  <hr />- Example: Finding France's capital and population—CoT reasons internally; ReAct searches externally at each step.  <hr />- ReAct loop: Thought, Action (tool/API call), Pause, Observation, then iterate.  <hr />- Tools in ReAct: search results JSON, general knowledge engine.  <hr />- Implementation involves prompt design, node functions (model invocation, tool handling), and workflow graph.  <hr />- Nodes cycle: callModel (model reasoning), executeTools (tool invocation).  <hr />- Conditional edges direct flow based on intermediate results.  <hr />- ReAct enhances LLM capacity to handle multi-step, data-dependent tasks.  <hr />- Frameworks like LangChain, LlamaIndex support ReAct natively.  <hr />- ReAct is pivotal in advancing LLM problem-solving with modular, interactive reasoning.","tags":"ai llm","authors":"hoangnnh","date":{"days":20014},"category":"playground > topics > llm"},"440":{"file_path":"playground/topics/llm/supervisor-ai-agents.md","title":"Building Agent Supervisors to Generate Insights","description":"In the rapidly evolving field of artificial intelligence, the concept of agent supervisors has emerged as a powerful approach to orchestrating multiple AI agents for complex tasks. This article explores how building agent supervisors can lead to generating valuable insights, with a focus on a practical implementation in a Discord bot.","spr_content":"- Agent supervisors orchestrate multiple specialized AI agents for complex tasks.  <hr />- Building agent supervisors enhances insight generation capabilities.  <hr />- Practical implementation: Discord bot with supervisor architecture.  <hr />- System components: user interface (Discord chat, slash commands), supervisor (Langgraph), agents (SQL and Semantic), databases (relational, vector).  <hr />- Supervisor evaluates user intent, routes queries to SQL Insights or Semantic Insights agents.  <hr />- SQL Insights Agent converts natural language to SQL using text-to-SQL model (sqlcoder).  <hr />- SQL generated is verified with llama-2 for correctness and performance.  <hr />- Verified SQL executes on PostgreSQL, results formatted for users.  <hr />- Semantic Insights Agent uses vector database embeddings of Discord messages for semantic search.  <hr />- Workflow: user input → supervisor determines intent → agent activation → results synthesis → user output.  <hr />- SQL Agent: key steps—text-to-SQL, verification, execution, error handling, 95% success rate.  <hr />- Benefits: flexible routing, modular extensibility, natural language interface, context-aware semantic search, robust error handling.  <hr />- Challenges: query disambiguation, data privacy, performance optimization, scalability.  <hr />- Improvements: larger models for better semantic nuance, enhanced prompting strategies to reduce errors.  <hr />- Demonstrates agent supervisor's efficacy in combining structured and unstructured data insights via user-friendly AI tools.","tags":"ai llm supervisor-architecture","authors":"0xm","date":{"days":19915},"category":"playground > topics > llm"},"441":{"file_path":"playground/topics/llm/rlhf-with-open-assistant.md","title":"RLHF with Open Assistant","description":"An overview of Open Assistant, an open-source chat-based AI assistant, and its implementation of Reinforcement Learning from Human Feedback (RLHF). This article covers the three-step process of RLHF, system requirements, and detailed setup instructions for training the model using Supervised Fine-Tuning, Reward Modeling, and Reinforcement Learning.","spr_content":"Open Assistant (OA): open-source, chat-based AI assistant.  <hr />OA's goal: run on a single high-end consumer GPU.  <hr />OA interfaces with third-party apps, databases, internet information.  <hr />OA operation: three main steps—supervised fine-tuning (SFT), reward model (RM) training, reinforcement learning (RL).<hr /><hr />Supervised Fine-Tuning (SFT):  <hr />- Collect human conversation demos with instructions.  <hr />- Fine-tune pre-trained Large Language Model (LLM) via supervised learning.  <hr />- Results in an SFT model adapted to specific tasks.<hr /><hr />Reward Model (RM) training:  <hr />- Sample conversations from SFT.  <hr />- Humans rank assistant responses.  <hr />- Train RM to predict higher relevance responses.  <hr />- RM favors quality and relevance.<hr /><hr />Reinforcement Learning (RL) with PPO:  <hr />- Use RM as reward signal.  <hr />- Apply proximal policy optimization (PPO).  <hr />- Generate improved models better aligned with instructions.  <hr />- Cycle repeats for optimization.<hr /><hr />OA's RLHF flow: visualized as a feedback loop.  <hr />Cloud provider recommended: Redmond.ai—specialized in AI/ML cloud solutions.  <hr />System requirements depend on model size; e.g., 12B parameters need 8xA100 80GB GPUs.  <hr /><hr />Training setup involves:  <hr />- Environment: Python 3.10, CUDA 11.8, PyTorch, Jupyter (optional).  <hr />- Clone OA repo, prepare dataset, configure scripts.  <hr />- Perform SFT with DeepSpeed for efficiency.  <hr />- Train RM using provided scripts.  <hr />- Setup containerized Triton Inference Server via Singularity for inference and RL training steps.  <hr /><hr />In conclusion:  <hr />OA is designed to be a lightweight, versatile assistant capable of interfacing with external data sources, trained through an intricate process of supervised tuning, reward-based ranking, and reinforcement learning.  <hr />This approach ensures an assistant that learns to follow instructions more accurately and interactively.","tags":"ai llm reinforcement-learning","authors":"toanbku","date":{"days":19579},"category":"playground > topics > llm"},"442":{"file_path":"playground/topics/llm/graphrag.md","title":"GraphRAG - Building a knowledge graph for RAG system","description":"In baseline Retrieval Augmented Generation (RAG), sometimes the result might not be accurate as expected since the query itself have multiple layers of reasoning or the answer requires traversing disparate pieces of information through their shared attributes in order to provide new synthesized insights. In this post, we will explore a new approach called GraphRAG which combines the strengths of knowledge graphs and large language models to improve the accuracy of RAG systems","spr_content":"- Baseline RAG relies on retrieval and generation but may lack accuracy when reasoning involves multiple layers or disparate info connections.<hr />- Knowledge graph: structured schema representing real-world entities and relationships, stored in graph databases.<hr />- Entities: nodes with properties (name, type, description); can be objects, events, concepts.<hr />- Relationships: edges with types and properties (e.g., \"FRIEND_OF\", \"since\") connecting entities.<hr />- Knowledge graphs facilitate logical reasoning, connecting dots beyond keyword similarity.<hr />- Example: understanding a query about a pet’s preferences leverages relational paths in the graph.<hr />- GraphRAG combines knowledge graphs with LLMs to enhance retrieval-based accuracy.<hr />- Index stage extracts structured data from unstructured text via LLM:<hr />    - Split raw text into TextUnits.<hr />    - Use LLM for entity and relationship extraction.<hr />    - Construct graph: nodes and edges with summaries.<hr />    - Generate hierarchical communities with Leiden Algorithm.<hr />    - Summarize communities independently to capture global semantics.<hr />- Query stage has two modes:<hr />    - Local Query: semantic search on knowledge graph plus document chunks; best for entity-specific questions.<hr />    - Global Query: utilize community summaries in map-reduce framework; suited for holistic, comprehensive questions.<hr />- In Local Query, entities are extracted from the user input and semantically searched in the graph, filtered, and sorted for the answer.<hr />- In Global Query, community summaries are segmented, rated, filtered, and aggregated to produce the final response.<hr />- GraphRAG excels at multi-hop reasoning and linking disparate info but incurs high LLM call costs.<hr />- Summary: Integrating knowledge graphs in RAG improves reasoning, accuracy, and global context understanding at the expense of computational complexity.","tags":"llm rag","authors":"hoangnnh","date":{"days":20028},"category":"playground > topics > llm"},"443":{"file_path":"playground/topics/llm/story-map-for-llms.md","title":"Story map for LLMs","description":"A comprehensive guide outlining the journey for engineers developing applications on top of Large Language Models (LLMs), covering key stages from understanding AI basics to fine-tuning models.","spr_content":"- Engineer learning AI begins with foundational knowledge of AI, machine learning, and LLMs.  <hr />- Applications include NLP, computer vision, recommendation systems; broad potential.  <hr />- Study step-by-step guides, tutorials, videos, courses to comprehend LLMs like ChatGPT, LLaMA, GPT-J, HuggingGPT.  <hr />- Continuous learning to stay current with AI advancements and market landscape.  <hr />- Prompt engineering is crucial: provides context via hard prompts, guides latent space behavior without modifying weights.  <hr />- Building AI applications relies on leveraging existing models; fine-tuning often unnecessary initially.  <hr />- Developing chatbots: APIs, templates (OpenAssistant), focus on conversational understanding.  <hr />- Creating personal assistants: domain-specific nuances, communication skills, industry context determine complexity.  <hr />- Data collection is vital for training, relevance, and performance.  <hr />- Training data: large, high-quality datasets improve coherence, style, and contextual responses.  <hr />- Relevance ensures data matches application task (sentiment, social media, disinformation).  <hr />- Monitoring data quality; updates enhance model accuracy and mirroring current information.  <hr />- Data standards, especially for disinformation, entail neutral, verified, or nuanced data.  <hr />- Efficiency advances via large datasets, improved search, analysis, and understanding.  <hr />- Internal prompt collection involves gathering user inputs (prompts) for model guidance.  <hr />- External data gathering through web scraping supports broad, real-world datasets.  <hr />- Reinforcement Learning from Human Feedback (RLHF): rewards desirable behaviors, mitigates bias, improves fairness and accuracy.  <hr />- RLHF treats language modeling as an RL problem: feedback guides output quality.  <hr />- Fine-tuning updates model weights with domain-specific data, requiring resources; contrasts with prompt engineering.  <hr />- Fine-tuning adapts models like ChatGPT, LLaMA for specific tasks (emails, stories, chat responses).  <hr />- Mastering fine-tuning enhances control, performance, and application relevance.  <hr />- The overall journey aims to equip engineers with skills in research, creation, and optimization of AI solutions, leveraging the patterns and principles summarized above.","tags":"ai llm prompt-engineering","authors":"monotykamary","date":{"days":19578},"category":"playground > topics > llm"},"444":{"file_path":"playground/topics/llm/a-grand-unified-theory-of-the-ai-hype-cycle.md","title":"A Grand Unified Theory of the AI Hype Cycle","description":"An exploration of the cyclical nature of AI development, tracing the rise and fall of new technologies within the field, and how this pattern has repeated throughout history.","spr_content":"- The history of AI advances in cycles, each beginning with a novel mechanism `N`.  <hr />- `N` is often resource-intensive, requiring three times the compute of the average machine.  <hr />- Initial research develops `N` with specific properties, often not labeled “AI.”  <hr />- Funding concentrates on `N`'s potential, bolstering hardware to meet its demands.  <hr />- Breakthroughs suggest new cognitive possibilities, sparking excitement.  <hr />- Leaders rebrand `N` as “Artificial Intelligence,” imagining societal upheaval in 5-20 years.  <hr />- Other industries adopt `N` elements, labeling broader tech as “AI” to attract funding.  <hr />- The scope of “AI” balloons to include unrelated tech, diluting meaning.  <hr />- An AI economic boom ensues, fueled by ventures near `N`.  <hr />- Skepticism emerges after about three years as hype fades, claims become exaggerated or unattainable.  <hr />- The wealthy, unable to observe `N` firsthand, slow their skepticism; public critics cite overblown promises.  <hr />- Practitioners stop emphasizing “AI,” rebranding tools with specific terms, focusing on `N`’s limitations.  <hr />- Moore’s law improves hardware affordability and capability, enabling local deployment of refined models.  <hr />- Investors upgrade personal hardware, product releases disappoint, leading to disillusionment and pivot away from AI investments.  <hr />- The hype cycle reverses into an AI winter: funding dries, claims become unsubstantiated, trust erodes.  <hr />- Genuine AI researchers discover `M`, a new mechanism, initiating the cycle anew.  <hr />- Past `N` instances: neural networks, symbolic reasoning, theorem provers, expert systems, fuzzy logic, deep learning.  <hr />- Each cycle produces real technology, following sigmoid curves of rapid rise, plateau, and decline, mistaken for exponential growth.  <hr />- The current cycle features more money, commercial interests, and topical hype, unlike previous, more research-focused waves.  <hr />- Presently, tools are approaching local deployment feasibility, but the bubble remains inflated, with “AI” still broadly applied despite clarion calls for precision.  <hr />- Computers cannot truly think; the current `N`-based innovations won’t solve fundamental cognition problems within 5-20 years.","tags":"ai llm machine-learning","authors":"tieubao","date":{"days":19887},"category":"playground > topics > llm"},"445":{"file_path":"playground/topics/llm/quantization-in-llm.md","title":"Quantization for large language models","description":"As large language models (LLMs) continue to evolve, their parameter counts grow exponentially, with some models reaching trillions of parameters. This exponential growth presents significant challenges for deployment on edge devices and in resource-constrained environments due to extensive memory and computational requirements. Quantization emerges as a crucial technique to reduce model footprint while preserving acceptable performance.","spr_content":"- LLMs grow exponentially in parameters, reaching trillions, challenging deployment on limited resources.<hr />- Quantization reduces model size, memory, storage, and energy use; trades some accuracy.<hr />- It maps high-precision weights/activations (e.g., FP32) to low-precision formats (e.g., INT8).<hr />- Benefits include efficiency, smaller footprint, and sustainability.<hr />- Two main approaches: PTQ (post-training) and QAT (quantization-aware training).<hr />- Linear quantization maps floating-point to smaller ranges via scaling and shifting.<hr />- Symmetric mode: zero-point at zero; efficient but may sacrifice accuracy.<hr />- Asymmetric mode: zero-point non-zero; usually higher accuracy, potentially less efficient.<hr />- Formula: \\( q = round(s \\times w + z) \\):<hr />  - \\( q \\): quantized value<hr />  - \\( s \\): scale<hr />  - \\( w \\): original value<hr />  - \\( z \\): zero point<hr />- Range determination: select data range covering most data, not necessarily min-max.<hr />- Scale factor: \\( s = \\frac{q_{max} - q_{min}}{w_{max} - w_{min}} \\).<hr />- Zero point: \\( z = q_{min} - round(s \\times w_{min}) \\).<hr />- Quantization procedure: compute \\( q \\), then de-quantize via \\( w = \\frac{q - z}{s} \\).<hr />- Quantization error: difference between original and de-quantized; usually minimal but accumulates.<hr />- Quantized models stored in formats like GGUF (Generic GPT Unified Format), introduced in 2023.<hr />- GGUF supports efficient, scalable deployment of diverse models on resource-constrained devices.<hr />- Quantized model naming (e.g., `q8_0`, `q4_1`) indicates bits and method (uniform, k-means, etc.).<hr />- Lower bits and specialized methods (k-means) optimize for size and performance trade-offs.<hr />- Quantization is crucial for making large models deployable beyond high-resource environments.<hr />- It balances precision and resource constraints, enabling broader accessibility and efficiency.","tags":"ai llm","authors":"hoangnnh","date":{"days":20048},"category":"playground > topics > llm"},"446":{"file_path":"playground/topics/llm/use-cases-for-llm-applications.md","title":"Use cases for LLM applications","description":"Explore the diverse applications of large language models (LLMs) and AI in both enterprise and consumer sectors. Learn about key use cases across data analysis, content creation, healthcare, education, and more.","spr_content":"LLMs and foundation models have limitless potential applications. Most use cases categorize into two main groups: enterprise and consumer.  <hr />Enterprise applications include customer support via chatbots, data analysis, content creation, product development, productivity tools, security, healthcare, education, and operational automation.  <hr />Consumer applications encompass personalized recommendations, voice assistants, media editing, health tracking, learning tools, and personal automation.  <hr />AI’s versatility spans sectors: customer service, healthcare, content, research, productivity, security, education, and operations.  <hr />AI is transitioning from novelty to mainstream rapid adoption by startups and tech giants.  <hr />The utility of AI grows with infrastructure, data, and creativity—barriers diminish quickly.  <hr />Any problem could leverage LLMs or foundation models for enhancement; possibilities are vast.  <hr />Encourages bold thinking about AI integration in new solutions—whatever the goal, there’s an AI for that.  <hr />Calls to action: innovate and bring ideas to life using AI’s expanding toolkit.","tags":"ai llm","authors":"thanh","date":{"days":20000},"category":"playground > topics > llm"},"447":{"file_path":"playground/topics/llm/reward-model.md","title":"Reward Model","description":"A Reward Model is a critical component in Reinforcement Learning for Large Language Models (LLMs), designed to evaluate and score the quality of generated responses. It plays a key role in aligning LLMs with human values and improving their output through iterative refinement.","spr_content":"Reinforcement learning involves computing rewards for an agent’s actions within an environment; these rewards guide behavior. In large language models (LLMs), reward signals are scores evaluating answer quality, facilitating response improvement. The synergy of reward models and RLHF underpins LLM alignment with human values, particularly since GPT-3.5.<hr /><hr />Reward models are shaped by goals, environments, and constraints; represented as tables or functions. Types include:  <hr />- Sparse reward: infrequent, triggered only by achievement of specific goals.  <hr />- Dense reward: frequent, evaluating every action with small scores.  <hr />- Shaped reward: continuous evaluation, not binary.  <hr />- Intrinsic reward: generated internally, focus on exploration.  <hr />- Adversarial reward: based on competition or opponents.  <hr />- Self-supervised reward: generated by the model, driven by auxiliary objectives.  <hr />- Contrastive reward: compares actions or states to optimize better choices.<hr /><hr />In LLM training, reward models assess the quality of generated answers using ranked answer sets. The models are transformer-based, with billions of parameters, trained on diverse datasets including human rankings, chat histories, and labels. Outputs are scalar reward values derived from text input.<hr /><hr />Challenges include:  <hr />- RL models optimizing for reward without understanding the underlying question or task.  <hr />- Risk of overfitting to reward training data, reducing performance in unfamiliar domains.  <hr />- High costs and effort in collecting effective human feedback.<hr /><hr />Effective reward modeling is difficult, demanding careful design to balance goals and constraints. Proper application of reward models enhances output quality and acceptance, making it a vital step in LLM development and alignment.","tags":"ai llm reinforcement-learning","authors":"Pham Ngoc Thanh","date":{"days":19531},"category":"playground > topics > llm"},"448":{"file_path":"playground/topics/llm/developing-rapidly-with-generative-ai.md","title":"Developing rapidly with Generative AI","description":"Generative AI overview and the different stages of building an LLM-powered feature","spr_content":"- Generative AI creates new content (images, text, audio) by learning patterns from existing data.  <hr />- Building LLM-powered features involves four main stages: 1. Identify use cases, 2. Define requirements, 3. Prototype, 4. Deploy at scale.  <hr />- Use cases often involve processing unstructured content, scaling challenges, and tasks difficult with rules-based or traditional ML.  <hr />- Requirements involve latency, task complexity, prompt length, safety, language support, and QPS estimates.  <hr />- Prototyping relies on selecting off-the-shelf LLMs (e.g., GPT-4) and engineering effective prompts via AI-assisted evaluation.  <hr />- The quality of prompts determines performance; better prompts lead to higher output quality.  <hr />- Deployment introduces infrastructure considerations: managing load, performance monitoring, and meeting earlier requirements.  <hr />- Deployment options include using commercial LLMs (ease, cost) or self-hosted LLMs (cost savings, maintenance, complexity).  <hr />- Success depends on aligning use cases, proper requirement definition, effective prompting, and scalable deployment strategies.","tags":"ai llm tooling","authors":"antran","date":{"days":19845},"category":"playground > topics > llm"},"449":{"file_path":"playground/topics/llm/the-rise-of-ai-applications-with-llm.md","title":"The rise of AI applications with LLM","description":"Discover how the rapid surge in artificial intelligence, led by models like ChatGPT, Claude, and Gemini, is reshaping industries and democratizing AI development. This article explores the rise of model-as-a-service, the economic impact of AI, and how accessible APIs are transforming productivity, creativity, and innovation across sectors.","spr_content":"Artificial intelligence (AI), exemplified by ChatGPT and foundation models like Gemini, Llama, and Claude, has rapidly transformed industries with unprecedented versatility and productivity gains. These models excel in automating communication, content creation, coding, and data synthesis, democratizing creative and technical tasks. The high costs of training large models—data, compute, expertise—limit access, prompting a shift toward model-as-a-service (API-based deployment), reducing barriers for innovation. Open source contributions to AI repositories have surged, reflecting community engagement. Funding for AI startups has skyrocketed, with a significant share within Y Combinator, indicating investor confidence. Corporate interest in AI has grown markedly, with more firms referencing AI in communication, pressuring increased investments. The AI market forecast projects explosive growth from $40 billion in 2022 to over $1.3 trillion by 2032, underscoring its disruptive economic potential. AI's integration is widespread—from note-taking to customer service, content generation, coding, education, and marketing—altering how work, innovation, and economies operate. Its ability to perform and generate across open-ended tasks positions AI as a core driver of future technological and business transformation.","tags":"ai llm","authors":"thanh","date":{"days":19997},"category":"playground > topics > llm"},"450":{"file_path":"playground/topics/frontend/retain-scroll-position-in-infinite-scroll.md","title":"Retain scroll position in infinite scroll","description":"Infinite scroll has become a popular web design technique in recent years, as it offers several benefits over traditional pagination models. However, it can also present some painful challenges for accessibility and usability.","spr_content":"- Infinite scroll enhances user experience by reducing load times and minimizing page navigation.<hr />- It introduces accessibility issues, particularly losing scroll position on navigation.<hr />- When navigating to item details and returning, previous scroll position can be lost, causing user frustration.<hr />- Solution involves storing scroll state using session storage to remember position and loaded pages.<hr />- `createRetainPositionStore` initializes with a storage key for session persistence.<hr />- It contains two functions: one to save state before navigation, another to restore state upon return.<hr />- `handleSaveStates` saves `swrSize` (loaded pages) and `scrollY` (vertical position) into session storage.<hr />- On return, `useRetainPosition` retrieves stored data and attempts to restore scroll position if valid.<hr />- It also resets the number of loaded pages (`swrSize`) to match previous state for seamless experience.<hr />- Restoring scroll position involves scrolling to stored `scrollPosition` post page load.<hr />- Clearing session storage after restoring prevents outdated or conflicting data.<hr />- Using `useSWRInfinite` with `setSize` aligns loaded pages with previous session data.<hr />- The approach ensures continuity in infinite scrolling user experience across navigation.<hr />- References include XKCD's explanation and SWR documentation for pagination.","tags":"frontend swr-infinite web-design","authors":"nguyend-nam","date":{"days":19471},"category":"playground > topics > frontend"},"451":{"file_path":"playground/topics/frontend/an-introduction-to-atomic-css.md","title":"An Introduction to Atomic CSS","description":"This article provides an overview of Atomic CSS, including its definition, variations, purposes, and how it compares to other CSS approaches.","spr_content":"- Atomic CSS architecture emphasizes small, single-purpose classes based on visual functions; also called Functional or Utility CSS.  <hr />- Utility classes resemble minimal CSS snippets like `.m-0 { margin: 0; }`, `.text-red { color: red; }`.  <hr />- Frameworks: Tailwind, Windi, Tachyons; UI libs with utilities: Bootstrap, Chakra UI.  <hr />- Variations: Static (unit-based, fixed design system) for simplicity and clarity; Programmatic (build tools generate styles during build, e.g., Tailwind JIT) for flexibility and optimization.  <hr />- Purposes: Simplify styling—immutable, descriptive classes; ensure consistency with scale; avoid magic numbers; facilitate collaboration between designers and developers.  <hr />- Unlike inline styles, Atomic CSS promotes reusability via classes and component-based approaches; enabling easy global changes and reuse in frameworks like React.  <hr />- Abstractions possible: utility classes encapsulate complex styles, enabling single-point updates; improve maintainability and flexibility over inline styles.  <hr />- Tooling support: Sass, Less, PostCSS, Autoprefixer enhance utility class workflows.  <hr />- Conciseness: utility classes reduce verbosity compared to inline styles (`mt-0` instead of `margin-top: 0`).  <hr />- Specificity: lower than inline styles, offering greater override flexibility.  <hr />- Capabilities: support media queries, pseudo-selectors, CSS animations, and `@supports` via utility classes—enabling responsive and state-based styling.  <hr />- Not absolute: utility classes complement non-utility CSS methods; best used as defaults in combination with other styling approaches.  <hr />- Limitations: changing many styles conditionally or within media queries may still require traditional CSS components or customizations.  <hr />- Overall, Atomic CSS enhances readability, consistency, reusability, tool support, and scalability, but doesn’t replace all CSS needs.","tags":"atomic-css css frontend","authors":"mashiro5951","date":{"days":19278},"category":"playground > topics > frontend"},"452":{"file_path":"playground/topics/frontend/adoption-of-pnpm.md","title":"Adoption Of Pnpm","description":"The Dwarves team switched from Yarn to pnpm for faster, more efficient package management, improving development speed and saving disk space across their projects and clients.","spr_content":"- Dwarves team adopts pnpm as primary package manager.  <hr />- Chosen after evaluating community adoption and successful use cases (Vercel, Nx, Chakra UI).  <hr />- Previously used Yarn V1 classic; faced disk space and slow install issues as projects scaled.  <hr />- pnpm tested thoroughly; proved to be efficient and reliable.  <hr />- All major internal tools migrated to pnpm; positive impact on development speed and productivity.  <hr />- pnpm implementation expanded to client projects.  <hr />- Migration faced challenges with hoisted dependencies in monorepos; despite difficulties, overall efficiency improved.  <hr />- Migration process supported by Toan Ho, Hai Huynh, Hien Le, Chinh Le.  <hr />- Appreciation for their active participation and crucial help in successful adoption.","tags":"dx engineering frontend productivity radar","authors":"thanh","date":{"days":19569},"category":"playground > topics > frontend"},"453":{"file_path":"playground/topics/frontend/webassembly.md","title":"Webassembly","description":"WebAssembly (abbreviated *Wasm*) was launched in 2017 as a low-level assembly-like language with a compact binary format, so it’s fast to load, execute, and run with near-native performance.","spr_content":"- WebAssembly (Wasm) launched in 2017 as a compact binary, assembly-like language for fast load and near-native execution.  <hr />- Designed as a portable target for compiling high-level languages (C/C++/Rust), enabling deployment on web for client/server apps.  <hr />- Developers compile high-level languages to WebAssembly, not write WebAssembly directly.  <hr />- JavaScript code is interpreted dynamically, with types inferred at runtime; the engine monitors execution to optimize performance.  <hr />- WebAssembly is pre-compiled into binary, with known types, allowing browsers to directly convert it into machine code upon load.  <hr />- Goals include speed, efficiency, portability, readability, debuggability, security, and compatibility with existing web tech.  <hr />- WebAssembly operates securely within sandboxed environments, enforcing same-origin and permission policies.  <hr />- It maintains web compatibility and does not break existing web standards.  <hr />- Use cases: media editing, P2P apps, music streaming, live video augmentation, VR/AR, scientific simulation, developer tools, enterprise fat clients.","tags":"frontend performance sandbox webassembly","authors":"cor3.co","date":{"days":19362},"category":"playground > topics > frontend"},"454":{"file_path":"playground/topics/frontend/render-optimization-in-data-fetching-libraries.md","title":"Render optimization in data-fetching libraries","description":"Data-fetching libraries are software tools or frameworks that can help improve the performance and scalability of your application by handling network requests and data processing more efficiently.","spr_content":"- Data-fetching libraries optimize network requests and data processing for performance and scalability.  <hr />- In React, they prevent unnecessary component re-renders caused by unchanged data, enhancing smoothness and efficiency.  <hr />- Caching strategies like unique keys and stale-while-revalidate reduce network calls, improve speed, and maintain fresh data.  <hr />- Response data is managed through stateful values: `data`, `error`, and `fetching`.  <hr />- The `fetching` flag indicates in-flight requests but may cause extra renders if used improperly.  <hr />- Destructuring request hooks (`const { data, error } = useRequest(...)`) limits re-renders by tracking only used properties.  <hr />- Structural sharing compares old and new data, preserving unchanged parts to minimize re-rendering, especially with partial updates.  <hr />- Reference integrity at every data level is crucial for effective structural sharing, as exemplified with tasks' statuses.  <hr />- Structural sharing's effectiveness diminishes with very large datasets, where it can become a bottleneck.  <hr />- Best practices involve selective subscriptions and cautious use of structural sharing for performance optimization.","tags":"data-fetching engineering frontend","authors":"cor3.co","date":{"days":19516},"category":"playground > topics > frontend"},"455":{"file_path":"playground/topics/frontend/shadow-dom.md","title":"Shadow DOM","description":"Shadow DOM is a web standard that allows encapsulation of HTML, CSS, and JavaScript within a specific context.","spr_content":"Shadow DOM encapsulates HTML, CSS, and JavaScript within a distinct, hidden DOM subtree attached to a host element. It begins with a shadow root, a boundary that isolates internal nodes from the main DOM. The shadow host is the element that hosts the shadow DOM; the shadow tree is inside the shadow root; the shadow boundary marks the separation. Developers can manipulate shadow nodes directly, using methods like `appendChild` and styling within the shadow DOM, but encapsulation prevents external influences. Creating a shadow DOM involves `attachShadow({ mode })`, with `mode` as `open` (accessible externally) or `closed` (strictly encapsulated). This encapsulation prevents style clashes and ensures modularity, making Shadow DOM ideal for extensions, widgets, and interactive components. It enhances reliability, maintains style integrity, and simplifies complex web component development.","tags":"dom frontend shadow-dom web-api","authors":"khacvy","date":{"days":19493},"category":"playground > topics > frontend"},"456":{"file_path":"playground/topics/frontend/tackling-server-state-complexity-in-frontend-development.md","title":"Tackling Server State complexity in Frontend Development","description":"Frontend development has become increasingly complex over the years, and with it, the need for efficient state management.","spr_content":"- Frontend complexity increased, demanding efficient state management.<hr />- Global State emerges as solution to prop drilling, simplifies data sharing.<hr />- Prop drilling: data passing through nested components, leads to unwieldy code.<hr />- Global State reduces prop drilling, enhances code cleanliness, maintainability.<hr />- Limitations: not ideal for server-state data; differs from client-state.<hr />- Client State: fully controlled locally; server-state: externally persisted.<hr />- Server State source outside app's control; needs synchronization.<hr />- Synchronization involves caching, stale data handling, background updates, memory management.<hr />- Redux handles API responses via extensive boilerplate for loading/error/revalidation.<hr />- Libraries like SWR & React-Query provide abstracted, simpler interface for server-state.<hr />- Redux setup: verbose, requires explicit handling of fetch lifecycle states.<hr />- React-Query: minimal code, automatically manages loading/error states.<hr />- Recommendation: consider limitations of Global State; prefer specialized libraries for server data.<hr />- When working with server-state, SWR and React-Query optimize data handling and reduce complexity.","tags":"frontend global-state-management react state-mangement","authors":"thanh","date":{"days":19427},"category":"playground > topics > frontend"},"457":{"file_path":"playground/topics/frontend/different-ways-to-test-react-application.md","title":"Different Ways To Test React Application","description":"Learn effective React testing methods including unit tests with react-testing-library, hook testing with react-hooks-testing-library, and end-to-end tests with Cypress for reliable carousel component validation.","spr_content":"- Frontend testing divides into implementation-focused (unit, integration, asserting component states) and behavior-focused (E2E, perspective-based).<hr />- React hooks (since 16.08) enable encapsulated, reusable logic; testing hooks mirrors component testing.<hr />- Carousel component specifications:<hr />  - Arrow clicks slide images with animations.<hr />  - Right arrow: next image; loops to first after last.<hr />  - Left arrow: previous image; loops to last before first.<hr />- Unit testing with react-testing-library:<hr />  - Lightweight, encourages best practices.<hr />  - Mount components with `render()`, then query DOM with utility functions (`getByTestId`, `getByText`).<hr />  - Assert component states by exposing internal variables to global in test mode.<hr />  - Cannot directly access component hooks or internal states unless exposed.<hr />  - Pros: fast, simple.<hr />  - Cons: DOM limitations, no hook internals assertion.<hr />- Testing React hooks with react-hooks-testing-library:<hr />  - Mount hooks via `renderHook()` for isolated, fast testing.<hr />  - Hook returns include states and functions, accessible directly.<hr />  - Allows testing hook logic without exposing variables globally.<hr />  - Pros: clean, isolated, no global exposure.<hr />  - Cons: only for hooks of functional components.<hr />- End-to-end (E2E) testing with Cypress:<hr />  - Mirrors actual user interaction.<hr />  - Uses `cy.visit()`, `cy.get()`, `cy.wait()`, `cy.viewport()`.<hr />  - Asynchronous commands chain with `.then()`, similar to Promises.<hr />  - Supports querying by test IDs (`getByTestId`).<hr />  - Can wrap Cypress commands with `cypress-promise` for async/await.<hr />  - Pros: real browser environment, high speed.<hr />  - Cons: limited DOM event support, not as thorough as unit/integration tests.<hr />- Running tests:<hr />  - Unit: `yarn test`.<hr />  - E2E: `yarn e2e` (headless), `yarn e2e:open` (interactive).<hr />- Final notes:<hr />  - Use unit and hook tests during development for detailed assertions.<hr />  - Use Cypress E2E testing for user experience validation.<hr />  - Combining methods ensures robust, reliable React applications.","tags":"reactjs","authors":"","date":{"days":18053},"category":"playground > topics > frontend"},"458":{"file_path":"playground/topics/frontend/focus-trap.md","title":"Focus trap","description":"Focus trap is a web technique to improve accessibility by forcing keyboard focus inside a DOM element, to prevent the user navigating outside that element.","spr_content":"Focus trap: web technique for accessibility; confines keyboard focus within a DOM element; prevents focus from escaping; primarily used in open modal dialogs; ensures user remains aware of focused element; avoids confusion caused by lost focus; enhances user experience for keyboard users; related to modal focus management; referenced at CSS-Tricks article on CSS approach.","tags":"accessibility frontend html","authors":"thanh","date":{"days":19155},"category":"playground > topics > frontend"},"459":{"file_path":"playground/topics/frontend/hoc-renderprops-and-hook-in-reactjs.md","title":"Hoc Renderprops And Hook In Reactjs","description":"Learn how to refactor React.js components using HOC, render props, and hooks to create reusable toggle logic that follows the DRY principle and simplifies state management.","spr_content":"- React techniques for code reuse: HOC, Render Props, Hooks.  <hr />- Basic toggle example: class component manages multiple visibility states; duplicative methods and state increase complexity.  <hr />- DRY principle violated by repetitive state and toggle methods for each text block.  <hr />- Render Props encapsulates toggle logic: a component with internal state exposes toggle functionality via a function child.  <hr />- Child components access toggle state and method through render props scope; promotes reuse and separation of concerns.  <hr />- HOC pattern: function transforms a component by injecting additional props and state, wrapping logic externally.  <hr />- HOCs enable layered enhancements; composition allows multiple toggles to be injected into a component.  <hr />- Hooks leverage functional components: useState creates local state; custom hooks abstract toggle logic.  <hr />- Custom Hook example: useToggle returns [state, toggle]; enhances reusability; simplifies component code.  <hr />- Hooks reduce boilerplate, promote composability compared to HOC and render props; more idiomatic in modern React.  <hr />- Despite hooks superiority, HOC and render props remain viable for specific cases or legacy codebases.  <hr />- Overall, move from class-based duplicative toggle logic toward reusable patterns: render props, HOCs, hooks; hooks preferred for simplicity and readability.","tags":"reactjs","authors":"","date":{"days":17998},"category":"playground > topics > frontend"},"460":{"file_path":"playground/topics/frontend/url-formats-for-sharing-via-social-networks.md","title":"URL formats for sharing via social networks","description":"Each social network has its own unique way of handling URLs, and understanding the correct formatting can make a significant difference in the visibility and engagement of your shared content.","spr_content":"- Social platforms facilitate URL sharing, increasing reach and engagement.<hr />- Each social network requires specific URL formatting to optimize sharing and visibility.<hr />- Facebook sharing uses `https://www.facebook.com/sharer.php?u=${url}` to open a dialog for content sharing.<hr />- Facebook Messenger sharing involves `https://www.facebook.com/dialog/send?app_id=${appId}&display=popup&link=${url}&redirect_uri=${url}`; requires app ID.<hr />- Creating a Facebook app and acquiring an app ID is necessary for Messenger share links.<hr />- Zalo, popular in Vietnam, shares URLs by encoding a JSON object with `\"url\"` key; encode as base64 and append to Zalo share URL.<hr />- Zalo sharing example: `https://button-share.zalo.me/share_external?d=${encodeB64(JSON.stringify({ url }))}`.<hr />- Other social platforms have dedicated URL schemes:<hr />  - LinkedIn: `https://www.linkedin.com/sharing/share-offsite/?url=${url}`<hr />  - Twitter: `http://twitter.com/share?url=${url}`<hr />  - Telegram: `https://telegram.me/share/?url=${url}`<hr />  - Reddit: `https://www.reddit.com/submit?url=${url}&title=${title}`<hr />- Proper URL formatting enhances content visibility, engagement, and platform-specific share effectiveness.","tags":"frontend social-networks","authors":"nguyend-nam","date":{"days":19503},"category":"playground > topics > frontend"},"461":{"file_path":"playground/topics/frontend/validation-with-zod.md","title":"Validation with Zod","description":"Zod is the TypeScript-first schema validation library with static type inference.","spr_content":"Zod: TypeScript-first schema validation library with static type inference.  <hr />Uses parse (don't validate) to parse and validate data, catching errors early.  <hr />Advantages:  <hr />- Strong TypeScript support for early bug detection.  <hr />- Ensures data quality via validation and coercion, reducing errors.  <hr />- Simplifies code with clear, fluent schema syntax.  <hr />- Flexible for various contexts: forms, APIs, custom logic.  <hr />- Lightweight, no dependencies, cross-platform (browser and Node.js).  <hr /><hr />Usage:  <hr />- `validate()`: validates and coerces data, throws on errors.  <hr />- `parse()`: validates, removes extraneous properties, throws if invalid.  <hr /><hr />Schema example:  <hr />```ts<hr />const schema = z.object({ name: z.string(), phone_number: z.number().min(0).max(12), email: z.string().email() });<hr />const input = { name: \"Dwarves\", phone_number: 5, email: \"test@domain.com\" };<hr />const data = schema.parse(input);<hr />```  <hr />- Ensures data matches types and constraints; cleans data of extras.  <hr /><hr />Comparison with Yup:  <hr />- Zod: fluent syntax, excellent TypeScript support, utility functions, faster, smaller.  <hr />- Yup: object schema, customizable error messages, broader community, less TypeScript friendly.  <hr />- Choice depends on syntax preference, TypeScript needs, performance, and feature set.  <hr /><hr />References: zod.dev, GitHub, blog comparisons.","tags":"frontend parsing typescript","authors":"namtrhg","date":{"days":19374},"category":"playground > topics > frontend"},"462":{"file_path":"playground/topics/frontend/from-multi-repo-to-monorepo-a-case-study-with-nghenhan-turbo-monorepo.md","title":"From Multi Repo To Monorepo A Case Study With Nghenhan Turbo Monorepo","description":"Learn how migrating to a Turbo-powered monorepo cut build times by 60%, boosted developer productivity by 40%, and simplified dependency management in a real trading platform case study.","spr_content":"- Transitioned from multi-repo to monorepo using Turbo to improve development workflow.  <hr />- Achieved 60% reduction in build times through Turbo's parallel and incremental builds.  <hr />- Increased developer productivity by 40% via simplified code sharing and unified codebase.  <hr />- Simplified dependency management via Turbo’s automatic dependency resolution across all components.  <hr />- Consolidated code into a single repository, enhancing code reuse and reducing duplication.  <hr />- Streamlined development process, improving navigation and understanding of the codebase.  <hr />- Developed NgheNhan trading platform, managing accounts, market data, and trading analysis in real-time.  <hr />- Challenges included updating reusable components, refactoring code, managing dependencies, caching builds, and adjusting workflows.  <hr />- Migration steps: setup Turbo, consolidate code, refactor for compatibility, create component previews with Storybook, test and deploy.  <hr />- Implemented CI/CD pipelines on Vercel for consistent deployment.  <hr />- Lessons learned: importance of thorough planning, clear communication, and scalability considerations.  <hr />- Benefits: faster builds, better collaboration, easier dependency management, enhanced code reuse, simplified architecture.  <hr />- Overall, Turbo-enabled monorepo transformed the team’s efficiency and code quality, enabling focus on high-value development.  <hr />- Committed to continuous improvement and leveraging Turbo for future growth.","tags":"engineering framework technique web","authors":"","date":{"days":19436},"category":"playground > topics > frontend"},"463":{"file_path":"playground/topics/frontend/wai-aria.md","title":"WAI-ARIA","description":"WAI-ARIA is a technology that can help with the problems of modern websites and applications containing huge amounts of dynamic content and complex components with no semantics to describe what they mean.","spr_content":"- Modern websites contain complex, dynamic content with no inherent semantics, hindering assistive technology understanding.<hr />- Users dependent on assistive tools (screen readers, magnifiers, TTS) require semantic cues for effective interaction.<hr />- WAI-ARIA (Accessible Rich Internet Applications) offers a solution by adding semantic meaning via attributes.<hr />- WAI-ARIA provides Roles, States, and Properties to describe webpage components meaningfully.<hr />- Roles define **what an element is or does**; they specify roles like button, navigation, header, footer.<hr />- Using role attributes (e.g., role=\"button\") makes non-semantic elements recognizable as interactive components.<hr />- Properties represent **static data or attributes** linked to an element; used for labels, required fields, descriptions.<hr />- Examples include aria-label, aria-required, aria-describedby; assistive tech can relay these to users.<hr />- States represent **dynamic, changeable information**; e.g., aria-pressed, aria-expanded, aria-selected.<hr />- States update during interactions; e.g., toggle for buttons, tab selection, expanded menus.<hr />- WAI-ARIA attributes do **not** alter component behavior but make content accessible through APIs.<hr />- Browsers expose ARIA information via accessibility APIs; assistive tech reads this for users.<hr />- Use cases:<hr />  - Defining regions (banner, navigation, main) with roles improves page structure understanding.<hr />  - `aria-live` indicates content updates dynamically; screen readers announce changes.<hr />  - Enhances keyboard navigation by assigning tabindex for focus control.<hr />  - Improves non-semantic, nested `<div>` components by assigning roles and accessibility attributes.<hr />- WAI-ARIA supports accessibility for complex, custom, or non-standard UI components.<hr />- Benefits include better content comprehension, improved navigation, and assisting diverse user needs.","tags":"accessibility frontend wai-aria","authors":"nguyend-nam","date":{"days":19265},"category":"playground > topics > frontend"},"464":{"file_path":"playground/topics/frontend/fundamental-end-to-end-frontend-testing-with-cypress.md","title":"Fundamental End To End Frontend Testing With Cypress","description":"Learn how to perform end-to-end frontend testing with Cypress on a React autocomplete textbox, including setup, writing tests, and using Cypress with Mocha and Chai for assertions.","spr_content":"- End-to-end testing verifies application flow from start to finish from a user perspective, avoiding internal code assertions or mocks.<hr />- Cypress is a simplified, high-performance e2e testing framework with an easy API and integrated test runner.<hr />- The application under test is an autocomplete textbox with features:<hr />  - Enter filter text; display list items matching filter<hr />  - Select list item to replace filter text with item text<hr />- To set up, clone the project from GitHub, run `yarn install`.<hr />- Running `yarn dev` starts a React app with Hot Module Replacement on localhost:9000.<hr />- To write tests, create an npm script `e2e: \"cypress open\"` and run `yarn e2e`.<hr />- Cypress creates a `cypress/` folder with a default structure.<hr />- Test files are in `cypress/integration/`; create `AutoComplete.spec.js` to define tests.<hr />- Cypress uses Mocha for test structure and Chai for assertions.<hr />- A `describe` block groups tests; `beforeEach` ensures the app visits localhost:9000 prior to each test.<hr />- The first test types text into the input (`cy.get('input').type('abc')`), then asserts list behavior (`should('have.length', 1)`), and verifies content (`should('contain', 'one')`).<hr />- Chainable Cypress commands allow fluent test writing.<hr />- `should()` supports:<hr />  - Assertion name and value syntax, e.g., `should('have.length', 1)`<hr />  - Function syntax, enabling multiple assertions with ChaiExpect, e.g.,<hr />    ```javascript<hr />    cy.get('input').should(($input) => {<hr />      expect($input[0].value).to.equal('one');<hr />    });<hr />    ```<hr />- Re-run `yarn e2e` to see test results in the Cypress window.<hr />- For further learning, explore Chai assertions ([Chai API](https://www.chaijs.com/api/bdd/)), Cypress documentation, and the full project repository.","tags":"js testing","authors":"","date":{"days":18110},"category":"playground > topics > frontend"},"465":{"file_path":"playground/topics/frontend/micro-frontends-microservices-for-frontend-development.md","title":"Micro Frontends Microservices For Frontend Development","description":"Micro Frontends is an architectural style where independently deliverable frontend applications are composed into a greater whole.","spr_content":"- Micro-frontend: architectural style with independently deployable frontend units integrated into a larger application.<hr />- Benefits: smaller, cohesive, maintainable codebases; autonomous teams; incremental updates; simpler long-term maintenance and testing.<hr />- Build-time integration: package micro frontends; container includes dependencies; re-compilation needed per change.<hr />- Run-time iframe integration: load micro frontends via iframes; challenges: responsiveness, routing, deep-linking complexity.<hr />- JavaScript runtime: load bundle scripts; expose global functions; container calls functions based on route; facilitates dynamic mounting.<hr />- Web Components approach: define micro frontends as custom elements; instantiate in container; lacks server-side render support; limited browser support.<hr />- Cross-application communication: via custom events and routing.<hr />- Server-side rendering: using server-side includes; complex due to decoupling.<hr />- Trade-offs: increased payload from dependency duplication; performance considerations; learning curve; suited for medium to large projects.<hr />- References: authoritative resources and articles on micro frontends.","tags":"micro-frontend","authors":"thanh","date":{"days":18817},"category":"playground > topics > frontend"},"466":{"file_path":"playground/topics/frontend/react-server-component.md","title":"React Server Components, NextJs Route and Data Fetching","description":"React Server Components (RSCs) offer the flexibility to decide where to render components based on their purpose, diverging from the client-side rendering approach of Single-Page Applications.","spr_content":"- React Server Components (RSCs) are server-side, stateless, data-fetching components enabling seamless server–client collaboration in React applications.<hr />- RSCs prioritize server-side rendering (SSR), generate static content, and allow top-level async/await for data retrieval.<hr />- They facilitate hybrid SPA/MPA architectures via client request protocols for component tree segments.<hr />- Framework support (e.g., Next.js) is essential; RSCs aim to reshape the React ecosystem, supporting hooks like `use()` in the future.<hr />- Benefits include faster load times, lower JavaScript bundle size, improved performance, and simplified data fetching by accessing backend resources directly.<hr />- Use `.server.jsx/tsx` for server components, `.client.jsx/tsx` for client components; mark client files with `\"use client\"`.<hr />- Server components are incompatible with React hooks that depend on state/effects or browser APIs and should avoid exposing sensitive logic.<hr />- Strategy involves designating static, non-interactive components as server, and interactive parts as client, passing server components as children to client components.<hr />- Combining server and client components in the same tree is possible, with server rendering all server components before client rendering their slots.<hr />- Importing server components directly in client components is unsupported; instead, pass server components as children props within client components.<hr />- Sharing JS modules between server and client is possible but risk exposing sensitive code; `server-only` packages can restrict certain code to server execution.<hr />- Data fetching via `fetch` in RSCs benefits from caching, revalidation (background or on-demand), and React's native cache API for improved performance.<hr />- Server Actions (`\"use server\"`) enable handling server-side logic in response to client interactions, bypassing traditional API calls.<hr />- On the client, use libraries like SWR or React Query for data fetching if not using server fetch/caching; React's upcoming `use()` hook will simplify client-side data loading.<hr />- Overall, RSCs enable more efficient, performant React app architecture through server/Client collaboration, reducing bundle size, and improving user experience.","tags":"caching-data frontend nextjs react server-component","authors":"chinhld12","date":{"days":19505},"category":"playground > topics > frontend"},"467":{"file_path":"playground/topics/frontend/singleton-design-pattern-in-javascript.md","title":"Singleton Design Pattern in Javascript","description":"The Singleton design pattern is a design pattern that restricts the instantiation of a class to one object.","spr_content":"- Global state management can be optimized with design patterns in vanilla JavaScript to reduce library overhead.<hr />- Singleton pattern enforces a single static instance of a class accessible across components/functions.<hr />- It prevents multiple conflicting instances, ensuring consistency.<hr />- Creation of the singleton instance occurs only once; subsequent requests return the same object.<hr />- Example: singleton class wrapping an internal class; `getInstance()` controls instantiation.<hr />- State sharing: setting a property on one instance reflects in all references.<hr />- Singleton guarantees one source of truth, acting as a global point.<hr />- Pros: ensures uniqueness, easy access, single initialization.<hr />- Cons: violates Single Responsibility Principle; can lead to tightly coupled code.<hr />- Singletons hinder unit testing due to global state and hard-to-mock behavior.<hr />- Usage recommended for stable, rarely changed global data such as database connections or user configs.<hr />- Suitable for scenarios favoring minimal resource use and consistent state across the application.","tags":"design-pattern frontend","authors":"chinhld12","date":{"days":19281},"category":"playground > topics > frontend"},"468":{"file_path":"playground/topics/frontend/prevent-layout-thrashing.md","title":"Prevent Layout Thrashing","description":"Layout Thrashing happens, when you request layout information of an element or the document, while the layout is in an invalidated state.","spr_content":"- Layout thrashing is forcing the browser to perform unnecessary layout calculations, reducing performance.<hr />- It occurs when reading layout information during an invalidated layout state.<hr />- Any DOM or CSSOM change invalidates layout, requiring reflow before measurements.<hr />- Reading layout properties (e.g., getBoundingClientRect) triggers layout calculation.<hr />- Mutating layout (adding/removing elements or changing styles) also triggers layout recalculation.<hr />- Mixing reads and writes without separation causes forced reflows, hurting performance.<hr />- To prevent thrashing, batch all reads first, then perform all writes.<hr />- Using libraries like fastdom simplifies isolating reads and writes through measurement and mutation phases.<hr />- Debugging layout thrashing involves slow CPU profiling in DevTools' Performance tab.<hr />- Focus on purple tasks to identify forced reflows.<hr />- Commands that synchronously access layout metrics trigger reflow; avoid frequent or unnecessary calls.<hr />- Lessons: separate measurement from mutation; minimize forced layout requests; use measurement/mutation batching; debug with profiling tools.","tags":"frontend performance web-performance","authors":"thanhlmm","date":{"days":19246},"category":"playground > topics > frontend"},"469":{"file_path":"playground/topics/frontend/a-quick-intro-to-webassembly.md","title":"A Quick Intro To Webassembly","description":"Discover how WebAssembly, a fast, portable binary format designed for running C, C++, and Rust on the web, outperforms JavaScript by enabling near-native execution speeds in browsers and servers.","spr_content":"- WebAssembly (Wasm) is a binary instruction format for stack-based virtual machines.<hr />- It aims to offer performance close to Assembly language on the web.<hr />- Supported by all major browsers; expanding to server-side.<hr />- Its purpose is to serve as a portable compilation target for high-level languages like C, C++, Rust.<hr />- WebAssembly enables web deployment of high-performance applications.<hr />- It is an open standard established by W3C.<hr />- In contrast to old binary machine code, WebAssembly is designed for ease of compilation from multiple languages.<hr />- Assembly language was the low-level human-readable form directly translating to machine code.<hr />- Assembly provides the highest speed but is low-level and architecture-specific.<hr />- High-level compiled languages like C/C++ compile to machine code but are processor-agnostic.<hr />- Machine code from C/C++ is less optimized than Assembly for performance.<hr />- WebAssembly takes inspiration from Assembly for speed but operates within the browser environment.<hr />- JavaScript is an interpreted, dynamically typed language, inherently slower than statically typed languages.<hr />- JavaScript's slow performance stems from its lack of explicit data types and interpretation at runtime.<hr />- Early browsers used rudimentary JavaScript engines, like SpiderMonkey, with no optimization.<hr />- JavaScript engines evolved to JIT compilation; e.g., V8 introduced full-codegen and crankshaft for dynamic optimization.<hr />- JavaScript optimization involves parsing into AST, inlining, loop unrolling, type guessing, and profiling.<hr />- V8's modern engine uses Ignition (bytecode interpreter) and TurboFan (background optimizing compiler).<hr />- asm.js is a subset of JavaScript with static typing, manual memory management, designed for performance.<hr />- It uses `\"use asm\"` directive; only supports limited data types: 32-bit int, 32/64-bit float.<hr />- asm.js modules resemble C functions compiled to JavaScript; they manage their memory via ArrayBuffer.<hr />- Browsers with asm.js support can treat code as highly optimized, near-Assembly machine code.<hr />- asm.js was a proof-of-concept but had drawbacks: complex, error-prone, non-standardized, and larger code size.<hr />- WebAssembly was developed around 2015 as a standardized, binary format to replace asm.js.<hr />- WebAssembly introduces a binary, stack-machine instruction format, enhancing efficiency.<hr />- Stack machines use a last-in-first-out (LIFO) data structure; operations only on the top of the stack.<hr />- The goal of WebAssembly is to provide fast, portable, low-level code for web and server environments.","tags":"wasm","authors":"","date":{"days":18428},"category":"playground > topics > frontend"},"470":{"file_path":"playground/topics/frontend/when-should-we-use-usereducer-instead-of-usestate.md","title":"When should we use useReducer instead of useState?","description":"Imagine we have a component with multiple states. It is simple enough not to use state management libraries. `useState` is surely a choice for the sake of brevity and clarity. But are there any issues we have to deal with? In this article, I want to make some improvements on `useState` hook and how we can replace it with `useReducer` as an alternative solution.","spr_content":"- React components with multiple states suffer from increasing complexity and reduced clarity when using numerous `useState` hooks.  <hr />- Multiple `useState` hooks can cause a \"mess\" as state list grows longer.  <hr />- No inherent safeguards in `useState` allow guarantees of consistent state updates or validation.  <hr />- Cross-state validation (e.g., startDate before endDate) is difficult with isolated `useState` hooks.  <hr />- Combining states into a single object improves code readability but introduces potential pitfalls like mutation and inconsistent updates.  <hr />- Spreading the previous state (`...`) is essential to prevent mutation bugs with object states.  <hr />- Validation logic remains separate and hard to centralize when using `useState`.  <hr />- Curried handler functions can unify and centralize state updates but require careful use to avoid confusion.  <hr />- `useReducer` can replace `useState` for managing complex or related states efficiently.  <hr />- `useReducer` guarantees centralized state transformations, facilitating validation and consistency.  <hr />- The reducer function can incorporate logic to enforce constraints (e.g., date ordering, max title length).  <hr />- `useReducer` simplifies toggling or boolean states via functions that invert current values.  <hr />- Using `useReducer` supports an action-based pattern similar to Redux but without external libraries.  <hr />- State in `useReducer` must be treated as immutable; tools like Immer aid in safe updates.  <hr />- Developers tend to prefer `useState` due to familiarity, but `useReducer` offers significant advantages for complex state logic.  <hr />- Ultimately, `useReducer` is a powerful, flexible alternative worth considering for manageable, validate-able, and maintainable state management in React components.","tags":"component frontend react state-management","authors":"hienld","date":{"days":19417},"category":"playground > topics > frontend"},"471":{"file_path":"playground/topics/frontend/pure-css-parallax.md","title":"Pure CSS Parallax","description":"This article demonstrates how to use CSS transforms, perspective and some scaling trickery to create a pure CSS parallax scrolling website.","spr_content":"- CSS transforms, perspective, and scaling create a pure CSS parallax scrolling effect.<hr />- JavaScript offers more flexibility but incurs performance costs due to scroll event handling and DOM reflows.<hr />- Pure CSS avoids GPU pipeline interference, ensuring smoother, hardware-accelerated rendering.<hr />- CSS can be combined with responsive design for adaptable parallax sites.<hr />- Basic markup involves a `.parallax` container with nested `.layer` elements.<hr />- `.parallax` styles include `perspective: 1px;`, full viewport height (`height: 100vh`), and auto-y overflow scrolling.<hr />- `.layer` elements are absolutely positioned to fill the container.<hr />- Z-index determines layer depth: farther layers have more negative `translateZ` values.<hr />- Increasing `translateZ` moves layers farther, slowing their scroll relative to the viewport.<hr />- The `.parallax` container acts as a camera with a fixed 3D perspective.<hr />- `overflow-y: auto` allows normal scrolling, but descendant layers are rendered in 3D space for parallax.<hr />- Grouping layers with a `.group` element and `transform-style: preserve-3d` maintains 3D positioning.<hr />- Clipping content within groups (`overflow: hidden`) breaks parallax; layering order (`z-index`) manages visibility.<hr />- For depth correction, apply `scale()` to layers; scale can be calculated via `scale = 1 + (translateZ * -1)/perspective`.<hr />- To debug and visualize 3D space, apply transforms like `translate3d()`, `rotateY()` to group elements.<hr />- Practical implementations illustrated via embedded CodePens demonstrate basic techniques, common practices, and debugging strategies.<hr />- Effective parallax depends on carefully controlling Z offsets, perspective, scale, and layering without clipping.","tags":"animation css frontend html","authors":"mashiro5951","date":{"days":19245},"category":"playground > topics > frontend"},"472":{"file_path":"playground/topics/frontend/i18n-frontend-guideline.md","title":"I18n Frontend Guideline","description":"Learn how to implement multi-language support with locale detection, internationalized routing, RTL/LTR text handling, and i18next formatting in React.js and Next.js front-end applications.","spr_content":"- Locales determine language and geolocation for content display, initiated upon user visit.<hr />- Content support per locale achieved via separate resource files or dynamic libraries like `i18next`.<hr />- Locale detection methods include browser settings (`navigator.language`), IP geolocation services, server `Accept-Language` headers, cookies/web storage.<hr />- `i18next-browser-languageDetector` and Next.js default locale detection leverage various client-server cues (cookie, localstorage, URL query, domain, subdomain).<hr />- Internationalized routing handles URLs differently: sub-paths (`/en/home`) or domains (`example.com`, `example.fr`).<hr />- Next.js `i18n` config supports multi-locales with domain and subpath routing, default locale, and custom domain mappings.<hr />- RTL languages like Arabic require dynamic `dir` attribute setting (`ltr`/`rtl`) on `body` or global components to ensure correct layout.<hr />- Using React components and `useEffect`, set `document.body.dir` or `html` attribute based on current language direction.<hr />- Starting from `i18next` v21.3.0, utilize Intl API-based formatting for numbers, currencies, dates, relative times, and lists to localize data presentation.<hr />- Format examples:<hr />  - Numbers: `{{val, number}}` or with custom `formatParams`.<hr />  - Currency: `{{val, currency(USD)}}` with locale override.<hr />  - Dates/Times: `{{val, datetime}}` with formatting options.<hr />  - Relative times: `{{val, relativetime}}`.<hr />  - Lists: `{{val, list}}`, optionally returning objects for near-native list rendering.<hr />- Multilingual support is crucial for inclusive, global web/apps; implementation involves locale detection, routing adjustment, RTL support, and data formatting.<hr />- For complex cases, seek expert help or implementation challenges; resources available via the provided URLs.<hr />- Emphasize ongoing support, community, and growth through company links and social channels.","tags":"engineering frontend performance web","authors":"","date":{"days":19450},"category":"playground > topics > frontend"},"473":{"file_path":"playground/topics/frontend/html-inert.md","title":"HTML inert","description":"`inert` is a boolean HTML property that makes the browser ignore the user input events for an element, including focus events and events from assistive technologies.","spr_content":"Inert is a boolean HTML attribute that disables interaction events and accessibility for an element.  <hr />It removes the element from tab order, preventing focus.  <hr />It eliminates the element from the accessibility tree, hiding it from assistive technologies.  <hr />Using inert reduces reliance on focus traps combined with aria-hidden to manage dialogs.  <hr />Prior methods (aria-hidden + tabindex=\"-1\") are more cumbersome, less holistic.  <hr />Inert simplifies accessibility management during modal dialogs by automatically making elements non-interactive and hidden.  <hr />Focus management remains manual: move focus to dialog on open, restore on close.  <hr />Inert streamlines dialog accessibility handling, reducing need for manual focus traps.  <hr />It enhances accessibility consistency and reduces developer error.","tags":"a11y accessibility frontend html","authors":"thanh","date":{"days":19155},"category":"playground > topics > frontend"},"474":{"file_path":"playground/topics/frontend/css-container-queries.md","title":"CSS Container Queries","description":"Container Queries is a CSS feature that allows us to style elements based on the size of a container.","spr_content":"- Media queries adjust styles based on viewport size; limited to entire page responsiveness.<hr />- Cannot style individual components dynamically based on parent size.<hr />- Container queries address this gap by enabling styles based on a container's dimensions.<hr />- CSS `container-type` property defines how an element behaves as a container: `size`, `inline-size`, `block-size`, `style`, `state`.<hr />- Elements with `container-type` become containment contexts.<hr />- `@container` rule applies styles when container dimension thresholds are met.<hr />- Containers can be named with `container-name` for targeted queries.<hr />- Shorthand syntax `container` combines name and type.<hr />- Queries can specify minimum or maximum container dimensions.<hr />- Browser support limited: Chrome 105+, Safari 15+, Edge 105+.<hr />- Polyfill ensures broader compatibility.<hr />- Container queries enable responsive, modular component design independent of entire page responsiveness.<hr />- They extend CSS responsiveness from page-level to component-level, mimicking media queries at the container level.<hr />- Useful for complex, adaptable UI components that react to their local environment.<hr />- Reference resources provide detailed syntax, support status, and polyfill options.","tags":"css frontend guides responsive-design","authors":"cor3.co","date":{"days":19237},"category":"playground > topics > frontend"},"475":{"file_path":"playground/topics/frontend/choosing-the-right-javascript-framework-a-deep-dive-into-react-vs-angular-vs-vue.md","title":"Choosing The Right Javascript Framework A Deep Dive Into React Vs Angular Vs Vue","description":"Compare React, Angular, and Vue to find the best JavaScript framework for your web projects by exploring their performance, learning curve, tooling, and industry use cases.","spr_content":"JavaScript frameworks evolved from jQuery (2006), enabling SPAs by DOM manipulation; foundational shift toward structured frameworks.  <hr /><hr />AngularJS (2010): introduced two-way data binding, dependency injection, modular architecture; scalable, maintainable enterprise solutions.  <hr /><hr />React (2013): popularized component-based architecture, Virtual DOM, unidirectional data flow; optimized performance, reusable components, vast ecosystem.  <hr /><hr />Angular (2016): a complete rewrite of AngularJS; refined features, stable, performance-focused, suited for large-scale apps.  <hr /><hr />Vue (2014): created by Evan You; blends React's component model with Angular's directives; lightweight, versatile, easy learning curve, reactive reactivity system.  <hr /><hr />Comparison key points:  <hr />- Release timelines mark evolution; React (2013), Vue (2014), Angular v2 (2016).  <hr />- Popularity: React and Vue surpass Angular in GitHub stars; large communities.  <hr />- Programming: React (JavaScript/TypeScript), Angular (TypeScript), Vue (JavaScript/TypeScript).  <hr />- Learning curve: Vue (easy), React (moderate), Angular (steep).  <hr />- Ecosystem: React (vast), Angular (integrated), Vue (growing).  <hr />- Data binding: React (one-way), Angular (two-way), Vue (one-way).  <hr />- Routing, state management, SSR, mobile, UI libraries vary, reflecting architectural philosophies.  <hr /><hr />Rendering performance:  <hr />- React: Virtual DOM, concurrent rendering, high efficiency in large apps.  <hr />- Angular: real DOM, AOT, change detection; improved over time but complex for updates.  <hr />- Vue: virtual DOM, reactive data, composition API; combines React-like performance and simplicity.  <hr /><hr />Learning curve implications:  <hr />- React's flexibility enables rapid adoption but requires grasping hooks, JSX.  <hr />- Angular's comprehensive nature demands understanding dependency injection, decorators, TypeScript—steep but consistent.  <hr />- Vue's approachable API eases onboarding; familiar syntax supports incremental adoption.  <hr /><hr />Tooling and ecosystem:  <hr />- React: extensive libraries (Redux, React Router), mature tools (Create React App, Next.js).  <hr />- Angular: integrated CLI, built-in modules, enterprise tools (Angular Material, Universal).  <hr />- Vue: expanding tools (Vue CLI, Vue Router, Vuex), community-driven libraries (Vuetify, Quasar).  <hr /><hr />API stability and evolution:  <hr />- React: stable API, backward-compatible innovations, hooks are well integrated.  <hr />- Angular: major version shifts, predictable semver, comprehensive updates.  <hr />- Vue: stable, with minor breaking changes; migration guides ease upgrades (Vue 2 to 3).  <hr /><hr />Industry adoption:  <hr />- React: widespread in social media, e-commerce, VR, supported by Facebook, Airbnb, Netflix.  <hr />- Angular: extensive in enterprise, finance, government; Google, Microsoft, IBM.  <hr />- Vue: growing in startups and open source; Alibaba, Xiaomi, GitLab.  <hr /><hr />Conclusion:  <hr />- Choice depends on project needs and developer preference.  <hr />- React offers performance, ecosystem, scalability.  <hr />- Angular provides a full-featured, enterprise-grade framework.  <hr />- Vue balances simplicity and power, accessible for all skill levels.","tags":"framework frontend web","authors":"","date":{"days":19471},"category":"playground > topics > frontend"},"476":{"file_path":"playground/topics/frontend/be-careful-with-your-code-splitting-setup.md","title":"Be Careful With Your Code Splitting Setup","description":"Learn how improper Webpack code-splitting can cause React virtual lists to reset scroll position unexpectedly and how grouping related chunks fixes navigation glitches in mobile-first PWAs.","spr_content":"SPR:<hr />- Deep debugging was needed after app behavior: virtual list resets scrollTop before navigation.<hr />- App is a mobile-first PWA using React, with an infinite/virtual list via react-virtualized.<hr />- `Explore` component is a list similar to `ItemList`, but differs in navigation side-effects.<hr />- Clicking list items causes a frame delay, then list scroll resets to top unexpectedly before route transition.<hr />- Old `ItemList` had no such issue; copied code from old, but problem persists.<hr />- Root cause traced to code splitting setup, specifically route-based dynamic imports.<hr />- Usage of Webpack’s magic comments groups chunks; `ItemList` and `ItemDetail` expected in `item` chunk.<hr />- When `Explore` shares same chunk name as `ItemDetail`, the scrolling bug disappears.<hr />- Sharing the chunk name leads to chunk being preloaded or cached, reducing load delay.<hr />- Inconsistent chunk loading timing appears to trigger virtual list reset.<hr />- Hypothesize that delayed chunk load causes React/virtualized to reset scrollTop during rerender or remount.<hr />- Less mature understanding of code-splitting, but suspect chunk loading interplay with component lifecycle.<hr />- Need to inspect internal virtual list implementation for side effects during route change.<hr />- Recognize that chunk grouping and code-splitting granularity influence app state and component behavior.<hr />- The core insight: chunk configuration impacts virtual DOM/scrolling stability during dynamic imports and routing.<hr />- Consider consolidating or adjusting route chunk groups to prevent asynchronous load effects on virtual list state.","tags":"engineering practice technique","authors":"","date":{"days":17364},"category":"playground > topics > frontend"},"477":{"file_path":"playground/topics/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second.md","title":"Dark mode flickers a white background for a fraction of a second","description":"The dark mode feature uses local storage to store a user's preference for future usage. The problem is that when the dark mode is enabled and the page is reloaded, there's a flicker of a white background all over the page before it turns dark. This happens for a fraction of a second and doesn't look natural.","spr_content":"- LLMs embed latent knowledge and associative capabilities; priming with specific cues activates relevant internal states.<hr />- Dark mode persistence relies on localStorage, storing user preference for future sessions.<hr />- Applying dark or light styles involves toggling a CSS class (`dark`) on the `<html>` element.<hr />- CSS files (`light.css` and `dark.css`) govern visual styling; order and timing of their loading influence initial appearance.<hr />- Loading `<script>` before CSS delays style application; the browser renders default styles (white background) before script adds `dark` class.<hr />- The flicker results from the delay between initial page paint (light background) and subsequent style adjustment (dark mode).<hr />- Moving the script into `<head>` before CSS ensures style class is set before CSS loads, preventing flash.<hr />- Embedding theme detection script inline in `<head>` makes page rendering blocking, establishing correct style state before style sheets are fetched.<hr />- This technique minimizes visual flicker by establishing styling intent during critical rendering path, leveraging browser’s style and render flow.<hr />- Faster initial style application aligns with principle of \"Style First,\" optimizing user experience in theme toggling.<hr />- The approach exemplifies how early scripting and inline logic effectively coordinate styling in dynamic theme management.","tags":"dark-mode frontend tip","authors":"thanh","date":{"days":19215},"category":"playground > topics > frontend"},"478":{"file_path":"playground/topics/frontend/recursively-export-file-pattern-in-javascript-es6-application.md","title":"Recursively Export File Pattern In Javascript Es6 Application","description":"Learn how to simplify JavaScript ES6 imports by using recursive re-export patterns and automate index file creation with the @autogen-export package for cleaner component management.","spr_content":"- Pattern introduces grouped namespace-style exports similar to C# namespaces, improving project structure clarity.  <hr />- Re-export syntax consolidates component imports, reducing repetitive import paths.  <hr />- This approach enhances maintainability by centralizing exports in index files, easing refactoring and updates.  <hr />- Pros include simplified import statements and organized component management.  <hr />- Cons entail inability to re-export members with duplicate names, limiting certain re-export scenarios.  <hr />- Implementation relies on ES6 `export {...} from '...'` syntax; excludes default exports unless explicitly handled.  <hr />- Automation via @Autogen-export packages streamlines index file generation across multiple folders, adaptable with build configs.  <hr />- Overall, pattern promotes modularity, cleaner code, and scalable project structure, especially in large React or Vue apps.  <hr />- Potential trade-offs involve managing naming conflicts and default export considerations, but these are manageable with conventions.  <hr />- This pattern aligns well with modern JavaScript development practices favoring composition, namespace management, and automation.","tags":"js","authors":"","date":{"days":18146},"category":"playground > topics > frontend"},"479":{"file_path":"playground/topics/frontend/useeffect-double-calls-in-react-18.md","title":"useEffect double calls in React 18","description":"In the React 18 version, the `useEffect` hook has been updated to called twice compare to only one in the older version in StrictMode.","spr_content":"React 18 StrictMode introduces double invocation of useEffect due to intentional mounting-unmounting-mounting cycle for development diagnostics and future UI resilience strategies. Previously, in React 17, useEffect ran once per mount. In React 18, components are mounted, unmounted, then remounted in StrictMode, causing useEffect to execute twice without dependencies. This facilitates detection of side effects that assume single-mount behavior and prepares for advanced UI state preservation via unmounting and remounting. The double invocation serves as a development-only check, warning developers to make effects resilient. A workaround involves creating custom hooks like useEffectOnce, but this can risk leaks and isn't recommended; instead, embrace double-firing and ensure cleanup functions are idempotent.","tags":"frontend react use-effect","authors":"namtrhg","date":{"days":19154},"category":"playground > topics > frontend"},"480":{"file_path":"playground/topics/frontend/zaplib-post-mortem.md","title":"Zaplib post-mortem","description":"Zaplib is a frontend framework that helps to port your JS/TS app to Rust/Wasm. This idea was found after the founder's painful work at https://webviz.io when he had to use a bundle of manual memory management techniques such as ArrayBuffers, WebWorkers for performance optimization. Back up with the assumption that an intricate web app like Figma also uses Wasm, they thought there would be a lot of companies experiencing a similar performance issue with their applications and those companies would be keen on using their new tool to 10x speed up the apps.","spr_content":"Zaplib: frontend framework for porting JS/TS to Rust/Wasm.  <hr />Founder’s challenge: manual memory management at Webviz.io; performance issues with ArrayBuffers and WebWorkers.  <hr />Inspired by complex apps like Figma using WebAssembly; expected widespread performance gains.  <hr />Reality check: year’s experience shows limited benefits.  <hr />Porting a JS simulator to Rust took a week; resulted in ~5% speed increase.  <hr />Rust’s advantage primarily in linear algebra; JS already optimized in that area.  <hr />Rarity of 10x gains; typical gains ~2x when leveraging Rust’s zero-cost abstractions, like memory layout for structs.  <hr />Major speedups observed mostly in niche cases, such as handling vast numbers of small structs.  <hr />WebGL is the real performance driver in high-profile cases like Figma, not Rust/Wasm.  <hr />Figma’s performance relies heavily on its WebGL renderer, not just Wasm efficiencies.  <hr />Pivoting from Rust/Wasm to WebGL rerendering is possible, but market demand unlikely to justify it.  <hr />Conclusion: Rust/Wasm offers limited, specific performance benefits; broad adoption not as impactful as hoped.","tags":"frontend rust wasm web-performance","authors":"thanh","date":{"days":19113},"category":"playground > topics > frontend"},"481":{"file_path":"playground/topics/frontend/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit.md","title":"Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit","description":"Speed up project initiation with NextJS-Boilerplate and React-Toolkit, featuring pre-configured tools, TypeScript, custom hooks, and ESLint for faster setup and improved React app development.","spr_content":"- Modern software development faces hurdles in project initiation including slow setup, inconsistent code quality, complex configuration, and inefficient workflows.<hr />- To overcome these, custom toolkits like NextJS-Boilerplate and React-Toolkit accelerate initial setup, standardize quality, and streamline processes.<hr />- NextJS-Boilerplate is a pre-configured, performance-optimized React frontend foundation built on NextJS, utilizing TypeScript, SWR, TailwindCSS, Jest, Cypress, and Storybook for comprehensive development, testing, and design collaboration.<hr />- It facilitates rapid component development, visual testing, and integrated testing workflows, promoting efficiency and consistency.<hr />- React-Toolkit offers React hooks, utility functions, and an ESLint setup focused on reducing redundancy, enforcing standards, and enhancing developer productivity.<hr />- It ensures code quality through enforced conventions, cleaner code via Prettier, and time savings with pre-built hooks and utilities for common tasks.<hr />- Outcomes of these libraries include faster project initiation, higher code quality, and more efficient, collaborative workflows.<hr />- These tools provide a robust foundation allowing teams to focus on software excellence rather than initial configuration.<hr />- Future enhancements aim at a CLI or code generator for even quicker project bootstrap, leading to seamless transitions from initiation to development.<hr />- Adoption of NextJS-Boilerplate and React-Toolkit enables organizations to stay competitive, build scalable apps faster, and maintain high standards in frontend development.","tags":"engineering framework frontend tool","authors":"","date":{"days":19450},"category":"playground > topics > frontend"},"482":{"file_path":"playground/topics/frontend/remix-versus-nextjs.md","title":"Remix Versus Nextjs","description":"A brief comparison between Remix and Next.js frameworks","spr_content":"- Remix is an edge-native, full-stack JavaScript framework focusing on modern, fast, resilient user experiences by unifying client and server with web standards.<hr />- Next.js is a well-established React framework primarily for server-side rendering and static website generation, with broad community support.<hr />- Both frameworks utilize file-based routing but differ in route directory (`/app/routes` in Remix vs `/pages` in Next.js).<hr />- Remix excels in nested routing via React Router, enabling complex route hierarchies with components like `Outlet`.<hr />- Next.js routing supports nesting but is less straightforward compared to Remix’s approach.<hr />- Remix does not support Static Site Generation (SSG); instead, it uses CDN caching with HTTP stale-while-revalidate (SWR) directives for dynamic content.<hr />- Next.js offers multiple data loading strategies: `getServerSideProps`, `getStaticProps`.<hr />- Remix introduces `loader` functions for server-side data fetching within components, complemented by `useLoaderData` hook.<hr />- Data mutations in Remix are handled via `<Form>` components and `action` route functions, simplifying mutations and ensuring UI consistency.<hr />- Next.js lacks built-in mutation handling; developers manage forms, state, and errors manually.<hr />- Error handling in Remix uses route-specific error boundaries with bubbling behavior for nested errors.<hr />- Next.js typically manages errors with custom error pages but has limited support for data/rendering errors.<hr />- Remix’s abstraction enhances developer experience with integrated data loading, mutation, and error handling; Next.js offers familiarity and a larger ecosystem.<hr />- While Next.js remains dominant for React SSR, Remix is emerging as a powerful alternative with advanced routing and built-in features aimed at modern web standards.","tags":"engineering frontend radio","authors":"khacvy","date":{"days":19139},"category":"playground > topics > frontend"},"483":{"file_path":"playground/topics/frontend/lessons-learned-from-being-a-part-of-corporate-micro-frontend-implementation.md","title":"Lessons Learned From Being A Part Of Corporate Micro Frontend Implementation","description":"Discover how micro-frontend architecture boosts large-scale frontend development with independent teams, shared components, and efficient communication for scalable, maintainable, and collaborative web applications.","spr_content":"- Micro-frontends are a modular architecture for scalable, maintainable, and collaborative frontend development.  <hr />- They enable independent team ownership of application modules, boosting flexibility and reducing coupling.  <hr />- Boundaries are based on functionality, domain, and team responsibilities, minimizing interdependencies.  <hr />- Webpack Module Federation facilitates dynamic, runtime sharing and loading of micro-frontend modules, streamlining integration.  <hr />- Communication employs shared libraries, REST APIs, and event-driven publish-subscribe patterns, managing data consistency and versioning challenges.  <hr />- State management tools like Redux and Zustand serve as single sources of truth across micro-frontends.  <hr />- CI pipelines, utilizing tools like SonarCloud, enforce code quality and testing standards despite team-specific conventions.  <hr />- Deployments treat each micro-frontend as an independent unit, enabling rapid releases and isolated failure mitigation; shared components require careful version control and communication.  <hr />- Cross-team collaboration is fostered through code reviews, shared channels, and regular sync-ups, prioritizing communication over strict standards.  <hr />- Shared UI libraries with documented styling conventions promote consistency; managed via dedicated package managers to control versions and dependencies.  <hr />- Key lessons include establishing clear domain boundaries, leveraging shared component libraries, prioritizing communication, and implementing robust testing and deployment strategies.  <hr />- The architecture's flexibility facilitates handling complex, large-scale projects by supporting diverse teams and vendors, ultimately enhancing productivity and scalability.","tags":"micro-frontend web","authors":"","date":{"days":19471},"category":"playground > topics > frontend"},"484":{"file_path":"playground/topics/frontend/introducing-htmx-navigating-the-advantages-and-concerns.md","title":"Introducing HTMX - Navigating the Advantages and Concerns","description":"A comprehensive exploration of HTMX, a JavaScript library that extends HTML as a hypermedia, addressing the limitations of legacy HTML applications.","spr_content":"- HTMX is a hypermedia-oriented JavaScript library for creating dynamic websites with minimal JavaScript.<hr />- It extends HTML by adding custom attributes for requests, events, and target elements.<hr />- Hypermedia-Oriented approach involves shared understanding of hypermedia elements between clients and servers, enabling navigation and requests without breaking clients when server responses change.<hr />- Core concept: extend HTML attributes like `hx-get`, `hx-trigger`, `hx-target`.<hr />- `hx-get` defines API endpoint and HTTP method; `hx-trigger` sets event conditions; `hx-target` specifies where server responses insert content.<hr />- Simplifies UI interactions such as infinite scrolling, toasts, conditional rendering, and WebSocket/SSE integration, reducing reliance on JavaScript.<hr />- Provides JavaScript APIs like `htmx.ajax()`, for AJAX requests and server-triggered events.<hr />- Server can generate client events via headers (`HX-Trigger`), enabling reactive behavior based on server responses.<hr />- Benefits include minimal JavaScript code, improved performance, locality of behavior, and enhanced product agility.<hr />- Risks involve potential violation of separation of concerns by mixing presentation and data, and shifting control to server, impacting API consumption and client flexibility.<hr />- Suitable for rapid rendering, SEO, CRUD UIs, and well-defined UI blocks; less ideal for complex interdependencies, offline needs, or teams unfamiliar with HTMX.<hr />- HTMX represents a streamlined, flexible alternative to heavier JavaScript frameworks, emphasizing hypermedia and server-driven interactions.","tags":"frontend htmx","authors":"namanh","date":{"days":19709},"category":"playground > topics > frontend"},"485":{"file_path":"playground/topics/frontend/intro-to-indexeddb.md","title":"Intro to IndexedDB","description":"IndexedDB is a low-level API for client-side storage like localStorage and cookies. But this built-in non-relational database is much more powerful than those 2 counterparts.","spr_content":"- IndexedDB is a low-level client-side storage API, more powerful than localStorage and cookies.  <hr />- Suitable for offline applications requiring data persistence without internet, e.g., to-do lists, saved games.  <hr />- Stores nearly all key-value pairs, including complex objects; operates asynchronously for performance.  <hr />- Supports large volumes of structured data, beyond localStorage capacity.  <hr />- Ensures data reliability via transactions; does not use SQL, but follows same-origin policy for security.  <hr />- Contains core concepts:  <hr />  - Database: contains object stores, identified by name and version.  <hr />  - Object store: akin to relational table, holds data entries, must have a unique name within a database.  <hr />  - Transaction: atomic operations for data access/modification, involving specific object stores; must run in a transaction scope.  <hr />  - Index: specialized object store for fast lookup, maps search fields to primary keys; supports quick search via createIndex.  <hr />  - Cursor: iterates over large object stores one record at a time, conserving memory.  <hr />- Common workflow:  <hr />  - Open database connection with name and version.  <hr />  - Create object stores and indexes during upgrade needed.  <hr />  - Execute read/write operations within transactions.  <hr />- Limitations include:  <hr />  - Internationalized string sorting not supported.  <hr />  - No full-text search or SQL-like LIKE operator.  <hr />  - Browser restrictions in private mode or low disk space.  <hr />  - More complex to implement than localStorage or cookies.  <hr />- Use IndexedDB when complex, sizable, transactional, or object-based client-side storage is needed, especially for offline-first apps.","tags":"client-side frontend storage","authors":"nguyend-nam","date":{"days":19278},"category":"playground > topics > frontend"},"486":{"file_path":"playground/topics/frontend/variable-fonts.md","title":"Variable Fonts","description":"Variable fonts are a font format that allows for a single font file to contain multiple variations of a typeface.","spr_content":"- Variable fonts, known as OpenType Font Variations, contain multiple design variations within a single font file.<hr />- Variations include weights, widths, slants, optical sizes, and other customizable parameters called \"axes.\"<hr />- Axes of Variation are parameters that can be adjusted within defined ranges to create distinct font styles.<hr />- For example, \"weight\" axes range from \"Thin\" to \"Bold,\" enabling smooth interpolation between styles.<hr />- Variations depend on font design and architecture; creators specify available axes and ranges.<hr />- Benefits of variable fonts include smaller file sizes, faster loading, and extensive customization.<hr />- They foster creativity by offering dynamic, adaptable typography solutions.<hr />- Users can interact with variations through web interfaces or design tools to see effects instantly.<hr />- Developers load variable fonts via `@font-face` with annotations indicating support for variations.<hr />- To manipulate axes, use `font-variation-settings` with registered axes (lowercase tags) like `'wght'`, `'wdth'`, `'opsz'`, `'slnt'`, `'ital'`.<hr />- Additional custom axes can be added, identified with uppercase tags.<hr />- Multiple axes can be combined for nuanced style adjustments.<hr />- Designer documentation or font creators specify which axes are available and how to use them.<hr />- Variations enhance typographic flexibility, enabling precise, context-sensitive visual design.","tags":"css fonts frontend variable-fonts","authors":"ngolapnguyen","date":{"days":19422},"category":"playground > topics > frontend"},"487":{"file_path":"playground/topics/frontend/build-polymorphic-react-components-with-typescript.md","title":"Build polymorphic React components with Typescript","description":"This article provides a step-by-step guide on how to build polymorphic React components with Typescript, covering the necessary concepts and techniques to create flexible and reusable components.","spr_content":"- Creating flexible React components requires dynamic HTML tags via an `as` prop.<hr />- Initial implementation with `as?: any` allows any value but lacks type safety.<hr />- Using `React.ElementType` restricts `as` to valid React element types, generating compile-time errors for invalid tags.<hr />- Extending prop types with `React.ComponentPropsWithoutRef<C>` ties external HTML attributes to the chosen tag.<hr />- Making `as` optional with a default subtype (e.g., `'p'`) improves usability and type safety.<hr />- Filtering custom props from HTML attributes prevents property collisions using `Omit<React.ComponentPropsWithoutRef<C>, keyof Props>`.<hr />- Abstracting `as` and props into a generic, reusable type like `PolymorphicComponentProps<C, Props>` enhances component reusability.<hr />- Supporting `ref` forwarding in polymorphic components requires `React.forwardRef` combined with `React.ComponentPropsWithRef<C>` to correctly type ref objects.<hr />- Defining a `PolymorphicRef<C>` type extracts the correct ref type corresponding to the specified element.<hr />- Wrapping `forwardRef` with generic types necessitates defining the inner function with explicit types to maintain TypeScript inference.<hr />- The entire pattern yields strongly typed, reusable, polymorphic React components, compatible with any valid HTML or custom element, with full support for props and ref forwarding.<hr />- Final architecture follows separation of concerns: core types (`AsProp`, `PropWithAs`, `PolymorphicComponentProps`, `PolymorphicRef`) and component-specific props.<hr />- This approach promotes safety, reusability, and proper integration of HTML attributes, types, and refs in TypeScript-powered React polymorphic components.","tags":"frontend polymorphic-component reactjs typescript","authors":"khacvy","date":{"days":19261},"category":"playground > topics > frontend"},"488":{"file_path":"playground/topics/frontend/preserving-and-resetting-state-in-react.md","title":"Preserving and Resetting state in React","description":"State in React is tied to a position in the UI tree.","spr_content":"- React's state is linked to component position within the UI tree, not strictly to JSX markup.<hr />- Components do not inherently have state; React manages state based on component placement.<hr />- Each instance of a component at distinct positions is treated as a separate entity with an independent state.<hr />- When a component is removed from a position, React discards its state.<hr />- React preserves state when components are rendered at the same position with same component identity.<hr />- React identifies components at the same position via component type and UI tree position, not JSX structure.<hr />- Swapping components at the same position with different types resets the previous component's state.<hr />- Using a key prop distinguishes components at the same position, allowing explicit control — keys prevent React from sharing state inadvertently.<hr />- Approaches to control state preservation:<hr />  - Render components at different positions to isolate their states.<hr />  - Use unique keys for each component to reset or preserve state intentionally.<hr />- Keys are a versatile tool beyond list rendering, crucial for managing component identity in React trees.<hr />- Recognizing component identity and position in the UI tree is essential for predictable state management.<hr />- Understanding React's rendering flow: JSX → UI trees → DOM clarifies how component position influences state persistence.","tags":"fronten hooks react state-management","authors":"toanbku","date":{"days":19415},"category":"playground > topics > frontend"},"489":{"file_path":"playground/topics/frontend/window-and-iframe-communication.md","title":"Window and iframe communication","description":"When working with web development, communicating between a main window and an embedded iframe is often necessary for various tasks, such as content creation or widget implementation. This communication can occur between windows and iframes with the same origin or across different origins.","spr_content":"Web development involves window-iframe communication, categorized by origin sharing.  <hr /><hr />Same origin: URLs share protocol, domain, and port, enabling full access to iframe content via `contentWindow`/`contentDocument`. Examples include identical protocol, domain, path. Restrictions apply when origins differ, blocking direct access. Use case: content builders needing isolated CSS/display.  <hr /><hr />Cross origin: URLs differ in protocol, domain, or port, restricting direct access. Employ `postMessage` for safe messaging, allowing communication regardless of origin differences. Both parent and iframe use `postMessage` and `addEventListener('message')`, with origin validation to ensure security. Use case: embedded widgets like chatboxes.  <hr /><hr />Key mechanisms:  <hr />- Same origin: direct DOM access via `contentWindow`/`contentDocument`.  <hr />- Cross origin: message passing via `postMessage`; messages contain data and are received with origin validation.  <hr /><hr />Summary:  <hr />- Same origin: direct DOM access, rich interaction.  <hr />- Cross origin: message passing with `postMessage`; secure, controlled communication.","tags":"frontend iframe post-message","authors":"thanh","date":{"days":19589},"category":"playground > topics > frontend"},"490":{"file_path":"playground/topics/frontend/scroll-driven-animations.md","title":"Scroll-driven animations","description":"Scroll-driven animations are popular effects used in web design. They are animations that are connected to the scroll position of a scroll container.","spr_content":"- Scroll-driven animations synchronize movement with scroll position; backgrounds or indicators move as scrolling occurs.<hr />- Elements can fade in or out based on visibility within scroll containers.<hr />- Past methods relied on main thread scroll event handling, causing performance issues—animations lacked smoothness and synchronization.<hr />- The Scroll-driven Animations specification introduces APIs for declarative scroll-linked animations; integrates with Web Animations API and CSS Animations API.<hr />- Default animation timelines are document-based, progressing from page load (0) forward.<hr />- Scroll Progress Timeline links animation progress to scroll position in a container along an axis; converts scroll range to percentage (0%-100%).<hr />- View Progress Timeline links animation to an element’s visibility within a scroll container—progress from entering (0%) to leaving (100%).<hr />- Both timelines allow creating scroll-linked animations without JavaScript, purely through CSS.<hr />- Example: rotating SVG icon by correlating element rotation with scroll progress using `animation-timeline: scroll(root, block);` and `scroll()` function.<hr />- `scroll()` accepts `<scroller>` options: nearest, root, self; and `<axis>` options: block, inline, x, y.<hr />- For full-page scroll tracking, use `scroll(root block)`; duration set to `auto`.<hr />- Enhances performance and smoothing; enables complex effects driven entirely by CSS and native APIs.<hr />- Precise control over scroll-linked animations fosters creative, performant web interactions; suitable for backgrounds, progress indicators, fade-ins, rotations.<hr />","tags":"animations frontend intersection-observer scroll-driven-animations","authors":"khacvy","date":{"days":19509},"category":"playground > topics > frontend"},"491":{"file_path":"playground/topics/frontend/why-virtual-dom-is-fast.md","title":"Why Virtual DOM is fast?","description":"React and Vue, two popular front-end frameworks, both use Virtual DOM to improve page rendering efficiency. Understanding the concept of Virtual DOM sheds light on an important aspect of performance optimization on the client side.","spr_content":"- React and Vue utilize Virtual DOM to enhance client-side rendering efficiency.<hr />- Virtual DOM is a JavaScript object map mirroring real DOM structure.<hr />- Example Virtual DOM in React: nested objects defining tags, props, and children.<hr />- Virtual DOM translates directly into HTML with corresponding tags and attributes.<hr />- Relationship: one-to-one correspondence between Virtual DOM and browser DOM.<hr />- Updating UI involves:<hr />  - Creating a new Virtual DOM after state change.<hr />  - Diffing: comparing new and old Virtual DOMs.<hr />  - Generating a diff object capturing only changes.<hr />  - Applying batched updates to actual DOM.<hr />- Diffing compares tags, properties, and children; registers only necessary changes.<hr />- Batch updates minimize DOM method calls, reducing computational cost.<hr />- Purpose of diffing: limit DOM manipulation frequency, avoid unnecessary updates.<hr />- Grouping updates is more efficient than incremental, real-time modifications.<hr />- Eliminating unnecessary DOM operations boosts performance.<hr />- Diffing Virtual DOM is computationally cheaper than full DOM recalculations.<hr />- Virtual DOM is not intrinsically fast; it is slower than real DOM but faster than redundant DOM manipulations.<hr />- The main advantage: reducing expensive real DOM updates, not the speed of Virtual DOM itself.<hr />- Efficient rendering depends more on minimizing update frequency than on Virtual DOM speed.","tags":"frontend performance react virtual-dom","authors":"thanh","date":{"days":19213},"category":"playground > topics > frontend"},"492":{"file_path":"playground/topics/frontend/Report/frontend-report-october-2024.md","title":"Frontend Report October 2024","description":"This month’s newsletter highlights React’s new compiler beta, key updates from Next.js Conf 2024, and industry shifts toward full-stack roles and modern CSS. AI-driven tools like GitHub Copilot and Project IDX are further advancing development workflows.","spr_content":"- Web development advancements focus on React, Next.js, CSS, and AI tools.  <hr />- React’s new compiler (beta) optimizes re-rendering, code-splitting, boosting large app performance.  <hr />- Understanding React rendering triggers and optimization is critical for developers; guides available.  <hr />- Next.js Conf 2024 highlights Edge Functions, React Server Components, and new features shaping modern web growth.  <hr />- Full-stack roles surpass senior frontend; performance-driven, simple apps gain favor; AI adoption rises (69%).  <hr />- CSS evolves into “New CSS” with sub-grid, variables, container queries, supported widely.  <hr />- Engineering market remains resilient; remote work, AI, ML, cybersecurity expand talent search globally.  <hr />- Trends include React Native’s new architecture, CSS content-aware components, scroll animations, Web Vitals, Git repo reduction.  <hr />- AI-enhanced code review via GitHub Copilot Workspace improves accuracy and efficiency.  <hr />- Vercel adopts microfrontends, reducing build times and improving developer flow.  <hr />- New tools: TanStack Start for full-stack React solutions, Project IDX for cloud app management, OneStack for simplified universal apps.  <hr />- Resources for CSS, performance optimization, data fetching, animation, and new frameworks enhance development workflows.  <hr />- Commentary reflects shifts from Svelte to React, React Query debates, WordPress ecosystem issues, AI code generation concerns, and productivity metrics.","tags":"frontend market-report","authors":"mashiro5951","date":{"days":20032},"category":"playground > topics > frontend > Report"},"493":{"file_path":"playground/topics/frontend/Report/frontend-report-september-2024.md","title":"Frontend Report September 2024","description":"This roundup highlights the latest in React and Next.js, including Server Functions, the React 19 compiler, and self-hosting with OpenNext. Find tips on lazy loading, CSS Grid, JavaScript's evolution, plus new tools and expert insights.","spr_content":"React  <hr />- Server Actions renamed to Server Functions; now encompass mutations and beyond.  <hr />- React 19 compiler offers advanced optimization; detailed usage guides available.  <hr />- Lazy loading with React Router presents pitfalls; structuring loader functions is critical.  <hr />- Additional resources: React hooks best practices, inverse assertions in testing, modern data-fetching, Vim for React devs.<hr /><hr />Next.js  <hr />- OpenAI's ChatGPT shifted from Next.js to Remix; reasons include strategic or technical considerations.  <hr />- OpenNext initiative enables cross-platform self-hosting of Next.js apps; counters vendor lock-in.  <hr />- Next.js now supports Progressive Web Apps via updated documentation; enhances reach and UX.  <hr />- Additional links: deployment strategies, internationalization for date formatting.<hr /><hr />Others  <hr />- RAG integration in React/TypeScript: architecture and typings for efficient retrieval-augmented generation.  <hr />- CSS :has selector can replace React in certain scenarios; controls focus, table styling, and more.  <hr />- JavaScript evolution: questioning the necessity of transpiling to ES5 amidst modern browsers.  <hr />- Additional resources: React Query data sync, clipboard data types, CSS display contents, safe-await promises, Masonry/Grid layouts.<hr /><hr />Trending  <hr />- Prominent JS figures decry Oracle's hold on \"JavaScript\" trademark; call for release to reduce confusion.  <hr />- Hono framework: gaining traction due to speed, ease in full-stack development.  <hr />- Related prompts: better prompt design, reverse engineering minified JavaScript with ChatGPT.<hr /><hr />New Tools  <hr />- Conform: type-safe form validation harnessing web standards; supports Remix, Next.js.  <hr />- NewDevTools: curated daily update on developer tools and services.  <hr />- Bulletproof React: architecture guide addressing real-world app problems; not boilerplate but practical advice; linked resources include Tailwind inline styles, new React components, environment variable managers, timeline components, OpenAI’s Canvas.<hr /><hr />Commentary  <hr />- Reasons Gumroad avoided htmx; insights into tech stack choices.  <hr />- Analysis of JavaScript crisis: root causes, potential solutions.  <hr />- Deep bug investigation case study; lessons in debugging complex code.<hr /><hr />This distillation consolidates current web dev trends, React and Next.js updates, emerging tools, and critical discourse into precise conceptual cues for advanced NLP/ NLU/ NLG priming.","tags":"frontend market-report","authors":"mashiro5951","date":{"days":20001},"category":"playground > topics > frontend > Report"},"494":{"file_path":"playground/topics/frontend/Report/frontend-report-january-2025.md","title":"Frontend Report January 2025","description":"This January 2025 report explores key frontend advancements, including React 19's Actions, Next.js 15.1's Deno Deploy support, and innovative tools like Transformers.js for AI. Discover trending technologies, best practices, and expert commentary shaping the future of frontend development.","spr_content":"- React 19 introduces significant features: Actions for simplified state management, built-in error handling, optimistic updates.<hr />- New hooks like useOptimistic and useActionState enhance development fluidity.<hr />- Suspense is optimized for improved user experience.<hr />- Ref callbacks in React 19 now support cleanup functions, similar to useEffect; useful for DOM measurement tasks.<hr />- View Transition API provides smooth, animated UI transitions, enabling engaging user experiences.<hr />- React internationalization is advanced with i18next; boosting localization.<hr />- React app speed is enhanced through INP optimization.<hr />- Visualized React guides deepen understanding of core concepts.<hr />- Next.js 15.1 fully supports React 19, ensuring seamless integration and better debugging.<hr />- Next.js can now run on Deno Deploy, showcasing serverless capabilities.<hr />- Multi zones in Next.js enable scalable micro-frontends for independent deployment by large teams.<hr />- Caching in Next.js is optimized with Valkey-based strategies.<hr />- SSR (Server-Side Rendering) is clarified as cost-effective and valuable.<hr />- Dato CMS prefers Astro over Next.js for certain projects.<hr />- Transformers.js enables client-side AI processing in browsers: sentiment analysis, object detection, no server needed.<hr />- HTML/CSS now facilitate interactive elements without JavaScript: popover attribute, CSS Anchoring, calc-size() for auto-height animations, enhanced `<details>` and `<select>`.<hr />- New HTML features streamline UI creation and customization.<hr />- Rising JavaScript trends include `shadcn/ui` for accessible, customizable components and `HTMX` for dynamic HTML interactions without heavy frameworks.<hr />- Offline-first app principles focus on data synchronization, caching, resilient interactions in unreliable networks.<hr />- Front-end trends highlight AI integration, server-driven UI, Jamstack evolution, headless CMS, component-driven design.<hr />- Tailwind CSS v4.0 introduces new features but raises concerns about CSS variable performance and naming clarity.<hr />- Node.js adds native TypeScript support via type stripping, simplifying workflows.<hr />- React performance tools like Million help pinpoint slow components for optimization.<hr />- Tools like Onlook offer real-time design in React, akin to Figma.<hr />- Commentary emphasizes avoiding performance pitfalls with improper React use, exploring alternative frameworks, advocating for open web, and leveraging type-driven design for code simplicity.<hr />","tags":"frontend market-report","authors":"hthai2201","date":{"days":20108},"category":"playground > topics > frontend > Report"},"495":{"file_path":"playground/topics/frontend/Report/frontend-report-march-2025.md","title":"Frontend Report March 2025","description":"March 2025 brings critical frontend updates! Learn about the Next.js security exploit you must patch nows. Explore TypeScript's upcoming 10x speed boost with Corsa, React Router's game-changing middleware, and why prefetching can surprisingly slow down your site. Plus: CSS functions are finally here, new in Chrome 133, Node.js is dropping Corepack, and TanStack Start finds an official deployment home!","spr_content":"- React library architecture: core logic + React binding (hooks/components); externally created core connected via Context API; uses Observer pattern; reactivity via useSyncExternalStore or custom hooks.<hr />- Redux often unnecessary: API data caching suffices; component state management with useState and hooks; avoids boilerplate and complex traceability.<hr />- React 19 cache(): caches server component fetches per render; reduces redundant requests; enables data preloading; complements built-in fetch caching.<hr />- Performance tips: Beyond React.memo, enhance front-end efficiency; URL-based state as alternative state manager; React as backend workflow engine.<hr />- Next.js vulnerabilities: CVE-2025-29927 in middleware permits security bypass; update to patched versions; block malicious headers.<hr />- Next.js 15.2: improves error UI, stack traces; introduces streaming metadata decoupling; Turbopack speed boosts; React View Transitions (experimental).<hr />- Traffic capacity: pre-rendered Next.js faces VPS limitations; scaling with dedicated servers necessary for high loads.<hr />- Framework evaluation: some teams prefer custom solutions over Next.js for better performance, simplicity, flexibility.<hr />- Tailwind CSS: rapid development trade-off; utility classes harm maintainability as projects grow.<hr />- CSS functions: upcoming feature; define logic with @function, pass typed args, return with result; enables complex, dynamic styles.<hr />- Prefetching caveats: can slow site if competing with critical resources; improve by deferring prefetch hints via JavaScript after initial load.<hr />- Trending React: Server Components/Functions adoption; React 19 enhancements; full-stack rise; new tools (Biome, React Compiler).<hr />- TypeScript improvement: Corsa compiler in 2025, 10x faster builds, lower memory; native port improves large codebase handling.<hr />- Node.js package managers: Corepack removal in future versions; optional; decentralized evolution.<hr />- TanStack Start: official Netlify deployment; seamless, zero-config full-stack React hosting.<hr />- Tools updates: TanStack Form 1 (schema-safe forms); React Router v7 middleware; TypeScript 5.8 (optimization, ESM support); Chrome 133 CSS attr() and container queries.<hr />- Additional insights: ongoing JavaScript fatigue; signals in React; local-first data models with challenges.","tags":"frontend market-report","authors":"hthai2201","date":{"days":20178},"category":"playground > topics > frontend > Report"},"496":{"file_path":"playground/topics/frontend/Report/frontend-report-first-half-of-november-2024.md","title":"Frontend Report First Half of November 2024","description":"A comprehensive update on key advancements in frontend development for the first half of November 2024, highlighting React 19's full-stack capabilities, XState for state management, Shopify's React Native migration, Next.js 15 enhancements, and the impact of container queries on responsive design.","spr_content":"Frontend Development Nov 2024: Key Concepts<hr /><hr />- React's evolution centers on React 19, full-stack enhancements, and micro-frontend upgrades.<hr />- TanStack Start: emerging full-stack React framework, client-first, competes with Next.js's server-first model.<hr />- XState: state machine library, simplifies complex UI state logic, improves predictability, seamlessly integrates with React.<hr />- Shopify's migration to React Native: reduced codebase by 1.8M lines, 44% faster load times, enhanced performance, higher user ratings.<hr />- React ecosystem tools: React Navigation 7, seamless React upgrades, micro-frontend integrations.<hr />- Next.js 15: boosts build faster, supports React Server Components, expands App Router, enhances image optimization, global caching.<hr />- Advanced search filtering: leveraging App Router with startTransition, useOptimistic.<hr />- Web Components vs Frameworks: frameworks outperform Web Components due to better state management, SSR, integration, practical adoption.<hr />- Container queries & Containment API: enable parent-based responsive design, widespread support, future design paradigm.<hr />- TanStack Start: full-stack, type-safe APIs, routing, SSR, streaming, scalable web apps.<hr />- Cost optimization: Recall.ai reduces AWS costs by $1M/year using Shared Memory, cuts CPU usage by 50%.<hr />- New tools: HTML to React Chrome extension, Storybook Test for integrated frontend testing.<hr />- Critical commentary: lighthouse scores are not sole indicators; headless components are shaping UI compositions; CSS survey shows evolving styling practices.<hr />- Focus on scalable, performant, and developer-friendly tools, embracing new CSS, API, and framework advancements.","tags":"frontend market-report","authors":"hthai2201","date":{"days":20042},"category":"playground > topics > frontend > Report"},"497":{"file_path":"playground/topics/frontend/applying-mock-service-worker-msw-for-seamless-web-development.md","title":"Applying Mock Service Worker (MSW) for Seamless Web Development","description":"Mock Service Worker (MSW) is an API mocking library that leverages the Service Worker API to intercept requests. It offers unique features that set it apart from traditional mocking libraries, making it a go-to choice for developers. With MSW, you can seamlessly mock both RESTful and GraphQL APIs, providing flexibility for various API architectures. Additionally, MSW supports both Node.js and browser environments, enabling consistent API mocking across different parts of your application.","spr_content":"- MSW is an API mocking library leveraging Service Worker API to intercept requests.<hr />- MSW uniquely supports mocking REST and GraphQL APIs, providing high flexibility.<hr />- Compatible with both Node.js and browser environments, enabling unified mocking.<hr />- Uses client-side Service Worker scripts, no need to manually write worker code.<hr />- Initialization via CLI: `npx msw init <PUBLIC_DIR> --save` copies worker file.<hr />- Configures with setupWorker and request handlers imported from \"./handlers\".<hr />- Worker starts in development mode to intercept fetch requests.<hr />- In React, conditionally start worker based on NODE_ENV for environment relevance.<hr />- API request components can make calls to endpoints like `https:/example.com/api/usage`.<hr />- Handlers simulate various responses: success with data, errors, redirects.<hr />- Developers can test component behavior with mocked API responses, error handling, without full backend.<hr />- For testing, MSW sets up a node-based server using setupServer and handlers.<hr />- Lifecycle controls: server.listen() before tests, server.resetHandlers() after each test, server.close() after all.<hr />- Tests use React Testing Library to verify integrated API response handling.<hr />- Runtime handlers (server.use) enable scenario-specific mocks within individual tests.<hr />- Reset handlers (server.resetHandlers()) clear overrides to maintain test isolation.<hr />- MSW improves reliability and control in API-dependent frontend and integration testing environments.","tags":"api-mocking frontend mock-service-worker web-development-tool","authors":"hthai2201","date":{"days":19527},"category":"playground > topics > frontend"},"498":{"file_path":"playground/topics/frontend/parallelism-in-javascript.md","title":"Parallelism in JavaScript","description":"Parallelism in JavaScript is a technique to improve the performance of web applications by executing multiple tasks simultaneously.","spr_content":"- Web applications primarily aim for the web, with JavaScript as the main supporting language.<hr />- JavaScript is inherently single-threaded, limiting performance with heavyweight tasks like media processing, gaming, or data mining.<hr />- Parallelism support is needed in JavaScript to overcome these limitations.<hr />- Web Worker introduces parallelism by creating threads that operate independently of the main UI thread.<hr />- Web Workers run in separate contexts; main thread's `document` and `window` objects are inaccessible.<hr />- Web Workers can use network and storage APIs but cannot directly manipulate DOM.<hr />- Two worker types: dedicated (single script) and shared (multiple scripts).<hr />- Communication via message passing: `postMessage()` and `onmessage`; data is serialized (copied), not shared.<hr />- Performance bottleneck occurs with large data transfers due to serialization.<hr />- Example: main.js creates Worker, sends message, and handles response; worker.js processes message and responds.<hr />- WebCL binds OpenCL to JavaScript, enabling GPU and multi-core CPU computation within browsers.<hr />- No native WebCL support in browsers; reliant on add-ons.<hr />- RiverTrail extends JavaScript with data-parallel constructs translating to hardware abstraction, based on OpenCL.<hr />- Most OpenCL-based frameworks are inactive; browser vendors lack plans to implement WebCL.<hr />- Future performance approaches favor WebAssembly and WebGPU over WebCL.<hr />- Currently, Web Worker remains the primary, production-ready approach for web parallelism.","tags":"concurrency frontend javascript parallelism","authors":"thanh","date":{"days":19086},"category":"playground > topics > frontend"},"499":{"file_path":"playground/topics/frontend/atomic-design-pattern.md","title":"Atomic Design Pattern","description":"Atomic design is a methodology for crafting design systems with five key fundamental building blocks, which, when combined, promote consistency, modularity, and scalability.","spr_content":"- Atomic design is a methodology for building design systems from five key foundational blocks: atoms, molecules, organisms, templates, and pages.  <hr />- It promotes consistency, modularity, and scalability in UI development.  <hr />- Using atomic design enables frontend developers to craft flexible, coherent designs from the outset.  <hr />- It supports moving from abstract components to concrete, final interface representations, enhancing understanding and maintainability.  <hr />- The approach aligns seamlessly with component-based frameworks like React and Vue, facilitating their architecture.  <hr />- Atoms are the simplest HTML elements (e.g., input, button), act as raw building blocks, and are often not useful alone but serve as references for more complex components.  <hr />- Molecules are combinations of atoms functioning as reusable UI units, such as a label-input pair or an icon with text.  <hr />- Organisms are more complex sections composed of multiple molecules, representing distinct interface segments like headers or footers.  <hr />- Templates are static groupings of organisms, serving as wireframes that outline layout without data, helping visualize website structure.  <hr />- Pages are specific instances of templates where placeholder content is replaced with real data, reflecting the final user experience.  <hr />- The folder structure in atomic design segregates components into these five layers, enhancing organization and scalability in development.","tags":"atomic-design frontend","authors":"Tran Hoang Nam","date":{"days":19158},"category":"playground > topics > frontend"},"500":{"file_path":"playground/topics/frontend/typesafe-client-server.md","title":"Typesafe Client Server","description":"A code generation layer that bridges the gap between frontend and backend more effectively.","spr_content":"- Traditional development links models and API clients; models represent data structures, clients mediate requests.  <hr />- Manual sync causes errors, runtime bugs, inconsistency.  <hr />- Typesafe architecture introduces code generation layer; relies on API definitions as single source of truth.  <hr />- JSON/YAML API specs enable automatic validation and code generation.  <hr />- Generated code keeps frontend and backend in sync, reflecting API changes instantly.  <hr />- Automating minimizes human error, accelerates development focus on features.  <hr />- Benefits: increased reliability (consistent models), early error detection, higher productivity.  <hr />- Security improves via proper data handling; API specs serve as documentation, enhancing collaboration.  <hr />- API changes trigger easier refactoring and scalability.  <hr />- Effective use: API-first design, automate code generation, integrate into CI/CD, run automated tests, utilize interactive docs, version control APIs.  <hr />- Tools: openapi-generator (for validation, client generation with Axios), Orval (multi-client support, mock data with msw and faker).  <hr />- Overall: structured approach ensures robust, synchronized client-server systems, streamlining development and collaboration.","tags":"code-generation fullstack typesafe","authors":"antran","date":{"days":19697},"category":"playground > topics > frontend"},"501":{"file_path":"playground/topics/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql.md","title":"A Fragment Colocation Pattern with React & Apollo GraphQL","description":"When working with complex GraphQL schemas, it's common to have shared fields across different types. A fragment colocation pattern allows us to define fragments alongside their corresponding components, resulting in a more cohesive and maintainable codebase.","spr_content":"GraphQL schema complexity encourages shared fields across types, enabling fragment colocation to integrate fragments directly with components, fostering cohesion and maintainability.  <hr />Colocating fragments allows for straightforward reuse, reduces redundancy, and ensures consistency across components.  <hr />Tooling layers—such as converting fragments into TypeScript interfaces and generating React hooks—amplify these benefits.  <hr />Fragments are reusable GraphQL logic snippets, sharing subsets of fields across queries/mutations, e.g., NameParts on Person.  <hr />Using spread syntax (`...`) includes fragments in operations, centralizing field management and enabling automatic updates if fragments change.  <hr />Example: animal schemas with shared fields (id, name, breed) and specific fields (age, weight) are modeled via fragments, e.g., AnimalFragment, CatFragment, DogFragment.  <hr />Apollo Client's gql supports defining and nesting fragments, linking shared logic to component data requirements.  <hr />With graphql-codegen, fragments are transformed into precise TypeScript types, linking schema to components with strong typing guarantees.  <hr />Generated types (AnimalFragment, CatFragment, DogFragment) match the backend schema, ensuring data integrity and easing development.  <hr />Components like CatCard and DogCard accept typed fragment props, which map directly to GraphQL models, supporting reliable, type-safe rendering.  <hr />Queries to fetch lists (`GetCatList`, `GetDogList`) use fragments, and codegen creates corresponding hooks (`useGetCatListQuery`) that handle fetching, caching, revalidation.  <hr />Component lists (`CatList`, `DogList`) leverage generated hooks, managing loading state and passing fragment-typed data to cards.  <hr />The pattern's key benefits include:  <hr />- Code reuse through shared fragments,  <hr />- Consistent field definitions,  <hr />- Enhanced readability—developers see immediate which fields are used,  <hr />- Prevention of overfetching—components declare needed fields precisely, and queries adapt accordingly,  <hr />- Automatic, upwardly-loaded type safety tied to fragment modifications.  <hr />However, challenges exist:  <hr />- Fragment duplication risk without disciplined organization,  <hr />- Complex management as fragments and components scale,  <hr />- Cognitive shift for engineers from REST paradigms, requiring new mental models, especially for top-down vs bottom-up data flow.  <hr />- Maintaining traceability of fragments as component trees grow can be cumbersome, particularly with less systematic organization.  <hr />Overall, pattern promotes a cohesive approach: colocate fragments with components, leverage tooling for types and hooks, and aim for DRY, consistent code.  <hr />Acknowledging potential downsides—complexity, learning curve—is essential; the pattern, while straightforward in principle, demands discipline to master, making it \"easy to adopt, hard to perfect.\"  <hr />This approach aligns with GraphQL’s philosophy, promising a balanced tradeoff between reusability, clarity, and complexity—worth exploring for optimized, maintainable front-end architectures.","tags":"frontend graphql reactjs","authors":"mashiro5951","date":{"days":19512},"category":"playground > topics > frontend"},"502":{"file_path":"playground/topics/frontend/continuous-translation.md","title":"Continuous Translation","description":"Continuous Translation (CT) is a modern approach to translation management that involves synchronizing software development and translation workflows. This means that developers, translators, and product owners work together in a continuous cycle to ensure that all translations are up-to-date and aligned with the latest software developments.","spr_content":"- Continuous Translation (CT) synchronizes software development and translation workflows in real-time.<hr />- It involves ongoing collaboration among developers, translators, and product owners.<hr />- CT eliminates traditional synchronization issues, reducing file and space dependency.<hr />- Promotes faster development cycles, higher translation quality, and improved user experience.<hr />- Traditional localization couples translation data with code repositories, creating bottlenecks.<hr />- Centralizing translation data can facilitate continuous translation and reduce friction.<hr />- Solution 1: Google Sheets-based approach uses a shared spreadsheet to manage translations.<hr />- Developers fetch translation data via scripts; generate locale files from JSON outputs.<hr />- Script automates data retrieval and integration into application localization files.<hr />- Solution 2: Use a third-party platform like Locize to decouple translations from releases.<hr />- Locize supports various integration methods: live download, live sync, or bundling.<hr />- Locize setup involves creating a project, obtaining IDs and keys, and syncing translations.<hr />- Approaches vary from minimal runtime impact (bundled translations) to live dynamic updates.<hr />- Solution 1 favors simplicity but lacks scalability for many languages.<hr />- Solution 2 offers scalability, better for complex and evolving multilingual projects.<hr />- Pros of CT include expedited development, improved translation accuracy, team alignment, and cost savings.<hr />- Cons involve high coordination demands, potential errors, need for specialized tools, and limited suitability for small or infrequent projects.<hr />- Multilingual support is essential for global applications; choosing method depends on scope, resources, and update frequency.<hr />- Both solutions enable ongoing translation with trade-offs in complexity, cost, and scalability.","tags":"engineering translation web","authors":"cor3.co","date":{"days":19458},"category":"playground > topics > frontend"},"503":{"file_path":"playground/topics/frontend/react/component-composition-patterns.md","title":"Component composition patterns in React","description":"Learn React composition patterns with coverage of HOCs, render props, compound components, and custom hook","spr_content":"Component composition in React is foundational for scalable, flexible, and reusable UIs, enabling building blocks of small, purpose-driven components assembled in various ways.  <hr />Key patterns include:  <hr /><hr />- **Higher-Order Components (HOCs):** Functions wrapping a component to add shared behavior (e.g., logging, authentication). They inject props or cross-cutting concerns, avoiding prop drilling; but can cause wrapper hell and are less favored with hooks.  <hr /><hr />- **Render Props:** Components that accept a function as a prop to control rendering, offering flexible, data-driven output, but potentially nesting complexity and less common with hooks.  <hr /><hr />- **Compound Components:** Related sub-components working together (e.g., `<Dropdown.Toggle />`, `<Dropdown.Menu />`) managed via context, suitable for coordinated, customizable structures like modals or tabs; require careful API design.  <hr /><hr />- **Controlled and Uncontrolled Components:** Controlled components' state is managed by parent (`value` & `onChange`), suited for validation; uncontrolled manage local state, simpler and more performant. Combining both enhances flexibility but involves trade-offs in performance and validation control.  <hr /><hr />- **Custom Hooks:** Encapsulate complex logic, such as data fetching or state management (`useFetch`), enhancing modularity and readability; they replace HOCs and render props for side effects but require attention to dependency management.  <hr /><hr />Selecting patterns depends on data complexity, reusability needs, and control level—each pattern addresses specific challenges in component design.","tags":"react","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"504":{"file_path":"playground/topics/frontend/react/design-system-integration.md","title":"Design system integration in react","description":"Learn how to integrate design systems in React applications with comprehensive coverage of design tokens, atomic components, and accessibility standards.","spr_content":"- Design system integration in React centers on reusable, consistent components aligned with design guidelines.<hr />- Core design tokens are foundational, representing colors, typography, spacing as a single source of truth.<hr />- These tokens facilitate centralized updates, ensuring uniform visual styles across components.<hr />- Atomic design decomposes UI into atoms, molecules, organisms, templates, and pages, promoting reusability.<hr />- Atoms: basic elements like buttons, inputs; molecules: combined atoms like form fields.<hr />- Building composable, flexible components allows adaptability using props and styling libraries (styled-components/emotion).<hr />- Establish component libraries with Storybook for isolated development, documentation, and interactive testing.<hr />- Accessibility prioritizes WCAG standards: contrast ratios, ARIA roles, keyboard navigation, focus management.<hr />- Tools like axe-core, ESLint plugins, and Storybook accessibility addons support compliance.<hr />- Context and theming enable adaptable designs; use React context to toggle themes (light/dark).<hr />- Theme providers pass style variables, ensuring consistent, switchable theming across the app.<hr />- Summary: design tokens stabilize styling; atomic components facilitate scalability; flexibility through props/props-driven styles; Storybook ensures documentation and quality; accessibility enhances inclusivity; context/theming support adaptability.<hr />- The integrated system creates a robust, maintainable, scalable, and inclusive UI ecosystem in React.","tags":"design-system react storybook","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"505":{"file_path":"playground/topics/frontend/react/code-splitting.md","title":"Code splitting in React","description":"Optimize JavaScript performance with code splitting techniques like route-based splitting, lazy loading, and dynamic imports","spr_content":"- Code splitting optimizes JavaScript by dividing bundles into smaller chunks, loading only necessary parts on demand.<hr />- This reduces initial load time, enhances performance, especially in large applications.<hr />- Entry point splitting separates main application entry points, useful in MPAs and multi-section SPAs.<hr />- Webpack configures multiple entry points, generating distinct bundles per section.<hr />- Route-based splitting dynamically loads route-specific components; React.lazy and Suspense facilitate this.<hr />- Initial load includes only first-route code; others load on navigation, improving perceived performance.<hr />- Component-level splitting defers loading large or non-essential components (modals, sidebars) using React.lazy and Suspense.<hr />- Lazy-loaded components load asynchronously when needed, reducing initial bundle size.<hr />- Large dependency splitting selectively loads heavy libraries via dynamic import() for utilities (date formatting, image processing).<hr />- `react-loadable` enables advanced loading states, error handling, delayed load, preloading, useful for large or error-prone components.<hr />- Preloading and prefetching preload code in background or anticipate navigation; Webpack's `webpackPrefetch` marker hints this.<hr />- Bundle splitting via Webpack’s SplitChunksPlugin extracts common dependencies (e.g., React, Lodash) into shared bundles, reducing redundancy.<hr />- Lazy loading images with `loading=\"lazy\"` defers asset loading until viewport proximity, decreasing bandwidth usage and load times.<hr />- Effective bundle management involves combining techniques: entry, route, component, dependency, and asset splitting.<hr />- Strategy enhances app performance, reduces load times, improves user experience across navigation and interaction.","tags":"performance react","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"506":{"file_path":"playground/topics/frontend/react/rendering-strategies.md","title":"Rendering strategies in React","description":"React rendering strategies with in-depth coverage of client-side rendering (CSR), server-side rendering (SSR), and static site generation (SSG).","spr_content":"- **Client-side rendering (CSR)**: Renders in browser post-download; minimal initial HTML; React builds UI dynamically.  <hr />  - Advantages: quick deployment, rich interactivity, simplified development.  <hr />  - Disadvantages: slow initial load, SEO challenges, large bundles impact performance.  <hr />  - Data fetches execute after page load, with hooks like `useEffect`.  <hr /><hr />- **Server-side rendering (SSR)**: Renders HTML on server per request; initial HTML fully content-rich; hydration on client.  <hr />  - Advantages: excellent SEO, faster first meaningful paint, accessible content.  <hr />  - Disadvantages: higher server load, more setup complexity, hydration delay.  <hr />  - Uses server frameworks like Next.js with `getServerSideProps`.  <hr /><hr />- **Static-site generation (SSG)**: Pre-renders at build time; static HTML served on request; often hydrates for interactivity.  <hr />  - Advantages: ultra-fast, SEO-friendly, low server load.  <hr />  - Disadvantages: content stale until rebuild, less suited for highly dynamic data, longer build times for large sites.  <hr />  - Employs functions like `getStaticProps` and `getStaticPaths` in Next.js.  <hr /><hr />- **Features comparison**:  <hr />  - Data fetching: client, server on request, build time.  <hr />  - Rendering: browser or server pre-rendered.  <hr />  - Use case: interactivity (CSR), SEO/dynamic info (SSR), static content (SSG).  <hr />  - Initial load: bundle size vs pre-rendered HTML.  <hr />  - Content freshness: real-time vs static.  <hr />  - Hosting: static CDN vs server resources.  <hr /><hr />- **Selection guide**:  <hr />  - CSR: dashboards, internal tools, minimal SEO needed.  <hr />  - SSR: SEO-critical, dynamic, frequently updated content (e.g., e-commerce, blogs).  <hr />  - SSG: static docs, marketing pages, infrequently changing posts.  <hr /><hr />- **Hybrid strategies**:  <hr />  - Combine techniques—Next.js enables mixing SSG, SSR, CSR.  <hr />  - Example: SSG with incremental regeneration (`revalidate`), CSR for client-specific interactivity.  <hr />  - Facilitates fast, SEO-optimal, dynamic apps with minimal compromise.  <hr /><hr />- **Meta-metaphor**:  <hr />  - Rendering strategies are a spectrum from static snapshots (`SSG`) to live, reactive sessions (`CSR`), with a dynamic, request-based middle ground (`SSR`).  <hr />  - Hybrid models are akin to having both a printed brochure and a live storefront, choosing each for best effect.  <hr /><hr />- **Overall principle**:  <hr />  `Application needs + user experience + performance + SEO` dictate optimal rendering approach, often leveraging hybrid methods for a balanced, efficient web solution.","tags":"react","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"507":{"file_path":"playground/topics/frontend/react/hook-architecture.md","title":"Hook architecture in react","description":"React hooks architecture with in-depth coverage of custom hooks, state management, and side effects handling.","spr_content":"- React Hooks architecture centers on using hooks to manage state, effects, and logic reuse; custom hooks encapsulate domain-specific logic for modularity.<hr />- Custom hooks enhance code readability, component simplicity, and portability of stateful logic.<hr />- Separation of concerns with custom hooks isolates logic, making components smaller and easier to test.<hr />- Custom hooks follow naming conventions (`useX`) and often mimic built-in hooks' patterns.<hr />- Example: `useFetch` encapsulates data fetching with internal state (data, loading, error), reusable across components.<hr />- Custom hook usage simplifies components; e.g., `UserProfile` uses `useFetch` for API data, manages loading/error states.<hr />- Benefits include reusability and concern isolation, keeping components focused on UI.<hr />- Encapsulating side effects via custom hooks prevents clutter; e.g., `useDocumentTitle` for managing document title.<hr />- Moving side effects to hooks improves readability and reusability across components/pages.<hr />- Dependency management in hooks (`useEffect`, `useMemo`, `useCallback`) ensures predictable updates; dependencies should be stable.<hr />- `useMemo` memoizes expensive computations, rerunning only upon dependency changes, boosting efficiency.<hr />- Combining multiple custom hooks allows complex features without deep nesting; e.g., `useAuth` + `useFetch`.<hr />- Modular hooks handle distinct concerns (auth, data, permissions), interact cleanly, and are independently testable.<hr />- Best practices include:<hr />  - Clear, descriptive naming (`useAuth`, `useToggle`).<hr />  - Return minimal, necessary data/functions for simplicity.<hr />  - Handle errors within hooks for cleaner components.<hr />  - Use `useReducer` for complex state management.<hr />  - Test hooks in isolation with tools like `renderHook`.<hr />- Complex systems (e.g., auth + data + permissions) are built by composing specialized hooks, maintaining modularity.<hr />- Example: `useAuth` manages login/logout; `useUserData` fetches user info; `usePermissions` checks roles.<hr />- Modular hooks promote reusability, testability, and cleaner component code.<hr />- Overall, custom hooks facilitate scalable, maintainable React architecture through organized, reusable, and testable logic.","tags":"hook react","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"508":{"file_path":"playground/topics/frontend/react/state-management-strategy.md","title":"State management strategy in React","description":"Discover state management strategies, best practices, and when to use each approach for scalable, efficient React applications","spr_content":"- React architecture scales with complexity; state management is central.  <hr />- Local component state (`useState`, `useReducer`) suits small, isolated, short-lived UI states.  <hr />- `useReducer` manages complex local forms with dependent fields effectively.  <hr />- Deep/nested component data raises challenges for local state, prompting global solutions.  <hr />- React Context API offers lightweight global state for small to medium needs but may cause re-rendering issues if misused in large apps.  <hr />- Context excels for themes, user, language; unsuitable for frequently updated, large datasets.  <hr />- Redux provides structured, predictable, scalable global state management; supports middleware, dev tools, complex logic.  <hr />- Zustand offers minimal boilerplate, flexible, reactive state management with hook-based API; encapsulates state locally.  <hr />- Server or async data needs tools like React Query or SWR for caching, re-fetching, synchronization.  <hr />- React Query simplifies server state handling with automatic cache management, support for complex features; SWR offers a lightweight, declarative approach.  <hr />- Hybrid architecture: combine context for global, rarely-changing state; React Query/SWR for server data; local state for component-specific, ephemeral data.  <hr />- Scalable design: use local state for isolated UI, context for global settings, Redux/Zustand for complex state, React Query/SWR for server sync.  <hr />- Opt for simple, fast local state, lightweight context, or declarative server data tools based on app scale and complexity.","tags":"react","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"509":{"file_path":"playground/topics/frontend/react/testing-strategies.md","title":"Testing strategies in React","description":"React testing with unit, integration, and end-to-end approaches","spr_content":"- Testing ensures code correctness, maintainability, and bug prevention over revisions.  <hr />- React testing comprises unit tests, integration tests, end-to-end (e2e) tests, and snapshot tests.  <hr />- **Unit tests** evaluate isolated components or functions, using Jest and React testing library.  <hr />- Jest is a fast, robust testing framework; React testing library emphasizes user-like interaction testing.  <hr />- Setup involves installing `jest` and `@testing-library/react`, configuring test script in `package.json`.  <hr />- Example: Button component tested for rendering and onClick behavior using screen queries and fireEvent.  <hr />- Benefits of unit testing include component isolation and user-centric focus, improving test relevance.  <hr />- **Integration testing** verifies component interactions such as form submissions, ensuring data flow and inter-component coordination.  <hr />- Example: Form component tested for input change and submit handler invocation with simulated user input.  <hr />- Benefits: interaction validation, form input correctness, and process flow assurance.  <hr />- **End-to-end testing** with Cypress simulates real user workflows across pages, testing full application flows and backend interactions.  <hr />- Setup: install Cypress, run `npx cypress open`.  <hr />- Example: login flow test automates navigation, form input, button click, and response verification, including URL change and message display.  <hr />- Benefits: accurate user experience simulation and cross-page reliability.  <hr />- **Snapshot testing** captures component output's HTML structure, comparing it to baseline snapshots for UI consistency.  <hr />- Example: Header component snapshot stored and compared using Jest’s `toMatchSnapshot()`.  <hr />- Benefits include UI regression detection and visual consistency verification; suitable for static or complex UI components.  <hr />- Best practices:  <hr />  - Prioritize the testing pyramid—unit first, then integration, then e2e—balancing coverage and speed.  <hr />  - Use user-like queries (`getByText`, `getByRole`, `getByLabelText`) to focus on behavior, not implementation.  <hr />  - Use snapshots judiciously to avoid brittleness; prefer for stable components.  <hr />  - Mock external dependencies (APIs, third-party libs) with tools like MSW to isolate tests.  <hr />  - Integrate tests into CI/CD pipelines for early bug detection.  <hr />  - Place test files adjacent to source files for easier maintenance.  <hr />- Overall, a layered testing approach enhances code quality, user experience, and persistence over time.","tags":"react testing","authors":"thanh","date":{"days":20025},"category":"playground > topics > frontend > react"},"510":{"file_path":"playground/topics/frontend/css-in-js.md","title":"CSS in JS","description":"CSS-in-JS is a styling technique where Javascript is used to style the component.","spr_content":"CSS-in-JS: style via JavaScript, with libraries like emotion, styled-components, JSS.  <hr />Addresses CSS limitations: lack of dynamism, scope, portabilitiy.  <hr />Benefits:  <hr />- Scoped styles prevent unintended global effects.  <hr />- Auto-generated unique class names avoid collision and naming issues.  <hr />- JavaScript allows dynamic, conditional, state-aware styling.  <hr />- Dead code elimination loads only used styles, reducing bundle size.  <hr />- Styles colocated with components improve developer ergonomics and confidence.  <hr />Disadvantages:  <hr />- Runtime CSS generation incurs overhead; build-time extraction like linaria reduces this but has trade-offs.  <hr />- Learning curve: requires new syntax, new thinking, slows initial productivity.  <hr />- Auto-generated class names hinder debugging; development mode improves readability, production mode remains obfuscated.  <hr />- Additional libraries increase bundle size, impacting load times.","tags":"css-in-js frontend","authors":"khacvy","date":{"days":19215},"category":"playground > topics > frontend"},"511":{"file_path":"playground/topics/frontend/why-dom-manipulation-is-slow.md","title":"Why DOM manipulation is slow?","description":"Actually, the DOM is not slow. Adding or removing a DOM node is not much more than setting a property on the JS object. However, _layout_ is slow. Imagine adding a DOM node changes the height of the document, it would invoke a bunch of [rendering processes](https://web.dev/rendering-performance/) to redraw the screen. And all the complex algorithms behind the those processes makes any changes in DOM potentially expensive.","spr_content":"DOM manipulation is fast; it's primarily property setting on JS objects.  <hr />Layout recalculation is slow; adding/removing nodes triggers layout, causing costly reflows.  <hr />Changing DOM affects document dimensions, prompting rendering updates.  <hr />Rendering involves complex algorithms: style recalculation, layout, paint, composite.  <hr />These processes are expensive, especially during frequent or extensive DOM changes.  <hr />The bottleneck is not DOM API calls but the subsequent layout and rendering steps.","tags":"dom frontend javascript","authors":"thanh","date":{"days":19213},"category":"playground > topics > frontend"},"512":{"file_path":"playground/topics/frontend/javascript-modules.md","title":"JavaScript modules","description":"Modules have always been a part of JavaScript development and providing mechanisms for splitting JavaScript programs up into separate modules that can be imported when needed was the absolutely necessity for JavaScript developers.","spr_content":"- Modules are fundamental building blocks in JavaScript that enable code reuse and organization.<hr />- A module is a separate file that exports its internal code, functions, or data.<hr />- Modules provide structure and boundaries, preventing code mingling and simplifying maintenance.<hr />- Modules facilitate sharing through package managers like NPM.<hr />- JavaScript's module history spans four stages: Vanilla, IIFEs, CommonJS, ESM.<hr />- Vanilla JavaScript (1990s–early 2000s): No native modules; relied on inline scripts and script-tags; scalability was a challenge.<hr />- Brendan Eich, creator of JavaScript, initially didn't anticipate its widespread use; early code lacked structured modularity.<hr />- YAHOO manifesto (2006): Global variables are hazardous due to conflicts and security issues; promoted encapsulation.<hr />- YAHOO's solution: Global namespace object (e.g., YAHOO.value.getValue) to avoid polluting global scope.<hr />- IIFEs (2000s): Used closures for private data; immediately invoked functions encapsulate code but do not facilitate module swapping.<hr />- Example: IIFE pattern with private variables and exposed functions; improved namespace pollution issues.<hr />- CommonJS (late 2000s–2010s): Designed for server-side JavaScript; standardized require() and module.exports.<hr />- Implemented synchronous loading; modules cached for efficiency; wrapped in function scope.<hr />- Example: dialogue.js exports functions; main.js requires modules.<hr />- ESM (2010s–present): Supported by browsers and Node.js; introduces static import/export syntax and top-level await.<hr />- Features: Asynchronous module loading and parsing; execution is synchronous and ordered.<hr />- ESM syntax: use `export` and `import`; supports default and named exports.<hr />- Browser implementation: `<script type=\"module\">`; fallback via bundling for older browsers.<hr />- Differences: ESM supports top-level await, async loading, and is universal; CommonJS is node-centric with synchronous loading.<hr />- Conclusion: ESM is the future for universal JavaScript modules, combining client and server benefits.<hr />- References: MDN, Node.js documentation, historical insights, compatibility guides.","tags":"frontend javascript modules","authors":"namtrhg","date":{"days":19170},"category":"playground > topics > frontend"},"513":{"file_path":"playground/topics/frontend/vitejs-native-modules.md","title":"ViteJS native modules","description":"ViteJS takes full advantage of the availability of native ES modules in the browser and the rise of JavaScript tools written in compile-to-native languages by introducing pre-bundles dependancies using esbuild.","spr_content":"- Prior to native ES modules in browsers, no built-in modular JavaScript authoring; developers relied on bundlers.  <hr />- Bundlers like Webpack, Rollup, Parcel automate module management, improving development.  <hr />- Project growth from hundreds to thousands of modules causes performance bottlenecks in JavaScript tooling.  <hr />- Vite leverages native ES modules and the rise of compile-to-native tools by using `pre-bundles` with `esbuild`.  <hr />- `esbuild` is written in Go, operating 10-100× faster than JavaScript bundlers, enhancing speed.  <hr />- Bundle-based dev servers (e.g., Webpack) combine source code into a single bundle, build on each change, causing delay.  <hr />- Native ESM dev servers (Vite) load modules on-demand via HTTP, avoiding full rebuilds, increasing speed.  <hr />- Vite’s architecture reduces build time by asynchronously loading modules, utilizing browser's module system.  <hr />- HMR (Hot Module Replacement) in Vite efficiently updates only affected modules, independent of app size.  <hr />- Full bundling for production still preferred to optimize load time, caching, tree-shaking, and lazy-loading.  <hr />- Unbundled ESM in production causes extra network requests due to nested imports; bundling improves performance.  <hr />- `esbuild` excels in speed but lacks full features like code-splitting and CSS handling; Rollup is more mature for app bundling.","tags":"esm frontend native-modules vitejs","authors":"namtrhg","date":{"days":19177},"category":"playground > topics > frontend"},"514":{"file_path":"playground/topics/frontend/mixpanel.md","title":"Mixpanel","description":"Mixpanel is a powerful analytics platform that assists companies in monitoring and analyzing user behavior on their websites and mobile applications.","spr_content":"Mixpanel is a data-driven analytics platform enabling real-time insights into user behavior on websites and mobile apps. It supports custom event tracking, funnel analysis, retention analysis, and user segmentation to improve product experience. Key features include real-time analytics, customizable event and user segmentation, mobile-specific insights, and broad integrations with CRM and marketing tools. Integration with React involves creating an account, installing the library (`mixpanel-browser`), initializing with a project token, identifying users, tracking events, and managing user profiles with `people.set`. Visual dashboards display user interactions and event logs, facilitating granular behavioral analysis and tailored engagement strategies.","tags":"analytics-platform analytics-tools frontend typescript","authors":"namtrhg","date":{"days":19401},"category":"playground > topics > frontend"},"515":{"file_path":"playground/topics/frontend/ThreeJS/cameras-in-threejs.md","title":"Cameras in ThreeJS","description":"**ThreeJS** is a JavaScript 3D library that allows developers to develop and describe data in 3 dimensions, and then convert them into 2 dimensions and display them on [HTML Canvas](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement). [**Camera**](https://threejs.org/docs/index.html?q=camera#api/en/cameras/Camera) is one of the core elements of a ThreeJS project, beside [Scene](https://threejs.org/docs/index.html?q=scene#api/en/scenes/Scene), [Renderer](https://threejs.org/docs/index.html?q=renderer#api/en/renderers/WebGLRenderer) and 3D objects (can be formed with [Geometries](https://threejs.org/docs/index.html?q=geometry#api/en/geometries/BoxGeometry) and [Materials](https://threejs.org/docs/index.html?q=material#api/en/materials/MeshBasicMaterial)).","spr_content":"- ThreeJS is a JavaScript library for 3D modeling with data projection onto 2D HTML Canvas.<hr />- Core elements of ThreeJS include Scene, Camera, Renderer, and 3D objects (Geometries, Materials).<hr />- Camera cannot be instantiated directly; use PerspectiveCamera or OrthographicCamera instead.<hr />- PerspectiveCamera simulates human eye perspective, conveying depth and size differences.<hr />- OrthographicCamera projects all objects at true size, ignoring perspective distortion.<hr />- Perspective camera attributes include fov (vertical field of view), near, and far clipping planes.<hr />- Orthographic camera attributes include left, right, top, bottom (view boundaries), near, and far.<hr />- Both cameras are placed in 3D space within the Oxyz coordinate system.<hr />- Perspective camera's narrowness is controlled by fov; larger fov = wider view.<hr />- Objects outside near-far bounds are not rendered.<hr />- Orthographic camera's view boundaries (left, right, top, bottom) define the projection box.<hr />- Additional camera types include ArrayCamera, CubeCamera, StereoCamera.<hr />- Visualizations and helper examples demonstrate camera effects and positioning.<hr />- References provide detailed technical specifications and conceptual clarifications.","tags":"frontend threejs","authors":"namnd","date":{"days":19250},"category":"playground > topics > frontend > ThreeJS"},"516":{"file_path":"playground/topics/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss.md","title":"Remove Unused CSS Styles From Bootstrap Using Purgecss","description":"This article demonstrates how to use PurgeCSS to remove unused CSS styles from Bootstrap.","spr_content":"- Asset size reduction accelerates web performance.<hr />- Bootstrap CSS files can be large; many styles are unused.<hr />- HTML example with minimal Bootstrap grid usage illustrates waste.<hr />- PurgeCSS analyzes HTML, JavaScript, or other content files to identify used CSS selectors.<hr />- Unused CSS content can be stripped out, shrinking files.<hr />- PurgeCSS installed via npm (`npm i --save-dev purgecss`).<hr />- CLI command: `purgecss --css <css-file> --content <content-file> --out <output-dir>`.<hr />- Compatibility with project structures requires adjusting paths and scripts.<hr />- Example HTML links to CSS, replaced with purged output in `dist/`.<hr />- NPM script automates purge process (`\"build\": \"purgecss --css bootstrap-grid.min.css --content index.html --out dist/\"`).<hr />- Running `npm run build` generates optimized, minimal CSS.<hr />- Webpack integration possible using `purgecss-webpack-plugin`.<hr />- Webpack config involves importing PurgeCSS plugin, adding it to plugins array.<hr />- Import CSS into JavaScript entry point for bundling.<hr />- Build output contains significantly smaller CSS, with unused styles removed.<hr />- PurgeCSS supports multiple build tools—webpack, gulp, grunt, etc.<hr />- Broad applicability on CSS frameworks like TailwindCSS, Foundation.<hr />- Example reductions: from 47KB to 601 bytes; effective asset optimization.<hr />- Documentation and API reference at purgecss.com facilitate implementation.<hr />- Summarized: PurgeCSS is an essential tool for removing dead CSS, optimizing web assets, improving load times.","tags":"css frontend","authors":"nghiaphm","date":{"days":17928},"category":"playground > topics > frontend"},"517":{"file_path":"playground/topics/frontend/hsl-color.md","title":"HSL Color","description":"HSL is the answer to resolving all of the painful points of Hexadecimal color codes.","spr_content":"- Hexadecimal color codes are hard to write, tweak, and remember, often requiring third-party tools.  <hr />- HSL simplifies color specification by using hue, saturation, and lightness, based on the RGB color wheel.  <hr />- Hue is an angle from 0° to 360° on the color wheel, with specific points: red (~0°, 360°), green (120°), blue (240°).  <hr />- Saturation ranges from 0% (gray scale) to 100% (full color).  <hr />- Lightness ranges from 0% (black) to 100% (white), with 50% as neutral.  <hr />- HSL enables easy manipulation of colors: adjusting lightness creates shades/lights easily.  <hr />- Using HSL in CSS allows dynamic color adjustments, e.g., darkening a button on hover by reducing lightness.  <hr />- Color palettes can be generated by varying lightness while keeping hue and saturation constant.  <hr />- HSLa extends HSL with an alpha channel (0 to 1) for transparency control.  <hr />- HSLa = rgba equivalent, with 0 transparent, 1 opaque, intermediate for partial transparency.  <hr />- HSL/HSLa make programmatic color control more intuitive and flexible than hexadecimal.","tags":"frontend hsl","authors":"khacvy","date":{"days":19237},"category":"playground > topics > frontend"},"518":{"file_path":"playground/topics/frontend/websockets.md","title":"WebSockets","description":"WebSockets are a simple solution that is invented to solve the problems of HTTP polling for updating the data from the server, which has caused in high overhead, latency, and not-truthly realtime. WebSocket helps to maintain one single TCP connection for traffic in both directions for bidirectional soft-realtime communication.","spr_content":"- WebSockets enable bidirectional, real-time communication over a single TCP connection.  <hr />- Replaces HTTP polling, reducing overhead, latency, and false real-time data flow.  <hr />- Designed for ease over existing HTTP infrastructure, operable over port 80, 443, and proxies.  <hr />- Initiates with an HTTP handshake: client sends GET with `Upgrade: websocket`, server responds with `101 Switching Protocols` including `Sec-WebSocket-Accept`.  <hr />- `Sec-WebSocket-Key` prevents caching, ensures fresh connection, involved in server acceptance via SHA-1 hash with UUID.  <hr />- After handshake, data transfer involves frames: small headers + payload, supporting binary and text data.  <hr />- Frames are of two types: control (close, ping, pong) and data (text, binary, continuation).  <hr />- Authentication relies on external mechanisms like TLS, cookies, or HTTP headers; not protocol-intrinsic.  <hr />- WebSocket URI distinguishes `ws` (non-secure, port 80) from `wss` (secure, port 443), using standard schemes.  <hr />- Web browsers provide a JavaScript API: creating WebSocket object, event listeners (`open`, `message`, `error`, `close`), and methods (`send`, `close`).  <hr />- Messages can be sent as strings or binary (`ArrayBuffer`, `Blob`), with optional `binaryType` setting for receive.  <hr />- Buffering (`bufferedAmount`) indicates queued but unsent data, useful for handling slow networks.  <hr />- Connection states: `0` (connecting), `1` (open), `2` (closing), `3` (closed).  <hr />- Closing connection involves calling `close()` with optional code and reason, with standard close codes like `1000` (normal), `1001` (going away).","tags":"frontend protocols websocket","authors":"namanh14mn","date":{"days":19709},"category":"playground > topics > frontend"},"519":{"file_path":"playground/topics/elixir/erlang-fsm.md","title":"Erlang Finite State Machine","description":"The Power of Finite State Machines","spr_content":"Finite State Machines (FSMs): core models for system behavior, states, transitions.  <hr />Erlang: designed for concurrency, fault tolerance, distribution.  <hr />FSM in Erlang: benefits from lightweight processes, message passing, error recovery, distributed support.  <hr />Catch Chicken Machine: example FSM with states (Idle, Searching, Catching, Resting), transitions triggered by external/internal events.  <hr />States defined explicitly; transitions handled via pattern matching.  <hr />Concurrency: achieved by Erlang's message-driven processes.  <hr />Fault tolerance: built-in error handling enables FSM recovery.  <hr />Implementation practices emphasize clear state/event definitions, pattern-based transitions, messaging loops, fault handling.  <hr />Benefits: scalable, reliable, maintainable FSMs in Erlang.  <hr />Summary: Erlang’s strengths align with FSM requirements—robustness, clarity, scalability—evidenced effectively by the Catch Chicken Machine case.","tags":"elixir erlang fsm","authors":"hieuphq","date":{"days":19916},"category":"playground > topics > elixir"},"520":{"file_path":"playground/topics/security/applied-security-basis.md","title":"Applied Security Basis","description":"Learn the basics of software security with an easy guide to Blockchain, SSH, and SSL protocols, explaining how they protect data through encryption, authentication, and decentralization.","spr_content":"Security in software and all fields is often underappreciated; embedded and supported in frameworks, leading developers to neglect understanding security mechanisms. Emphasis on high-level layers results in ignorance of underlying security failures; security mechanisms rely on informed use, not black-box reliance. Awareness is critical, especially of foundational concepts such as Blockchain, SSH, and SSL.<hr /><hr />Blockchain represents a decentralized, immutable data structure applied across industries (finance, agriculture, logistics). It enhances security by preventing data exploitation, duplication, and tampering through distributed consensus and time-stamped linked blocks.<hr /><hr />SSH (Secure Shell) offers a secure, encrypted communication channel for remote authentication, command execution, and permissions. It encrypts data automatically, providing transparent, end-to-end security. Its primary purpose is securing networked interactions unobtrusively.<hr /><hr />SSL (Secure Sockets Layer) is a security protocol used predominantly in web contexts to secure data transfer (via HTTPS). It combines authentication (via asymmetric cryptography), encryption (symmetric cryptography), and message integrity (message authentication codes). SSL and HTTPS are related but not identical; SSL's mechanisms underpin HTTPS's secure communication.<hr /><hr />Blockchain security hinges on three main features: <hr />- Decentralization: no central authority; distributed ledger copies across nodes.<hr />- Consensus: nodes agree on the network state to enforce rules.<hr />- Immutability: data is unchangeable once recorded, preventing tampering.<hr /><hr />Poking into CTF challenges and understanding core security protocols empower developers to avoid reliance on black-box security tools, highlighting the importance of basic knowledge in blockchain, SSH, and SSL as pillars of modern cybersecurity.","tags":"security","authors":"","date":{"days":18317},"category":"playground > topics > security"},"521":{"file_path":"playground/topics/security/the-key-of-security-mechanisms-in-tackling-cyber-threats.md","title":"The Key Of Security Mechanisms In Tackling Cyber Threats","description":"Learn essential cybersecurity tips from expert Hieu PC on building secure products, protecting data, and staying updated on security standards to prevent hacking and safeguard your code effectively.","spr_content":"- Thanh Pham hosted an event with cybersecurity expert Hieu PC, emphasizing learning and skill improvement.  <hr />- Hieu PC transitioned from ex-hacker to Security Expert at Vietnam NCSC, leading ICT security infrastructure to defend Vietnam.  <hr />- He actively prevented cyber terrorism attacks and founded chongluadao.vn, a major hacking and ethical hacking community in Vietnam.  <hr />- There is a misconception that product security is a one-time effort; in reality, security is continuous and evolving.  <hr />- New threats, vulnerabilities, and features require ongoing product security updates to avoid serious consequences.  <hr />- Cybersecurity comprises four elements: credibility, intellectual property rights, computer abuse, and competence.  <hr />- Protecting customer data enhances reputation; data leaks lead to high rejection rates, risking customer loyalty.  <hr />- Customers increasingly value data security; strong cybersecurity infrastructure builds trust and retention.  <hr />- Security must be integrated from the start, not added afterward; it’s more cost-effective and stronger.  <hr />- Regular security audits are vital; even protected systems have exploitable weak points.  <hr />- Building a robust infrastructure creates a difficult environment for attackers.  <hr />- Enable 2-step verification on important accounts to bolster security beyond passwords.  <hr />- Programmers should stay current with security standards, conduct regular reviews, and incorporate security into every project phase.  <hr />- Providing security guidance, applying best practices, and continuous learning are key to maintaining project security.  <hr />- The Teach Event #5 with Hieu PC was successful; attendees gained practical security insights applicable to work and life.  <hr />- Future events are anticipated to be even more engaging.  <hr />- Contact Hieu PC and Chongluadao through their website or email for collaboration.  <hr />- Follow community discussions on Discord and access session recordings on YouTube.  <hr />- Dwarves Foundation collaborates with communities and experts to share real-world stories, professional insights, and live-case practices to accelerate software careers.","tags":"dwarves engineering security","authors":"","date":{"days":19352},"category":"playground > topics > security"},"522":{"file_path":"playground/topics/golang/extension-interface-pattern.md","title":"Go extension interface pattern","description":"Note about using Go extension interface pattern","spr_content":"- Extension interface pattern embeds one interface within another, enabling non-intrusive feature additions.<hr />- Facilitates extending third-party packages by adding methods or behaviors without altering original code.<hr />- Useful for augmenting minimal interfaces with extra capabilities, preserving underlying implementation integrity.<hr />- Enhances testing by mocking or adapting types with additional behaviors like logging or metrics, isolated from core logic.<hr />- Promotes flexibility across standard libraries (`io`, `http`, `sql`) and custom codebases by layering functionalities seamlessly.<hr />- Extending `io.Reader`/`io.Writer` allows adding features like compression, encryption, logging, via wrappers.<hr />- Example: wrap `io.Writer` with a logging decorator that intercepts `Write` calls, logs data, then delegates.<hr />- Extending `http.Handler` via middleware to add request logging, user authentication, or other cross-cutting concerns.<hr />- Example: wrap original handler, intercept requests, perform logging, then defer to the embedded handler.<hr />- Extending `sql.DB` to embed query logging, retries, or metrics without modifying core database code.<hr />- Wrap `sql.DB` to intercept method calls, log queries, handle retries transparently.<hr />- Extending `http.Client` with caching or retry logic by wrapping and storing responses for subsequent requests.<hr />- Example: cache responses keyed by URL, return cached data if available to avoid network calls.<hr />- Extending `http.Request` to add context-based timeouts by wrapping requests, injecting timeout logic.<hr />- Wrapping `fmt.Stringer` to modify string outputs, e.g., prefixing or formatting representations differently.<hr />- Core idea: extension interfaces enable optional, composable functionality, invoked only if the underlying type implements the extended method.<hr />- They support optional efficiency improvements (like `io.StringWriter`) and runtime type assertions (`f.(ReadDirFile)`).<hr />- By relying on interface embedding, extension patterns add behaviors driven by interface assertions, preserving API compatibility.<hr />- They illustrate a flexible, declarative way to enhance or adapt behaviors in a type-safe manner without altering original types.","tags":"golang interface","authors":"tieubao","date":{"days":20021},"category":"playground > topics > golang"},"523":{"file_path":"playground/topics/golang/go-package.md","title":"Package first design","description":"In Go, packages serve as the basic building blocks for creating modular, reusable, and maintainable software.","spr_content":"- Go emphasizes composition over inheritance, shifting the repository of building units from class hierarchies to packages.<hr />- Packages serve as fundamental reusable, encapsulated, and purpose-driven modules for software construction.<hr />- Encapsulation: Exported symbols start with uppercase; unexported are private, enforcing interface boundaries.<hr />- Separation of concerns: Each package should encapsulate a single, coherent responsibility.<hr />- Directory structures align with packages; each directory contains one package, facilitating modular importation.<hr />- Unit testing should be focused within each package, naming test files with `_test.go`.<hr />- Structured packages promote reusability across projects; unique import paths prevent conflicts.<hr />- From the start, identify core domains and utility needs, organizing into separate, purpose-specific packages.<hr />- Design packages to be self-contained; avoid concern mixing to maximize reusability.<hr />- Build generalized, flexible functions: avoid hardcoded parameters; favor utility functions applicable across contexts.<hr />- Employ interfaces to decouple modules, allowing multiple implementations and enhancing adaptability.<hr />- Utility packages should be narrowly focused, broad in scope, and free of domain-specific dependencies.<hr />- Documentation should clarify purpose, API, and usage examples, encouraging reuse.<hr />- Write independent tests for each package to validate functionality in isolation.<hr />- Continuous refactoring maintains focused, reusable packages, avoiding bloated structures.<hr />- Modular organization enhances code clarity, maintainability, collaboration, testing, and debugging.","tags":"golang package","authors":"tieubao","date":{"days":20021},"category":"playground > topics > golang"},"524":{"file_path":"playground/topics/golang/unit-testing-best-practices-in-golang.md","title":"Unit Testing Best Practices In Golang","description":"An in-depth exploration of arrays and slices in Go, covering their differences, internal implementations, and key operations like append. Learn about fixed-length arrays, flexible slices, and how Go manages memory allocation for growing slices.","spr_content":"- Testing in backend engineering is essential for bug detection, maintainability, security, and quality improvement.<hr />- Unit tests serve as safety nets, enabling early bug detection, fostering confidence, and raising code quality.<hr />- Difficulties in testing may indicate code smells like over-complex functions.<hr />- Golang’s testing package supports unit testing, benchmarks, examples, with command-line execution.<hr />- Test file naming convention: `<name>_test.go`; test functions: `func TestXxx(t *testing.T)`; run with `go test`.<hr />- Effective tests should be readable, with clear naming: method + scenario + expected outcome.<hr />- Use table-driven testing to manage multiple cases cleanly and avoid redundancy.<hr />- Write tests that are isolated by leveraging interfaces, mocks, avoiding file I/O, and external API calls.<hr />- Mocks simulate dependencies, ensuring fast, reliable, independent tests.<hr />- Abstract file I/O and API interactions via interfaces; mock during testing.<hr />- Coverage should target 61-80% but focus on meaningful, bug-preventive tests.<hr />- Too low (0-20%) indicates poor test coverage; too high (81-100%) suggests thoroughness but may be impractical.<hr />- Use mocking libraries like gomock or mockery to reduce manual mock creation.<hr />- Use assertion libraries (e.g., testify) to improve test readability and expressiveness.<hr />- Cover edge, extreme, boundary, and corner cases to catch potential bugs under unexpected inputs.<hr />- Incorporate testing early and continuously into development workflows, not as a one-time task.<hr />- Effective testing leads to earlier bug fixing, better code understanding, and more reliable software.<hr />- Ongoing testing best practices: clear test naming, maintainability, mocks, coverage awareness, and automation.<hr />- Additional resources: Golang testing overview, best practices, mocking tools, assertion libraries, and coverage strategy guides.","tags":"backend engineering golang practice","authors":"taynguyen294","date":{"days":19458},"category":"playground > topics > golang"},"525":{"file_path":"playground/topics/golang/bunk-license-check.md","title":"Bunk License Check","description":"Glice is a Golang license and dependency checker that lists all dependencies, their usage count, licenses, and saves license files for easy compliance tracking.","spr_content":"Glice is a Golang license and dependency detector. It enumerates all dependencies, including standard library and third-party packages. It tracks usage counts per dependency. It identifies and displays license types for each dependency. It saves all license files in a dedicated /licenses directory. To build, clone via `$ go get github.com/ribice/glice`, then install with `$ go install github.com/ribice/glice`. To execute, run `$ glice`.","tags":"golang license","authors":"","date":{"days":18297},"category":"playground > topics > golang"},"526":{"file_path":"playground/topics/golang/connecting-vim-with-golang.md","title":"Connecting Vim With Golang","description":"A comprehensive guide on using Vim as an IDE for Go development. Learn about Vim basics, installation, configuration, essential plugins like vim-go, and customization techniques to enhance your Go coding workflow in Vim.","spr_content":"- Vim is a powerful, highly configurable, text editor designed for efficient text manipulation, originating as a successor to Vi (Vim = Vi Improved), created by Bram Moolenaar in 1991.<hr />- Called a \"programmer’s editor\" due to its prevalence in coding environments.<hr />- Supports usage as a full IDE through plugins, especially for languages like Go.<hr />- Cross-platform compatibility enables use on various operating systems.<hr />- Installation options include downloading from the official site or via package managers like Homebrew (`brew install vim`) with optional Lua support (`brew install vim --with-lua`) for plugin functionality.<hr />- Configuration is managed through a `.vimrc` file, where plugins, settings, and mappings are stored.<hr />- Plugin management is facilitated through managers like Vundle or Pathogen; Vundle involves cloning its repo into `~/.vim/bundle/` and editing `.vimrc` to add plugin directives.<hr />- Essential Vim commands include `:PluginInstall` for plugin setup and `:PluginUpdate` for upgrades, along with plugin list views and maintenance commands.<hr />- Basic usage involves understanding three modes:<hr />  - Normal mode: used for navigation and commands (`:w`, `:q`, `:echo`).<hr />  - Insert mode: for text input; entered via `i`, `a`, `A`, `o`, `O`.<hr />  - Visual mode: for selecting blocks of text, activated with `v`.<hr />- Vim commands and modes are accessible via dedicated documentation links.<hr />- To turn Vim into a Go IDE:<hr />  - Install `vim-go` plugin (`Plugin 'fatih/vim-go'`) and run `:GoInstallBinaries`.<hr />  - Additional plugins enhance workflow: NERDTree (folder navigation), vim-fugitive (Git integration), Auto-Pairs, Syntastic (syntax checking), NeoComplete (auto-completion).<hr />- NERDTree organizes project files visually, aiding in navigation.<hr />- Auto-Complete and Auto-Pairs accelerate coding by providing code suggestions and quick pair insertions.<hr />- Vim mappings (key remapping) customize workflows:<hr />  - Defined via commands like `nnoremap`, `inoremap`, `vmap`, creating shortcuts for tasks like jump-to-definition (`df` mapped to `:GoDef<CR>`).<hr />  - Mappings are placed in the `.vimrc` for persistent customization.<hr />  - Mappings streamline repetitive commands, boosting coding speed.<hr />- Practicing Vim's keyboard-centric design enhances mastery over its modal system.<hr />- Using resources like `vim-adventures.com` makes learning Vim interactive and engaging.<hr />- Custom mappings for debugging (`pp` to `pp.Println(\"\")`) exemplify workflow optimization.<hr />- The core advantage of Vim is deep customization; exploring plugins and mappings enhances coding efficiency.<hr />- Mastery involves familiarization with key commands (`hjkl`, basic operations), plugin discovery (vimawesome.com), and creating personalized shortcuts.<hr />- The future of effective Vim use depends on continuous exploration and tailoring to individual workflows.<hr />- The overarching goal: leverage Vim’s configurability for a seamless, efficient Go development environment.","tags":"golang vim","authors":"tieubao","date":{"days":16724},"category":"playground > topics > golang"},"527":{"file_path":"playground/topics/golang/golang-for-high-performance-video-streaming.md","title":"Leveraging Golang and WebRTC for High-Performance Video Streaming","description":"Explores using Golang and the Pion WebRTC library to build high-performance, scalable, low-latency video streaming infrastructure. Covers WebRTC basics (ICE, STUN, TURN), Go's concurrency benefits, Pion's native Go implementation, and a real-world multi-stream security monitoring use case.","spr_content":"- WebRTC enables fast, reliable, direct browser-to-browser media streaming without extra installs.  <hr />- It uses peer-to-peer connections to minimize latency compared to server relays.  <hr />- NAT and firewalls complicate true peer-to-peer; ICE, STUN, and TURN ensure connectivity fallback.  <hr />- ICE uses STUN for NAT traversal; fallback to TURN relay if direct connection fails.  <hr />- Signaling requires a capable backend for SDP and ICE candidate exchange; not handled by WebRTC itself.  <hr />- Golang is ideal for signaling servers and network management due to its concurrency, performance, and simplicity.  <hr />- Goroutines offer lightweight concurrency; channels facilitate safe communication, supporting tens of thousands of connections.  <hr />- Go compiles to efficient machine code, offering high performance with optimized garbage collection for low latency.  <hr />- Standard libraries simplify networking tasks; deployment as static binaries enhances productivity.  <hr />- Pion provides a native WebRTC stack in Go, avoiding dependencies on C libraries, enabling easier debugging and portability.  <hr />- Pion’s API supports full control over ICE, media tracks, and signaling, suitable for complex, multi-peer scenarios.  <hr />- Example setup involves configuring ICE servers (STUN/TURN), creating peer connections, and handling ICE candidates/events.  <hr />- Multi-stream use case: many cameras to browsers requires scalable signaling, media forwarding, state management, resource optimization.  <hr />- Signaling involves exchanging SDP offers/answers and ICE candidates via WebSocket.  <hr />- Architecture: cameras ↔ Go backend (Pion) ↔ signaling server ↔ browsers; media flows peer-to-peer or via relay if needed.  <hr />- Golang, though less traditional in native video processing, excels in WebRTC connection management, signaling, and system integration.  <hr />- Pion in Go provides a capable, straightforward WebRTC implementation, making Go suitable for scalable real-time video systems.  <hr />- Combining Go’s backend strengths with WebRTC yields high throughput, low latency, cross-platform, reliable streaming solutions.  <hr />- Go’s concurrency and networking performance facilitate building maintainable, scalable, and robust video delivery systems.  <hr />- By leveraging Golang and Pion, complex multi-stream security and surveillance solutions are achievable with efficiency and ease.","tags":"golang video-streaming webrtc","authors":"monotykamary","date":{"days":19683},"category":"playground > topics > golang"},"528":{"file_path":"playground/topics/golang/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq.md","title":"Message Queues And Streaming Platforms Eg Kafka Nats Rabbitmq","description":"An in-depth exploration of message brokers, their use cases, and implementation examples using RabbitMQ in Go. Covers the basics of message queues, their advantages and disadvantages, and common patterns like work queues and publish/subscribe models.","spr_content":"- Modern digital systems need seamless communication, driven by cloud and IoT expansion.<hr />- Message brokers are middleware stations facilitating reliable, efficient system communication.<hr />- They serve as intermediaries, translating, validating, routing messages across diverse systems and languages.<hr />- Without brokers: system communication becomes complex, error-prone, less reliable.<hr />- Brokers provide a shared language, ordered delivery, high-volume handling—decouple sender and receiver.<hr />- Types:<hr />  - Publish/Subscribe (Topics): broadcast messages to multiple subscribers via exchanges.<hr />  - Point-to-Point (Queues): direct messages from producer to consumer, often via queues.<hr />- Use cases:<hr />  - E-commerce: order processing, fault tolerance, message once delivery.<hr />  - Finance: secure, reliable payment communication, duplicate prevention.<hr />  - Security-sensitive data: encrypted, compliant message handling.<hr />- Example: TopDev’s CV creation:<hr />  - Handles high requests via message queuing.<hr />  - Producers send requests (e.g., PDF creation) into queues.<hr />  - Consumers process queued tasks asynchronously, reducing load.<hr />- Producer: sends messages; consumer: receives and processes.<hr />- Queues are durable, exclusive, delete-on-unused, configurable; act as task buffers.<hr />- Exchanges route messages:<hr />  - Direct: route by routing key.<hr />  - Fanout: broadcast to all bound queues.<hr />  - Topic: wildcard patterns match routing keys.<hr />  - Headers: route based on message headers.<hr />- Patterns:<hr />  - Work Queues: distribute tasks among workers, promote scalability.<hr />  - Publish/Subscribe: send identical messages to multiple consumers.<hr />- RabbitMQ analogy:<hr />  - Acts as post office: storing, forwarding messages.<hr />  - Uses exchanges (buffer zones) to route messages based on type.<hr />- Advantages:<hr />  - Loose coupling, message buffering for asynchronous communication.<hr />  - Fault tolerance, load distribution.<hr />- Disadvantages:<hr />  - Possible bottlenecks, single points of failure, operational complexity.<hr />- Implementation:<hr />  - Declare queues (name, durability, exclusivity, auto-delete, args).<hr />  - Declare exchanges (name, type, durability).<hr />  - Bind queues to exchanges using routing rules.<hr />  - Producers publish to exchanges; messages routed to queues.<hr />  - Consumers subscribe to queues; process messages.<hr />- Code snippets exemplify:<hr />  - Connecting to RabbitMQ.<hr />  - Declaring queues and exchanges.<hr />  - Publishing messages with context and persistence.<hr />  - Consuming messages asynchronously with acknowledgment.<hr />- Overall, message brokers like RabbitMQ underpin scalable, reliable, decoupled distributed systems.","tags":"backend engineering golang","authors":"datpv","date":{"days":19481},"category":"playground > topics > golang"},"529":{"file_path":"playground/topics/golang/go-for-enterprise/who-using-golang-in-enterprise.md","title":"Who is using Go in enterprise?","description":"This content map explores the companies and organizations that have embraced Go as their primary programming language for enterprise-level applications.","spr_content":"Go in Enterprise:  <hr />- Technology Giants: Google pioneering with internal tools; Kubernetes, Docker (partial) adoption; language design aligned with engineering efficiency. Facebook's Ent for schema as code.  <hr />- Cloud Providers: AWS supports Lambda; DigitalOcean’s CLI doctl; leverage simplicity and performance.  <hr />- Financial Services: American Express integrates Go into core backend systems; Zerodha employs Go for high-scalability trading platform.  <hr />- Media/Entertainment: Netflix’s Rend server; Twitch’s low-latency streaming infrastructure, both capitalize on Go’s concurrency.  <hr />- Ride-sharing & Delivery: Uber formalizes Go style; Einride’s microservices architecture relies on Go’s modularity.  <hr />- Cybersecurity: Cloudflare extensively deploys Go for edge computing and security/services.  <hr />- Productivity Tools: Dropbox rewrites components in Go to boost performance.  <hr /><hr />Associations:  <hr />- Go enables scalable, efficient, high-performance backend systems across varied industries.  <hr />- Use cases span infrastructure, schema definition, server development, cloud services, streaming, microservices, security, and performance-critical applications.  <hr />- Adoption driven by Go’s simplicity, concurrency model, compile-time efficiency, and suitability for cloud-native, microservices, and high-load systems.","tags":"enterprise golang language","authors":"fuatto","date":{"days":19979},"category":"playground > topics > golang > go-for-enterprise"},"530":{"file_path":"playground/topics/golang/profiling-in-go.md","title":"Profiling in Go","description":"Profiling in Go is a powerful tool that can help you identify and fix the subtle issues in your code quickly and efficiently. In this article, we'll explore the world of profiling in Go and show you how you can use it to catch all the issues in your code.","spr_content":"- Profiling in Go is analogous to catching all issues in code; it helps identify hidden problems efficiently.<hr />- Key profiling types are CPU profile and memory (heap) profile; both essential for performance optimization.<hr />- Go offers built-in pprof and third-party packages like github.com/pkg/profile for profiling.<hr />- Profiling process involves adding start/stop hooks around code segments; defer profile.Start(...).Stop().<hr />- CPU profiling reveals hotspots, often system calls, and guides optimization efforts.<hr />- Profiling results show functions consuming most CPU, e.g., syscalls, or memory, e.g., string allocations.<hr />- Inefficient byte-by-byte file reading causes high syscall overhead; buffered reading reduces system calls.<hr />- Using bufio.NewReader instead of raw file reading vastly improves performance by buffering I/O.<hr />- Profile analysis (via `go tool pprof`) pinpoints bottlenecks for targeted improvements.<hr />- Excessive string concatenation via `curr += string(b)` causes high memory allocations and slowdowns.<hr />- Using strings.Builder reduces memory allocations and enhances speed.<hr />- Pre-allocating buffer with sb.Grow(32) minimizes dynamic memory resizing overhead.<hr />- String concatenation in Go is optimized with strings.Builder; avoid repeated `sb.String()` in tight loops.<hr />- Final optimized code employs bufio.Reader, strings.Builder, Grow(), and minimal unnecessary allocations.<hr />- Removing profiling overhead improves runtime; profiling should be used for detection, then cleaned up.<hr />- Proper profiling enables precise, data-driven code tuning, leading to high-performance Go applications.<hr />- Performance tuning with profiling mirrors capturing all the \"Pokémon\" — thoroughness ensures no problem escapes.<hr />- Continuous profiling is vital regardless of project size; essential for building efficient, scalable systems.<hr />- Profiling transforms guesswork into insight; it catches errors before they manifest as user complaints.<hr />- Just like catching Pokémon requires effort, effective profiling demands understanding tools and methods — “Gotta catch ‘em all”.","tags":"engineering golang profiling","authors":"thangnt294","date":{"days":19444},"category":"playground > topics > golang"},"531":{"file_path":"playground/topics/golang/error-handling-patterns.md","title":"Error handling patterns","description":"Quick note on error handling patterns in programming languages","spr_content":"- Error handling is vital for application robustness and correct behavior under unexpected conditions or inputs.<hr />- Patterns evolve with programming paradigms, from simple return codes to sophisticated constructs.<hr />- Return codes: basic, low-level, minimal overhead; caller must always check results to avoid silent bugs.<hr />- Exceptions: structured, separate normal flow from error handling; overuse or improper catching hampers debugging.<hr />- Error objects/results: explicit, forces handling both success and failure; common in functional languages, promotes explicitness.<hr />- Assertions: debugging aid, check assumptions during development; unsafe in production, don't replace error handling.<hr />- Callbacks (error-first): suitable for async environments, explicit error checks; can cause callback hell.<hr />- Promises: modern asynchronous handling, cleaner chaining, easier errors management; beware of misused catch blocks.<hr />- Pattern matching: comprehensive, descriptive, force exhaustive case handling; suitable for sum types, may overcomplicate simple cases.<hr />- Panic (or crash): used for unrecoverable errors in languages like Go and Rust; should be reserved for truly critical failures; overuse can lead to ungraceful termination.<hr />- Each pattern balances trade-offs between simplicity, explicitness, overhead, and suitability for development, debugging, or production environments.","tags":"error golang","authors":"tieubao","date":{"days":20010},"category":"playground > topics > golang"},"532":{"file_path":"playground/topics/golang/weekly/oct-25.md","title":"Go Commentary #17: Leveraging benchstat Projects in Go benchmark and Go Plan9 memo on 450% speeding up calculations","description":"Understanding benchstat usage in Go benchmark and Go Plan9 on boosting up performance","spr_content":"- Benchstat analyzes Go benchmark results; compares \"before\" and \"after\" performance metrics.<hr />- Old-school benchmarking involves manual code, explicit version tags, and sequential comparisons.<hr />- Running benchmarks requires setting environment variables, specific `go test` flags, and redirecting output.<hr />- Result files (e.g., `v1.txt`, `v2.txt`) contain raw benchmark metrics.<hr />- Benchstat commands compare these files, highlighting changes in execution time, memory, and allocations.<hr />- Limitations of traditional approach:<hr />  - Difficult to track when optimizations regress or are reverted.<hr />  - Unintentional code changes can skew results; hard to notice.<hr />  - Collaboration and replication are cumbersome with large, complex benchmarks.<hr />- New-school methodology integrates multiple parameters: variations in compression, protobuf encoders, sampling sizes, and protocol versions.<hr />- Benchmark code becomes hierarchical with nested `b.Run()` for detailed parameter combinations.<hr />- Results include multiple dimensions: sample size, compression type, protocol version, encoder, each with their own benchmarks.<hr />- Jan 2023 update:<hr />  - `benchstat` was rewritten to support more granular, filterable, multi-parameter comparison.<hr />  - Supports filtering via regex on rows/columns, generating CSV outputs for charts.<hr />- Despite complexity, hybrid use of traditional and parameterized benchmarks is recommended:<hr />  - Small, quick comparisons for iterative development.<hr />  - Comprehensive parameter sweeps for in-depth analysis.<hr />- This approach enhances tracking, reduces accidental errors, and improves sharing, especially with `-format csv`.<hr />- Extended benchmarks benefit from remote version storage, facilitating historical comparisons and reviews.<hr />- Summary:<hr />  - Use both old-school and new-school approaches as suited.<hr />  - Incorporate filtering and exporting features for flexible, insightful analysis.<hr />- Linking to Plan9-based SIMD optimization:<hr />  - Programmatic SIMD operations in Go leverage target-specific instructions via Plan9's assembler dialect.<hr />  - Target platform matters: x86 (amd64), ARM, etc., requiring specific assembly files with build tags.<hr />  - Assembly syntax involves defining functions (`TEXT`) with platform-specific instructions, respecting Go's calling conventions.<hr />  - Register-based operations (e.g., `MOVL`, `ADDL`) perform vectorized arithmetic catering to SIMD acceleration.<hr />  - Speedups (~200-450%) depend on data size and SIMD implementation.<hr />- Overall:<hr />  - Benchmarking complexity increases with parameterization but yields finer insights.<hr />  - Cross-platform SIMD via Plan9 assembly can dramatically improve computational bandwidth.<hr />  - Combining detailed multi-parametric benchmarks with platform-optimized code provides robust performance tuning.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20021},"category":"playground > topics > golang > weekly"},"533":{"file_path":"playground/topics/golang/weekly/oct-11.md","title":"Go Commentary #15: Using Go embed, and Reflect","description":"Quick notes on Go embed and Go Reflect","spr_content":"- `go:embed` directive instructs the Go compiler to embed files and folders into the binary at build time.<hr />- Embedded resources are accessible directly from memory at runtime, eliminating disk reads.<hr />- Usage with a single file; example: embedding `message.txt` containing \"hello from bytesizego!\".<hr />- Usage with multiple files; example: embedding `messages/*.txt` as an `embed.FS`.<hr />- Usage with directories; example: embedding `static/` and reading files like `static/index.html`.<hr />- Limitations include increased binary size with large files and need for recompilation upon file changes.<hr />- Reflect package enables runtime introspection of types, fields, and methods via reflection.<hr />- Reflection transitions: interface value → reflection object and reflection object → interface value.<hr />- To modify reflected values, the value must be settable.<hr />- Pattern: `reflect.ValueOf().Elem()` accesses underlying data.<hr />- Laws of reflection ensure type safety; misuse can cause panics.<hr />- Reflection is powerful but perilous; prudent use is advised.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20007},"category":"playground > topics > golang > weekly"},"534":{"file_path":"playground/topics/golang/weekly/dec-13.md","title":"Go Commentary #24: Coming in Go 1.24: testing/synctest experiment for time and concurrency testing","description":"Go 1.24 testing/synctest experiment for time and concurrency testing","spr_content":"- Go 1.24 introduces testing/synctest for deterministic time and concurrency testing.<hr />- Traditional time tests depend on the system clock, causing flakiness.<hr />- Synctest provides a controlled environment for simulating time, removing system clock dependence.<hr />- Wrapping test code in synctest.Run creates deterministic execution for time-based logic.<hr />- Concurrency tests involving timers and tickers become reliable and reproducible with synctest.<hr />- Initial delay of tickers causes flaky results; synctest mitigates this through synchronization.<hr />- Use GOEXPERIMENT=synctest with gotip until Go 1.24 release for access.<hr />- The approach enhances testing of code with time and concurrency dependencies significantly.<hr />- The main proposal and progress are documented in Go’s review and GitHub issues.<hr />- Adoption of synctest implies a shift toward predictable, deterministic testing paradigms in Go.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20070},"category":"playground > topics > golang > weekly"},"535":{"file_path":"playground/topics/golang/weekly/nov-01.md","title":"Go Commentary #18: Fuzz Testing Go HTTP Services","description":"Understanding how to use Fuzz Testing in Go","spr_content":"- Envisioning all possible inputs is impossible; limited to expected bugs.  <hr />- Since Go 1.18, built-in fuzzing integrates with testing.  <hr />- Creating a fuzz test:<hr />  - Write a `Fuzz` function accepting `*testing.F`.  <hr />  - Add seed corpora with `f.Add()` for guided generation.  <hr />  - Invoke `f.Fuzz()` to run target with generated inputs.  <hr />  - Use `go test --fuzz=Fuzz` to execute fuzzing.  <hr />- Example: simple byte slice comparison with potential runtime panic due to index out of range.  <hr />- Fuzzing HTTP services involves:<hr />  - Defining request/response structs, e.g., with JSON fields.  <hr />  - Implementing handler functions that decode JSON, process, and encode responses; handle errors gracefully.  <hr />  - Preparing seed requests, including invalid inputs, for the fuzzer.  <hr />  - Creating a test server with `httptest.NewServer`.  <hr />  - Passing marshaled requests to server via `http.Client.Post`.  <hr />  - Skipping invalid JSON or bad status responses to focus on underlying bugs.  <hr />- Fuzz tests can reveal issues like:<hr />  - Division by zero errors during input processing.  <hr />  - Slice bounds violations leading to runtime panics.  <hr />- Key insight: fuzzing uncovers hard-to-detect bugs triggered by unexpected, malformed, or edge-case inputs.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20028},"category":"playground > topics > golang > weekly"},"536":{"file_path":"playground/topics/golang/weekly/dec-06.md","title":"Go Commentary #23: Draft Release Notes for Go 1.24 and weak pointers in Go","description":"Draft Release Notes for Go 1.24 and the incoming of weak pointers in Go","spr_content":"- Go 1.24 introduces fully supported generic type aliases, allowing parameterized type synonyms similar to defined types, with syntax `type (name = type)`.  <hr />- Type aliases like `set[P comparable]` can be parameterized, but normal type parameters like `A[P any]` are illegal; can be toggled via `GOEXPERIMENT=noaliastypeparams`.  <hr />- Upcoming removal of `aliastypeparams` in Go 1.25 signals transition away from certain aliasing features.  <hr />- Tooling updates include improvements for `go tool`, `-tool` flag, and integration of a `tests` analyzer for `go vet`.  <hr />- Compiler, runtime, Cgo, linker, bootstrap modules have received unspecified enhancements, implying performance and stability improvements.  <hr />- Standard library updates feature a new `os.Root` type enabling directory-restricted filesystem operations, with methods (`Open`, `Create`, `Mkdir`, etc.) confined within a specified directory, preventing path traversal outside it.  <hr />- `os.OpenRoot` opens a directory as `os.Root`, which provides a sandboxed environment for file operations, including symbolic link protections.  <hr />- Crypto and hash packages have new or improved functionalities; `net/http` adds support for HTTP/2 protocol settings in `Transport` and `Server`.  <hr />- `sync.Map` has a new implementation aimed at performance gains and resolving longstanding issues.  <hr />- Weak pointers are introduced as threadsafe references that don't inhibit garbage collection and automatically nullify after memory cleanup, facilitating safe, non-owning references.  <hr />- Weak pointers use an indirection object (approx. 8 bytes) to point to the target; during GC, only the indirection needs update, enabling efficient cleanup of all weak references to an object simultaneously.  <hr />- Usage examples demonstrate weak pointers' role in canonicalization maps, ensuring single instances, with weak references collapsing post-GC when strong references are gone.  <hr />- Weak pointers uniquely manage object lifecycle, decoupling reference existence from object lifetime, crucial for memory management and avoiding leaks in internal packages.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20063},"category":"playground > topics > golang > weekly"},"537":{"file_path":"playground/topics/golang/weekly/nov-15.md","title":"Go Commentary #20: Go Turns 15","description":"The 15th anniversary of the Go open source release","spr_content":"- Go has evolved significantly over 15 years, tripling its user base in 5 years, becoming a top 10 language, and the language of the modern cloud.<hr />- Since its 10-year anniversary, Go's growth and features reflect a focus on performance, concurrency, and usability.<hr />- Go's 1.22 introduced fixes like preventing loop variable sharing, supporting integer ranging, and boosting performance through memory and devirtualization enhancements.<hr />- The 1.22 release added the math/rand/v2 package, more flexible net/http patterns, nullable SQL types, and slice concatenation.<hr />- Go 1.23 introduced iterator-based for-range loops, support for generic type aliases in preview, and telemetry options for usage analytics.<hr />- Tool improvements include better environment insights with `go env -changed`, easier dependency management with `go mod tidy -diff`, and enhanced vet checks.<hr />- Future directions: optimizing Go for modern hardware (new map implementations, garbage collection algorithms), APIs, and tools.<hr />- Long-term goal: making Go better for AI development and leveraging current/future hardware advancements.<hr />- Underlying themes: continuous performance optimization, modern concurrency features, and hardware-aware design.<hr />- Go’s trajectory emphasizes adaptation to evolving tech landscapes, ensuring its relevance and efficiency in cloud, AI, and system programming.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20042},"category":"playground > topics > golang > weekly"},"538":{"file_path":"playground/topics/golang/weekly/nov-22.md","title":"Go Commentary #21: Go sync.Once is Simple","description":"Understanding Go's sync.Once - A Deep Dive into Single-Execution Guarantees and Atomic Operations","spr_content":"- sync.Once ensures a function executes exactly once, regardless of multiple calls.  <hr />- It employs internal state (`done`) and a mutex (`m`) for synchronization.  <hr />- `Once.Do(f)` tries to execute `f` only once; subsequent calls ignore `f`.  <hr />- It enables lazy-loading, delaying operations until first needed, improving performance and memory efficiency.  <hr />- No built-in reset: if `f` panics, future `Do()` calls may not re-execute and errors are tricky to handle.  <hr />- From Go 1.21, `OnceFunc`, `OnceValue`, `OnceValues` provide cached, panic-safe functional variants.  <hr />- Example: `sync.OnceValues(fetchConfig)` caches config, avoids repeated fetches, and handles errors.  <hr />- Implementation: atomic flag (`done`) and mutex; check flag before acquiring lock to optimize.  <hr />- Race condition potential when setting `done`; fixed with deferred `done.Store(1)` after `f()` runs.  <hr />- Compiler inlining further optimizes `Do()` by reducing lock overhead.  <hr />- Without reset, panics in `f()` prevent future re-executions, complicating error recovery.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20049},"category":"playground > topics > golang > weekly"},"539":{"file_path":"playground/topics/golang/weekly/nov-08.md","title":"Go Commentary #19: Writing secure Go code","description":"Pratices to write secure Go code","spr_content":"- Security awareness in Go code involves continuous monitoring, updating, testing, and understanding vulnerabilities.  <hr />- Stay informed about Go security announcements by subscribing to `golang-announce@googlegroups.com`.  <hr />- Keep Go up-to-date by regularly upgrading to newer versions, ensuring inclusion of latest security patches and compatibility improvements.  <hr />- Regularly review the Go release notes for security fixes related to CVEs and update `go.mod` accordingly.  <hr />- Verify dependencies and check for CVEs addressed in each new Go version release to prevent known vulnerabilities.  <hr />- Use static analysis tools like `go vet` for syntax, unused code, and concurrency issues; run `staticcheck` for deprecated APIs and code quality problems.  <hr />- Use `golangci-lint` for additional code quality checks and suggestions; incorporate it into CI/CD pipelines.  <hr />- Detect race conditions with `go test -race`.  <hr />- Scan source with `govulncheck` to identify known vulnerabilities affecting libraries and modules, focusing on CVE fixes.  <hr />- Employ `gosec` to detect security flaws such as weak randomness (`math/rand` instead of `crypto/rand`) or insecure TLS configurations (`InsecureSkipVerify: true`).  <hr />- Integrate fuzzing techniques to uncover hidden security issues like buffer overflows, injections, DoS, and XSS, especially for HTTP services.  <hr />- Overall, maintaining security in Go code demands vigilant monitoring, regular updates, static and dynamic testing, and awareness of common vulnerabilities (CVEs, CWE).","tags":"go-weekly golang","authors":"fuatto","date":{"days":20035},"category":"playground > topics > golang > weekly"},"540":{"file_path":"playground/topics/golang/weekly/jul-05.md","title":"Go Weekly #2: Go 1.23 Iterators","description":"Exploring the new Go package for iterators - learn what it is, what the controversy is about, and how to use it.","spr_content":"- Languages typically offer standardized container iteration mechanisms.  <hr />- Go provides `for` `range` for built-in collections but lacks generic user-defined container iteration.  <hr />- Existing non-generic iterators:  <hr />  - `runtime.CallersFrames`: iterates stack frames with `Next` and a bool for continuation.  <hr />  - `bufio.Scanner`: iterates input read from `io.Reader` with `Scan`, `Bytes`, `Err`.  <hr />  - `database/sql.Rows`: iterates query results with `Scan`.  <hr />- Pre-generics Go: no unified iterator interface covering diverse use cases.  <hr />- Proposal in Go 1.22: introduce `iter` package with iterator functions (`Seq`, `Seq2`) over sequences or key-value pairs.  <hr />- An iterator is a callback-based function yielding sequence elements, returning true to continue, false to stop.  <hr />- Example: `Backward` function for reverse iteration over slices, yielding index and element.  <hr />- The `for range` syntax becomes more complex: `return true` for continue, `return false` for break, leaning towards functional style.  <hr />- Implication: Go's iteration syntax and semantics are evolving, raising concerns about idiomatic imperative style.  <hr />- Anticipation: community adoption and practice pending, awaiting real-world use to assess practicality.","tags":"go-weekly golang iterators","authors":"fuatto","date":{"days":19909},"category":"playground > topics > golang > weekly"},"541":{"file_path":"playground/topics/golang/weekly/oct-18.md","title":"Go Commentary #16: Understand sync.Map","description":"Understanding sync.Map and using the right tools for atomic operations in Go.","spr_content":"- sync.Map automates concurrency control, eliminating manual locking and race conditions.<hr />- Using sync.Map improves performance for read, write, and delete operations over native maps.<hr />- sync.Map provides methods: Store, Load, LoadOrStore, Delete, LoadAndDelete, CompareAndDelete, Swap, CompareAndSwap, Range, Clear.<hr />- Native maps are unsafe for concurrent iteration during writes, leading to panics.<hr />- sync.Map's Range allows safe iteration amidst concurrent modifications, trading off perfect consistency.<hr />- Structurally, sync.Map contains two separate maps: readOnly and dirty.<hr />- readOnly map offers fast, lock-free lookups via atomic.Pointer, suitable for predominantly read scenarios.<hr />- dirty map captures recent updates not yet promoted to readOnly, ensuring data is current eventually.<hr />- When updating, only the pointer in entries is modified; both readOnly and dirty entries share the same pointer.<hr />- Each map entry's pointer can be in three states: normal (valid data), deleted (nil), or expunged (special sentinel indicating full removal).<hr />- The design employs double pointer indirection for efficient concurrent access and updates.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20014},"category":"playground > topics > golang > weekly"},"542":{"file_path":"playground/topics/golang/weekly/nov-29.md","title":"Go Commentary #22: GoMLX: ML in Go without Python","description":"Running Machine Learning inference in Go without Python","spr_content":"- ML model implementation traditionally relies on Python frameworks (TensorFlow, JAX, PyTorch), which provide expressive model description, auto-differentiation, and hardware acceleration (CPUs, GPUs, TPUs).<hr />- These frameworks translate models into StableHLO, a high-level operation format, which XLA compiler then optimizes into hardware-specific code via the XLA compiler and PJRT runtime.<hr />- Hardware (HW) executing models involves complex C/C++ routines, managing data movement (tensors), device sharding, and execution.<hr />- GoMLX wraps XLA, exposing its core building blocks in Go, enabling ML model definition and execution without Python.<hr />- Implemented models in Go (e.g., CNN on CIFAR-10) are more verbose and explicit but achieve comparable functionality.<hr />- Model construction involves explicit layering (convolution, activation, pooling, dropout, dense) with dimension assertions and context management.<hr />- The runtime involves loading checkpoints, creating execution contexts, and processing inputs through a graph pipeline.<hr />- Example workflows include: defining models, loading weights, and classifying images; or loading Kaggle weights, tokenizing data, sampling tokens, and generating text.<hr />- GoMLX facilitates ML inference in Go, reducing dependency on Python environments, albeit with current limitations in maturity and stability for production.","tags":"go-weekly golang","authors":"fuatto","date":{"days":20056},"category":"playground > topics > golang > weekly"},"543":{"file_path":"playground/topics/rust/error-handling-in-rust.md","title":"Error handling on Rust","description":"nrecoverable errors are those that occur when something goes fundamentally wrong, and the program cannot safely proceed. For example, if a file that is essential for the program to run is missing or corrupted, the program can panic and display an appropriate error message. Rust provides a mechanism for handling such situations through the **`panic!`** macro. When a **`panic!`** occurs, the program stops execution, unwinding the stack and providing a clear panic message...","spr_content":"- Rust categorizes errors into unrecoverable and recoverable, facilitating effective error management.<hr />- Unrecoverable errors are critical, halt execution via panic! macro, unwinding stack with messages; example: division by zero triggers panic.<hr />- Panicking signals critical flaws, preventing undefined states; not suitable for all errors but essential for fatal issues.<hr />- Recoverable errors allow continued execution; handled through Option and Result types.<hr />- Option encapsulates presence or absence of value, avoiding null; functions return Some(value) or None.<hr />- Result encapsulates success or failure, with Ok(value) and Err(error), suitable for fallible operations like file I/O.<hr />- Using unwrap and expect simplifies code but risks panics if errors occur; eager unwrapping should be used cautiously.<hr />- The ? operator propagates errors early in functions returning Result or Option, streamlining error handling and code clarity.<hr />- Multiple errors require custom error types, often enums, capturing different error variants; example: MyError with Io and Parse variants.<hr />- Implementing From trait for custom errors enables seamless use of ? with various error types, converting them automatically.<hr />- Custom error types gain composability and better integration by implementing std::error::Error, along with fmt::Display and fmt::Debug.<hr />- std::error::Error’s source method links underlying errors, aiding error chaining and introspection.<hr />- Proper error handling combines specific error variants with trait implementations, ensuring informative, maintainable, and composable error management.","tags":"error-handling rust","authors":"trankhacvy","date":{"days":19907},"category":"playground > topics > rust"},"544":{"file_path":"playground/topics/rust/rust-trait.md","title":"Rust Trait","description":"Rust's **trait** system is a powerful feature that enables developers to define shared behavior across different types. Traits play a crucial role in achieving code reusability, abstraction, and flexibility...","spr_content":"Rust trait system: defines shared behaviors via method collections; enables code reuse, abstraction, flexibility.  <hr />Traits express capabilities without internal details; analogous to interfaces but with Rust-specific features.  <hr />Example trait `Shape` with method `area`; types implement trait via `impl`.  <hr />Implementing traits involves providing method definitions; types gain trait's functionality.  <hr />Default trait methods allow optional overriding; e.g., `perimeter` default to `0.0`.  <hr />Traits as parameters facilitate polymorphism; functions accept any type implementing trait.  <hr />Trait bounds specify that generics must implement certain traits; enhances function flexibility.  <hr />Traits promote modular, adaptable, and reusable Rust code; central to abstraction in Rust.","tags":"rust trait","authors":"trankhacvy","date":{"days":19907},"category":"playground > topics > rust"},"545":{"file_path":"playground/topics/rust/playaround-with-rust.md","title":"Playaround With Rust","description":"Learn how Mozilla uses Rust to build safer, parallel browsers by leveraging Rust's ownership, immutability, lifetime tracking, and expression-based design for error-free, efficient code.","spr_content":"- Mozilla leverages Rust for prototyping experimental browser architectures  <hr />- Goal: increased safety, parallelism, reduced C++ errors  <hr />- Rust's uniqueness: ownership system ensures single ownership, scope-based resource management  <hr />- Ownership: each value has one owner; owner scope dictates lifetime; owner drop releases resources  <hr />- Variables have scope, influencing validity and lifetime of values  <hr />- Example: `let x = String::from(\"hello\")`; `let y = x` moves ownership, `x` becomes invalid; `String` allocates on heap  <hr />- For primitive types (`let x = 5`), copy trait applies; copying is cheap; `x` remains usable after assignment  <hr />- Rust implements `Copy` trait for stack-only types: integers, booleans, floats, characters, tuples of these  <hr />- Heap-allocation types (e.g., `String`, complex structs) implement `Drop`; moving or dropping occurs on scope end  <hr />- Immutable by default: variables cannot change after initialization, strengthening safety and predictability  <hr />- Variable declaration: `let x: i64` in Rust; uninitialized until assigned a value; differs from Go's zero-value `var x int` which initializes to zero  <hr />- Rust is expression-oriented: most code snippets produce expressions returning values; expressions nest and specify evaluation order  <hr />- Statements in Rust primarily sequence and contain expressions but do not produce values themselves  <hr />- Example: `let y = if x == 5 { 10 } else { 15 }`—conditional expressions assign values based on logic  <hr />- Lifetime: Rust enforces borrow-checking via explicit lifetime annotations to ensure references are valid  <hr />- Borrowing: references (`&`) have a scope that must outlive the data they point to  <hr />- Lifetime elision applies in many cases, but explicit annotations are necessary in complex scenarios  <hr />- Example: referencing local variables (`let y = 5; let x = &y`) requires explicit lifetime parameters to prevent dangling references  <hr />- Functions with references require lifetime annotations: `fn largest<'a>(x: &'a i64, y: &'a i64) -> &'a i64`  <hr />- Rust compiler enforces these rules at compile-time to prevent dangling pointers and data races  <hr />- Overall, Rust's ownership, borrowing, lifetimes, immutability, and expression dominance foster safe, concurrent, and error-resistant code, essential for browser prototyping","tags":"rust","authors":"","date":{"days":18138},"category":"playground > topics > rust"},"546":{"file_path":"playground/topics/solana/anchor-framework.md","title":"Anchor framework","description":"A comprehensive guide to getting started with smart contract development on Solana using the Anchor framework. This tutorial covers the basics of Anchor, its components, installation process, and provides step-by-step instructions for creating and deploying a simple program.","spr_content":"- This article provides a tutorial for developing Solana smart contracts using Anchor framework.  <hr />- Assumptions: prior experience with Solana network, accounts, programs, instructions, and Rust or C++.  <hr />- Require local Solana network setup for testing.  <hr />- Anchor is a framework and library set that simplifies and accelerates Solana application development; source code is unaudited, requiring caution.  <hr />- Anchor offers: Rust crates and eDSL, IDL specification, TypeScript client generation from IDL, CLI workspace management.  <hr />- Benefits of using Anchor: simple APIs, clear components, utilities for build/test/deploy, easy JS/Golang client creation via IDL.  <hr />- Main components: Program (logic), Account struct (`#[derive(Accounts)]`), `declare_id` for program identity and security.  <hr />- Solana's RPC and ABI-like IDL are analogous to Ethereum's ABI and enable client interactions.  <hr />- Workspace setup example targets devnet; for testnet, switch cluster, and list via `anchor cluster list`.  <hr />- Installing dependencies: Rust (rustup and rustfmt), Solana CLI, Yarn, Anchor CLI.  <hr />- Creating a program: `anchor init <project-name>`, ensuring compatibility with Anchor version.  <hr />- Example code: declare program ID, define `#[program]`, include instruction functions, account structs, and modules (`processor.rs`, `instruction.rs`, `errors.rs`, `state.rs`, `lib.rs`).  <hr />- Build process: `anchor build` (or `cargo build-bpf`) with version updates as needed.  <hr />- Generate IDL: `anchor idl parse -f lib.rs -o target/idl/<program>.json`; similar to ABI.  <hr />- Deployment: set environment (`devnet`, `testnet`, `mainnet-beta`) with `solana config set` followed by `anchor deploy`.  <hr />- Post-deployment: obtain program ID and deploy via `solana program deploy` command.  <hr />- Anchor CLI provides subcommands: build, cluster, deploy, expand, help, idl, init, migrate, new, shell, test, upgrade, verify.  <hr />- Anchor Version Manager (avm): manage multiple Anchor CLI versions; commands include install, list, uninstall, use.  <hr />- Key concepts: Account (Ledger record), Account owner (program that owns account), Block, BPF loader, keypair, lamport (SOL fraction), leader (validator role), leader schedule (validator sequence).  <hr />- Example/template code available at specified GitHub URL.  <hr />- References include official docs and language resources for deeper understanding.","tags":"anchor blockchain solana tutorial","authors":"thanhpn","date":{"days":19174},"category":"playground > topics > solana"},"547":{"file_path":"playground/topics/solana/solana-core-concept.md","title":"Solana core concepts","description":"build a strong understanding of the core concepts that make Solana different from other blockchains.","spr_content":"- Solana is a high-performance blockchain optimized for decentralized apps and cryptocurrencies.  <hr />- Uses Proof of History (PoH) for scalable, fast, low-cost transactions.  <hr />- Ecosystem includes DeFi, NFTs, and diverse applications.  <hr />- Accounts store data (up to 10MB), holding program code or state, requiring refundable rent deposits in SOL.  <hr />- Accounts have owners; only owner programs can modify account data.  <hr />- Two account types: executable (programs) and non-executable (data, token balances).  <hr />- Data accounts can be system owned or PDA (Program Derived Address); program accounts store executable code.  <hr />- Solana programs (smart contracts) are executable code; stored as native or on-chain (user deployed).  <hr />- All data interactions are separated from code, using accounts and references, enabling flexible, modular code execution.  <hr />- Programs handle operations: token transfers, DAO votes, NFT ownership; core component of network logic.  <hr />- Native programs are built-in; SPL programs are library modules.  <hr />- On-chain programs are user-deployed; accessible for interaction and execution.  <hr />- Transactions contain instructions, which are individual on-chain actions; instructions specify program, involved accounts, and instruction data (function arguments).  <hr />- Instructions are akin to functions; smallest execution unit in a program.  <hr />- Program Derived Addresses (PDAs) are deterministic, private-keyless addresses, only signable by programs, useful for storing modifiable data securely.  <hr />- Cross Program Invocations (CPIs) allow one program to call/invoke another, enabling composability.  <hr />- CPI’s privileges extend from initial transaction signers; nested CPIs support depth of up to four, facilitating complex interactions.","tags":"anchor blockchain solana","authors":"huymaius","date":{"days":19892},"category":"playground > topics > solana"},"548":{"file_path":"playground/topics/solana/metaplex-nft-compression.md","title":"Metaplex NFT Compression","description":"Metaplex NFT Compression is a technology that allows for the compression of NFTs on the Solana blockchain, reducing the cost of on-chain storage for NFTs. This article provides an overview of the technology, how it works, and its potential impact on the Solana ecosystem.","spr_content":"NFT proliferation on Solana driven by demand for ubiquity, integrating digital assets into daily life.  <hr />NFT storage costs scale linearly; rental at ◎0.012 is affordable per token but becomes costly in large volumes.  <hr />Compression drastically reduces on-chain storage costs, enabling mass deployment of NFTs.  <hr />Cost estimates: 10,000 NFTs at ◎3.5 (34x), 1 million at ◎5 (2400x), 1 billion at ◎500 (24000x).  <hr />Compressed NFTs stored via Merkle trees, managed by Gummyroll, leveraging on-chain roots and off-chain indexers.  <hr />Merkle roots are updated on-chain within a buffer, supporting concurrency and validity of multiple requests.  <hr />Off-chain indexers observe ledger changes, cache metadata, and provide data to dApps and smart contracts.  <hr />The system utilizes multiple write requests, ensuring consistency despite Merkle tree updates.  <hr />Metaplex advances NFT compression by collaborating with wallets (e.g., Solflare, Phantom), RPC providers (e.g., Quicknode, Alchemy, GenysysGo, Triton, Crossmint).  <hr />Compression impacts the entire Solana ecosystem, facilitating broader use cases and user engagement.  <hr />Future developments include expanding technical capabilities and exploring diverse applications.  <hr />This demonstrates a paradigm shift in NFT scalability and accessibility on Solana.","tags":"blockchain nft solana","authors":"khacvy","date":{"days":19429},"category":"playground > topics > solana"},"549":{"file_path":"playground/topics/solana/dynamic-liquidity-market-a-new-form-of-concentrated-liquidity-amm-on-solana.md","title":"Dynamic Liquidity Market Maker - a new form of concentrated liquidity AMM on Solana","description":"a new form of concentrated liquidity AMM on solana","spr_content":"DLMM introduces concentrated liquidity on Solana with discrete price bins, enabling tailored LP strategies, dynamic fees, and deeper markets. Liquidity is allocated across fixed-width, fixed-price bins, defined by basis points, with the active bin containing reserves of both tokens. Trading moves sequentially through bins, with the constant sum formula `X + Y = L` dictating liquidity per bin, where `P = ΔY/ΔX` represents price gradient. Market operation hinges on bin transitions as reserves deplete, with unique active bin at any moment. Compared to traditional AMMs, DLMM reduces slippage, enhances capital efficiency, and boosts LP profitability through adaptive fee structures. Over standard CLMMs, DLMM further refines liquidity concentration and flexibility. Advantages include zero slippage within bins, optimized capital deployment, and strategic liquidity shaping for higher fees and volume. The model is operational within Jupiter's ecosystem, powering projects like Jupiter, Zeus Network, and Uprock, with user-driven liquidity provisioning on Meteora pools.","tags":"amm blockchain solana","authors":"huymaius","date":{"days":19895},"category":"playground > topics > solana"},"550":{"file_path":"playground/topics/solana/solana-account.md","title":"Solana Account","description":"This article provides an overview of Solana accounts, including their structure, types, and how they work.","spr_content":"Solana's model separates logic (programs) from data (accounts) for modularity.  <hr />Programs are executable, stateless code; accounts store mutable data.  <hr />Three account types: data accounts (store data), program accounts (store code), native accounts (system, stake, vote).  <hr />Each account has an address (public key) and owner (program).  <hr />Fields: lamports (balance), owner (program owner), executable (yes/no), data (byte array), rent_epoch (next rent due).  <hr />Ownership rules: only owner modifies data and debits lamports; anyone can credit lamports; owner can transfer ownership if data is zeroed.  <hr />Program accounts are special: store only code, not state.  <hr />For stateful logic, create a code account with `executable=true` and separate data account owned by this code.  <hr />Rent is required to maintain accounts; accounts must be rent-exempt (≥2 years of rent).  <hr />Use `getMinimumBalanceForRentExemption` to calculate needed balance.  <hr />Non-rent-exempt accounts are deallocated when funds run out, deleting data.","tags":"blockchain solana","authors":"khacvy","date":{"days":19313},"category":"playground > topics > solana"},"551":{"file_path":"playground/topics/solana/introduce-to-solana-token-2022-new-standard-to-create-a-token-in-solana.md","title":"Introduce to Solana Token 2022 - new standard to create a token in solana","description":"Explore Solana Token 2022, the next-generation token standard on Solana blockchain. Learn about its key features like transfer fees, non-transferable tokens, and confidential transfers. Discover how Token Extensions enhance functionality, improve security, and enable regulatory compliance for developers and businesses in the Solana ecosystem.","spr_content":"- Solana Token 2022 Program (Token extensions) enhances the original Token program with advanced features like confidential transfers, custom logic, and metadata.  <hr />- Extends basic minting, transferring, freezing with new capabilities.  <hr />- Key features include:  <hr />  - Transfer Fees: fee in token itself, not SOL, on each transfer.  <hr />  - Non-Transferable: creates soul-bound tokens linked to individuals; can burn or close accounts.  <hr />  - Permanent Delegate: assigns a lasting account delegate to manage tokens.  <hr />  - Transfer Hook: executes custom logic during transfers.  <hr />  - Metadata: on-mint custom metadata, reducing storage costs.  <hr />  - Confidential Transfer: masks balances and transactions, auditably.  <hr />  - Default Account State: pre-frozen token accounts.  <hr />- Benefits:  <hr />  - Enhanced functionality: privacy, fees, interest, and more.  <hr />  - Security: prebuilt, standard tools reduce need for custom contracts.  <hr />  - Compliance: easy addition of metadata, non-transferability supports regulations.  <hr />- Use cases:  <hr />  - Bern: transfer fees divert percentage to burn and holders, with fee in token itself.  <hr />  - Wen New Standard (WNS): lightweight NFT, embedded metadata, enforced royalties, use of extensions like Immutable Owner, Transfer Hook, Metadata.  <hr />  - Paxos USDP Stablecoin: regulatory features, confidential transfers, clawback via Permanent Delegate.  <hr />- Future directions:  <hr />  - Over a dozen extensions enabling stablecoins, game assets, real-world asset governance.  <hr />  - Ecosystem adoption: GYEN, GUSD, support in wallets and DeFi platforms.","tags":"blockchain defi solana","authors":"huymaius","date":{"days":19893},"category":"playground > topics > solana"},"552":{"file_path":"playground/topics/solana/how-tokens-work-on-solana.md","title":"How Tokens Work on Solana","description":"A comprehensive guide explaining how tokens function on Solana, comparing it with EVM-based tokens. This article covers the creation of fungible tokens and NFTs, minting process, token transfers, and key differences in token management between Solana and EVM blockchains.","spr_content":"- Solana uses a single, deployed token program for all token operations, unlike EVM requiring a new contract per token.<hr />- To create a new fungible token, send a `create` instruction to the program, which generates a `mint account` with token metadata (`total supply`, `decimals`, `mint authority`, `freeze authority`).<hr />- Each token type is linked to one `mint account`.<hr />- After creation, instantiate a `token account` for users; the account tracks user holdings of that token.<hr />- Minting tokens involves sending a `mint` instruction to the token program, specifying amount and recipient, restricted to the `mint authority`.<hr />- Transferring tokens simply involves sending a `transfer` instruction, requiring recipient’s token account for that token.<hr />- NFTs are handled via the same program but differ: they have a single `total supply`, zero `decimal`, and mint only once, after which minting is disabled.<hr />- Creating an NFT involves setting up a `mint account` with zero decimals, minting a single token, ensuring scarcity.<hr />- Tools like Candy Machine abstract NFT creation complexities.<hr />- To set token name and symbol, submit a JSON metadata file to the Solana Token Registry via a pull request.<hr />- This approach emphasizes account-based, instruction-driven token management rather than deploying custom contract code.","tags":"blockchain solana token","authors":"khacvy","date":{"days":19150},"category":"playground > topics > solana"},"553":{"file_path":"playground/topics/qa/qc-onboarding.md","title":"Qc Onboarding","description":"Learn how to access QA resources and use gitlab-issues-tools for managing tasks, cloning issues, and exporting defect reports with step-by-step commands and templates.","spr_content":"- Access workflow details via provided URL; its structure guides task sequences and processes.<hr />- Obtain testing resources after securing Google Drive permission; locate resources in `~/Dwarves Foundation/Document/QA`.<hr />- Resources include templates: Test Planning, Test Cases, and Defect Summary Reports.<hr />- Use tools stored in `~/Dwarves Foundation/Document/QA Documents/Tools`; specifically, the `gitlab-issues-tools` file.<hr />- To learn tool functions, execute `./gitlab-issues-tools --help`.<hr />- Common command structure involves specifying: thing (entity), token (authentication), action (operation), project ID, and optional flags.<hr />- Typical actions: list, clone, close, export, burndown.<hr />- Example: clone issue ID 362 with command: `./gitlab-issues-tools -t [TOKEN] -p [PROJECT_ID] --thing issue -a clone --clone-issue-id 362`.<hr />- Export defect list for milestone 0.5.0 with: `./gitlab-issues-tools -t [TOKEN] -p [PROJECT_ID] --thing issue -a export --milestone 0.5.0`.<hr />- Flags enhance specificity: labels, issue IDs, board lists, sprint parameters, total hours.","tags":"people process","authors":"","date":{"days":17360},"category":"playground > topics > qa"},"554":{"file_path":"playground/topics/product/aarrr-framework-in-a-nutshell.md","title":"Aarrr Framework In A Nutshell","description":"Learn how the revenue-driven AARRR framework guides product growth by focusing on Acquisition, Activation, Retention, Referral, and Revenue to optimize key metrics and boost business profits.","spr_content":"AARRR is a revenue-driven funnel focused on profit; it helps optimize decision-making in product development. It comprises five stages: Acquisition, Activation, Retention, Referral, and Revenue, whose order can vary based on strategic goals. The framework guides metrics identification, focusing on the most impactful ones for current product stages, such as new visitors or bounce rates. Applied early, it informs strategy sessions, aligning business goals with data-driven tactics. The funnel must be regularly reviewed and adapted, especially during decision points, to maximize profits and mitigate risks. Ultimately, AARRR provides a solid foundation for building sustainable products by clearly defining what drives growth and how to measure progress.","tags":"design framework practice","authors":"","date":{"days":18443},"category":"playground > topics > product"},"555":{"file_path":"playground/topics/product/subscription-pricing-models.md","title":"Subscription Pricing Models","description":"Overview of Subscription Pricing Models","spr_content":"Pricing Models:<hr />- Freemium: Attracts users via free base, upsell premium. Example: Evernote. Use: Market share, viral growth.<hr />- Pay per Quantity: Charges per units (seats/emails). Example: Help Scout. Use: Predictable, large scale.<hr />- Pay per Active User: Charges only active users. Example: Slack. Use: Enterprise, fairness.<hr />- Flat-fee: Single recurring fee. Example: Hubspot tiers. Use: Steady revenue, risk-averse.<hr />- Usage-based: Charges for actual usage; tiered/stair-case. Example: Postmark. Use: Demand flexible pricing.<hr />- Tiered: Different prices for usage levels. Example: ManageWiz. Use: Structure for volume.<hr />- Volume: Price per unit decreases with amount. Example: Jira. Use: Economies, larger incentives.<hr />- Stair-step: Fixed fees for ranges. Example: Trello. Use: Certainty, simplicity.<hr />- Custom Pricing: Negotiated prices. Example: Jira enterprise. Use: High-touch, tailored.<hr />- Hybrid: Mix of models. Example: DocuSign. Use: Multi-dimension value; upsell.<hr />- À la carte: Customer selects features/services. Example: Shopify. Use: Custom product needs, flexibility.","tags":"pricing product subscription","authors":"hieuvd","date":{"days":19923},"category":"playground > topics > product"},"556":{"file_path":"playground/topics/devbox/research/shadow-copies.md","title":"Shadow Copies in Docker Builds","description":"An explanation of shadow copies in Docker builds","spr_content":"- Docker build creates layered filesystem: each RUN adds a new immutable layer.  <hr />- Base layer is Ubuntu: minimal initial system.  <hr />- Second layer results from `apt-get upgrade`: appends updated files without modifying previous layers.  <hr />- Third layer from `apt-get install`: adds new packages; previous package files remain in prior layers.  <hr />- Upgrades in layer two do not remove obsolete files; old versions persist, causing bloat.  <hr />- Shadow copies (redundant files) accumulate, enlarging image size unnecessarily.  <hr />- Root cause: layering model isolates changes, preventing cleanup of outdated data.  <hr />- Multistage builds help reduce size by copying only necessary artifacts; they don't fix underlying layer accumulation issue.  <hr />- Optimal solution: clean package caches and remove unused files within the same RUN to minimize layer size (e.g., `apt-get clean`, `rm -rf /var/lib/apt/lists/*`).  <hr />- Addressing root cause involves combining cleanup commands in build steps to prevent shadow copies from forming.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"557":{"file_path":"playground/topics/devbox/research/unstable-package-installation.md","title":"Unstable Package Installation in Docker","description":"An explanation of the challenges with package versioning that lets Docker builds unstable","spr_content":"- Dockerfiles are snapshots of environments but depend on external repositories.  <hr />- Same Dockerfile can produce different images over time due to updates in repositories or dependencies.  <hr />- Installing specific package versions reduces but does not eliminate environment variability.  <hr />- Dependencies of dependencies (indirect dependencies) can change, affecting reproducibility.  <hr />- Repository contents can be altered or packages removed, causing build failures.  <hr />- Mirror repositories can differ, leading to inconsistent environments.  <hr />- Reproducibility issues stem from external dependency dynamism and repository variability.  <hr />- Strategies for reproducibility include local cache, private registries, and multistage builds.  <hr />- Precise versioning alone cannot guarantee identical environments over time due to external factors.  <hr />- Fully reproducible environments require controlling or snapshotting all dependencies and sources.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"558":{"file_path":"playground/topics/devbox/research/pinning-nixpkgs.md","title":"Pinning nixpkgs in Nix","description":"An explanation of pinning nixpkgs in Nix and its importance for reproducible builds","spr_content":"- Pinning nixpkgs fixes package versions, ensuring reproducibility.  <hr />- Pinning involves fetching a specific nixpkgs commit or tarball; the entire dependency set is stable over time.  <hr />- Without pinning, nixpkgs defaults to the local nixpkgs version in the user's environment.  <hr />- Default behavior leads to non-reproducible builds if local nixpkgs changes.  <hr />- Pinning isolates builds from upstream changes, maintaining consistency.  <hr />- Unpinned nixpkgs allows for automatic updates and latest fixes but sacrifices reproducibility.  <hr />- The concept parallels version control in packages: fixed tags versus latest commits.  <hr />- \"Fetching tarball\" with a specific sha256 ensures integrity and repeatability.  <hr />- Not pinning = reliance on local nixpkgs state; pinned = explicit, fixed reference.  <hr />- Reproducibility hinges on explicit version control, akin to code freeze.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"559":{"file_path":"playground/topics/devbox/research/fixed-output-derivation.md","title":"Fixed-output Derivation in Nix","description":"An explanation of fixed-output derivations in Nix and their role in ensuring reproducible builds","spr_content":"- Different nixpkgs versions on machines lead to inconsistent package builds.  <hr />- Fixed-output derivations assign a static hash to build outputs.  <hr />- Any change in build input or process alters the hash, causing build failure if mismatched.  <hr />- Hash can initially be mocked with a random value to obtain the correct hash from error messages.  <hr />- During first build, fake the hash; upon failure, extract the actual hash from the error message.  <hr />- Hash mismatch identifies unintended changes, ensuring reproducibility.  <hr />- This mechanism prevents reliance on unreliable internet sources by verifying downloads.  <hr />- Fixed-output derivations act both as integrity checks and as consistency enforcers across environments.  <hr />- They facilitate building identical packages over time, regardless of local or remote variations.  <hr />- The process enhances control over external dependencies and resource integrity.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"560":{"file_path":"playground/topics/devbox/research/nix-is-faster-than-docker-build.md","title":"Nix is Faster Than Docker Build","description":"An exploration of how Nix outperforms Docker in building images, leveraging its deep understanding of package dependencies and content-addressable storage","spr_content":"- Nix knows exact package content and dependencies before build initiation.<hr />- Capable of avoiding redundant builds across layers sharing identical content but differing instructions.<hr />- Nix's comprehension surpasses content-addressable storage alone.<hr />- It constructs dependency trees with high precision using in-depth knowledge of package details.<hr />- Groups related packages and dependencies into the same layer, optimizing layer cohesion.<hr />- Large files are placed in separate layers to maximize cache efficiency.<hr />- Reduces total layer count by strategic grouping, leading to more effective caching and faster operations.<hr />- Assesses package updateability based on history, dependency position, and package type.<hr />- Employs complex algorithms to order layers, with least-changed layers positioned at the bottom.<hr />- Uses symlinks and hardlinks to share resources between layers, avoiding file duplication.<hr />- Enhances image size reduction and speeds up pull/push processes via resource sharing.<hr />- Dependency updates are handled by updating references, not copying files.<hr />- Builds Docker images from scratch, eliminating dependency on existing base images like Ubuntu or Alpine.<hr />- Converts built packages directly into Docker images; no need for build-time dependencies post-compilation.<hr />- Simplifies removal of build tools and redundant libraries, reducing image size.<hr />- Results in more efficient, faster, and cost-effective Docker image creation using Nix.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"561":{"file_path":"playground/topics/devbox/introduction/the-reason-for-being.md","title":"The reason for being","description":"The reason why we use Devbox","spr_content":"- Cloud service adoption prompted containerization for environment consistency.  <hr />- Docker facilitated isolated, shareable, repeatable environments with minimal scripts.  <hr />- Docker's limitations include ineffective build cache requiring full rebuilds on code changes.  <hr />- Rebuilds affect multiple layers, increasing time and resource consumption.  <hr />- Dependency stability is compromised; `apt-get update` can alter transitive dependencies, causing inconsistent images.  <hr />- Docker on non-Linux OS relies on Linux VMs, impacting host system performance.  <hr />- These issues lead to slow, asynchronous, cumbersome local development workflows.  <hr />- Solutions include Docker hacks or alternative tools like Devbox.  <hr />- Devbox leverages Nix, enabling native, cross-platform, dependency-verified environments without VMs.  <hr />- Devbox creates isolated workspaces linked to local Nix store, ensuring reproducibility via hashes.  <hr />- Different package versions are managed via distinct hashes, supporting multiple project dependencies.  <hr />- Devbox simplifies sharing environment configurations through scripts and enhances team collaboration.  <hr />- Embracing Devbox improves development efficiency, reproducibility, and team productivity at scale.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"562":{"file_path":"playground/topics/devbox/story/devbox-a-world-before-docker.md","title":"The world before Docker","description":"A brief history about the world before Docker and why we need devbox for local development","spr_content":"- Software development historically faced \"It works on my machine\" issues, highlighting environment inconsistency challenges.<hr />- Docker's cross-platform compatibility broadens deployment and simplifies interoperability across Linux, Windows, and macOS.<hr />- Virtual machines (VMs) originated in the 1960s as IBM's CP/CMS to address time-sharing, evolving into tools like VMware for reproducible environments.<hr />- VMs offer benefits: reproducibility, isolation, portability, snapshotting, but suffer from high resource overhead, slow startup, and complex sharing.<hr />- Containerization emerged in the early 2010s, led by Linux Containers (LXC), introducing lightweight, efficient deployment by sharing host OS kernel.<hr />- Docker, launched publicly in 2013, innovated further with extensive tooling, ecosystem support, and cross-platform capabilities, easing container management.<hr />- Containers vs VMs: containers are lightweight, fast, resource-efficient, and portable; VMs are heavier, slower, and more resource-consuming.<hr />- Linux Containers provided foundational ideas: sharing kernels, namespaces, quick startup, scaling, but lacked comprehensive tooling.<hr />- Docker extended containerization with a rich ecosystem: CLI, Docker Hub, cloud integration, making containers more accessible and manageable.<hr />- Transition from VMs to Docker containers marks a significant evolution in development efficiency, deployment speed, and resource optimization.<hr />- Despite advantages, adopting Docker involves tackling challenges, which will be discussed in subsequent deployments and experiences.","tags":"containerization devbox docker tooling virtualization","authors":"hnh vhbien","date":{"days":19822},"category":"playground > topics > devbox > story"},"563":{"file_path":"playground/topics/devbox/story/devbox-nix-and-our-devbox-adoption.md","title":"The overview into Nix & how we use Devbox @ Dwarves","description":"The overview into Nix & how we use Devbox @ Dwarves","spr_content":"- Devbox series discusses transitioning from Docker-centric workflows to Nix-powered, containerless development environments.  <hr />- Previous posts cover the pre-Docker development landscape and Docker adoption challenges.  <hr />- Devbox is a CLI tool that simplifies creating isolated, reproducible development shells powered by Nix.  <hr />- Nix offers a system of components: Nixpkgs (packages), NixDSL (configuration language), NixOS (OS).  <hr />- Nix builds packages in isolation, ensuring reproducibility across machines.  <hr />- Nix's declarative configuration supports reliable environment sharing, upgrades, and rollbacks.  <hr />- Unlike Docker, Docker build uses a linear, layer-by-layer process; any change rebuilds subsequent layers.  <hr />- Nix build constructs a dependency graph, using symlinks for atomic updates and simplified dependency management.  <hr />- Nix's graph model resembles toys connected in a dependency map, ensuring compatibility and coherence.  <hr />- Docker can access the internet during build, risking non-reproducibility due to external changes.  <hr />- Nix restricts external source mutability, guaranteeing consistent, deterministic outputs with the same input expressions.  <hr />- Nix produces identical outputs for repeated runs, ensuring build integrity and safer changes.  <hr />- Nix's layered image strategy uploads only changed layers, improving update efficiency.  <hr />- Nix's layered approach allows sharing dependencies across services, reducing bloat and duplication.  <hr />- Nix's complexity hinders easy adoption; migration is disruptive and effortful.  <hr />- Devbox simplifies Nix integration, enabling easy creation of isolated, OS-level environments without containers or VMs.  <hr />- Devbox functions like a package manager, managing OS packages via Nix, with access to 400,000+ packages.  <hr />- Devbox's interface is user-friendly, hiding Nix language complexity, suitable for team workflows.  <hr />- Case study: memo.d.foundation uses Devbox to enable reproducible environments for new members and content teams, reducing \"works on my machine\" issues.  <hr />- Devbox uses a configuration file to define dependencies; invoking `devbox shell` sets up environments rapidly.  <hr />- Devbox supports containerless service orchestration via Process-Compose, built in Nix, avoiding Docker overhead.  <hr />- Process-Compose manages services through `process-compose.yaml`, with commands for startup and shutdown, resembling Docker Compose.  <hr />- Multiple Devbox shells can run in parallel, but port conflicts arise without proper configuration.  <hr />- Ports can be customized directly in `process-compose.yaml` to enable parallel service runs.  <hr />- Overall, Nix and Devbox enhance development reproducibility, environment consistency, and efficiency, complementing or substituting Docker where appropriate.","tags":"containerization devbox docker tooling virtualization","authors":"hnh vhbien","date":{"days":19837},"category":"playground > topics > devbox > story"},"564":{"file_path":"playground/topics/devbox/story/devbox-local-development-env.md","title":"Using Devbox to setup local development environment","description":"Expanded section that focuses on Devbox and its practices on setup a local development environment.","spr_content":"- Evolution from virtualization to Docker, then to Nix and Devbox for development environments.<hr />- Programming = problem solving; engineering = longevity, collaboration, maintenance.<hr />- Scaling projects increases dependency management complexity.<hr />- Manual setup is unreliable, time-consuming, and error-prone; dependencies are inconsistent and untracked.<hr />- Containerization (Docker), virtual environments, and package managers address but have size, efficiency, and reproducibility issues.<hr />- Nix offers configuration, reproducibility, portability; however, it is complex and heavyweight.<hr />- Devbox provides a lightweight, simplified interface combining Nix’s power with ease of use.<hr />- Devbox creates isolated shells in project roots for dependency consistency.<hr />- `devbox init` and `devbox shell --pure` establish clean, minimal environments inheriting essential variables.<hr />- Installing dependencies via `devbox add` updates `devbox.json`, capturing environment state.<hr />- `devbox.json` declares packages, versions, initialization hooks, scripts for reproducibility.<hr />- Portability achieved by moving `devbox.json`; instantiation reproduces identical environment.<hr />- Integration with Makefile automates setup: install Devbox if missing, then `devbox install` and `devbox shell`.<hr />- Ensures onboarding is straightforward; minimizes setup errors.<hr />- Container runtime like Colima needed for Docker within Devbox, especially on first run (`--pure` mode).<hr />- Path adjustments and configuration tweaks (e.g., Docker creds, `PATH` export) manage environment quirks.<hr />- Practical use shown in project repositories; streamlines dependency management.<hr />- Overall: Devbox simplifies reproducible, isolated, portable local development, blending Nix’s rigor with user-friendly automation.<hr />- Goal: reduce manual overhead, improve consistency, accelerate onboarding, and support sustainable engineering practices.","tags":"containerization devbox docker tooling virtualization","authors":".hnh bievh","date":{"days":19887},"category":"playground > topics > devbox > story"},"565":{"file_path":"playground/topics/personas/mbti/ni.md","title":"Introverted Intuition (Ni)","description":"Discover the power of Introverted Intuition (Ni), the rare cognitive function known for deep insight, pattern recognition, and theoretical genius found in INTJs and INFJs.","spr_content":"- Primary roles: Collects conscious and subconscious info; synthesizes for impressions, insights, answers, theories.  <hr />- Sees deep causes, patterns, laws underlying sense data.  <hr />- Most prominent in: INTJs, INFJs; also in: ENTJs, ENFJs.  <hr />- Associated with: Deep perceptiveness, insight, deep “knowing,” theoretical genius, strong analysis, focus, advising, troubleshooting.  <hr />- Famous INJs: Plato, Jesus, Nietzsche, Jung, Hawking.  <hr />- Ni (Introverted Intuition): Rarest of 8 functions, seen as “cosmic signal” or “universe’s whisper.”  <hr />- Skilled at sensing “dark skies before the storm.”  <hr />- Prefers exploring the “iceberg’s hidden mass” beneath surface issues.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"566":{"file_path":"playground/topics/personas/mbti/se.md","title":"Extraverted Sensing (Se)","description":"Discover how Se types like ESTPs and ESFPs seek new sensory experiences and excel in hands-on activities, focusing on present details and physical appearances.","spr_content":"- Primary roles: perceive and mediate prompt responses; seek diverse sensory experiences; physically engage with environment.  <hr />- Prominent in: ESTPs, ESFPs; also in ISTPs, ISFPs.  <hr />- Associated traits: sensation-seeking, kinesthetic intelligence, eye for detail, attunement to style, hands-on skills, effortless performance.  <hr />- Famous ESPs: W. Bush, Lebron James, Beyoncé, Shakira, Donald Trump.  <hr />- Si vs. Se: Se attends to current environment, seeking novelty; Si recalls and integrates past experiences, focusing narrowly.  <hr />- Se gathers broad, concrete info; Si perceives through specific, historical context.  <hr />- Si concerned with physical appearance; Se more diverse and exploratory.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"567":{"file_path":"playground/topics/personas/mbti/ocean-model.md","title":"OCEAN model","description":"Discover how the Big Five personality traits (OCEAN) shape your behavior and personality, including openness, conscientiousness, extraversion, agreeableness, and neuroticism, with insights on change over time.","spr_content":"- Bài trắc nghiệm 16personalities thường tích hợp với Five Big (OCEAN), cho kết quả 5 ký tự.  <hr />- Openness: khả năng tưởng tượng, insight, yêu thích mới mẻ, trừu tượng, đa sở thích.  <hr />- Conscientiousness: thái độ làm việc, chuẩn bị, kế hoạch, chi tiết, thời gian hoàn thành.  <hr />- Extraversion: mức độ xã hội, năng lượng, giao tiếp.  <hr />- Agreeableness: cảm thông, quan tâm, giúp đỡ người khác.  <hr />- Neuroticism: kiểm soát cảm xúc, ứng xử với stress.  <hr />- Traits thay đổi theo tuổi, có tính di truyền.  <hr />- Behaviors = tính cách nền + yếu tố tình huống.  <hr />- Nguồn: verywellmind.com, wikipedia.","tags":"mbti model","authors":"","date":"","category":"playground > topics > personas > mbti"},"568":{"file_path":"playground/topics/personas/mbti/fe.md","title":"Extraverted Feeling (Fe)","description":"Discover the key traits of EFJ personality types, known for emotional expressiveness, strong communication, and motivating others, with examples like Martin Luther King and Dr. Phil McGraw.","spr_content":"- Primary roles: survey human emotions, values, morals; aim for interpersonal/group consensus; directly express feelings and judgments; instruct/motivate toward growth and excellence.  <hr />- Prominent in: ENFJs, ESFJs; also in: INFJs, ISFJs.  <hr />- Associated traits: interpersonal focus, emotional expressiveness, communication skills, talkativeness, social norm attunement, advice-giving.  <hr />- Famous EFJs: Martin Luther King, Dr. Phil McGraw, Frasier Crane.  <hr />- Fi vs. Fe: Fi concentrates on internal personal feelings; Fe centers on external social/emotional environment.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"569":{"file_path":"playground/topics/personas/mbti/history.md","title":"The History","description":"Discover the difference between MBTI personality types and Big Five traits, explaining how types categorize over 50% traits while Big Five measures personality degrees without strict types.","spr_content":"- MBTI originates from Carl Jung’s 1920s psychological theory and later frameworks.<hr />- Jung’s theory emphasizes dichotomous personality functions (e.g., Introversion vs. Extroversion).<hr />- The Five Big Personality Traits (Big Five) emerged as a dominant modern framework.<hr />- MBTI assigns a type based on dominant traits; if >50% for a trait, type assigned accordingly.<hr />- Types are categorical; the dominant trait influences the type label.<hr />- Traits are measured continuously (degrees); no rigid type boundaries.<hr />- Type indicates a dominant characteristic; trait degree reflects intensity.<hr />- MBTI simplifies trait degrees into binary categories for type assignment.<hr />- Big Five considers trait levels on a spectrum, not types.<hr />- Both frameworks aim to describe personality but differ in granularity and methodology.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"570":{"file_path":"playground/topics/personas/mbti/te.md","title":"Extraverted Thinking (Te)","description":"Discover how Te users like ENTJs and ESTJs make clear, logic-based decisions using facts and efficient systems, contrasting with Ti's internal thought organization.","spr_content":"- Book \"My True Type,\" pages 98-102, focuses on primary roles: expressing logical judgments, improving systems for rationality, efficiency, and effectiveness.  <hr />- Prominent in ENTJs, ESTJs; also in INTJs, ISTJs.  <hr />- Associated traits: explicit logic, precise language, bureaucracy, red tape, quantitative methods, \"Show me the numbers!\"  <hr />- Famous ETJs: Henry Ford, Bill O’Reilly.  <hr />- Ti (Introverted Thinking): internalizes, organizes personal judgments, reflective, conceptual.  <hr />- Te (Extroverted Thinking): outwardly directs, applies data, makes decisions based on external facts.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"571":{"file_path":"playground/topics/personas/mbti/perceiving-judging.md","title":"Perceiving vs Judging","description":"Discover the key traits of J and P personality types, including their decision-making styles, work preferences, and communication habits to better understand behavior and learning approaches.","spr_content":"- J Types exhibit outward firmness, directness, and opinionation; use declaratives.  <hr />- They assert views, convey seriousness, and establish closure.  <hr />- Others seek their answers and rely on their decision-making.  <hr />- View planning as risk reduction; aim for desirable outcomes through it.  <hr />- Share convergent beliefs and worldview, reinforcing shared understanding.  <hr />- Prefer structure, predictability, traditional teaching methods (lectures, direct instruction).  <hr />- Not inherently tidy, organized, uptight, or punctual; less restless, especially IJs, and less activity-dependent.  <hr />- P Types are open, receptive, adaptable outwardly; may avoid direct statements, use hints or tangential speech (especially IPs).  <hr />- Dislike detailed planning, especially involving others; favor leaving things open-ended.  <hr />- Take longer to reach closure, decision, or firm beliefs.  <hr />- Recognized as good listeners, often non-judgmental.  <hr />- Skeptical of external laws; prefer individual rule-making.  <hr />- Desire variety, novelty, informal, minimal-structure environments.  <hr />- Self-teach and facilitate learning by example; not necessarily messy, disorganized, or procrastinating.  <hr />- Restlessness manifests as seeking breadth of activities, especially in EPs.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"572":{"file_path":"playground/topics/personas/mbti/ne.md","title":"Extraverted Intuition (Ne)","description":"Discover how Ne users like ENTPs and ENFPs excel at brainstorming, creative thinking, and exploring endless possibilities, contrasting with Ni's deep, focused insight and structured approach.","spr_content":"- Ne (extraverted intuition) broadly explores, synthesizes, and expresses ideas, associations, and possibilities.  <hr />- Ne is prominent in ENTPs and ENFPs; also in INTPs and INFPs.  <hr />- Ne is linked to brainstorming, ideation, artistic creativity, divergent thinking, holistic associations, and spotting promising ventures.  <hr />- Famous Ne users: Benjamin Franklin, Walt Disney, Steve Jobs, Ellen DeGeneres, Jon Stewart, John Edward.  <hr />- Ne's hallmark: endless possibilities, exploration over conclusions, decision difficulty.  <hr />- Ne manifests as open-minded, receptive, creative, inquisitive, playful, distractible.  <hr />- Ne loves playing with words, ideas, quirks; can lead to discomfort around J types.  <hr />- Ne acts as a mental trampoline, encouraging free association and connection.  <hr />- Ne relies heavily on circulating ideas, trending theories, and name dropping to support thoughts.  <hr />- NPs rely on contrasts and comparisons.  <hr />- Ne values breadth, quick access to many ideas, and surface-level connectivity.  <hr />- Ni (introverted intuition) penetrates deep, perceives structured hierarchies rather than webs.  <hr />- Ni is more focused internally, deeply analytical, less surface-oriented.  <hr />- Ne shares information outwardly; Ni gathers inward.  <hr />- Ne “knows a little about a lot,” while Ni “knows a lot about a little.”  <hr />- Ne excels in verbal expression; Ni struggles with verbalizing insights.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"573":{"file_path":"playground/topics/personas/mbti/thinking-feeling.md","title":"Thinking vs Feeling","description":"Learn how Thinkers use logic and efficiency in decision-making while Feelers rely on emotions and compassion to balance work and relationships. Discover key personality traits now.","spr_content":"- Thinkers prioritize logic, strategy, utility, and classification; aim for rational efficiency.  <hr />- Thinkers detach from emotions, focus on impersonal decision-making.  <hr />- Thinkers are less concerned with others' needs, concentrate on their work and interests.  <hr />- Feelers incorporate tastes, feelings, and sensory experiences into reasoning; value enriching life’s sensory and emotional dimensions.  <hr />- Feelers are highly attuned to their own and others’ feelings; tend to be caring and nurturing.  <hr />- Feelers balance work, relationships, and caregiving; seek harmony through emotional connection.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"574":{"file_path":"playground/topics/personas/mbti/functions.md","title":"Cognitive functions stack","description":"Discover how cognitive functions explain the deeper traits behind MBTI personality types and learn how to calculate your unique cognitive function stack for better self-awareness.","spr_content":"- Personality types (PT) reveal surface traits, e.g., INFP.  <hr />- Full descriptions on 16personalities show basic characteristics: I, N, F, P.  <hr />- Deep roots of personality traits lie in cognitive functions.  <hr />- Cognitive functions explain why traits manifest as they do and influence additional tendencies.  <hr />- 8 MBTI cognitive functions derived from preferences: I/E, N/S, T/F, J/P.  <hr />- I functions (Ni, Si, Ti, Fi) are introverted, internal; E functions (Ne, Se, Te, Fe) are extroverted, external.  <hr />- P (perceiving) functions (Ne, Se, Si, Ni) focus on information intake; J (judging) functions (Te, Fe, Ti, Fi) focus on information processing.  <hr />- Each personality (PT) has a fixed 4-function stack: dominant, auxiliary, tertiary, inferior, ordered by strength.  <hr />- Dominant and auxiliary functions are outward-facing; tertiary and inferior reveal weaknesses and blind spots.  <hr />- Example: INFP stack is Fi, Ne, Si, Te.  <hr />- Function stack calculation rule: based on I/E, N/S, and P/J, forming patterns like E-I-E-I or I-E-I-E.  <hr />- Extraverted types display dominant functions openly; introverted types keep them internal, auxiliary outward.  <hr />- The second and third letters specify the first two functions (N/F or S/T).  <hr />- Last letter (P/J) indicates whether perceiving (Ne, Se) or judging (Te, Fe) functions lead.  <hr />- Opposing function pairs: Si–Ne, Ni–Se, Ti–Fe, Fi–Te define internal-outer contrasts.  <hr />- Personality stacks form internal worlds, dictating behavior, strengths, limitations, and potential growth areas.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"575":{"file_path":"playground/topics/personas/mbti/intuition-sensing.md","title":"Intuition vs Sensing","description":"Discover the key traits of Sensors and Intuitives, highlighting how Sensors excel in practical details while Intuitives thrive on abstract ideas and creative connections.","spr_content":"- Sensors focus on the present, detail, practicality, routines, and concrete activities; they excel in implementation.<hr />- Sensors may neglect reflection, especially ESP types; they prioritize tangible facts over abstractions.<hr />- Sensors are lovers of sensory experiences—new sights, tastes, sensations; or familiar routines and traditions.<hr />- Sensors are oriented toward facts, details, and particulars; connections matter less to them.<hr />- Sensors are most effective during action and execution phases of creation.<hr />- Intuitives dwell in thoughts, ideas, and imagination; their minds are often elsewhere.<hr />- Intuitives tend to struggle with daily concrete details, especially INJs and ENPs.<hr />- Intuitives prefer theoretical, abstract, and speculative work; they enjoy pattern recognition and language-based ideas.<hr />- Intuitives value connections—abstract linkages—more than the objects themselves.<hr />- Intuitives are most effective at idea generation, insight, and the initial stages of creativity.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"576":{"file_path":"playground/topics/personas/mbti/strategies-for-accurate-typing.md","title":"Strategies for Accurate Typing","description":"Discover how to understand your personality type using the function stack framework through tests, self-reflection, and discussion, while exploring childhood memories and balancing inconsistencies for deeper insight.","spr_content":"Framework (function stack) underpins self-awareness and type understanding.  <hr />Testing and self-reflection validate the framework.  <hr />Discussion with others deepens comprehension and perspective.  <hr />Childhood memories link to core functions and Type development.  <hr />Least like types reveal blind spots; least used functions show non-preferred tendencies.  <hr />Enantiodromia signifies turning traits to their opposites, balancing polarization.  <hr />Inconsistencies require perspective-shifting to reconcile contradictions.  <hr />Avoid over-focusing on details to maintain holistic understanding.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"577":{"file_path":"playground/topics/personas/mbti/si.md","title":"Introverted Sensing (Si)","description":"Discover how Introverted Sensing (Si) shapes ISTJs and ISFJs by valuing routines, traditions, and careful responsibility, highlighting their focus on preserving trusted habits and past experiences.","spr_content":"- Book: \"My True Type,\" pages 79-85.  <hr />- Primary role: To retain, condense, and recollect information; to consult past experiences, routines,, and traditions; to perceive inner bodily sensations.  <hr />- Most prominent in: ISTJs & ISFJs; also prominent in ESTJs & ESFJs.  <hr />- Associated with: Routines, habits, valuing and preserving \"the tried and true,\" material conservatism, high regard for traditions and authority.  <hr />- Famous ISJs: Dick Cheney, Martin Luther, Mother Theresa, George H.W. Bush.  <hr />- Si (Sensing introverted) focuses on the routine and familiar, emphasizing careful, conservative approach.  <hr />- Si draws on existing resources, beliefs, or practices instead of exploring new ones.  <hr />- ISJs take responsibilities seriously, down to the last detail.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"578":{"file_path":"playground/topics/personas/mbti/preferences.md","title":"8 preferences","description":"Learn about Personality Types and MBTI to better understand yourself and others, improve interactions, and gain insights for personal growth and career direction using four key preference pairs.","spr_content":"- Learning Personality Type (PT) enhances self-awareness and understanding of others.  <hr />- PT reveals interaction patterns and thought processes.  <hr />- PT provides insights for life decisions, including career choices.  <hr />- No PT is inherently superior; all are equal in value.  <hr />- PT comprises 4 dichotomous preferences:  <hr />  - Introversion (I) vs. Extroversion (E): mindset orientation.  <hr />  - Sensing (S) vs. Intuition (N): informational focus.  <hr />  - Thinking (T) vs. Feeling (F): decision-making style.  <hr />  - Perceiving (P) vs. Judging (J): tactical approach.  <hr />- Each type is a combination of one preference from each dichotomy.  <hr />- Positions:  <hr />  - 1st: I or E (mind orientation).  <hr />  - 2nd: S or N (energy focus).  <hr />  - 3rd: T or F (nature of decision).  <hr />  - 4th: P or J (tactics).  <hr />- Total types: 16, derived from 2 choices per dichotomy (2x2x2x2).","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"579":{"file_path":"playground/topics/personas/mbti/fi.md","title":"Introverted Feeling (Fi)","description":"Discover the IFP personality type known for deep personal values, emotional sensitivity, and caring nature, common in INFPs and ISFPs who champion justice and individuality.","spr_content":"- Primary roles of IFPs: Explore and refine personal tastes, feelings, and values.  <hr />- They build a strong sense of personal uniqueness through these explorations.  <hr />- Maintain inner emotional and moral order as core function.  <hr />- Invest emotionally in limited circle: persons, animals, or interests.  <hr />- Prominent in INFPs & ISFPs; also notable in ENFPs & ESFPs.  <hr />- Associated traits include: fighting for underdogs, emotional restraint, nuanced morals, nurturing, caregiving, sensitivity to injustice.  <hr />- Famous IFPs: Thoreau, Rousseau, Kierkegaard, Camus, Virginia Woolf, Van Gogh, Luke Skywalker, Salinger, Austen, Dylan.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"580":{"file_path":"playground/topics/personas/mbti/ti.md","title":"Introverted Thinking (Ti)","description":"Explore the traits of ITP personalities like INTPs and ISTPs, known for deep logic, skepticism, and independence, with famous examples including Einstein and Bill Gates.","spr_content":"- \"My True Type,\" pages 92–97, focuses on examining practical and conceptual issues through deep, implicit, nuanced logic.  <hr />- Emphasizes development and refinement of subjective methods, strategies, and concepts.  <hr />- Primary roles: analytical, introspective, inventive, strategic thinking.  <hr />- Most prominent in: INTPs and ISTPs.  <hr />- Also prominent in: ENTPs and ESTPs.  <hr />- Associated traits: deep skepticism, tacit (implicit) logic, self-regulation, self-optimization, personal independence, autonomy.  <hr />- Famous ITPs: Einstein, Bill Gates, Henri Bergson, Robert Pirsig, Robert Nozick, Ken Wilber, Lance Armstrong.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"581":{"file_path":"playground/topics/personas/mbti/introversion-extraversion.md","title":"Introversion vs Extraverion","description":"Discover key differences between introverted and extraverted traits, including mindset, behavior, and lifestyle preferences, to better understand your Myers-Briggs personality type.","spr_content":"- Introverts focus inward, prioritizing self-awareness and internal reflection.  <hr />- They tend toward independence, caution, and forethought, especially IJs, who \"look before they leap.\"  <hr />- Introverts favor a slow, quiet, reflective life, and can become overwhelmed by external stimuli.  <hr />- They often feel alien, uncomfortable, or inadequate in the external world, especially ISPs who are less talkative.  <hr />- They are more self-reflective, self-aware, and need extended private time.  <hr /><hr />- Extraverts focus outward, driven by external stimuli and social engagement.  <hr />- They are collective-minded, acting quickly (\"act now, think later\"), especially EPs, who are assertive and risk-tolerant.  <hr />- They enjoy busy, on-the-go lifestyles and feel at home in the world.  <hr />- Extraverts are often more talkative, especially ENJs, and more reflective of the external environment.  <hr />- They require less private time and are less easily overwhelmed by external stimuli.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"582":{"file_path":"playground/topics/blockchain/web3-development-with-foundry.md","title":"Web3 Development with Foundry","description":"Provides a comprehensive guide to Web3 development using Foundry, a modern, Rust-based toolkit for Ethereum smart contract development.","spr_content":"- Foundry is a high-performance, portable, modular Ethereum toolkit written in Rust  <hr />- Main components: Forge (testing), Cast (interaction), Anvil (local node)  <hr />- Rust architecture enables faster testing than JavaScript (e.g., Hardhat)  <hr />- Favorable among security teams for Solidity direct work, avoiding translation layers  <hr />- 2024 adoption surge, especially for high-value, performance-critical contracts  <hr />- Terminal-based workflow excludes JavaScript overhead, aligns with close-to-metal development  <hr />- Lack of ESM support in Hardhat caused friction; Foundry’s language-agnostic ESM approach maintains consistent modern stack  <hr />- Core benefits include:  <hr />  - Development speed: 1.5–11x faster than Hardhat, up to 335x faster than Dapptools  <hr />  - Modern developer experience: built-in fuzzing, quick feedback, precise debugging, gas optimization  <hr />  - Flexibility: integrates with existing toolchains and multiple EVM chains, suitable for CI/CD pipelines  <hr />- Practical uses: dependency management via remappings, upgradeable ERC-1155 contract, comprehensive testing, deployment scripting  <hr />- Uses UUPS pattern for upgradeable contracts, with Solidity tests verifying balances, minting, transfers  <hr />- Deployment scripts deployed implementation and proxy, logging addresses; supports local and testnet deployments  <hr />- Lifecycle: from development (code, tests) to deployment with separate steps and tooling  <hr />- Limitations include:  <hr />  - No multi-network config files, more manual cross-chain management  <hr />  - Weaker debugging tools compared to Truffle’s step debugger  <hr />  - Smaller plugin ecosystem, often requiring custom tooling  <hr />  - Solidity tests present a steeper learning curve for web developers  <hr />  - Documentation gaps and community resources less mature than Hardhat's ecosystem  <hr />- Switching from Hardhat to Foundry improved development:  <hr />  - Test running time reduced from 7 minutes to 40 seconds  <hr />  - Solidity tests enhanced precision and eliminated translation errors  <hr />- Foundry's investment pays off in speed, precision, and contract reliability for teams willing to learn its paradigm","tags":"blockchain evm foundry web3","authors":"haongo1","date":{"days":20179},"category":"playground > topics > blockchain"},"583":{"file_path":"playground/topics/blockchain/polygon-zkevm-architecture.md","title":"Polygon zkEVM architecture","description":"This article provides an overview of the Polygon zkEVM architecture, including its main components, how it works, and its benefits.","spr_content":"- Efficiency is the primary goal of Polygon zkEVM architecture, focusing on optimizing proof generation and data handling.  <hr />- Incentivize most efficient aggregators through a decentralized auction-based Proof of Efficiency (PoE) consensus mechanism, utilizing token bids to select batch creators.  <hr />- Move all computation off-chain; only zk-proof data on-chain, enhancing scalability and cost reduction.  <hr />- Maintain decentralization of bridge operations via multi-layered components and permissionless participant roles.  <hr />- zkNode software enables any zkEVM node roles: state synchronization, sequencing, aggregation, or participation as a full node, with optional role adjustments.  <hr />- Synchronizer, Sequencer, Aggregators, and RPC interfaces form the Node ecosystem for network operation and data exchange.  <hr />- zkProver, comprising state machine executor, STARK proof builder, SNARK proof builder, enforces polynomial constraints for batch validity, accelerating proof creation with cryptographic primitives.  <hr />- LX-to-Ly Bridge smart contracts facilitate asset transfers and claims across layers, managing multiple exit roots via a global exit root manager.  <hr />- Proof of Efficiency (PoE) solves validator decentralization and permissionlessness by leveraging zk-STARK proofs for speed, attested via zk-SNARKs for size and gas efficiency, reducing gas from 5M to 350k.  <hr />- Sequencer batches user transactions into L2 batches, submitting transaction data on L1 as calldata, enabling network synchronization and state updates.  <hr />- Aggregators collect transactions, generate zk-proofs, and submit proofs for validation, competing for first proof submission to create the accepted state update.  <hr />- Incentive structures reward Sequencers for transaction throughput and Aggregators for proof creation, balancing fees and costs: Sequencers earn from user fees; Aggregators profit if proof fees exceed operational costs.  <hr />- zkEVM design leverages zk folklore to minimize proof size, reduce finality time, and lower gas costs, utilizing specialized cryptographic primitives.  <hr />- zkProver components include Main State Machine Executor, STARK recursion, CIRCOM library, and zk-SNARK generator, enabling scalable proof architecture.  <hr />- Bridge flow involves globalExitTree and mainnet exit trees on L1, with L2 managing exit roots across networks; supports transfer and claim operations between rollups.  <hr />- RPC interface ensures Ethereum compatibility for application integration, supporting transaction pool management and contract interaction.  <hr />- State uses Merkle trees linked to database backends, ensuring block and transaction integrity, and storing smart contract code internally for EVM processing.","tags":"blockchain evm polygon zk-rollup","authors":"thanhpn","date":{"days":19360},"category":"playground > topics > blockchain"},"584":{"file_path":"playground/topics/blockchain/¶ Distributed systems.md","title":"Distributed systems","description":"This article provides an overview of distributed systems in blockchain technology, including their definition, advantages, and how they work.","spr_content":"- Distributed systems are software networks with components on different computers working as a single entity through message exchanges.  <hr />- Distributed computing is decentralized parallel computing with varied hardware, languages, and OS; akin to geographically dispersed clustering.  <hr />- Most internet applications are distributed systems, enabling resource scaling, fault tolerance, and component modularity.  <hr />- Benefits include resource enhancement, fault resilience, and independent development of complex, multi-team systems.  <hr />- Distribution proximity to users reduces latency and improves quality of service.  <hr />- Advantages of distributed systems: scalability (horizontal and vertical), fault tolerance (reliability), high availability, high efficiency, and manageability.  <hr />- Machine failures: fail-stop (crash), fail-recover (reboot), Byzantine (arbitrary or malicious behavior).  <hr />- Network issues: partitioning caused by switch or wire failures disconnects system parts, hindering communication.  <hr />- Blockchain exemplifies distributed ledger technology, replicating data across all nodes.  <hr />- Nodes join blockchain networks by meeting hardware and connection requirements; high participation demands significant computing power, especially in proof-of-work systems like Bitcoin.  <hr />- Blockchain software (e.g., Ethereum Virtual Machine) executes contracts in an isolated, deterministically consistent environment, ensuring network consensus.  <hr />- EVM is Turing-complete, enabling complex applications like tokens, DeFi, DAOs, games, and prediction markets.  <hr />- Blockchain scalability contrasts with distributed computing—limited by transaction throughput and consensus mechanisms rather than pure processing power.  <hr />- Transaction speed in blockchain is constrained by the need for nodes to reach agreement, leading to scalability challenges.  <hr />- Increasing node count raises difficulty, reducing contention but increasing computational load; performance declines as every node processes all smart contracts.  <hr />- Ethereum 1.0 processes ~25 transactions/sec; Ethereum 2.0 aims over 100,000; Visa handles ~45,000.  <hr />- Solutions like Layer 2 improve transaction throughput, addressing scalability bottlenecks.","tags":"blockchain distributed-systems foundational-topics","authors":"thanhpn","date":{"days":19159},"category":"playground > topics > blockchain"},"585":{"file_path":"playground/topics/blockchain/blockchain-for-designers.md","title":"Blockchain For Designers","description":"Learn how blockchain technology solves trust issues with decentralization, transparency, and immutability, and discover key design principles to create user-friendly blockchain products.","spr_content":"- Blockchain and Bitcoin are trending topics, media favorites due to their trust-solving potential.<hr />- Blockchain addresses trust issues by enabling transparency and security without reliance on third parties.<hr />- Centralized databases pose risks of control and data manipulation; Blockchain's decentralized structure mitigates this.<hr />- Transparency emerges from network consensus, where transaction data is validated collectively.<hr />- Blockchain is a chain of blocks linked by cryptographic hashes, forming an unbreakable sequence.<hr />- Transactions involve creating, publishing, aggregating into blocks, and confirming via consensus (51%) for permanence.<hr />- It functions as a distributed digital ledger, publicly shared but cryptographically private.<hr />- Core values include decentralization, transparency, and immutability, fostering trustworthiness.<hr />- Many perceive Blockchain as complex, magic, or purely monetary, hindering user adoption.<hr />- Effective product design must simplify Blockchain for users, emphasizing benefits like trust, safety, and utility.<hr />- The role of the designer is that of a \"Trust Architect,\" facilitating user confidence and understanding.<hr />- Users encounter jargon, technical data, and slow processes; these must be translated into clear, visual explanations.<hr />- Use timelines, summaries, dashboards, and visual flows to ease understanding.<hr />- Consistent visual and communication styles foster familiarity, trust, and ease of learning.<hr />- Colors and UI should evoke stability, avoiding stress-inducing signals.<hr />- Clear language, accessible messages, and status updates reduce cognitive load and build trust.<hr />- Since Blockchain transactions are one-way with no retraction, notifications and confirmations are critical.<hr />- Guidance through onboarding, tips, feedback channels, and transparency encourage user engagement.<hr />- UX design must mask complexity, highlight benefits, and make trust-building intuitive.<hr />- Continuous feedback loops enhance the product, ensuring it adapts to user needs.<hr />- Blockchain’s promise is transparency and efficiency; design challenges are critical for broader adoption.<hr />- Effective UX creates valuable, comfortable applications that allow users to forget underlying complexity.<hr />- Staying updated on emerging technologies is essential for sustainable, user-centric Blockchain product design.","tags":"blockchain design","authors":"","date":{"days":18386},"category":"playground > topics > blockchain"},"586":{"file_path":"playground/topics/blockchain/using-foundry-for-evm-smart-contract-developement.md","title":"Using Foundry for EVM smart contract development","description":"Introduce Foundry's core functionalities & practices to develop, test and deploy EVM smart contracts","spr_content":"- Foundry is a high-performance all-in-one development toolkit for smart contracts, built with Rust for speed.  <hr />- It integrates writing, testing, deploying, and scripting in a single environment, reducing external dependencies.  <hr />- Native Solidity scripting simplifies automation, eliminating need for external languages.  <hr />- The core CLI commands are `forge` (build, test, deploy) and `cast` (interaction).  <hr />- Dependency management defaults to Git submodules but Solder offers a Solidity-native alternative, similar to npm.  <hr />- Foundry's ecosystem includes Anvil (local testnet), Chisel (Solidity REPL), Forge (contract build/test/deploy), and Cast (contract interaction).  <hr />- For project setup, structure includes `src/contracts`, `src/scripts`, `src/test`, and `foundry.toml`.  <hr />- Configuration in `foundry.toml` manages project paths, RPC endpoints, and Etherscan API keys, supporting Mainnet and Sepolia.  <hr />- Dependencies like `forge-std` and OpenZeppelin contracts are installed via `foundry.toml` and `forge soldeer install`.  <hr />- `remappings.txt` ensures correct library path resolution.  <hr />- Sample contracts include `IcySwap`, an ERC20 token (`ICY` and `USDC`), illustrating swapping logic with conversion rates and management functions.  <hr />- Testing leverages Forge's cheatcodes (e.g., `vm.startPrank`) for simulating multiple accounts, assertions, and debugging.  <hr />- Tests can be run with verbose traces (`forge test -vvvv`) for internal call insights.  <hr />- Deployment scripts use Forge's scripting environment, retrieving private keys with `vm.envUint()` and broadcasting transactions with `vm.startBroadcast()`.  <hr />- Deployment to Sepolia involves verifying contracts via Block Explorer API keys set in a `.env` file, and scripts include setting addresses and deployment parameters.  <hr />- Foundry supports advanced features like Fork testing, enabling simulations on mainnet forks for realistic testing.  <hr />- Its versatility extends beyond basic tasks to reproducing historic DeFi hacks and security audits.  <hr />- Key references include Foundry documentation, cheat sheet, and community repositories like DeFiHackLabs.","tags":"blockchain evm foundry","authors":"haongo1","date":{"days":19923},"category":"playground > topics > blockchain"},"587":{"file_path":"playground/topics/blockchain/multisign-wallet.md","title":"Multisign wallet","description":"A multisign wallet is a type of digital wallet that requires multiple signatures to authorize transactions. This article provides an overview of multisign wallets, how they work, and their benefits.","spr_content":"- Blockchain wallets typically generated by a single private key; controls all assets and transactions.<hr />- Single-key control poses risks: theft, loss, death—assets become inaccessible if key compromised or owner dies.<hr />- Multisig Wallet introduces shared control via multiple signatures, reducing single-point failure.<hr />- Multisig Wallet is a smart contract enabling approval logic based on enough signatures.<hr />- Common configuration examples: 2-of-3, 3-of-4, requiring a subset of total keys to authorize transactions.<hr />- Works like a Safe with multiple locks and keys; funds only accessible when required signatures are collected.<hr />- Acts as an additional security layer, especially for organizational assets or joint control.<hr />- Enables dispute resolution: majority consensus determines approval; can include third-party \"ruling\" parties.<hr />- Used by organizations: boards, multi-party agreements, to enforce majority decisions.<hr />- Advantages: enhances safety, allows multi-device confirmations, supports dispute resolution, enforces collective decision-making.<hr />- Disadvantages: complicated setup, risk of losing keys, still vulnerable to new exploits, additional gas costs, limited smart contract operations.<hr />- Building a minimum multisig involves deploying a smart contract, e.g., based on Solidity example code.<hr />- Multiple implementations available: ConsenSys' simple version, Gnosis' advanced, BitGo's ERC20-compatible, Ethereum Dapp's, but parity's is deprecated due to security issues.<hr />- Security relies on correct setup, multi-party consent, and ongoing audits; not 100% hacker-proof.<hr />- Multisig wallets transform single-private-key dependency into collective approval, balancing security and complexity.","tags":"blockchain multisign-wallet","authors":"thanhpn","date":{"days":19214},"category":"playground > topics > blockchain"},"588":{"file_path":"playground/topics/blockchain/dollar-cost-averaging.md","title":"Dollar Cost Averaging (DCA)","description":"Dollar-Cost Averaging (DCA) is a simple yet powerful investment strategy that can help you minimize risk and maximize long-term returns. With DCA, you invest a fixed amount of money into an asset (crypto, stocks, funds, etc.) at regular intervals, regardless of the current market price. The goal is to accumulate as much of the asset as possible over time. This strategy is suitable for all investors, especially beginners.","spr_content":"- DCA (Dollar-Cost Averaging) is an investment strategy involving fixed periodic investments regardless of market price.  <hr />- DCA minimizes risk and maximizes long-term returns by averaging out purchase costs over time.  <hr />- It suits all investors, especially beginners, for assets like crypto, stocks, and funds.  <hr />- It involves regular, scheduled purchases, reducing exposure to market volatility.  <hr />- In practice, DCA involves choosing assets, investment amounts, frequency, loss thresholds, and profit points; transaction fees may increase.  <hr />- DCA in a bull market involves buying more when prices are low, aiming to profit from rising markets; risk is buying high, potential gains depend on market trends.  <hr />- DCA in a bear market involves buying more during dips, lowering average cost, but timing the lows is challenging and risky.  <hr />- Long-term DCA invests steadily over years, minimizing short-term worries, but short-term losses are possible.  <hr />- Flexible DCA adjusts investment amounts based on market conditions, increasing in downturns and decreasing in upswings; requires market understanding.  <hr />- DCA is effective mainly for low-risk, liquid assets like Bitcoin, Ethereum, ETFs, and index funds; not suitable for high-risk assets.  <hr />- Common pitfalls include leverage trading, investing in low-liquidity altcoins, altcoin/BTC pairs, or meme coins; these amplify risk.  <hr />- DCA should be used with money one can afford to lose, especially during downturns.  <hr />- DCA is a disciplined, long-term approach; short-term market fluctuations should not dissuade investors from staying consistent.","tags":"blockchain crypto","authors":"anna","date":{"days":19846},"category":"playground > topics > blockchain"},"589":{"file_path":"playground/topics/blockchain/liquidity-pool.md","title":"Liquidity pool","description":"A comprehensive guide to understanding liquidity pools in blockchain, covering their definition, functionality, the role of automated market makers (AMM), arbitrage, pool depth, slippage, how to provide liquidity, and the concept of impermanent loss. This article provides insights for both beginners and experienced users in decentralized finance (DeFi)","spr_content":"- Liquidity pool is a smart contract-locked token reservoir facilitating swaps.  <hr />- Liquidity equals ease of token exchange.  <hr />- Anyone can supply tokens, earning a share of trading fees proportional to stake.  <hr />- Pools underpin Decentralized Exchanges (DEXs) via Automated Market Maker (AMM) systems.  <hr />- Market price determined by the invariant formula: \\( x \\times y = k \\), where \\( x, y \\) are token balances; \\( k \\) constant.  <hr />- Example: ETH-DAI pool with 10 ETH and 1,000 DAI; \\( k=10,000 \\).  <hr />- Buying ETH reduces ETH in the pool, increases DAI to maintain \\( k \\).  <hr />- To buy 1 ETH, deposit DAI so that \\( (10-1) \\times (1000 - y) = 10,000 \\), resulting in approximately 111.11 DAI needed.  <hr />- Result: post-transaction, pool has 9 ETH and ~1111.11 DAI.  <hr />- Arbitragers correct price discrepancies, moving AMM prices towards external market prices.  <hr />- Arbitrage exploits any divergence between pool price and market price.  <hr />- Slippage is price deviation caused by trade size relative to pool depth.  <hr />- Deeper pools (larger \\( k \\)) mean less slippage; e.g., with 100 ETH and 10,000 DAI, buying 1 ETH costs about $101, roughly 1% slippage.  <hr />- Liquidity providers (LPs) supply token pairs, maintaining 50-50 ratio of tokens, e.g., $2,500 ETH + $2,500 DAI for $5,000 total.  <hr />- Providing liquidity earns LP tokens representing share; fees from trades are distributed proportionally.  <hr />- LPs may experience impermanent loss: unprofitable price movement compared to simply holding assets.  <hr />- Example: ETH price rises from $100 to $120; LP with initial 100 ETH and 10,000 DAI faces potential loss.  <hr />- When ETH price increases, LP positions revalue: \\( x = \\sqrt{\\frac{k}{\\text{ETH price}}} \\), \\( y = \\sqrt{k \\times \\text{ETH price}} \\).  <hr />- If someone supplied 1 ETH + 100 DAI, upon ETH rising to $120, they’d withdraw approximately 0.9129 ETH and 109.54 DAI.  <hr />- Total value upon withdrawal: about $219.09; holding ETH instead would be ~$220—impermanent loss.  <hr />- Impermanent loss occurs until LP withdraws, at which point it becomes permanent.","tags":"blockchain liquidity","authors":"hienld","date":{"days":19075},"category":"playground > topics > blockchain"},"590":{"file_path":"playground/topics/blockchain/blockchain-oracle.md","title":"Blockchain oracle","description":"Learn how blockchain oracles solve the oracle problem by connecting smart contracts with real-world data, enabling secure input, output, cross-chain communication, and off-chain computing.","spr_content":"- Blockchains cannot natively access external data or systems, leading to the oracle problem.  <hr />- The oracle problem prevents smart contracts from verifying real-world events, triggering external actions, and providing full functionality.  <hr />- A blockchain oracle is a third-party service bridging smart contracts with the outside world, both inputting and outputting data.  <hr />- Connectors between blockchain and real-world inputs/outputs: oracles enable external data flow into and out of blockchain ecosystems.  <hr />- Input oracles fetch off-chain data (e.g., prices) for smart contract use; exemplified by Chainlink Price Feeds.  <hr />- Output oracles send commands from smart contracts to off-chain systems to trigger actions.  <hr />- Cross-chain oracles facilitate interoperability by reading and writing between different blockchains, supporting data and asset transfer.  <hr />- Compute-enabled oracles perform off-chain computations securely when blockchain constraints hinder on-chain processing.  <hr />- Notable blockchain oracles include Chainlink, Band Protocol, Teller, DIA, and API3.  <hr />- Oracles expand blockchain functionality by solving the connectivity gap inherent in native blockchain design.","tags":"blockchain oracle","authors":"khacvy","date":{"days":19068},"category":"playground > topics > blockchain"},"591":{"file_path":"playground/topics/blockchain/starknet-architecture.md","title":"StarkNet architecture","description":"This article provides an overview of StarkNet's architecture, including its main components, how it works, and its transaction lifecycle. It also covers the messaging mechanism between Layer 1 and Layer 2, as well as the node clients used in the StarkNet network.","spr_content":"- StarkNet is a layer 2 blockchain leveraging ZK rollups for scalability.<hr />- It offers StarkDex technology, supporting applications like dYdX, ImmutableX, Sorare.<hr />- Core mechanism: reduce on-chain computations, store data off-chain, verify via proofs.<hr />- Balance data stored using Merkle trees with roots on-chain for integrity.<hr />- System components: user accounts (smart contracts with social recovery, e.g., Argent X), sequencer, prover, full node, verifier, StarkNet core.<hr />- User accounts enable offline auth, social recovery instead of seed phrases.<hr />- Sequencer validates off-chain transactions, manages orders, bundles into blocks, runs Cairo VM akin to EVM.<hr />- Prover generates cryptographic proofs (STARKs) of sequencer computations, involving execution traces.<hr />- Full node records all transactions, tracks global state, shares data peer-to-peer.<hr />- Verifier (smart contract on Ethereum) checks on-chain proofs from Prover, ensures validity.<hr />- StarkNet Core on Ethereum stores global state updates, initiates new transaction sets upon proof verification.<hr />- Process steps: batching transactions, hashing and compressing state updates with class hashes and Merkle roots, generating STARK proofs, on-chain verification.<hr />- Messaging protocols enable asynchronous interaction: L2→L1 and L1→L2.<hr />- Transaction lifecycle: submitted to sequencer, batch generated, state changes listed, proof produced, verified on-chain, state updated.<hr />- StarkNet nodes operate via PathFinder or Juno clients, similar to Go Ethereum nodes.<hr />- Architectural overview emphasizes off-chain computation, on-chain verification, and cryptographic proofs ensuring trustless security.","tags":"blockchain evm stark-net zk-rollup","authors":"thanhpn","date":{"days":19352},"category":"playground > topics > blockchain"},"592":{"file_path":"playground/topics/blockchain/build-custom-ai-agent-with-elizaos.md","title":"Build custom AI Agent with ElizaOS","description":"This guide shows how to build a custom AI Agent with ElizaOS.","spr_content":"- DeFAI merges decentralized finance (DeFi) with artificial intelligence (AI) to optimize financial services.<hr />- AI enhances DeFi via predictive analytics and automation.<hr />- ElizaOS enables building persistent, multi-platform AI personalities.<hr />- ElizaOS architecture manages message flow: reception, processing, context, action, response, reflection, memory, delivery.<hr />- Core concepts for custom AI: Characters (personalities), Agents (runtime behavior), Providers (context injection), Actions (behavior execution).<hr />- Characters define consistent personas, integrating style, knowledge, sample dialogues, and lore.<hr />- Example character \"YieldMaxoor\" embodies a seasoned DeFi trader with slang, background, and expertise.<hr />- Agents combine character profile, database, model provider, evaluators, plugins, and security tokens.<hr />- Actions perform external or internal tasks, validating and handling messages.<hr />- Providers supply real-time data like current UTC time.<hr />- Building a DeFAI Agent involves character design, agent configuration, and integration of data sources and behaviors.<hr />- The ICY Swap AI Agent exemplifies a specialized DeFAI with custom character and plugins for token exchanging.<hr />- ElizaOS facilitates scalable, context-aware AI agents for decentralized finance tasks.<hr />- Frameworks and plugins extend potential use cases: market analysis, user transactions, trend detection.<hr />- This setup enables autonomous, intelligent, personalized financial assistants across platforms.","tags":"ai blockchain icy","authors":"huymaius","date":{"days":20180},"category":"playground > topics > blockchain"},"593":{"file_path":"playground/topics/blockchain/¶ Blocks.md","title":"Blocks","description":"This article provides an overview of blocks in blockchain technology, including their structure, types, and how they work.","spr_content":"- A block in blockchain is a permanent, immutable record batch of transactions linked cryptographically via hashes.<hr />- Once written, block data cannot be altered or removed, ensuring integrity.<hr />- Blocks are size-limited to prevent bloat; typically target 15 million gas, max 30 million gas.<hr />- All blocks are verified by nodes, ensuring consistency and fraud prevention.<hr />- Block data includes standard info: height, timestamp, transaction count, miner address, reward, difficulty, size, gas used/limit, extra data.<hr />- Advanced data: cryptographic hashes (hash, parent hash, uncles), state root, nonce for proof-of-work.<hr />- Uncle blocks occur from near-simultaneous mining; they are rewarded but not included in main chain.<hr />- Block explorers show uncle details: number, time, height, miner, reward.<hr />- Block time is about 12-14 seconds; adjusts difficulty to maintain this average.<hr />- If average block time exceeds expectation, difficulty decreases; if lower, difficulty increases.<hr />- Blocks can be rejected; nodes verify until consensus.<hr />- Mining involves solving for nonce via random hashing (e.g., SHA256), aiming for a specific hash pattern.<hr />- Hashing converts information into cryptographically secure output; miners find a nonce that results in a valid hash.<hr />- Gas measures transaction difficulty and cost; total gas = gas used × gas price.<hr />- Efficient gas management is vital for timely transaction processing.<hr />- Blockchain's economic security relies on proof-of-work and gas mechanics.<hr />- Block size control prevents performance degradation of nodes, maintaining network scalability and speed.","tags":"blockchain","authors":"thanhpn","date":{"days":19159},"category":"playground > topics > blockchain"},"594":{"file_path":"playground/topics/blockchain/federated-byzantine.md","title":"Federated Byzantine","description":"Learn how Stellar's consensus protocol uses trusted validators and quorum slices to prevent Sybil attacks and ensure secure, reliable transactions through federated voting and network trust.","spr_content":"- Stellar emphasizes trust through validators; trusted nodes are like reputable media sources.<hr />- Each Stellar node has a Quorum, a list of trusted validators.<hr />- New domestic nodes select reputable nodes (e.g., SDF, IBM) as validators, akin to consuming trusted news outlets.<hr />- Reputable nodes form their own Quorums, excluding less trusted, \"domestic\" nodes—big \"brothers\" only trust other \"big brothers.\"<hr />- Sybil attacks involve numerous fake nodes broadcasting false info; they are ineffective against trusted validators not included in big validators’ Quorums.<hr />- Malicious attack scenarios: compromising enough big validators or collusion among them—both hinges on trust.<hr />- Stellar's trust model is hierarchical; reliance on big validators reduces exposure to fake nodes.<hr />- Consensus involves federated voting: nodes nominate values, accept votes from peers, and confirm quorums to finalize (externalize) a value.<hr />- Nodes progress through stages: nominate, prepare, commit, externalize—all via rounds of federated voting.<hr />- The Byzantine Generals Problem underpins issues of achieving agreement over distances without centralized authority.<hr />- Quorum selection (peer trust assignment) and proposal contention are unresolved challenges—may impact efficiency.<hr />- Stellar’s protocol is communication-intensive, especially with conflicting proposers, risking inefficiency.<hr />- Trust is rooted in reputation; big validators act as anchors for reliable consensus, limiting influence of malicious actors.<hr />- Consensus security depends on maintaining integrity of major validators and preventing collusion.<hr />- Protocol design prioritizes trust hierarchy and resilience to fake node proliferation, aligning trust with reputation rather than randomness.","tags":"blockchain distributed","authors":"","date":{"days":18034},"category":"playground > topics > blockchain"},"595":{"file_path":"playground/topics/blockchain/plonky2.md","title":"Plonky2","description":"Plonky2 is a non-Interactive Proof of Proof of Knowledge (NIPoPoK) chain that reduces blockchain size and speeds up transaction confirmations. This article explores Plonky2's technology, its applications in various blockchain projects, and compares it with other scaling solutions.","spr_content":"- Plonky2 is a non-interactive proof system (NIPoPoK) designed for blockchain scalability and size reduction.  <hr />- It builds on ZK-SNARKs to produce succinct, affirmative proofs without revealing transaction details.  <hr />- Core goal: reduce blockchain size and accelerate transaction confirmation.  <hr />- Uses small certificates (~1/20th size of traditional attestations) to verify data efficiently.  <hr />- Employs Merkle trees to structure data into superblocks, which summarize larger data sets for quick verification.  <hr />- NIPoPoK eliminates the need for entity interaction during verification, unlike PoK, improving speed and reducing system communication.  <hr />- Merkle trees serve as layered hash structures that enable fast integrity checks.  <hr />- Superblocks are derived from Merkle root nodes over specific periods, enabling minimal data to validate transactions.  <hr />- Application examples include Mina Protocol, Coda, Manta Network, and Ergo, all utilizing Plonky2 for enhanced scalability.  <hr />- For loyalty blockchain systems, Plonky2 summarizes numerous transactions into small proofs, enabling high throughput with minimal blockchain growth.  <hr />- Challenges include ensuring Merkle tree correctness, safeguarding hash and elliptic curve security, and guarding against preimage attacks.  <hr />- Implementation hurdles involve complexity, compatibility, security, processing speed, and scalability across different blockchain platforms.  <hr />- Compared to Lightning Network, sharding, and sidechains, Plonky2 uniquely addresses blockchain size directly, alongside transaction speed.  <hr />- Unlike SegWit, which reduces transaction size but not network scalability, Plonky2 improves both size and speed without compromising security.  <hr />- Contrasts with sharding and plasma, which trade off parts of security or rely on layered approaches, while Plonky2 maintains system integrity while optimizing size and throughput.","tags":"blockchain proof-of-knowledge","authors":"thanhpn","date":{"days":19416},"category":"playground > topics > blockchain"},"596":{"file_path":"playground/topics/blockchain/fabric-hyperledger-architecture-explanation.md","title":"Fabric Hyperledger Architecture Explanation","description":"Learn how Hyperledger's open source blockchain frameworks and tools enable secure, permissioned enterprise networks with smart contracts, distributed ledgers, and flexible governance models.","spr_content":"- Hyperledger is an open-source community focused on enterprise-grade blockchain frameworks, tools, and libraries.  <hr />- It hosts multiple distributed ledger frameworks such as Hyperledger Fabric, Sawtooth, Indy, plus tools like Caliper and libraries like Ursa.  <hr />- Blockchain in Hyperledger involves a distributed ledger that records all network transactions, replicated among participants for collaboration and integrity.  <hr />- Smart contracts are self-executing rules that automate agreement enforcement upon matching predefined conditions.  <hr />- Consensus ensures reliable transaction appending, ordered updates, and agreement among participants despite faults, maintaining an immutable record.  <hr />- Hyperledger Fabric models assets as key-value pairs enabling exchange of anything of value.  <hr />- Chaincode in Fabric defines rules and business logic for assets; it executes against the ledger's current state and results in key-value updates.  <hr />- The ledger is a tamper-resistant, sequenced record of all transactions, with each channel maintaining its own ledger copy across peers.  <hr />- Permissioned networks have controlled access, governance, and collaboration; suitable for B2B, with varying decentralization and privacy controls.  <hr />- Permissionless networks are open, decentralized, publicly verifiable, and anonymous, supporting cryptocurrencies and open participation.  <hr />- Digital identities in Hyperledger are represented by X.509 certificates, encapsulating properties like organization and role.  <hr />- PKI infrastructure provides secure communication using public/private keys, issued and managed by CAs, including Root, Intermediate, and Fabric CAs, with revocation lists.  <hr />- MSP manages trusted CAs and role-based access, defining memberships at organizational, channel, peer, and orderer levels, ensuring trust and privacy.  <hr />- Application transaction flow involves proposal creation, endorsement by peers executing chaincode, response validation, and ordering into blocks by orderers.  <hr />- Transactions are ordered into blocks with a strict sequence, preventing forks and enabling a reliable, immutable history.  <hr />- Peers validate and commit transactions; successful ones update the ledger, failed ones are retained for audit but not applied.  <hr />- Each ledger update triggers event generation, informing connected components of new data inclusion.","tags":"architecture blockchain","authors":"","date":{"days":18031},"category":"playground > topics > blockchain"},"597":{"file_path":"playground/topics/blockchain/¶ Smart Contract.md","title":"Smart Contract","description":"This article provides an overview of smart contracts in blockchain technology, including their definition, how they work, and their advantages.","spr_content":"- Smart contracts are autonomous, programmable digital agreements operating on blockchain technology.  <hr />- They do not require mutual trust among interacting entities.  <hr />- They enforce contract conditions: upon satisfaction, execution occurs automatically.  <hr />- Logic and verification of smart contracts are transparent and auditable.  <hr />- Functionally, they act as digital intermediaries that reduce traditional operational steps and costs.  <hr />- Example: House purchase on blockchain replaces notarization, manual transaction, and ownership transfer with an automated, secure process.  <hr />- Deployment involves distributing the contract on the blockchain.  <hr />- Users sign and invoke contracts through transactions that trigger execution.  <hr />- Contract processes data, executes commands, and commits results to the blockchain ledger.  <hr />- A typical smart contract structure in Solidity includes:  <hr />  - Version declaration  <hr />  - Libraries and interfaces declaration  <hr />  - State variables declaration  <hr />  - Constructor definition  <hr />  - Processing instructions (functions)  <hr />  - State storage  <hr />  - Event and log definitions.  <hr />- Smart contracts can invoke other contracts via interfaces, using ABI for communication—similar to API calls.  <hr />- Common applications include tokens, NFTs, games, swaps, lending—callable via direct contract-to-contract interactions.  <hr />- Advantages:  <hr />  - Efficiency: Automates complex business processes, reduces staffing and operational costs.  <hr />  - Speed: Accelerates cross-company and multi-party transactions.  <hr />  - Autonomy: Executes independently without third-party oversight.  <hr />  - Reliability: Utilizes blockchain's immutable ledger for accuracy and automated trading.  <hr />- Limitations:  <hr />  - Security vulnerabilities: Susceptible to hacking; vulnerabilities in detection tools; large thefts (e.g., $50 million ETH in 2016).  <hr />  - Data integrity: Needs secure oracles to prevent fake event triggers; complex data sources pose risks.  <hr />  - Relevancy and control: Automatic execution can misalign with parties’ intent; no easy reversal; out-of-control actions possible.  <hr />  - Management complexity: Hard to modify deployed contracts; immutability enhances security but limits adaptability.  <hr />  - Historical example: The DAO hack in 2016 resulted in stolen ETH, causing a network split (Ethereum and Ethereum Classic).  <hr />- Contract interaction relies on interfaces and ABI definitions—enabling cross-contract calls and integrations.","tags":"blockchain foundational-topics smart-contract","authors":"thanhpn","date":{"days":19159},"category":"playground > topics > blockchain"},"598":{"file_path":"playground/topics/blockchain/¶ PoS.md","title":"PoS","description":"This article provides an overview of Proof of Stake (PoS) in blockchain technology, including its definition, how it works, and its advantages.","spr_content":"- Proof of Stake (PoS) introduced in 2011 on Bitcointalk to address Proof of Work (PoW) issues.  <hr />- PoS relies on nodes staking tokens to participate, proving identity and investment.  <hr />- Goal: achieve distributed consensus on transaction order, same as PoW.  <hr />- More tokens staked equals greater mining or validation power; ownership correlates with influence.  <hr />- Peercoin first adopted PoS; followed by Nxt, Blackcoin, ShadowCoin.  <hr />- PoS uses pseudo-random selection for validators, influenced by stake size, staking age, and randomness.  <hr />- Participants lock tokens as stake; larger stakes increase validator chance.  <hr />- Selection methods: Random Block Selection (hash + stake) and Coin Age Selection (duration × amount).  <hr />- Coin age resets after forging a block, preventing stake monopolization.  <hr />- Validator checks transaction validity, signs, and adds blocks; earns transaction fees.  <hr />- Staked coins and rewards are released after a lock period; ensures security and discourages fraud.  <hr />- PoS reduces energy consumption and computation time compared to PoW.  <hr />- Miners’ power proportionate to coins held (e.g., 3% stake yields 3% of blocks).  <hr />- Security: Stake acts as collateral; fraudulent activity results in stake loss.  <hr />- 51% attack: requiring over 51% stake to compromise network, impractical with high token circulating supply.  <hr />- Ethereum transitioned from PoW to PoS to improve efficiency; deployment on testnets by 2022.  <hr />- Advantages: fast transactions, eco-friendly, resistant to government influence, accessible on weaker devices.","tags":"blockchain foundational-topics po-s","authors":"thanhpn","date":{"days":19159},"category":"playground > topics > blockchain"},"599":{"file_path":"playground/topics/blockchain/ton-core-concept.md","title":"Ton's base concepts","description":"Base concepts to begin with TON development","spr_content":"- Cells are the atomic data units in TON, representing the smallest storage block.  <hr />- Cells store up to 1023 bits of data and link via up to 4 references to other cells.  <hr />- TON distinguishes ordinary (standard) cells from exotic (specialized) cells, like pruned branch, library reference, Merkle proof, and Merkle update cells.  <hr />- Serialization of cells into byte arrays is called the Bag of cells; all stored data in TON (blocks, network state) are bags of cells.  <hr />- A smart contract in TON encapsulates an address, code, data, balance, and optional flags or references.  <hr />- Contract address is defined by workchain_id and account_id pairs; code is executable on TVM.  <hr />- Contract data holds mutable variables; balance is the amount of TON held; other flags manage contract behavior.  <hr />- Messages facilitate contract communication: include source/destination addresses, value transfer, payload, and optional initializations.  <hr />- Internal messages enable contract-to-contract calls; external messages allow user or external interaction.  <hr />- Transactions record state changes triggered by messages, comprising inbound messages, state modifications, outbound messages, and gas fees.  <hr />- Not all transactions generate outbound messages or state updates; actions depend on contract logic.  <hr />- In TON, each transaction targets a single smart contract; contract interaction occurs through message passing, unlike multi-call transactions in Ethereum.  <hr />- Gas in TON differs from Solidity: insufficient gas causes partial execution; developers must manage refunds and gas calculations manually.  <hr />- Calculating gas costs in TON is complex; developers often set a minimum limit and refund excess post-execution.  <hr />- Typical transaction costs are around 0.005 TON; marketplaces may add extra fees (~1 TON) and later refund based on storage and computation fees.  <hr />- Fee components include storage_fees, in_forward_fees, computation_fees, action_fees, out_forward_fees.  <hr />- These foundational concepts enable beginning development on TON, with further exploration needed for data formats, transaction structures, and addresses.","tags":"blockchain ton web3","authors":"bievh","date":{"days":19921},"category":"playground > topics > blockchain"},"600":{"file_path":"playground/topics/blockchain/cross-chain-transfers-implementing-a-token-swap-from-base-chain-to-bitcoin.md","title":"Implement a Token Swap from the Base chain to Bitcoin for cross-chain transactions","description":"This guide shows how to implement a token swap from the Base Chain to Bitcoin.","spr_content":"- Swapping ICY tokens for Bitcoin involves exchanging one digital currency across incompatible blockchains.<hr />- ICY tokens reside on the Base chain; Bitcoin operates on its separate blockchain.<hr />- Direct swaps are impossible due to blockchain incompatibility; specialized tools bridge this gap.<hr />- Swap Contracts automate and secure the exchange process on the Base chain.<hr />- Treasury Wallets hold ICY tokens and Bitcoin during the swap.<hr />- Icy-Backend system manages swap requests, monitors events, and triggers Bitcoin transfers.<hr />- Different blockchain architectures (Base as advanced, Bitcoin as limited) prevent direct token transfer.<hr />- Bridging tools like swap contracts and oracles enable cross-chain exchanges.<hr />- Initiation begins with user clicking \"Swap,\" specifying ICY amount and Bitcoin address.<hr />- Swap contract records requests via emitted events stored in a database.<hr />- ICY tokens are burned, removing them from circulation to signify the start of the swap.<hr />- Backend detects swap signals, then sends Bitcoin from treasury to user’s Bitcoin address.<hr />- Automated retries via cronjobs ensure successful Bitcoin delivery if issues arise.<hr />- Price determination details are accessible in \"How much is your ICY worth\" guide.<hr />- The entire process ensures secure, fair, and automated cross-chain token swapping, overcoming blockchain disparities.","tags":"blockchain btc icy swap","authors":"quang","date":{"days":20154},"category":"playground > topics > blockchain"},"601":{"file_path":"playground/topics/blockchain/nft-fractionalization.md","title":"NFT Fractionalization","description":"NFT Fractionalization is a process of dividing a non-fungible token (NFT) into smaller, fractional tokens that represent partial ownership of the original NFT. This article provides an overview of fractional NFTs, how they work, and their benefits.","spr_content":"Fractional NFT: Whole NFT divided into smaller ERC-20 tokens via smart contract; each token signifies partial ownership. Ownership is programmable and tradable on secondary markets.  <hr />Mechanism: Lock NFT in smart contract; owner specifies split parameters, creates ERC-20 tokens; each token represents a fraction. Fractions listed for sale; can be auctioned or fixed-price.  <hr />Benefits:<hr />- Price discovery: fractionalization reveals market valuation.<hr />- Liquidity: increased exit options through on-chain exchanges like Uniswap.<hr />- Curator incentives: owner earns fees from marketplaces, adjustable within limits.  <hr />References: Coindesk, Bybit, LeewayHertz, Medium articles.","tags":"blockchain nft","authors":"khacvy","date":{"days":19161},"category":"playground > topics > blockchain"},"602":{"file_path":"playground/topics/blockchain/blockchain-bridge.md","title":"Blockchain Bridge","description":"A comprehensive guide to understanding blockchain bridges, their types, and how they facilitate communication and asset transfers between different blockchain networks.","spr_content":"- Web3 and DApps form an ecosystem comprising multiple L1 blockchains and L2 scaling solutions, each with distinct tradeoffs and processing powers.<hr />- The proliferation of protocols and apps increases the need for asset transfer across different blockchains.<hr />- Blockchain bridges serve as communication channels, akin to physical bridges connecting geographical sites.<hr />- Bridges facilitate message and asset transfer between otherwise isolated blockchain ecosystems.<hr />- All blockchains have inherent limits; e.g., Ethereum needs scaling solutions like rollups, while L1s like Solana and Avalanche prioritize throughput at decentralization’s expense.<hr />- Blockchains operate in isolated environments with distinct rules and consensus mechanisms, preventing native communication and native token movement.<hr />- Trustless bridge design allows cross-chain transfer of assets and messages, requiring robust authentication mechanisms.<hr />- Bridge use-cases include asset/message transfer, reduced transaction fees, enabling DApps across chains, ecosystem exploration, collaborative platform building, and asset ownership.<hr />- Bridges listen for events on one network and forward information to another, requiring secure mechanisms for safety, authentication, and message monitoring.<hr />- Core components include monitor agents (oracles, validators, relayers), message forwarding systems, consensus among agents, and cryptographic signing.<hr />- Classification includes:<hr />  - External validators locking tokens and generating corresponding messages via bonded tokens.<hr />  - Lightweight clients and relays generating proofs and verifying events on target chains, resource-intensive but trustless.<hr />  - Liquidity networks with routers holding asset pools, enabling secure cross-chain transfers, especially for large values.<hr />- Bridge characteristics depend on:<hr />  - Security: reliability and safety guarantees against malicious actors.<hr />  - Speed: transaction latency and finality, often balancing speed vs. security.<hr />  - Connectivity: target chain support and ease of integration.<hr />  - Capital efficiency: related to security costs and transaction fees.<hr />  - Authenticity: transfer of specific assets or complex cross-chain interactions.<hr />- Interoperability exhibits a trilemma: achieving any two of untrusted security, scalability, and generalizability is possible; all three simultaneously remain challenging.<hr />- Risks include:<hr />  - Smart contract bugs, blockchain hacks, or rollbacks.<hr />  - Malicious actors within trusted bridges.<hr />  - Hacked bridges exploiting consensus mechanisms.<hr />  - User errors.<hr />  - Chain congestion or attacks disrupting bridging.<hr />- Notable exploits: Solana Wormhole ($325M stolen), Thorchain, PolyNetwork.<hr />- Case studies: icrosschain.io, Wormhole, Thorchain.<hr />- References include Ethereum's ecosystem details, classification frameworks, and notable security incidents.<hr />- Overall, bridges are crucial for interoperability but pose significant security and reliability challenges, thus requiring robust designs and continual vigilance.","tags":"blockchain blockchain-bridge web3","authors":"thanhpn","date":{"days":19164},"category":"playground > topics > blockchain"},"603":{"file_path":"playground/topics/blockchain/design-system-for-layer-2-using-zk-rollup.md","title":"Design System For Layer 2 Using Zk Rollup","description":"Learn how Layer 2 blockchain design using zkEVM and zero-knowledge proofs enables scalable, secure token transfers and smart contract execution with efficient transaction batching and Ethereum compatibility.","spr_content":"- Blockchain enables trustless, decentralized systems; scales via layer 2 solutions.  <hr />- Layer 2 aggregates transactions into proofs, validated on main chain, increasing throughput.  <hr />- zkEVM replicates EVM behavior, supporting ERC20 and smart contracts with zero-knowledge proofs.  <hr />- zkProver creates succinct proofs of multiple transactions, reducing gas and time.  <hr />- State machines suited for deterministic Ethereum computations; arithmetic circuits less efficient for loops.  <hr />- System must ensure compatibility, scalability, data availability, storage efficiency, decentralization.  <hr />- zkProver transforms computations into state machine models, uses algebraic constraints, polynomials, cryptographic proofs (SNARKs/STARKs).  <hr />- System architecture: nodes, client, zkRollup smart contract, Ethereum bridge—off-chain computation, on-chain verification.  <hr />- Components include: block node, sequencer (batch creator), zkProver (proof generator), RPC, sync, zkSNARK/STARK, StateDB, bridge, zkRollup contract.  <hr />- zkProver executes state machine rules, interacts with node and database, generates and verifies proofs via polynomials.  <hr />- State machines: main, secondary, memory, storage, cryptographic (Poseidon, Keccak), arithmetic—manage transaction states.  <hr />- Aggregator binds to zkProver to produce proofs; executor simulates states for validation.  <hr />- StateDB stores current account and contract states, ensures consistency and permission control.  <hr />- L2 state updates in three phases: trusted (sequencer-based), virtual (from L1 data), unified (verified zk proofs).  <hr />- Trusted sequencer generates and shares batches; local nodes re-execute and verify on-chain via ZK proofs; roots sync from L1.  <hr />- Bridge component handles token and message transfer requests, updates Merkle trees, syncs events.  <hr />- Smart contracts: asset bridging, message passing, exit root management, batch sequencing, and verification.  <hr />- RPC interface facilitates existing tools interaction, compatible with Ethereum-like workflows.  <hr />- Single node includes all components; multiple nodes perform diverse roles across network.  <hr />- Transaction flow: user signs, submits to sequencer, stored, sorted, batched, broadcast, then finalized via proof validation and on-chain commitments.  <hr />- Batch data encapsulates transactions, exit roots, timestamps; transactions are RLP-encoded, concatenated.  <hr />- Sequencing involves ordered batching; verified through on-chain storage and mappings, ensuring proper state evolution.","tags":"blockchain","authors":"","date":{"days":19471},"category":"playground > topics > blockchain"},"604":{"file_path":"playground/topics/blockchain/¶ Zero-knowledge Proofs.md","title":"Zero-knowledge Proofs","description":"This article provides an overview of zero-knowledge proofs in blockchain technology, including their definition, how they work, and their advantages.","spr_content":"Zero-knowledge proof (ZKP): proves claim validity without revealing claim details.  <hr />\"Prover\" (validator): attempts to demonstrate statement.   <hr />\"Verifier\": checks the proof for truth.  <hr /><hr />Need for no-knowledge demonstration: protect personal info, enhance security.  <hr />Traditional proof (passport/license): reveals identity data, vulnerable, hackable.  <hr />ZKP: removes info disclosure, uses 'witness' to generate a succinct proof.  <hr />Proof guarantees truth without exposing underlying data.  <hr /><hr />Validation process:  <hr />- Witness: secret knowledge, answers questions.  <hr />- Challenge: verifier asks questions.  <hr />- Response: prover answers; repeated for confidence, reduces chance of deception.  <hr /><hr />Protocols:  <hr />- Interactive: multiple exchanges, less practical due to coordination needs.  <hr />- Non-interactive: one message, more efficient, uses algorithms to generate static proofs verified by others.  <hr /><hr />ZKP types:  <hr />- ZK-SNARKs:  <hr />  - Zero-knowledge, succinct (small size), non-interactive.  <hr />  - Requires a 'Common Reference String' (CRS) setup, potentially trust-dependent.  <hr />  - Uses multiparty computation (MPC) to secure CRS, with risk if malicious actors retain information.  <hr />  - Popular for quick validation on Layer 1/blockchain to reduce costs.  <hr />  <hr />- ZK-STARKs:  <hr />  - Scalable, transparent (no trusted setup), quantum-resistant.  <hr />  - Verifies larger computation efficiently; proof size larger, verification more resource-intensive.  <hr />  - Does not support recursion, limiting complex composability.  <hr />  <hr />Applications:  <hr />- Confidential transactions, identity concealment, authentication, verifiable computations.  <hr /><hr />Drawbacks:  <hr />- Hardware and verification costs.  <hr />- Trust assumptions (CRS, MPC).  <hr />- Quantum computing threats to cryptographic assumptions.  <hr /><hr />References:  <hr />- Ethereum ZKP overview, zk-rollups, SNARKs, STARKs, comparative analyses.","tags":"blockchain evm zk-proof","authors":"thanhpn","date":{"days":19241},"category":"playground > topics > blockchain"},"605":{"file_path":"playground/topics/blockchain/zk-snarks.md","title":"zk-SNARKs","description":"ZK-SNARKs is a type of zero-knowledge proof that allows one party to prove to another that a given statement is true, without revealing any additional information. This article provides an overview of zk-SNARKs, how they work, and their applications in blockchain technology.","spr_content":"- ZK-SNARKs are privacy-preserving cryptographic proofs enabling verifiers to confirm a statement's truth without revealing underlying data.<hr />- They are succinct, verifiable within milliseconds regardless of statement length.<hr />- They are non-interactive, requiring only a single message from prover to verifier.<hr />- Zero-Knowledge (ZK) means the prover can confirm possession of secret information without disclosing it.<hr />- Example: proving knowledge of a preimage of a hash without revealing it.<hr />- Succinctness ensures fast verification, suitable for blockchain and real-time use.<hr />- Non-interactivity reduces communication rounds, ideal for decentralized systems.<hr />- Implementation involves a program C with public input x and secret witness w; proof that C(x,w)=true indicates w satisfies the statement.<hr />- Hash-based example: Alice proves she knows S such that SHA(S)=H without revealing S, by generating a proof for C(x,w)=true where C checks SHA(w)==x.<hr />- Proof generation bypasses revealing secrets, confirming statement validity.<hr />- ZK-SNARKs are composed of three functions:<hr />  - G (Key generation): inputs lambda (secret parameter) and C; outputs proving key (pk) and verification key (vk).<hr />  - P (Prover): uses pk, x, w to produce proof prf that w satisfies C given x.<hr />  - V (Verifier): uses vk, x, and prf to confirm validity; outputs true/false.<hr />- Security depends on lambda; if known, fake proofs can be created.<hr />- Trusted setup (multi-party ceremonies) mitigates risks associated with lambda exposure.<hr />- In Ethereum, ZK-SNARKs enable ZK-Rollups:<hr />  - Layer 2 generates proof with pk.<hr />  - Layer 1 verifies proof using vk and public inputs.<hr />  - Verified proofs trigger state updates or transaction commits.<hr />- References provide in-depth technical and practical context.","tags":"blockchain ethereum zero-knowledge","authors":"bienvh","date":{"days":19335},"category":"playground > topics > blockchain"},"606":{"file_path":"playground/topics/architecture/overview-on-broker-pattern-in-distributed-system.md","title":"Overview On Broker Pattern In Distributed System","description":"Learn how the broker pattern structures distributed systems by decoupling clients and servers, enabling scalable communication through proxies and brokers for dynamic, independent agent interaction.","spr_content":"- The broker pattern structures distributed systems with decoupled, remote procedure call-based components.  <hr />- A broker manages communication, forwarding requests, transmitting results, and handling exceptions.  <hr />- Components include clients, servers, broker, client-side proxy, server-side proxy, and bridges.  <hr />- Clients implement user features, communicating via client proxies to the broker.  <hr />- Servers register with the broker, offer services, and send responses/exceptions through server proxies.  <hr />- The broker registers servers, offers APIs, transfers messages, recovers errors, and interworks via bridges.  <hr />- Bridges facilitate communication among brokers, encapsulating network specifics.  <hr />- Client-side proxies wrap system-specific functions, mediating client-broker interactions.  <hr />- Server-side proxies wrap server functions, mediating server-broker interactions.  <hr />- The broker's role enables dynamic addition/removal of agents (clients/servers) and supports scalable, independent agents.  <hr />- The broker acts as an interface: adding a server is a matter of registration; agents operate independently of each other.  <hr />- The pattern provides loose coupling, allowing agents to scale or partition functionality without affecting others.","tags":"distributed","authors":"","date":{"days":18132},"category":"playground > topics > architecture"},"607":{"file_path":"playground/topics/architecture/state-pattern.md","title":"State Pattern","description":"The State Design Pattern is a behavioral design pattern that allows an object to change its behavior when its internal state changes. This pattern is particularly useful for scenarios where an object can exist in multiple states and its behavior varies based on these states.","spr_content":"1. State Pattern enables objects to change behavior dynamically when internal state changes.  <hr />2. Useful for objects with multiple states affecting their behavior.  <hr />3. Example: Document with states Draft, Moderation, Published.  <hr />4. In Draft: publish moves to Moderation.  <hr />5. In Moderation: publish depends on admin role; publishes if admin.  <hr />6. In Published: publish does nothing.  <hr />7. Implementation issues: complex conditionals grow with states, hard to maintain, and scale poorly.  <hr />8. Monstrous conditionals lead to error-prone code as states increase.  <hr />9. State pattern encapsulates state behaviors into separate classes.  <hr />10. Context delegates behavior to current state object.  <hr />11. State classes implement specific behaviors for each state.  <hr />12. State pattern structures: Context holds current State; State interface defines behavior; ConcreteStates implement behavior.  <hr />13. Benefits: simplifies transitions, improves readability, adheres to open/closed principle.  <hr />14. Suitable for finite state machines, UIs, game states.","tags":"behavior-patterns design-pattern gang-of-four","authors":"hieuvd","date":{"days":19901},"category":"playground > topics > architecture"},"608":{"file_path":"playground/topics/architecture/sdk-event-sourcing.md","title":"Sdk Event Sourcing","description":"Learn how Software Development Kits (SDKs) provide tools and APIs for app development, and discover how Event Sourcing manages data communication between systems efficiently.","spr_content":"- SDK: set of tools, libraries, templates, code samples, debugging, documentation for application development on a specific platform.<hr />- SDK combines APIs, libraries to interact with OS and hardware.<hr />- Example: smartphone OS includes APIs and libraries for hardware control.<hr />- Function of SDK:<hr />  - Interface with hardware.<hr />  - Manage files.<hr />  - Handle cookies.<hr />- Event Sourcing:<hr />  - Architecture for app-to-app communication using message-oriented middleware.<hr />  - Stores and sorts data (events) by priority/order.<hr />  - Acts as a mailbox for data exchange.<hr />  - \"Event\": data; \"Sourcing\": origin of data.<hr />- TIKI example:<hr />  - Parties: Marketplace, Warehouse, Support.<hr />  - Data: order times, stock status, delivery updates, returns.<hr />  - Data from different sources organizes to facilitate smooth goods transactions.<hr />  - Prioritized event data ensures effective communication.<hr />- React Hooks:<hr />  - Functions to access React state and lifecycle features within functional components.","tags":"event-sourcing","authors":"","date":{"days":18403},"category":"playground > topics > architecture"},"609":{"file_path":"playground/topics/architecture/strategy-design-pattern.md","title":"Strategy design pattern, the concept, use cases and difference with the state design pattern","description":"Strategy design pattern, a behavioral design pattern that denote the functionality of a family of interchangeable classes to a interface, the context, with the helper objects, selects the appropriate implementation of the interface.","spr_content":"- **Problem domain:** Restaurant cookbook separation: from single to multiple by cuisine and dish type; conflicts arise with sequential access to core recipes, risking trade secrets leak.<hr />- **Conceptual analogy:** Dividing a single cookbook into specialized volumes (appetizer, main, side; Asian, French, Italian) allows concurrent, culture-specific, and dish-specific access, reducing conflicts.<hr />- **Strategy pattern essence:** Group similar functionalities into classes; define a common interface; instantiate the correct class based on context.<hr />- **Mechanism:** Context uses input data (dish, cuisine, station) to select and invoke the appropriate strategy implementation via the interface.<hr />- **Implementation analogy:** Calculation interface with add/subtract classes; selection via switch based on operation input.<hr />- **Use cases:** Business systems with diverse flows—route planning by vehicle type, transactions with varied billing and discounts—depict strategy pattern utility.<hr />- **Difference from State pattern:**  <hr />  - Strategy employs independent, interchangeable behaviors based on interface; unaware of each other.  <hr />  - State extends this by representing distinct object states; transitions happen explicitly, with states potentially initiating transitions.<hr />- **Insight:** Strategy encapsulates flexible behavior; state binds behavior to object state, enabling lifecycle control.<hr />- **Relation to leaf analogy:** Strategy as selecting the correct functional leaf; State as situational internal leaf dictating object behavior transitions.<hr />- **Reference note:** Pattern design sourced from refactoring.guru, emphasizing modular, interchangeable behavior encapsulation.","tags":"behavior-pattern design-pattern gang-of-four strategy-design-pattern","authors":".rjim","date":{"days":19915},"category":"playground > topics > architecture"},"610":{"file_path":"playground/topics/architecture/observer-pattern.md","title":"Introduce the Observer pattern and its use cases","description":"Concept of the Observer Pattern with its pros and cons.","spr_content":"- Two object types: Customer (interested in specific product) and Store (source of product availability).  <hr />- Customer checks availability daily; inefficient if product is en route.  <hr />- Store can spam customers with notifications; inefficient and intrusive for disinterested ones.  <hr />- Conflict: customer wastes time or store wastes resources.  <hr />- Observer pattern involves subject maintaining a list of observers; notifies them of state changes.  <hr />- Analogy: newspaper subscription; publisher maintains subscriber list, sends new issues automatically.  <hr />- Subscribers can unsubscribe at will.  <hr />- DOM events exemplify observer pattern: DOM elements (subjects), event listeners (observers).  <hr />- Custom event emitters decouple code, enable modular notifications, exemplified by EventEmitter in Node.js.  <hr />- Redux uses observer pattern: store (subject), UI components (observers); store notifies on state change.  <hr />- Pros: loose coupling, automatic updates, reusability, structured event handling, simplified communication.  <hr />- Cons: memory leaks if unregistering misses, unexpected updates, performance costs, added complexity, debugging difficulty.","tags":"design-pattern gang-of-four observer-pattern","authors":"hienld","date":{"days":19916},"category":"playground > topics > architecture"},"611":{"file_path":"playground/topics/architecture/automata.md","title":"Automata","description":"Things about automata that devs should know","spr_content":"- Finite State Automata (FSA) are algebraic structures used to model systems with discrete states and transitions.<hr />- Formally, FSA `F = ⟨Σ, S, s0, F, δ⟩` comprises input alphabet `Σ`, states `S`, start state `s0`, accepting states `F`, and transition function `δ`.<hr />- FSAs visualize paths from a start state to an end state, useful for expressing regular patterns and system behaviors.<hr />- They are primarily a thinking tool, not direct programming syntax, aiding in formal system design and analysis.<hr />- FSA models are essential for systems needing ordered state sequences, error prevention, and clear transition rules.<hr />- Regular expressions exemplify the pattern-matching power of FSAs, e.g., `AB+C` accepting strings with specific repeating structures.<hr />- Visual representations, like diagrams and transition tables, clarify state transitions and system flow.<hr />- The difference between \"Finite State Machine\" (FSM) and \"Finite Automata\" (FA) is terminological—both describe the same abstract model.<hr />- \"Finite\" emphasizes limited memory—the finite number of states `Q`.<hr />- \"Automata\" highlights the machine’s autonomous, rule-based process—no explicit intervention needed once rules are set.<hr />- Transition functions like `δ:Q×Σ → Q` define state changes; `Q×Σ` is the Cartesian product representing all state-symbol pairs.<hr />- `δ(q, a) → q'` means in state `q`, on input `a`, transition to state `q'`; diagrammatically, `(q)---a--►(q')`.<hr />- Transition tables, graphs, and functions are interchangeable representations of these mappings.<hr />- The formal definition sometimes treats `δ` as a partial function, not necessarily defined for all `(q, a)`.<hr />- State machines differ from workflows: state machines are event-driven, with external triggers causing transitions; workflows depend on prior completion.<hr />- State machines can loop and handle complex, non-linear sequences; workflows are generally linear.<hr />- DFA (Deterministic Finite Automaton):<hr />  - Has a single, unambiguous path per input.<hr />  - \"Robot\" always knows the exact next move based on current input.<hr />  - Fast, strict, with one instruction per state.<hr />- NFA (Non-deterministic Finite Automaton):<hr />  - Can explore multiple possible paths simultaneously.<hr />  - \"Robot\" considers several options at once, akin to splitting into parallel processes.<hr />  - Potentially slower but more flexible.<hr />- Key distinctions:<hr />  - DFA processes one path at a time, prioritizing speed and simplicity.<hr />  - NFA explores many paths concurrently, offering greater expressive power at potential processing cost.","tags":"automata","authors":"tieubao","date":{"days":20018},"category":"playground > topics > architecture"},"612":{"file_path":"playground/topics/architecture/visitor-design-pattern.md","title":"Visitor design pattern, the concept, problem solution and use cases","description":"Visitor is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.","spr_content":"- Visitor pattern separates algorithms from objects they operate on; enables adding behaviors without modifying element classes.<hr />- It is a behavioral design pattern employed for performing operations over a group of similar objects.<hr />- Elements provide `accept()` methods; visitors implement `Visit()` functions for each element type.<hr />- Structure involves:<hr />  - Element classes (`Paragraph`, `Table`, `Image`) with `accept()` methods.<hr />  - Visitor interface with `visitX()` methods for each concrete element.<hr />  - Concrete visitors (`RenderVisitor`, `ExportVisitor`, `SpellCheckVisitor`) implement behavior for each element.<hr />- The pattern facilitates centralized operation logic, reducing code duplication, and adhering to Open/Closed Principle.<hr />- It is particularly useful when:<hr />  - Operating over complex object structures (like trees).<hr />  - Separating auxiliary behaviors from core classes.<hr />  - Applying behaviors only to certain classes within hierarchies.<hr />- Pros:<hr />  - Easy to introduce new operations without changing element classes.<hr />  - Consolidates versioning of behaviors into single visitor classes.<hr />  - Helps traverse complex structures effectively.<hr />- Cons:<hr />  - Adding/changing element classes requires updating all visitors.<hr />  - Limited access to element's private members; restricts encapsulation.<hr />- Applications:<hr />  - Compiler design: type checking, code generation, optimization over ASTs.<hr />  - Document processing: rendering, formatting, spell-checking over document components.<hr />  - Graphics rendering: drawing, resizing, calculating areas over shapes.<hr />  - File systems: searching, encrypting, compressing files/directories.<hr />  - Game development: rendering, state updates, collision detection for entities.<hr />  - E-commerce: applying discounts, calculating shipping for products.<hr />  - Network protocols: serializing/deserializing different packet types.<hr />  - GUI components: rendering, event handling, validation across UI elements.<hr />- Using visitor pattern leads to maintainable, scalable designs by decoupling behaviors from data structures.","tags":"behavior-pattern design-pattern gang-of-four visitor-design-pattern","authors":"taipn","date":{"days":19916},"category":"playground > topics > architecture"},"613":{"file_path":"playground/topics/architecture/command-pattern.md","title":"Command Pattern","description":"Command is a behavioral design pattern that encapsulates a request as an object. This allows you to parameterize methods with different requests, delay or queue a request’s execution, and support undoable operations. This pattern promotes the decoupling of the sender and receiver of a request, enhancing flexibility and maintainability.","spr_content":"Command Pattern = behavioral design pattern encapsulating requests as objects.  <hr />Enables parameterization, queuing, delay, undoability, decouples sender and receiver, enhances flexibility and maintainability.  <hr /><hr />Key components:  <hr />- Command Interface: declares `execute()`, unifies interface for all commands.  <hr />- Concrete Command: implements Command, binds Receiver to action, invokes Receiver’s methods.  <hr />- Receiver: performs actual operations, knows how to carry out requests.  <hr />- Invoker: requests commands, queues/stores commands, can support undo by storing history.  <hr /><hr />Real-world analogy: restaurant order system.  <hr />- Orders written on paper = Command objects.  <hr />- Waiter takes order = Invoker, stores order.  <hr />- Kitchen as Receiver, acts on order slip.  <hr />- Cook prepares meal based on order slip.  <hr />- Tray with meal + slip returned by waiter = completed command execution.  <hr /><hr />Advantages:  <hr />- Single Responsibility: decouples invocation from execution.  <hr />- Open/Closed: easy to add new commands without modifying clients.  <hr />- Undo/Redo: easily supported.  <hr />- Deferred execution: commands executed later.  <hr />- Complex commands: assemble simple commands into complex ones.  <hr /><hr />Disadvantages:  <hr />- Adds layer complexity, may overcomplicate simple scenarios.  <hr /><hr />Applicability:  <hr />- Transactional systems, e.g., finance, e-commerce.  <hr />- Task scheduling, e.g., job queues, batch processing.  <hr />- User interfaces, e.g., undoable actions, optimistic UI updates.","tags":"behavior-patterns design-pattern gang-of-four","authors":"hieuvd","date":{"days":19901},"category":"playground > topics > architecture"},"614":{"file_path":"playground/topics/architecture/prototype-design-pattern.md","title":"Going Through use cases of the prototype design pattern and it place among the creational patterns","description":"Prototype, one of the creational patterns, minimize efforts when recreating new from the exist object by cloning the 'prototype' of it.","spr_content":"- Objective: duplicate complex objects with runtime-initialized, private, or multi-process-manipulated fields.<hr />- Typical problems: accessing runtime credentials, private transaction logs, internal states.<hr />- Prototype pattern: clone a 'Prototype' object via a Clone() method, abstracted from class details.<hr />- Cloning captures object’s state sufficiently for user needs, not full class replication.<hr />- Example: Hero object in Go, with private fields: level, experience, killLogIDs.<hr />- Clone method: copies internal state without exposing private data or logic.<hr />- Cloning enables replication of objects like a Hero, ledger, database access objects.<hr />- Cloning facilitates system features: copying state mid-process, supporting flow without singleton restrictions.<hr />- Prototype works with factory, builder, abstract factory: creates original, clones for variants.<hr />- Use cases: credential objects, ledger records, financial data, simulation states.<hr />- Prototype is complementary to other creational patterns, serving as a flexible duplication tool.<hr />- Benefits: encapsulation preservation, runtime-specific data replication, process independence.","tags":"gang-of-four graphical-notation software-architecture software-design","authors":"jim","date":{"days":19884},"category":"playground > topics > architecture"},"615":{"file_path":"playground/topics/architecture/singleton-design-pattern.md","title":"A tour of Singleton design pattern with Golang","description":"Singleton real-world problem, concept, solution, use cases, implementations, pros & cons, references","spr_content":"- Web page requires real-time subscriber count update.<hr />- Main object: \"subscriber\" (Youtube users); actors: subscribers (push updates), visitors (view updates).<hr />- Goal: maintain a synchronized, accurate count under concurrent subscriptions.<hr />- Use Singleton pattern to manage the shared subscriber counter.<hr />- Singleton ensures a single, globally accessible instance.<hr />- Singleton resolves issues of data consistency and unified access.<hr />- Thread safety is critical due to concurrent subscriptions.<hr />- Singleton is suitable for managing one resource (e.g., counter, logger).<hr />- Two implementation approaches: Eager and Lazy.<hr />- Eager: initialize at app start; simple, no race conditions, lighter resources.<hr />- Lazy: initialize on first request; more complex, needs thread-safety.<hr />- Eager involves early instantiation; Lazy uses double-checked locking.<hr />- Eager is efficient with small/light resources; Lazy defers cost until needed.<hr />- Benefits: guarantees a single instance, consistent data.<hr />- Drawbacks: tight coupling, difficult debugging, complex testing, limited flexibility.<hr />- Singleton pattern is a creational design pattern for controlled resource access.<hr />- Applicable when resource must be singular and globally accessible.<hr />- For real-time subscriber counter, ensure thread-safe singleton to handle concurrent updates.<hr />- Implementation example uses Go language pseudocode with mutex locks for thread safety.","tags":"design-pattern gang-of-four golang software-architecture","authors":"anhnh","date":{"days":19884},"category":"playground > topics > architecture"},"616":{"file_path":"playground/topics/mobile/swiftui.md","title":"Swiftui","description":"Discover the basics of SwiftUI, Apple's declarative UI framework for building cross-platform apps with easy layouts, state management, and integration with UIKit using Xcode Canvas and Combine framework.","spr_content":"- Apple introduced SwiftUI at WWDC 2019 to enhance developers' productivity and ease app development.  <hr />- SwiftUI adopts a declarative UI framework supporting multiple Apple platforms: iOS, iPadOS, macOS, watchOS, tvOS.  <hr />- It aims to replace UIKit, AppKit, and WatchKit, with high component reusability across platforms.  <hr />- Core companion tools include Xcode Canvas and the Combine framework.  <hr />- Xcode Canvas enables drag-and-drop UI building, automatic code synchronization, and live previews akin to Flutter's hot reload, eliminating UI programmatic/drag UI conflicts and debugging effort.  <hr />- The Combine framework introduces functional reactive programming (FRP), making code declarative and intuitive; previous use of third-party libraries like RxSwift is now integrated as part of SwiftUI's ecosystem.  <hr />- SwiftUI is not inherently multi-platform but facilitates app creation across Apple devices; some platform-specific features remain exclusive, requiring tailored enhancements.  <hr />- Basic SwiftUI knowledge involves understanding:  <hr />  1. DSL syntax in SwiftUI (leveraging features like opaque return types, implicit returns, function builders, view modifiers).  <hr />  2. Layout process: parent proposals, child size choices, parent placement—stacks as primary layout tools.  <hr />  3. State management via property wrappers: @State (local state), @Binding (parent-child state sharing), @ObservedObject (shared reference objects), @EnvironmentObject (environment-wide shared objects), @Environment (system settings).  <hr />- Sample code illustrates declarative syntax, layout steps, and state handling.  <hr />- SwiftUI’s limitations are:  <hr />  - Limited API coverage compared to UIKit (e.g., missing grid layouts).  <hr />  - Limited adoption due to late release (iOS 13+), so legacy apps use UIKit primarily.  <hr />  - Limited support ecosystem: mature troubleshooting, libraries, and customizations are scarce compared to UIKit's decade-long maturity.  <hr />- Default behaviors (e.g., padding in HStack) are implicit, which might cause confusion and sometimes prefer explicit control.","tags":"swift","authors":"","date":{"days":18299},"category":"playground > topics > mobile"},"617":{"file_path":"playground/topics/mobile/xpc-services-on-macos-app-using-swift.md","title":"Xpc Services On Macos App Using Swift","description":"Learn how to implement XPC Services for secure interprocess communication on macOS, enabling modular app design, crash isolation, and efficient resource management with NSXPCConnection and launchd.","spr_content":"- Before XPC, IPC used Sockets and Mach Messages (Mach Ports).  <hr />- XPC offers an alternative IPC mechanism, enabling process communication through message passing.  <hr />- Processes can act as servers, waiting for clients to access APIs and services via XPC.  <hr />- XPC Services are packaged as bundles, located inside an application’s `Contents/XPCServices/` directory.  <hr />- Bundles are directory structures; application bundles are common examples.  <hr />- Applications may contain multiple XPC Service bundles; some reside also within Frameworks.  <hr />- XPC Services modularize functionality, enabling separation of costly or infrequent tasks (e.g., crypto, random number generation).  <hr />- Each XPC Service runs in its own process, preventing crashes from affecting the main app integrity.  <hr />- XPC Services can have distinct entitlements, isolating permissions, e.g., location access, from the main app.  <hr />- Launchd manages XPC Services, starting, stopping, and scheduling on demand; it has system-wide resource awareness.  <hr />- Systems can idle or spawn XPC Services dynamically, managed transparently by launchd.  <hr />- Creating an XPC Service involves adding a new target, copying the bundle, and configuring dependencies in Xcode.  <hr />- Low-level XPC 서비스 requires implementing `xpc_main()` to handle messages.  <hr />- High-level Objective-C XPC Services use `NSXPCListener`, delegates, and `NSXPCConnection`.  <hr />- XPC Service bundles include an `Info.plist`, executable, and resources, with message handling via `xpc_main()`.  <hr />- Using XPC services depends on C API (`xpc_*`) or Objective-C API (`NSXPCConnection`).  <hr />- Objective-C API creates interface protocols, connection objects, and listeners, allowing inter-process method calls.  <hr />- `NSXPCInterface` defines methods executable over the connection; all methods are asynchronous (void return, reply blocks).  <hr />- The `NSXPCConnection` is initialized with a service name; `remoteObjectProxy` provides a proxy object for method calls.  <hr />- Communication involves serialization/deserialization of data structures and objects, with automatic handling of proxies.  <hr />- Interfaces are defined via Objective-C protocols; parameters are limited to primitive types, objects conforming to `NSSecureCoding`, or collections allowing custom objects.  <hr />- The connection setup requires configuring `exportedInterface` and `exportedObject` for bidirectional communication.  <hr />- Helper's `listener:shouldAcceptNewConnection:` method determines connection acceptance; must set `exportedInterface` and `exportedObject`, then call `resume`.  <hr />- Sending messages uses proxy objects, e.g., `[[connection remoteObjectProxy] method];`, which automatically invoke remote methods.  <hr />- Error handling involves interruption and invalidation handlers, managing crash scenarios or disconnections, with options to retry, reset state, or notify users.","tags":"macos swift","authors":"","date":{"days":18571},"category":"playground > topics > mobile"},"618":{"file_path":"playground/topics/mobile/uidynamicanimator.md","title":"Uidynamicanimator","description":"Learn how UIDynamicAnimator and UIDynamicItem enable realistic 2D physics animations in iOS using behaviors like gravity, collision, and attachment for natural, high-performance user interface effects.","spr_content":"- A **dynamic item** is an object conforming to UIDynamicItem protocol.<hr />- UIView and UICollectionViewLayoutAttributes implement UIDynamicItem in iOS 7+.<hr />- Implementing UIDynamicItem allows use of a dynamic animator with custom objects.<hr />- Dynamic items respond to rotation, position, and animator-computed changes.<hr />- To animate, create behaviors and assign dynamic items to them.<hr />- Behaviors include UIAttachment, UICollision, UIDynamicItem, UIGravity, UIPush, and UISnap.<hr />- Each behavior configures associated dynamic items and parameters.<hr />- Behaviors are added to a UIDynamicAnimator to activate animation.<hr />- Before adding an item, specify initial position, rotation, bounds via properties (center, transform, bounds).<hr />- Once added to animator, it updates item position and rotation during animation.<hr />- Items' states can be programmatically updated mid-animation using updateItem(usingCurrentState:).<hr />- Behaviors can be nested via addChildBehavior, forming a hierarchy.<hr />- An animator’s behavior set forms a hierarchy; each behavior occurs once in it.<hr />- Dynamic animator can be initialized with referenceView, collectionViewLayout, or default init.<hr />- Reference view-based animator uses UIView and adopts its coordinate system.<hr />- Boundary for collision can be set relative to reference view bounds.<hr />- CollectionView animator uses collectionViewLayout for coordinate system.<hr />- Collection layout conforms to UICollectionViewLayout; layout can be invalidated.<hr />- Default (abstract) animator uses init(), no reference boundary, employs custom coordinate system.<hr />- All animators are independent; items can belong to multiple behaviors within one animator.<hr />- Animators auto pause when items rest; resume on parameter change or behavior change.<hr />- Delegate can respond to pause/resume via UIDynamicAnimatorDelegate.<hr />- UIDynamicAnimator simulates real-life physics: performant, realistic, 2D only.<hr />- Physical interactions modeled with 5 behavior types plus item properties: elasticity, density, friction, resistance.<hr />- UIFieldBehavior applies forces like gravity, magnetism within a specified region.<hr />- Configure fields by setting position, region (circular, rectangular, composite).<hr />- Attach fields to items using addItem; configure item attributes (density, charge, etc.).<hr />- Define field strength and falloff to control influence over distance.<hr />- Fields influence items dynamically within their defined region and attributes.","tags":"macos swift","authors":"","date":{"days":18103},"category":"playground > topics > mobile"},"619":{"file_path":"playground/topics/mobile/create-circular-text-using-swiftui.md","title":"Create Circular Text Using Swiftui","description":"Learn how to create circular text in SwiftUI by splitting strings, measuring character sizes with GeometryReader, and rotating each character to form a smooth circle with adjustable spacing.","spr_content":"- Create a SwiftUI project in Xcode, add new SwiftUI file named CircularText.<hr />- Define two primary attributes: String (text content) and Radius (circle radius).<hr />- Split string into array of characters, each assigned to a Text view.<hr />- Rotate each character to align along circle perimeter.<hr />- Use an enumerated loop to access character index for offset calculation.<hr />- Calculate circle perimeter (diameter * π) for positioning.<hr />- To determine each character’s width, embed Text in a VStack with Spacer; extract size via GeometryReader and PreferenceKey.<hr />- Store character sizes in a dictionary with character position as key.<hr />- Update size data dynamically upon preference change.<hr />- Compute perimeter and individual widths to determine character angles proportionally.<hr />- Calculate angle per character based on width/ perimeter ratio.<hr />- Rotate characters by computed angles to form circular arrangement.<hr />- Adjust spacing using kerning modifiers to refine character distance.<hr />- Center text by rotating the entire configuration by half the last character’s angle counterclockwise.<hr />- Finalize circular text effect; enjoy SwiftUI creativity.<hr />- Reference project repository for example implementation: https://github.com/viettrungphan/SwiftUIGeometryPractice","tags":"swift","authors":"","date":{"days":18344},"category":"playground > topics > mobile"},"620":{"file_path":"playground/topics/mobile/build-a-passcode-view-with-swift.md","title":"Build A Passcode View With Swift","description":"Learn how to build a custom passcode input view in Swift that shows the keyboard, handles user input, and displays PIN dots with easy-to-follow UIKeyInput and UIView techniques.","spr_content":"- Passcode view can become and resign first responder to control virtual keyboard visibility.<hr />- Passcode functionality is similar to TextField, requiring first responder control.<hr />- Define custom passcode view with visual elements for PIN code input.<hr />- Default behavior: touch TextField/TextView to show keyboard.<hr />- Override canBecomeFirstResponder, conform to UIKeyInput to enable input reception.<hr />- Implement becomeFirstResponder() to programmatically show keyboard.<hr />- Add tap gesture recognizer to passcode view for easy activation of keyboard.<hr />- Handle user input with focus on three methods: insertText, deleteBackward, (possibly) other UIKeyInput methods.<hr />- Manage input string: append or delete characters as needed.<hr />- Map input code to visual PIN dots, updating UI dynamically.<hr />- Use UIStackView to layout PIN dots, distributing \"Dot View\" elements.<hr />- Create helper methods: createEmptyPin() and createNormalPin() for initializing dots.<hr />- Convert user input string into array of pin views and update stack accordingly.<hr />- Remove all existing arranged subviews before re-adding updated PIN dots.<hr />- Call an update method whenever code input changes to refresh the display.<hr />- Build a testing ViewController to visualize and verify passcode UI behavior.<hr />- Make PasscodeView conform to UITextInputTraits to set keyboard type to number pad.<hr />- Display the final PIN interface with user input mapped visually.<hr />- Add callback mechanism to detect when input is complete (e.g., full PIN entered).<hr />- Full source code available at a GitHub repository; compatible with Xcode 11 beta.<hr />- Copy prefix Passxxx and Pin files into project to replicate implementation for testing.","tags":"swift","authors":"","date":{"days":18069},"category":"playground > topics > mobile"},"621":{"file_path":"playground/topics/mobile/draw-watch-face-using-swiftui.md","title":"Draw Watch Face Using Swiftui","description":"Learn how to create a custom watch face with circular bezel, ticks, numbers, and moving hands using SwiftUI Shapes, Paths, and real-time updates in this step-by-step guide.","spr_content":"- SwiftUI facilitates fun, intuitive UI development with Shape and Path, similar to CoreGraphics, CALayer, CAShapeLayer, UIBezierPath.<hr />- Modularize watch components: bezel, tick markers, hands, number markers.<hr />- Use Xcode with SwiftUI, create a new project, add Watch.swift.<hr />- Draw bezel using Path with an Arc for flexible styles; Arc conformed to Shape, needs center, start/end angles.<hr />- Path’s drawing frame (rect) and angles define the circle; start at 0, end at 2π for full circle.<hr />- Fill or stroke the Arc shape for different visual effects; experiment with angles and styles.<hr />- Create Tick shape to draw minute/second markers, from top center line, extend 5 points downward.<hr />- Embed Ticks in ZStack, set frame uniformly; repeat 60 times with rotation of 360/60 degrees.<hr />- For every 5th tick, extend length for visual emphasis.<hr />- For hour numbers, use VStack with Text and Spacer to position numbers at radius, rotate 30° increments for 12 positions.<hr />- Loop 12 times, from 1 to 12, to place hour markers correctly.<hr />- Draw hands with a custom Hand shape: rounded rectangle from center outward; adjustable height via offset.<hr />- Adjust hand width for hour, minute, second hands; overlap when static, so use debugging tools.<hr />- Add a central red dot for second hand tip for clarity.<hr />- Make the clock dynamic: add a @State variable for current date, update every second via Timer.<hr />- On view appear, start timer updating date, which triggers hand angle recalculations.<hr />- Calculate angles based on current time: hours (12-hour cycle), minutes, seconds.<hr />- Rotate the hands based on calculated angles to mimic real clock behavior.<hr />- Final assembly: overlay bezel, tick markers, hour markers, and moving hands.<hr />- Bonus: swap Arc with Circle, apply different colors, styles for varied watch faces.<hr />- Additional resources: GitHub link for geometry practice projects.<hr />- Overall: compositional approach with reusable shaped components and real-time updates creates a realistic, customizable SwiftUI watch face.","tags":"swift","authors":"","date":{"days":18344},"category":"playground > topics > mobile"},"622":{"file_path":"playground/topics/mobile/reproduce-apple-find-me-bottom-menu-view.md","title":"Reproduce Apple Find Me Bottom Menu View","description":"Learn how to recreate the Apple Find Me Bottom Menu view with Swift by building a draggable bottom menu that smoothly resizes between collapsed, half-expanded, and expanded states.","spr_content":"- Goal: Recreate Bottom Menu with three states: Collapsed, HalfExpanded, Expanded.<hr />- Device list Bottom Menu responds to user drag via Pan Gesture.<hr />- Bottom View updates height dynamically following finger movement.<hr />- Bottom View auto-resizes based on drag direction and position relative to “half position”.<hr />- Create Xcode project, add BottomMenuView subclass.<hr />- Inside BottomMenuView, add subview PanView.<hr />- Constrain PanView: leading, trailing, top to superview; height to 44.<hr />- Attach UIPanGestureRecognizer to PanView.<hr />- Add bottom constraint for PanView, connect as outlet.<hr />- Define variables for menu heights: collapsed, half, expanded.<hr />- Handle pan gesture: determine drag direction and position.<hr />- Update menu height during drag based on gesture translation.<hr />- On pan end, snap to nearest state: collapsed, half, expanded, based on position.<hr />- In `awakeFromNib`, initialize menu height to default state.<hr />- Add BottomMenuView to ViewController’s view hierarchy.<hr />- Confirm height updates visually, menu responds to drag gestures.<hr />- Overall: Combining gesture handling with dynamic height constraints achieves interactive multi-state bottom menu.","tags":"swift","authors":"","date":{"days":18076},"category":"playground > topics > mobile"},"623":{"file_path":"playground/topics/ai/explaining-gradient-descent-in-machine-learning-with-a-simple-analogy.md","title":"Explaining Gradient Descent in Machine Learning with a simple analogy","description":"Gradient descent is a fundamental optimization algorithm in machine learning. It's a way for models to learn from data and improve their accuracy by gradually adjusting their internal settings. Think of it like carefully descending a hill to find the lowest point—each small step you take brings you closer to the best possible solution.","spr_content":"Gradient descent as a metaphor for optimization:  <hr />- Mountain terrain symbolizes a error function with numerous peaks and valleys.  <hr />- The goal is to reach the lowest valley, representing minimal error in learning.  <hr />- The agent (learning algorithm) starts at an arbitrary point on the terrain.  <hr />- It assesses the slope (gradient) to determine the steepest descent direction.  <hr />- It takes a small step downhill, updating parameters to reduce error.  <hr />- Repeats the process: evaluate slope, step downward, iterate until convergence at valley bottom.  <hr />- Each step signifies parameter adjustment to improve model accuracy.  <hr />- Gradient acts as the compass indicating the most efficient direction to decrease error.  <hr />- The analogy emphasizes incremental, local improvements rather than global perfection.  <hr />- The process mirrors a cautious descent through uncertain, foggy terrain toward optimal weights.  <hr />- Overall: learning as a hill-climbing journey, refinements driven by local slope information.","tags":"ai llm machine-learning","authors":"innno_","date":{"days":19899},"category":"playground > topics > ai"},"624":{"file_path":"playground/topics/ai/how-we-created-an-ai-powered-interview-system-using-openais-chatgpt.md","title":"How We Created An Ai Powered Interview System Using Openais Chatgpt","description":"Discover InterviewGPT, an AI-powered ChatGPT system that automates technical interviews by generating tailored questions and evaluating answers for engineers at all experience levels.","spr_content":"- ChatGPT is popular but limited in early knowledge; API enables specialized applications.  <hr />- Ngoc Thanh repurposes OpenAI's API for interview automation—rapid insight extraction.  <hr />- Candidate profiling: interrogations tailored for fresher, mid, senior levels—position-specific question sets.  <hr />- InterviewGPT mirrors human interview dynamics—interactive, responsive, conversational.  <hr />- Browser-based platform ensures cross-platform accessibility; built on AgentGPT foundation.  <hr />- Natural language interaction mimics face-to-face interviews—questioning, feedback, follow-ups.  <hr />- Technical core: prompt engineering guides ChatGPT’s role as interviewer; answer evaluation against learned data.  <hr />- Challenges: memory constraints, API limits, response irrelevance—necessitate prompt optimization and data management.  <hr />- Incorporating recent data and self-reflection enhances answer accuracy and relevance.  <hr />- Model tuning via new data allows continuous improvement—adaptive interview assessments.  <hr />- Future features: interview history, holistic evaluation, position suggestions, CV parsing for job matches.  <hr />- The system advances efficient, seamless, AI-driven interview experiences—scaling recruitment solutions.  <hr />- Accessible at interviewgpt.netlify.app; community engagement and development supported through various channels.","tags":"ai engineering llm","authors":"","date":{"days":19506},"category":"playground > topics > ai"},"625":{"file_path":"playground/topics/ai/how-we-crafted-the-ogif-summarizer-bot-to-streamline-weekly-knowledge-sharing.md","title":"How we crafted the OGIF summarizer bot to streamline weekly knowledge-sharing","description":"Introducing the OGIF Memo Summarizer, a chatbot we developed using Dify in collaboration with @innno_. This tool transcribes YouTube videos and extracts key points from our Oh God It’s Friday (OGIF) sessions. By providing both short and detailed summaries in English and Vietnamese, it significantly enhances our ability to review and reference the diverse knowledge shared every Friday.","spr_content":"OGIF (\"Oh God It’s Friday\") is a weekly knowledge-sharing tradition at Dwarves where members deliver 10-minute talks on diverse topics such as software engineering, industry trends, finance, blockchain, and AI. It fosters inclusion, cross-domain learning, and community engagement through Discord discussions.<hr /><hr />A collaborative project with @innno\\_ led to creating an OGIF Memo Summarizer using Dify. This chatbot transcribes YouTube recordings of OGIF sessions, extracting key points to facilitate review and reference, significantly enhancing knowledge retention.<hr /><hr />The summarizer operates via YouTube transcription integration, employing function-calling workflows. It produces structured three-tier summaries: short summaries highlighting 3-5 key timestamps, detailed summaries with in-depth bullet points per timestamp, and bilingual outputs in English and Vietnamese. Summaries include clickable timestamps linking directly to video segments, maintaining consistent formatting for readability, and offering quick overviews plus detailed insights.<hr /><hr />The core prompt ensures accurate timestamping, easy navigation, comprehensive coverage, and organized presentation. Benefits include time-efficient understanding, easy topic access, reliable future reference, and greater accessibility for absent participants.<hr /><hr />Future enhancements aim to incorporate auto-tagging for categorization, search capabilities across summaries, and visual timelines to illustrate topic progression across sessions.<hr /><hr />Overall, the OGIF Memo Summarizer leverages AI to optimize weekly knowledge-sharing, saving time, increasing value, and encouraging other teams to adopt similar tools for efficient learning in software engineering.","tags":"ai guidelines ogif","authors":"innno_ monotykamary","date":{"days":19914},"category":"playground > topics > ai"},"626":{"file_path":"playground/topics/ai/securing-your-remote-mcp-servers.md","title":"Securing your remote MCP servers","description":"This guide explores implementing robust authorization for Model Context Protocol (MCP) over Server-Sent Events (SSE) transport, providing a standardized framework for secure AI-to-tool communication while maintaining vendor independence.","spr_content":"- The AI ecosystem is shifting from isolated systems to interconnected networks via the Model Context Protocol (MCP), which standardizes communication between AI systems and external tools/services.<hr />- Security is critical in these interconnections, especially over SSE transport which streams data asymmetrically, requiring tailored authorization controls.<hr />- The core MCP protocol outline delegates security implementation details to system architects, emphasizing vendor neutrality.<hr />- Practical MCP authorization uses OAuth 2.1 with PKCE for authentication, securing connections via Bearer tokens in headers.<hr />- Client-side configuration involves setting SSE endpoints with authorization headers containing access tokens.<hr />- Server-side implementation validates Bearer tokens on each SSE request, establishing secure, authenticated streams.<hr />- The [typescript-sdk](https://github.com/modelcontextprotocol/typescript-sdk) provides a reference MCP client adaptable with integrated security controls.<hr />- The security challenge involves protecting sensitive data/tools in production, requiring a layered security architecture.<hr />- The architecture includes three principal components: MCP Client (tool requester), MCP Server (tool provider), and Authorization Server (OAuth 2.1 compliant).<hr />- The OAuth flow initiation: client requests connection, server responds with 401, client redirects user to auth endpoint, user authenticates, auth code is issued, client exchanges code for tokens, then establishes a secure SSE connection.<hr />- The MCP server functions as both a Resource and Authorization server, supporting discovery and token endpoints, with persistent SSE connections validated via access tokens.<hr />- Implementing OAuth 2.1 with PKCE ensures protection against code interception; tokens are obtained through a defined authorization, token exchange, and refresh cycle.<hr />- The OAuth discovery metadata endpoint allows clients to dynamically adapt to server API specifics.<hr />- MCP clients manage OAuth flow, tokens, and maintain persistent SSE channels, potentially using browser interfaces for user authentication.<hr />- Federated identity setups: MCP server as OAuth client to external identity providers; external auth delegates to enterprise identity, granting MCP-specific tokens upon external authentication.<hr />- Security best practices: enforce TLS for token transfer, securely store tokens, use PKCE in all OAuth clients, validate state parameters, rotate refresh tokens, limit request rates, and audit all authentication events.<hr />- Deployment considerations include horizontal scalability, connection management, persistent secure token storage, and integration with existing user management systems.<hr />- Establishing a secure AI-tool bridge via MCP over SSE provides a robust, standardized framework balancing security, interoperability, and flexibility.<hr />- As the MCP ecosystem matures, this security architecture supports complex, secure interactions with external tools, maintaining standards compliance and security boundaries.<hr />- Embracing open standards and security best practices ensures MCP remains secure, scalable, and adaptable within the evolving AI landscape.","tags":"ai mcp security","authors":"monotykamary","date":{"days":20174},"category":"playground > topics > ai"},"627":{"file_path":"playground/topics/ai/why-hollywood-and-gaming-struggle-with-ai.md","title":"Why Hollywood and gaming struggle with AI","description":"Why Hollywood and gaming struggle with AI","spr_content":"Incumbent entertainment and video game firms face friction with generative AI adoption. Opportunities open for startups. Large firms hesitate due to:  <hr />- Successful franchises, risk aversion, \"if it ain't broke\" mentality.  <hr />- Preference for adding AI as feature, not creating AI-first products.  <hr />- Legal concerns around IP ownership and copyrighted content reproduction.  <hr />- Creative department resistance, artists fear disruption of their work.  <hr />- Recruitment challenges for top AI engineers, high costs, scarcity.","tags":"ai entertainment","authors":"tieubao","date":{"days":20007},"category":"playground > topics > ai"},"628":{"file_path":"playground/topics/prompt-kit/projects-operations.md","title":"Project Operations Copilots","description":"Project Operations Copilots is a suite of AI assistants designed to streamline project management and reporting processes. These copilots, built using Dify and custom implementations, help teams generate insightful project reports, create comprehensive project charters, and facilitate smooth project handovers. This approach represents a shift towards AI-assisted project management, enhancing team efficiency and project success rates.","spr_content":"- Project operations copilots optimize documentation, reporting, transition processes using AI tools.  <hr />- Monthly Project Report Copilot analyzes data, generates comprehensive reports; tracks metrics, achievements, risks, trends.  <hr />- Project Charter Copilot creates project initiation docs; defines scope, roles, success criteria, timelines, stakeholders.  <hr />- Project Handover Copilot documents status, critical tasks, dependencies, preserves project context; facilitates team transitions.  <hr />- Announcement Copilot drafts and disseminates messages; handles key points, language options, announcement styles, word limits, multiple versions.  <hr />- Each copilot automates repetitive tasks, enhances accuracy, accelerates project workflows, ensures consistency.","tags":"ai copilots project-management","authors":"monotykamary","date":{"days":20041},"category":"playground > topics > prompt-kit"},"629":{"file_path":"playground/topics/prompt-kit/team-copilots.md","title":"Team Copilots","description":"Team Copilots is a suite of AI assistants designed to enhance team collaboration and productivity. These copilots, built using Dify and custom implementations, help teams manage tasks, facilitate communication, and improve overall efficiency. This approach represents a shift towards AI-assisted team management, enhancing team performance and project success rates.","spr_content":"- Team copilots enhance management domains: tasks, communication, productivity.<hr />- Suite includes specialized copilots for distinct functions.<hr />- Newsletter Summary Copilot generates concise summaries; link provided; visual aid included.<hr />- Frontend Commentary Copilot offers insights; accessible via Discord; commands `/fr`; visual aid included.<hr />- Tech Drama Writer Copilot crafts engaging narratives; link provided; visual aid included.<hr />- Onboarding Support Agent Copilot guides new members; link provided; visual aid included.<hr />- Community Round-Up Copilot gathers monthly activity; summaries include key events, achievements, news; limits on word count; multiple versions possible; visual aid included.<hr />- YouTube Transcript Copilot produces video transcripts; enhances content accessibility; link provided; visual aid included.<hr />- These copilots address key management challenges with AI-driven tools tailored for specific team needs.","tags":"ai copilots team-management","authors":"monotykamary","date":{"days":20041},"category":"playground > topics > prompt-kit"},"630":{"file_path":"playground/topics/data/introduction-to-crdt.md","title":"Introduction to CRDT","description":"Conflict-free Replicated Data Types (CRDTs) (aka convergent replicated data type or commutative replicated data type) are data structures that can be replicated across multiple computers in a network, where the replicas can be updated independently and concurrently without coordination between them, and enable operations to always converge to a final state consistent among all replicas.","spr_content":"CRDTs are data structures designed for distributed systems, enabling replicas to be updated independently and concurrently, then automatically converging to a consistent state. They facilitate conflict-free merging through commutative operations, eliminating the need for synchronization or conflict resolution logic. CRDTs address the data modification dilemma by supporting optimistic replication—high performance with automatic conflict resolution—without sacrificing eventual consistency. They are pivotal in applications like mobile data sync, distributed databases, collaborative editing, and large-scale storage; all benefit from decentralized operation and seamless integration into peer-to-peer networks. Unlike traditional reliance on centralized coordination, CRDTs automate conflict merging, ensuring coherence across all replicas regardless of conflicting updates, and operate efficiently in decentralized, scalable environments. Their core value lies in conflict resolution without special intervention, distinguishing them from algorithms used by centralized platforms.","tags":"crdt data-structures data-types distributed-system","authors":"fuatto","date":{"days":19666},"category":"playground > topics > data"},"631":{"file_path":"playground/topics/data/duckdb-demo-and-showcase.md","title":"DuckDB demo and showcase","description":"DuckDB is a great starting point for modern stacks that don't need to worry about scalability, but want to derive hard analytics from the data that they have. This meeting will do a 3-part demo of DuckDB (15 minutes total): • Consolidate NYC taxi data in parallel (through map-reduce) over HTTPS • Aggregate IBM AML transactions (Anti-Money Laundering) • Some examples of how it is used to consolidate and do basic analytics on note.d and log.console.so","spr_content":"DuckDB an emerging OLAP database suited for small to medium analytics (1-10GB data). Its use cases focus on rapid, on-the-fly analytics rather than large-scale data warehouse scalability. DuckDB enables parallel data consolidation (e.g., NYC taxi data via map-reduce over HTTPS) and transaction aggregation (e.g., IBM AML). Demonstrations highlight its flexibility for basic analytics and consolidation tasks, emphasizing ease of use, local deployment advantages, and potential for early-stage startup applications like MotherDuck. The upcoming event will evaluate DuckDB’s fit for current and future projects, establish demo standards for new tech, and showcase practical workflows from pilot projects and external examples. Key concepts include modular, scalable analytics for small datasets, flexible local database tools, and cost/benefit assessments for adoption.","tags":"demo discussion duckdb dwarves event internal labs work workshop","authors":"monotykamary","date":{"days":19684},"category":"playground > topics > data"},"632":{"file_path":"playground/topics/data/data-analyst-in-retail-trading.md","title":"Data Analyst In Retail Trading","description":"Discover how data analysts use tools like Power BI and SQL to transform retail trading data into actionable business insights on sales, finance, and marketing performance.","spr_content":"- Bach Phuong is a Data Analyst at Dwarves Foundation, facilitating insights for partner companies.<hr />- Data Analysts act as gatekeepers of organizational data, exploring, transforming, and aggregating data into reports.<hr />- These reports inform strategic business decisions and stakeholder understanding.<hr />- Toolset includes ETL Tools (Oracle Data Integrator, Apache Airflow), query-layer tools (Dremio), and BI tools (Power BI, Tableau, Google Data Studio).<hr />- ETL tools do not require programming but demand system knowledge.<hr />- Dremio enables exploration and virtual dataset creation from diverse sources.<hr />- Power BI offers portability; Tableau emphasizes usability; Google Data Studio integrates with Google Cloud ecosystem.<hr />- Data Science hierarchy: Infrastructure Engineers set up data systems; Data Engineers build pipelines and models; Data Analysts prepare, analyze, and report data; Data Scientists handle AI/ML tasks.<hr />- In retail trading, understanding business processes—like how sales and logistics work—is crucial for accurate insights.<hr />- System architecture comprises core systems (Hybris, POS, SAP, TMS) and microservices (sales, warehouse, promotion).<hr />- Data flow involves steps from raw data collection by Data Engineers, through modeling and warehousing, to analysis by Data Analysts and visualization.<hr />- Data Analysts in retail trading have three main types: Operations, Finance, and Marketing.<hr />- Operations Analysts focus on daily sales, sales volatility, vendor performance, risk, fraud, product, and inventory issues.<hr />- Finance Analysts monitor margins ($ Revenue - $ Cost) and optimize transportation and warehousing costs.<hr />- Transport costs depend on route distance, volume, and distributor rates; margin control balances distributor gain and company profit.<hr />- Marketing Analysts track customer funnels, conversion rates, and segment customers based on Pareto principle.<hr />- Customer segmentation helps target high-value customers, optimizing resource allocation.<hr />- Overall, Data Analysts depend on requirements collection and data aggregation, serving critical roles in business insights and decision-making.<hr />- They bridge raw data to strategic knowledge, foundational to understanding operational and market dynamics.","tags":"engineering practice radar","authors":"","date":{"days":19233},"category":"playground > topics > data"},"633":{"file_path":"playground/topics/data/sql-practices-orm-vs-plain-sql.md","title":"Sql Practices Orm Vs Plain Sql","description":"Learn how to choose between raw SQL, ORM, and SQL generators, optimize database performance with smart indexing, avoid rounding errors, and write efficient queries for better security and speed.","spr_content":"- Raw queries involve self-driven, from-scratch SQL; ORM maps objects to relational data; SQL Generator automates entity and query creation.  <hr />- Decision factors for techniques: productivity (development, maintenance, DB flexibility), security (SQL injection), performance (efficiency).  <hr />- Use ORM broadly, deeply understand its library; raw SQL and SQL generators reserved for special cases.  <hr />- Indexes optimize performance; they are data structures linking values to rows, speeding up retrieval, updates, deletes.  <hr />- Index misconceptions: not mandated by ANSI SQL, insufficient or excess indexes can impair performance, unnecessary indexes add overhead.  <hr />- Index updates needed for DML operations; avoid creating redundant or unused indexes—focus on primary key, significant string/hash columns, or queries.  <hr />- Indexing strategies should be based on query requirements; measure bottlenecks (e.g., via `EXPLAIN`, tools like pgfouine), and tailor indexes accordingly.  <hr />- Example: conditionally create unique index on `variant_id` where null — `CREATE UNIQUE INDEX ... WHERE variant_id IS NULL`.  <hr />- Over time, index fragmentation occurs; rebuild indexes with database tools to maintain efficiency.  <hr />- Floating-point types (float, decimal) have finite precision; IEEE 754 floats approximate, leading to rounding errors.  <hr />- Use fixed-precision numeric/decimal types in SQL for monetary or measurement data requiring exactness.  <hr />- Query best practices: alias columns for clarity, prefer `=` over `LIKE` for exact matches, use `WITH` for complex queries, avoid `DISTINCT` without reason, specify needed columns explicitly.  <hr />- To get maximum value per group, follow single-value rule: each selected column must have one value per group, based on the grouping columns.  <hr />- Text search: avoid wildcard `%` at start (poor performance), prefer full-text search, dedicated search engines, or custom keyword procedures with triggers for updates.  <hr />- Proper text search enhances performance; implement correct tools for the context and data size.  <hr />- Reference materials include SQL antipattern guide, query optimization blogs, IEEE floating-point conversion links.","tags":"database sql","authors":"","date":{"days":18815},"category":"playground > topics > data"},"634":{"file_path":"playground/topics/data/database-design-circular.md","title":"Database design Circular","description":"A comprehensive guide to understanding circular references in database design, including types, challenges, real-world applications, and solutions for managing them effectively. Covers self-references, circular dependencies, and strategies for maintaining data integrity while working with circular relationships.","spr_content":"- Circular references in databases occur when two or more tables reference each other directly or indirectly, forming a cycle.  <hr />- Example: Students referencing professors as advisors, and professors referencing students as advisees.  <hr />- Insertion issues arise because non-null foreign keys prevent adding records without existing related records, blocking data entry.  <hr />- Complex example: Task management system with entities—users, tasks, projects, project_assignments, project_teams—forming cyclical links.  <hr />- Circular access pathways can be detected by tracing foreign key relationships starting from a primary table, revealing cycles.  <hr />- Not all models that visually form a circle are true circular references; some are acyclic with multiple reference pathways.  <hr />- Types of circular references: self-references (parent-child), cycles (endless loops among tables), multi-table chains.  <hr />- Challenges: data integrity risks, complicated and inefficient queries, potential infinite loops in recursive operations, maintenance difficulty.  <hr />- In real-world scenarios, circular references model mutual or bidirectional relationships—employee-manager, family hierarchies, social networks, cross-references, etc.  <hr />- Solutions to manage circular references:  <hr />  - Minimize their use.  <hr />  - Detect and prevent early during design or implementation.  <hr />  - Limit to one data flow route between entities.  <hr />  - Use deferred constraint checks where supported (transactions validate constraints after all operations).  <hr />  - Employ soft references or application-level logic without strict foreign keys.  <hr />  - Break dependencies with intermediate/junction tables.  <hr />  - Normalize schemas, or selectively denormalize to simplify relationships.  <hr />- Caution: circular references are sometimes necessary but pose significant system challenges, so they should be used intentionally and cautiously.","tags":"data-modeling database sql","authors":"hieuthu1","date":{"days":20026},"category":"playground > topics > data"},"635":{"file_path":"playground/topics/data/bloom-filter.md","title":"Bloom Filter","description":"A Bloom Filter is a probabilistic data structure used for testing whether an element is a member of a set or not. It's space-efficient compared to other data structures like hash tables, but it may give false positives (indicating that an element is in the set when it's not) and never gives false negatives (indicating that an element is not in the set when it actually is not)...","spr_content":"- **Bloom Filter** is a probabilistic data structure for set membership testing.<hr />- Space-efficient compared to hash tables; trades exactness for memory saving.<hr />- Contains **no false negatives**; may produce false positives.<hr />- Initialized with a bit array of size `m` and `k` hash functions.<hr />- **Adding element**: hash with `k` functions, set corresponding bits to `1`.<hr />- **Checking member**: verify if all `k` bits are `1`; if so, element probably in set.<hr />- **False positives** occur due to hash collisions; false negatives do not.<hr />- Use case: **Large-scale systems** for quick existence checks, e.g., username availability.<hr />- Applicable in **caching**, **deduplication**, **web crawling**, **spell checking**, **network routing**, **blockchain synchronization**.<hr />- **Advantages**: space-efficient, constant-time membership tests, no false negatives, versatile.<hr />- **Limitations**: false positives, no element removal, parameter sensitivity, limited operations, dependence on hash quality.<hr />- Simple implementation involves a bit array, multiple hash functions, add and check functions.<hr />- Hash functions are critical; select strong hash functions to minimize false positive rate.<hr />- Implementation exemplified in Go code, demonstrating core methods: `Add()`, `Contains()`.<hr />- Suitable where **small risk of false positives** is acceptable; unsuitable where **accuracy is critical**.","tags":"big-o bloom-filter data-structure","authors":"hoangnnh","date":{"days":19902},"category":"playground > topics > data"},"636":{"file_path":"playground/topics/data/sql-and-how-it-relates-to-disk-reads-and-writes.md","title":"SQL and how it relates to Disk Reads and Writes","description":"Sequential read/write operations involve accessing data in a continuous, linear manner. This typically occurs when transferring large files or accessing a large file on the drive. In sequential read/write operations, the drive can read or write data from a series of blocks, allowing for faster performance...","spr_content":"- Data access patterns are classified as random or sequential reads/writes.  <hr />- Sequential operations process data contiguously, enabling faster transfer for large datasets.  <hr />- Random operations access scattered data blocks, slowing performance, especially on HDDs.  <hr />- HDDs' read/write heads seek positions physically, limiting random access speed; SSDs handle random access better due to no moving parts.  <hr />- In database design, separating read and write workflows via CQRS enhances performance; read schemas favor random access, write schemas favor sequential access.  <hr />- Using separate storage technologies (e.g., SSDs for random reads, HDDs for sequential writes) optimizes resource use.  <hr />- SQL commands influence disk access:  <hr />  - SELECT: can be sequential or random based on data organization.  <hr />  - INSERT: sequential if appending; random if inserting at various locations.  <hr />  - UPDATE and DELETE: often involve random reads/writes due to scattered data.  <hr />  - Index operations: create or modify indexes resulting in either sequential or random disk activity depending on index type and data layout.  <hr />- Optimizing PostgreSQL involves table partitioning, indexing, query tuning, assigning tables to different disks, configuring parameters like shared_buffers and wal_buffers, and reorganizing data with CLUSTER or pg_repack.  <hr />- Proper disk organization prioritizes maximum sequential I/O to improve overall database performance.  <hr />- The organization of data, table structure, and operation type directly impact whether disk actions are predominantly sequential or random.  <hr />- Effective database architecture leverages understanding of disk I/O patterns to enhance scalability, responsiveness, and resource efficiency.","tags":"data-engineering engineering random-reads random-writes sequential-reads sequential-writes","authors":"monotykamary","date":{"days":19606},"category":"playground > topics > data"},"637":{"file_path":"playground/topics/data/local-first-software.md","title":"Local-first Software","description":"Local-first software is an approach to software development that emphasizes data ownership, offline functionality, and real-time collaboration. This model ensures data is primarily stored on the user's device, enhancing privacy and control while enabling seamless synchronization and collaboration without relying on continuous internet connectivity","spr_content":"- Local-first software prioritizes data storage on user's devices, ensuring ownership, privacy, offline access, and resilience.  <hr />- It synchronizes data with other devices and the cloud when connectivity permits; enhances cloud benefits without centralization risks.  <hr />- Unlike traditional client-server apps, local-first makes clients the primary data source; servers serve as backups and sync points.  <hr />- Core mechanisms include CRDTs—Conflict-free Replicated Data Types allowing conflict-free, concurrent edits—and data synchronization.  <hr />- Synchronization often employs end-to-end encryption for security during offline-changed data merging.  <hr />- Benefits: full user data control, privacy, offline functionality, improved performance, reliability, real-time collaboration, conflict resolution.  <hr />- Traditional models (file systems, email) lack seamless multi-device sync and real-time collaboration; cloud solutions centralize control and risk breaches; hybrid models depend on centralized servers for data access.  <hr />- Users and apps adopting local-first: Figma (design collaboration), Obsidian (knowledge base), Notion (offline editing), Linear (project management).  <hr />- Challenges include CRDT complexity, security concerns, user experience balancing, performance overhead of sync and conflict resolution.  <hr />- Local-first paradigm integrates ownership, privacy, offline resilience, and synchronization, diverging from conventional centralization.","tags":"crdt data-ownership data-synchronization local-first real-time-collaboration","authors":"mashiro5951","date":{"days":19910},"category":"playground > topics > data"},"638":{"file_path":"playground/topics/data/how-i-came-up-with-our-security-standard.md","title":"How I came up with our Security Standard","description":"In this memo, I want to share with you my thought process behind our security guideline for Dwarves. This is a critical aspect for a software company that aims to establish trusted partnerships with clients. They rely on us because we take the security of their ideas and data seriously.","spr_content":"- Security guidelines are driven by client requests, emphasizing data protection and confidentiality.<hr />- Internal team’s low security awareness poses risks, including discussions in public channels and insecure remote work practices.<hr />- Enhancing security capabilities builds confidence and prepares us for larger clients.<hr />- Incorporating standards like ISO 27001 and GDPR ensures compliance and simplifies onboarding new clients.<hr />- Remote work challenges necessitate security measures adaptable to unsecured networks and distributed access.<hr />- Routine activities (coding, browsing, breaks) are potential vulnerabilities; awareness is essential.<hr />- Guidelines are crafted to be accessible and straightforward for effective team training.<hr />- The structure comprises three core sections: setup/configuration, daily operations, and management/reporting.<hr />- Practical dos and don’ts with visual aids support comprehension and implementation.<hr />- Implementation strengthens security posture, fosters trust, and reinforces professional reputation.<hr />- The overarching goal is safeguarding client assets to demonstrate responsibility and maintain credibility.","tags":"security standardization work-adoption","authors":"thanh","date":{"days":19832},"category":"playground > topics > data"},"639":{"file_path":"playground/topics/data/managing-dataflow-and-sql-database-with-concurrency-control.md","title":"Managing Dataflow And Sql Database With Concurrency Control","description":"Learn how explicit locking in PostgreSQL helps manage concurrency control in high-workload databases by preventing data conflicts with table-level, row-level, and advisory locks.","spr_content":"- Software applications range from games to e-commerce, each with similar underlying concurrency issues.  <hr />- High-workload databases face contention when multiple transactions access the same data simultaneously.  <hr />- Concurrency control is essential to prevent inconsistent data states such as race conditions.  <hr />- The example of an e-bank app illustrates race conditions when concurrent withdrawals or deposits occur.  <hr />- Without proper locking, simultaneous balance retrievals and updates can lead to overwrites and data inconsistency.  <hr />- Explicit locking mechanisms help manage concurrent data access explicitly within transactions.  <hr />- Types of database locks include shared locks (read), exclusive locks (write), and others like update, intent, and schema locks.  <hr />- Locking scopes range from database-wide to fine-grained row locks, with table and row locks being most relevant here.  <hr />- Table locks prevent any access to full tables, often automatically acquired by the database.  <hr />- Row-level locks allow concurrent access to different rows within the same table, reducing contention.  <hr />- Lock modes at table level (e.g., ACCESS SHARE, ROW SHARE, EXCLUSIVE) have conflicting permissions, managed via lock mode tables.  <hr />- Row lock modes (e.g., FOR SHARE, FOR UPDATE) similarly control concurrent row modifications.  <hr />- Advisory locks provide application-controlled locking, independent of database's automatic mechanism.  <hr />- PostgreSQL supports advisory locks via functions like `pg_try_advisory_lock` for distributed or multi-connection control.  <hr />- `SELECT FOR UPDATE` locks specific rows until transaction completes, ensuring safe balance updates in banking examples.  <hr />- In multi-server systems, advisory locks help prevent duplicate processing across distributed nodes.  <hr />- Proper lock selection (row vs table, explicit vs advisory) depends on application needs, scalability considerations, and conflict potential.  <hr />- Locking is one solution; alternatives include queuing or dedicated request-routing to minimize contention.  <hr />- Understanding lock modes and levels is key to designing reliable, high-concurrency systems while avoiding deadlocks and conflicts.","tags":"data rd","authors":"","date":{"days":19481},"category":"playground > topics > data"},"640":{"file_path":"playground/topics/data/creating-a-fully-local-search-engine-on-memo.md","title":"Building a Local Search Engine for Our Memo Website","description":"Explore how we developed a fully local search engine for our memo website using DuckDB-wasm, Transformers.js, and Alpine.js. Learn about hybrid search techniques, real-time embeddings, and performance optimizations that deliver fast and accurate results without compromising on privacy or requiring server-side processing.","spr_content":"- Shift from third-party solutions (Algolia, Modal) to in-browser, fully local search for privacy, cost, offline access, customization.  <hr />- DuckDB chosen for its in-browser SQL, powerful capabilities, and eventual array type feature aligning with our timeline.  <hr />- Implementation parallels DuckDB’s broader adoption in analysis, AI, web apps via hybrid search, semantic integration.  <hr />- Core tech stack: DuckDB-wasm (in-browser SQL DB), Transformers.js (embeddings), Alpine.js (UI), Lodash (data), Snarkdown (Markdown).  <hr />- Hybrid search combines full-text BM25 retrieval with semantic similarity via cosine similarity on embeddings.  <hr />- Advanced filtering syntax (@name, #tag, title:keyword) enables targeted queries within natural language search.  <hr />- Embeddings generated in real-time client-side, emphasizing efficiency and immediacy.  <hr />- Caching mechanisms speed up load times, maintaining responsiveness of the local database.  <hr />- Responsive UI built with Alpine.js delivers instant user feedback, maintaining a sleek, reactive interface.  <hr />- Performance: indexing strategies (FTS + HNSW), debounced inputs, lazy embedding calculations optimize speed and resource use.  <hr />- Challenges: balancing speed and accuracy solved by hybrid retrieval, indexing, caching; future focus on persistent state and speed.  <hr />- Future enhancements: persistent searches across page transitions, WebAssembly, SQL query optimizations, background processing, server-side options (Elixir, static generation).  <hr />- Overall: modern, privacy-centric, server-free search engine leveraging full-text and semantic search, designed for speed, control, offline capability.","tags":"duckdb hybrid-search search-engine transformersjs","authors":"monotykamary","date":{"days":19921},"category":"playground > topics > data"},"641":{"file_path":"playground/topics/engineering/our-view-on-fullstack-engineering.md","title":"Our View On Fullstack Engineering","description":"Discover what full-stack engineering truly means, exploring how skilled developers blend frontend, backend, and infrastructure knowledge to create seamless, user-focused software solutions.","spr_content":"- Full-stack engineering = understanding software as a whole system, not just parts.  <hr />- Analogy: akin to chemical laws governing reactions, underlying principles guide development.  <hr />- Beyond coding: encompasses entire software lifecycle — conception, deployment, maintenance.  <hr />- Software resembles a living organism, with the product as its heart.  <hr />- User interface and features reflect user intentions and desires.  <hr />- Infrastructure underpins the visible product, ensuring stability and performance.  <hr />- True full-stack engineers grasp the interdependence of product (front-end), platform (infrastructure), and data flow.  <hr />- They are creators and architects, designing resilient, adaptable systems.  <hr />- Their role extends to visualizing complex interactions and understanding hardware influences.  <hr />- Modern engineers must harmonize product and platform with business and user needs.  <hr />- Full-stack is a philosophy, balancing technical skills with holistic understanding.  <hr />- They drive innovation, shaping impactful, transformative software in a tech-evolving landscape.","tags":"dwarves engineering","authors":"Thanh Pham","date":{"days":19599},"category":"playground > topics > engineering"},"642":{"file_path":"playground/topics/engineering/the-removal-of-apache-kafka-s-dependency-on-zookeeper.md","title":"The removal of Apache Kafka's dependency on Zookeeper","description":"Kafka has been using Zookeeper for a variety of important functions. It uses Zookeeper to keep track of which brokers are part of the Kafka cluster. This is a critical task, as it enables Kafka to ensure that each broker is working properly and that the entire cluster is functioning as intended...","spr_content":"- Zookeeper is integral to Kafka: tracking broker membership, leader election, configuration storage, and health notifications.  <hr />- Zookeeper's role ensures cluster integrity, partition leadership, configuration consistency, and event signaling.  <hr />- Critical functions of Zookeeper include coordinating cluster state, storing topic/permission data, managing consumer offsets, and health alerts.  <hr />- Challenges with Zookeeper: state mismatches with Kafka controller metadata cause confusion; performance degradation during frequent leader elections upon broker joins/leaves.  <hr />- Zookeeper deployment is simple via a Java service but scaling is limited (~200k partitions).  <hr />- Kafka’s architecture historically relied on Zookeeper for the controller, loading state from a quorum, pushing updates via `LeaderAndIsr` and `UpdateMetadata`.  <hr />- Controller's role involves managing topic partitions, broker states, propagating cluster updates, and ensuring system reliability through Zookeeper.  <hr />- Issues: high leader-election load reduces performance; controller state inconsistencies with Kafka metadata.  <hr />- KRaft mode introduces a controller quorum replacing Zookeeper, leveraging Raft consensus algorithm for managing Kafka metadata internally.  <hr />- Active KRaft controller handles RPCs, orchestrates cluster metadata, and maintains consistency without Zookeeper load.  <hr />- KRaft improves performance: no need to load state from Zookeeper during leader changes; brokers fetch updates via `MetadataFetch` API.  <hr />- Advantages of KRaft mode over Zookeeper: simplified deployment, fewer leader elections, enhanced scalability, and elimination of external dependency.  <hr />- KRaft’s architecture: controller handles cluster metadata, election via Raft, replication among controllers, and direct broker communication.  <hr />- Transition to KRaft streamlines Kafka management, reduces complexity, and mitigates performance bottlenecks linked to Zookeeper overload.","tags":"engineering kafka zookeeper","authors":"fuatto","date":{"days":19613},"category":"playground > topics > engineering"},"643":{"file_path":"playground/topics/engineering/working-on-a-project-interview-assessment-at-dwarves.md","title":"Working On A Project Interview Assessment At Dwarves","description":"Discover how a paid coding project at Dwarves using Discord API and Elixir provided a unique interview experience focused on real backend data engineering and engagement analytics.","spr_content":"- LLMs embed and associate knowledge, abilities, and concepts within latent space, primed by specific prompts or cues.<hr />- Effective priming activates latent capabilities, enabling reasoning, planning, and theory of mind.<hr />- SPR distills complex input into concise, interconnected assertions capturing concepts, analogies, and metaphors.<hr />- Human-like associative thinking can be harnessed in language models via carefully constructed priming.<hr />- Designs like AOT and JIT represent different trade-offs in data state management—simplicity versus historical depth.<hr />- AOT aggregates current state data; minimal memory, limited historical insight.<hr />- JIT logs detailed event data; large storage, enables historical analysis.<hr />- Pull-based message retrieval mimics blockchain event filtering; uses cursors for incremental, lossless data collection.<hr />- Rate limiting and backpressure are addressed via sleep intervals and batching.<hr />- Reactions pose API constraints; push-based, lossy approach compensates.<hr />- Event handlers `onReactionCreate`/`Remove` update engagement counts asynchronously, favoring responsiveness.<hr />- Paid projects as interview methods allow thorough assessment and experiential insight, with trade-offs in time and scalability.<hr />- Closing reflection emphasizes paid projects exemplify craftsmanship, provide valuable learning, but are resource-intensive.<hr />- Overall, the project exemplifies practical backend data engineering, API navigation, and the strategic use of paid assessments for talent evaluation.","tags":"bounty community engineering","authors":"","date":{"days":19516},"category":"playground > topics > engineering"},"644":{"file_path":"playground/topics/engineering/sprint-lifecycle.md","title":"Sprint Lifecycle","description":"Learn the strict sprint lifecycle rules including sprint start, automatic closure, code release timing, and deployment schedules to ensure smooth project management and timely deliveries.","spr_content":"- Sprint begins immediately after sprint planning; no exceptions.<hr />- Prior to planning, engineers focus on activities akin to second-week Friday tasks.<hr />- Sprint ends automatically on second Thursday at 6:00 PM.<hr />- Unclosed tickets are re-queued at backlog top post-sprint.<hr />- Post-sprint engineer actions: prepare improvement notes and tickets for next planning; engage in continuous learning.<hr />- Code is tagged and released Friday morning, following release flow, after sprint completion.<hr />- Release notes are generated and delivered to the product team Friday morning post-sprint.<hr />- Only tickets closed by sprint end are included in release.<hr />- Code deployment to internal staging occurs Friday post-release.<hr />- Customer staging deployment takes place Tuesday morning after sprint concludes.","tags":"agile","authors":"","date":{"days":16841},"category":"playground > topics > engineering"},"645":{"file_path":"playground/topics/engineering/dcos-series-part-4-deploy-simple-application-with-backend-database.md","title":"Dcos Series Part 4 Deploy Simple Application With Backend Database","description":"Learn how to build and deploy a Golang todolist backend with PostgreSQL on DC/OS using Docker, including database setup, Dockerfile creation, and Marathon deployment configuration.","spr_content":"- Golang is favored for easy, rapid backend server deployment, typically within 1 minute.<hr />- Initialize a `todolist` app with minimal code to set up database connection, seed data, and expose an API endpoint.<hr />- Use environment variables (`DB_USER`, `DB_PASSWORD`, `DB_HOST`, `DB_NAME`) for flexible database configuration.<hr />- Database connection via GORM, with auto-migration for `Task` model and seed data insertion.<hr />- API server uses Gin framework; `/tasks` endpoint retrieves tasks with limit and offset.<hr />- Dockerize app with a minimal Dockerfile based on Alpine, installing CA certificates, copying binary, and setting environment variables.<hr />- Build app statically (`CGO_ENABLED=0`) for container compatibility.<hr />- Push Docker image to registry (`docker build`, `docker push`).<hr />- On DC/OS, deploy PostgreSQL via package manager, configure advanced settings, share volumes, specify nodes, and enable load-balanced addresses.<hr />- Share volumes inside container for persistent data, e.g., `/srv/todolist/postgresql:/var/lib/postgresql/data`.<hr />- Deploy application using Marathon with a JSON configuration, replacing database environment variables accordingly.<hr />- Expose app via HAProxy with virtual host (`todolist.yourdomain.com`).<hr />- Monitor deployment and application health via DC/OS dashboard and logs.","tags":"dcos","authors":"","date":{"days":17327},"category":"playground > topics > engineering"},"646":{"file_path":"playground/topics/engineering/well-crafted-software.md","title":"Well Crafted Software","description":"Discover how software craftsmanship enhances coding skills, promotes clean design, and drives continuous improvement for developers committed to building well-crafted, maintainable software.","spr_content":"- Well-crafted software remains understandable, maintainable, and predictable over time.<hr />- Longevity of clarity correlates with high test coverage, clean design, and business language integration.<hr />- Adding or modifying features should not significantly increase effort compared to initial development.<hr />- Software craftsmanship emphasizes developers' skill, responsibility, and continuous improvement.<hr />- Mastery in craftsmanship requires time, dedication, and reflects a professional lifestyle.<hr />- Pride in work and striving for excellence characterize true craftsmen.<hr />- Development process: identify root cause, deploy initial solution, optimize iteratively.<hr />- Perfection is elusive; progress is incremental—first make, then refine.<hr />- Organizational culture must embed this continuous flow of making, fixing, and improving.<hr />- \"Know-how\" is experiential, built through trial, error, and learning—not certificates.<hr />- Practical experience surpasses theoretical knowledge; craftsmanship is demonstrated through living the principles.<hr />- Reputation in craftsmanship stems from actions and integrity, not preaching.","tags":"engineering","authors":"tieubao","date":{"days":18280},"category":"playground > topics > engineering"},"647":{"file_path":"playground/topics/engineering/are-we-really-engineers.md","title":"Are We Really Engineers","description":"Explore why software engineering is truly engineering, highlighting its use of discrete math, agile methods, professionalism, and unique tools like version control that set it apart yet align it with traditional engineering.","spr_content":"- Software engineering parallels traditional engineering through process, math, and product creation, despite perceptions of difference.  <hr />- Engineering fundamentally involves mathematics; software uses discrete math—logic, graph theory, combinatorics—often internalized and unnoticed.  <hr />- Different engineering branches apply different mathematics; all are valid forms of engineering practice.  <hr />- Engineering projects are predictable, planned, and require rigorous upfront requirements; software projects are dynamic and unpredictable.  <hr />- Traditional engineering adopts Waterfall; software favors Agile.  <hr />- Traditional engineering emphasizes manufacturing; software emphasizes design—\"the code is the design.\"  <hr />- Rationales for differing processes stem from economic models: longer, expensive iterations encourage detailed planning; shorter iterations favor flexibility.  <hr />- Despite differences, all engineering fields face shifting requirements, unknown variables, and complex challenges.  <hr />- Each engineering discipline has unique challenges (security for software; weather for civil; chemical processes), but core values—planning, responsibility, abstraction—are shared.  <hr />- Lessons from other engineering fields: adopt more structured processes, thorough planning, and professionalism.  <hr />- Software's less tangible nature affects responsibility sense; fostering pride and responsibility is vital.  <hr />- Openness and community collaboration are strengths unique to software engineering: accessible learning resources, community conferences, knowledge sharing.  <hr />- Wide availability of free, open-source tools fosters self-education and career flexibility.  <hr />- Version control (e.g., git) revolutionizes software development—paradigm shift; enables precise, collaborative, and automated workflows.  <hr />- Other fields lack comparable versioning; software’s plaintext approach enhances traceability and flexibility.  <hr />- Many artifacts in software (code, diagrams, documentation) are compatible with version control, facilitating transparency.  <hr />- Overall, software engineering is \"really\" engineering; distinctions are more cultural and procedural than technical.  <hr />- Licensure and political constructs influence perceptions more than technical differences.  <hr />- The concept of \"software developer\" versus \"software engineer\" reflects practice flexibility; transitions are straightforward.  <hr />- Unique aspects—fast iteration, loose constraints, material consistency—distinguish software but also align with core engineering principles.  <hr />- Core engineering tenets—process, responsibility, abstraction—are equally applicable in software.  <hr />- Traditional engineering’s professionalism and responsibility inspire aspects of discipline; openness and community are software advantages.  <hr />- The evolution of version control offers insights for traditional fields, emphasizing transparency, collaboration, and efficiency.  <hr />- Understanding industry context and foundational principles is crucial for apprentices and practitioners—a cornerstone for better decision-making.","tags":"engineering","authors":"","date":{"days":18694},"category":"playground > topics > engineering"},"648":{"file_path":"playground/topics/engineering/dcos-series-part-2-deploy-simple-applications.md","title":"Dcos Series Part 2 Deploy Simple Applications","description":"Learn how to deploy applications on DC/OS using the GUI and CLI, manage services, and install packages from the Universe for easy cluster and app management.","spr_content":"DC/OS GUI: Dashboard provides node metrics/status; Services tab shows application/node relationships.  <hr />Universe tab: Lists available DC/OS services; installs via single click; customizable packages.  <hr />CLI: Manages cluster, installs packages, inspects cluster, deploys apps.  <hr />CLI installation: Via web interface; copy-paste commands into terminal.  <hr />CLI usage: `dcos` provides commands for auth, config, experiment, help, job, marathon, node, package, service, task.  <hr />Focus on `dcos marathon app add <app-resource>` for deployment.  <hr />App definition: JSON file with id, instances, resources, container details, optional resource roles (`slave_public`).  <hr />Deploy app: `dcos marathon app add my-app.json`; success: deployment ID.  <hr />Verify app: `dcos marathon app list`; shows app status, resources, health, container info.  <hr />GUI verification: Check `Services` tab; select service ID; view `Endpoint` for app access.","tags":"dcos","authors":"","date":{"days":17291},"category":"playground > topics > engineering"},"649":{"file_path":"playground/topics/engineering/dcos-series-part-1-quick-look-installation.md","title":"Dcos Series Part 1 Quick Look Installation","description":"Learn how to install and set up DC/OS, a data center OS based on Apache Mesos, for managing modern containerized applications across master, public, and private agent nodes.","spr_content":"- DC/OS (Data Center Operating System) based on Apache Mesos kernel, integrating extensive real-world experience and best practices for modern production applications.<hr />- A DC/OS cluster comprises three main node types: masters, private agents, and public agents.<hr />- Bootstrap node initializes configurations and generates `dcos_generate_config.sh` for deploying DC/OS.<hr />- Master node monitors metrics from all subordinate nodes (public and private agents).<hr />- Public agent nodes connect externally via infrastructure networking, accessible from outside the cluster.<hr />- Private agent nodes operate on isolated networks without external ingress.<hr />- Purpose: Enable modern app development with containers and big data, facilitating smooth transition from development to production.<hr />- Installation supported across multiple cloud providers: AWS, Azure, DigitalOcean, GCE, Packet.<hr />- Preparation involves creating a `genconf` directory on bootstrap node.<hr />- Configuration file `config.yaml` defines bootstrap URL, cluster name, storage backend, IP detection, master list, DNS resolvers, and Docker credentials.<hr />- `ip-detect` script federates node IP detection.<hr />- Download the DC/OS installer script `dcos_generate_config.sh`.<hr />- Run the script on bootstrap node to produce tailored configuration for the cluster.<hr />- Transfer to each master node: SSH, create directory, download installer, execute for master setup.<hr />- Similarly, on agent nodes: SSH, create directory, download installer, specify node role (`slave` for private, `public` for exposed nodes).<hr />- Launch the web interface at `http://<master-public-ip>/` for cluster management and monitoring.","tags":"dcos","authors":"","date":{"days":17290},"category":"playground > topics > engineering"},"650":{"file_path":"playground/topics/engineering/dcos-series-part-3-service-discovery-and-load-balancing.md","title":"Dcos Series Part 3 Service Discovery And Load Balancing","description":"Learn how to use Marathon Load Balancer in Mesosphere DCOS for efficient service discovery, load balancing, and virtual host routing with HAProxy in your containerized apps.","spr_content":"- DCOS Mesosphere provides service discovery and load balancing tools.<hr />- Marathon Load Balancer (marathon-lb) is built on HAProxy for proxying and load balancing TCP/HTTP.<hr />- DNS-based discovery via Mesos-DNS has limitations: no port identification (unless SRV), slow failover, stale TTL, no health info, and cache issues.<hr />- marathon-lb subscribes to Marathon's event bus to dynamically update HAProxy configs in real time.<hr />- marathon-lb is available via DC/OS universe, installed with `dcos package install marathon-lb`.<hr />- Check marathon-lb status by accessing `http://<public-slave-ip>:9090/haproxy?stats`.<hr />- Internal load balancer setup involves creating `options.json` with custom app name, HAProxy group, and disabled HTTP/HTTPS forwarding.<hr />- Install internal LB with `dcos package install --options=options.json marathon-lb`.<hr />- External and internal load balancers coexist; internal instances specify `servicePort` (e.g., 10001).<hr />- Sample nginx apps: external (`HAPROXY_GROUP: external`) and internal (`HAPROXY_GROUP: internal`), with unique `servicePort`s from 10000 upwards.<hr />- nginx can be exposed on multiple instances (`nginx-everywhere`) with combined labels `HAPROXY_GROUP: external,internal`.<hr />- Service ports are assigned via portMappings or ports parameter.<hr />- Test app accessibility via curl to LB URLs with respective servicePort.<hr />- Virtual hosting allows multiple FQDNs on one LB, routing based on domain.<hr />- To configure virtual hosts: point domain DNS to LB, add `\"HAPROXY_0_VHOST\": \"domain.name\"` to app JSON.<hr />- Deploy and verify traffic routing based on hostname matches LB configuration.","tags":"dcos","authors":"","date":{"days":17303},"category":"playground > topics > engineering"},"651":{"file_path":"playground/topics/engineering/build-an-assistant-on-the-terminal.md","title":"Build An Assistant On The Terminal","description":"Mimir is a fast CLI tool that uses AI and heuristic methods to provide precise programming answers and debugging help directly in your terminal without browsing the web.","spr_content":"- Developers search frequently for coding references; web pages and blogs garner billions of views.<hr />- Searching disruptively consumes time; quick, integrated support is highly valuable.<hr />- Terminal assistant ('Mimir') acts as an in-terminal support, reducing context-switching.<hr />- Named after Mimir from _God of War_—a guide and knower—mirroring the tool's guiding role.<hr />- Mimir is a CLI tool that accepts questions, searches online, parses results, and displays answers.<hr />- It functions as a conversational debugger, patiently listening to code explanations, offering encouragement.<hr />- Builds on _howdoi_ which uses search engines to find and parse answers from web content.<hr />- _howdoi_ suffers from high false positives due to reliance on question phrasing and search results.<hr />- AI approaches, heuristic and language processing, are proposed to improve accuracy and relevance.<hr />- Primary challenge: balancing swift response times (seconds) with answer precision.<hr />- ML and embedding-based NLP methods are too heavy; favor simple, fast heuristic/language techniques.<hr />- Implementation uses `Go` for network efficiency; AI component minimal for speed.<hr />- Utilizes `Cobra` framework for CLI architecture.<hr />- Workflow:<hr />  - User input → keyword extraction via TextRank.<hr />  - Heuristic filtering/directing based on keywords.<hr />  - Summarization with TF-IDF.<hr />  - Formatted answer output.<hr />- TextRank:<hr />  - Graph-based, inspired by PageRank.<hr />  - Nodes = words (excluding stop words).<hr />  - Edges = co-occurrence within a window.<hr />  - Scores update iteratively until convergence, capturing keyword importance.<hr />- Focus on window-based TextRank, avoiding resource-heavy embedding methods for efficiency.<hr />- Overall goal: rapid, relevant programming support integrated into terminal environment.","tags":"tutorial","authors":"","date":{"days":18348},"category":"playground > topics > engineering"},"652":{"file_path":"playground/topics/engineering/database-designs-for-multilingual-apps.md","title":"Database Designs For Multilingual Apps","description":"Learn how to design multilingual databases using column-based, JSON-based, and translation table approaches to efficiently manage multi-language support for apps with scalable and flexible solutions.","spr_content":"- Multilingual support is essential for global apps, especially for Dwarves Foundation's international clientele.<hr />- Managing translations in databases involves character encoding, language-specific data, and translation schemas.<hr />- Three core data modeling solutions exist: column-based, JSON-based column, and translation table approaches.<hr />- **Column-based approach**:<hr />  - Stores each language in separate columns of the same table.<hr />  - Simple, fast, small data footprint.<hr />  - Scales poorly; schema updates needed for new languages; complex queries.<hr />- **JSON-based column approach**:<hr />  - Uses a single JSON field to store all translations per row.<hr />  - Reduces schema complexity; easy to add new languages dynamically.<hr />  - Querying efficiency diminishes as data grows; management complexity increases; concurrency issues possible.<hr />- **Translation table approach**:<hr />  - Separate translations stored as key-value pairs in dedicated tables.<hr />  - Highly scalable; flexible; supports large datasets.<hr />  - Requires joins; more complex queries; additional storage.<hr />- Small apps favor column-based; medium to large apps tend towards JSON or translation tables.<hr />- Choice depends on scale, complexity, and maintenance capacity.<hr />- Overall, each solution balances simplicity, scalability, and query performance, guiding optimal architecture decisions.","tags":"engineering research","authors":"","date":{"days":19458},"category":"playground > topics > engineering"},"653":{"file_path":"playground/topics/engineering/lessons-learned-from-concurrency-practices-in-blockchain-projects.md","title":"Lessons Learned From Concurrency Practices In Blockchain Projects","description":"Learn how to handle concurrency and race conditions in Go blockchain projects using PostgreSQL advisory locks for efficient distributed locking and safe cronjob execution on Kubernetes.","spr_content":"- Shared state in replicated API servers leads to concurrency issues, race conditions.<hr />- Optimistic assumptions about failover and redundancy often ignore concurrent access complexities.<hr />- Designing scalable, concurrent systems requires explicit handling of distributed-like concurrency.<hr />- Messaging protocols (Ergo, RabbitMQ) enable application-level coordination.<hr />- Distributed locks (Redis, PostgreSQL) control access to shared resources across instances.<hr />- Kubernetes-based replication amplifies the need for careful concurrency control.<hr />- PostgreSQL’s advisory locks provide a lightweight, application-level locking mechanism.<hr />- Advisory locks label jobs for mutual exclusion, suited for cronjob coordination.<hr />- Using cron libraries (e.g., robfig/cron) simplifies scheduling callbacks.<hr />- Repeated cron executions across multiple replicas can cause redundant task runs, leading to cost and state inconsistencies.<hr />- Implementing advisory locks with timeouts prevents deadlocks during concurrent execution.<hr />- Retry logic via label-based advisory locks ensures a single instance performs critical tasks.<hr />- Goto-based retries, while unconventional, can function but are discouraged for clarity.<hr />- Relying solely on advisory locks risks implicit task tracking; better to use explicit queuing systems.<hr />- Managing currency configurations and real-time data updates require careful synchronization.<hr />- Sleep intervals prevent overloading blockchain nodes and rate-limiting issues.<hr />- Table-level advisory locks are less recommended compared to serializerizable transactions for data integrity.<hr />- Transitioning from implicit lock retries to explicit, label-based job queues improves maintainability.<hr />- Effective concurrent design balances performance, correctness, and operational simplicity.<hr />- Leverage existing DB features (Postgres advisory locks) to minimize additional infrastructure.<hr />- Recognize that adding replicas without concurrency-aware logic leads to race conditions and resource contention.<hr />- Concurrency in distributed systems demands explicit coordination mechanisms beyond naive replication.","tags":"backend engineering","authors":"","date":{"days":19464},"category":"playground > topics > engineering"},"654":{"file_path":"playground/topics/engineering/radix-sort.md","title":"Radix Sort","description":"Radix Sort is a non-comparative sorting algorithm that sorts integers by processing individual digits. Unlike comparison-based algorithms (like Quick Sort or Merge Sort), Radix Sort groups numbers by their individual digits.","spr_content":"- Radix Sort sorts integers by digit processing, not comparisons.  <hr />- Digits are processed from least significant (LSD) to most significant (MSD).  <hr />- Stability is crucial, preserving relative order of equal keys.  <hr />- Counting Sort is used as a subroutine to sort by each digit, ensuring stability.  <hr />- Max digits determine iteration count; find max in array.  <hr />- For each digit position, initialize buckets (0 to radix-1, e.g., 0–9).  <hr />- Distribute numbers into buckets based on current digit from LSD to MSD.  <hr />- Collect numbers from buckets to form new list order.  <hr />- Repeat for each digit position until all are sorted.  <hr />- Time complexity is O(n × k), where n is elements, k is max digit count.  <hr />- Space complexity is O(n + k).  <hr />- Radix Sort is efficient for fixed-length integers or strings; predictable performance.  <hr />- Limited to integers or fixed-length strings; requires additional memory for counting.","tags":"algorithms sorting","authors":"hieuvd","date":{"days":19901},"category":"playground > topics > engineering"},"655":{"file_path":"playground/topics/engineering/split-and-reuse-code-in-react-application.md","title":"Split And Reuse Code In React Application","description":"Learn how to split and reuse repetitive React code using render props pattern, higher-order components, and React hooks like useState for efficient modal state management.","spr_content":"- React often exhibits repetitive code patterns, e.g., managing modal visibility and fetch states.<hr />- Vue.js simplifies this with mixins that encapsulate state and methods for reuse.<hr />- React lacks built-in mixins but offers alternative patterns: render props, higher-order components (HOCs), and hooks.<hr />- Repetitive modal state management involves declaring state (e.g., isOpen) and toggle functions in each component.<hr />- The foundational example: explicit state and handlers within class components.<hr />- Render props pattern: create a component to hold state and logic; it exposes data and functions via a children function.<hr />- Children prop as a function receives state and toggling methods, enabling flexible composition.<hr />- Limitations: only nested components inside HOCs can access the shared state.<hr />- React hooks (since 16.8): introduce `useState` for internal state within functional components; enable custom hooks for encapsulating logic.<hr />- Custom hooks (e.g., `useModal`): store state and functions, return self-contained APIs for reuse.<hr />- `useState` returns an array: first element is data; second is setter function, aligning with React state semantics.<hr />- Hooks can be used to replace class-based patterns, reducing boilerplate and improving reusability.<hr />- Example: using `useModal` hook in functional component to manage modal state simply.<hr />- Hooks facilitate connecting component logic to data sources—remote or internal—beyond simple UI state.<hr />- React hooks transitioned from proposal to core feature, promoting modular, maintainable code separation.<hr />- Overall: Combining hooks with render props and HOCs enables flexible, DRY React state management and logic reuse.<hr />- Full source code available: [https://github.com/phmngocnghia/modal-hook](https://github.com/phmngocnghia/modal-hook).","tags":"engineering","authors":"","date":{"days":18018},"category":"playground > topics > engineering"},"656":{"file_path":"playground/topics/engineering/remote-moderated-usability-testing.md","title":"Remote Moderated Usability Testing","description":"Learn how remote moderated usability testing helped improve Purchasing Care's B2B supplier sourcing tool during COVID-19, enhancing user experience and product performance efficiently.","spr_content":"- Usability Test is fundamental in product development for approval, effort, and cost reduction.  <hr />- Covid-19 pandemic complicates in-person testing; remote testing becomes essential.  <hr />- Dwarves Design and similar agencies experiment with remote moderated usability testing for the first time.  <hr />- The recent session proved smooth and insightful, despite being a new method.  <hr /><hr />- Purchasing Care is a market leader in B2B procurement consulting and marketplace development.  <hr />- The MVP of Vendor Hunt aids buyers in sourcing and managing suppliers efficiently.  <hr />- Key tasks: search, inquiry, project tracking, supplier evaluation—crucial for workflow success.  <hr /><hr />- Personas represent typical users: procurement managers, sourcing specialists, etc.  <hr />- Main problems: time-consuming sourcing, lack of detailed supplier info, missed opportunities.  <hr />- Solutions: detailed B2B supplier search engine, potential supplier list management, dashboard for tracking and reporting.  <hr /><hr />- Goals: evaluate interface usability—ease, productivity, satisfaction—in key tasks.  <hr />- Method: remote moderated testing involves a facilitator guiding and observing in real-time via online tools.  <hr />- Chosen for cost-efficiency, practicality, and ability to observe behavior; drawbacks include limited body language cues and interpretation of silence.  <hr /><hr />- Preparation includes pre-session questions, task scenarios, instructions; using Google Hangouts, QuickTime, and ensuring a stable environment.  <hr />- Metrics: success rate, time per task, user satisfaction.  <hr />- Results: success rates and task completion times show initial learning curve and subsequent improvement.  <hr /><hr />- User feedback highlights flow complexity, communication gaps, and interface issues.  <hr />- Participants often click on unrelated modules or struggle to locate critical buttons—design improvements needed.  <hr />- Real-time observation captures hesitation and confusion—valuable for iterations.  <hr /><hr />- Lessons learned:  <hr />  - Distribute preparation documents—demographics, scenarios, timing.  <hr />  - Define clear goals; align team on objectives.  <hr />  - Conduct pre-tests to identify bugs affecting results.  <hr />  - Focus on user behavior for struggle points; guide back calmly.  <hr />  - Balance prompting with silence; inject small talk to ease nerves.  <hr />  - Document the process comprehensively for stakeholders.  <hr /><hr />- Conclusion: remote moderated testing provides actionable insights, enhances UX, and minimizes effort.  <hr />- It is especially pertinent during ongoing restrictions, offering a practical alternative to in-person sessions.","tags":"testing","authors":"","date":{"days":18392},"category":"playground > topics > engineering"},"657":{"file_path":"playground/topics/engineering/dcos-series-part-5-gitlab.md","title":"Dcos Series Part 5 Gitlab","description":"Learn how to install and secure Gitlab on DC/OS with HTTPS, configure domain and email settings, and manage private Git repositories for small teams using step-by-step instructions.","spr_content":"Gitlab as an open-source developer platform offers hosting, code review, issue tracking, Docker registry, and CI/CD, suitable for small teams using CE. DC/OS enables hosting a private Gitlab instance in-house, supporting self-managed source control.<hr /><hr />Setup process: install via Universe > Packages > Gitlab, choosing Advanced Installation, with configurable settings.<hr /><hr />Key setup steps:<hr />- Configure Gitlab domain for accessibility.<hr />- Set up email client for notifications.<hr />- Assign a static private node IP for data persistence during upgrades or restarts.<hr />- Review and install; confirm the service is operational.<hr /><hr />Enhancing security with HTTPS:<hr />- Default DC/OS Gitlab lacks HTTPS support.<hr />- Modify `GITLAB_OMNIBUS_CONFIG` environment variable; add nginx proxy headers:<hr />  `nginx['proxy_set_headers'] = { \"X-Forwarded-Proto\" => \"https\", \"X-Forwarded-Ssl\" => \"on\" }`<hr />- Copy SSL `.pem` files to the Marathon-lb node:<hr />  `scp cert.pem core@public-ip:~` and move to `/srv/marathon-lb/domains/ssl/example-git-domain.com`.<hr />- Update Marathon-lb configuration:<hr />  - Share volume for SSL certificates:<hr />    `{ \"containerPath\": \"/etc/ssl/domains\", \"hostPath\": \"/srv/marathon-lb/ssl/domains\", \"mode\": \"RO\" }`<hr />  - Add certificate path in Marathon-lb JSON args.<hr />- Review and run Marathon-lb to apply changes.<hr /><hr />Post-configuration:<hr />- Access Gitlab securely via `your-gitlab-domain.com` over HTTPS.<hr />- Troubleshoot via contact (`quang@dwarvesf.com`) if issues arise.<hr /><hr />This outline captures essential concepts, configurations, security enhancements, and operational procedures for deploying and securing Gitlab on DC/OS in an automated, concise manner.","tags":"dcos","authors":"","date":{"days":17328},"category":"playground > topics > engineering"},"658":{"file_path":"playground/topics/engineering/software-modeling.md","title":"Software Modeling","description":"Learn how software modeling improves system maintainability and scalability by defining core objects, using diagrams like ERD, SMD, and USD to design clear, efficient applications.","spr_content":"- Approach to new knowledge starts with \"why,\" followed by understanding the concept and figuring out execution.  <hr />- Need for Software Modeling rooted in maintainability (system understanding, onboarding) and scalability (adding features/sub-systems without conflicts).  <hr />- Software Modeling transforms real-world object activities into computer-understandable/executable forms.  <hr />- It involves reconstructing application actions to solve problems efficiently using tools.  <hr />- Marketplace system example: Action \"Buyer buys Product from Seller\" involves core objects: Buyer, Product, Seller.  <hr />- Framework AARRR guides business/system growth analysis, focusing on revenue-stream derivation through process funnel.  <hr />- Core objects can be identified before or after applying AARRR; application interface (landing page) aids in core object discovery.  <hr />- Without a product, use waterfall requirements gathering: understand idea, problem, and objectives collaboratively.  <hr />- System analysis includes identifying relationships via Entity Relationship Diagram (ERD), emphasizing core objects and their connections.  <hr />- ERD components: objects, relation arrows; should be simplified, color-coded, and pipeline-ordered for clarity.  <hr />- ERD reveals database structure, object count, relationships, with a need to model object states for actions.  <hr />- State Machine Diagram (SMD) details object statuses, relevant actions, actors; states are adjectives, system-focused, business-oriented.  <hr />- Example: grocery marketplace states like \"shipped,\" \"packed,\" exclude unrelated states like \"rotten.\"  <hr />- Use Cases Diagram (USD) captures system requirements from end-user perspective, with actors, use cases, boundary system; allows multiple scenarios per actor/interface.  <hr />- Boundary systems enable different interfaces for multiple actors; each actor or scenario may have distinct use cases.  <hr />- Component Diagram visualizes main system modules, their interfaces (provided/required), and execution structure; includes front-end and backend details.  <hr />- In Agile, Software Modeling supports shared understanding, documentation, and adapts continually; critical for maintaining system integrity during ongoing modifications.  <hr />- Insight from Product Owner guides effective system design, aligning with craftsmanship principles by delivering client value through shared perspective.","tags":"modeling","authors":"","date":{"days":18390},"category":"playground > topics > engineering"},"659":{"file_path":"playground/topics/engineering/radio-talk-61-monorepo.md","title":"Radio Talk 61 Monorepo","description":"Learn how adopting monorepos and tools like Turborepo and Nx can simplify code management, reduce duplication, and boost developer productivity for faster, cost-effective software development.","spr_content":"- Monorepo consolidates all organizational code in a single version control system.<hr />- Centralization simplifies management and enhances cross-team collaboration.<hr />- Motivation: autonomy, solving communication issues in multi-repo environments.<hr />- Benefits: easy code sharing, seamless component reuse, reduced duplication.<hr />- Cost-efficiency: simplifies cross-repo refactoring, updates shared code easily.<hr />- Ensures uniform standards and tooling across teams, maintaining consistency.<hr />- Challenges: complex dependency management, scalable CI/CD pipelines, longer build times.<hr />- Frontend tools: Yarn Workspaces facilitates shared dependencies; Lerna manages versioning and workflows.<hr />- Challenges persist: affected changes handling, task runner queue issues.<hr />- Modern solutions: Turborepo and Nx improve caching, task orchestration, automatic affected code detection.<hr />- Modern tools enable local and remote caching, boosting performance.<hr />- Adopting monorepos with advanced tools enhances code quality, reduces costs, accelerates time-to-market, and boosts developer productivity.","tags":"engineering web","authors":"","date":{"days":19443},"category":"playground > topics > engineering"},"660":{"file_path":"playground/topics/engineering/istio.md","title":"Istio","description":"Learn how Istio service mesh improves microservices networking with features like traffic management, security, and monitoring, and why it complements API gateways for scalable applications.","spr_content":"- Istio implements Service Mesh architecture; others include Linkerd, Consul.  <hr />- Service mesh: decentralized, self-organizing network of microservices; manages traffic internally via agents (\"sidecars\").  <hr />- API gateway: centralized interface exposing microservices as APIs; handles load balancing, auth, data transformation, etc.  <hr />- API gateway pros: simplifies microservice focus, centralizes auth/logging, protocol flexibility, retries.  <hr />- API gateway cons: single point of failure, scalability bottleneck, organizational maintenance.  <hr />- Service mesh pros: decentralization, dynamic reconfiguration, development flexibility, resilience.  <hr />- Service mesh cons: complexity, resource-heavy, young technology needing mature development.  <hr />- Combining API gateway and Service mesh yields comprehensive microservice management; Istio pioneers this synergy.  <hr />- Kubernetes entities: Pod (containers), Deployment (manages Pods), Service (access point to Pods).  <hr />- Microservices growth → multiple points of failure; Service mesh with Istio injects sidecars into each Pod for control.  <hr />- Istio reduces code in applications by offloading traffic control, routing, circuit-breaking to sidecars.  <hr />- Istio architecture core components: Envoy, Pilot, Mixer, Citadel, Galley.  <hr />- Envoy: high-performance proxy, handles traffic features (discovery, load balancing, TLS, HTTP/2, gRPC, circuit breakers, metrics).  <hr />- Pilot: service discovery, traffic management (A/B testing, canaries), converts high-level rules into Envoy configs.  <hr />- Mixer: enforces policies, gathers telemetry, supports plugins for multiple backends.  <hr />- Citadel: secure authentication, identity management, credential provisioning, traffic encryption.  <hr />- Galley: config validation, ingestion, distribution, abstracts platform-specific details.","tags":"tool","authors":"","date":{"days":18056},"category":"playground > topics > engineering"},"661":{"file_path":"playground/topics/engineering/infinite-image-gallery-with-r3f-an-approach.md","title":"Infinite Image Gallery With R3f An Approach","description":"Learn how to create an infinite image gallery with react-three-fiber featuring smooth mouse navigation and WebGL distortion effects for an endless 3D browsing experience.","spr_content":"- Infinite gallery requires an unbounded, spatially continuous environment with perpetual navigation.<hr />- Duplicating the entire grid repeatedly is performance-prohibitive; instead, replicate only boundary regions to create seamless transitions.<hr />- Enclose multiple grids (center + boundary clones) to simulate infinity in all directions (e.g., 3x3 layout).<hr />- Track a global \"look-at\" or camera center point; defaulted to the center grid.<hr />- Update boundary grids’ positions dynamically when the center approaches grid edges, to maintain the illusion of infinity.<hr />- Recalculate grid order and positions upon boundary crossing to preserve continuity.<hr />- Use a master position for all grids to simplify management and enhance performance.<hr />- Maintain relative positions of images within their grids for precise calculations.<hr />- Keep global grid positions aligned with boundary updates; images’ global positions derive from grid + local offsets.<hr />- Handle user navigation via mouse movement: translate movements into center point shifts.<hr />- On mouse drag, update center point based on movement delta; then adjust boundary grids accordingly.<hr />- Distance from each image to the center point influences WebGL shader effects (distortion, effects).<hr />- For distance calculations: combine/image positions relative to grids, then globally, enabling accurate disparity and effects.<hr />- WebGL effects depend on image-centerpoint distance, creating distortions that intensify with separation, mimicking immersive interactions.<hr />- Effect implementation relies on shaders; geometric calculations provide input for visual distortions.<hr />- Key concept: by moving and updating a limited set of boundary grids, the environment appears infinite without exhaustive resource consumption.<hr />- Conceptually, involves a cyclic boundary update mechanism, continuous position recalculation, and interaction-driven effects.<hr />- The approach is adaptable to different rendering libraries; the core idea centers on spatial management and dynamic boundary re-positioning.<hr />- This model balances performance, visual coherence, and interactivity for infinite spatial exploration in WebGL contexts.","tags":"tutorial","authors":"","date":{"days":18519},"category":"playground > topics > engineering"},"662":{"file_path":"playground/topics/engineering/software-development-life-cycle-101.md","title":"Software Development Life Cycle 101","description":"Learn the Software Development Life Cycle (SDLC) basics, key project phases, and essential artifacts to build high-quality software on time and within budget for successful project delivery.","spr_content":"- The workshop offers a high-level overview of the Software Development Life Cycle (SDLC), focusing on steps, responsibilities, artifacts, timing, and sequencing, not detailed techniques.  <hr />- A software project is a planned, intentional undertaking, defined as a specific plan or design.  <hr />- Key constraints in projects include quality, budget, and time, which directly impact success or failure.  <hr />- Common causes of failure include unclear requirements, wrong tech stacks, and inappropriate approaches; many can be mitigated with proper methodology.  <hr />- Success is completing projects on time, within budget, with low defects, and high quality—building \"awesome\" software efficiently.  <hr />- SDLC adds structure with phases: requirement analysis, planning, system design, implementation, testing, deployment, and maintenance.  <hr />- Requirement analysis involves stakeholder input, using techniques like Lean Canvas and AARRR Funnel to validate business models before development.  <hr />- Planning defines feasible scope, resources, costs, risks, and prepares project charters and work breakdown structures to guide execution.  <hr />- System design translates requirements into detailed plans (information architecture, modeling diagrams, wireframes), with stakeholder feedback to avoid costly errors.  <hr />- Implementation involves actual coding, adhering to standards, and sharing knowledge, as this is the longest, most quality-critical phase.  <hr />- Testing verifies that the product meets requirements, identifies defects, and ensures quality before release.  <hr />- Deployment involves releasing the software to production, often through staged environments (testing, staging) for validation, supported by infrastructure setup and automation (CI/CD).","tags":"sdlc","authors":"","date":{"days":18401},"category":"playground > topics > engineering"},"663":{"file_path":"playground/topics/engineering/daemons-and-services-programming-guide.md","title":"Daemons And Services Programming Guide","description":"Learn how to design and manage macOS daemons and services, including login items, XPC services, launch agents, and daemons, with best practices for background processes and interprocess communication.","spr_content":"- Background tasks can run as daemons or services; they operate without user interaction.<hr />- Services support GUI applications; daemons are non-interactive background processes.<hr />- Terminology: 'service' often supports GUI; 'daemon' typically lacks UI.<hr />- Designing requires decisions on how processes run and communicate.<hr />- Different background process types exist, depending on user scope and interface needs.<hr />- Login items launch at user login, run until logout/quitting, for auto-starting apps or UI elements.<hr />- Login items can trigger menu extras, hotkeys, clocks, timers, or helper apps.<hr />- XPC Services are managed by launchd, support individual apps, enhance reliability/security, handle specific tasks like mail server communication.<hr />- Sandboxing limits app capabilities, protecting against malicious exploits by restricting permissions.<hr />- Combining sandboxing with XPC divides applications into smaller, privilege-separated components.<hr />- Launch daemons run system-wide, unaware of logged-in users; respond only to requests, without UI.<hr />- Daemons run in system context, active regardless of user login; communicate via requests.<hr />- Launch agents execute in user context, can display UI, connect with system daemons, coordinate with system-wide services.<hr />- To build complex apps, employ both system daemons (shared, full-system services) and user agents (per-login session).<hr />- Communication with daemons uses XPC, traditional sockets, remote procedure calls, or memory mapping; XPC preferred for simplicity.<hr />- RPC methods pose security risks; avoid cross-privilege RPC unless privileges are aligned.<hr />- Memory mapping offers low-latency sharing but raises security and complexity concerns; best for real-time media.<hr />- Use Activity Monitor to view running daemons, processes, and resource info.<hr />- Consult man pages for detailed daemon and service info.","tags":"macos","authors":"","date":{"days":18393},"category":"playground > topics > engineering"},"664":{"file_path":"playground/topics/engineering/the-10x-engineer.md","title":"The 10x Engineer","description":"Discover what makes a 10x engineer highly productive with skills in software development, communication, innovation, and problem-solving, and why tech companies seek these exceptional engineers.","spr_content":"- **10x engineer concept**: Symbolic of engineers outperforming peers by a factor of ten; metaphorical, not purely numerical.  <hr />- **\"Ninjas\"**: Alternative term for highly skilled, sought-after engineers.  <hr />- **Recruitment challenge**: Finding true 10x engineers among many resumes is difficult; perceived rarity.  <hr />- **Performance discrepancy**: Not all engineers can perform at 10x levels; some are mediocre, but some are genuinely exceptional.  <hr />- **Metrics importance**: Tracking productivity is essential, but must remain open-minded to identify potential 10x candidates.  <hr />- **Myth vs. reality**: 10x engineers exist; debates about myth versus actual talent.  <hr />- **Related resources**: Articles link to the myth, traits, and pathways to becoming a 10x engineer.  <hr />- **Definition of 10x engineers**:  <hr />  - Above the middle of ability/productivity/quality pyramid.  <hr />  - Obsessed with output quality.  <hr />  - Excelling in technical, design, communication, entrepreneurial, and contribution skills.  <hr />  - Doers, creators, disruptors, innovators.  <hr />- **Mindset traits**:  <hr />  - Growth-oriented.  <hr />  - Creative and innovative.  <hr />  - Contributive, adding value.  <hr />- **Skillset components**:  <hr />  - Communication proficiency.  <hr />  - Deep understanding of SDLC, SDProcess, OS, networks, databases, system design, DevOps, algorithms, tooling.  <hr />  - Technical tools: Linux, Docker, IDEs, modeling, architecture, algorithms, data structures.  <hr />  - Methodological practices: Scrum, SDLC processes.  <hr />  - Entrepreneurial spirit: Hands-on, inventive, building desirable solutions.  <hr />  - Value creation: Focus on impactful contributions.","tags":"engineering","authors":"","date":{"days":16861},"category":"playground > topics > engineering"},"665":{"file_path":"playground/topics/engineering/introduction-to-software-craftsmanship.md","title":"Introduction To Software Craftsmanship","description":"Learn how software craftsmanship shapes quality coding, teamwork, and well-crafted software at Dwarf, emphasizing discipline, professionalism, and continuous improvement in agile environments.","spr_content":"- Craftsmanship is rooted in meticulous attention to detail, aiming for excellence in every stage.  <hr />- Dwarves symbolize wisdom and mastery in crafting tools; similarly, our software is our crafted tool.  <hr />- Our company’s core values include Craftsmanship as a fundamental principle.  <hr />- Software Craftsmanship emphasizes doing the best possible in each part, not just making it work.  <hr />- Craftsmanship requires qualities: discipline, professionalism, pragmatism, incremental improvement.  <hr />- Craftsmen take pride and strive to push their limits, ensuring quality and pride in their work.  <hr />- Well-crafted software features clean design, high test coverage, maintainability, predictable behavior.  <hr />- The impact of sloppy software grows with technological dependence; quality prevents future risks.  <hr />- Craftsmanship is a cultural attitude, transforming the spirit into a product of high value.  <hr />- Historically, craftsmanship was essential in handcrafted products, exemplified by Katana swords, symbolizing precision.  <hr />- Software is now ubiquitous; poor quality software leads to hazards, emphasizing craftsmanship’s importance.  <hr />- Agile is foundational, but Craftsmanship elevates it—focusing on quality, pride, and mastery.  <hr />- Uncle Bob’s phrase: \"Craftsmanship over crap\" underscores the priority of quality.  <hr />- Critics argue over-focus on craftsmanship might undermine team interactions; balance is key.  <hr />- Influences like Martin Fowler suggest that care in creation shouldn't overshadow user impact and collaboration.  <hr />- Companies like 8thlight advocate for software as a craft, promoting pride and craftsmanship as part of product excellence.  <hr />- Pursuing craftsmanship complements Agile, not replaces it—both aim for valuable, high-quality outcomes.  <hr />- Our current efforts include technical activities, process improvements, and a culture of transparency.  <hr />- True craftsmanship involves attitude, approach, collaboration, and continuous mini improvements.","tags":"engineering","authors":"","date":{"days":18376},"category":"playground > topics > engineering"},"666":{"file_path":"playground/topics/engineering/playaround-with-clojure.md","title":"Playaround With Clojure","description":"Discover Clojure, a dynamic, functional Lisp dialect hosted on the JVM, offering powerful concurrency, immutable data structures, and seamless Java integration for efficient multithreaded programming.","spr_content":"- Clojure: dynamic, general-purpose language; combines scripting-like approachability and interactivity with robust multithreading infrastructure.  <hr />- Compiled language, yet fully dynamic; features supported at runtime.  <hr />- Provides seamless Java framework access; optional type hints and inference optimize calls to avoid reflection.  <hr />- Dialect of Lisp; shares code-as-data philosophy, macro system; emphasizes syntactic abstraction.  <hr />- Predominantly functional with immutable, persistent data structures; mutable state managed via software transactional memory and reactive agents.  <hr />- Why Clojure: blends Lisp's elegance, functional programming, and concurrency with platform integration.  <hr />- Lisp benefits: minimal core, code-as-data advantage, extensible data structures, open to syntactic and platform evolution.  <hr />- Unlike standard Lisps with mutable core data, Clojure defaults to immutability, extensible abstractions, and JVM platform.  <hr />- Platforms: VMs (JVM, .NET) centralize type safety, libraries, memory, garbage collection, bytecode, JIT; platform independence for languages.  <hr />- JVM: established, trusted, open-source, interoperable, offers a common runtime, mitigating language runtime duplication issues.  <hr />- Java/JVM: limited expressiveness, lacks first-class functions, type inference; crucial for call interoperability.  <hr />- Clojure: JVM-based language; leverages JVM’s strengths, overcomes Java's verbosity, offers functional, dynamic, interoperable features.  <hr />- Concurrency: immutability reduces race conditions; shared data between threads; software transactional memory and agents manage state changes cleanly.  <hr />- Features: dynamic development, functional paradigm, Lisp heritage, runtime polymorphism, concurrency support; hosted on JVM.  <hr />- Dynamic and interactive: Clojure supports live coding, runtime modification, incremental development; not just compile-and-run.  <hr />- Environment: nearly all constructs reified, examinable, modifiable; fosters continuous growth, debugging, bug fixing, testing in a seamless loop.  <hr />- Compilation: on-the-fly JVM bytecode generation from REPL input; ahead-of-time compilation optional but unnecessary.","tags":"clojure","authors":"","date":{"days":18145},"category":"playground > topics > engineering"},"667":{"file_path":"playground/topics/engineering/skill-of-software-engineer.md","title":"Skill Of Software Engineer","description":"Discover essential software development skills including coding, debugging, version control, design, and automated testing, plus key soft skills like teamwork and communication for effective collaboration.","spr_content":"- Code comprehension: understand, analyze, modify existing code base.  <hr />- Code writing: generate code snippets, methods based on behavior specifications.  <hr />- IDE proficiency: operate, leverage strengths, mitigate weaknesses of modern development environments.  <hr />- Version control: utilize tools for tracking, managing code changes; grasp software configuration principles.  <hr />- Library/framework utilization: search, evaluate, select, and integrate external code packages effectively.  <hr />- Debugging: diagnose, isolate, resolve code issues; utilize debugging tools and techniques.  <hr />- Self-directed learning: research, acquire new knowledge independently, improve skills.  <hr />- Software design: plan high-level structure, architecture, determine necessary components to meet requirements.  <hr />- SDLC awareness: understand lifecycle stages—requirements, design, development, testing, maintenance— and their interrelations; adopt suitable methodologies (Agile, Waterfall).  <hr />- Automated testing: develop and execute automated unit tests to ensure code correctness and stability.  <hr />- Refactoring: improve code quality, clarity, structure without altering behavior.  <hr />- Soft skills: foster teamwork, communicate effectively, manage tasks and collaboration efficiently.","tags":"engineering","authors":"","date":{"days":17239},"category":"playground > topics > engineering"},"668":{"file_path":"playground/topics/engineering/reusability-in-software-development.md","title":"Reusability In Software Development","description":"Learn how software reuse strategies, including component reuse, frameworks, and product lines, speed development, cut costs, and improve quality while facing challenges like maintenance and tool support.","spr_content":"- Early software industry was immature; growth driven by large-scale economy, creating emergent business problems needing software solutions like management and automation.<hr />- Initial software development was original; reuse was uncommon due to creativity and novelty priorities.<hr />- Over time, experienced developers adopted a **Software reuse** strategy to reduce costs, speed up delivery, and improve quality.<hr />- Software reuse responds to increasing complexity of classic problems, promoting reuse in business systems and maximizing return on investment.<hr />- Reuse fields include open-source (codes, libraries, components), domain-specific systems (e.g., ERP), and standards (e.g., web services).<hr />- Open-source: freely accessible, modifiable, distributable code, driven by a movement advocating public rights and collaboration.<hr />- Domain-specific applications, like ERP, are configurable, supplied by companies for tailoring to customer needs.<hr />- Standards facilitate reuse, e.g., web service standards enable interoperability and component sharing.<hr />- Software reuse involves different unit sizes: <hr />  - Component reuse: scalable from classes/functions to subsystems.<hr />  - Application reuse: integrating or reconfiguring complete applications.<hr />  - System reuse: embedding applications into larger systems.<hr />- Concept reuse emphasizes ideas, algorithms, and working styles rather than specific code, expressed in abstract notation suitable for adaptation.<hr />- Methods for concept reuse include design patterns, configurable products, and code generators.<hr />- Reuse benefits:<hr />  - Accelerated development and faster market entry.<hr />  - Higher dependability due to tested, stable components.<hr />  - Lower development costs, reducing code writing.<hr />  - Reduced project risk; known costs for reused components.<hr />  - Standards enforcement improves UI consistency and usability.<hr />- Limits of reuse:<hr />  - Building and maintaining reusable libraries is complex.<hr />  - Discovering and adapting libraries is time-consuming.<hr />  - Maintaining source code for reuse is challenging, especially with open-source or unvetted components.<hr />  - Tool support issues limit reuse efficiency.<hr />  - \"Not-invented-here\" syndrome hampers acceptance, favoring original development over proven reused solutions.<hr />- Reuse landscape includes:<hr />  - Component-level reuse (classes, objects).<hr />  - System-level reuse (whole systems integrated into larger ones).<hr />  - Standards and frameworks facilitate reuse but introduce costs and complexity.<hr />- Decision factors for reuse:<hr />  - Development schedule urgency favors complete system reuse.<hr />  - System lifetime impacts source code access needs — open-source or personal components preferred for maintainability.<hr />  - Team expertise guides focus; leverage familiar libraries.<hr />  - Criticality and non-functional requirements (e.g., safety, performance) influence feasibility.<hr />  - Domain similarity affects reuse potential, e.g., manufacturing, medical.<hr />  - Platform compatibility (e.g., .NET, multi-platform) is essential.<hr />- Reuse decisions often managed by managers, who may misjudge risks; thorough understanding of options improves accuracy.<hr />- Object-oriented development (OOD):<hr />  - Views real-world entities as objects and classes.<hr />  - Reused via frameworks—large, integrated collections of classes and components tailored for specific application families.<hr />- Frameworks:<hr />  - Provide support for generic domain features; e.g., web frameworks (routing, database, authentication) or game engines (graphics, audio, UI).<hr />  - Enable reuse through inheritance, polymorphism, and nested frameworks.<hr />  - Variably large, from small libraries to full architectures.<hr />  - Types include infrastructure, middleware, enterprise, web, multimedia, and game frameworks.<hr />  - Framework adoption carries costs: complexity, debugging difficulty, integration challenges.<hr />- Software Product Lines (SPL):<hr />  - Derived from common core and shared components with configurable features for different customer needs.<hr />  - Base application simplifies reuse and configuration via core, configurable, and domain-specific components.<hr />  - Organization into layered architecture:<hr />    - User interaction layer for UI.<hr />    - I/O management for event handling.<hr />    - Resource management for logic and data.<hr />    - Database layer.<hr />  - Variants include platform, environment, functional, and process specializations.<hr />  - Aims to efficiently produce customized, variant systems with shared architecture and components.","tags":"engineering","authors":"","date":{"days":18387},"category":"playground > topics > engineering"},"669":{"file_path":"playground/topics/engineering/architecture-decision-record.md","title":"Architecture Decision Record","description":"Learn how Architecture Decision Records (ADR) help teams document software choices, improve project clarity, and guide newcomers with clear context, solutions, and consequences for better long-term development.","spr_content":"- Teams face inevitable confusion over architecture decisions, especially for newcomers.<hr />- Lack of decision logging leads to difficulty understanding past choices and hinders system improvement.<hr />- ADR (Architecture Decision Record) is a practice to document decision context, rationale, and consequences.<hr />- ADR preserves history, aids onboarding, and prevents re-decisions or regressions.<hr />- Core components of ADR: Context, Solution, Consequences.<hr />- ADR helps answer why a decision was made, by whom, and its impact.<hr />- ADR should be point-in-time, rational, immutable, and about one decision only.<hr />- Context captures environment and constraints at decision time.<hr />- Solution details the chosen option with pros and cons.<hr />- Consequences describe impacts and system adjustments.<hr />- ADR creation involves: raising the decision, making it, implementing, and gaining stakeholder consensus.<hr />- Log versions in an Architecture Decision Log (ADL) to track evolution.<hr />- Use a standard template: prologue, discussion, solution, consequences.<hr />- Good ADR features: clear timing, rationale, immutability, specificity.<hr />- Context should reflect past state; consequences should articulate business impact.<hr />- Tools like Git-based ADR tools facilitate versioned documentation.<hr />- Visual metaphor: soldiers in a room avoiding bug fixes to prevent collapse; similarly, unlogged decisions risk collapse of understanding.<hr />- ADR ensures clarity, accountability, and continuous improvement in system architecture.","tags":"architecture engineering","authors":"","date":{"days":18348},"category":"playground > topics > engineering"},"670":{"file_path":"playground/topics/engineering/what-is-kubernetes.md","title":"What Is Kubernetes","description":"Kubernetes is an open-source platform for managing containerized applications with features like automated rollouts, self-healing, and load balancing, enabling scalable and portable cloud deployments.","spr_content":"- Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services.  <hr />- It supports declarative configuration and automation.  <hr />- Kubernetes has a large, rapidly growing ecosystem with widely available services, support, and tools.  <hr />- Traditional deployment used physical servers without resource boundaries, causing resource contention and underutilization.  <hr />- Physical servers lacked scalability and were costly to maintain with multiple applications.  <hr />- Virtualization introduced VMs allowing multiple isolated environments on one physical server, improving resource utilization and scalability.  <hr />- VMs include full OS and simulate dedicated hardware, increasing security and isolation.  <hr />- Containers are lightweight, sharing OS components, and provide decoupling from infrastructure for portability.  <hr />- Containers enable agile development, continuous integration/continuous deployment (CI/CD), decoupled DevOps, environmental consistency, and portability across clouds and OSes.  <hr />- Container benefits include rapid image creation, easy updates, reliable rollbacks, application-centric management, observability, and resource efficiency.  <hr />- Kubernetes addresses needs like service discovery, load balancing, storage orchestration, automated rollouts/rollbacks, bin packing, self-healing, and secret/config management.  <hr />- Core Kubernetes objects include Pods (basic unit of deployment), Services (network access point), Volumes (storage), and Namespaces (logical grouping).  <hr />- Kubernetes simplifies deployment of distributed microservices, improves resource utilization, and ensures predictable performance.","tags":"engineering","authors":"","date":{"days":18166},"category":"playground > topics > engineering"},"671":{"file_path":"playground/topics/git/git-commit-message-convention.md","title":"Git Commit Message Convention","description":"Learn how to write clear git commit messages using types, scopes, and subjects with practical examples to improve your team's coding workflow and commit history.","spr_content":"- LLMs embed latent knowledge: actions, concepts, associations, metaphors, analogies.  <hr />- Priming with specific inputs activates internal neural states, enabling reasoning, planning, theory of mind.  <hr />- Effective prompts are concise, associative, and encode latent content.  <hr />- Written language priming for models relies on distilled, succinct cues.  <hr />- Conventional git commit message format: `<type>(<scope>): <subject>`.  <hr />- `type`: main action (build, chore, feat, fix, refactor, etc.)—standardized, some key actions.  <hr />- `scope` and `subject`: optional but affect clarity; scope specifies codebase section, subject describes change briefly.  <hr />- Optionality of `scope` depends on project scope; small scope commits use it, large or whole-project changes may omit it.  <hr />- Team's current knowledge management: outlined in a playbook; no explicit mention of commit message conventions.  <hr />- Individual practice: informal commit messages (`create-f1`, `oops-Ididitagain`), lacking standardization.  <hr />- Team’s understanding: commit conventions based on impact scope—small, targeted scope or whole-project.  <hr />- Examples:  <hr />  - Small scope fix: `fix(foundation): ordered list doesn't show numbers`.  <hr />  - Whole-project chore: `chore: upgrade tailwind and twin.macro`.  <hr />- Status: existing flow is outdated; recent updates suggest formalizing and standardizing commit message conventions per project scope.","tags":"git","authors":"","date":{"days":18723},"category":"playground > topics > git"},"672":{"file_path":"playground/topics/git/gitflow-pull-request.md","title":"Gitflow Pull Request","description":"Learn the best Git workflows, branching models, commit message tips, pull request strategies, code review practices, and merge vs rebase guidance to boost team productivity and code quality.","spr_content":"- Git is a dominant source control system, with GitHub as a widely adopted platform built over Git.<hr />- Proper workflow management enhances team productivity.<hr />- The repository should be structured into five branch types: main, develop, feature, release, and hotfix.<hr />- Main branches:<hr />  - master: production-ready code (HEAD reflects stable version).<hr />  - develop: latest delivered development code, the integration branch.<hr />- Feature branches:<hr />  - Created from develop.<hr />  - Merged back into develop.<hr />  - Named with conventions avoiding master, develop, release-_, hotfix-_.<hr />  - Used for developing new features with uncertain release targets.<hr />- Release branches:<hr />  - Created from develop.<hr />  - Merged into develop and master.<hr />  - Named release-*, e.g., release-1.2.<hr />  - Prepare for upcoming releases on stable develop state.<hr />- Hotfix branches:<hr />  - Created from master.<hr />  - Merged into develop and master.<hr />  - Named hotfix-*.<hr />  - Address urgent issues in live production, originating from specific production tags.<hr />- Gitflow:<hr />  - Inspired by Vincent Driessen.<hr />  - Merge-based, avoids rebasing feature branches.<hr />  - Supported by tools like SourceTree and Git Tower.<hr />- Writing effective commit messages:<hr />  - Explain the why behind changes, not just the what.<hr />  - Enhance maintainability and future understanding.<hr />- Pull Requests (PRs):<hr />  - Facilitate collaboration by indicating feature completion.<hr />  - Open early for conversation, even before finishing code.<hr />  - Branch-to-branch PRs within the same repo.<hr />  - PRs can be closed without merging.<hr />  - The WIP (Work In Progress) pattern encourages early PR creation.<hr />- Code review principles:<hr />  - Respect opinions; discuss tradeoffs.<hr />  - Ask questions, seek clarification.<hr />  - Avoid ownership and personal traits language.<hr />  - Be explicit, humble, non-hyperbolic, and genuine.<hr />  - Use synchronous communication for complex discussions.<hr />  - Be grateful, supportive, and explain decisions.<hr />  - Link reviews to relevant tickets.<hr />  - Make incremental commits, avoid premature squashing.<hr />  - Understand the necessity of changes; suggest and simplify.<hr />  - Maintain a collaborative mindset, respond to comments, and wait for CI confirmation before merging.<hr />- Rebase versus merge:<hr />  - Merge preserves history, creates explicit branch relationships.<hr />  - Rebase rewrites history, provides a linear and cleaner history.<hr />  - Merging is simpler; rebasing is more complex, especially with conflicts.<hr />  - Rebase is ideal for a tidy history but must be used with caution when branches are shared.<hr />- Templates:<hr />  - Issue and pull request templates standardize reporting and collaboration.<hr />  - Issue template prompts for status, steps, expectations, environment, and logs.","tags":"git","authors":"","date":{"days":18727},"category":"playground > topics > git"},"673":{"file_path":"playground/topics/liquidity/an-overview-of-micro-investment-in-real-estate.md","title":"An Overview Of Micro Investment In Real Estate","description":"Discover how micro-investing in real estate offers an easy, low-cost way for millennials and new investors to enter the property market using technology-driven platforms and digital tools.","spr_content":"- The real estate market is evolving alongside digital transformation, especially in industries with direct consumer engagement.  <hr />- Digital transformation is driven primarily by capitalism: profit motive outweighs fear of disruption.  <hr />- Consumers increasingly use the Internet for real estate info, shifting behavior and requiring businesses to adapt technological strategies.  <hr />- Micro-investing in real estate emerges as a democratized, accessible way for small investors, especially millennials, to diversify portfolios.  <hr />- Micro-investing allows small sums, even spare change, to generate slow returns without extensive prior knowledge.  <hr />- Platform-based models facilitate property purchase with low entry barriers, enabling partial investments, flexible payments, and proportional returns upon sale.  <hr />- The model's feasibility depends on widespread demand for easy, affordable, simple investment options; millennials' affinity for automation; lower fees; favorable tax benefits; and assets detached from stock markets.  <hr />- In Vietnam, proptech is nascent with few foreign or overseas Vietnamese startups launched post-2018, reflecting rapid growth due to technological advances and changing consumer habits.  <hr />- Target consumers face challenges: shifting perceptions from traditional to digital real estate trading; improving financial literacy; overcoming fears about risks; recognizing passive income and stability as benefits.  <hr />- COVID-19 accelerates tech adoption in real estate: virtual visits via VR, online transactions, livestream brokers, and digital marketing.  <hr />- Technology boosts remote access, reduces physical contact, and supports data-driven decision-making, fostering online transaction growth.  <hr />- Investors and developers focus on smart, eco-friendly, health-conscious projects to adapt to pandemic concerns.  <hr />- Green building and health-oriented real estate serve as strategic responses to environmental issues and health crises, stimulating demand and market resilience.","tags":"design research","authors":"","date":{"days":18500},"category":"playground > topics > liquidity"},"674":{"file_path":"updates/labs-digest/02.md","title":"Labs Weekly Catchup #2","description":"Our second weekly catchup. We organize an agenda the day beforehand and consolidate our findings, notable research progress, possibly new tech, insight or technique everyone should know.","spr_content":"- LLMs embed knowledge, abilities, and concepts in latent space.  <hr />- Proper priming cues activate specific internal states in neural networks.  <hr />- Sparse Priming Representation (SPR) leverages minimal prompts to activate complex latent content.  <hr />- Human-like associative thinking enables priming based on cues and related concepts.  <hr />- Key concepts: knowledge condensation, metaphorical mapping, efficiency in activation, latent content access.  <hr />- LLM events structure knowledge: weekly meetings, technical demos, problem-solving, comparisons, updates.  <hr />- Internal channels focus on research, scalability, language performance, AI trends.  <hr />- Self-hosted AI in browsers: concerns about size, download, limited browser support, exploring WebGPU.  <hr />- Elixir clustering: process groups, broadcast messaging, leader election, Raft consensus for scalability.  <hr />- Rust vs Go: concurrency models, Rust’s references, borrowing, functional style; Go's simplicity.  <hr />- Rust learning curve tied to references and ownership model.  <hr />- Rust game server: UI demo, development challenges, running Rust examples.  <hr />- AI updates: Mixture of Experts (MoE), Mixtral 8x7B, multi-agent LLMs, modular architectures, scaling strategies.","tags":"LLM catchup discussion dwarves elixir event internal labs rust work","authors":"monotykamary","date":{"days":19705},"category":"updates > labs-digest"},"675":{"file_path":"updates/labs-digest/03.md","title":"Labs Weekly Catchup #3","description":"Our third weekly catchup. We organize an agenda the day beforehand and consolidate our findings, notable research progress, possibly new tech, insight or technique everyone should know.","spr_content":"- LLMs have latent knowledge and abilities that can be activated through priming cues.  <hr />- Priming with specific words and associations induces internal states resembling reasoning, planning, or concept recognition.  <hr />- Organizing and distilling content involves capturing core concepts, associations, and analogies succinctly.  <hr />- Internal channels reflect dynamic research activities: weekly meetings, technical demonstrations, and project updates.  <hr />- Conversations include exploring chatbot alternatives, integrating OpenAI with LibreChat, and reducing costs with custom LLM UIs.  <hr />- Shared query processing employs DuckDB WASM for infographic generation and real-time analytics inside browsers.  <hr />- ReCaptcha bypass leverages self-hosted AI models like YoloV8 via Tensorflow.js with WebGPU acceleration for object detection.  <hr />- Tauri enables cross-platform desktop application development; demoed with React + Tailwind, with references to Spacedrive and RSPC.  <hr />- Future actions focus on building repositories, applying Elixir's GenState for scalability, and improving alarm systems in specific projects.  <hr />- The entire process exemplifies iterative research, technical prototyping, and strategic planning within a collaborative lab environment.","tags":"LLM catchup discussion dwarves elixir event internal labs rust tauri work","authors":"monotykamary","date":{"days":19712},"category":"updates > labs-digest"},"676":{"file_path":"updates/labs-digest/04.md","title":"Labs Weekly Catchup #4","description":"Our fourth weekly catchup. We organize an agenda the day beforehand and consolidate our findings, notable research progress, possibly new tech, insight or technique everyone should know.","spr_content":"- LLMs have latent knowledge, abilities, and concepts embedded in their neural networks.<hr />- Latent content is activated by priming with precise language cues, analogous to human associative memory.<hr />- Effective priming uses concise, targeted input to access latent space, triggering desired outputs.<hr />- SPR distills complex info into succinct assertions, forming a mental map for models.<hr />- Knowledge includes technical tools, standards, and workflows relevant to development teams.<hr />- Broadway in Elixir enables high-concurrency, multi-stage pipelines for message processing.<hr />- Managing backpressure and high volume requests requires pipeline orchestration, node consensus algorithms like Raft.<hr />- WebAuthn API offers a modern, standardized method for authentication and passkey management.<hr />- Passkeys can be generated, stored locally or on external devices; lack of direct cloud storage means reliant on third-party solutions.<hr />- Implementing WebAuthn resembles familiar authentication flows (e.g., Metamask on Mochi UI).<hr />- Image labeling integrates GPT-4 Vision for metadata, generating embeddings via OpenAI CLIP and Cohere for text.<hr />- Embeddings form multi-dimensional vectors used in similarity, classification, and suggestions.<hr />- Multi-round data processing may be necessary to refine inputs and produce reliable user suggestions.","tags":"catchup discussion dwarves elixir event internal labs rust work","authors":"monotykamary","date":{"days":19719},"category":"updates > labs-digest"},"677":{"file_path":"updates/labs-digest/05.md","title":"Labs Weekly Catchup #5","description":"Our fifth weekly catchup to kick off the new year! We organize an agenda the day beforehand and consolidate our findings, notable research progress, possibly new tech, insight or technique everyone should know.","spr_content":"- LLM latent space can be primed through associative cues to activate knowledge and abilities.  <hr />- Effective priming uses precise, minimal language that encapsulates concepts, associations, and analogies.  <hr />- SPR aims to distill complex input into succinct, concept-rich statements for model activation.  <hr />- Priming takes advantage of neural networks’ embedding of concepts—like human memory recall triggered by cues.  <hr />- Language functions as a hardware-like interface, enabling models to access internal latent representations.  <hr />- Priming words should encapsulate context, purpose, and relevant details to efficiently activate desired capabilities.  <hr />- Encoding events, technical progress, or research status as key succinct statements facilitates model reasoning and generation.  <hr />- The summation of assertions creates a map of interconnected concepts, allowing for targeted activation of related knowledge.","tags":"catchup discussion dwarves elixir event internal labs rust work","authors":"monotykamary","date":{"days":19725},"category":"updates > labs-digest"},"678":{"file_path":"updates/labs-digest/01.md","title":"Labs Weekly Catchup #1","description":"Our first weekly catchup. We organize an agenda the day beforehand and consolidate our findings, notable research progress, possibly new tech, insight or technique everyone should know.","spr_content":"- Events are scheduled with precise dates and designated channels for communication.  <hr />- Weekly catchups involve agenda setting in advance and consolidation of findings.  <hr />- Topics include research progress, technical innovations, and team insights.  <hr />- Agenda items: AI Realtime Memory updates, demonstrations, and methodology advances.  <hr />- Realtime memory employs Retrieval Augmented Generation (RAG) for context updates.  <hr />- Enhances LLMs with more efficient, prompt-based data integration, addressing token limit challenges.  <hr />- Rust game server made significant progress, with a multiplayer demo, exploring Tokio vs. Actix.  <hr />- Documentation and tooling improvements are ongoing for smoother development.  <hr />- Mochi UI aims for design standardization, with upcoming workshops on best practices.  <hr />- WebStudio is a low-code platform utilizing real-time synchronization and collaboration technologies like immerhin.  <hr />- Adoption of standards: JSON patches (RFC 6902) enable lightweight JSON modifications; design tokens (W3C) ensure consistent styling across systems.","tags":"LLM catchup discussion dwarves event internal labs rust work","authors":"monotykamary","date":{"days":19697},"category":"updates > labs-digest"},"679":{"file_path":"playground/topics/architecture/c4-diagrams.md","title":"C4 diagrams","description":"C4 diagrams use a four-level model to clearly visualize software system architecture, helping teams understand system context, containers, components, and code implementation.","spr_content":"C4 diagrams represent software architecture through a four-tiered abstraction hierarchy. They include:  <hr />- **System Context**: high-level environment, entities, relationships, and deployment scenario.  <hr />- **Container**: architectural components within the system, showing how they fit into the environment.  <hr />- **Component**: decomposition of containers into smaller, frozen implementation units.  <hr />- **Code**: detailed, programmable implementation of components.  <hr /><hr />Designed by Simon Brown, C4 emphasizes clarity and simplicity, enabling quick understanding with minimal context. The model is flexible, supporting supplementary diagrams like system landscape, dynamic, and deployment views. Its semantics align with \"State, Explain, Link,\" fostering consistent understanding. The approach favors \"abstraction-first,\" making it developer-friendly, facilitating team communication, architecture evaluation, and risk analysis.  <hr />C4 is not static; it adapts across levels, supporting both static and dynamic perspectives, with a focus on semantic coherence and contextual completeness.","tags":"","authors":"","date":{"days":19099},"category":"playground > topics > architecture"},"680":{"file_path":"playground/topics/architecture/domain-model-in-domain-driven-design.md","title":"Domain model in domain driven design","description":"Learn what a Domain Model is in Domain Driven Design, including key components like Domain Events, Commands, Aggregates, and Bounded Contexts to organize business knowledge effectively.","spr_content":"- Domain Model encapsulates the structured knowledge of a business problem within Domain Driven Design (DDD).  <hr />- It can be represented via diagrams, code, or documentation, requiring accessibility for all project stakeholders.  <hr />- Core components include vocabulary, key concepts, and relationships among entities.  <hr />- Domain Events are past-tense statements of things that happened to change entity states, e.g., \"Order submitted.\"  <hr />- Commands are present-tense actions triggering corresponding domain events, e.g., \"Add product\" leads to cart update.  <hr />- Aggregates are minimal clusters of related objects acting as data change units, bounded by an Aggregate Root, which is referenced externally.  <hr />- Example: Updating a project’s member role involves an aggregate with a root like \"Project, Update member role\" leading to \"Project’s member role updated.\"  <hr />- Bounded Contexts group related entities functionally, often as circles or squares, delimiting parts of aggregates or multiple aggregates.  <hr />- Example: In shopping, bounded contexts like Shopping Cart and Offers organize related processes, e.g., adding products or applying promotions.  <hr />- The Domain Model promotes clarity, communication, and organized invariants across complex business logic.","tags":"","authors":"","date":{"days":19175},"category":"playground > topics > architecture"},"681":{"file_path":"playground/topics/architecture/entities-in-domain-driven-design.md","title":"Entities in domain driven design","description":"Learn how Domain-Driven Design (DDD) uses entity identity and continuity to improve software by linking developers and domain experts for better system maintenance and scalability.","spr_content":"- DDD focuses on the **Domain** to enhance communication between **Developers** and **Domain Experts**.<hr />- Removing **communication lag** ensures shared understanding and effective collaboration.<hr />- **Separation of domain-specific components** improves maintenance and scalability.<hr />- Entities are primarily defined by **Identity (ID)**, which distinguishes objects with identical attributes.<hr />- Examples: person with same name and DOB but different ID; banknote with unique serial number.<hr />- Entities are also defined by **Thread of Continuity**, traces of an object across systems.<hr />- Examples: banknotes tracked via physical or digital IDs; orders tracked through order ID, payment ID, shipping ID.<hr />- System implementations create IDs: **Generated IDs**, **Attribute Combinations**, or **Log Timestamps**.<hr />- The **role of entities** in DDD is to establish **continuity**, enabling predictable behavior.<hr />- The focus is on **how the system revolves around identity**, not on assigning IDs upfront.<hr />- In practical scenarios, entities’ identity influences system behavior, e.g., item availability affecting checkout.<hr />- References: Herbertograca insights; **Eric Evans’ DDD principles**.","tags":"","authors":"","date":{"days":19079},"category":"playground > topics > architecture"},"682":{"file_path":"playground/topics/architecture/event-sourcing-overview.md","title":"Event sourcing overview","description":"Event sourcing records all changes as events, allowing e-commerce platforms to track detailed order history and generate flexible analytics for better business insights and future-proof data management.","spr_content":"- Event sourcing revolves around storing all state-changing occurrences as discrete Events for comprehensive system history.  <hr />- Events capture business-critical data, enabling auditing, market simulations, and adaptable business insights.  <hr />- In an e-commerce context, events include order_created, product_added, product_removed, etc.  <hr />- Each Event contains: Entity_ID (e.g., order: 1), Type (e.g., product_added), Data (changes), Metadata (user interactions, metrics), Version.  <hr />- Event store acts as an append-only journal, preserving event logs per domain object; naming aligns with domain (order_event_store).  <hr />- System state derives from sequentially composing (projecting) events; e.g., current order products from add/remove events.  <hr />- State projection consolidates events into a usable model, such as real-time order contents or retention rates.  <hr />- Snapshots capture state at a point in time to optimize performance; subsequent events are composed from snapshot onward.  <hr />- When requirements evolve—like tracking cart changes for analytics—Event sourcing ensures historical data retention, avoiding data loss from isolated implementations.  <hr />- Business logic validates event sequences via aggregation, ensuring only valid appends to event store.  <hr />- Event sourcing accommodates endless business changes and emergent critical data for future decisions, unlike traditional CRUD systems.","tags":"","authors":"","date":{"days":19331},"category":"playground > topics > architecture"},"683":{"file_path":"playground/topics/architecture/finite-state-automata.md","title":"Finite state automata","description":"Learn what finite-state automata are, how they model systems using states and transitions, and see practical examples of state machines in programming with key concepts like states, events, and transitions.","spr_content":"- Finite-State Automaton (FSA) is a mathematical model representing an abstract machine with a finite set of states.  <hr />- It can only occupies one state at any given moment, often represented as a string or enumeration.  <hr />- The deterministic finite-state machine (DFA) is defined by a quintuple: Σ (input alphabet), S (states), s₀ (initial state), δ (transition function), F (final states).  <hr />- Transition function δ maps a current state and input symbol to a new state, formalized as δ: S × Σ → S.  <hr />- Reaching a final state involves transition from S to F, the set of accepting states.  <hr />- Understanding: transitions are driven by events (inputs), moving the automaton through states.  <hr />- States and events can be encoded via algebraic data types (ADTs), nested union types for clarity and precision.  <hr />- Example transition pattern: from `NotStarted` with `Start` input to `Running`; from `Running` with `Pause` to `Paused`; from `Paused` with `Resume` back to `Running`.  <hr />- States are often domain-agnostic in DDD and Event Storming; they represent behavior boundaries rather than core domain concepts.  <hr />- Domain models focus on behavior of commands and persistence, not on state representation.  <hr />- FSMs serve as models for representing process flows, control logic, or system states, but are separated from domain logic.","tags":"","authors":"","date":{"days":19171},"category":"playground > topics > architecture"},"684":{"file_path":"playground/topics/architecture/finite-state-transducer.md","title":"Finite state transducer","description":"Learn what a finite-state transducer is, its mathematical model, and how it processes inputs to outputs with states, including examples in programming and applications in natural language processing.","spr_content":"- A finite-state transducer (FST) extends finite-state automata by incorporating both input and output expections.<hr />- Unlike finite automata with only an input tape, transducers have two tapes: input (data) and output (relations).<hr />- In Turing machines, tapes are separate: one for input strings, one for relations/output.<hr />- Mathematically, a deterministic finite-state transducer is a septuple: (Σ, S, Γ, δ, ω, s₀, F).<hr />- Σ (input alphabet): the set of symbols (events).<hr />- S (states): the finite set of possible states.<hr />- Γ (output alphabet): symbols produced as output.<hr />- δ (transition function): S × Σ → S, defines state changes.<hr />- ω (output function): S × Σ → Γ, defines output per transition.<hr />- s₀ (initial state): starting point within S.<hr />- F (final states): subset of S, indicating acceptance.<hr />- Transition relation δ can include ε (empty string) for silent transitions.<hr />- Transitions involve moving from one state to another, possibly emitting output.<hr />- Recognition of languages via transducers relies on reaching final states.<hr />- Simplified models resemble regular state machines with input, state, output.<hr />- Mealy machines: type of transducer where outputs depend on current state and input.<hr />- Examples include reducer functions in Redux and React—mapping inputs (actions) to output states.<hr />- Encapsulating state, input, and output in code demonstrates transducer-like behavior.<hr />- Sample transition code models process states (e.g., task status) depending on inputs with time-dependent elapsed output.<hr />- Transducers serve in natural language processing, data transformation, and state-based systems.<hr />- They generalize automata by producing structured outputs, enabling complex language recognition and processing tasks.","tags":"","authors":"","date":{"days":19171},"category":"playground > topics > architecture"},"685":{"file_path":"playground/topics/architecture/law-of-demeter.md","title":"Law of demeter","description":"Learn how the Law of Demeter reduces object dependencies by promoting loose coupling and improving code flexibility, maintainability, and testability in object-oriented programming.","spr_content":"- The Law of Demeter (LoD) advocates minimal object communication, promoting loose coupling.<hr />- LoD is also called the Philosophy of Least Knowledge, emphasizing limited knowledge sharing.<hr />- An object should only invoke methods on directly related objects, not on nested or distant objects.<hr />- It discourages direct attribute access of objects reached indirectly through other objects.<hr />- Example violation: accessing `company.name` directly from `Info` class violates LoD.<hr />- Corrected approach: delegate `getCompanyName()` from `Employee`, and `Info` calls this method.<hr />- LoD enhances modularity, making code easier to maintain, test, and adapt.<hr />- LoD reduces side effects and clarifies data/control flow.<hr />- Downsides include potential proliferation of small objects and increased complexity.<hr />- Can hinder business rule enforcement across multiple objects and cause data duplication.<hr />- Application requires discretion; complete decoupling may not always be practical or beneficial.<hr />- LoD encourages designing with minimal inter-object dependencies to improve flexibility.","tags":"","authors":"","date":{"days":19374},"category":"playground > topics > architecture"},"686":{"file_path":"playground/topics/architecture/mealy-machine.md","title":"Mealy machine","description":"Learn what a Mealy machine is, its mathematical model, and how it differs from Moore machines and finite-state transducers in this clear explanation of finite-state automata concepts.","spr_content":"- Mealy machine is a finite-state automaton where outputs depend on current state and input.  <hr />- Closest to deterministic finite-state transducer; both generate output sequences subject to input sequences.  <hr />- Defined by sextuple: (Σ, S, Γ, δ, ω, s₀):  <hr />  - Σ: input alphabet (events)  <hr />  - S: finite states  <hr />  - Γ: output alphabet  <hr />  - δ: state transition function (S × Σ → S)  <hr />  - ω: output transition function (S × Σ → Γ)  <hr />  - s₀: initial state (element of S)  <hr />- Alternatively, transition and output functions can combine: δ: S × Σ → S × Γ.  <hr />- Transition with initial state: δ: s₀ × Σ → S; output: ω: s₀ × Σ → Γ.  <hr />- Transition relation may include ε (empty string) for silent transitions, embedded in δ.  <hr />- Example: traffic light system, transitions driven by inputs (ExpireTime, Error, Restart); outputs (Red, Amber, Green, FlashingRed) are functions of state and input.  <hr />- Difference from finite-state transducer: Mealy machines are generators, not for language processing; lack final states.  <hr />- Difference from Moore machines: outputs depend on state and input in Mealy, only on state in Moore; both are generator types for regular languages.  <hr />- All Moore machines can convert to Mealy and vice versa; they are equivalent in expressive power.","tags":"","authors":"","date":{"days":19171},"category":"playground > topics > architecture"},"687":{"file_path":"playground/topics/architecture/moore-machine.md","title":"Moore machine","description":"Learn about Moore machines, a type of finite-state machine where outputs depend only on current states, and explore their differences from Mealy machines and formal definitions.","spr_content":"- Moore machine is a finite-state automaton with outputs determined solely by current state.  <hr />- It is a restricted finite-state transducer type.  <hr />- Uses a sextuple: ($\\Sigma$, $S$, $\\Gamma$, $\\delta$, $\\omega$, $s_0$).  <hr />- $\\Sigma$ = input alphabet (events); $S$ = states; $\\Gamma$ = output alphabet.  <hr />- $\\delta: S \\times \\Sigma \\rightarrow S$ defines state transitions.  <hr />- $\\omega: S \\rightarrow \\Gamma$ defines output per state; synchronized with state change.  <hr />- $s_0$ = initial state; transition relation includes ε (empty).  <hr />- Transition: $\\delta: s_0 \\times \\Sigma \\rightarrow S$; output: $\\omega: s_0 \\rightarrow \\Gamma$.  <hr />- Unlike Mealy machines, outputs do not depend on inputs, only states.  <hr />- Cannot coalesce transition and output functions; output is synchronous to state change.  <hr />- Example: traffic light system with states Red, Amber, Green, FlashingRed; transitions occur on events like ExpireTime, Error, Restart.  <hr />- Moore machines are deterministic, sequential, output generated upon entering each state.  <hr />- They don’t have a final state concept; purely generator-based.  <hr />- Can be converted to and from Mealy machines; they are equivalent in expressive power.  <hr />- Unlike finite-state transducers used in language processing, Moore machines are generator-only.  <hr />- Difference from Mealy: Mealy outputs depend on state and input; Moore outputs depend only on state.","tags":"","authors":"","date":{"days":19171},"category":"playground > topics > architecture"},"688":{"file_path":"playground/topics/architecture/overview-of-domain-driven-design.md","title":"Overview of domain driven design","description":"Domain Driven Design (DDD) improves software by creating clear domain models and shared language between developers and business experts, helping solve complex business problems effectively.","spr_content":"- Domain Driven Design (DDD) centers on the application’s core **Domain** as crucial to success.<hr />- It promotes creating a **rich, meaningful Domain model** using rules like **Ubiquitous Language** and techniques like **Event Storming**.<hr />- DDD enforces **domain-centric conversations**, reducing **communication lag** between **Developers** and **Business Experts**.<hr />- It removes **vocabulary ambiguity** by aligning business terminology with technical implementation through **Ubiquitous Language**.<hr />- A comprehensive **Domain model** clarifies business processes, reveals potential features, issues, and priorities.<hr />- **Domain Events** highlight key aspects, supporting scalability and feature prioritization.<hr />- DDD advocates for a **technology-agnostic** approach, emphasizing modeling and design choices over implementation details.<hr />- It enhances **human aspects**: stakeholders and PMs can better measure success; onboarding is faster by minimizing translation needs; developers gain better problem insight.<hr />- Best suited for **complex business domains** requiring discipline, collaboration, and dedicated teams.<hr />- Not ideal for applications with low domain complexity but high technical complexity.<hr />- Examples include **distribution domain** (IBM vaccine solution) and **library booking** applications.<hr />- DDD is championed by works like **Eric Evans’ book**, emphasizing strategic modeling over technical specifics.","tags":"","authors":"","date":{"days":19164},"category":"playground > topics > architecture"},"689":{"file_path":"playground/topics/architecture/principles-of-good-software-design.md","title":"Principles of good software design","description":"Learn how software design breaks complex systems into simple, manageable modules with deep interfaces, error prevention, and effective design reviews to create better APIs and reduce complexity.","spr_content":"- Software design involves decomposition into manageable units for parallel development.  <hr />- Complexity management: eliminate or hide through avoidance of special cases or modularity.  <hr />- \"Design it twice\": iterative refinement yields better results; exemplified by API redesigns, such as Tk Toolkit.  <hr />- Deep modules with simple interfaces encapsulate complex inner workings, reducing cognitive load.  <hr />- Error handling: aim to prevent errors via system design; evaluate when to handle or ignore errors carefully.  <hr />- Interface design must reflect the caller's perspective to ensure clarity and usability.  <hr />- Design reviews and discussions are crucial for diverse insights and tradeoff evaluation; whiteboarding techniques facilitate consensus.","tags":"","authors":"","date":"","category":"playground > topics > architecture"},"690":{"file_path":"playground/topics/architecture/redis-streaming.md","title":"Redis streaming","description":"Learn how to use Redis Streaming for event sourcing and messaging with Docker setup, stream publishing, reading, consumer groups, and message claiming in Redis key-value database.","spr_content":"- Redis is an in-memory key-value database supporting diverse data structures: strings, hashes, lists, sets, sorted sets, bitmaps, hyperloglogs, geospatial indexes.<hr />- Open-source, versatile for database, cache, and message broker roles.<hr />- Redis supports Redis Streams: append-only logs combining lists and pub/sub for sequential data flow.<hr />- Redis Streaming enables event-sourcing and messaging with minimal latency, high throughput.<hr />- Setting up Redis with Docker involves pulling `redis` image, running container, verifying with `docker ps`, accessing via `docker exec redis-cli`.<hr />- Publishing to a stream (`XADD`) creates events with auto-generated IDs, field-value pairs.<hr />- Reading entries (`XREAD`) can fetch all, specific, or recent entries, with options like `COUNT`, from specific IDs.<hr />- Consumers read streams, waiting/blocking (`XREAD BLOCK`) for new messages, with IDs like `$` for latest.<hr />- Consumer groups (`XGROUP CREATE`) facilitate multiple processes; each with Pending Entries List (`PEL`) and independent consumers.<hr />- Consumers (`XREADGROUP`) process only new or pending messages, identified by `>` or specific IDs.<hr />- Pending messages (`XPENDING`) list unacknowledged events per group, per consumer.<hr />- Mark processed messages as acknowledged (`XACK`) removing them from `PEL`.<hr />- Reassign stuck or pending messages via claiming (`XCLAIM`) or auto-claiming (`XAUTOCLAIM`) based on idle time thresholds.<hr />- `XCLAIM` transfers ownership of a pending message to another consumer after minimum idle time.<hr />- `XAUTOCLAIM` automates the claiming of pending messages exceeding idle time, with optional `COUNT`.<hr />- For containerization, prerequisites include Docker; commands to pull images, run containers, check status, engage Redis CLI, publish, read, and manage streams are elaborated.<hr />- These primitives enable scalable, event-driven architectures, microservice decoupling, and robust message processing pipelines.","tags":"","authors":"","date":{"days":19468},"category":"playground > topics > architecture"},"691":{"file_path":"playground/topics/architecture/reducers.md","title":"Reducers","description":"Learn how frontend reducers act as single state machines with non-deterministic states, using algebraic data types for clear state management and enabling parallelizable operations in React and Redux.","spr_content":"- Frontend reducers differ from MapReduce reducers; focused on UI state transitions, not data processing at scale.<hr />- Main applications: React's `useReducer`, Redux, inspired by Facebook's Flux, emphasizing unidirectional data flow.<hr />- Architectures resemble algebraic data types (ADTs) with union types (custom types in Elm); lack explicit state encoding within ADTs, initial state as the sole state.<hr />- Reducers function as single state machines; events modify context, creating non-deterministic or progressive states.<hr />- Counter example: non-deterministic state is the current value; events (Increment/Decrement) transition state.<hr />- ReScript syntax models reducers as ADTs, with explicit state and event types; transition functions map (state, event) to new state.<hr />- State composition: state asADTs (Idle with value), events as union types; transition functions pattern-match to produce new state.<hr />- Unlike finite state machines, reducers encode state finitely via data structures like strings; inherently tradeoff for flexibility.<hr />- Associative law ensures that reducers following it can be parallelized; their non-deterministic, non-finite state representations facilitate composability.<hr />- Key references: union types, custom types, Flux/Redux history, and their algebraic, compositional properties for scalable, predictable UI state management.","tags":"","authors":"","date":{"days":19134},"category":"playground > topics > architecture"},"692":{"file_path":"playground/topics/architecture/service-based-architecture.md","title":"Service based architecture","description":"Service-based architecture offers a flexible, middle-ground approach between monoliths and microservices, ideal for managing complex business needs without the overhead of full microservice complexity.","spr_content":"- Service-based architecture (SBA) is a pragmatic, hybrid architecture between microservices and monoliths.  <hr />- It is distributed but less complex than pure microservices, balancing flexibility and manageability.  <hr />- Microservices and Service-Oriented Architecture (SOA) are both considered service-based architectures.  <hr />- Mark Richards defines SBA as a superset encompassing microservices and SOA, sharing patterns like service contracts and the BASE model for database transactions.  <hr />- SBA suits projects with complex business requirements that are too unwieldy for monoliths but don’t need full microservice loose coupling.  <hr />- It offers a middle ground, avoiding the high complexity and operational costs of strictly distributed microservices.","tags":"","authors":"","date":{"days":19164},"category":"playground > topics > architecture"},"693":{"file_path":"playground/topics/architecture/solid-principles.md","title":"Solid principles","description":"Learn the SOLID principles of object-oriented design to create clean, maintainable, and flexible code with key concepts like Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion.","spr_content":"- SOLID principles are five fundamental guidelines for object-oriented class design, introduced by Robert C. Martin (Uncle Bob) in 2000.  <hr />- The acronym \"SOLID\" highlights key concepts: Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, Dependency Inversion.  <hr />- These principles promote clean, maintainable, scalable, and flexible software architecture.  <hr />- Single Responsibility Principle: a class should have only one reason to change, handling only one responsibility (e.g., separating data representation from printing).  <hr />- Violating SRP leads to tightly coupled, hard-to-maintain code; adhering promotes separation of concerns.  <hr />- Open-Closed Principle: classes should be open for extension but closed for modification; achieved via inheritance or interfaces (e.g., using subclasses for new animal types).  <hr />- Violating OCP involves modifying existing code for new features; proper design involves abstractions and inheritance.  <hr />- Liskov Substitution Principle: subclasses must be substitutable for their base classes without altering program correctness (e.g., a car with an electrical motor should obey expected behaviors).  <hr />- Violations occur when subclasses change expected behaviors or interfaces; correct implementation relies on ensuring derived classes fulfill base class contracts.  <hr />- Interface Segregation Principle: clients shouldn’t be forced to depend on interfaces they do not use; break large interfaces into smaller, specific ones (e.g., separate general info from work info).  <hr />- Violations happen when interfaces contain irrelevant methods; applying ISP ensures decoupled, focused interfaces.  <hr />- Dependency Inversion Principle: high-level modules depend on abstractions, not on concrete implementations; both depend on interfaces to reduce coupling (e.g., logger implementations).  <hr />- Proper dependency inversion enables swapping components (console vs. file logger) without changing high-level code.  <hr />- These principles collectively enhance software quality by reducing coupling, increasing reusability, and easing maintenance and scaling efforts.","tags":"","authors":"","date":{"days":19467},"category":"playground > topics > architecture"},"694":{"file_path":"playground/topics/architecture/state-explosion.md","title":"State explosion","description":"Learn how statecharts solve the state explosion problem in state machines using parallel states, hierarchical states, and guard conditions for simpler and more efficient designs.","spr_content":"- State explosion: exponential growth of states in complex state machines, hindered widespread adoption.<hr />- Causes include numerous states with similar transitions, nested conditionals, and product types.<hr />- Statecharts address state explosion via parallel states: split complex states into independent, concurrently active substates.<hr />- Hierarchical states: organize nested states into parent-child hierarchies, collapsing multiple states into a single node with subordinate substates.<hr />- Guards: preconditions that prevent or enable transitions based on specific conditions, reducing unnecessary states and transitions.<hr />- Statecharts’ methods (parallelism, hierarchy, guards) abstract and condense state space, mitigating combinatorial complexity.<hr />- Analogy: Hierarchical and parallel states function like modular, layered, conditionally enabled switches, collapsing combinatorics.<hr />- Similar to nested ifs: structured control flow reduces combinatorial expansion.<hr />- Related concepts: product types symbolize state combinations; hierarchical states form nested product arrangements.<hr />- Overall, statecharts streamline state management, controlling combinatorial blowup through structured concurrency and conditional gating.","tags":"","authors":"","date":{"days":19134},"category":"playground > topics > architecture"},"695":{"file_path":"playground/topics/architecture/uml-state-machine-diagram.md","title":"Uml state machine diagram","description":"Learn how UML State Machine Diagrams visualize object states, transitions, events, and actions to model dynamic system behavior in software development, embedded systems, and more.","spr_content":"- UML State Machine Diagram models dynamic behavior of objects within systems.  <hr />- Core function: depict state transitions triggered by events and conditions.  <hr />- States: distinct modes or conditions, represented as rounded rectangles with labels.  <hr />- Transitions: arrows indicating movement between states, labeled with trigger events or conditions.  <hr />- Events: occurrences (external/internal) that initiate transitions.  <hr />- Actions: behaviors executed during transitions, clarifying system responses.  <hr />- Guards: boolean conditions controlling whether transitions occur.  <hr />- Initial state: marked by filled circle, indicates starting point.  <hr />- Final state: bullseye symbol, marks process completion or endpoint.  <hr />- Symbols encode: states (rounded rectangle), transitions (arrows), events, actions, guards, initial/final states.  <hr />- Applications: software behavior modeling, embedded system design, game character states, business workflows, communication protocols.  <hr />- Benefits: enhance clarity, manage complexity, validate requirements, facilitate communication, document system behavior.  <hr />- Diagram provides a visual, concise, structured representation of object states and transitions.  <hr />- Enables stakeholders to understand, analyze, and communicate system behaviors effectively.  <hr />- Critical for design, implementation, testing, and maintenance phases in system development.","tags":"","authors":"","date":{"days":19585},"category":"playground > topics > architecture"},"696":{"file_path":"playground/topics/blockchain/assert-require-revert.md","title":"Assert require revert","description":"Learn how to enforce smart contract invariants in Solidity using assert(), require(), and revert() to ensure error checking and secure contract behavior.","spr_content":"- Enforce invariants with `assert()` to maintain constant properties (e.g., token-to-ether ratio).<hr />- An `assert()` guard triggers upon invariant violation, signaling internal errors.<hr />- Always combine `assert()` with other safety measures like pausing or upgradability to avoid lockout scenarios.<hr />- Example: In a token contract, `assert()` checks that contract balance ≥ total supplied tokens.<hr />- `assert()` is not for strict equality checks; accounts for external ether transfers bypassing deposit functions.<hr />- Properly use `assert()`, `require()`, `revert()`; `assert()` for internal invariants, `require()` for valid inputs and external validation.<hr />- Use `require()` to enforce input constraints and contract state preconditions, optionally with error messages.<hr />- Use `assert()` to verify internal correctness and invariants after state changes.<hr />- `assert()` failures indicate unrecoverable, internal errors, aiding formal verification.<hr />- Following this discipline helps static analysis tools confirm code correctness, absence of invalid opcodes.<hr />- Example: `require()` validates even value; `assert()` confirms internal balance consistency after transfer.<hr />- External transfer operations may bypass deposit logic; thus, balance assertions prevent inconsistencies.<hr />- Linking to SWC standards emphasizes importance of error and invariant handling for security assurance.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"697":{"file_path":"playground/topics/blockchain/documents.md","title":"Documents","description":"Learn how to properly document smart contracts with contact info, testing history, known issues, procedures, specifications, and deployment status to ensure security and transparency.","spr_content":"- Proper documentation is essential for mission-critical or high-stakes contracts to ensure clarity, safety, and accountability.  <hr />- Contact section must specify key personnel, including programmers and stakeholders, and a communication channel like chat rooms for issue reporting and discussion.  <hr />- History should record testing phases, usage statistics, bugs discovered, and review feedback from code reviewers to track reliability and improvements.  <hr />- Known-issues section must list key risks such as total loss potential, vulnerability exploits, known bugs, attack vectors, and mitigations, plus conflicts of interest.  <hr />- Procedures include action plans for bug discovery, emergency responses, public notification, wind down protocols, responsible disclosure policies, bug bounty rules, and recourse options like insurance or penalty funds.  <hr />- Specification documents should contain detailed system diagrams, state machines, models, and definitions to facilitate audits, reviews, and early bug detection, with cost-effective fixes prioritized.  <hr />- Rollout plans must specify deployment schedules, compatibility considerations, verification steps for ensuring source-code correspondence, and phased compiler settings.  <hr />- Status updates should detail current deployment locations, compiler details, verification procedures, ongoing issues, and performance metrics, supporting transparent ongoing oversight.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"698":{"file_path":"playground/topics/blockchain/external-calls.md","title":"External calls","description":"Learn best practices for safe external calls in Solidity, including avoiding reentrancy, handling errors, using call() over transfer(), and never delegatecall untrusted contracts to secure smart contracts.","spr_content":"- External calls pose security risks, executing malicious code or depending on untrusted contracts.  <hr />- Always label variables, functions, and interfaces to clarify trust boundaries; distinguish trusted vs. untrusted contract interactions.  <hr />- Avoid state changes immediately after external calls to prevent vulnerabilities like reentrancy; follow checks-effects-interactions pattern.  <hr />- Do not rely on `transfer()` or `send()` due to fixed 2300 gas stipend; prefer `.call()` with proper success verification.  <hr />- Handle errors from low-level calls (`address.call()`, `delegatecall()`, `send()`) by checking returned success flags; avoid assuming exceptions are thrown automatically.  <hr />- Favor pull over push for external calls to isolate failures; implement user-initiated withdrawals instead of automated pushes, especially for payments.  <hr />- Never delegatecall to untrusted or user-controlled addresses; only delegatecall to verified, trusted contracts.  <hr />- Be cautious with delegatecall: it can alter the caller's state or destroy the contract if misused.  <hr />- Assume contracts may hold non-zero balances at creation; do not rely on initial zero Ether assumptions.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"699":{"file_path":"playground/topics/blockchain/general.md","title":"General","description":"Learn best practices for Solidity smart contracts including abstract contracts vs interfaces, proper use of assert/require/revert, inheritance, event monitoring, fallback functions, security tips, and visibility modifiers.","spr_content":"1. Abstract contracts and interfaces both enable reusability in Solidity; interfaces, introduced in 0.4.11, lack implementation, cannot access storage, nor inherit from others, making abstract contracts more flexible. Contract inheritance mandates overriding all non-implemented functions; failure results in an abstract contract.  <hr />2. `assert()` enforces internal invariants; should only verify internal errors, such as balance constraints, and be used with care to avoid deadlock if conditions always fail. `require()` validates inputs and external call results, propagating errors with optional messages. Proper use of these functions facilitates verifiability and formal analysis; `revert()` cancels transactions explicitly.  <hr />3. Multiple inheritance in Solidity employs linearization: the inheritance graph is resolved right-to-left, with the most derived contract's state and functions overriding bases—e.g., linearization Final → B → C → A results in `fee` set by contract C's override. Shadows and reordering can cause vulnerabilities; manual inspection is essential.  <hr />4. Events serve as on-chain logs, capturing contract activity; internal calls do not generate external transactions, but events provide unobtrusive, persistent records for auditing and UI triggers, e.g., `LogDonate` logs donations regardless of direct or internal calls.  <hr />5. Checking `extcodesize` for contract vs. EOA detection is unreliable: contracts during construction return zero code size; pre-deployment addresses can be manipulated or precomputed, defeating checks. Use `tx.origin` or other measures cautiously; understand EVM behaviors to avoid false assurances.  <hr />6. Keep fallback functions simple; only emit events or log Ether receipt to avoid high gas costs. Verify `msg.data.length == 0` if fallback is intended solely for plain Ether transfers; otherwise, callers misusing fallback functions may remain unnoticed.  <hr />7. Integer division truncates toward zero; to preserve precision, multiply numerator before division or store numerator and denominator separately for external calculation. Rounding errors can affect calculations, especially in financial contexts.  <hr />8. Prefer passing contract interfaces or types over raw addresses when invoking functions; compilers enforce type safety, reducing runtime errors. For example, `Validator` type in `validateBet(Validator, uint)` ensures correct contract interaction.  <hr />9. Lock pragma versions to tested compiler exacts (`pragma solidity 0.4.4`) to prevent accidental upgrades, ensuring consistency and safety across deployments. Floating pragmas (`^`) allow version drift, risking incompatibilities; explicit locking is recommended unless distributing libraries.  <hr />10. Modifiers execute before function code but may introduce security risks: external calls within modifiers can enable reentrancy, violating Checks-Effects-Interactions pattern. Use `require()` within functions for clarity; avoid placing state-altering external calls in modifiers.  <hr />11. Functions receiving Ether require `payable`; from Solidity 0.4.0+, the modifier accepts only external calls with `msg.value > 0`. Calling non-payable functions with `msg.value > 0` reverts; calling payers must mark functions `payable`.  <hr />12. Shadowing allows override of globals like `msg`, `revert()`, which can mislead or compromise code integrity. Developers and auditors must review source code thoroughly, as shadowing a built-in can falsify logic or obscure bugs.  <hr />13. Timestamp dependence is vulnerable to miner manipulation; block timestamps can be adjusted within a 15-second window, affecting randomness and timing-critical logic. Avoid using `block.timestamp` for randomness; rely on the 15-second rule to gauge acceptable timestamp variance.  <hr />14. Never use `tx.origin` for authorization: it risks security flaws as other contracts can invoke your functions, passing `tx.origin` as the user; prefer `msg.sender`. `tx.origin` may be deprecated or removed, undermining future compatibility.  <hr />15. Explicitly declare function and variable visibility (`public`, `external`, `internal`, `private`); this clarifies access rights, improves security, and aids audits. External functions can't be called internally by default; internal and private restrict access to the defining contract or hierarchy.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"700":{"file_path":"playground/topics/blockchain/precautions.md","title":"Precautions","description":"Learn how to prepare smart contracts for failure with techniques like circuit breakers, rate limits, speed bumps, and upgradeability to enhance blockchain security and reduce risks.","spr_content":"Guardian principles of smart contract resilience:<hr />- Recognize the impossibility of absolute security; prioritize graceful failure.<hr />- Architect contracts for minimal damage upon failure, not only for known attacks.<hr />- Be cautious: adding components or fail-safes can create new vulnerabilities or interactions.<hr />- Deploy contracts after extensive testing: full test coverage, testnets, bug bounties, volume interactions, and beta mainnet stages.<hr />- Implement automatic deprecation: shut down actions after predetermined durations, retaining critical functions.<hr />- Limit user or contract Ether exposure early, reducing potential losses during failures.<hr />- Use circuit breakers: emergency stops triggered manually or automatically based on specific conditions, to suspend actions during bugs.<hr />- Apply rate limits: restrict withdrawal amounts, or contract token issuance over time, to mitigate rapid malicious drains.<hr />- Conduct bounty programs thoughtfully: define reward tiers, involve lead developers and judges, evaluate bug severity, and communicate transparently.<hr />- Introduce speed bumps: delay malicious actions, allowing time to respond or recover.<hr />- Embrace and understand upgradeability: essential for fixing bugs and adding features; requires secure governance, modular design, and the separation of logic from data storage.<hr />- Use registry contracts for upgrade management: store current addresses; challenge is user reliance on up-to-date info.<hr />- Use delegatecall-based proxies: forward calls to logic contracts, facilitating seamless upgrades; beware of storage layout requirements and potential pitfalls.<hr />- Prioritize storage layout consistency: only append new variables, avoid reordering, and understand implications for data integrity.<hr />- Maintain strong understanding of delegatecall's mechanics, ABI implications, and upgrade risks.<hr />- Recognize that security is a layered system: combine multiple fail-safes, monitor interactions, and design for recoverability.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"701":{"file_path":"playground/topics/blockchain/token.md","title":"Token","description":"Learn about frontrunning risks in EIP-20 token approvals and the importance of following accepted Ethereum token standards like EIP-20 and EIP-721 for secure smart contracts.","spr_content":"- EIP-20 `approve()` allows a spender to be authorized for a certain amount.  <hr />- Front running exploits can occur via the approval process.  <hr />- Spender can call `transferFrom()` before `approve()` completes, spending more than intended.  <hr />- Spender can also call `transferFrom()` after approval, leading to race conditions.  <hr />- Detailed info available in EIP-20 spec and related documentation.  <hr />- Token smart contracts should adhere to established standards for safety and compatibility.  <hr />- Accepted standards include EIP-20 (fungible tokens), EIP-721 (NFTs).  <hr />- Standardization ensures predictable, secure token behavior across implementations.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"702":{"file_path":"playground/topics/communication/cognitive-diversity-enhances-team-problem-solving-capabilities.md","title":"Cognitive diversity enhances team problem solving capabilities","description":"Teams with cognitive diversity solve problems faster and think more creatively than homogeneous groups, showing the value of diverse thinking styles in improving team performance and problem-solving.","spr_content":"- Cognitive diversity accelerates problem-solving; heterogeneous teams outperform homogeneous ones.  <hr />- Hiring for \"fit\" may restrict diversity, impairing innovation and solution quality.  <hr />- Diverse specializations expand holistic perception of problems; foster integrative understanding.  <hr />- Specialization leads to mastery but narrows perceived salience; mental models filter perspective.  <hr />- Broader knowledge integration (consilience) synthesizes disparate fields, enriching problem context.  <hr />- Organizational design should promote cognitive and disciplinary diversity for optimal problem-solving.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"703":{"file_path":"playground/topics/communication/expressing-uncertainty-doesn-t-undermine-authority.md","title":"Expressing uncertainty doesn t undermine authority","description":"Researchers should openly share uncertainties in their findings, as expressing doubt builds trust and helps audiences better evaluate evidence, especially in changing situations like COVID-19.","spr_content":"- Researchers should openly admit uncertainties when sharing findings.<hr />- Knowledge remains fluid; new evidence can alter conclusions.<hr />- Highlighting uncertainties or ranges is more honest than false certainty.<hr />- Uncertainty is vital when communicating dynamic, evolving situations (e.g., COVID).<hr />- Expressing uncertainty does not undermine trustworthiness.<hr />- Presenting results as ranges is preferable over absolute figures.<hr />- Audiences are more capable of evaluating evidence than media often assumes.<hr />- Audience trust depends more on evidence strength than on message clarity.<hr />- Effective communication involves transparency about limitations and evidence strength.<hr />- Approach evidence communication with honesty, avoiding overconfidence.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"704":{"file_path":"playground/topics/communication/inform-rather-than-persuade.md","title":"Inform rather than persuade","description":"Learn how evidence communication promotes honest, transparent sharing of research by presenting uncertainties and conflicts to inform audiences without persuasion or bias.","spr_content":"- Researchers should promote informing over persuading audiences with partisan narratives.  <hr />- Goal: enable individuals to interpret information and decide independently.  <hr />- Focus on honesty, transparency, and revealing uncertainties.  <hr />- \"Evidence communication\" (Blastland et al.) emphasizes transparency about researchers’ motivations, uncertainties, conflicts, and contradictions.  <hr />- Sharing totality of findings prevents cherry-picking; pros and cons should be side-by-side.  <hr />- Anticipate misunderstandings; pre-bunk misconceptions.  <hr />- Clearly identify sources and present evidence strength with unapologetic uncertainty.  <hr />- Uncertainty disclosure does not diminish trust; it can reinforce credibility.  <hr />- Narratives simplify complexity, aiding human understanding and decision-making under uncertainty.  <hr />- Narrative sequencing shapes interpretation; aims (persuasion vs. information) influence arrangement.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"705":{"file_path":"playground/topics/communication/put-mental-models-in-conversation-with-one-another.md","title":"Put mental models in conversation with one another","description":"Learn how applying multiple mental models and diverse perspectives improves decision-making by revealing hidden insights and overcoming narrow, specialized thinking.","spr_content":"Mental models serve as narrative filters that facilitate decision-making by shaping understanding. They embody specific lenses, offering clarity at the expense of comprehensiveness, thus limiting problem space perspective. Applying multiple, especially antagonistic, models enables uncovering salience and causality beyond singular viewpoints. This requires crossing cognitive comfort zones, often through collaborative \"assertive inquiry,\" to incorporate diverse perspectives. Cognitive diversity expands the salience landscape, while specialization narrows it, risking oversight. Protecting dissent counters conformity, fostering a richer, more resilient understanding of complex problems.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"706":{"file_path":"playground/topics/communication/salience-is-subjective.md","title":"Salience is subjective","description":"Learn how Roger Martin explains problem solving by focusing on the most important information shaped by our stance, tools, and experience to improve decision-making and perspective.","spr_content":"- Problem solving requires identifying the most salient features of a challenge.  <hr />- We cannot consider all facets; selection is essential.  <hr />- Salience depends on individual _stance_, _tools_, and _experience_.  <hr />- _Stance_ encompasses personal knowledge, self-perception, and purpose.  <hr />- _Tools_ include physical instruments and conceptual frameworks like models and rules of thumb.  <hr />- _Experience_ provides practical knowledge that shapes intuition and sensitivity.  <hr />- Cognitive diversity expands the scope of salience perception.  <hr />- Specialization narrows what is considered salient by framing focus.  <hr />- Our view of the future is limited by our understanding of the past.  <hr />- Perspective results from the combination of stance, tools, and experience.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"707":{"file_path":"playground/topics/data/acid-model.md","title":"Acid model","description":"Learn how the ACID model ensures database transaction reliability with atomicity, consistency, isolation, and durability for accurate, secure, and concurrent data management in ACID-compliant systems.","spr_content":"- ACID models transaction integrity in databases: Atomicity, Consistency, Isolation, Durability.<hr />- Atomicity ensures transactions are all-or-nothing; partial executions are reverted.<hr />- Consistency enforces valid, rule-compliant data per constraints and triggers.<hr />- Isolation prevents transactions from interfering with each other, enabling concurrency.<hr />- Durability guarantees committed transactions persist through failures; data remains safe despite outages.<hr />- ACID used where data reliability, correctness, and integrity are critical—business, financial, operational.<hr />- Thresholds for ACID: high transaction order, low fault tolerance, multiple concurrent users, real-time accuracy.<hr />- ACID compliance achieved when databases meet all four principles reliably.<hr />- Benefits of compliance: fewer disruptions, protected financial transactions, consistent data, cost savings, up-to-date information.<hr />- Most relational DBs (MySQL, PostgreSQL, Oracle, SQL Server) are ACID compliant.<hr />- Some NoSQL systems (CouchDB, ArangoDB, IBM Db2) also implement ACID features.<hr />- ACID ensures reliable, accurate, and concurrent data handling critical for enterprise-grade applications.","tags":"","authors":"","date":{"days":19100},"category":"playground > topics > data"},"708":{"file_path":"playground/topics/data/apache-hadoop-and-big-data.md","title":"Apache Hadoop and big data","description":"Learn what Big Data is by exploring the 3 V's—Volume, Velocity, and Variety—and discover how Hadoop provides scalable, cost-effective solutions for storing and processing massive data sets.","spr_content":"Big Data characterized by the 3 V's: Volume, Velocity, and Variety.  <hr />Volume is relative; no fixed size defines \"Big.\"  <hr />10GB to 100TB ranges; Petabytes clearly big; Exabytes or Yottabytes are immense.  <hr />Velocity measures data growth speed; fast growth demands scalable solutions.  <hr />Variety adds complexity through diverse data formats: text, images, videos, unstructured, structured.  <hr />Big Data domains include science (e.g., Large Hadron Collider, NASA), government (e.g., NSA with petabyte-plus storage), private sector (social media, e-commerce).  <hr />Challenges: storage efficiency, fast computation, data loss prevention, cost management.  <hr />Traditional RDBMS struggles with horizontal scalability, flexible schemas, high costs at large volumes.  <hr />Grid computing offers parallel processing but complex, less suitable for massive data volumes.  <hr />Hadoop provides a scalable, cost-effective framework for distributed storage (HDFS) and processing (MapReduce).  <hr />Hadoop's key features: handles petabyte-scale data, supports dynamic schemas, scales horizontally, resilient to data loss through replication, runs on commodity hardware.  <hr />Does not replace RDBMS; instead, complements for big, unstructured, or varied data.  <hr />Hadoop originated from open-source projects (Nutch, GFS, MapReduce), fostered by Doug Cutting; became Apache top-level project in 2008.  <hr />It enables analyzing vast data efficiently, unlocking insights inaccessible with traditional systems, all at lower costs due to commodity servers.","tags":"","authors":"","date":{"days":19155},"category":"playground > topics > data"},"709":{"file_path":"playground/topics/data/base-model.md","title":"Base model","description":"The BASE model is a flexible NoSQL data approach focusing on Basic Availability, Soft-state, and Eventual consistency to enable scalable and loosely consistent distributed databases.","spr_content":"- BASE is an acronym for a flexible data manipulation approach, contrasting with the traditional ACID model.  <hr />- Basic Availability: the system prioritizes being available most of the time.  <hr />- Soft-state: data stores do not require strict write or replica consistency at all times.  <hr />- Eventual consistency: data will become consistent over time, not immediately.  <hr />- Looser than ACID, enabling greater scalability by tolerating temporary inconsistencies.  <hr />- Does not imply data will be perpetually inconsistent; developers must manage specific consistency needs.  <hr />- Relevant in distributed data stores with asynchronous transaction and event handling.  <hr />- Tradeoff: favoring availability over immediate consistency, especially under network partitions or outages, aligned with CAP theorem.  <hr />- BASE’s design supports decentralized, scalable systems at the expense of strict transaction isolation.","tags":"","authors":"","date":{"days":19100},"category":"playground > topics > data"},"710":{"file_path":"playground/topics/data/behind-a-hive-table.md","title":"Behind a hive table","description":"Learn how to create and understand Hive tables, including table structure, storage formats, SerDe functions, HDFS data location, and metadata management in the Hive metastore.","spr_content":"- Hive table creation involves defining structure—columns, data types, row format, delimiters—and optionally specifying location and table type.<hr />- The `USE` command switches context to a database, e.g., `stocks_db`.<hr />- The `CREATE TABLE` statement specifies schema and storage format; for comma-delimited data, use `ROW FORMAT DELIMITED FIELDS TERMINATED BY ','`.<hr />- `DESCRIBE FORMATTED` provides detailed metadata about the table: column names, types, database, timestamp.<hr />- Table directory paths in HDFS default to `user/hive/warehouse/`, with each database creating a `.db` directory, tables having directories under that.<hr />- Two main table types: MANAGED_TABLE (Hive manages data) and EXTERNAL_TABLE (Hive manages metadata, data resides externally).<hr />- Storage attributes include data format and read/write mechanisms; defaults to `TextInputFormat` and `HiveIgnoreKeyTextOutputFormat` if unspecified.<hr />- SerDe (Serializer/Deserializer) converts data between raw format and table schema; involves Java classes and can handle complex, nested data like JSON.<hr />- During data reading, SerDe deserializes records; object inspectors extract specific columns.<hr />- During writing, data is serialized via SerDe, which maps structured data into flat files.<hr />- Default SerDe is `LazySimpleSerDe`; custom SerDes can interpret complex formats, nested, or selective columns.<hr />- Metadata (schema, table location, properties) is stored in a metastore database (e.g., MySQL, Oracle), separate from data in HDFS.<hr />- Connection to the metastore is configured via `hive-site.xml`, containing JDBC URL, driver, credentials—placed typically in `/etc/hive/conf`.<hr />- Drop commands: `DROP TABLE` removes table data and metadata; `DROP DATABASE` deletes database only if empty; use `CASCADE` to drop database with dependencies.<hr />- Metadata persistence allows Hive to reconstruct table schemas and locate data independently of active sessions.","tags":"","authors":"","date":{"days":19307},"category":"playground > topics > data"},"711":{"file_path":"playground/topics/data/buckets-on-apache-hive.md","title":"Buckets on Apache Hive","description":"Learn how Apache Hive buckets solve issues with dynamic partitions by reducing tiny files, enabling efficient sampling, and improving query performance through bucketing and partitioning techniques.","spr_content":"- Partitions divide large data into manageable chunks based on column values, facilitating data pruning and query efficiency but can lead to excessive small files and unpredictable partition count.<hr />- Buckets organize data into a fixed number of files via hash functions on chosen columns, reducing file proliferation and standardizing data distribution.<hr />- Buckets differ fundamentally from partitions: partitions segment data logically; buckets distribute data evenly across a predetermined number of files.<hr />- Benefits of buckets include:<hr />  - Consistent file count, mitigating tiny files issue inherent in dynamic partitions.<hr />  - Efficient sampling by directly targeting specific buckets, avoiding full table scans.<hr />  - Accelerated map-side joins due to predictable data location.<hr />- Creating bucketed tables involves defining clustering columns, number of buckets, and ensuring bucketing enforcement, which aligns data placement during inserts.<hr />- When inserting into bucketed tables with dynamic partitions, set properties like `hive.enforce.bucketing=true` and manage dynamic partition settings.<hr />- During queries, sampling on bucketed tables is more efficient; selecting specific buckets reduces read overhead.<hr />- Buckets streamline data management in scenarios with dynamic partitions; they provide predictability, uniform file count, and query performance improvements.<hr />- Tiny files caused by high partition counts are alleviated by bucketing, which standardizes data files per bucket.<hr />- In summary, while partitions structure data based on logical categories, buckets distribute data evenly, offering performance, manageability, and scalability advantages in Hive.","tags":"","authors":"","date":{"days":19336},"category":"playground > topics > data"},"712":{"file_path":"playground/topics/data/cap-theorem.md","title":"Cap theorem","description":"Learn about the CAP theorem, which explains how distributed databases balance consistency, availability, and partition tolerance, and how different database types prioritize these guarantees.","spr_content":"CAP theorem, or Brewer's theorem, posits a three-way tradeoff in distributed data stores:  <hr />- **Consistency:** Uniform data across all nodes; latest writes are visible everywhere.  <hr />- **Availability:** All requests receive valid responses; no node fails to respond.  <hr />- **Partition tolerance:** System withstands network or power separations between nodes; continues operation despite communication drops.  <hr /><hr />In practice:  <hr />- **CP (Consistency + Partition tolerance):** Sacrifices availability during partitions; isolates inconsistent nodes.  <hr />- **AP (Availability + Partition tolerance):** Sacrifices consistency; different nodes may serve divergent data until re-synchronization.  <hr />- **CA (Consistency + Availability):** Only feasible without partitions; fails when partition occurs, thus not fault-tolerant.  <hr /><hr />The common assertion that only two guarantees can coexist is a simplification; tradeoffs are nuanced, often aligning to subset guarantees within the triad.  <hr />- **Key nuance:** Real systems optimize based on context, network stability, and business needs, rather than strict adherence to the three points.","tags":"","authors":"","date":{"days":19100},"category":"playground > topics > data"},"713":{"file_path":"playground/topics/data/data-vault-modelling.md","title":"Data vault modelling","description":"Learn how Data Vault architecture builds flexible, scalable data lakes using hubs, links, and satellites to manage business keys and historical data with pros and cons explained.","spr_content":"- Data Vault is a warehousing architecture created by Dan Linstedt in the early 1990s at Lockheed Martin.  <hr />- It consists of three core structures: Hub, Link, and Satellite.  <hr />- Hubs represent core business concepts via business keys (e.g., Customer ID, Product Number, VIN) and contain only one row per key, holding only the business key and mandated Data Vault fields.  <hr />- Links define relationships between Hubs, also with one row per relationship, without contextual data.  <hr />- To model historical relationship changes, Effectivity Satellites add an is_deleted flag.  <hr />- Example Entity Tables (Employee, Job, Department, Location) are converted into corresponding Hubs, Links, and Satellites with hash keys for uniqueness.  <hr />- Hubs contain primary keys; Links connect Hubs; Satellites hold descriptive/contextual attributes.  <hr />- Relationships like Employee-Job-Department are modeled via link tables; Satellites store additional attribute data.  <hr />- Data Vault enables flexible, scalable data modeling by decoupling business keys from attributes, supporting multi-to-multi relationships, and maintaining historical data akin to type 2 slowly changing dimensions.  <hr />- Advantages include increased flexibility, maintainability, scalability, ease of managing multiple data sources, and robust historical tracking.  <hr />- Disadvantages involve a significant increase in table count—two to three times more than traditional 3NF models.  <hr />- Data Vault de-emphasizes read performance; complex joins and numerous relationships necessitate additional layers like bridged materialized views.","tags":"","authors":"","date":{"days":19341},"category":"playground > topics > data"},"714":{"file_path":"playground/topics/data/database-locking.md","title":"Database locking","description":"Learn how explicit locking techniques in PostgreSQL help manage concurrency control and prevent data conflicts in high workload databases by using table-level, row-level, and advisory locks effectively.","spr_content":"- Different software types (games, e-commerce, dapps) require varied yet sometimes overlapping techniques, especially for concurrency control.<hr />- High workload databases face issues like conflicting operations, exemplified by simultaneous account balance updates.<hr />- **Concurrency control** aims to prevent such conflicts, often through **locking mechanisms**.<hr />- **Explicit locking** involves manually or programmatically acquiring locks on data to control access.<hr />- Locks can be **shared** (read) or **exclusive** (write), with various modes conflicting based on lock type.<hr />- Locking levels include database, table, page, and row; focus here on **table-level and row-level locks**.<hr />- **Table locks** prevent access to entire tables; behavior depends on lock mode.<hr />- **Row locks** allow higher concurrency, affecting only specific data rows during write operations.<hr />- Common lock modes conflict as per predefined tables (e.g., **ACCESS SHARE** vs. **EXCLUSIVE** modes).<hr />- **Advisory locks** are application-controlled, not enforced by the database; useful in distributed systems.<hr />- Example: Using `SELECT FOR UPDATE` locks rows during transactions to ensure exclusive access.<hr />- In distributed systems, **advisory locks** prevent multiple servers from processing the same task simultaneously.<hr />- Lock conflicts can cause **blocking**, **deadlocks**, or **race conditions**, leading to inconsistent data.<hr />- Proper lock selection balances **concurrency** with **data integrity**.<hr />- Alternatives include **queuing** or **separate services** to manage high concurrency without traditional locks.<hr />- Proper understanding of **lock scope** and **modes** essential for effective **concurrency control**.<hr />- PostgreSQL-specific concepts such as `LOCK` commands, lock modes, and advisory lock functions are central.<hr />- Recognize that **lock conflicts and resolutions** are similar across database systems, despite terminological differences.<hr />- The ultimate goal: maintain **correctness** and **performance** amid high transaction volumes through **appropriate locking strategies**.","tags":"","authors":"","date":{"days":19469},"category":"playground > topics > data"},"715":{"file_path":"playground/topics/data/dbt-the-good-solution-to-accelerate-data-transformation.md","title":"Dbt the good solution to accelerate data transformation","description":"Discover how DBT (data build tool) simplifies data transformation in warehouses with modular SQL, automation, and software engineering practices for faster, reliable analytics and trusted data delivery.","spr_content":"- Transformation is crucial in building data warehouses, enabling cleaning, combining, deduplicating, reorganizing, and filtering data.  <hr />- Transformation supports analytics for reliable insights at the enterprise level.  <hr />- Multiple tools exist for transformation, such as Striim, Pentaho, Hevo Data, with DBT standing out for data build processes.  <hr />- DBT (Data Build Tool) is a development framework combining modular SQL and best software engineering practices for dependable, swift, and engaging data transformation.  <hr />- DBT democratizes data engineering, allowing data analysts to own the transformation pipeline via simple SQL, custom logic, automation, and documentation.  <hr />- Compared to other tools, DBT is open-source, written in Python, facilitating customization and conciseness through Jinja macros and SQL.  <hr />- Example: Using Jinja, repetitive SQL queries are simplified into compact loops, enhancing maintainability.  <hr />- DBT’s flexibility allows project structure customization through configuration files like `dbt_project.yml` to suit organizational needs.  <hr />- It applies modular code, version control, testing, and CI/CD practices to analytics workflows, enabling better management and reliability.  <hr />- Data documentation generation in DBT ensures transparency, lineage, dependency mapping, and trust in data.  <hr />- Limitations include dependence on external tools for extract/load steps, less visual readability due to SQL-based interface, and lack of support for certain database operations like merge loops.  <hr />- Overall, DBT is a promising, evolving, and increasingly popular tool for data transformation.","tags":"","authors":"","date":{"days":19317},"category":"playground > topics > data"},"716":{"file_path":"playground/topics/data/full-text-search-with-postgresql.md","title":"Full text search with postgresql","description":"Learn how to boost PostgreSQL search performance using full-text search with GIN indexes, stop words, and custom configurations for faster and flexible text queries on large datasets.","spr_content":"- Full-text search (FTS): technique for querying entire documents or collections in a database, finds natural language matches.<hr />- Need for FTS: `LIKE` operator causes full table scans (Seq Scan) due to leading wildcards, performance loss in large datasets.<hr />- Indexing in FTS: B-Tree for normal columns; GIN (Generalized Inverted Index) for FTS, akin to table of contents, indexing subdividable data (lexemes, array elements).<hr />- Stop words: common words (e.g., is, the, and) ignored in searches to improve relevance and efficiency.<hr />- Data conversion: sentence to vector via `to_tsvector`; each lexeme assigned positions; table-like structure of lexemes with postions.<hr />- Substrings generation: extracts all n-grams from lexemes, forming a set for comprehensive matching.<hr />- Querying: use `vector @@ to_tsquery()` for fast, index-backed, flexible matching; handles unordered words and stop words.<hr />- Custom configuration: define own stop word lists or stemming rules; create custom dictionaries and configs.<hr />- Performance comparison: `LIKE` plan shows sequential scan, high cost; FTS with GIN index yields bitmap index scan, vastly faster.<hr />- Larger datasets: FTS remains scalable, efficient, unlike `LIKE`; especially critical for millions of records.<hr />- Application context: PostgreSQL >= 11, `tweets` table with `content` and `vector`; over 200K rows.<hr />- References: authoritative sources on GIN, FTS performance, and PostgreSQL text search optimization.","tags":"","authors":"","date":{"days":19185},"category":"playground > topics > data"},"717":{"file_path":"playground/topics/data/google-data-fusion.md","title":"Google data fusion","description":"Learn how to use Google Cloud Data Fusion to build and manage ETL pipelines with a simple drag-and-drop interface, integrating data from cloud storage to BigQuery for fast analytics.","spr_content":"- Google Data Fusion is a fully managed, cloud-native data integration service designed for building and managing ETL/ELT data pipelines efficiently.<hr />- It simplifies data engineering tasks for enterprises by providing a graphical user interface, built on open-source CDAP.<hr />- The GUI features drag-and-drop capabilities, enabling users to create pipelines without extensive coding, but allows custom code extensions.<hr />- Its GCP-native architecture offers scalability, reliability, security, and privacy benefits aligned with Google Cloud Platform.<hr />- Data governance features include data lineage, metadata management, and native security, ensuring compliance and data protection.<hr />- Seamless integration with Google Cloud services like Cloud Storage, BigQuery, and Cloud Spanner centralizes data management and analysis.<hr />- Use cases encompass data consolidation (CRM, ERP, social media, sensors), transformation, enrichment, and centralized storage via data warehouses or lakes.<hr />- Facilitates cloud data migration, including on-premises to cloud and cross-cloud replication (GCP, AWS, Azure), supporting modernization.<hr />- Supports real-time data flows with Apache Spark, enabling instant insights, dashboards, and event-driven actions.<hr />- Additional applications include data governance, self-service analytics, and custom connector development for niche data sources.<hr />- Pricing tiers accommodate varying scales, with differences in features and capacities.<hr />- Setup prerequisites involve a GCP account, enabling Data Fusion API, installing Google Cloud SDK, and configuring credentials.<hr />- Deployment steps include creating a GCS bucket, establishing a Data Fusion instance with specified parameters, and accessing the UI via the provided endpoint.<hr />- Creating a basic ETL pipeline involves: setting up a BigQuery dataset/table; preparing CSV data in GCS; designing a pipeline in Data Fusion (source, transform, sink); deploying and executing the pipeline; verifying output in BigQuery.<hr />- The process emphasizes a visual, step-by-step methodology, with minimal scripting, to streamline data integration workflows.<hr />- Overall, Data Fusion enhances data operational efficiency and facilitates advanced data analytics for enterprise insights.","tags":"","authors":"","date":{"days":19744},"category":"playground > topics > data"},"718":{"file_path":"playground/topics/data/google-dataproc.md","title":"Google dataproc","description":"Learn how to set up and use Google Dataproc for fast, scalable Apache Spark and Hadoop data processing on Google Cloud, including cluster creation, job submission, and pricing details.","spr_content":"- Google Dataproc = cloud service for Apache Spark and Hadoop, fully managed, fast, scalable.<hr />- Integrates seamlessly with Google Cloud services: BigQuery, Cloud Storage, Spanner.<hr />- Facilitates data processing, analysis, machine learning, and custom applications.<hr />- Managed environment emphasizes security, reduces infrastructure worries.<hr />- Use cases span batch (ETL, warehousing, logs, finance, scientific, image) and real-time (streaming, IoT, ML).<hr />- Billing depends on cluster size (vCPUs) and runtime, billed per second with a 1-minute minimum.<hr />- Example: cluster with 24 vCPUs running 2 hours costs ~$0.48 (excluding VM and storage costs).<hr />- Setup prerequisites: GCP account, billing, Cloud SDK, project, APIs.<hr />- Cluster setup involves Cloud Shell + gcloud commands; adjust parameters like region, nodes, types.<hr />- Access via SSH, run jobs with gcloud, submit Spark/Hadoop tasks, delete cluster when done.<hr />- Deploy Spark job through GCP Console: fill form, specify job ID, type, main file, submit, monitor status.<hr />- Overall minimizes operational overhead, accelerates big data workflows, enables easy integrations.","tags":"","authors":"","date":{"days":19744},"category":"playground > topics > data"},"719":{"file_path":"playground/topics/data/hadoop-distributed-file-system-hdfs.md","title":"Hadoop distributed file system hdfs","description":"Learn why Hadoop Distributed File System (HDFS) is essential for big data, enabling block-based storage, fault tolerance through replication, and scalable distributed file management across clusters.","spr_content":"- File systems organize storage, allowing navigation and management of data; without them, data appears as undifferentiated blocks.<hr />- Major functions of file systems include storing/retrieving data, metadata management (name, size, owner, timestamps), permissions, security, and storage allocation.<hr />- Different file systems have varied capacities: FAT32 supports files up to 4GB, NTFS supports larger volumes (16Exabytes), HFS+ supports 8Exabytes, ext4 supports 16TB files and 1Exabyte volumes, XFS supports 8Exabytes.<hr />- HDFS addresses the limitations of local file systems for big data by enabling distributed storage and computation.<hr />- Unlike local file systems, HDFS divides data into fixed-size blocks (default 128MB, older versions 64MB); these blocks are stored across multiple nodes for scalability.<hr />- Traditional local file systems are unaware of data’s distributed nature; HDFS maintains a global view, managing block placement and replication.<hr />- HDFS's design facilitates fault tolerance via replication (default 3 copies), enabling data recovery if nodes fail.<hr />- HDFS’s architecture separates metadata (name node) from data storage (data nodes), with the name node managing file metadata and block locations.<hr />- During read operations, clients contact name node to get block locations, then read from the closest data node, utilizing rack-awareness to optimize speed.<hr />- During write operations, the name node allocates blocks and optimal datanodes, employing replica placement strategies for fault tolerance and efficiency.<hr />- HDFS supports scalability, cost-effectiveness, and handles vast datasets beyond local file system volume limits through block division and distributed storage.<hr />- Block sizes in HDFS are large (e.g., 256MB) to optimize sequential read/write performance, based on disk contiguity, despite underlying local file system block sizes being small (e.g., 4KB).<hr />- Files are stored as multiple blocks, enhancing redundancy and fault tolerance; entire files stored as whole units are vulnerable to data loss if all replicas are lost.<hr />- Key HDFS commands enable directory and file management, permissions, replication, and system checks, integrating with local file system operations.<hr />- Read/write processes are transparent to data locality, with proximity-aware node selection for optimized performance.<hr />- Handling node failures during write involves changing block identifiers and orchestrating replica synchronization later, ensuring data consistency and durability.","tags":"","authors":"","date":{"days":19158},"category":"playground > topics > data"},"720":{"file_path":"playground/topics/data/hive-window-and-analytic-functions.md","title":"Hive window and analytic functions","description":"Learn how to use Hive window and analytical functions to calculate complex metrics like a 10-day moving average on stock data with easy-to-understand SQL examples and syntax.","spr_content":"- SQL and PL/SQL alone are insufficient for complex tasks; window and analytical functions enhance capability.<hr />- Hive supports window and analytical functions vital for advanced data analysis.<hr />- Simple aggregation (e.g., average volume by year) collapses data into grouped results with `GROUP BY`.<hr />- SQL with `GROUP BY` produces one result per group, collapsing rows.<hr />- Analytical functions (`OVER()`) compute metrics per row without collapsing data, preserving granularity.<hr />- `PARTITION BY` segments data similar to `GROUP BY`, creating separate windows or groups.<hr />- Without `GROUP BY`, each row retains its identity, but analytical functions compute over partitions.<hr />- Moving averages require frame-based analysis, making window and frame concepts crucial.<hr />- Example: 10-day moving average partitions data by symbol, orders by date, and frames it with `ROWS BETWEEN 9 PRECEDING AND CURRENT ROW`.<hr />- The `ORDER BY` within `OVER()` is essential for correct temporal sequence.<hr />- Windows are non-overlapping partitions; frames within windows can overlap.<hr />- Frames are dynamically calculated at runtime for each row, enabling precise, context-aware calculations.<hr />- If `ROWS` clause is omitted, defaults to unbounded preceding to current row within each partition.<hr />- Combining window, frames, and analytical functions allows advanced, granular, time-sensitive computations like moving averages.<hr />- Summarized: understanding partitioning, ordering, and framing is key to leveraging window and analytical functions in Hive.","tags":"","authors":"","date":{"days":19338},"category":"playground > topics > data"},"721":{"file_path":"playground/topics/data/how-discord-stores-messages-part-1-from-mongodb-to-cassandra.md","title":"How discord stores messages part 1 from mongodb to cassandra","description":"Learn how Discord migrated from MongoDB to Cassandra for scalable, low-maintenance data storage, handling billions of messages with predictable performance and eventual consistency.","spr_content":"- Discord initially chose MongoDB for rapid iteration, storing all data in a single replica set for ease of migration.  <hr />- MongoDB with `(channel_id, created_at)` index faced scaling issues after 100 million messages; necessitated a move.  <hr />- Read/write patterns: predominantly random reads, balanced ratio 50/50, variable per server type.  <hr />- Voice servers: low message volume (~1000/year), prone to disk cache eviction during random access.  <hr />- Text servers: high message volume (up to 1M/year), often in cache due to high request frequency.  <hr />- Future features (mentionsHistory, pinnedMessages, full-text search): increase randomness in reads.  <hr />- Requirements: scalable, auto-failover, low maintenance, proven, predictable latency (<80ms 95th percentile), not blob storage, open source.  <hr />- Cassandra met all needs: scalable addition of nodes, proven in large-scale environments (Netflix, Apple), supports contiguous storage (min seeks).  <hr />- Cassandra data modeling: KKV (partition key + clustering key).  <hr />- Partition key: `channel_id`; clustering key: `message_id` (or Snowflake timestamp).  <hr />- Schema example: `PRIMARY KEY (channel_id, message_id)` with `CLUSTERING ORDER BY (message_id DESC)`.  <hr />- Managing partition size: bucket messages by time (e.g., 10 days), to keep partitions under 100MB, using `message_id` or timestamp for bucketing.  <hr />- Compound keys: `PRIMARY KEY ((channel_id, bucket), message_id)` for better size control.  <hr />- Cassandra's eventual consistency causes null `author_id` after concurrent edits/deletions, due to AP tradeoff.  <hr />- Null fields generate tombstones; data deletion delayed by tombstone expiration (default 10 days).  <hr />- Solution: store only non-null data, minimize tombstone creation.  <hr />- Long-lived empty channels cause tombstone scans; mitigate by reducing tombstone lifespan to 2 days and regular repair.  <hr />- Scaling strategy: extend Cassandra cluster, currently 12 nodes with RF=3.  <hr />- Near-term upgrades: Cassandra 2→3 to halve storage, increase node capacity (up to 2TB).  <hr />- Long-term plans: evaluate ScyllaDB (C++ Cassandra clone) for lower repair times, explore archiving old channels to Google Cloud Storage.","tags":"","authors":"","date":{"days":19510},"category":"playground > topics > data"},"722":{"file_path":"playground/topics/data/introduction-to-apache-hive.md","title":"Introduction to Apache Hive","description":"Learn how Apache Hive simplifies big data analysis by enabling SQL queries on Hadoop datasets using tables, making MapReduce easier for developers and data analysts.","spr_content":"- Hive is a widely used tool in the Hadoop ecosystem, developed by Facebook and now an Apache top-level project.  <hr />- It enables data analysis using SQL-like queries on Hadoop data stored as files.  <hr />- Hive creates table structures for datasets, allowing SQL queries for data analysis, reducing the complexity compared to MapReduce or Pig.  <hr />- Hive converts SQL queries into MapReduce jobs and submits them to the Hadoop cluster; Pig converts Pig Latin scripts similarly.  <hr />- Both Pig and Hive were developed around the same time by Yahoo and Facebook, respectively, with overlapping capabilities.  <hr />- Companies often use Pig for structured ETL tasks and Hive for ad hoc data analysis; both tools can coexist in a single environment.  <hr />- Hive is a client tool, not requiring installation on all cluster nodes, only where queries are initiated.  <hr />- Hive compares to traditional RDBMS: it processes large datasets via batch MapReduce jobs, lacks pointed updates/deletes, advanced indexing, triggers, and full transaction support.  <hr />- Hive functions as a MapReduce abstraction that simplifies writing jobs through SQL, supporting joins, partitions, buckets, and various file formats.  <hr />- Hive does not enforce schema on write; schema is applied at read, facilitating semi-structured or unstructured data handling.  <hr />- Hive is essential knowledge for Hadoop developers, simplifying big data analysis.  <hr />- Creating a Hive database involves `CREATE DATABASE`, switching with `USE`, and creating external tables with specified schema, delimiters, and data location in HDFS.  <hr />- The syntax resembles traditional SQL, making it familiar to those with RDBMS experience.  <hr />- Querying data in Hive is as straightforward as in MySQL, e.g., `SELECT * FROM stocks_tb LIMIT 100;`.  <hr />- Understanding Hive's architecture and syntax illuminates its role in managing big data via SQL-like abstraction over Hadoop.","tags":"","authors":"","date":{"days":19306},"category":"playground > topics > data"},"723":{"file_path":"playground/topics/data/introduction-to-apache-pig.md","title":"Introduction to Apache Pig","description":"Apache Pig simplifies Hadoop data processing by converting easy-to-write Pig Latin scripts into MapReduce jobs, enabling non-programmers to handle big data without coding in Java or Python.","spr_content":"- MapReduce programming challenges include conceptual visualization, requiring rethinking problems in terms of map and reduce steps, which is unfamiliar to traditional programmers.  <hr />- Visualizing problem structure in MapReduce (e.g., calculating average salaries by department) demands effort, as it differs from standard programming intuition.  <hr />- Knowledge of programming languages like Java, C++, or Python is often a barrier, especially for non-programmers or domain experts.  <hr />- Tool-based solutions like Pig or Hive eliminate the need to learn and write raw MapReduce code, enabling users to perform data processing via high-level instructions.  <hr />- Writing MapReduce tasks such as joins manually is time-consuming and complex; Pig abstracts this complexity with simple commands.  <hr />- Pig allows users to specify data operations in a small set of instructions, which Pig analyzes and translates into multiple automated MapReduce jobs.  <hr />- Pig originated at Yahoo, designed to empower non-programmers in Hadoop, responding to the platform’s initial focus on programmers.  <hr />- Pig Latin is a user-friendly data flow language containing operators like load, filter, group, and aggregate functions, enabling straightforward data transformations.  <hr />- Pig performs internal optimization, moving filters earlier in the execution plan for performance gains without user intervention.  <hr />- Pig adheres to four philosophies:  <hr />  1. \"Pigs eat anything\" — works with unstructured or semi-structured data, flexible with schema.  <hr />  2. \"Pigs fly\" — optimized for big data performance with built-in scheduling and operator reordering.  <hr />  3. \"Pigs are domestic animals\" — highly configurable, supports user-defined functions in Java, enabling custom processing.  <hr />  4. \"Pigs live anywhere\" — designed for parallel processing, not tied solely to Hadoop, aiming for portability.  <hr />- Pig’s abstraction layer significantly simplifies the creation of MapReduce jobs, reducing development time and effort.  <hr />- Overall, Pig replaces custom MapReduce coding with high-level instructions, enabling broader accessibility and faster data processing within Hadoop ecosystems.","tags":"","authors":"","date":{"days":19310},"category":"playground > topics > data"},"724":{"file_path":"playground/topics/data/managed-table-vs-external-table.md","title":"Managed table vs external table","description":"Learn the key differences between Hive managed tables and external tables, including when to use each type and how dropping tables affects their underlying data in HDFS.","spr_content":"- Hive tables are of two types: Managed and External.  <hr />- Managed table controls its data lifecycle; dropping it deletes data.  <hr />- External table does not control data; dropping it retains data.  <hr />- Use Managed table when Hive alone manages data; data is exclusive.  <hr />- Use External table when data is shared across multiple applications like Pig, MapReduce.  <hr />- Avoid data duplication for large datasets; share one copy.  <hr />- Managed table creation defaults; use `EXTERNAL` keyword for external tables.  <hr />- Describing table reveals type: `MANAGED_TABLE` or `EXTERNAL_TABLE`.  <hr />- Location attribute indicates dataset's HDFS path; does not alter table type.  <hr />- Dropping managed table deletes dataset; dropping external table preserves it.  <hr />- External table references existing datasets via location; ideal for shared data.  <hr />- Loading data into external table does not move data; just registers in Hive.  <hr />- External table's data remains after dropping the table, consistent with sharing scenario.  <hr />- Overriding location during creation directs Hive to dataset; maintains separation from Hive warehouse directory.  <hr />- External tables suited for pipelines or applications sharing datasets, e.g., Pig scripts.  <hr />- Summarize: drop behavior differs—managed deletes data, external preserves data.  <hr />- External table is preferable for shared datasets or when dataset longevity exists outside Hive control.","tags":"","authors":"","date":{"days":19312},"category":"playground > topics > data"},"725":{"file_path":"playground/topics/data/mapreduce-components.md","title":"Mapreduce components","description":"Learn how MapReduce processes large stock data to find maximum closing prices using map, shuffle, reduce phases, input splits, and optional combiners for efficient distributed computing and performance.","spr_content":"- MapReduce comprises four components: Map Phase, Shuffle Phase, Reduce Phase, and Optional Combiner.<hr />- The problem involves large stock data: each record includes exchange, symbol, date, open, close, high, low, volume.<hr />- Goal: for each stock symbol, find the maximum closing price across days.<hr />- Sequential approach: linear scan, no parallelism, inefficient for large datasets.<hr />- Distributed processing divides dataset into input splits; each split processed by a mapper.<hr />- Input split ≠ block: input split is logical, respects record boundaries; block is physical data segment.<hr />- Blocks are fixed-size chunks; last block may be smaller; input split can encompass multiple blocks.<hr />- Input split defined by pointers: start/end within blocks, may cross block boundaries.<hr />- Mappers execute in parallel, one per input split; each read records, output key-value pairs (symbol, closing price).<hr />- Number of mappers equals number of input splits; each processes its assigned data region.<hr />- Map output: key (symbol), value (closing price); key chosen to group data for reduction.<hr />- The reduce phase aggregates all values per key (symbol), computes maximum closing price.<hr />- The reducer runs once per unique key (symbol), processes list of closing prices, outputs maximum.<hr />- Key choice for reduce: what needs to be aggregated—here, stock symbol.<hr />- Number of reducers is user-configurable; multiple reducers avoid bottleneck.<hr />- Shuffle phase: transfers map output to reducers, maintains key order.<hr />- Partitioning: keys assigned to partitions via a partitioner; all keys for a symbol sent to one reducer.<hr />- Partitioning ensures all data for a symbol reach the same reducer; preserves sorting.<hr />- During shuffle, map outputs are grouped by key, sorted by key within each partition.<hr />- Data transfer occurs from multiple mappers to each reducer, merging partitions while maintaining order.<hr />- Final reducer execution: processes grouped, sorted key-value pairs, outputs stock symbol and maximum close.<hr />- Optional combiner: mini-reducer at map phase, reduces data volume by pre-aggregating (e.g., maximum close per symbol per mapper).<hr />- Combiners decrease network load, improve efficiency; they are command-line optional.<hr />- In the stock example, combiner reduces to one key-value per symbol per mapper, sending only maximum closing price.<hr />- Overall: Map phase extracts (symbol, close), Combiner pre-aggregates, Shuffle transfers, Reduce computes global maximums.<hr />- MapReduce enables scalable, parallel processing, overcoming sequential inefficiencies.","tags":"","authors":"","date":{"days":19289},"category":"playground > topics > data"},"726":{"file_path":"playground/topics/data/order-by-vs-sort-by-vs-distribute-by-vs-cluster-by.md","title":"Order by vs sort by vs distribute by vs cluster by","description":"Learn how to optimize Hive queries by using ORDER BY, SORT BY, DISTRIBUTE BY, and CLUSTER BY to efficiently order large datasets with multiple reducers and improve performance.","spr_content":"Ordering records in datasets involves key concepts and trade-offs:<hr /><hr />- **ORDER BY** enforces *global ordering*—all data must aggregate in one reducer, causing performance bottlenecks with large datasets due to memory and processing constraints.<hr /><hr />- When executing `ORDER BY` in Hive, the number of reduce tasks defaults to 1, ensuring total order but at scalability costs; more reducers are ignored because total order across partitions needs to be preserved.<hr /><hr />- The property `mapreduce.job.reduces` can set multiple reducers, but `ORDER BY` still forces a single reducer to maintain total order, negating multi-reducer configurations.<hr /><hr />- **SORT BY** allows multiple reducers; each reducer sorts its partition independently, producing *locally ordered* segments, which is faster but results in *partial order* across the entire dataset—records for the same key (e.g., symbol) can appear in different files.<hr /><hr />- **Distribute BY** specifies how records are partitioned among reducers based on a key column, ensuring all records with the same key (e.g., symbol) go to a single reducer, enabling correct grouping.<hr /><hr />- Combining `DISTRIBUTE BY` with `SORT BY` achieves *partitioned sorted output*: each reducer receives all records with a key, sorts them locally, and output files contain ordered, non-overlapping segments, preserving correct order and avoiding key duplication across files.<hr /><hr />- Replacing `DISTRIBUTE BY` + `SORT BY` with `CLUSTER BY` is valid when the same columns are used in both clauses; `CLUSTER BY` simplifies syntax, performing both distribution and sorting on specified columns, resulting in a similarly partitioned and sorted dataset.<hr /><hr />- **Summary**:<hr />  - `ORDER BY` enforces *total order*, uses 1 reducer; performance bottleneck for large data.<hr />  - `SORT BY` sorts within partitions, multiple reducers, partial order.<hr />  - `DISTRIBUTE BY` controls key-based partitioning; combined with `SORT BY`, produces globally ordered, partitioned output.<hr />  - `CLUSTER BY` is a shorthand for `DISTRIBUTE BY` + `SORT BY` on the same columns, achieving efficient, ordered, and partitioned data output.<hr /><hr />This understanding highlights the importance of choosing the right clause combinations for scalable, correct, and efficient ordering in distributed datasets.","tags":"","authors":"","date":{"days":19319},"category":"playground > topics > data"},"727":{"file_path":"playground/topics/data/overview-of-bi-tools.md","title":"Overview of bi tools","description":"Compare top data visualization tools like Tableau, Power BI, and Google Data Studio to find the best business intelligence software for interactive dashboards, ease of use, pricing, and integration.","spr_content":"- Data visualization is a crucial skill in data analytics, enabling interpretation, interaction, and presentation of data.  <hr />- Business Intelligence (BI) software enhances data insights through visualization tools.  <hr />- Key visualization tools include Power BI, SAP, Oracle BI, Tableau, and Google Data Studio.  <hr />- The author has experience with all these tools and will compare their advantages and disadvantages.  <hr />- Tableau connects to nearly any data source in various formats, facilitating easy, drag-and-drop interactive dashboards.  <hr />- Tableau is regarded as user-friendly, powerful, capable of handling large data volumes, and integrable with third-party applications.  <hr />- The main drawback of Tableau is its high cost, approximately ten times that of Power BI.  <hr />- Power BI offers a user-friendly interface, strong visualization features, and is cost-effective for Microsoft-centric environments with Excel expertise.  <hr />- Power BI demands improvements in visual configuration and handling of complex formulas.  <hr />- Google Data Studio is a free, web-based BI tool tightly integrated with Google services like BigQuery, Analytics, and Sheets.  <hr />- Data Studio is intuitive and easily explored but lacks real-time dashboard updates and advanced data modeling.  <hr />- Handling large, dynamic datasets with multiple live connections can be challenging in Data Studio.","tags":"","authors":"","date":{"days":19317},"category":"playground > topics > data"},"728":{"file_path":"playground/topics/data/partitions-on-apache-hive.md","title":"Partitions on Apache Hive","description":"Learn how Hive partitions and dynamic partitions optimize query performance by targeting specific data subsets, reducing scan times, and efficiently managing large datasets for faster Hive queries.","spr_content":"- **Partitions** divide large datasets into discrete, manageable segments based on column values, enabling targeted querying and data organization.<hr />- Benefits of partitions include reduced query execution time, decreased resource usage, and faster data retrieval by limiting scan scope to relevant partitions.<hr />- Creating partitioned tables in Hive involves adding a `PARTITIONED BY` clause with specified column(s); the partition column is separate from data columns.<hr />- Partition columns are not the same as table columns; they structurally organize data directories in HDFS, with each partition stored separately.<hr />- Data loading into partitioned tables requires inserting data into specific partitions, either by defining partition values or by pointing to existing HDFS locations.<hr />- Incrementally, you can add partitions to an existing table manually or by specifying external data locations.<hr />- **Physical structure**: each partition appears as a directory in HDFS containing data files corresponding to the partition's criteria.<hr />- Using `SHOW PARTITIONS` lists all existing partitions; dropping a partition deletes its directory and dataset subset.<hr />- Hive supports **dynamic partitions**, where partition column values are determined at runtime, ideal for large numbers of partitions.<hr />- To enable dynamic partitions, set `hive.exec.dynamic.partition=true;` and manage modes (`strict` vs. `non-strict`) for safety.<hr />- Dynamic inserts assign data to partitions based on column values at execution, with caution needed due to potential stability and scalability issues.<hr />- Creating partitioned tables with multiple partition columns; inserting data dynamically populates directories for each combination.<hr />- Hive limits on number of dynamic partitions can be configured via `hive.exec.max.dynamic.partitions` and per-node limits to accommodate large datasets.<hr />- When generating many partitions, filters in WHERE clauses (e.g., specific years, symbols) prevent overloading the cluster.<hr />- Physical directory structures reflect partition hierarchies, organizing data for efficient access—e.g., by exchange, year, symbol.<hr />- Queries targeting specific partitions are faster because they scan fewer files; avoiding full-table scans reduces execution time dramatically.<hr />- Hive's `mapred.mode=strict` restricts queries without partition filters; adjusting to `non-strict` allows broader queries but at cost.<hr />- Proper partition design and usage are crucial for scalable, performant Hive data architectures, especially with large, diverse datasets.","tags":"","authors":"","date":{"days":19328},"category":"playground > topics > data"},"729":{"file_path":"playground/topics/data/redis-leaderboard.md","title":"Redis leaderboard","description":"Learn how to build a fast user leaderboard system using Redis sorted sets and hashes to track scores and store user profiles like usernames and avatars.","spr_content":"Redis-based leaderboard system<hr />  - In-memory data structures accelerate performance<hr />  - Combining sorted sets and hashes creates efficient user rankings and profiles<hr />Sorted Sets<hr />  - Maintain ordered collection by score<hr />  - `ZADD` adds or updates user scores<hr />  - `ZREVRANGE` retrieves leaderboards descending by score<hr />  - Conditional update with `XX GT` ensures only higher scores overwrite<hr />Hashes<hr />  - Store user profiles: username, avatar<hr />  - `HSET` assigns profile data<hr />  - `HGETALL` retrieves full profile<hr />Workflow<hr />  - User score update triggers:<hr />    - Hash update: store user profile info<hr />    - Sorted set update: refresh ranking<hr />  - Retrieval:<hr />    - Leaderboard via `ZREVRANGE` with scores<hr />    - User info via `HGETALL` per user ID<hr />Integration<hr />  - When new score arrives:<hr />    - `ZADD leaderboard XX GT new_score userID`<hr />    - Update profile with `HSET user:userID ...`<hr />  - Display:<hr />    - Get leaderboard: `ZREVRANGE`<hr />    - Fetch user profiles iteratively with `HGETALL`<hr />Advantages<hr />  - Fast in-memory operation<hr />  - Efficient data structures for ranking and profile info<hr />  - Simple commands facilitate real-time updates and retrievals","tags":"","authors":"","date":{"days":19577},"category":"playground > topics > data"},"730":{"file_path":"playground/topics/data/statistics-in-data-analysis.md","title":"Statistics in data analysis","description":"Learn how key statistical distributions like uniform, normal, and Pareto help analyze data accurately and make better business decisions with meaningful insights.","spr_content":"- Statistics facilitates correct data interpretation, verifying significance beyond chance.  <hr />- Converts meaningless numbers into meaningful insights through analysis.  <hr />- Distribution illustrates possible values of a variable and their frequencies.  <hr />- Uniform distribution assigns equal probability to all outcomes; e.g., each customer has 1% chance to win a prize.  <hr />- Normal distribution clusters most data near the center, tapering off symmetrically; e.g., human heights or weights.  <hr />- Misinterpretation risks exist with normal distribution, especially in skewed data like salaries, where outliers distort the mean.  <hr />- Pareto distribution models small events occurring frequently and large events infrequently; e.g., high-value customers or rare risks.  <hr />- Marketing uses Pareto for customer segmentation and prioritizing important clients.  <hr />- Risk analysts apply Pareto to stress testing low-probability, high-impact events.  <hr />- Mastery of distributions enhances data understanding, leading to better business decisions.","tags":"","authors":"","date":{"days":19289},"category":"playground > topics > data"},"731":{"file_path":"playground/topics/data/utilizing-cached-table-for-binance-kline-api-data-processing.md","title":"Utilizing cached table for binance kline api data processing","description":"Learn how to speed up Binance Kline API data retrieval by using a cached table to efficiently get highest and lowest cryptocurrency prices and timestamps within large date ranges.","spr_content":"- Binance Kline API offers cryptocurrency price data with timestamps but has record and request limits.<hr />- Record limit per request: 1000; requests per minute: 2400.<hr />- Processing large date ranges (e.g., 2 years) requires thousands of requests, increasing time significantly.<hr />- Multiple symbols further multiply request and wait times, risking over 10 seconds total.<hr />- Solution: cache highest/lowest prices with corresponding timestamps in a dedicated table.<hr />- \"market_data_symbols\" table structure:<hr />  - symbol: crypto identifier.<hr />  - highest_price: max price.<hr />  - highest_timestamp: time of max price.<hr />  - lowest_price: min price.<hr />  - lowest_timestamp: time of min price.<hr />  - date: cache date.<hr />- Implementation involves:<hr />  - Fetch all symbols from Binance.<hr />  - For each symbol, process 1-minute klines.<hr />  - Store peak and trough earliest timestamps in cache.<hr />  - Update cache periodically via cron.<hr />- This approach drastically reduces retrieval time for multi-symbol, long-range queries.<hr />- Results:<hr />  - 200+ symbols, 2-year range, under 10 seconds.<hr />  - No additional API calls needed post-cache.<hr />- Limitations:<hr />  - Initial cache building can be time-consuming.<hr />  - Multithreading and proxies can mitigate quota limits.<hr />- Overall, cached table effectively overcomes API request/record constraints for high-speed data retrieval.","tags":"","authors":"","date":{"days":19515},"category":"playground > topics > data"},"732":{"file_path":"playground/topics/design/jtbd-job-interview-structure.md","title":"Jtbd job interview structure","description":"Discover a step-by-step interview guide to uncover customer jobs-to-be-done, including how to explore tasks, needs, feelings, and circumstances for better product and service insights.","spr_content":"- Interview structure designed to uncover customer jobs-to-be-done (JTBD).  <hr />- Phase 1: Gather background; build rapport.  <hr />- Questions about participant's identity, recent experience, and emotional state during task.  <hr />- Phase 2: Clarify main and related jobs; understand goals, tasks, problems, solutions, and ideal services.  <hr />- Explore what else the customer aims to accomplish.  <hr />- Phase 3: Examine the process stages; initiation, steps before and after, decision points, emotional states, success indicators, and closure.  <hr />- Focus on step-by-step actions and feelings to map execution flow.  <hr />- Phase 4: Identify needs; uncover frustrations, workarounds, avoidance reasons, ease points, and emotional responses at completion.  <hr />- Highlight pain points, obstacles, and annoyances to reveal desired outcomes.  <hr />- Phase 5: Investigate circumstances; conditions influencing behavior, situational variations, environmental impacts, decision drivers, and contextual factors.  <hr />- Recognize situational variability and salient environmental influences on job performance.  <hr />- Related to personas and methods for overcoming persona limitations.  <hr />- Based on Kalbach & Schrage's JTBD playbook—strategic alignment around actual customer needs.","tags":"","authors":"","date":"","category":"playground > topics > design"},"733":{"file_path":"playground/topics/design/methods-to-overcome-the-limitations-of-personas.md","title":"Methods to overcome the limitations of personas","description":"Explore the limits of traditional personas and discover alternatives like characters, thinking styles, and Jobs to be Done that provide deeper user insights and richer context for product design.","spr_content":"- Personas often fail to foster deep empathy within teams.  <hr />- Personas lack nuanced, rich contextual details.  <hr />- Personas can inadvertently encourage assumptions and stereotypes.  <hr />- Moving from personas to characters shifts focus to story worlds, emphasizing anxieties, motivations, and personal histories influencing product interaction.  <hr />- \"Characters\" suggest no vocabulary change but a conceptual shift towards narrative and context.  <hr />- Indi Young's \"thinking styles\" highlight cognitive patterns, emotional responses, and principles, derived from qualitative research, emphasizing rich context over static personas.  <hr />- Jobs to be Done (JTBD) framework reframes focus from individual users to their underlying needs or \"jobs\" that the product must fulfill.  <hr />- JTBD emphasizes processes and tensions in users' lives, rather than specific personas, focusing on stable, solution-agnostic goals or tasks.  <hr />- Both alternative approaches aim to address persona shortcomings by enhancing contextual understanding and reducing assumptions.","tags":"","authors":"","date":"","category":"playground > topics > design"},"734":{"file_path":"playground/topics/design/omit-needless-demographic-information-when-creating-personas.md","title":"Omit needless demographic information when creating personas","description":"Learn why demographic information in user personas often hinders empathy and how focusing on user needs can improve digital product design without unnecessary details.","spr_content":"Demographic data often accompanies user personas but is usually irrelevant to understanding user needs or behavior.  <hr />Demographics rarely influence thought processes, desires, or motivations in digital product interaction.  <hr />Including photos, names, or age details can trigger subconscious biases and assumptions, leading to \"anti-empathy.\"  <hr />Such demographic details can cause teams to make incorrect inferences, hindering genuine understanding.  <hr />In some cases, demographic context is necessary but generally adds unnecessary clutter that distracts from authentic empathy.  <hr />Effective personas focus on rich context—behaviors, goals, frustrations—over superficial demographic info.  <hr />Relying on demographic details may create false space for assumptions rather than authentic understanding.  <hr />Therefore, demographic info should be used sparingly, only when directly relevant to design needs.","tags":"","authors":"","date":"","category":"playground > topics > design"},"735":{"file_path":"playground/topics/design/people-fill-information-gaps-with-assumptions.md","title":"People fill information gaps with assumptions","description":"Learn how the mind fills gaps in information with assumptions and stories, leading to quick but often inaccurate judgments due to the 'what you see is all there is' bias.","spr_content":"- Nature opposes vacuum; the mind opposes informational gaps.<hr />- Incomplete information triggers assumptions.<hr />- Humans and minds fill gaps with myths, stories, and false beliefs.<hr />- Decision-making often relies on surface-level data (\"what you see is all there is\").<hr />- Kahnemann's bias: prefer apparent information, neglect unseen factors.<hr />- Cognitive shortcuts (System 1) prioritize quick judgments over thorough analysis.<hr />- Storytelling compensates for missing data, creating coherence.<hr />- Such narratives influence perceptions and real-world outcomes.<hr />- Over-reliance on superficial info can distort understanding and logic.<hr />- Decontextualized ideas can generate novel insights.<hr />- Recognizing assumptions enables more accurate judgments.<hr />- Limiting rational models ignore narrative, context, and bias.<hr />- Thinking like a rocket scientist involves filling gaps intentionally and systematically.","tags":"","authors":"","date":"","category":"playground > topics > design"},"736":{"file_path":"playground/topics/design/personas-alone-can-t-help-teams-achieve-empathy.md","title":"Personas alone can t help teams achieve empathy","description":"Discover why personas alone may not build true user empathy in design teams and how relying on them can create a false sense of user understanding in product development.","spr_content":"- Personas are often used to promote empathy in development teams.  <hr />- True empathy involves extensive effort and training, not just perspective-taking.  <hr />- Achieving genuine empathy means imagining the world through the user’s eyes, not merely considering user attributes.  <hr />- Personas can become ritualistic, created without meaningful intent or understanding.  <hr />- There's skepticism about whether personas actually foster empathy.  <hr />- An academic study showed students used personas to avoid perspective-taking, focusing on superficial attributes.  <hr />- Students defaulted to their own needs when personas resembled their in-group, indicating egocentric bias.  <hr />- Affective (emotional) empathy is particularly difficult to achieve through personas.  <hr />- Creating personas risks giving a false sense of empathy—used as a checkbox rather than a genuine connection.  <hr />- The use of personas can serve as performative assurance, not actual user understanding.","tags":"","authors":"","date":"","category":"playground > topics > design"},"737":{"file_path":"playground/topics/design/personas-communicate-research-or-they-communicate-assumptions.md","title":"Personas communicate research or they communicate assumptions","description":"Personas should be based on user research to provide accurate insights, while proto-personas rely on assumptions that require careful validation to avoid misleading design decisions.","spr_content":"Personas serve as narratives that convey insights from user research, establishing shared understanding of users' tasks, goals, and motivations.  <hr />Any information in personas not directly derived from research should be regarded as an assumption, warranting validation through further research.  <hr />Proto-personas are preliminary proxies based on assumptions, which risk losing fidelity or being overlooked when design progresses.  <hr />Personas, as narrativized representations, can influence real-world outcomes, necessitating careful handling to avoid unintended effects.  <hr />They often lack rich context, leading users or teams to fill gaps with assumptions, which may distort understanding.  <hr />Personas are tools to document shared understanding but can inadvertently embed assumptions and oversimplifications.","tags":"","authors":"","date":"","category":"playground > topics > design"},"738":{"file_path":"playground/topics/design/personas-document-shared-understanding-about-users.md","title":"Personas document shared understanding about users","description":"Personas help design teams understand user goals and priorities, prevent feature creep, and create shared empathy by focusing on real users’ needs throughout the product development process.","spr_content":"- Personas share a team's understanding of user perspectives, values, and priorities.  <hr />- They serve as documentation of current user insights.  <hr />- Affective (emotional) empathy is difficult; cognitive (functional) empathy is more attainable.  <hr />- Personas function as effective shorthand for understanding user needs and goals.  <hr />- They remind teams that real humans with differing goals are on the other side of the experience.  <hr />- This awareness can help manage project scope and avoid unnecessary features.  <hr />- Alan Cooper advocates personas as tools to prevent feature creep and focus on user goals.  <hr />- Personas help limit design changes and foster shared vocabulary about users.  <hr />- They act as focalizing tools to maintain team alignment and understanding.  <hr />- While personas aid in cognition, they are less effective for fostering true emotional empathy.","tags":"","authors":"","date":"","category":"playground > topics > design"},"739":{"file_path":"playground/topics/design/personas-lack-rich-context.md","title":"Personas lack rich context","description":"Learn why personas often lack deep context and how missing background can lead teams to make incorrect assumptions, causing misalignment in design and product development.","spr_content":"- Personas are common design artifacts capturing attributes, tasks, and descriptors.  <hr />- They often lack rich contextual background explaining the origin of needs.  <hr />- Without context, team members may unconsciously fill gaps with assumptions.  <hr />- Assumptions lead to potential misalignment within teams.  <hr />- Rich narratives reveal \"why\" behind needs, reducing guesswork.  <hr />- Narratives generate real-world effects by grounding understanding.  <hr />- Filling gaps with assumptions distorts accurate empathy and decision-making.  <hr />- Alan Klement advocates replacing superficial personas with detailed characters that include context.  <hr />- Proper understanding of underlying problems prevents misguided solutions.","tags":"","authors":"","date":"","category":"playground > topics > design"},"740":{"file_path":"playground/topics/design/personas-make-abstract-research-concrete-for-design-teams.md","title":"Personas make abstract research concrete for design teams","description":"Personas help design teams focus on real user needs by creating detailed, memorable models of single users, improving product decisions without relying on personal assumptions.","spr_content":"Personas translate research into concrete user models for teams. They contrast with market segments by focusing on an individual user's specific details, fostering empathy and user-centered decisions. Effective personas are memorable yet concise, highlighting critical needs without extraneous data. Including a name and photo aids recall but must serve a purpose; avoid needless demographics that do not influence design. Personas deepen team understanding of real user needs, guiding better product decisions.","tags":"","authors":"","date":"","category":"playground > topics > design"},"741":{"file_path":"playground/topics/design/personas-may-create-space-for-assumptions.md","title":"Personas may create space for assumptions","description":"Learn why personas can mislead design teams by including unnecessary demographic details and how focusing on real user research improves understanding and creates better user experiences.","spr_content":"- Personas often include extraneous demographic details that can cause distraction and bias.  <hr />- Descriptions, photos, and soft attributes may trigger subconscious reactions, leading to \"anti-empathy.\"  <hr />- Divergent interpretations of demographic descriptors threaten shared understanding within teams.  <hr />- Demographic data is valuable only in limited, specific contexts; generally, it risks reinforcing stereotypes.  <hr />- Replacing names with neutral descriptors reduces cultural, racial, or class biases.  <hr />- Demographics can be tools to challenge assumptions but also risk oversimplification.  <hr />- Personas are inherently reductive, boiling research into digestible but potentially oversimplified archetypes.  <hr />- Overreliance on personas can lead to neglect of actual user engagement; they become static stand-ins.  <hr />- Teams tend to create overly simplistic personas that are ignored, defeating their purpose.  <hr />- Personas focus on attributes rather than actual purchase stories or lived experiences, leaving users’ complexity unaddressed.  <hr />- Different team members may craft conflicting narratives about the same persona’s needs and motives.  <hr />- Whose experiences are represented, and whose are omitted, must be carefully considered to avoid bias.  <hr />- Personas may discourage ongoing user research, which is essential for capturing true complexity.  <hr />- Real user interaction and continuous exposure are superior to static persona models for understanding user needs.","tags":"","authors":"","date":"","category":"playground > topics > design"},"742":{"file_path":"playground/topics/design/personas-start-with-qualitative-research.md","title":"Personas start with qualitative research","description":"Discover how effective user personas emerge from qualitative research and sensemaking to capture rich user experiences, helping teams design better products by focusing on real user needs and behaviors.","spr_content":"- Personas are discovered through research, not created; they document insights.<hr />- They articulate patterns of thought and feeling—attributes qualitative and non-quantifiable.<hr />- Effective personas emerge from sensemaking, not measurement; abductive reasoning guides their development.<hr />- Personas incorporate “thick data”: rich, contextual understanding of experience, beyond surface details.<hr />- They explain how users perceive their relationship to the product and problem space.<hr />- Small samples mean qualitative personas may lack full representativeness—validation with quantitative data can help.<hr />- Quantitative personas add scientific rigor but demand more effort and yield marginal gains.<hr />- Proto-personas are provisional, based on current understanding; treat them as assumptions needing testing.<hr />- Use proto-personas cautiously for decision-making; better with rigorous research support.<hr />- When research isn’t feasible, proto-personas are better than none and serve as reminders to focus on user needs.<hr />- In Lean UX, continuous testing and iteration can compensate for initial lack of deep discovery.<hr />- Primary personas are the archetypes whose needs must be prioritized, as emphasized by Alan Cooper.<hr />- Multiple personas are common; at least one should be designated as most important.<hr />- Anti-personas define whom the team explicitly will not design for—clarifying scope.<hr />- Personas are living documents, evolving as new user insights emerge.<hr />- They facilitate shared understanding—making abstract research tangible for teams.<hr />- Personas communicate either research-based insights or assumptions, depending on their foundation.<hr />- Building personas aligns with the iterative, exploratory nature of sensemaking, embracing ambiguity and context.","tags":"","authors":"","date":"","category":"playground > topics > design"},"743":{"file_path":"playground/topics/design/use-jtbd-stories-to-foreground-the-context-in-which-a-solution-is-required.md","title":"Use jtbd stories to foreground the context in which a solution is required","description":"Learn how job stories focus on user context and motivations to improve product design, offering a clear alternative to traditional user stories by highlighting real user needs and situations.","spr_content":"- \"Job story\" emphasizes context over persona, unlike traditional user stories.<hr />- User story format: personas + actions + goals; job story format: contextual conditions + motivations + desired outcome.<hr />- Example user story: **As a [persona], I want to [action] so I can [benefit].**<hr />- Example job story: **When [context], I want to [goal], so I can [outcome].**<hr />- Additional qualifiers in job stories increase specificity and empathy.<hr />- Qualifiers may include emotional states, pressures, or other conditions.<hr />- Job stories do not specify solutions; they focus on the circumstances prompting the need.<hr />- They capture 'when' and 'why' more than 'who' and 'what.'<hr />- Related to focusing on goals and motivations rather than personas alone.<hr />- Useful for aligning products with actual customer contexts and needs.<hr />- Rooted in methods like Jobs To Be Done (JTBD) for understanding customer tasks.<hr />- Citations: Kalbach & Schrage (2020); Klement (2018).","tags":"","authors":"","date":"","category":"playground > topics > design"},"744":{"file_path":"playground/topics/devops/blue-green-deployment.md","title":"Blue green deployment","description":"Learn how to implement blue-green deployment in Kubernetes using Argo Rollouts to reduce downtime, improve reliability, and smoothly switch between production environments.","spr_content":"Blue-green deployment employs two identical environments: blue (current production) and green (new release).  <hr />Deploy to green, test, verify readiness.  <hr />Switch traffic from blue to green, making green the new production.  <hr />Reduces downtime, enhances reliability, provides rollback backup.  <hr />In Kubernetes, prepare by establishing cluster, ingress controller, cert-manager, and resource manifests.  <hr />Define rollout with a `blueGreen` strategy: disable auto-promotion, specify active and optional preview services.  <hr />Apply deployment, ingress, and service manifests to cluster.  <hr />Current app accessed via `myapp.bluegreen.xyz`.  <hr />Update image in rollout file; trigger rollout to create a new version on preview.  <hr />Access preview on `myapp-preview.bluegreen.xyz`.  <hr />Upon verification, promote rollout via `kubectl argo rollouts promote`.  <hr />Application now active on `myapp.bluegreen.xyz`.  <hr />Blue-green deployment minimizes risk during updates, allows instant rollback, ensures high availability, facilitates seamless version transitions.  <hr />Overall, it enhances deployment confidence, system reliability, and user experience in Kubernetes environments.","tags":"","authors":"","date":{"days":19039},"category":"playground > topics > devops"},"745":{"file_path":"playground/topics/devops/deploy-branch-with-vercel-cli.md","title":"Deploy branch with vercel cli","description":"Learn how to deploy specific apps in a monorepo to Vercel using GitHub Actions and Vercel CLI, optimizing builds by detecting changes and managing branch-based environments effectively.","spr_content":"- Monorepo with multiple apps faces deployment challenges when integrated with Vercel via GitHub, notably deploying only a specific app per branch.<hr />- All Vercel applications build automatically on each push, requiring manual cancellation for unwanted apps.<hr />- Combining GitHub Actions and Vercel CLI enables selective deployment, circumventing Vercel's branch deployment limitations.<hr />- Proper Vercel project configuration ensures correct environment variables and settings per app and branch.<hr />- Vercel CLI lacks native support to deploy exclusively to a certain branch/environment via `vercel deploy`.<hr />- To target specific branches, build must be conditioned on change detection and environment setup.<hr />- Using `turbo build --dry-run=json` generates JSON with impacted workspaces, aiding in identifying apps to build.<hr />- Analyzing the JSON filters out unaffected applications, optimizing build process.<hr />- Retrieve Vercel project config (via `vercel pull`) and environment for targeted branch and environment variables, then locally pre-build.<hr />- Push prebuilt applications to Vercel through CLI, emulating branch-specific deployment.<hr />- Setting up Vercel project configs for branches involves matching environment, output dir, root dir, build command, and environment variables.<hr />- GitHub Secrets (e.g., `VERCEL_TOKEN`, environment IDs) are essential for automation.<hr />- Workflow includes stages: determining changed packages, extracting tag info, conditional logic for environment and branch, building application, and deploying with Vercel CLI.<hr />- Regular expressions parse release tags to infer app name, version, branch, and revision.<hr />- Dynamic conditional jobs (`Deploy-app`, `Deploy-all-apps`) deploy either specific apps or all, based on change detection and tag info.<hr />- Custom reusable action encapsulates Vercel CLI setup, pulling env, building, and deploying prebuilt.<hr />- The approach supports deploying to environments (production, preview) by adjusting `vercel build` and `vercel deploy` commands.<hr />- Limitations are deployment inaccuracy to specific domains, need for multiple steps for multiple apps, and current Vercel CLI restrictions.<hr />- Overall, targeted branch deployment is achievable by prebuilding based on change detection, environment configuration, and CLI usage within CI workflows.","tags":"","authors":"","date":{"days":19524},"category":"playground > topics > devops"},"746":{"file_path":"playground/topics/devops/feature-flags.md","title":"Feature flags","description":"Feature flags let software teams enable or disable features during runtime, supporting beta testing, A/B experiments, and smoother releases without multiple code branches or redeployments.","spr_content":"Feature flags enable runtime control of software features without redeployment. They facilitate full feature lifecycle management outside the traditional \"code-deploy-test\" cycle. Using flags eliminates the need for multiple code branches, supporting trunk-based development and reducing merge conflicts and broken builds. Flags allow features to be gradually released, tested, and enabled or disabled dynamically. They support cross-team use cases: provisioning entitlements, managing beta programs, and running A/B tests. Core benefits include release management (beta testing), operation management (incident mitigation), experimental learning (A/B testing), and entitlement provisioning (early access). They promote organizational agility and alignment beyond development alone.","tags":"","authors":"","date":{"days":19260},"category":"playground > topics > devops"},"747":{"file_path":"playground/topics/devops/kubeseal-sops.md","title":"Kubeseal sops","description":"Learn how to securely manage Kubernetes secrets using Kubeseal and Sops to encrypt and store secrets safely in public repos while ensuring only your cluster can decrypt them.","spr_content":"- `Kubeseal` encrypts secrets into SealedSecrets, safe for public storage, decryptable only by the cluster controller.  <hr />- SealedSecret consists of two parts: a cluster controller (`sealed-secrets-controller`) that generates keys and decrypts, and a client utility (`kubeseal`) that encrypts secrets asymmetrically.  <hr />- `Sops` encrypts configuration files selectively, encrypting only values based on format (JSON, YAML, INI) using KMS or PGP.  <hr />- Workflow involves source code encrypted with `sops`, decrypted and sealed by a GitHub Action, stored in infrastructure repo, and finally decrypted and applied by the cluster's controller.  <hr />- Core benefits include simplified secret management for developers and strong security ensuring only authorized keys can decrypt secrets.  <hr />- References include `bitnami-labs/sealed-secrets` and `mozilla/sops`.","tags":"","authors":"","date":{"days":19263},"category":"playground > topics > devops"},"748":{"file_path":"playground/topics/devops/progressive-delivery.md","title":"Progressive delivery","description":"Progressive delivery lets teams release new software features gradually using feature flags and mature CI/CD pipelines to reduce risks and improve user experience.","spr_content":"- Progressive delivery enables gradual release of features, assessing user response and mitigating negative impacts.<hr />- Features are first tested internally, then incrementally exposed to real users in controlled settings.<hr />- It increases release resilience: errors at 1% traffic affect 1% revenue/customer satisfaction minimally.<hr />- Effective progressive delivery relies on existing CI/CD pipelines where `master` is always releasable.<hr />- Necessitates feature flags for every new feature to control exposure and enable quick disablement.<hr />- Mature CI/CD involves automated build, testing, frequent commits, and simple deployment.<hr />- Making `master` always releasable requires up-to-date changelog, documentation, QA, and passing regression tests.<hr />- Feature flags facilitate continuous release alongside big feature integration, enabling low-risk testing in production.<hr />- They also provide a quick rollback mechanism if features break.<hr />- The practice combines technical rigor (CI/CD, feature flags) with disciplined release management for safer, incremental deployment.","tags":"","authors":"","date":{"days":19260},"category":"playground > topics > devops"},"749":{"file_path":"playground/topics/devops/testing-aws-services-locally-with-localstack.md","title":"Testing aws services locally with localstack","description":"LocalStack lets developers locally test and develop AWS services like S3, Lambda, and DynamoDB without AWS costs, speeding up cloud application development with a simple, cost-free environment.","spr_content":"- AWS offers extensive, scalable, cost-effective cloud services for application deployment and management.<hr />- Costly for small projects or beginners; local solutions preferred for low-cost testing.<hr />- LocalStack is an open-source tool that emulates AWS environment locally on a developer's machine.<hr />- LocalStack enables local development and testing of AWS services without cloud charges or complexity.<hr />- Supports numerous AWS services: S3, Kinesis, DynamoDB, EC2, Lambda, CloudFront, etc.<hr />- Provides a simple API for interacting with emulated services, facilitating multi-language support.<hr />- Requires installation of dependencies like Python and LocalStack, with setup instructions promptly available.<hr />- AWS S3 manages data storage in buckets, containing objects accessed via API, SDK, or console.<hr />- Using LocalStack, S3 can be tested by creating buckets, uploading objects, retrieving data, and setting replication rules.<hr />- Commands: `awslocal s3api create-bucket`, `put-object`, `get-object`, `list-buckets`, `put-bucket-replication`, `get-bucket-replication`.<hr />- Dummy values for roles and ARNs suffice for local testing; real values needed for live AWS.<hr />- LocalStack supports replication setup to simulate cross-bucket data backup.<hr />- Extends to emulate EC2, CloudFront, Lambda, Kinesis, DynamoDB, and more.<hr />- Advantages: zero cost, faster iteration, greater control, higher testing accuracy.<hr />- LocalStack enhances AWS learning and development by safely mimicking cloud behaviors locally.","tags":"","authors":"","date":{"days":19433},"category":"playground > topics > devops"},"750":{"file_path":"playground/topics/elixir/acceptance-test-in-elixir.md","title":"Acceptance test in elixir","description":"Learn how to automate End2End acceptance tests in Elixir using Hound and WebDriver to run browser tests efficiently and reduce manual testing time.","spr_content":"- Acceptance tests ensure bug-minimized deployment; manual testing is valuable but tedious and slow.<hr />- End2End testing automates real-browser navigation and interaction, simulating user behavior.<hr />- In Elixir, Hound offers WebDriver integration, enabling End2End tests with familiar test syntax.<hr />- WebDriver interfaces control browsers; common implementations include Selenium, ChromeDriver, PhantomJS.<hr />- Selenium setup involves installing standalone server; ChromeDriver and PhantomJS are lightweight WebDriver options.<hr />- Hound configuration involves adding dependency, setting driver/browser in config, and starting Hound in test setup.<hr />- Test setup requires initializing Hound session, allowing browser control in tests.<hr />- Tests mimic user interactions: navigations, element inspections, clicks, assertions on page content.<hr />- Proper test environment setup demands starting WebDriver before running tests.<hr />- Hound's helpers simplify browser commands; tests resemble straightforward unit tests with asserts.<hr />- The overall process models automated acceptance criteria execution, combining backend code and visual front-end validation.","tags":"","authors":"","date":{"days":19186},"category":"playground > topics > elixir"},"751":{"file_path":"playground/topics/elixir/libcluster-in-elixir.md","title":"Libcluster in elixir","description":"Learn how to set up Elixir node clustering with Libcluster on Kubernetes to build scalable, high-performance applications using Erlang features and reduce operational costs effectively.","spr_content":"- Dwarves Foundation practices: environment setup, CI/CD, Kubernetes in production, cost reduction.<hr />- Development: docker, docker-compose; Elixir stack; initial use of Docker for production, vertical scaling, limited Erlang/OTP features.<hr />- Need for Erlang cluster: high availability, redundancy, shared state sans external DB.<hr />- Transition from monolithic application to microservices: Golang as isolated workers, easy scaling, no inter-worker messaging.<hr />- Elixir applications: modular, high performance, built on GenServers, supervision trees, shift from imperative to declarative.<hr />- Libcluster simplifies Elixir clustering via strategies, integrating with Kubernetes via DNS or API.<hr />- Setup process: prepare environment, Docker build, K8s deployment, configuration with `mix release`, Dockerfile creation, environment vars.<hr />- Clustering strategies: Epmd (local), Kubernetes API, Kubernetes DNS (shared headless service).<hr />- K8s: service accounts, RBAC, deployment script, IP env variable, pod setup, service setup, node communication over port 4369.<hr />- Dev vs prod configs: Epmd for dev, Kubernetes DNS for prod, dynamic topology loading.<hr />- Application: supervisor uses Libcluster topology, supports remote node connection, local testing with `iex --name` commands.<hr />- K8s deployment: apply YAML configs, view logs, monitor startup, nodes auto-connect via Erlang.<hr />- Conclusion: leveraging Elixir's features and K8s infrastructure to enable scalable, clustered services with reduced operational costs and complexity.<hr />- Overall: shifting from isolated Golang workers to connected, high-availability Elixir clusters in Kubernetes, minimizing external dependencies and communication overhead.","tags":"","authors":"","date":{"days":19298},"category":"playground > topics > elixir"},"752":{"file_path":"playground/topics/elixir/pg-in-elixir.md","title":"Pg in elixir","description":"Learn how to use Erlang's pg library for process groups to broadcast messages across clustered Elixir services, enabling scalable WebSocket communication without third-party tools.","spr_content":"- Pg2 is an Erlang module implementing process groups, deprecated from OTP 24.  <hr />- Pg (Process Groups) replaces Pg2, supports process grouping and message broadcasting.  <hr />- A pg group maps a name to a list of PIDs, including local and remote processes; visible system-wide upon creation.  <hr />- Groups can be created repeatedly; creation is idempotent.  <hr />- Practical use case: a message publishing system on Kubernetes with web sockets.  <hr />- Users connect via WebSocket, and server maintains persistent connections.  <hr />- Long tasks block requests; server responds on task completion with messages.  <hr />- Broadcast challenges: reaching all users, identifying service treating a user, and connection persistence across failures.  <hr />- Current temp solutions: REST APIs and pub-sub via pod communication, costly at scale.  <hr />- Using pg, a GenServer manages process groupings; an internal group (`:internal_channel`) holds all instances.  <hr />- When a new service instance joins, it adds itself to the group.  <hr />- To broadcast: get members of the group, exclude self, and send messages via `send/2`.  <hr />- Implementation involves initializing `:pg` in application supervisor; creating a Synchronization GenServer; defining broadcast and receive functions.  <hr />- On start, Synchronization joins the group; updates send messages to group members excluding self.  <hr />- Restoring connectivity across instances tested locally via named nodes and `iex`.  <hr />- PG features include: leaving groups (`:pg.leave`), monitoring group changes (`:pg.monitor`), and handling group membership updates.  <hr />- Monitoring allows detecting joins/leaves; useful for sync or failover logic.  <hr />- Scope in `pg`: local within a node or cluster-wide, unlike `pg2` which supports hierarchical classifications.  <hr />- Solution timeline: Pre-OTP 23, pg2 was used; now, pg offers enhanced performance and flexibility, eliminating third-party communication costs.","tags":"","authors":"","date":{"days":19297},"category":"playground > topics > elixir"},"753":{"file_path":"playground/topics/engineering/a-and-cname-records-in-dns.md","title":"A and cname records in dns","description":"Learn the key differences between A records and CNAME records in DNS, including their uses for domain mapping, subdomains, and IP address management to optimize your website setup.","spr_content":"- An `A` record, short for \"Address,\" maps a domain or subdomain directly to an IP address, enabling users to locate services like websites and emails on the internet.  <hr />- Multiple `A` records can point to the same IP for redundancy or load balancing, enhancing availability.  <hr />- `A` records are optimal when IP addresses are fixed, set explicitly by domain managers.  <hr />- A `CNAME` record creates an alias, linking one domain name to another within DNS, facilitating flexible redirection and management.  <hr />- `CNAME` is crucial for hosting multiple services on the same IP, or managing multiple domain versions across countries.  <hr />- Use `CNAME` to redirect subdomains or hostnames to a primary domain or service, such as pointing customer subdomains to a main service domain.  <hr />- `CNAME` should always point to another domain name, not an IP, for proper DNS functioning.  <hr />- A `CNAME` cannot coexist with other records like `TXT` for the same domain name; they are mutually exclusive.  <hr />- Chain `CNAME` records are possible but discouraged due to potential performance degradation; direct, near-target `CNAME`s are preferred.  <hr />- Both `A` and `CNAME` records are foundational for domain deployment, each serving distinct roles—address mapping versus aliasing.","tags":"","authors":"","date":{"days":18998},"category":"playground > topics > engineering"},"754":{"file_path":"playground/topics/engineering/analysis-document.md","title":"Analysis document","description":"Learn how to use analysis documentation to clarify requirements, identify issues, and align solutions with clients for smoother product development and better team planning.","spr_content":"- In product teams, requirements drive system enhancements and new features based on existing systems.  <hr />- The Analysis Documentation is a key reference point before working on requirements.  <hr />- Initial step: extract current system behaviors related to the requirement.  <hr />- Identify issues and verify team needs through this analysis.  <hr />- Develop solutions to propose to the client.  <hr />- Share proposed solutions with Product Managers and Portfolio Leads for final alignment.  <hr />- The document provides confidence in finalizing client requirements before development.  <hr />- It ensures all team members can plan, think, and prepare thoroughly before development and testing.  <hr />- The process emphasizes clear documentation, verification, collaborative alignment, and thorough planning.","tags":"","authors":"","date":{"days":19360},"category":"playground > topics > engineering"},"755":{"file_path":"playground/topics/engineering/burnup-and-burndown-chart.md","title":"Burnup and burndown chart","description":"Learn how Burnup and Burndown charts help project managers track product development progress by showing completed work, remaining tasks, and timeline status clearly to clients.","spr_content":"- LLMs can generate project status reports using visual aids: Burnup and Burndown charts.<hr />- These charts serve different purposes for project tracking during client updates.<hr />- A Burndown chart visualizes work remaining over time, focusing on progress towards completion.<hr />- It tracks actual team velocity, sprint estimates, work completed, and remaining tasks versus time.<hr />- A Burnup chart visualizes total work completed over time, emphasizing scope changes and schedule adherence.<hr />- It tracks completed tasks, time per task, project timing alignment, and scope additions.<hr />- Use Burndown when assessing remaining work within a fixed timeline.<hr />- Use Burnup to highlight completed work, scope changes, and overall progress.<hr />- The key difference: Burndown shows work left; Burnup shows work done and scope changes.<hr />- They complement each other for comprehensive project status insight.","tags":"","authors":"","date":{"days":19416},"category":"playground > topics > engineering"},"756":{"file_path":"playground/topics/engineering/cognitive-load.md","title":"Cognitive load","description":"Learn how cognitive load affects mental effort and team performance, and why managing it is key to reducing overload and improving focus in business and technology teams.","spr_content":"- Cognitive load quantifies mental effort required for tasks.  <hr />- It reflects the amount of information active working memory must handle simultaneously.  <hr />- Example: solving a math problem involves holding multiple concepts—numbers, operations, rules—in mind.  <hr />- Cognitive load can be estimated through individuals' perceived effort, shaping expectations.  <hr />- There is a finite limit to an individual's working memory capacity.  <hr />- Team cognitive capacity aggregates individual limits; total capacity constrains team performance.  <hr />- Teams often neglect cognitive load in task and responsibility assignments.  <hr />- Difficult to quantify team capacity and task load, leading to oversight.  <hr />- Teams are expected to adapt to changing tasks without explicit adjustments for cognitive load.  <hr />- Ignoring cognitive load causes teams to overextend, reducing mastery development.  <hr />- High cognitive load induces frequent context switching, impairing efficiency.  <hr />- Proper management of cognitive load enhances flow, mastery, and team performance (per _Team Topologies_).","tags":"","authors":"","date":{"days":19232},"category":"playground > topics > engineering"},"757":{"file_path":"playground/topics/engineering/cold-start-problem.md","title":"Cold start problem","description":"Learn how to reduce serverless function cold start delays by keeping containers warm with scheduled requests, improving performance for faster response times and better user experience.","spr_content":"- Cold start occurs when a serverless function is invoked after a period of inactivity post-deployment.<hr />- Initial request triggers:<hr />  - Retrieve code from persistent storage.<hr />  - Spin up container.<hr />  - Load package into memory.<hr />  - Execute function.<hr />- Subsequent requests reuse the warm container, avoiding cold start.<hr />- If idle too long, container cools, returning to cold state.<hr />- Cold start duration: approximately 0.5 to 2 seconds; longer with larger code.<hr />- Warm container skips code loading steps, directly runs function.<hr />- Reducing function size or increasing memory can slightly reduce cold start time.<hr />- Latency > 1 second is detrimental for user experience.<hr />- Solution: maintain container in \"hot\" state by periodic pinging via scheduler.<hr />- Continuous \"inside\" request prevents cycle timeout, ensuring readiness.<hr />- References detail strategies to mitigate and manage cold start issue.","tags":"","authors":"","date":{"days":19079},"category":"playground > topics > engineering"},"758":{"file_path":"playground/topics/engineering/conway-s-law.md","title":"Conway s law","description":"Conway's Law explains how a company's communication structure shapes its software design, highlighting the need to align team organization with system architecture for better development outcomes.","spr_content":"- System designs mirror organizational communication structures.  <hr />- Organizational structure shapes software architecture and behavior.  <hr />- Starting with people is essential to influence system design.  <hr />- Software architecture cannot be changed without reorganizing the team.  <hr />- Understanding system design requires analyzing organizational communication.  <hr />- Module interfaces depend on inter-group communication patterns.  <hr />- Splitting teams into smaller units is a natural response to growth, reducing communication overhead.  <hr />- Organizational hierarchy must adapt quickly to innovation needs and market pressures.  <hr />- Conway's Law highlights the inseparability of social and technical system design.","tags":"","authors":"","date":{"days":19155},"category":"playground > topics > engineering"},"759":{"file_path":"playground/topics/engineering/difference-between-project-program-portfolio-manager.md","title":"Difference between project program portfolio manager","description":"Learn the key differences between Project Manager, Program Manager, and Portfolio Manager roles in software development and how they manage teams to meet client requirements effectively.","spr_content":"- In software development teams, role distinctions include Project Manager, Program Manager, and Portfolio Manager.<hr />- The Project Manager oversees planning, scheduling, budgeting, execution, and delivery; based on leadership, technical skills, ensures product meets client requirements.<hr />- The Program Manager manages multiple teams working on interconnected features within a larger system; higher than Project Manager; allocates tasks to appropriate teams to meet project goals.<hr />- The Portfolio Manager holds the highest responsibility; prioritizes all programs and projects across teams; balances business needs and workloads; directs focus on strategic value.<hr />- Commonality: all roles involve management—organizing resources, coordinating efforts, ensuring outputs align with client and business goals.<hr />- Key difference lies in scope and responsibility: Project Manager focuses on individual projects, Program Manager on multiple related projects, Portfolio Manager on entire program portfolios.<hr />- The roles form a hierarchical management structure, with increasing scope and strategic focus from Project to Portfolio.<hr />- These distinctions ensure streamlined coordination, strategic alignment, and delivery success within the product development lifecycle.","tags":"","authors":"","date":{"days":19374},"category":"playground > topics > engineering"},"760":{"file_path":"playground/topics/engineering/double-entry-accounting.md","title":"Double entry accounting","description":"Learn the basics of double-entry accounting, including assets, liabilities, equity, and how this system improves accuracy over single-entry bookkeeping for better financial tracking and reporting.","spr_content":"- Double-entry accounting ensures every transaction has equal and opposite effects across at least two accounts.<hr />- Accounts primarily categorized as assets (debit balance), liabilities (credit balance), and equity (balance depends on context).<hr />- The fundamental accounting equation: Assets = Liabilities + Equity; derived from balance sheets.<hr />- Net worth (equity) calculated as Assets minus Liabilities.<hr />- Single-entry bookkeeping records transactions linearly; lacks detail on assets/liabilities, prone to mistakes, and cannot reliably derive balances or asset compositions.<hr />- Double-entry records both debits and credits, maintaining overall balance; debits increase assets and expenses, credits increase liabilities, equity, or revenues.<hr />- Assets answer “How much do I have?”; subdivided into current (convertible within a year) and fixed (long-term holdings).<hr />- Liabilities answer “How much do I owe?”; classified as current (payable within a year) or non-current (long-term debts), including contingent liabilities.<hr />- Equity answers “How much is left over?”; includes initial capital plus/subtracting revenues, expenses, and revaluations; can be debit or credit depending on coverage.<hr />- Journals are original entries; ledgers organize by accounts; double-entry enforces debits = credits, enabling accurate financial statements.<hr />- Error detection, standardization, and comprehensive reporting (income, balance, cash flow) facilitated by double-entry.<hr />- Database design for double-entry involves structured tables for accounts, transactions, and balances.<hr />- Tools like hledger automate and facilitate multi-currency double-entry record-keeping via command line.<hr />- Assets include current (inventory, receivables, cheques) and fixed assets (buildings, land, machinery, software).<hr />- Liabilities include current (taxes, credit cards, wages, short-term loans, overdrafts), non-current (long-term loans, mortgages), and contingent liabilities (lawsuits, warranties).<hr />- Equity encompasses net worth, initial investments, and subcategories like expenses (costs), revenue (income), and income (gains from work or investments).<hr />- Debit: money flowing into an account, originates from the journal; Credit: money flowing out, also journal-originated.<hr />- Journals record chronologically; ledgers categorize by accounts; balancing occurs at the ledger level, ensuring debits equal credits.<hr />- Accurate financial reporting depends on proper double-entry practices and consistent account classification.<hr />","tags":"","authors":"","date":{"days":19228},"category":"playground > topics > engineering"},"761":{"file_path":"playground/topics/engineering/edsger-dijkstra-interview.md","title":"Edsger dijkstra interview","description":"Discover Edsger W. Dijkstra's insights on programming, software elegance, testing limits, and the challenges of writing code, revealing why simplicity and hard work lead to successful software development.","spr_content":"- W. Dijkstra views software versioning as often superficial; real product should be finished in version 1, not iteratively patched with incomplete releases.<hr />- Version numbers like 2.6 or 2.7 suggest insignificance; a truly complete software is version 1.<hr />- Programming styles parallel musical compositions: Mozart’s work as complete and final, Beethoven’s as iterative and revisory.<hr />- Mozart's methodology symbolizes platinum standard: think, compose, finalize in one go.<hr />- Beethoven’s method exemplifies iterative refinement: write, revise, rework—repeated cycles lead to the final product.<hr />- Anglo-Saxon programming culture values iterative writing—\"just write\" and refine, embracing imperfection initially.<hr />- Competent programmers recognize human limitations; approach problems with humility, avoiding unnecessary cleverness.<hr />- Dijkstra’s early influence: teaching software development, encountering cultural resistance rooted in contractual and work-enjoyment motives.<hr />- Companies prefer unstable maintenance contracts over flawless procedures; programmers seek challenge over certainty.<hr />- Apollo’s coding experience indicates that massive, complex codebases can be highly reliable unexpectedly.<hr />- Joel Aron’s anecdote highlights that even in critical mission code, errors like reversed gravity calculations can go unnoticed until late.<hr />- Testing reveals bugs but cannot guarantee bug-free software; reliability isn’t assured solely by testing.<hr />- Program elegance is essential, not aesthetic; it correlates with success and is grounded in simplicity and flexibility.<hr />- Elegant programs are concise and modular—components replaceable without wider disruption—often leading to higher efficiency.<hr />- Coding difficulty scales with hardware capability: simple in pre-computer era, medium with early computers, huge challenge with modern giants.<hr />- Dijkstra’s personal history : writing software before hardware existed, emphasizing intellectual control over testing.<hr />- His mother, a mathematician, influenced his views: mastery of formulas and simplicity are key; complex sequences suggest flawed thinking.<hr />- Pursuit of elegance demands effort and education; it’s rare because it’s hard to achieve.<hr />- Elegance in programming balances brevity, clarity, and adaptability—traits linked to technological and operational feasibility.","tags":"","authors":"","date":{"days":19121},"category":"playground > topics > engineering"},"762":{"file_path":"playground/topics/engineering/enabling-team.md","title":"Enabling team","description":"Learn how enabling teams support stream-aligned teams by bridging skill gaps, sharing expertise, and improving delivery through collaboration, technical guidance, and knowledge transfer.","spr_content":"- Success in competitive environments depends on continual capability learning and improvement for stream-aligned teams.<hr />- Constant delivery pressures limit the time for research, skill acquisition, practice, and integration.<hr />- Enabling teams bridge the capability gap between stream-aligned teams and the technical/domain knowledge.<hr />- Enabling teams comprise experts providing guidance, not direct execution, fostering collaboration.<hr />- They understand the problems of stream-aligned teams to offer effective, targeted advice.<hr />- Enabling teams act as technical consultants—internal or external—focusing on tools, practices, and capabilities.<hr />- Their roles include setting up deployment pipelines, test frameworks, and automation tools.<hr />- Knowledge transfer by enabling teams is both temporary (for new tech) and long-term (for continuous improvement).<hr />- Pairing practices enhance knowledge transfer, especially for complex practices like Infrastructure-as-Code.<hr />- Effective enabling teams establish regular collaboration checkpoints with stream-aligned teams.<hr />- They stay updated on new tools, approaches, and practices before organizational needs arise.<hr />- They communicate developments, like new frameworks or deprecation alerts, aiding technology lifecycle management.<hr />- They may act as proxies for services not yet directly accessible by stream-aligned teams.<hr />- Enabling teams promote cross-team learning, acting as organizational knowledge curators.<hr />- The overarching purpose is to sustainably support stream-aligned teams in delivering working software.<hr />- Enabling teams do not fix poor practices or code quality issues, only assist in capability growth.<hr />- Short-term collaboration (weeks/months) embeds new skills into stream-aligned teams, then shifts focus elsewhere.<hr />- Based on principles from _Team Topologies_, emphasizing fast flow and strategic team organization.","tags":"","authors":"","date":{"days":19219},"category":"playground > topics > engineering"},"763":{"file_path":"playground/topics/engineering/graphql-in-microservices-unified-api-gateway.md","title":"Graphql in microservices unified api gateway","description":"Discover how Bramble, an open-source GraphQL federation gateway, unifies multiple APIs into a single scalable schema with fine-grained access control and easy deployment for modern microservice architectures.","spr_content":"- Access all organizational data via a single GraphQL query, even if stored separately; simplifies data retrieval.<hr />- Goal: expose one unified graph without monolithic architecture pitfalls; combine schema diversity with separation.<hr />- Dichotomy in approaches: schema stitching merges schemas, easy but tightly coupled; schema federation via a gateway, flexible but complex.<hr />- Schema stitching: merge schemas into a single schema; advantageous for small, overlapping sources; risk: tight coupling.<hr />- Schema federation: decentralizes schema ownership; involves a gateway routing to distributed services; better scalability; more intricate to implement.<hr />- Stitching suits few, related APIs; federation fits many, independently evolving, non-overlapping APIs.<hr />- Personal preference: favor federation for scalability, flexibility; advocates ongoing improvements, such as Bramble.<hr />- Bramble: open-source GraphQL gateway supporting federation, fine-grained authorization, plug-in extensibility, single binary deployment, stateless scalability.<hr />- Bramble benefits: federation of multiple schemas into a single API; flexible access control; extendable via plugins; easy deployment.<hr />- Motivations: replace legacy, inconsistent APIs; unify data access; support multi-language environments; promote human-readable schemas.<hr />- Existing legacy: siloed databases, heterogeneous API protocols, documentation gaps; pain points in maintenance and integration.<hr />- New architecture goals: standardization, language-agnosticism, universality, clarity, ease of evolution.<hr />- Choice of GraphQL federation: inspired by Apollo; avoids complex syntax; builds on Nautilus for Go compatibility.<hr />- Federation enhances API design: seamless, monolithic appearance; evolution in microservices; decoupled development.<hr />- REST vs GraphQL: REST exposes endpoints; GraphQL unifies data queries; federation enables aggregation across services.<hr />- Example: movie data API; federation allows adding fields from different services without complex client or server changes; transparent aggregation.<hr />- As APIs grow, federation prevents proliferation of endpoints; maintains simplicity while expanding data richness.<hr />- Bramble: designed for high-performance, customizable, scalable, and easy-to-deploy GraphQL APIs.<hr />- Collectively, these concepts emphasize flexible, scalable, and maintainable API architecture leveraging federation, with Bramble as an implementation.","tags":"","authors":"","date":{"days":19445},"category":"playground > topics > engineering"},"764":{"file_path":"playground/topics/engineering/how-one-product-team-works-when-having-incident.md","title":"How one product team works when having incident","description":"Learn two effective ways to handle customer-reported software incidents, including using an engineering support SWAT team and creating incident channels for faster communication and resolution.","spr_content":"- Software development processes inevitably encounter customer-raised incidents during product use.  <hr />- Incidents are typically escalated through a hierarchy: Engineering Manager → Product Owner → Project Manager → Quality Assurance → Developer.  <hr />- This escalation cycle can be time-consuming due to incident evaluation and transfer delays.  <hr />- Two primary incident resolution approaches are identified based on experience:  <hr />  1. Engineering Support (SWAT) Team:  <hr />     - Multitask across multiple teams; not confined to a single product.  <hr />     - Participate early in the incident to gather context alongside high-level roles.  <hr />     - Their effectiveness depends on domain knowledge and strong communication skills.  <hr />  2. Incident Channel via Communication Tools:  <hr />     - A dedicated channel allows all project members to join and collaborate immediately.  <hr />     - Direct involvement of domain-knowledgeable members speeds up investigation.  <hr />     - Immediate communication and coordination are essential for effective incident handling.","tags":"","authors":"","date":{"days":19280},"category":"playground > topics > engineering"},"765":{"file_path":"playground/topics/engineering/how-to-build-a-product-sense.md","title":"How to build a product sense","description":"Learn how to improve your product sense to create user-focused products by observing users, analyzing everyday products, learning from experts, and staying updated with technology trends.","spr_content":"- Product sense is the skill to craft or modify products that achieve the desired user impact.<hr />- It involves generating ideas and improvements that enhance customer satisfaction.<hr />- The iPhone example illustrates product sense through aesthetic value and personal connection.<hr />- Improving product sense requires active observation of user interactions with products.<hr />- Focus on understanding users’ problems, feelings, and how they use the product daily.<hr />- Ask questions like: purpose of the product, target users, user actions, and thoughts/feelings.<hr />- Deconstructing everyday products enhances intuition and understanding of UI/UX.<hr />- Personal usage of related products develops experiential knowledge to inform improvements.<hr />- Learning from experienced product thinkers accelerates skill development through insights.<hr />- Curiosity about technological advances and domain trends is crucial for innovation and relevance.<hr />- Mastering product sense combines empathy, observation, experiential learning, mentorship, and domain awareness.","tags":"","authors":"","date":{"days":19411},"category":"playground > topics > engineering"},"766":{"file_path":"playground/topics/engineering/how-to-run-the-backlog-grooming-effectively.md","title":"How to run the backlog grooming effectively","description":"Learn how to run effective Backlog Grooming meetings in Agile teams to prioritize user stories, manage backlog tasks, and prepare for sprint planning while saving time and improving focus.","spr_content":"- Backlog Grooming is crucial for Agile teams, aligning future product plans and required work preparation.  <hr />- It ensures clear prioritization of user stories and effective backlog management, preventing backlog black holes.  <hr />- Poor practice: diving into backlog discussions during grooming, wasting time and reducing efficiency.  <hr />- Effective process: Team Lead and Project Manager review current tasks and backlog before the meeting.  <hr />- Check focuses: prioritize user stories and confirm defined requirements.  <hr />- Post-meeting, PM creates a grooming note with user stories, priorities, and links, then disseminates it.  <hr />- Pre-meeting awareness by team members accelerates grooming, saves time, and enhances readiness.  <hr />- The process promotes proactive planning, clarity, and streamlined team collaboration.  <hr />- Reference material supports understanding of backlog grooming principles.","tags":"","authors":"","date":{"days":19314},"category":"playground > topics > engineering"},"767":{"file_path":"playground/topics/engineering/pomodoro-technique.md","title":"Pomodoro technique","description":"Learn how the Pomodoro Technique boosts productivity by breaking work into focused 25-minute intervals with short breaks, helping you manage time and reduce mental fatigue effectively.","spr_content":"- The Pomodoro Technique is a time-management method designed to maximize focus and reduce mental fatigue.  <hr />- It involves breaking work into 25-minute focused intervals called \"pomodoros,\" named after the Italian word for tomato.  <hr />- Francesco Cirillo developed the method using a tomato-shaped kitchen timer.  <hr />- A typical cycle includes 4 pomodoros, each separated by short breaks (5-10 minutes), with a longer break (15-30 minutes) after four pomodoros.  <hr />- The process emphasizes task breakdown, especially for large projects, dividing them into manageable steps.  <hr />- Small tasks (under one pomodoro) are grouped together for efficiency.  <hr />- During a pomodoro, interruptions like emails or messages are avoided; ideas or distractions are noted for later.  <hr />- Progress is tracked by marking completed pomodoros, often with an \"X.\"  <hr />- Temptations to switch tasks are recorded, reinforcing focus.  <hr />- The method encourages sticking strictly to the timer; each pomodoro is indivisible.  <hr />- The core steps: decide task, set timer, work, end and rest, repeat, and take longer breaks after every four pomodoros.  <hr />- The technique's seeming simplicity masks its effectiveness in large task management by fostering concentration on a single, limited time scope.  <hr />- It helps prevent overwhelm by focusing on one small, achievable work segment at a time.","tags":"","authors":"","date":{"days":19260},"category":"playground > topics > engineering"},"768":{"file_path":"playground/topics/engineering/quality-assurance-works-in-the-product-team.md","title":"Quality assurance works in the product team","description":"Learn how to improve QA testing records with clear documentation formats for Mobile, BackEnd, and FrontEnd teams to track test status, scenarios, and related tickets effectively.","spr_content":"Sparse Priming Representation (SPR):<hr /><hr />- Complex development teams contain diverse roles: Backend, Frontend, Mobile (Android, iOS), QA.  <hr />- Developers track work via Merge Requests with filters for efficient searching.  <hr />- QA logs test completion notes as comments but struggles to retrieve these records in Jira.  <hr />- Solution: Use structured testing documentation to improve test management and retrieval.  <hr />- Mobile testing docs include references (tickets, app version), and test reports with statuses (Failed, Passed, N/A, Haven't), and test scenarios.  <hr />- Backend/Frontend testing docs include references (tickets, related documents), and analogous test reports.  <hr />- Testing documentation standardizes records, simplifying filtering, tracking, and management.  <hr />- Visual aids (images) illustrate test doc formats and samples.  <hr />- Central insight: structured, detailed test documentation enhances traceability versus simple comments.","tags":"","authors":"","date":{"days":19304},"category":"playground > topics > engineering"},"769":{"file_path":"playground/topics/engineering/redis-rate-limiter.md","title":"Redis rate limiter","description":"Learn how to implement basic rate limiting in Redis using counters and lists to control user access by IP address, preventing too many requests in a set time period.","spr_content":"Redis in-memory NoSQL, versatile for enterprise rate limiting; key data labels: IP addresses.  <hr />Two data types useful: key-value counters, LISTs with expiration.  <hr />Counter approach: increment key, expire in period; risk: race conditions.  <hr />LIST approach: push IP to list, expire; avoids race, but can error if list missing.  <hr />Counter method simple, fast, but susceptible to concurrency issues.  <hr />LIST method more elegant, concurrency-safe, but edge-case prone.  <hr />Both utilize Lua scripting for atomicity; choice depends on context trade-offs.  <hr />References: rate limiting concepts, Redis data types.","tags":"","authors":"","date":{"days":19509},"category":"playground > topics > engineering"},"770":{"file_path":"playground/topics/engineering/software-quality-assurance.md","title":"Software quality assurance","description":"Learn how Software Quality Assurance ensures software meets requirements through testing, planning, and process control to improve reliability, usability, and maintainability in development projects.","spr_content":"- Software Quality measures conformance to explicit and implicit requirements.  <hr />- Functional quality focuses on features, performance, usability, defect absence.  <hr />- Non-functional quality concerns architecture, maintainability, security, efficiency.  <hr />- Software Quality Assurance (SQA) verifies process compliance and correctness.  <hr />- Attributes of SQA include correctness, efficiency, flexibility, integrity, interoperability, maintainability, portability, reliability, reusability, testability, usability.  <hr />- Common problems: defects due to poor communication, blame games, lack of knowledge about procedures, inadequate testing, and coordination issues.  <hr />- Strengthened knowledge about procedures and roles mitigates misunderstandings.  <hr />- QA role: verify features, ensure process adherence, facilitate defect detection.  <hr />- Developer’s role: implement per requirements, test early, avoid skipping steps, fix bugs promptly.  <hr />- Principles of SQA: testing reveals mistakes, conduct early testing, update tests with fixes, test for all cases, use independent environments, adapt testing to context.  <hr />- Agile emphasizes iterative development, rapid feedback, continuous error fixing, promotes \"retrospect and adapt\".  <hr />- Effective SQA process includes defining plans, establishing standards, systematic reviews, and quality control activities—requirements review, test planning, designing, environment setup, execution, reporting, and records management.  <hr />- Quality management involves ongoing process control, issue tracking, and continuous improvement.","tags":"","authors":"","date":{"days":19269},"category":"playground > topics > engineering"},"771":{"file_path":"playground/topics/engineering/story-point-estimation.md","title":"Story point estimation","description":"Learn how agile teams use story points and collaborative methods like Planning Poker to estimate workloads accurately, improving sprint planning and product development efficiency.","spr_content":"- Project managers, product owners, and engineering managers need to understand team member workloads to assess progress and plan future sprints.  <hr />- Story points are a key metric to estimate effort and determine workload distribution.  <hr />- Accurate story point estimation enhances sprint planning efficiency and team impact.  <hr />- Precise estimation involves collaboration between PMs, POs, and the entire development team.  <hr />- PMs/POs prepare tickets based on feature requests and customer needs, often with limited technical insight.  <hr />- Technical team members provide effort insights to help clarify work scope and complexity.  <hr />- Estimation should be a team effort; include developers, designers, testers to leverage diverse perspectives.  <hr />- Break large requirements into smaller, manageable subtasks to improve accuracy and tracking.  <hr />- Use methods like Planning Poker, requiring participation from all team members for consensus.  <hr />- Estimation involves collective agreement on effort, often translated into story points corresponding to time (e.g., 1-2 points = 2-4 hours).  <hr />- Conduct retrospectives after each sprint to review previous estimates, identify discrepancies, and refine estimation accuracy.  <hr />- Learning from past estimates improves future planning and team alignment.  <hr />- Refer to Atlassian resources for detailed techniques and best practices on agile estimation and Planning Poker.","tags":"","authors":"","date":{"days":19250},"category":"playground > topics > engineering"},"772":{"file_path":"playground/topics/engineering/stream-aligned-team.md","title":"Stream aligned team","description":"Learn how stream-aligned teams enable fast delivery by owning end-to-end work, reducing hand-offs, and adapting quickly to change for better software flow and customer feedback.","spr_content":"- A stream is a continuous flow of work focused on a business domain or capability, requiring clear goals and responsibilities.  <hr />- Multiple teams can coexist within a stream, each managing their own flow.  <hr />- A stream-aligned team handles a single valued work stream—product, service, features, or user persona—owning it end-to-end.  <hr />- Such teams operate autonomously without hand-offs, maintaining full ownership of their work.  <hr />- They are positioned for rapid feedback loops and real-time monitoring in production.  <hr />- Essential capabilities include security, viability analysis, design, development, infrastructure, metrics, product ownership, testing, and UX.  <hr />- Expected behaviors: consistent feature delivery; quick adaptation; experimental and learning mindset; minimal hand-offs; sustainable flow of change; code quality focus; collaboration with supporting teams; pursuit of autonomy, mastery, and purpose.  <hr />- Supporting teams (complex subsystem, enabling, platform) bolster stream-aligned teams as needed.  <hr />- The primary organizational focus is on the stream-aligned team’s health, flow, and evolutionary capability, aligning with the principles outlined in \"Team Topologies.\"","tags":"","authors":"","date":{"days":19254},"category":"playground > topics > engineering"},"773":{"file_path":"playground/topics/engineering/tackling-complexity.md","title":"Tackling complexity","description":"Learn why blaming frameworks for project failures misses the real issue and how embracing simplicity and changing thinking can improve code quality and successful implementation.","spr_content":"Framework blame cycle: team struggles→ blame technology→ switch frameworks without root cause analysis.  <hr />Failure to embrace first principles: problems stem from mindset, not tools.  <hr />Blaming frameworks is a distraction from understanding why solutions fail.  <hr />Solution to complexity: prioritize simplicity, not technology.  <hr />Improving code quality: focus on changing engineers' thinking, not just their coding style.  <hr />Mindset shift leads to better code, not tool switching.  <hr />Framework changes are superficial; underlying cognitive approach is key.","tags":"","authors":"","date":{"days":19075},"category":"playground > topics > engineering"},"774":{"file_path":"playground/topics/engineering/team-first-thinking.md","title":"Team first thinking","description":"Effective software delivery depends on building stable, small teams of five to nine people who own their code, foster trust, minimize cognitive load, and communicate clearly through defined team APIs.","spr_content":"- Software development today demands handling complexity and rapid change beyond individual capacity; teams are essential.  <hr />- Research shows team composition is less critical than team dynamics; team performance surpasses individual skill.  <hr />- Starting with the team is fundamental for effective delivery; team size, lifespan, relationships, cognition are key facets.  <hr />- \"Team\" = stable group of 5–9 people, working on shared goals; smallest unit of delivery; work assigned to teams.  <hr />- Human cognitive limits (Dunbar's number) constrain trust and collaboration; effective teams cap at 5–8 members.  <hr />- Larger groups undermine trust and effectiveness; small size fosters intimacy, trust, predictable behavior.  <hr />- Single-team ownership of systems/subsystems enhances responsibility, clear decision-making, and code quality.  <hr />- Multiple-team ownership leads to fragmentation, lax responsibility, mess; single ownership enables autonomy and stewardship.  <hr />- Teams must adopt a \"Team-First Mindset\": prioritize organizational goals, punctuality, focus, unblock others, mentor, avoid petty arguments.  <hr />- Diversity within teams drives creativity, better understanding of varied user needs, and innovation.  <hr />- Minimize cognitive load by limiting system scope, responsibilities, and complexity; prevent overload for better evolution.  <hr />- Establish \"Team APIs\": interfaces comprising code, versioning, documentation, practices, communication, current work, and other interaction points.  <hr />- Code includes runtime endpoints, libraries, UI, APIs; versioning (e.g., SemVer) signals change guarantees.  <hr />- Documentation (wiki, guides) clarifies ownership, practices, and processes; supports onboarding and consistency.  <hr />- Communication protocols (chat, video) enable remote interaction; transparency in work and priorities fosters alignment.  <hr />- Facilitate inter-team learning: allocate resources for knowledge sharing, physical/virtual spaces, guilds, communities, conferences.  <hr />- Organizational design should promote trust, awareness, and learning to accelerate flow and adaptability.  <hr />- Reference: _Team Topologies_ by Pais and Skelton offers models for team organization, interaction, and flow optimization.","tags":"","authors":"","date":{"days":19219},"category":"playground > topics > engineering"},"775":{"file_path":"playground/topics/engineering/team-toplogies.md","title":"Team toplogies","description":"Discover how Team Topologies improves software delivery by organizing teams into four types and using three interaction modes to boost collaboration, reduce cognitive load, and enhance flow.","spr_content":"- Software delivery problems stem from misconceptions of software development nature.<hr />- Focus on feature delivery neglects human and team dynamics, causing staff disengagement under cognitive load.<hr />- Team Topologies advocates a team-first approach, reorienting delivery paradigms.<hr />- Four fundamental team types enable effective, streamlined organization:<hr />  - Stream-aligned: aligned with business flow; cross-functional; independent delivery.<hr />  - Platform: builds supporting infrastructure; reduces cognitive load.<hr />  - Enabling: trains/supports other teams; facilitates transition and learning.<hr />  - Complicated subsystem: handles complex technical domains; used sparingly.<hr />- Interaction modes are critical; three modes govern team collaboration:<hr />  - Collaboration: joint work on shared goals; accelerates learning.<hr />  - X-as-a-Service: one team provides resources; minimal collaboration.<hr />  - Facilitating: enabling team supports another’s adoption or learning.<hr />- Efficacy depends on combining teams with appropriate interaction modes.<hr />- Delivery difficulty signals organizational needs for self-steering adjustments.<hr />- Underlying model shifts from siloed feature focus to dynamic, team-oriented flow.<hr />- Concepts rooted in \"Team Topologies\" methodology; emphasizes flow, signaling, and organization adaptation.","tags":"","authors":"","date":{"days":19219},"category":"playground > topics > engineering"},"776":{"file_path":"playground/topics/engineering/update-highest-and-lowest-symbol-prices-in-real-time.md","title":"Update highest and lowest symbol prices in real time","description":"Learn how to update highest and lowest symbol prices in real-time using Binance WebSocket and in-memory caching to reduce database load and improve price peak tracking efficiency.","spr_content":"- Need real-time highest and lowest prices for millions of symbols in a database.  <hr />- Use Binance socket data for immediate updates.  <hr />- Avoid excessive resource use from frequent database queries.  <hr />- Large symbol count causes performance challenges with direct queries.  <hr />- Use in-memory cache to store current high/low per symbol.  <hr />- Establish WebSocket connection to Binance for live mark prices.  <hr />- Retrieve initial high/low from second peak timestamp to now, store in cache.  <hr />- On WebSocket data, compare incoming prices with cache.  <hr />- Only update database if price exceeds cached high or drops below cached low.  <hr />- Update second and third peak prices in database upon new record detection.  <hr />- Ensure data consistency with locking during concurrent modifications.  <hr />- Diagram visualizes flow: WebSocket → Cache → Comparison → Conditional DB update.  <hr />- Results: real-time peak updates, reduced database load, efficient comparison via cache.  <hr />- Limitations: 1-second socket update interval may miss rapid fluctuations.  <hr />- Work-around: use short-interval long polling to supplement socket data, reducing missed updates during rapid market moves.","tags":"","authors":"","date":{"days":19515},"category":"playground > topics > engineering"},"777":{"file_path":"playground/topics/engineering/vim-repl-driven-development.md","title":"Vim repl driven development","description":"Learn how to use Vim, tmux, and vim-slime for REPL Driven Development to run and test code interactively in languages like Python, JavaScript, and OCaml with fast feedback loops.","spr_content":"- Programming can be done via compiling or interpreting, each with distinct workflows.<hr />- Compiled languages follow an Edit-Compile-Execute loop; interpreted languages use Read-Evaluate-Print Loop (REPL).<hr />- REPL is an interactive environment for rapid testing; examples include Python (`python`), JavaScript (`node`), Lisp variants.<hr />- Lisp languages pioneered the term REPL, extending to REPL-Driven Development: incremental, exploratory, feedback-rich programming.<hr />- Emacs is historically linked to REPL workflows, especially through its Elisp extension, embodying REPL-centric development culture.<hr />- The author's approach: adapt REPL-driven workflow for any language using Vim, facilitated by `vim-slime`.<hr />- Prerequisites: proficiency with command line, Vim (key bindings, plugin management), tmux (sessions, panes), and understanding of `vim-slime`.<hr />- Core idea: send code blocks from Vim to a REPL pane via key sequences, evaluate instantly, and view output for rapid iteration.<hr />- Workflow pattern: user sends code from editor → REPL evaluates → results display, accelerating feedback loop.<hr />- Encourages decomposition into small, pure functions suitable for code block testing.<hr />- Setup involves splitting tmux: Vim on top, REPL on bottom; `vim-slime` acts as communication bridge.<hr />- Demonstrations (GIFs): Python, JavaScript, OCaml, Shell, showing real-time code evaluation via key bindings (`C-c C-c`).<hr />- Advantages: faster development cycle, immediate feedback, explorative programming.<hr />- Limitations: languages with weak module systems (e.g., Python, Node, OCaml) hinder incremental large-scale decomposition.<hr />- REPL-driven approach beneficial for language learning, syntax familiarization, and standard library exploration.","tags":"","authors":"","date":{"days":19517},"category":"playground > topics > engineering"},"778":{"file_path":"playground/topics/engineering/why-invest-in-tools.md","title":"Why invest in tools","description":"Discover how Facebook fosters innovation by trusting engineers to take risks, leading to breakthrough tools like React and GraphQL that transform software development worldwide.","spr_content":"- Facebook's innovation capacity stems from fostering individual-driven inventions like React, ComponentKit, GraphQL, Flow, and Pop.<hr />- Unlike standard tools, these innovations often originate from singular engineers motivated by better solutions for their tasks.<hr />- Most existing tools are adequate but not optimal; engineers are empowered to improve or invent new tools without external mandates.<hr />- Risk-taking experiments are accepted because they can lead to transformative, globally influential tools.<hr />- Facebook's culture tolerates failure and experimentation, contrasting with more rigid environments limited by strict timelines or short-term goals.<hr />- Large-scale growth of Facebook’s engineering team relies on this risk-tolerance, enabling talented engineers to pursue impactful projects.<hr />- Internal opposition or resistance to projects exists, with some colleagues favoring early failure acknowledgment.<hr />- Effective engineering management trust individuals to pursue high-impact risks, valuing long-term innovation over immediate consensus.<hr />- Leadership emphasizes trust in engineers’ judgment, even when initiatives lack immediate understanding or support.<hr />- The environment promotes a balance of autonomy, risk, and trust, which fuels continuous technological disruption.","tags":"","authors":"","date":{"days":19072},"category":"playground > topics > engineering"},"779":{"file_path":"playground/topics/frontend/concurrency-in-javascript.md","title":"Concurrency in javascript","description":"Learn how JavaScript’s single-threaded event loop enables asynchronous, non-blocking concurrency using callbacks, Promises, and async/await to handle tasks efficiently and avoid callback hell.","spr_content":"- JavaScript is a single-threaded language with a runtime based on an event loop.<hr />- It has a call stack for executing functions, objects in a heap, and a message (callback) queue.<hr />- Functions are pushed onto the stack; when complete, the frame pops off.<hr />- Long-running tasks are handled asynchronously via APIs, preventing blocking the stack.<hr />- Completed background tasks push callbacks into the callback queue.<hr />- When the stack is empty, callbacks from the queue are moved onto the stack for execution.<hr />- JavaScript's concurrency is achieved through non-blocking I/O, event loop, and callback queuing.<hr />- Callback hell arises from nested callbacks, degrading readability and maintainability.<hr />- Implementing async operations often uses callback functions for sequential tasks.<hr />- Promises introduce a state-driven way: pending, fulfilled, rejected, enabling chaining.<hr />- Promise chaining flattens callback hell, improving code clarity.<hr />- `async`/`await` syntax simplifies asynchronous code to appear synchronous, improving readability.<hr />- `Promise.all()` allows concurrent execution of multiple promises, optimizing performance.<hr />- Race conditions can occur when multiple async operations access shared resources unpredictably.<hr />- Using pure functions—deterministic, with no side effects—helps prevent concurrency issues.<hr />- Overall, JavaScript achieves concurrency via event loop, non-blocking APIs, and modern constructs, despite being single-threaded.<hr />- Properly managing shared states, avoiding unnecessary async, and employing promises/processors improve reliability.","tags":"","authors":"","date":{"days":19230},"category":"playground > topics > frontend"},"780":{"file_path":"playground/topics/frontend/debugging-in-javascript.md","title":"Debugging in javascript","description":"Learn how to use JavaScript console methods like console.log, console.assert, console.dir, console.time, and the debugger statement to effectively debug code in Chrome DevTools.","spr_content":"- The `console` object affords access to the browser's debugging console in Chrome DevTools, manipulable via right-click, Inspect, and selecting Console tab.<hr />- `console.log()` outputs messages or objects to the console, supporting simple texts or multiple values, aiding variable inspection.<hr />- `console.assert()` logs a message only if an evaluated expression is false, offering a cleaner condition check than `if` statements.<hr />- `console.dir()` displays an object's properties as a detailed tree, especially useful for inspecting complex objects or DOM elements, unlike `console.log()` which stringifies objects.<hr />- `console.time()` and `console.timeEnd()` facilitate performance measurement by timing operations; named timers allow tracking of multiple concurrent durations.<hr />- The `debugger` statement halts code execution at a specific point, initiating debugging tools, similar to setting breakpoints, without external execution commands.<hr />- Use `debugger` within functions to pause execution for investigation of buggy behavior or inspect state at critical points.<hr />- These methods collectively enhance debugging efficiency, visibility, and performance profiling within Chrome DevTools.<hr />- Reference external documentation and tutorials provide deeper technical understanding and practical insights.","tags":"","authors":"","date":{"days":19281},"category":"playground > topics > frontend"},"781":{"file_path":"playground/topics/frontend/deno.md","title":"Deno","description":"Discover Deno, a secure JavaScript runtime built in Rust with native TypeScript, WASM, and ESM support, designed for modern web APIs and easy deployment without complex build tools.","spr_content":"- New JavaScript runtime built in Rust, named JsVM, emphasizing performance and safety.  <hr />- Adheres strictly to Web API standards, promoting compatibility and universality.  <hr />- Fully supports TypeScript, WASM, and ESM modules natively, enabling modern JS workflows.  <hr />- \"Node\" is deliberately spelled backwards, symbolizing a different approach.  <hr />- Deno aligns with Web standards, aiming for universal and secure JS/TS projects.  <hr />- Security model: requires explicit `--allow-*` flags (read/write, network) to enable features, preventing unintended access.  <hr />- Eliminates npm install and bundling rituals, streamlining deployment—suitable for platform like Cloudflare Workers and Deno Deploy.  <hr />- Limitations: some new APIs (e.g., `URLPattern`) not fully supported everywhere; dependence on URL-based imports with caching, but import maps help readability.  <hr />- Example of import: `import lodash from \"https://deno.land/x/lodash@4.17.19\"`; Deno fetches and caches online modules automatically.  <hr />- Node.js ecosystem: fragmented with CJS, AMD, UMD, and transition to ESM; requires breakages and migrations, causes confusion, especially browser `require` vs `import`.  <hr />- Node 16 supports ESM but complicates legacy compatibility; transition has been painful and inconsistent.  <hr />- Deno removes complex build tool requirements (Webpack, Babel), supporting modern standards out-of-the-box—no need for heavy bundlers or transpilation setups.  <hr />- Emphasizes simplicity: write pure JavaScript/TypeScript with native TypeScript/JSX support, reducing setup overhead.  <hr />- Deno Deploy: serverless platform similar to Cloudflare Workers, leveraging the Service Worker API, with fast deployment via simple URL link, currently in free beta.  <hr />- Notable projects: Ultra and Fresh, exemplifying modern Deno-based applications.","tags":"","authors":"","date":{"days":19068},"category":"playground > topics > frontend"},"782":{"file_path":"playground/topics/frontend/react/component-communication-and-decoupling.md","title":"Component communication and decoupling","description":"Learn key React component communication methods like props drilling, Context API, event emitters, global stores, and custom hooks to build decoupled, maintainable, and flexible applications.","spr_content":"- Component communication in React entails managing data flow and interactions among components.  <hr />- Decoupling enhances reusability, maintainability, and reduces ripple effects of changes.  <hr />- Core patterns: props drilling, lifting state, Context API, event emitters, global stores, custom hooks.  <hr />- Props drilling: passing data through parent to child via props; manageable in shallow hierarchies.  <hr />- When to avoid props drilling: deep trees, large apps; scalability issues, refactoring difficulty.  <hr />- Lifting state up: move shared state to nearest common ancestor to streamline data sharing among siblings; effective for forms.  <hr />- Context API: provides global-like state without props drilling; ideal for infrequent updates (themes, user info).  <hr />- Overuse of Context for dynamic data causes re-renders; prefer for static or rarely changing data.  <hr />- Event emitter pattern: pub/sub model for loosely coupled communication; publish events, subscribe elsewhere.  <hr />- Use cases: global notifications, decoupled actions; potential debugging complexity due to asynchronous nature.  <hr />- Global store (Redux/Zustand): centralized, consistent application state; ideal for complex, cross-component data.  <hr />- Examples: managing notifications, user sessions, or shared async data; adds boilerplate but scales well.  <hr />- Custom hooks: encapsulate reusable logic and side effects; facilitate sharing functionality without deep nesting.  <hr />- Use custom hooks for fetches, subscriptions, or any reusable side effect; promotes clean, modular code.  <hr />- Overall: small, simple hierarchies favor props/state; mid-large apps benefit from Context, event emitters, or global stores; hooks maximize code reuse.","tags":"","authors":"","date":"","category":"playground > topics > frontend > react"},"783":{"file_path":"playground/topics/git/git.md","title":"Git","description":"Learn how Git, the popular version control system, helps developers track changes, manage branches, and collaborate effectively using workflows like GitHub flow and Git-flow for software development.","spr_content":"- Git is a mature, open-source version control system created in 2005 by Linus Torvalds.<hr />- It tracks changes in files, primarily used for collaborative source code development.<hr />- Git records all versions of a project from inception, managing revision history for traceability and collaboration.<hr />- A `snapshot` captures repository content at a specific point in time.<hr />- A `commit` records a snapshot, referencing its parent commit for history tracing.<hr />- A `branch` is like a tree branch containing commits; creating a new branch diverges from an existing base.<hr />- A `repository` contains project files and history; exists as local (personal workspace) or remote (cloud hosting via platforms like GitHub).<hr />- Effective use of Git involves workflows such as GitHub flow (lightweight, branch-based, continuous deployment) and Git-flow (structured, multi-branch, suitable for large projects).<hr />- GitHub flow uses feature branches from `master`, with steps: develop, review, deploy, merge.<hr />- Git-flow involves `develop`, `master`, and supporting branches (`feature/*`, `release/*`, `hotfix/*`) for managing complex projects, releases, and urgent fixes.<hr />- Dwarves Foundation customizes git-flow by adding environments (`develop`, `testing`, `staging`, `production`) with version tags (`v*.*.*`, `-rc`, `-alpha`).<hr />- Practices include choosing workflows based on project size, team collaboration, or version management needs.<hr />- Git's complexity often stems from multiple structures: commits, branches, remotes, files states, statuses, and history navigation commands.<hr />- Core concepts: structure (commit, branch), location (remote, local), file states (tracked, untracked), actions (checkout, reset, merge, rebase).<hr />- Commands manipulate the commit tree: `merge`, `rebase`, `cherry-pick` for node movement; `amend`, `squash`, `rebase` for altering history.<hr />- Viewing history through `log`, `reflog`; references include `HEAD`, `tag`.<hr />- Git functions as a time machine, enabling traveling back and forth within project history, providing powerful control over development flow.<hr />- Mastery of mental models and core commands is key to effective Git use, avoiding panic in complex operations like rebase or squash.","tags":"","authors":"","date":{"days":18850},"category":"playground > topics > git"},"784":{"file_path":"playground/topics/golang/atomic-package-in-golang.md","title":"Atomic package in golang","description":"Learn how to solve race conditions in Go by using the sync/atomic package for atomic operations and pointers, offering faster and simpler alternatives to mutex locks in concurrent programming.","spr_content":"- Asynchronous function execution in Go can cause race conditions when updating shared variables.<hr />- Race conditions manifest as inconsistent or incorrect aggregate values after concurrent increments.<hr />- Mutex locks serialize access, ensuring correctness, but increase complexity and impact performance.<hr />- `sync/atomic` provides low-level atomic primitives for safe concurrent memory access.<hr />- Atomic functions like `atomic.AddInt32()` perform lock-free atomic modifications, improving speed.<hr />- Benchmarks show atomic operations outperform mutexes by approximately 33% in typical update scenarios.<hr />- `sync/atomic` supports types: int32, int64, uint32, uint64, and pointers.<hr />- Atomic pointer usage facilitates safe concurrent updates to complex objects, such as JWT tokens, via `atomic.Value`.<hr />- Atomic pointer operations (`Load()`, `Swap()`) enforce safe read/write without explicit mutexes.<hr />- Combining atomic primitives with Go's concurrent model simplifies code and reduces data races.<hr />- Mutexes are still necessary for complex critical sections; atomics excel in simple shared state updates.<hr />- The atomic package encapsulates low-level synchronization, enabling scalable, lock-free resource management.<hr />- Overall, atomic types are effective for lightweight, lock-free, shared-memory updates, especially with pointers to complex data.","tags":"","authors":"","date":{"days":19213},"category":"playground > topics > golang"},"785":{"file_path":"playground/topics/golang/circuit-breaker-in-go.md","title":"Circuit breaker in go","description":"Learn how to implement the circuit breaker pattern in Go to handle remote resource failures, improve fault tolerance, and redirect requests using the sony/gobreaker library for reliable API calls.","spr_content":"- Application depends on remote resources prone to transient faults (network slowness, timeouts, unavailability).  <hr />- Need quick failure or redirection via circuit breaker pattern to maintain resilience.  <hr />- Circuit breaker has three states: Closed, Open, Half-Open.  <hr />- Closed: normal request flow, failure count accumulates within a set duration, switching to Open upon exceeding threshold.  <hr />- Open: requests fail immediately with exceptions, after timeout switch to Half-Open.  <hr />- Half-Open: limited requests allowed; success count can restore to Closed, failures revert to Open.  <hr />- State transitions depend on failure/success metrics and timers.  <hr />- Go implementation involves: initializing settings with Name, MaxRequests, Interval, Timeout; creating breaker with `gobreaker.NewCircuitBreaker`.  <hr />- Calls to resources are wrapped in `Execute()`, returning server response or specific errors based on state.  <hr />- `getResource()` makes HTTP GET; errors handled according to status code, with certain errors (4xx) possibly ignored for failure counting.  <hr />- Handling include logging successes and failures; customize readiness to trip for certain 5xx errors or connection issues.  <hr />- During Open/Half-Open, can redirect to backup services or serve cached responses.  <hr />- Transition testing via health-check APIs or periodic pings, not only timers.  <hr />- Use cases: unstable APIs, IOT checks, P2P, chatrooms, gaming.  <hr />- Authorities recommend covering services with similar failure patterns and proper timeouts to avoid extended blocking.  <hr />- For robust resilience, combine circuit breaker with logging, fallback, and health checks.  <hr />- References: Azure's pattern, sony/gobreaker, health-check APIs.","tags":"","authors":"","date":{"days":19540},"category":"playground > topics > golang"},"786":{"file_path":"playground/topics/golang/level-up-your-testing-game-with-gomock.md","title":"Level up your testing game with gomock","description":"Learn how to use Gomock in Go to create mock objects, isolate dependencies, and write effective unit tests that improve code quality and detect bugs early.","spr_content":"Gomock in Go facilitates dependency mocking during testing, enabling unit isolation and focused test coverage. It streamlines mock creation via `mockgen`, which generates mock implementations from interfaces in source files, stored in designated mock files. The testing workflow involves identifying dependencies, generating mocks, importing them, setting expectations with `EXPECT()`, executing tests, and verifying call order and arguments. Installation requires `go get` for `gomock` and `go install` for `mockgen`. During tests, mock objects are instantiated with `gomock.NewController`, expectations are defined, and `Finish()` ensures proper cleanup. This methodology supports thorough testing, early bug detection, and improved code quality by isolating components. Practical application includes mocking user repositories in authentication flows, verifying behavior with specific parameters or wildcards, thus replacing real dependencies with controlled mocks. Ultimately, Gomock enhances testing reliability and maintains code robustness, with resources available for deeper learning.","tags":"","authors":"","date":{"days":19577},"category":"playground > topics > golang"},"787":{"file_path":"playground/topics/golang/test-doubles.md","title":"Test doubles","description":"Learn how to use Test Doubles like Dummies, Stubs, Spies, Mocks, and Fakes in Go to isolate dependencies, improve unit testing, and enhance software reliability and maintainability.","spr_content":"Test Doubles replace dependencies in testing to control behavior and isolate units.  <hr />Five types include:  <hr />- Dummy: minimal, fulfill parameter needs, no impact on behavior.  <hr />- Stub: provide fixed responses; simulate external services; test error conditions.  <hr />- Spy: record interactions; verify method calls, parameters, call counts; ensure proper collaboration.  <hr />- Mock: set explicit expectations; verify interactions match; simulate behavior and enforce usage patterns.  <hr />- Fake: simplified real implementation; replace resource-heavy dependencies; enable faster, predictable tests.  <hr /><hr />Use cases:  <hr />- Isolating code from unreliable external services, APIs, databases; prevents dependency issues.  <hr />- Reproducing hard-to-reach code paths: network failures, timeouts, errors.  <hr />- Testing in controlled environments for reliability, repeatability, and speed; reduces flaky tests.  <hr /><hr />Motivation for applying Test Doubles:  <hr />- Decouple code from dependencies, enabling focus on unit logic.  <hr />- Improve test precision, eliminate external variability.  <hr />- Facilitate early bug detection, rapid feedback cycles.  <hr /><hr />In Go context:  <hr />**Dummies**: satisfy argument requirements, do nothing, e.g., `DummyLogger`.  <hr />**Stubs**: return fixed data or errors, e.g., `StubWeatherService`.  <hr />**Spies**: monitor call details, e.g., `SpyPaymentGateway`.  <hr />**Mocks**: define call expectations, verify order and parameters, e.g., `MockEmailSender`.  <hr />**Fakes**: full but simplified implementations, e.g., in-memory file storage.  <hr /><hr />Favor explicit purpose and interaction verification per test type.  <hr />Employ Test Doubles strategically for reliable, isolated, fast, and meaningful tests, ultimately enhancing code quality and debugging efficiency.","tags":"","authors":"","date":{"days":19577},"category":"playground > topics > golang"},"788":{"file_path":"playground/topics/golang/testing-made-simple-best-practices-for-golang-test.md","title":"Testing made simple best practices for golang test","description":"Learn the best practices for testing in Golang, including writing effective test cases with the AAA pattern, organizing tests with subtests and helpers, using table-driven tests, and applying test doubles and mocks.","spr_content":"- Testing in Golang emphasizes best practices for effectiveness and maintainability.<hr />- Writing effective test cases involves characteristics like readability, independence, focus, completeness, and maintainability.<hr />- The AAA pattern—Arrange, Act, Assert—organizes test cases clearly: setup, action, verification.<hr />- Arrange sets up preconditions and initializes objects; Act performs the core operation; Assert verifies outcomes.<hr />- Structuring tests with AAA enhances clarity, isolating behaviors, and ensuring comprehensive coverage.<hr />- Example: testing an `Add` function with clear AAA sections simplifies understanding and debugging.<hr />- Test organization favors keeping test files in the same directory as source files for simplicity.<hr />- Example structure: project folders align package files and test files for intuitive navigation.<hr />- Subtests group related tests, improving output clarity and debugging precision.<hr />- Test helpers promote code reuse and DRY principles, reducing duplication in assertions.<hr />- Example helper: `assertEqual` simplifies repeated assertions, boosting readability.<hr />- Table-driven tests manage multiple input-output scenarios efficiently, enabling easy addition of cases.<hr />- Example: testing email validation with a slice of test case structs, iterated with subtests.<hr />- Success relies on descriptive naming, variable structuring, and clear expectations for each case.<hr />- Test doubles mimic real dependencies: stubs, mocks, dummies, spies, fakes, each serving distinct roles.<hr />- Test doubles isolate code, remove external variability, and facilitate testing edge cases and failures.<hr />- Mocks like testify, gomock, mockery help define expected behaviors, verify interactions, and reduce boilerplate.<hr />- Using mocking libraries ensures controlled, repeatable, and reliable tests by simulating dependencies.<hr />- Overall, combining AAA, organized structure, table-driven testing, and test doubles optimizes Go testing strategies.<hr />- References provide detailed protocols and best practices from authoritative sources.","tags":"","authors":"","date":{"days":19577},"category":"playground > topics > golang"},"789":{"file_path":"playground/topics/llm/q-learning.md","title":"Q Learning","description":"An introduction to Q-learning, a model-free reinforcement learning algorithm used to learn optimal policies in Markov Decision Processes.","spr_content":"- Q-learning is an off-policy, model-free reinforcement learning algorithm targeting optimal policies in Markov Decision Processes.<hr />- It learns from observed experiences, updating value estimates based on maximum expected future rewards, not on policy following.<hr />- Core components: agent, environment, state, action, reward, episode, policy.<hr />- The agent interacts via exploration-exploitation strategies, initially populating the Q-table with arbitrary values.<hr />- Q-table rows represent states; columns, actions; Q-values reflect expected rewards.<hr />- Each step: select action, execute, observe reward and next state, update Q-value with Bellman equation.<hr />- Iteratively repeats until convergence or iteration limit.<hr />- Limitations: high storage demand for large state-action spaces, difficulty with complex/interdependent environments, incompatibility with continuous states without approximation.<hr />- Deep Q-Learning extends Q-learning using neural networks as function approximators for high-dimensional states.<hr />- Uses epsilon-greedy strategy to balance exploration and exploitation.<hr />- Challenges include scalability, capturing long-term dependencies, and handling continuous states.<hr />- Variations aim to mitigate these issues, improving applicability in complex, real-world tasks.<hr />- References: techTarget article, Hugging Face Deep RL course.","tags":"ai llm machine-learning","authors":"thanhpn","date":{"days":19530},"category":"playground > topics > llm"},"790":{"file_path":"playground/topics/mobile/data-race-and-race-condition.md","title":"Data race and race condition","description":"Learn the difference between data race and race condition in multithreaded programming, and discover how mutex and atomic operations ensure data safety by controlling access to shared resources.","spr_content":"- Data Race: occurs when multiple threads access shared resource, with at least one writing; simultaneous reads are safe.<hr />- Confusing Data Race with Race Condition; related but distinct issues.<hr />- Shared resource: variable or object accessed by threads.<hr />- Conditions for Data Race: ≥2 threads access shared resource; at least one modifies it.<hr />- Example: ATM withdrawal contest—concealed data races if concurrent access isn't synchronized.<hr />- Solution: serialize access—only one thread manipulates shared resource at a time via critical sections.<hr />- Critical section: code region for reading/writing shared resource.<hr />- Mutex (mutual exclusion): mechanism to ensure single-thread access to critical section.<hr />- Atomic operation: executes as indivisible step, uninterruptible.<hr />- Beware deadlocks—permanent lock if mutex isn't released.<hr />- Race Condition: focuses on order/timing of thread execution, causing unexpected outcomes.<hr />- Data Race: focuses on value overwrites, leading to incorrect reads.<hr />- Similar solutions: enforce one thread in critical section at a time.<hr />- Relationship: Data Race can cause Race Condition; Race Condition can exist without Data Race.<hr />- Data Race ≠ Race Condition; they can occur independently.<hr />- Example of Race Condition: unsynchronized concurrent thread execution altering outputs unpredictably.<hr />- Example of Data Race without Race Condition: threads changing data without affecting sequence or outcome.<hr />- Summary: understanding differences essential; both cause unpredictable behaviors.<hr />- References for deeper understanding: links provided.","tags":"","authors":"","date":{"days":19337},"category":"playground > topics > mobile"},"791":{"file_path":"playground/topics/mobile/kotlin-coroutine-lifecycle.md","title":"Kotlin coroutine lifecycle","description":"Learn the difference between CoroutineScope and CoroutineContext, understand the Job lifecycle states, and discover how cooperative cancellation works in Kotlin coroutines for effective concurrency control.","spr_content":"- Coroutine is structured concurrency, managing flow to complete or cancel tasks reliably.  <hr />- Each coroutine has its own lifecycle and scope, represented by CoroutineContext and CoroutineScope.  <hr />- CoroutineScope manages relationships and parent-child hierarchy; builders like launch/async extend from it.  <hr />- CoroutineContext stores execution parameters: name, dispatcher, threading info; not lifecycle-aware by default.  <hr />- Coroutine scope controls coroutine launching and structure; CoroutineContext provides threading/details.  <hr />- Coroutine lifecycle linked to Job, which is a cancellable object with a defined state machine.  <hr />- Job states: New (not active), Active (running), Completing (finishing), Cancelling (shutting down), Cancelled (final, terminated), Completed (done).  <hr />- Transitions: start, cancel, complete; cancelling is cooperative, requires code to check for cancellation.  <hr />- Cancellation is a dialog: must be cooperative; functions like delay/yield handle it internally.  <hr />- Without explicit checks, mid-computation cancellation may not occur; e.g., infinite loops require isActive checks.  <hr />- Use `isActive` in long loops for graceful cancellation responsiveness, conserving computation.  <hr />- Coroutine cancellation involves state flags: isActive, isCancelled, isCompleted, managed via Job states.  <hr />- Internal Job state transitions: waiting for children to finish before completing.  <hr />- Cancellability depends on cooperative design, not automatic interruption.  <hr />- Summary: Coroutine scope manages structure; context supplies threading; Job lifecycle states define cancellation and completion.  <hr />- Effective cancellation requires explicit cooperation in coroutine code, using delay, yield, `isActive`, and cancel functions.","tags":"","authors":"","date":{"days":19275},"category":"playground > topics > mobile"},"792":{"file_path":"playground/topics/mobile/kotlin-coroutine.md","title":"Kotlin coroutine","description":"Learn Kotlin coroutines basics, structured concurrency, and how lightweight threads improve concurrent programming with examples of coroutine cancellation and job lifecycle.","spr_content":"- Kotlin 1.3 introduces coroutines as lightweight threads.<hr />- Coroutines enable suspendable, concurrent computation, decoupled from specific threads.<hr />- Coroutines can suspend and resume across different threads, maintaining concurrency.<hr />- Structured concurrency encapsulates coroutines, ensuring controlled entry and exit, and completion of all child tasks before the parent terminates.<hr />- The breakfast analogy illustrates collecting parallel tasks with dependencies: bread, eggs, dish.<hr />- Coroutines obey parent-child relationships: no child outlives parent; parent waits for children to finish.<hr />- Errors in children are contained and properly propagated due to structured concurrency.<hr />- Kotlin coroutines use builders like `runBlocking` (bridges non-coroutine to coroutine code) and `launch` (starts independent coroutines).<hr />- `delay()` is a non-blocking suspend function, similar to sleep but allows thread sharing.<hr />- Cancellation in coroutines involves the Job lifecycle, transitioning through states: New, Active, Completing, Completed, Cancelling, Cancelled.<hr />- Parent waits for child coroutines to reach `Completed` before their own completion, influenced by functions like `delay()` which are `suspendCancellableCoroutine`.<hr />- Cancellation of parent propagates to children if they are at cancellable points; children can also persist beyond parent cancellation if designed.<hr />- Examples demonstrate that delays cancel on parent cancellation due to `suspendCancellableCoroutine` behavior.<hr />- Coroutines are significantly lighter on resources compared to JVM threads.<hr />- Launching 1000 coroutines consumes less memory than launching 1000 threads, evidenced by code snippets.<hr />- Resources: articles on structured concurrency, Kotlin coroutine documentation, and coroutine lifecycle explanation.","tags":"","authors":"","date":{"days":19241},"category":"playground > topics > mobile"},"793":{"file_path":"playground/topics/mobile/scale-up-application-using-jetpack-navigation.md","title":"Scale up application using Jetpack navigation","description":"Learn how to simplify Android app navigation with Jetpack Navigation Component, handling fragment transitions, dynamic start destinations, modular flows, and integration with Firebase Analytics.","spr_content":"- Traditional fragment navigation relies on `FragmentManager` and `FragmentTransaction`.<hr />- This approach manages embedded fragments, backstack, and custom transition animations but is complex, stability-challenging, and testing-intensive.<hr />- Jetpack Navigation (from 2018/2019) simplifies fragment transactions, back/back actions, animations, deep links, and navigation UI patterns with minimal code.<hr />- Benefits include type-safe argument passing (`Safe Args`) and `ViewModel` scope sharing.<hr />- Disadvantages include XML navigation graphs vs. Kotlin code fragmentation, detailed action and argument definitions per destination, and added steps for Firebase Analytics compatibility.<hr />- Handling large apps (~100 screens) with extensive XML graphs leads to complexity and potential errors.<hr />- Dynamic start destinations (based on login state) challenge fixed `startDestination` in XML graphs.<hr />- Modular architecture with separate activities and navigation graphs per module offers maintainability.<hr />- Use `ActivityResultContract` for activity-to-activity communication, replacing nested fragment navigation for better state management.<hr />- Define navigation results with custom contracts (`TransferDetailContract`) and handle results via `registerForActivityResult`.<hr />- Passing data: set intent extras on results and retrieve them in target activities.<hr />- To minimize extra actions and arguments, embed navigation logic within EntryFragments, handling navigation dynamically based on passed `TransferNavigator`.<hr />- Each module's EntryFragment initializes navigation state, avoiding fixed `startDestination` and managing navigation centrally.<hr />- Overall, modular, activity-based navigation with `ActivityResultContracts` and dynamic EntryFragments offers scalable, maintainable, and flexible navigation in large apps.","tags":"","authors":"","date":{"days":19310},"category":"playground > topics > mobile"},"794":{"file_path":"playground/topics/mobile/secret-management-on-ios.md","title":"Secret management on iOS","description":"Learn the best ways to securely manage and store secrets in iOS apps, from code obfuscation to why keeping secrets off the client is the safest approach for developers.","spr_content":"- iOS secret management is often mishandled due to lack of official best practices and the platform’s sandboxing, which complicates reverse engineering.<hr />- Developers tend to store secrets directly in source code, exposing them to reverse tools and source control risks.<hr />- Externalizing secrets via xcconfig files and Info.plist improves some security but leaves secrets in plaintext within the app bundle.<hr />- Obfuscation methods combining code generation (Python + Swift) can hinder straightforward reverse engineering but cannot eliminate exposure.<hr />- Ultimately, storing secrets on-device is inherently insecure; the only secure method involves shifting secrets to secure backend services.<hr />- Client secrecy is effectively an anti-pattern; SDKs with embedded secrets increase threat vectors.<hr />- The best practice: avoid embedding secrets on the client; if unavoidable, employ obfuscation as a supplementary measure.<hr />- Recognize client secret management as a security anti-pattern; design applications to minimize reliance on client-held secrets.","tags":"","authors":"","date":{"days":19244},"category":"playground > topics > mobile"},"795":{"file_path":"playground/topics/mobile/stateless-and-stateful-widgets-in-flutter.md","title":"Stateless and stateful widgets in Flutter","description":"Learn the key differences between stateless and stateful widgets in Flutter, including how each manages UI state and when to use them for dynamic or static app interfaces.","spr_content":"- State: the readable, synchronously accessible info when widget builds; may change over widget's lifetime.  <hr />- State signifies mutable aspects within a widget, e.g., a liked button toggling filled/empty.  <hr />- Constant widgets have no state; their display does not change regardless of user interaction.  <hr />- Stateless widgets are immutable post-construction; their build() method runs once, rendering static UI.  <hr />- Stateless widgets depend solely on internal data passed or hardcoded, e.g., Text, Icon, RaisedButton.  <hr />- build() in stateless widget executes once, providing a fixed widget tree during app lifecycle.  <hr />- When parent widget updates, stateless widget can reinitialize and rebuild.  <hr />- Stateful widgets are mutable; their state can change, enabling dynamic UI changes during runtime.  <hr />- Stateful widget creates a mutable State object via createState(); the State manages UI and data.  <hr />- setState() triggers UI refresh, updating the widget tree whenever the state mutates.  <hr />- Examples of stateful widgets include CheckBox, RadioButton, Form, TextField.  <hr />- Both widget types have distinct roles: stateless for static, immutable parts; stateful for interactive, dynamic parts.  <hr />- Stateless: static, depend on external/input data, no internal state changes after build.  <hr />- Stateful: interactive, maintain internal state, re-render when data or user interaction changes.","tags":"","authors":"","date":{"days":19247},"category":"playground > topics > mobile"},"796":{"file_path":"playground/topics/mobile/swift-5-4-resultbuilder.md","title":"Swift 5 4 resultbuilder","description":"Learn how to use Swift’s @resultBuilder and UIKit Builder pattern to create flexible container views like UIStackView with clean, DSL-style code for easier UI development in Swift.","spr_content":"- UIKit Builder pattern facilitates creation and configuration of UIViews via wrapping techniques.  <hr />- Part two of the series focuses on wrapping container elements using Swift's builder capabilities.  <hr />- Function Builders in SwiftUI enable declarative UI construction, exemplified by VStack syntax.  <hr />- Swift 5.4 introduces `@resultBuilder`, extending DSL capabilities beyond SwiftUI into general Swift code, simplifying nested UI code.  <hr />- Example: Writing HTML in Swift using `HTML`, `Body`, `P`, and `DIV` DSL syntax.  <hr />- UIKit can be extended to a DSL style, mimicking SwiftUI, using builder patterns for container views.  <hr />- Traditional UIKit code involves explicit `addSubview` calls; DSL style enables more natural, declarative syntax.  <hr />- The core idea: wrap multiple UIViews into constructs like `UIHStack`, `UIVStack`, which accept closures annotated with `@UIViewBuilder`.  <hr />- `UIViewBuilder` uses a static `buildBlock` method returning an array of UIViews, streamlining `addSubview` management.  <hr />- The reason for returning `[UIView]` (array) instead of single `UIView` is to handle multiple subviews seamlessly within the builder.  <hr />- Convenience subclasses of `UIStackView` (e.g., `UIVStack`, `UIHStack`) utilize `@UIViewBuilder` to accept UI component lists and set layout properties automatically.  <hr />- These classes enable declarative UI composition similar to SwiftUI but built with UIKit components.  <hr />- `UIZStack` wraps a list of views directly into a container with layout logic, handling subview addition and constraints internally.  <hr />- Combining builder techniques with UIKit allows for nested, complex UIs resembling SwiftUI structure.  <hr />- Example of advanced layout with nested `UIVStack` and `UIZStack`, including animations and actions, illustrating declarative complexity.  <hr />- Support `if-else` and `for-in` loops inside build blocks using `buildEither` and `buildArray`, enabling conditional and iterative UI creation.  <hr />- Example: Conditional background color and dynamic image views within `UIHStack`.  <hr />- Container configuration can be customized via init parameters like `alignment`, `spacing`, and layout options, enabling flexible styling.  <hr />- Final benefit: building UI declaratively with concise, readable syntax akin to SwiftUI, but using UIKit’s richness.","tags":"","authors":"","date":{"days":19235},"category":"playground > topics > mobile"},"797":{"file_path":"playground/topics/mobile/the-structure-of-the-command-line-app.md","title":"The structure of the command line app","description":"Learn how to build powerful Xcode command line tools using Swift, covering CLI app structure, commands, options, flags, and creating custom build tools for automation and safer coding.","spr_content":"- CommandLine tools are lightweight, fast, and versatile; used for navigation, file management, version control.<hr />- Built-in command line tools located in `/usr/bin`, `/usr/local/bin`.<hr />- Command line tools enable automation, build, release (Jenkins, Fastlane), and UI wrappers.<hr />- Capabilities limited only by imagination; can be embedded in scripts and UIs.<hr />- An XCode build tool with Swift can convert assert catalogs to Swift files for safety, auto-complete, and compile-time checks.<hr />- SwiftCLI is portable beyond XCode, usable in shell scripts.<hr />- CommandLine app structure: `command [arguments] [options] [flags]`.<hr />- Main command (`git`, `cd`, `ls`) is analogous to launching an app.<hr />- Arguments pass data; positional; fixed order; optional with defaults.<hr />- Options are key-value pairs with hyphens, flexible order: `-m`, `--message`.<hr />- Flags are options without values (`-f`, `-h`).<hr />- Long options (`--force`) have shorter versions (`-f`) for convenience.<hr />- Subcommands (`git checkout`, `git commit`) specify features, have own options/flags.<hr />- Default command executes with no subcommand, often shows help.<hr />- Help system: `command --help`, `-h`, `-?`, providing usage details.<hr />- `help` subcommand or flag clarifies commands, options, subcommands quickly.<hr />- Mistakes in commands trigger automatic help messages, aiding learning.<hr />- Reference: recognizing CLI structure, syntax, and user guidance enhances tool design and understanding.","tags":"","authors":"","date":{"days":19253},"category":"playground > topics > mobile"},"798":{"file_path":"playground/topics/mobile/uikit-builder-pattern.md","title":"UIKit builder pattern","description":"Learn how to build reusable, flexible UIKit user interfaces using the builder pattern with Swift extensions and @discardableResult for cleaner, declarative UI code.","spr_content":"- SwiftUI enables declarative UI programming paradigms, emphasizing composition and clear structure.  <hr />- UIKit traditionally employs imperative, step-by-step UI construction.  <hr />- Adapting a declarative builder pattern to UIKit involves wrapping components for chainable configuration, mimicking SwiftUI’s syntax.  <hr />- Builder pattern encapsulates component creation and setup, promoting reusability and readability.  <hr />- Sample code demonstrates creating nested UIViews with chainable property setters, similar to SwiftUI’s declarative style.  <hr />- For simple UI, direct imperative code (e.g., initializing UITextFields, setting properties) suffices, but scales poorly.  <hr />- For larger projects, adopting styling subclasses (`MyStyleBlackTextFiled`) or configuration methods supports reuse but introduces code duplication and inflexibility.  <hr />- Configuration functions with parameters (`config(...)`) provide a flexible approach, but become unwieldy as properties diversity grows.  <hr />- SWIFT `@discardableResult` allows chainable method results without compiler warnings, facilitating fluent APIs.  <hr />- Extensions extend existing classes with chainable, configurable methods (e.g., `text(_:)`, `textColor(_:)`), returning `self`.  <hr />- Combining `@discardableResult` with extensions yields reusable, flexible, chainable builders maintaining original type—replicating declarative style in UIKit.  <hr />- Chainable styles (`myRedStyle()`) via extensions encapsulate common configurations as reusable, composable methods.  <hr />- The approach bridges imperative UIKit and declarative SwiftUI paradigms, enabling scalable, maintainable UI code aligned with modern declarative principles.","tags":"","authors":"","date":{"days":19209},"category":"playground > topics > mobile"},"799":{"file_path":"playground/topics/personas/disc-personality-types-in-team-work.md","title":"Disc personality types in team work","description":"Learn about the DiSC personality model's four types—Dominance, Influence, Steadiness, and Conscientiousness—and how understanding these traits improves teamwork and communication.","spr_content":"DiSC is a model categorizing personality profiles into four main types:  <hr />- D (Dominance): Results-oriented, confident, direct, aggressive. Keywords: results focus, big picture, assertive.  <hr />- i (Influence): Persuasion-driven, enthusiastic, energetic, relational. Keywords: expressive, friendly, spontaneous.  <hr />- S (Steadiness): Cooperative, loyal, calm, deliberate. Keywords: dependable, warm, patient.  <hr />- C (Conscientiousness): Quality-focused, accurate, reserved, detail-oriented. Keywords: precise, competent, structured.  <hr /><hr />Each type has distinctive behaviors and communication cues, and understanding these helps improve teamwork and collaboration.  <hr />- D: work fast, direct, decisive; respect results; assertiveness is key.  <hr />- i: be approachable, positive, expressive; emphasize big ideas; foster enthusiasm.  <hr />- S: provide stability, patience, clarity; respect need for peace; be gentle in feedback.  <hr />- C: value accuracy, details; prepare well; stick to facts; expect quality.  <hr /><hr />Complementary pairs:  <hr />- Blue + Red: task-focused, results-oriented, minimal regard for relationships.  <hr />- Yellow + Green: relationship-focused, empathetic, caring about feelings.  <hr /><hr />Natural tendencies:  <hr />- Blue + Green: introverted, reserved, slow-paced.  <hr />- Red + Yellow: extroverted, active, energetic.  <hr /><hr />Challenging pairings:  <hr />- Red + Green: active vs. passive, aligned with work style friction.  <hr />- Blue + Yellow: logic vs. intuition, potential misunderstandings.","tags":"","authors":"","date":{"days":19245},"category":"playground > topics > personas"},"800":{"file_path":"playground/topics/personas/mbti/build-productive-team.md","title":"Build productive team","description":"Use personality assessments in onboarding, promote diverse teams, rotate roles by project stages, and understand your own style to boost team success and project outcomes.","spr_content":"Personality assessments serve as strategic tools for team enhancement. Integrate assessments into onboarding to quickly align expectations. Promote diversity by selecting varied personality types to foster innovation. Rotate team roles according to project phases, leveraging different strengths. Encourage self-awareness of individual styles to optimize collaboration. These methods, exemplified by Zapier practices, improve project success by aligning team dynamics with computational personality insights.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"801":{"file_path":"playground/topics/personas/mbti/theory-team-building-based-on-mbti.md","title":"Theory team building based on mbti","description":"Discover the four temperaments—Guardians, Artisans, Idealists, and Rationals—and how they shape communication, action, and personality based on Myers-Briggs and David Keirsey's insights.","spr_content":"- Temperaments originate from interactions between communication and action dimensions in human behavior.<hr />- Communication dimension: Concrete (reality-focused) vs. Abstract (idea-focused).<hr />- Action dimension: Cooperative (rightness-driven) vs. Utilitarian (effectiveness-driven).<hr />- Words (communication) and deeds (action) are fundamental to temperament.<hr />- Keirsey's four temperaments reclassify Myers-Briggs types based on these dimensions.<hr />- Guardians combine sensation and judgment; excel in logistics, reliability, convention, duty, and hierarchy; seek community and respect.<hr />- Artisans combine sensation and perception; excel in tactics, spontaneity, resourcefulness; value artistry, improvisation, mastery, and fun.<hr />- Idealists combine intuition and feeling; excel in diplomacy, kindness, encouragement; value empathy, integrity, growth, and understanding.<hr />- Rationals combine intuition and thinking; excel in strategy, calmness, skepticism; value inventiveness, success, expertise, and autonomy.<hr />- The four temperaments reflect core behavioral patterns rooted in how individuals communicate and act.","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"802":{"file_path":"playground/topics/qa/boundary-and-equivalence-partitioning-testing.md","title":"Boundary and equivalence partitioning testing","description":"Learn how equivalence partitioning and boundary value analysis reduce test cases while ensuring full functional testing coverage for software input ranges and boundary conditions.","spr_content":"- Functional testing verifies operation behavior by input-output observation, independent of code knowledge.<hr />- Infinite tests possible; techniques reduce necessary tests while maintaining coverage.<hr />- Equivalence Partitioning divides inputs into classes representing similar system behavior.<hr />- Boundary Value Analysis tests at edges: minimum, just above minimum, nominal, just below maximum, maximum.<hr />- Boundary testing examines values at and near input boundaries to identify potential defects.<hr />- Equivalence partitions simplify testing by representing all inputs in a class with a single test case.<hr />- Boundary testing complements equivalence partitioning by focusing on partition edges.<hr />- Large input spaces require reduction to manageable test sets without sacrificing effectiveness.<hr />- Example: Beer order 1-10 valid; less than 1 or over 10 invalid; 3-digit numbers invalid.<hr />- Use partitions to select representative test cases, assuming uniform behavior within a class.<hr />- Boundary techniques efficiently expose edge-related defects, especially in calculation-heavy systems.<hr />- Boundary and equivalence techniques together optimize test coverage with minimal cases.","tags":"","authors":"","date":{"days":19318},"category":"playground > topics > qa"},"803":{"file_path":"playground/topics/qa/test-cases-breakdown-structure.md","title":"Test cases breakdown structure","description":"Learn how to manage manual and automated test cases in one documentation using clear naming, separating functional and non-functional tests, and updating early for efficient software testing.","spr_content":"Sparse Priming Representation:<hr /><hr />- Self-experience: managing combined manual and automation test cases in one project; integrating approaches.<hr />- Goal: unified documentation for all testers; simplifies writing and maintenance of test checklists.<hr />- Strategy: consistent terminology and naming conventions (e.g., AC for requirements); minimize term changes over time.<hr />- Requirements: few, often implicit, derived from page names.<hr />- Test case separation: functional vs non-functional.<hr />- Functional tests: encompass entire flow; verify main statuses; include validation/checkpoints as in-between steps.<hr />- Non-functional tests: validate UI points; document supported devices and viewports.<hr />- Repetition: reuse validation points across both categories as common validations.<hr />- Initiate writing early; ideally parallel to requirement gathering.<hr />- Example flows: payment process over 4 pages; user actions trigger updates in seller and admin management systems.<hr />- Flow illustration: visualized with structure diagrams (assets references).<hr />- Test structure: organized per process flow, incorporating both functional and non-functional aspects.<hr />- References: heuristics, mnemonics, test techniques, and design examples for enriching test case creation and management.","tags":"","authors":"","date":{"days":19338},"category":"playground > topics > qa"},"804":{"file_path":"playground/topics/ux/Mixed Methods/qualitative-and-quantitative-research-methods-each-have-trade-offs.md","title":"Qualitative and quantitative research methods each have trade offs","description":"Discover the key differences between qualitative and quantitative research methods, their strengths in explanation and measurement, and how each offers unique insights for better understanding data.","spr_content":"Quantitative methods emphasize scale and causation but reduce coherence and focus, demanding greater sensemaking effort. Qualitative methods provide coherence and contextual understanding but lack scale and explicit causation. Quantitative analysis is not inherently more reliable than qualitative; bias toward quantitative stems from cultural preference for scientific models. Both are different epistemologies—aimed at different knowledge types. Qualitative research explores context, explains, and builds mental models, facilitating divergent, flexible inquiry. Quantitative research measures amounts, prevalence, and converges data to identify patterns, favoring structured, closed-ended data collection. Sensemaking in qualitative is post hoc; in quantitative, it is integrated during analysis. Both approaches are complementary, not intrinsically superior.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"805":{"file_path":"playground/topics/ux/Mixed Methods/qualitative-and-quantitative-research-represent-different-philosophies-of-knowledge.md","title":"Qualitative and quantitative research represent different philosophies of knowledge","description":"Learn the key differences between qualitative and quantitative research, including their goals, methods, and how mixed-methods combine objective data with human context and meaning.","spr_content":"Quantitative research assumes an objective, stable reality, focusing on what is and how often. It emphasizes precision, scale, and measurement. Qualitative research views reality as subjective, emphasizing meaning, context, and human interpretation. Mixed methods combine philosophical perspectives, blending the search for factual explanation with understanding human reasons. Quantitative aims to quantify and generalize; qualitative aims to explain and contextualize. Reliability is not inherent to data type; they serve different epistemological ends.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"806":{"file_path":"playground/topics/ux/Mixed Methods/qualitative-research-creates-mental-models-about-the-problem-space.md","title":"Qualitative research creates mental models about the problem space","description":"Qualitative research builds deep understanding of people’s motivations and contexts, helping create better products by revealing what truly matters through open-ended, narrative-driven insights.","spr_content":"Qualitative research constructs mental models of contexts, problems, motivations; informs product and design understanding. It emphasizes high-level importance—what matters to people, their worldview. Uses open-ended questions; focuses on narrative synthesis, akin to Sensemaking. It builds perspectives based on evidence, which can be quantified later. Provides intuition about people and culture. Related to inductive and abductive reasoning; sample size concerns imply trust issues. Foundations support interpretive depth preceding quantitative validation.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"807":{"file_path":"playground/topics/ux/Mixed Methods/qualitative-research-excels-at-explanation.md","title":"Qualitative research excels at explanation","description":"Qualitative research explains causation using metaphors and narratives to create concepts for quantitative testing, offering deep insights beyond event frequency and complementing quantitative methods.","spr_content":"- Qualitative researchers use metaphor, narratives, and thought experiments to explain causation; these generate concepts for testing via quantitative methods.<hr />- Qualitative research prioritizes sensemaking and “unriddling” over event frequency.<hr />- Neither qualitative nor quantitative methods are inherently superior; each has trade-offs impacting suitability.<hr />- Bias exists toward quantitative methods, often due to abundance of data prompting a default to numerical analysis.<hr />- This bias can lead to negative consequences, such as reduced capacity to interpret qualitative insights.<hr />- The emphasis on quantitative approaches can overshadow qualitative nuances, limiting comprehensive understanding.<hr />- Recognizing the complementary nature of methods enhances research robustness; mixed methods integrate both.<hr />- The pursuit of \"hard\" data often oversimplifies complex phenomena that qualitative insights can elucidate.<hr />- Cultural biases favor scientific models, potentially marginalizing qualitative perspectives and interpretations.<hr />- The effective explanation of causation benefits from integrating metaphors, narratives, and experimental thought alongside quantitative validation.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"808":{"file_path":"playground/topics/ux/Mixed Methods/qualitative-researchers-care-more-about-data-saturation-than-sample-size.md","title":"Qualitative researchers care more about data saturation than sample size","description":"Learn how qualitative UX research focuses on data saturation over sample size to uncover key user insights and improve products through ongoing Agile feedback and diverse user interviews.","spr_content":"- Qualitative research prioritizes discovering high-level problems and mental models over measuring scale.  <hr />- Focus on data saturation: the point where additional data yields diminishing returns and broad trends are identified.  <hr />- Sample size varies with audience diversity, researcher experience, and problem scope, as argued by Seaman and Yocco.  <hr />- UX research benefits from iterative feedback due to the evolving nature of releases; each release is a new research opportunity, per Travis.  <hr />- Edge cases are deliberately sought to surface potential issues; they help uncover hidden problems.  <hr />- Appropriate sample size is crucial; small samples are unsuitable for quantitative comparisons like A/B testing.  <hr />- Qualitative results should avoid quantifying with percentages or confidence intervals that imply statistical certainty.  <hr />- Emphasizing that five out of six users experienced an issue may misrepresent the nature of qualitative insights.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"809":{"file_path":"playground/topics/ux/Mixed Methods/quantitative-analysis-is-not-inherently-more-reliable-than-qualitative-data.md","title":"Quantitative analysis is not inherently more reliable than qualitative data","description":"Quantitative analysis can be biased and limited, as data selection and interpretation depend on human judgment and may overlook context and deeper understanding of human behavior.","spr_content":"Quantitative analysis is often presumed more scientific but is inherently biased through data selection and interpretation.<hr /><hr />Data choices—what, how, why—are human decisions, molded by biases toward easily measurable data.<hr /><hr />Analysts' perspectives influence interpretation; same data set yields varied insights.<hr /><hr />Collected data may serve past patterns rather than meaningful current insights, driven by consistency, not relevance.<hr /><hr />Quantitative data is shallow; it sacrifices rich context, capturing what happened but not why—an lossy compression of understanding.<hr /><hr />Data measures only the past; it cannot inherently predict the future or account for black swan events.<hr /><hr />Overreliance on quantitative methods can hinder intuition about human and cultural complexity, per Madsbjerg.<hr /><hr />While useful, quantitative approaches emphasize scale and causation, risking loss of coherence and focus.<hr /><hr />Comparison with qualitative methods highlights differing philosophies: quantitative aims at measurement and causality, qualitative explores meaning and context.<hr /><hr />In sum, data is a tool with limitations; its utility depends on mindful application cognizant of biases, depth, and scope.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"810":{"file_path":"playground/topics/ux/Sensemaking/measuring-behaviour-changes-behaviour.md","title":"Measuring behaviour changes behaviour","description":"Measuring behavior often changes it, as people and organizations adjust actions to improve scores, making metrics unreliable and potentially harming long-term goals and trust.","spr_content":"Measuring behaviour induces change; observing alters actions.  <hr />Individuals modify behaviour when aware of measurement, often avoiding unmeasurable activities for measurable ones.  <hr />In reward/punishment systems, people adjust actions to improve scores, e.g., surgeons “cream,” avoid risky cases, or manipulate outcomes to protect hospital metrics.  <hr />Organizations prioritize short-term metrics over long-term goals, skewing focus.  <hr />Measurement transforms our relationship with work, increasing transactional interactions, reducing trust, and impacting hierarchy dynamics.  <hr />According to Muller, measures of human activity are unreliable when actors know they are observed; data reflects artificial behaviour.  <hr />Goodhart's Law states once a measure becomes a target, it loses validity; the act of measurement corrupts its utility.  <hr />Measures in human contexts are inherently fallible when reactions to measurement occur.  <hr />Measurement influences not only behaviour but also social bonds and organizational intimacy, often social distancing.","tags":"","authors":"","date":"","category":"playground > topics > ux > Sensemaking"},"811":{"file_path":"playground/topics/ux/Sensemaking/quant-data-is-lossy.md","title":"Quant data is lossy","description":"Reducing human activity to numbers often loses important context and rich qualitative data, showing that quantitative measures alone can't fully capture complex human behavior and experiences.","spr_content":"1. Human activity can be compressed into numbers, but this compression is lossy.  <hr />2. Many aspects of human behavior are intangible, invisible, or immeasurable; metrics cannot capture them fully.  <hr />3. Scorecards and dashboards simplify, but discard rich contextual data, creating a gap between behavior and measurement.  <hr />4. People are inherently messy; they do not conform to mechanistic input-output models.  <hr />5. Overreliance on quantitative data risks neglecting outside-the-data context, which shapes behavior.  <hr />6. Context significantly influences human thought and action; reducing actions to numbers strips away this influence.  <hr />7. Sensemaking shows that understanding human behavior requires thick, qualitative data—narratives, stories, and relationships.  <hr />8. Algorithmic thinking sacrifices the complex \"thick\" data that explains why people act as they do.  <hr />9. Standard measures and benchmarks improve comparability but degrade data quality and nuance.  <hr />10. Quantitative data is not inherently more reliable than qualitative data; both serve different epistemological purposes.  <hr />11. Storytelling exemplifies qualitative compression—reducing life's flux into archetypes and moral messages, capturing complexity in a simplified form.  <hr />12. Recognizing the limits of quantitative analysis is essential; qualitative insights preserve depth and context often lost in numbers.","tags":"","authors":"","date":"","category":"playground > topics > ux > Sensemaking"},"812":{"file_path":"playground/topics/ux/abundant-data-makes-us-jump-to-quantitative-data-as-the-solution-to-every-problem.md","title":"Abundant data makes us jump to quantitative data as the solution to every problem","description":"Explore why collecting too much data can mislead decision-making, highlighting the limits of quantitative analysis and the risks of relying on lagging indicators in uncertain situations.","spr_content":"- Modern life generates excessive data; pervasive, continuous tracking of movements, clicks, health metrics, and IoT devices.  <hr />- Data is abundant and cheap; termed \"data exhaust\" by Davis and Davidson.  <hr />- We devote more effort to collecting data than asking insightful questions about it, per Sam Ladner.  <hr />- Overreliance on numbers fosters a misconception that all answers are numeric; data can obscure as well as reveal.  <hr />- Data often conflates correlation with causation, providing ambiguity rather than clarity.  <hr />- Quantitative data is less reliable than presumed; it suffers from lossy abstraction and cannot fully capture intent.  <hr />- Interpretation of data varies among analysts, making objectivity limited.  <hr />- Easiest-to-collect data are typically lagging indicators, which are risky for strategic decision-making; they promote reactive strategies.  <hr />- Overemphasis on metrics erodes social trust, substituting qualitative relationships with quantitative measures.  <hr />- Quantitative analysis isn't inherently superior; qualitative insights are equally vital for understanding complexity.  <hr />- Relying solely on data risks oversimplification, neglecting uncertainty and the limits of predictability.  <hr />- The challenge lies in balancing data-driven approaches with interpretive, qualitative understanding to navigate uncertainty effectively.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"813":{"file_path":"playground/topics/ux/democratize-user-research-to-scale-user-research.md","title":"Democratize user research to scale user research","description":"Learn how democratizing research by sharing tasks with non-researchers helps large organizations scale insights and avoid bottlenecks without expanding research teams.","spr_content":"- Large organizations face a demand for research that can exceed internal capacity.  <hr />- Without scaling, research becomes a bottleneck for design and development.  <hr />- Growing the number of researchers is often difficult and inefficient.  <hr />- Democratizing research involves sharing research activities with non-researchers.  <hr />- This approach enables scaling of insights without expanding the research team.  <hr />- The research team shifts to a center of excellence model—providing models, templates, best practices, and playbooks.  <hr />- Guardrails from the center of excellence ensure research quality during democratization.  <hr />- Democratization should be scaled gradually, starting with lower complexity, evaluative research.  <hr />- Research specialists continue to handle generative, higher-complexity research activities.  <hr />- Accessibility and usability of research insights are crucial for effective action.  <hr />- Making research insights findable, consumable, and accessible prevents research from being pointless.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"814":{"file_path":"playground/topics/ux/four-theories-of-truth.md","title":"Four theories of truth","description":"Explore the four main theories of truth—correspondence, coherence, consensus, and pragmatic—to understand how claims are evaluated and applied across cultures and disciplines.","spr_content":"Four theories evaluate claims as true in epistemology:  <hr />1. Correspondence theory: truth equals alignment with observable reality.  <hr />2. Coherence theory: truth equals logical consistency within a set of beliefs.  <hr />3. Consensus theory: truth equals general agreement among credible authorities.  <hr />4. Pragmatic theory: truth equals practical usefulness or benefit.  <hr />These models serve as rubrics for critical evaluation, each applicable in different contexts.  <hr />Scientific methods exemplify correspondence by empirical testing; cultures like Singapore emphasize pragmatic validity.  <hr />Outcome-oriented practices favor pragmatism—truth in effectiveness—while others align with correspondence, assuming scientific grounding.  <hr />No theory is inherently superior; they are used collectively depending on situation.  <hr />In practice, communities often adopt consensus for expertise, sometimes bypassing individual scrutiny.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"815":{"file_path":"playground/topics/ux/good-research-starts-with-a-good-question.md","title":"Good research starts with a good question","description":"Effective research starts with a clear, focused question that guides inquiry and helps find solutions, making the process more targeted and valuable.","spr_content":"Good research begins with a clear question; clarity guides inquiry and avoids aimless pursuit of interesting but unhelpful leads. Early questions can be broad, like understanding others’ perspectives on a topic. Refinement of the question increases focus and usefulness of research. Emphasize spending time in the problem space before solutioning; deep problem understanding enhances question quality. Avoid rushing into solutions; foundation is understanding and well-defined questions. The quality of input (initial questions) determines the quality of output (research findings).","tags":"","authors":"","date":"","category":"playground > topics > ux"},"816":{"file_path":"playground/topics/ux/how-many-users-should-you-interview.md","title":"How many users should you interview","description":"Learn how to determine the right number of qualitative interviews by considering research domain, participant diversity, and researcher experience to achieve data saturation efficiently.","spr_content":"- Data saturation in qualitative interviews depends on variables beyond sample size.  <hr />- Established domain and well-known products lead to quicker saturation; fewer participants needed.  <hr />- Participant diversity and breadth increase the required number of interviews.  <hr />- Homogeneous, narrow groups require fewer interviews for saturation.  <hr />- Researcher expertise impacts data richness; skilled interviewers can extract more information from fewer participants.  <hr />- Data quality and depth often depend more on interviewer skill than on sample size.  <hr />- The goal is to reach saturation, not a fixed number; it varies with research context and skills.  <hr />- References highlight the importance of domain familiarity, participant diversity, and interviewer skill in estimating sample size.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"817":{"file_path":"playground/topics/ux/landscape-of-ux-research-methods.md","title":"Landscape of ux research methods","description":"Learn how UX research methods are organized by attitudinal vs behavioural, qualitative vs quantitative, and context of use to uncover valuable user insights and improve product design.","spr_content":"- UX research methods organized by a 3D framework: axes are Attitudinal vs Behavioural, Qualitative vs Quantitative, and Context of Use.<hr />- Attitudinal research captures what users say or believe; behavioural research reveals what users actually do.<hr />- Observing real user behavior in context is generally preferred over attitudinal data.<hr />- Attitudinal methods include card sorts and surveys; some methods (usability testing, field studies) combine both data types.<hr />- Qualitative data collection involves direct observation; quantitative data collection measures indirectly via metrics, analytics, surveys.<hr />- Qualitative methods answer why and how; quantitative methods answer how many and how much.<hr />- Context of use classification: natural/near-natural use, scripted use, no use, hybrid.<hr />- Natural use studies replicate actual environments to enhance validity; scripted use instructs focus on specific tasks.<hr />- Unusing the product helps explore issues beyond usability, such as cultural factors.<hr />- Hybrid methods integrate natural, scripted, and non-use approaches, e.g., participatory design, concept testing.<hr />- Research axis: degree of participant engagement with the product influences method choice and data type.<hr />- These dimensions help tailor UX research to specific goals, environments, and questions.<hr />- Related concepts include strength of evidence, number of users to interview, mental models from qualitative research, lossy nature of quant data, philosophy differences, and UX activities across product lifecycle.<hr />- References include Nielsen Norman Group insights and scholarly distinctions between qualitative and quantitative paradigms.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"818":{"file_path":"playground/topics/ux/lean-methodologies-promote-velocity-at-the-expense-of-understanding.md","title":"Lean methodologies promote velocity at the expense of understanding","description":"Lean design focuses on fast delivery and efficiency but can overlook ethical impacts and long-term value, urging designers to consider user and societal well-being beyond quick market feedback.","spr_content":"- Lean and similar methodologies prioritize delivery, emphasizing waste reduction and efficiency through \"just in time\" release cycles.  <hr />- They aim for rapid market feedback to facilitate continuous iteration.  <hr />- This rapidity risks making decisions without essential information or sufficient contemplation.  <hr />- Erika Hall critiques this velocity focus, noting it often neglects longer-term consequences and deeper critique.  <hr />- Hall highlights an ethical concern: solutions may be \"user-centric\" but not \"value-centric,\" potentially fostering actions harmful to users or society.  <hr />- Ethical design requires evaluating impacts on people and the planet, beyond superficial metrics like NPS.  <hr />- Decision-making should include qualitative measures of value, considering broader social and environmental effects.  <hr />- Fast, efficiency-driven processes may inadvertently promote behaviors misaligned with societal or ecological well-being.  <hr />- User experience is defined by the actions it enables, not just the ease of use; poor design decisions can limit beneficial actions.  <hr />- Narrow efficiency focus introduces risks of unintended negative consequences.  <hr />- Ethical design calls for redefining business value to incorporate human and ecological considerations.  <hr />- User-centric design is distinct from human-centric design, which emphasizes broader human and societal needs.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"819":{"file_path":"playground/topics/ux/mastering-ux-research-essential-techniques-for-successful-design.md","title":"Mastering ux research essential techniques for successful design","description":"Discover the eight essential UX research methods like Lean Canvas, user journey mapping, and competitor analysis to create user-friendly digital products that meet real user needs effectively.","spr_content":"UX research foundational principles: understanding users, needs, pain points.  <hr />Purpose: design user-focused, effective digital products/services.  <hr /><hr />Method 1: Lean Canvas—single-page business plan—targets audience, value prop, key metrics.  <hr />Focuses research, avoids extraneous detail.  <hr /><hr />Method 2: Funnel—visual step-by-step user interactions—detects friction, opportunities—optimizes conversion.  <hr /><hr />Method 3: Competitor analysis—assesses strengths, weaknesses—identifies differentiation, unique value propositions.  <hr /><hr />Method 4: Personas—fictive user archetypes—enhance empathy, tailored features, motivation insight.  <hr /><hr />Method 5: User story—narrative of user-product interaction—prioritizes features aligned with user needs.  <hr /><hr />Method 6: User journey mapping—visual process flow—pinpoints pain points, seamless experience opportunities.  <hr /><hr />Method 7: Information Architecture—content structure—improves findability, user-friendliness, effectiveness.  <hr /><hr />Method 8: User flow—paths users follow—identifies bottlenecks—streamlines interaction, increases efficiency.  <hr /><hr />Summary: UX research employs multiple methods—each revealing insights—driving user-centric design—personalization, differentiation, usability.","tags":"","authors":"","date":{"days":19670},"category":"playground > topics > ux"},"820":{"file_path":"playground/topics/ux/prototypes-help-test-ideas-that-are-already-refined.md","title":"Prototypes help test ideas that are already refined","description":"Avoid rushing to prototypes in design; focus on deeply understanding the problem first to ensure solutions truly address user needs and avoid wasting effort on the wrong ideas.","spr_content":"- Prototypes, regardless of fidelity, are tangible symbols of progress.  <hr />- They create a physical sense of achievement, which can be psychologically tempting.  <hr />- Rushing to prototype assumes correct problem framing; this can lead to solving the wrong problem.  <hr />- Premature prototyping risks polishing solutions that do not address real needs.  <hr />- Deep engagement in the problem space fosters better understanding before solution convergence.  <hr />- Prioritizing rapid artifact creation (lean) sacrifices necessary problem comprehension.  <hr />- True design research emphasizes investing time to understand the problem thoroughly over early prototyping.  <hr />- Erika Hall advocates for careful problem exploration before solution iteration.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"821":{"file_path":"playground/topics/ux/research-repositories-should-generate-new-knowledge.md","title":"Research repositories should generate new knowledge","description":"Discover how an effective research repository combines insights to spark new ideas and unlock hidden knowledge beyond simply storing information.","spr_content":"- A research repository that only accumulates insights is incomplete; it lacks transformative potential.  <hr />- Effective repositories enable the synthesis of knowledge, fostering new ideas beyond individual observations.  <hr />- Combining disparate insights creates opportunities for novel understanding and innovation.  <hr />- Knowledge functions as a compounding investment; insights build upon each other to generate greater value.  <hr />- The value of insights depends on their quality; poor data degrade the entire system—garbage in, garbage out.  <hr />- Abundant information alone is insufficient; interpretation and perspective are crucial for value extraction.  <hr />- The volume of stored knowledge does not equate to its worth; quantity does not imply utility.  <hr />- Ideas are like constellations; they form through the connection of seemingly unrelated insights.  <hr />- User research teams serve as organizational multipliers, catalyzing the intersection of insights across departments.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"822":{"file_path":"playground/topics/ux/skeuoumorphic-models-limit-possibilities-for-innovation.md","title":"Skeuoumorphic models limit possibilities for innovation","description":"Skeuomorphism in design uses real-life metaphors to shape digital tools, but this can limit how we understand and innovate with digital technology beyond physical constraints.","spr_content":"- Skeuomorphism reproduces physical traits in digital designs, e.g., digital notebook mimics paper notebook.  <hr />- Such metaphors embed physical constraints into digital understanding, limiting perception of non-organic tools.  <hr />- Analogous to equating online content with print media, constraining digital paradigms.  <hr />- Digital file systems often modeled as hierarchical file cabinets, reinforcing rigid structures.  <hr />- Lakoff and Johnson's radial metaphors demonstrate how metaphors can strategically shape understanding, either empowering or constraining.  <hr />- Skeuomorphic models of robots as servants limit perceptions of collaborative potential; favoring subservience over partnership.  <hr />- Metaphors act as cognitive scaffolding, structuring worldview and thought processes.  <hr />- Introducing novel metaphors can expand conceptual frameworks and creative thinking.  <hr />- Our vision of future is tethered to past metaphors and models, restricting innovation.  <hr />- Effective use of metaphors can reframe complex or rigid systems; misuse or limiting metaphors reinforce existing constraints.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"823":{"file_path":"playground/topics/ux/spend-more-time-in-the-problem-space.md","title":"Spend more time in the problem space","description":"Learn why embracing uncertainty and spending more time understanding problems leads to better solutions by avoiding assumptions and applying thoughtful analysis in decision-making.","spr_content":"Cultural tendency favors rapid answers, transforming creativity into an assembly line. A focus on swift resolution undermines deep engagement with the problem space. Uncertainty discomfort is necessary for nuanced understanding. Possessing knowledge involves a finite shelf life; rushing risks overlooking evidence or filling gaps with assumptions. Longer dwelling in messy, unedited states enables application of diverse perspectives and mental models. Recognizing and accepting uncertainty is prerequisite to overcoming it. Admitting ignorance is essential for learning. Salience is subjective, shaped by personal perspective; what is salient depends on individual lenses. Moving beyond quick answers requires embracing ambiguity and refraining from premature closure.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"824":{"file_path":"playground/topics/ux/test-digital-experiences-longitudinally.md","title":"Test digital experiences longitudinally","description":"User perception of experiences changes over time, so longitudinal testing is essential to understand how feelings toward applications evolve with repeated use and familiarity.","spr_content":"User perception of experiences is dynamic, evolving over time. Initial impressions of innovation or delight often diminish, becoming familiar or frustrating with repetition. Longitudinal testing captures shifts in perception, revealing changes in perceived value and loyalty drivers. Familiarity alters factors influencing user engagement, as noted by the UX curve concept. Continuous evaluation is crucial to understand long-term user experience trajectories.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"825":{"file_path":"playground/topics/ux/triple-s-of-ux-in-web3.md","title":"Triple s of ux in web3","description":"Discover the Triple S of UX—Simple, Secure, and Self-custodial designs that make Web3 easy and safe for users to access and control decentralized applications.","spr_content":"- Web3 awareness is superficial; users only see the tip of the iceberg—Bitcoin, DeFi, NFTs—basic concepts that spark initial interest.<hr />- Deeper understanding reveals complex terminology: Gas Fees, Private Keys, Public Addresses—intricate and intimidating.<hr />- Users struggle with technical jargon; they often abandon exploration when faced with private keys or advanced terms.<hr />- Goal: create a simple, familiar, easy-to-understand onboarding experience—Triple S of UX for Web3.<hr />- Simple: use intuitive, user-friendly methods for onboarding, login, and interaction with decentralized apps.<hr />- Example: seamless, recognizable login solutions that minimize technical hurdles.<hr />- Secure: build trust through security features like 2-factor authentication, end-to-end security assurances.<hr />- Example: implement 2FA to reinforce user confidence in safeguarding assets.<hr />- Self-custodial: empower users by designing for control and independence; emphasize ownership in decentralization.<hr />- Example: Web3Auth's key recovery lets users manage and recover accounts without central authority.<hr />- The design should communicate empowerment, enabling users to benefit from decentralization confidently.<hr />- Goals: minimize complexity, maximize trust, promote ownership—high-level principles for Web3 UX design.<hr />- These principles are supported by industry references emphasizing clarity, security, and user control.","tags":"","authors":"","date":{"days":19209},"category":"playground > topics > ux"},"826":{"file_path":"playground/topics/ux/user-research-teams-should-act-as-organizational-multipliers.md","title":"User research teams should act as organizational multipliers","description":"Learn how user research teams act as multipliers to share customer insights across organizations, enabling confident, customer-focused solutions through training, best practices, and collaboration.","spr_content":"- User research teams are not sole custodians of user intelligence; knowledge is collective.  <hr />- In mature, design-centric organizations, customer insights belong to all teams, not just specialists.  <hr />- Researchers serve as \"multipliers,\" enhancing cross-functional discovery, learning, and shared understanding.  <hr />- Their role includes facilitating \"co-experienced learning,\" where teams directly engage with customer insights.  <hr />- Enabling everyone to hear from users fosters confidence in understanding and inspires customer-centric innovation.  <hr />- Tasks extend beyond research: developing best practices, documenting expertise, creating guidance, and providing templates.  <hr />- They deliver training, coaching, and organization-wide education on user insights.  <hr />- Dissemination of findings must be accessible, clear, and tailored to broad audiences.  <hr />- They establish and communicate processes that define roles, responsibilities, and collaboration frameworks for non-researchers.  <hr />- Responsible for reviewing methodologies, consulting on frameworks, ensuring research effectiveness and value.  <hr />- Their work supports shaping organizational practices around user understanding, not only conducting studies.  <hr />- Related concepts include managing diverse activities across product lifecycles and transforming abundant information into actionable perspectives.  <hr />- Emphasizes that the richness of data needs to be paired with new interpretive approaches to generate true insight.  <hr />- Inspired by Monty Hammontree’s view that research should amplify organizational learning and shared knowledge rather than exist in isolation.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"827":{"file_path":"playground/topics/ux/users-perception-of-frequently-used-applications-declines-over-time.md","title":"Users perception of frequently used applications declines over time","description":"Long-term user experience shows that perceived usefulness declines over time, making software attractiveness and enjoyment key to maintaining user loyalty and satisfaction.","spr_content":"Perceived usefulness of static tools declines over time with repeated use.  <hr />Long-term usage reduces the predictive power of usefulness for user attraction.  <hr />Non-instrumental factors such as attractiveness and enjoyment grow more influential for user loyalty.  <hr />Sustained investment in delight, aligned with Kano's model, is crucial to maintain engagement.  <hr />Longitudinal studies of user satisfaction are valuable to understand evolving perceptions.  <hr />UX curve concept models how perceived value shifts over time, emphasizing dynamic user experience assessment.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"828":{"file_path":"playground/topics/ux/ux-research-activities-by-product-lifecycle.md","title":"Ux research activities by product lifecycle","description":"Learn how different UX research methods fit each product lifecycle phase to improve design, reduce risks, and ensure usability with effective discovery, exploration, testing, and listening techniques.","spr_content":"- Different UX research methods align with specific product lifecycle phases, with earlier incorporation offering greater value.  <hr />- Focus resources on Discovery and Explore phases for maximum impact; useful data can be gathered at any stage.  <hr />- Discover phase aims to identify unknowns and understand actual needs, serving as a risk mitigation activity to prevent costly mistakes.  <hr />- In Discover, test assumptions before development, articulate the problem, and validate understanding to ensure correct problem framing.  <hr />- Explore phase refines understanding of the problem space and sharpens design scope, building on Discover insights.  <hr />- Test phase confirms that built solutions meet user needs and expectations, validating prior work.  <hr />- Listen phase involves ongoing monitoring and data collection to detect current and emerging problems.  <hr />- When selecting methods, consider operating constraints like budget, tools, and priorities.  <hr />- If limited, prioritize qualitative (think-aloud) usability testing, regarded as highly effective for usability improvements.  <hr />- Qualitative research fosters mental models of the problem space and emphasizes data saturation over sample size.  <hr />- Leading indicators provide proactive insights; small bets de-risk innovation; mental models guide understanding.  <hr />- Research timing and method choice are strategic—earlier, qualitative methods optimize risk reduction and understanding.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"829":{"file_path":"playground/topics/ux/ux-researchers-should-care-about-strength-of-evidence.md","title":"Ux researchers should care about strength of evidence","description":"UX researchers should focus on collecting valid and reliable data by observing users in natural settings to ensure strong evidence and improve user experience design decisions.","spr_content":"- UX researchers prioritize strength of evidence over sample size, unlike quantitative researchers.  <hr />- Valid data accurately measures the target construct; invalid data does not.  <hr />- Reliable data yields consistent results across studies and researchers.  <hr />- Good data involves observing genuine user struggles in natural contexts; bad data is personal opinions.  <hr />- Closer observation to natural user behavior produces stronger evidence.  <hr />- A balance between validity and reliability enhances evidence quality.  <hr />- Data saturation matters more to qualitative than quantitative research.  <hr />- Hodgson emphasizes that evidence quality depends on context and observation method, not just quantity.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"830":{"file_path":"playground/topics/writing/The Elements of Story/ensure-the-trunk-of-a-narrative-is-more-substantial-than-the-branches.md","title":"Ensure the trunk of a narrative is more substantial than the branches","description":"Learn how to keep your writing focused by emphasizing the main idea over qualifiers and details, ensuring your core theme remains clear and compelling.","spr_content":"- In writing, prioritize the core theme over subordinate notions, qualifiers, or caveats.  <hr />- If subordinate details (branches) surpass the main idea (trunk), the core is obscured.  <hr />- Present qualifiers briefly, compressing them compared to the core idea’s emphasis.  <hr />- Maintain the narrative's overall priorities, recognizing the branch details are auxiliary.  <hr />- The trunk (main idea) should not be overwhelmed by the branches; it remains central but not exclusive.  <hr />- To build effective narratives—whether in storytelling or business—focus on the essential, skimming or omitting less relevant elements.  <hr />- Good strategy involves simplifying complex problem spaces through judicious cuts, akin to storytelling’s selective emphasis.  <hr />- These principles align with Flaherty’s concept: effective writing and strategy distill complexity, emphasizing what truly matters.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"831":{"file_path":"playground/topics/writing/The Elements of Story/good-endings-make-a-story-memorable.md","title":"Good endings make a story memorable","description":"Learn how to craft a strong kicker ending that leaves readers thinking by adding depth, surprise, or a human touch without simply repeating the story’s main points.","spr_content":"- A \"kicker\" ending distinguishes a memorable story; not just summing up content.  <hr />- It functions as a decorative flourish but also adds meaning.  <hr />- It can acknowledge overlooked or underexplored story elements, providing balance or perspective.  <hr />- It may introduce or emphasize human elements absent from the main narrative.  <hr />- It suggests there is more beyond the story's scope, hinting at future or deeper layers.  <hr />- Overdoing it diminishes impact; brevity is key.  <hr />- A good story beginning pairs with a strong ending; they frame the narrative's effectiveness.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"832":{"file_path":"playground/topics/writing/The Elements of Story/good-story-leads-entice-and-inform.md","title":"Good story leads entice and inform","description":"Learn how to craft an effective story lead that balances broad themes with vivid specifics to engage readers and build tension, using anecdotes and strong storytelling techniques.","spr_content":"- An effective lead balances breadth and specificity, introducing theme vividly and precisely.  <hr />- It must evoke the story’s central tone; specifics should resonate with the core message.  <hr />- Flaherty emphasizes that specifics should sound the central chord of the tale, aligning details with the main theme.  <hr />- A good lead teases and provokes, engaging curiosity and compelling continued reading.  <hr />- The lead functions as a lure, making the reader unable to resist further engagement.  <hr />- Anecdotal leads are common but must omit unnecessary details to maintain drama and tension.  <hr />- Effective anecdotes initiate the story with action, foster drama, and create tension to hook the reader.  <hr />- The goal of a lead is to spark interest, introduce theme, and set the story’s tone efficiently.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"833":{"file_path":"playground/topics/writing/The Elements of Story/good-writing-makes-the-familar-new.md","title":"Good writing makes the familar new","description":"Discover how good writing transforms the familiar into something fresh by creating new perspectives and focusing on themes without distracting the reader.","spr_content":"- Good writing transforms familiarity into novelty, re-igniting interest.  <hr />- It elevates the mundane to the realm of the fantastic.  <hr />- It illuminates and reframes, offering fresh perspectives on known concepts.  <hr />- It guides focus to emphasize the theme without distraction.  <hr />- \"Show, don't tell\" exemplifies indirect persuasion through vivid depiction rather than explicit instruction.  <hr />- Effective writing harmonizes form and function, where language quality and description enliven the familiar.  <hr />- Descriptions act as catalysts for perceiving things anew, fostering discovery in the reader.  <hr />- Crafting involves aligning language and intent to enhance perception, not simply conveying information.  <hr />- Based on Flaherty's insights: storytelling and nonfiction hinge on revealing truths through nuanced, compelling expression.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"834":{"file_path":"playground/topics/writing/The Elements of Story/narrative-sequencing-informs-meaning.md","title":"Narrative sequencing informs meaning","description":"Learn how the sequence of information in a story shapes meaning and persuasion, and why adjusting your approach is key when your goal is to inform rather than persuade.","spr_content":"Sequence of information determines narrative impact and meaning.  <hr />Preceding or following facts modulates their perceived significance.  <hr />Sequential arrangement influences persuasion: evidence can crescendo or fade.  <hr />Leading with a startling fact diminishes subsequent impact; sequencing can amplify or diminish effect.  <hr />Contrast clarifies idea contours; similarity, used judiciously, aids understanding.  <hr />Purpose affects approach: inform ≠ persuade.  <hr />Reporting should match goal: news or research > storytelling or mystery.  <hr />Narrative core > peripheral details; emphasize essential content.  <hr />In public health or research, prioritize informing over persuading.  <hr />Citations link to foundational story elements and nonfiction principles.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"835":{"file_path":"playground/topics/writing/The Elements of Story/stories-need-action-and-commentary.md","title":"Stories need action and commentary","description":"Learn how balancing strong action with insightful commentary can create compelling stories using vivid verbs and clear interpretation to engage readers effectively.","spr_content":"Storytelling demands a balance of action and commentary; action drives narrative, commentary pauses or enriches it. Action can be overt, subtle, or mental, conveyed through potent, vivid verbs. Commentary provides interpretation, slowing pace, offering insight. Skillful storytelling integrates movement and explanation seamlessly, using movement to show, and commentary to deepen understanding.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"836":{"file_path":"playground/topics/writing/The Elements of Story/use-language-with-necessity.md","title":"Use language with necessity","description":"Learn how to write clearly by cutting unnecessary words and focusing only on impactful details that support your main theme for stronger, more effective storytelling.","spr_content":"- Writing requires economy; clutter costs the reader attention.  <hr />- Extraneous words and flowery phrases dilute signal; they add noise.  <hr />- Impactful words and purposeful details strengthen the theme.  <hr />- Narrative trunk should be more substantial than branches; core is key.  <hr />- Larger work should marry form and function; every part serves purpose.  <hr />- Every element in a creative work must support the overarching theme.  <hr />- Citation: Flaherty emphasizes clarity and purposeful storytelling.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"837":{"file_path":"playground/topics/writing/a-scene-comprises-large-scale-and-small-scale-structures.md","title":"A scene comprises large scale and small scale structures","description":"Learn how to craft powerful scenes using large-scale structures like goals, conflicts, and disasters, plus small-scale motivation-reaction units to engage readers and build compelling fiction.","spr_content":"- A well-crafted scene combines large-scale and small-scale structures.<hr />- Large-scale structure divides into scenes and sequels.<hr />- Scene structure: Goal (active desire), Conflict (obstacles), Disaster (failure).<hr />- Sequel structure: Reaction (emotional response), Dilemma (bad options), Decision (proactive choice).<hr />- The scene's goal is what the POV character actively pursues at the start.<hr />- Conflict arises when obstacles block the goal, generating struggle.<hr />- Disaster(results of failure) sustains reader engagement by preventing easy success.<hr />- The sequel follows after a scene, addressing emotional aftermath and subsequent choices.<hr />- Small-scale structure consists of motivation-reactive units (MRUs).<hr />- MRUs alternate between external motivation (tangible, sensory) and internal reaction (feeling, reflex, rational response).<hr />- Reactions within MRUs are ordered: feeling → reflex → rational action or speech.<hr />- Multiple MRUs form the scene and sequel series.<hr />- The pattern ensures internal consistency and dynamic flow within paragraphs.<hr />- Scene and sequel series are series of MRUs, creating progression on multiple scales.<hr />- Both large-scale and small-scale structures are essential for narrative coherence and reader engagement.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"838":{"file_path":"playground/topics/writing/core-needs-and-psychological-maneuvers-give-fictional-characters-depth.md","title":"Core needs and psychological maneuvers give fictional characters depth","description":"Learn how to create deep, multidimensional characters by exploring their core needs and psychological maneuvers, key concepts from Elizabeth George's _Mastering the Process: From Idea to Novel_.","spr_content":"- Characters are driven by core needs: emotional, physical, psychological motives.  <hr />- Core needs originate from character analysis, adding depth and multidimensionality.  <hr />- Examples: approval, perfection, empathy, correctness, competence, control, nurturance, excitement, authenticity, admiration, attention, service, connection, adrenaline.  <hr />- Psychopathology or psychological maneuver involves hidden behaviors, conflicted mind states, oddities, or erroneous beliefs.  <hr />- Usually concealed behind persona; triggered by stress, anxiety, fear, or unmet core needs.  <hr />- Examples: self-mutilation, aggression, bullying, eating disorders, addiction, rage, unexplained physical ailments, obsessive thoughts, compulsions, obsessions, nymphomania, chronic lying, mania, phobias.  <hr />- Both core needs and psychological maneuvers shape character complexity; understanding both enriches characterization.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"839":{"file_path":"playground/topics/writing/dialogue-illustrates-the-nature-of-the-character.md","title":"Dialogue illustrates the nature of the character","description":"Learn how effective dialogue reveals character traits and drives your story by showing emotions, intentions, and conflicts that engage readers and advance the plot.","spr_content":"Dialogue functions as a multi-faceted tool for character development and story progression. It reveals a character's true nature through their words—admitting truths, inciting conflict, accusing others, lying to deceive, informing about facts, manipulating perceptions, misdirecting attention, hinting at hidden motives, ordering actions, encouraging decisions. These utterances should serve to advance the narrative, deepen understanding of characters, and pose dramatic questions. If dialogue does not contribute to these goals, it should be omitted. Effective dialogue is concise, purposeful, and layered with meaning, operating on multiple levels simultaneously to engage the reader and propel the story forward.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"840":{"file_path":"playground/topics/writing/elizabeth-george-s-character-prompt-sheet.md","title":"Elizabeth George s character prompt sheet","description":"Discover Elizabeth George’s character development prompt sheet from *Mastering the Process* to create rich, believable characters using simple, freewriting prompts that inspire story depth and detail.","spr_content":"Character development prompt sheet: a tool to generate stream-of-consciousness writing.  <hr />Not a rigid form, but a catalyst for associative, free-flowing insights about a character.  <hr /> Lists key biographical, physical, psychological, relational, and philosophical details.  <hr /> Facilitates exploration of personality, motivation, and evolution through minimal cues.  <hr /> Encourages reflection on character’s background, traits, relationships, and inner life.  <hr /> Aims to surface latent content and deepen character complexity via spontaneous writing.  <hr /> Connects physical details, traits, and life events to the character’s internal world.  <hr /> Supports discovering character’s core need, ambitions, and life philosophy.  <hr /> Helps anticipate reader’s emotional response—likeability, relatability, or complexity.  <hr /> Serves as an associative priming tool for natural language models to activate character illusions.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"841":{"file_path":"playground/topics/writing/five-commandments-of-storytelling.md","title":"Five commandments of storytelling","description":"Learn Shawn Coyne's five essential Story Grid commandments—Inciting Incident, Crisis, Climax, and Resolution—to craft powerful, effective scenes in fiction writing.","spr_content":"- Shawn Coyne's _Story Grid_ defines five indispensable scene elements for effective fiction.  <hr />- **Inciting Incident:** triggers the scene; initiates action or disturbance.  <hr />- **Progressive Complication / Turning Point:** reveals new information or action that compels the POV character to decide.  <hr />- **Crisis:** forces character to choose a course with inevitable negative or positive consequences, activating them.  <hr />- **Climax:** the character’s decisive action post-crisis, causing a subtle value shift, providing scene purpose.  <hr />- **Resolution:** outcome of the climax; must show change; lack indicates missing commandment or element.  <hr />- These elements form a hierarchy of cause and effect, shaping scene purpose and movement.  <hr />- Effective scenes integrate all five to ensure narrative momentum and emotional impact.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"842":{"file_path":"playground/topics/writing/give-abstract-concepts-a-human-face.md","title":"Give abstract concepts a human face","description":"Learn how giving abstract concepts a human face makes economic and market topics relatable and impactful by showing real people with genuine stakes.","spr_content":"- Writers cast humanity onto abstract topics, transforming bloodless concepts into relatable stories.  <hr />- Using human faces humanizes the economy, markets, and similar ideas, making them accessible.  <hr />- Contextualization involves anchoring abstract concepts in real people and tangible stakes.  <hr />- Real stakes deepen understanding, showing impact beyond mere facts or ideas.  <hr />- Example: personas make research concrete; they symbolize real user experiences for design teams.  <hr />- Effective storytelling in nonfiction involves emphasizing real stakes for authentic connection.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"843":{"file_path":"playground/topics/writing/lester-dent-s-master-plot-for-pulp-fiction.md","title":"Lester Dent s master plot for pulp fiction","description":"Learn Lester Dent’s simple master plot for crafting suspenseful 6000-word stories with clear hero struggles, twists, physical conflicts, and engaging pacing to keep readers hooked.","spr_content":"Lester Dent’s master plot template for 6000-word stories emphasizes dynamic structure, conflict escalation, varied threats, and a satisfying resolution. Key points:<hr /><hr />- Use at least one of four plot variations: new murder method, unique quest item, novel locale, or lingering menace.<hr />- Four sections of 1500 words each:<hr />  - **First 1500**: Quick hero introduction, immediate danger, initial problem-solving, character ensemble, and near-physical conflict to hook readers.<hr />  - **Second 1500**: Escalate challenges, deepen threat, hero’s struggle, physical confrontation, and a plot twist that shifts direction.<hr />  - **Third 1500**: Intensify setbacks, hero’s progress, cornering the villain, physical conflict, major setback through new plot twist, lots of descriptive sensory imagery for atmosphere—avoid monotony.<hr />  - **Fourth 1500**: Hero faces ultimate despair, employs skills or strength for salvation, introduce final twist (villain unmasked, treasure worthless), conclude with a memorable, warm punch line.<hr /><hr />Suspense, logical coherence, varied threats, atmospheric detail, and a compelling climax define this blueprint for short adventure stories.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"844":{"file_path":"playground/topics/writing/place-characters-within-a-landscape.md","title":"Place characters within a landscape","description":"Discover how detailed landscapes and settings reveal a character's personality and make them feel real before, during, and after the story.","spr_content":"Landscape as character indicator: surroundings reveal character traits.  <hr />Detailed, specific setting grounds characters in reality, implying prior existence.  <hr />Rich detail makes characters authentic, sense of life beyond narrative timeline.  <hr />Setting acts as a reflection and extension of character personality and history.  <hr />Environment provides context, mood, and foreshadows internal states.  <hr />Pre-existing setting suggests characters are inhabited by histories and stories.  <hr />Vivid environment enhances believability and depth of characters across the narrative arc.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"845":{"file_path":"playground/topics/writing/question-tree.md","title":"Question tree","description":"Learn how question trees help brainstorm research questions and explore business problems, guiding decision-making with clear, broad inquiries beyond simple yes or no answers.","spr_content":"- A question tree is a hierarchical outline for brainstorming questions about a problem space.  <hr />- Its purpose is to identify key research questions, stakeholders, and business domains relevant to the problem.  <hr />- Question trees facilitate exploration, hypothesis generation, and comprehensive understanding of the problem area before decision-making.  <hr />- They serve as a pre-process step to decision trees, informing the structure and content of decision pathways.  <hr />- Decision trees focus on binary, polar questions: yes/no, which guide specific decision points.  <hr />- Question trees contain content questions: open-ended, broad inquiries eliciting detailed information.  <hr />- Question trees enable expansive exploration; decision trees enable direct decision-mapping.  <hr />- Examples include designing blockchain-based civil project systems, restaurant POS systems with blockchain, and service architectures for video streaming.  <hr />- Question trees assist research and stakeholder inquiry; decision trees assist critical decision evaluation.  <hr />- References link to further reading on linguistic and conceptual analysis (WALS chapters).","tags":"","authors":"","date":{"days":19100},"category":"playground > topics > writing"},"846":{"file_path":"playground/topics/writing/talking-heads-avoidance-device-elizabeth-george.md","title":"Talking heads avoidance device elizabeth george","description":"The talking heads avoidance device (THAD) adds action to dialogue scenes, revealing character traits, emotions, and setting details while increasing tension and enhancing story depth.","spr_content":"- The Talking Heads Avoidance Device (THAD) is a technique by Elizabeth George.<hr />- THAD is an action accompanying dialogue to avoid static scene of just speech.<hr />- It reveals non-viewpoint character traits via activity; shows hobbies, beliefs, passions.<hr />- It enables POV character to observe and judge the interlocutor.<hr />- THAD demonstrates, rather than states, character details.<hr />- When performed by POV character, it adds emotional, psychological, or physical texture.<hr />- It enriches scene setting, adding contextual details.<hr />- THAD can generate tension or conflict, especially if activity is uncomfortable.<hr />- It can foreshadow, change tone, establish mood, or emphasize themes.<hr />- Overall, THAD integrates scene action, character insight, and atmosphere.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"847":{"file_path":"playground/topics/writing/the-six-lines-of-gold.md","title":"The six lines of gold","description":"Discover Tim Ferriss's Six Lines of Gold method to quickly learn key language structures and common phrases, helping you grasp syntax, semantics, and fluency basics in just one hour.","spr_content":"- Six Lines of Gold distill language learning into rapid, insightful phrases; mastery is not the goal, speed is.  <hr />- Focuses on key linguistic distinctions—syntax and semantics—that influence fluency acquisition.  <hr />- Addresses structural variations (e.g., SOV vs. SVO, case usage) affecting grammatical fluency timelines.  <hr />- Emphasizes phonetic nuances, especially vowels, tones, intonations, and inflections critical for accurate pronunciation and comprehension.  <hr />- Highlights language similarity assessment: recognizing shared structures facilitates faster learning; contrasting features prevent interference.  <hr />- Fluency defined broadly: understanding writing systems, sounds, phonetics, and tonal variations necessary for functional communication.  <hr />- Examples reveal the core approach: mapping simple, equivalent sentence structures across languages to unveil differences and similarities.  <hr />- The technique anticipates difficulty levels by analyzing grammatical complexity, phonetic challenges, and overlap with known languages.  <hr />- The method aids in rapid initial grasp, enabling learners to identify what changes affect meaning and ease of acquisition.  <hr />- Underlying metaphor: linguistic structures are like modular building blocks; recognition accelerates integration into existing knowledge.","tags":"","authors":"","date":{"days":19261},"category":"playground > topics > writing"},"848":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/decontextualize-ideas-to-make-them-new.md","title":"Decontextualize ideas to make them new","description":"Learn how decontextualizing ideas and breaking familiar patterns boosts creativity and critical thinking by embracing uncertainty, divergent thinking, and fresh perspectives to generate new knowledge.","spr_content":"- Engaging with ideas requires decontextualization; removing familiar frameworks opens fresh perspectives.<hr />- Brains favor fitting ideas into existing categories, creating comfort but limiting critical evaluation.<hr />- Familiarity equates to perceived understanding and liking, which hampers exploration.<hr />- Breaking mental patterns involves viewing ideas anew, free from ego, open to possibility and experimentation.<hr />- Changing perspective increases fluidity, adaptability, and changeability of ideas.<hr />- Divergent thinking fosters creativity but must be unrestrained; idea censorship inhibits novelty.<hr />- Cognitive contradictions (*meaning threats*) disorient and stimulate pattern recognition.<hr />- Prolonged volatility may induce maladaptive behaviors; objectification of ideas helps breakdown and reconstruct productively.<hr />- Exposure to volatility motivates us to confront uncertainty, encouraging adaptation.<hr />- Modernist theatre (e.g., Brecht) disorients the familiar, making us question assumptions about reality and characters.<hr />- Recognizing ideas as constructs from paradigms diminishes their perceived naturalness, fostering critical perspective.<hr />- Disassociating ideas from context (Forte) disrupts paradigms, overcoming thought bottlenecks.<hr />- Design thinking techniques (reframing, depatterning) treat situations as novel, bypass heuristics.<hr />- Upside-down image exercises (e.g., drawing) break symbol-based recognition, emphasizing raw shape over internalized features.<hr />- Perspective, more than information, defines differentiation; scarcity of genuine perspective contrasts with abundance of data.<hr />- Decontextualization and perspective shifts are tools to destabilize assumptions, enhance critical thinking, and enable creative innovation.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"849":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/design-environments-to-facilitate-behaviours.md","title":"Design environments to facilitate behaviours","description":"Design environments that reduce friction for good habits and increase friction for bad ones to conserve willpower and encourage positive behavior effectively.","spr_content":"- Willpower is a limited mental resource.  <hr />- Sustaining willpower over time is challenging.  <hr />- Environments designed to encourage desired behaviors are more effective long-term.  <hr />- Good environments reduce cognitive load, freeing mental resources.  <hr />- Reduced cognitive load enables focus on high-impact tasks.  <hr />- Environments can subtly guide behavior, promoting virtue without coercion.  <hr />- Minimize friction for desired actions; maximize friction for undesired actions.  <hr />- Rigid, fragile systems lack resilience and adaptability.  <hr />- Handwriting functions as a forcing technique, shaping cognitive processes.  <hr />- Designing environments is akin to engineering systems that harness intrinsic tendencies.  <hr />- Mental resources are conserved when environmental factors support behavior change naturally.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"850":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/knowledge-is-a-compounding-investment.md","title":"Knowledge is a compounding investment","description":"Learn how building knowledge through connecting ideas boosts creativity and innovation, turning effort into valuable insights with lasting benefits.","spr_content":"Knowledge as long-term investment; rare immediate gains.  <hr />Insight arises from connecting ideas into novel configurations.  <hr />Engaging actively—thinking, writing, linking—amplifies insights.  <hr />Quality information and connections yield compounding value.  <hr />Accumulated knowledge fosters serendipitous collisions of ideas.  <hr />Idea collisions enable innovation and creative breakthroughs.  <hr />Decontextualization of ideas sparks novelty.  <hr />Intuition is undervalued; often hidden within knowledge networks.  <hr />Good ideas emerge where diverse concepts intersect.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"851":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/knowledge-work-means-transforming-old-ideas-into-new-ones.md","title":"Knowledge work means transforming old ideas into new ones","description":"Effective knowledge work transforms existing ideas into new insights by connecting diverse information through note-taking and fresh perspectives, boosting creativity and strategic thinking.","spr_content":"Knowledge work transforms existing ideas into new configurations.  <hr />Start with preconceptions; inquiries refine and evolve them.  <hr />Ideas originate from prior knowledge; ample information enhances receptivity.  <hr />Knowledge accumulates via exponential connections; thought maps grow complex.  <hr />Detecting unexpected connections increases the uniqueness and power of insights.  <hr />Strategists leverage old ideas from diverse sources for fresh perspectives.  <hr />Exposure to remote domains reveals hidden trends and patterns.  <hr />Note-taking, especially atomic notes, enables decontextualization and recontextualization of ideas.  <hr />Recombination of atomic notes spurs novel insights.  <hr />Ideas function as constellations; remixing enhances creativity.  <hr />Decontextualization creates space for innovative juxtapositions.  <hr />Constant exploration and cross-domain reading facilitate trend spotting and pattern recognition.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"852":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/make-notes-in-your-own-words.md","title":"Make notes in your own words","description":"Learn how reformulating text in your own words boosts understanding and memory, while copying notes hinders critical thinking, using the Zettelkasten method to deepen learning and writing skills.","spr_content":"Reading emphasizes the importance of active engagement over passive consumption. Differentiating between short-term perception and long-term understanding is essential for grasping theoretical texts. Rephrasing facilitates comprehension by forcing interpretation and highlighting what is emphasized or omitted. Verbatim copying strips context, inhibits meaning, and bypasses interpretive processes, leading to disjointed, meaningless fragments. Genuine understanding requires internalizing ideas through reformulation, not repetition. Copying creates deceptive familiarity, fostering false confidence that one understands. The #Zettelkasten method exemplifies iterative translation: from source to fleeting notes, to personal insights, to published work. Each translation exposes gaps in understanding, promoting deeper assimilation through feedback loops. Decontextualizing ideas fuels creativity by making connections anew, enhancing learning and thinking.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"853":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/read-broadly-with-purpose.md","title":"Read broadly with purpose","description":"Learn how purposeful reading and seeking diverse perspectives can improve understanding, avoid confirmation bias, and enhance connections across information for better learning and thinking.","spr_content":"Active, purposeful reading emphasizes intention and focus, prioritizing key information and establishing meaningful connections with prior knowledge. It involves vigilant identification of limitations, omissions, and contradictions to refine understanding. Broad reading fosters cross-contextual links and the evolution of ideas, while awareness of confirmation bias encourages seeking disconfirming evidence to challenge assumptions. Effective note-taking aligns with connection-driven thinking, and optimizing for error promotes learning robustness, not just correctness. Foundational sources include Ahrens (smart notes) and O'Reilly (embracing error as growth).","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"854":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/rigid-systems-are-fragile-systems.md","title":"Rigid systems are fragile systems","description":"Learn why rigid systems fail in uncertain environments and how effective system design channels change and friction into productive outcomes to adapt and thrive.","spr_content":"Rigid systems lack flexibility, increasing failure risk under unexpected or non-conforming conditions.  <hr />Designs that ignore change are fragile; the environment’s variability threatens stability.  <hr />Uncertainty and volatility expose rigid systems’ weaknesses; adaptability is essential.  <hr />Effective system design embraces change as inevitable, channeling or redirecting friction productively.  <hr />Flexibility allows systems to navigate constant change, reducing disorientation.  <hr />Resistance to change hampers resilience; instead, friction should be leveraged for growth.  <hr />Related concepts include various types of uncertainty and the recognition that change is perpetual and disorienting.  <hr />Cite Ahrens (2017) on adaptable systems and the importance of accommodating change for robust thinking and learning.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"855":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/store-information-where-you-would-want-to-encounter-it-again.md","title":"Store information where you would want to encounter it again","description":"Discover how organizing notes with a Zettelkasten method helps you find ideas when you need them, boosting learning and creativity through surprising connections.","spr_content":"- The core question is not storage location but desired encounter points for information.  <hr />- Archive organization often serves archivists’ logic, focusing on storage efficiency.  <hr />- For learners seeking inspiration and insight, the key is timing of re-encounter.  <hr />- Zettelkasten emphasizes interconnected links to facilitate serendipitous rediscovery.  <hr />- Learning is optimized when ideas surprise, reappear at moments of need.  <hr />- Organizing for retrieval by relevance to future encounters enhances insight.  <hr />- Designing environments should prioritize prompting desired interactions over mere storage.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"856":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/take-notes-with-connection-in-mind.md","title":"Take notes with connection in mind","description":"Learn how to take smart notes by connecting new ideas with existing ones to deepen understanding and reveal insights, boosting your learning, writing, and thinking skills effectively.","spr_content":"Notes are most powerful when connected to a larger network of thought. Each note acts as a potential node within an interconnected constellation of ideas. Decontextualizing ideas allows for their recombination into new conversations and insights. Writing with existing notes in mind encourages the detection of contradictions and gaps, refining understanding. Linking new information to prior ideas fosters deeper comprehension and associative thinking. Effective note-taking is thus a process of creating a dynamic, conceptual web that facilitates learning, critical thinking, and creative synthesis.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"857":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/write-from-the-bottom-up.md","title":"Write from the bottom up","description":"Discover why writing from the bottom up, starting with your existing notes and ideas, reduces anxiety and uncovers deeper insights for clearer, more confident writing.","spr_content":"- Traditional writing advice advocates top-down approach: define topic, hypothesize, then research.  <hr />- Bottom-up writing starts with existing notes and ideas; allows organic focus.  <hr />- Clusters of ideas reflect genuine interests; guide focus naturally.  <hr />- Built on prior thinking; leverages accumulated knowledge and context.  <hr />- Bottom-up minimizes blank page anxiety; always something available to start.  <hr />- Encourages re-engagement with existing ideas; surface contradictions and paradoxes.  <hr />- Facilitates discovery of disconfirming evidence and new insights.  <hr />- Writing from the bottom up aligns with knowledge work: transforming old ideas, abductive reasoning.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"858":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/writing-by-hand-is-a-forcing-function.md","title":"Writing by hand is a forcing function","description":"Writing by hand activates more brain areas and helps improve memory and understanding compared to typing, making note-taking more mindful and effective for learning.","spr_content":"- Handwriting engages more brain regions than typing, promoting deeper encoding.  <hr />- Deep encoding enhances memory retention.  <hr />- Handwritten notes correlate with better recall due to active processing.  <hr />- Typing encourages transcribing without processing info meaningfully.  <hr />- Handwriting slows pace, fostering mindfulness and deliberate thought.  <hr />- Friction from writing strengthens cognitive engagement and learning.  <hr />- Writing functions as active thinking; enhances cognitive functions.  <hr />- Cognitive benefits include improved comprehension and long-term memory.  <hr />- The tactile, frictional aspect of handwriting aids focus and mental organization.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"859":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/writing-is-thinking.md","title":"Writing is thinking","description":"Writing is a powerful tool for thinking, as putting ideas into your own words deepens understanding and reveals gaps in logic or contradictions.","spr_content":"Writing is a form of thinking, not just a result of it. Translating others' ideas into one's own words requires deep understanding, reveals contradictions, gaps, or omissions. Writing creates a feedback loop: clarity in expression depends on comprehension. Effective note-taking and paraphrasing enhance learning and logical clarity.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"860":{"file_path":"playground/topics/zettelkasten/build-randomness-into-knowledge-generation-systems.md","title":"Build randomness into knowledge generation systems","description":"Discover how adding randomness to knowledge systems can spark creativity and reveal unexpected connections, avoiding narrow thinking and boosting new insights.","spr_content":"- Systematic knowledge structuring leads to early decisions, narrowing inquiry lanes.<hr />- Confinement limits exposure to surprising, novel connections.<hr />- Knowledge is enhanced by encountering unexpected information.<hr />- Introducing randomness into knowledge systems fosters serend-frequency and unanticipated links.<hr />- Randomness increases combinatorial possibilities—ideas linked in unforeseen ways.<hr />- Unplanned connections promote creativity and new insights.<hr />- Bias favors familiar or readily available information; randomness counteracts that.<hr />- Embracing unpredictability broadens perspective and discovery potential.<hr />- Brainstorming surfaces existing ideas, not new ones; randomness can generate genuine novelty.<hr />- Novel metaphors and unanticipated linkages stimulate innovative thinking.<hr />- Designing workflows with randomness mimics natural associative processes.<hr />- Niklas Luhmann advocates for slip-box, or Zettelkasten, methods that incorporate serendipity.<hr />- Random integration prevents premature closure and fosters open-ended exploration.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"861":{"file_path":"playground/topics/zettelkasten/different-kinds-of-zettelkasten-notes.md","title":"Different kinds of zettelkasten notes","description":"Learn how the Zettelkasten method uses fleeting, permanent, and project notes to boost writing and thinking by capturing and rephrasing ideas for better understanding and lasting value.","spr_content":"- Zettelkasten notes: three types—fleeting, permanent, project.<hr />- Fleeting notes: quick reminders, captured during reading, disposable.<hr />- Permanent notes: self-contained, clear without context, ready for use or publication.<hr />- Project notes: specific to a task, discarded after completion.<hr />- Literature notes may serve as an intermediate to permanent notes but clarify is needed.<hr />- Some view permanent notes as always useful, independent of source.<hr />- Never copy notes verbatim; rephrasing enforces understanding.<hr />- Rephrasing creates feedback loop, tests comprehension.<hr />- Understanding is essential for effective note-making.<hr />- Notes facilitate associative thinking, linking ideas.<hr />- Ahrens emphasizes notes' clarity and independence.<hr />- Luhmann’s slip box: a networked, layered knowledge system.<hr />- Note process: from quick capture to refined, reusable knowledge.<hr />- Clarification and rephrasing are tools for deeper engagement.<hr />- The taxonomy supports knowledge synthesis, writing, learning.<hr />- The method hinges on active manipulation, not passive collection.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"862":{"file_path":"playground/topics/zettelkasten/fleeting-notes-are-reminders.md","title":"Fleeting notes are reminders","description":"Fleeting notes are quick reminders taken during reading or thinking to capture ideas, best processed soon after to avoid forgetting and improve understanding through rewording.","spr_content":"- Fleeting notes are raw scraps captured during reading or thinking, using digital or analog methods.  <hr />- They function as reminders, not as final ideas.  <hr />- Store them in an inbox for timely processing to prevent forgetting.  <hr />- Excessive delay between capture and processing diminishes their usefulness.  <hr />- Translating fleeting notes into one's own words enhances understanding; copying verbatim risks losing context or altering meaning.  <hr />- Highlighting, underlining, and marginalia are forms of fleeting notes.  <hr />- Once processed, fleeting notes can be discarded; they are short-term reminders.  <hr />- They serve as the preliminary material for developing more permanent, meaningful notes.  <hr />- Related concepts include rephrasing notes, creating permanent notes for new ideas, and writing literature notes to inform permanent notes.  <hr />- The practice aligns with the idea that writing is a form of thinking.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"863":{"file_path":"playground/topics/zettelkasten/learning-is-enhanced-by-surprise.md","title":"Learning is enhanced by surprise","description":"Discover how surprising connections between ideas spark new insights and why broad reading and random linking in knowledge systems boost creativity and understanding.","spr_content":"- Knowledge arises from juxtaposing ideas.  <hr />- Insight emerges when juxtaposition induces surprise.  <hr />- Surprise occurs when the message defies expectations and offers novel perspectives.  <hr />- Surprise fosters understanding through comparison, contrast, evaluation, re-imagination.  <hr />- Broad reading supplies diverse ideas, fostering unexpected connections.  <hr />- Incorporating randomness into knowledge systems promotes serendipity.  <hr />- Luhmann’s zettelkasten system facilitates new knowledge by connecting seemingly unrelated ideas.  <hr />- Decontextualizing ideas creates novelty; ideas as constellations of disconnected points.  <hr />- Serendipity is cultivated by fostering unpredictable linkages and associations.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"864":{"file_path":"playground/topics/zettelkasten/purpose-of-zettelkasten.md","title":"Purpose of zettelkasten","description":"Discover how the Zettelkasten method boosts productivity and creativity by organizing notes to generate new ideas and insights for effective knowledge work and writing.","spr_content":"Zettelkasten transcends mere note storage; it functions as a thinking catalyst. A well-maintained system fosters idea generation by interlinking diverse sources, encouraging cross-pollination of concepts. It alleviates memory load, allowing focus on knowledge creation—transforming existing ideas into novel insights. The Zettelkasten served as an ongoing wellspring of inspiration, eliminating the need for external brainstorming techniques. It acts as a designed environment—an intentional productivity system—structured to facilitate insight production. As it expands, its capacity for knowledge synthesis compounds, enhancing its ability to generate new understanding.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"865":{"file_path":"playground/topics/zettelkasten/write-literature-notes-to-inform-permanent-notes.md","title":"Write literature notes to inform permanent notes","description":"Learn how to make effective literature notes by summarizing texts in your own words, avoiding information overload, and linking notes to develop new ideas for better understanding and writing.","spr_content":"- Literature notes record any useful information from a text for future use.  <hr />- They should faithfully replicate the original work but translated into one's own words to enhance understanding.  <hr />- Selectivity is crucial; avoid the collector’s fallacy—believing that capturing information equates to mastering it.  <hr />- Make literature notes with consideration of existing notes, fostering connections rather than isolated data.  <hr />- Aim to create a foundation for permanent notes that develop new ideas.  <hr />- Citations reference Ahrens (2017), emphasizing effective note-taking as a tool for learning, writing, and thinking.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"866":{"file_path":"playground/topics/zettelkasten/writing-with-a-zettelkasten.md","title":"Writing with a zettelkasten","description":"Learn how Sönke Ahrens' zettelkasten method helps writers develop ideas from notes to drafts, avoiding blank pages and creating clear, connected, and well-organized articles.","spr_content":"- Sönke Ahrens advocates a bottom-up writing process emerging from notes, not a blank page.  <hr />- Writing starts by engaging in conversation with one's notes.  <hr />- Process involves: 1) making fleeting notes during reading; 2) collecting notes in an inbox; 3) creating literature notes that capture key ideas; 4) developing permanent notes that link ideas and reflect relevance; 5) filing and linking notes; 6) developing ideas from the emergent network; 7) translating notes into a rough draft; 8) editing manuscript.  <hr />- Translation is critical; assembling notes into an essay risks fragmentation, lack of unity, and flat voice.  <hr />- Modular notes require careful linking; merely pasting fragments diminishes coherence and argument strength.  <hr />- Examples: Emerson's essays show piecemeal assembly can cause loss of voice and argument integrity.  <hr />- Effective writing from notes mimics conversation, not montage.  <hr />- Zettelkasten sequence influences idea development but may not optimize reading experience.  <hr />- Starting research with the zettelkasten can inform questions and subsequent inquiry.  <hr />- Related concepts: narrative sequencing, the importance of good questions, elements of storytelling.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"867":{"file_path":"playground/README.md","title":"Labs Team","description":"This is our Labs team homepage, where we list out the latest advances in our engineering team, our publications, events & workshops, as well as frequently asked questions on who and what team labs are.","spr_content":"- \"The Dwarves Brainery\" symbolizes a hub of innovative thinking, intellectual craftsmanship, and collaborative exploration.  <hr />- It functions as a central platform and community dedicated to advancing technology understanding and application.  <hr />- The organization emphasizes a foundation built on collaboration, sharing insights, and continuous learning.  <hr />- It promotes engagement with emerging technologies, aiming to unlock future potentials through practical experimentation and analysis.  <hr />- The branding (logo, shields, links) signals identity, credibility, and openness to community involvement.  <hr />- The structure includes communication channels (e.g., Discord) fostering interaction and collective progress.  <hr />- Publications like newsletters (\"Forward Engineering\") document ongoing research, trends, and discoveries, acting as knowledge dissemination tools.  <hr />- The organization values diversity in backgrounds and skills, united by curiosity and a shared passion for technology.  <hr />- Their workflow involves hypothesis reexamination, hands-on technology immersion, and validation through project execution.  <hr />- A focus exists on identifying and nurturing trending or groundbreaking tech, guided by a structured roadmap.  <hr />- Onboarding and contribution processes are designed to motivate active participation, recognition, and reward with tokens (ICY).  <hr />- Recognition incentivizes meaningful contributions impacting knowledge and innovation, aligning personal growth with organizational goals.  <hr />- Events (weekly catchups, tech demos) serve to reinforce community bonds and update members on progress and new findings.  <hr />- Overall, \"The Dwarves Brainery\" embodies an ecosystem of intellectual craftsmanship, collaborative innovation, and technological mastery.","tags":"dwarves home labs","authors":"monotykamary","date":{"days":19691},"category":"playground"},"868":{"file_path":"playground/notes/misc/founder-liquidity.md","title":"≈ Founder Liquidity","description":"Founder liquidity is a secret that founders and investors don't want you to know","spr_content":"- Venture-backed founders claim disproportionate equity from personal risk, citing sacrifice and high stakes.<hr />- Founders' narrative of \"all-in\" risk underpins Silicon Valley mythology, fostering admiration and talent attraction.<hr />- Early employees face similar startup risks but lack comparable liquidity opportunities, creating narrative dissonance.<hr />- Founder liquidity involves selling shares during funding rounds, \"taking chips off the table,\" and is often a concealed practice.<hr />- This liquidity practice undermines the myth of founders being \"all-in,\" complicating perceptions of risk and sacrifice.<hr />- Founder liquidity is rarely discussed publicly; only accessible via cap table insight, often kept secret.<hr />- Prominent cases (e.g., WeWork, Hopin) reveal founders extracting large secondary payouts while employees hold illiquid stakes.<hr />- Founders maximize liquidity to de-risk financially; employees are usually denied this benefit, heightening perceived inequality.<hr />- The secrecy around founder liquidity defies common perceptions: it doesn't threaten morale, doesn't taint future views, and doesn't inherently increase founder risk.<hr />- When founders receive liquidity, it doesn't diminish their risk once access to liquidity is factored in; early employees remain fully exposed.<hr />- The revelation of founders' liquidity access can trigger curiosity, questioning of fairness, and reevaluation of risk exposure among employees.<hr />- Transparency about founder liquidity during funding rounds would align perceptions with reality, reducing misconceptions.<hr />- Proposed measures: larger, earlier employee pools; shorter cliffs and extended post-termination exercising; transparent communication during financing.<hr />- Cultivating an open culture around liquidity can recalibrate employee understanding of startup risk dynamics.<hr />- Encouraging employees to anonymously inquire about founders' liquidity creates a norm of transparency; normalizes honest disclosure.<hr />- Recognizing that founders' liquidity access may shift perceived risk profiles can lead to fairer negotiations and expectations.<hr />- Ultimately, illuminating the hidden practice of founder liquidity fosters equity in risk perception, valuation, and reward distribution.","tags":"founder shares startup","authors":"tieubao","date":{"days":20007},"category":"playground > notes > misc"},"869":{"file_path":"playground/roadmap.md","title":"Labs Roadmap (Nov 23 update)","description":"Explore our November 2023 Labs Roadmap highlighting innovative technology projects and challenges for the upcoming month. Key focus areas include WebAssembly (WASM), Passwordless Authentication, Rust, AI, MPC, and UI practices.","spr_content":"- Collaborative discussion aligns Labs and Consulting teams, clarifying key topics and projects for development.<hr />- Each topic is associated with specific challenges, emphasizing practical application and deep tech engagement.<hr />- WebAssembly (WASM) is the primary focus for the upcoming month, with targeted use-cases highlighted.<hr />- Topics identified include WASM, Passwordless authentication, Rust, AI, MPC, and UI practices.<hr />- WASM topics involve self-hosted AI models, data processing (DuckDB-WASM), and implementing Rust games.<hr />- Passwordless efforts focus on biometrics via external devices, QR code login, and magic links.<hr />- Rust topic centers on implementing a game server.<hr />- AI topic aims at real-time memory knowledge updates (RAG).<hr />- MPC explores applying multiparty computation for web3 authentication.<hr />- UI practices involve building mochi-ui.<hr />- Overlaps and intersections among topics indicate potential integrated solutions.<hr />- Other promising areas remain in backlog, open for labs team exploration.<hr />- Challenges are documented in the earn program; stakeholders can consult the link or PICs.<hr />- The roadmap visualizes current priorities and future potential developments.","tags":"labs updates","authors":"thanh","date":{"days":19682},"category":"playground"},"870":{"file_path":"playground/topics/pm/§ pm.md","title":"§ PM","description":"Explore key project management and agile practices, including Scrum techniques, estimation methods, and handling technical debt to improve team productivity and project success.","spr_content":"- Project Management involves planning, executing, and closing projects with defined goals and constraints.  <hr />- An alternative to traditional Task Management emphasizes flexibility, iterative progress, and adaptive planning.  <hr />- Agile Practices value rapid delivery, customer collaboration, and responsiveness to change.  <hr />- Estimation in Agile relies on relative sizing, story points, and collaborative consensus to forecast effort.  <hr />- The Definition of Done standardizes quality criteria, ensuring completeness and readiness for release.  <hr />- Managing Technical Debt within Scrum entails balancing short-term delivery with long-term sustainability, prioritizing refactoring and code quality.  <hr />- Scrum Practices promote transparency and communication through structured meetings.  <hr />- The Daily Standup Format facilitates synchronization, highlights impediments, and plans immediate next steps.","tags":"moc pm","authors":"","date":{"days":20201},"category":"playground > topics > pm"},"871":{"file_path":"playground/topics/pm/how-to-deal-with-technical-debt-in-scrum.md","title":"How to deal with technical debt in Scrum","description":"How to deal with Technical debt in Scrum","spr_content":"Technical debt in Scrum:  <hr />Identify sources—obsolete tech, poor tests, lack of docs.  <hr />Prioritize by impact on value delivery.  <hr />Plan fixes—refactor, upgrade tech, enhance tests.  <hr />Dedicate sprints or part of sprints to debt.  <hr />Track progress—measure, adjust as needed.  <hr />Communicate with stakeholders—align goals.","tags":"projectmanagement scrum technicaldebt","authors":"0xLight","date":{"days":19339},"category":"playground > topics > pm"},"872":{"file_path":"playground/topics/pm/an-alternative-to-tm.md","title":"An Alternative To Tm","description":"Discover why Atomic replaces 'time and materials' with 'fixed budget, scope-controlled' projects to deliver efficient, well-estimated custom software within set budgets and clear progress updates.","spr_content":"- \"Time and materials\" (T&M) describes project engagement and invoicing but is inaccurate at Atomic.  <hr />- T&M implies no profit and lacks efficiency; Atomic actively manages costs and margins.  <hr />- T&M overlooks significant activities: setting budgets, estimating, tracking, and reporting progress.  <hr />- True T&M would mean only tracking time, ignoring scope, budget, value, and outcomes.  <hr />- T&M can be a red flag for clients, metaphorically like an uncontrolled, explosive burn (copper bar across car battery).  <hr />- The phrase \"fixed price, fixed scope\" (FP/FS) is the opposite and often inappropriate for custom software.  <hr />- FP/FS suits highly specialized, repeatable tasks (e.g., mowing lawns, oil changes), not software development.  <hr />- Atomic prefers \"fixed budget, scope-controlled\" (FB/SC) to describe our approach.  <hr />- FB/SC involves co-creating a budget, detailed estimation, weekly progress updates, and delivery to the penny.  <hr />- This approach ensures reliable, predictable delivery within financial constraints.  <hr />- Focus is on building features with optimal complexity (managing scope, depth, breadth, polish).  <hr />- Story mapping is used to control total experience scope (breadth), feature tasks (depth), and ease of use (polish).  <hr />- The aim is maximum value within a fixed budget through collaborative, disciplined scope management.","tags":"pm","authors":"","date":{"days":18391},"category":"playground > topics > pm"},"873":{"file_path":"playground/topics/design/focus-product-development-on-customer-jobs-that-are-important-tangible-unsatisfied-and-lucrative.md","title":"Focus product development on customer jobs that are important tangible unsatisfied and lucrative","description":"Learn how to identify high-value customer jobs by focusing on important, tangible, unsatisfied, and lucrative needs to create effective value propositions that drive business success.","spr_content":"Value focus: target customer jobs that are centrally positioned within the Venn diagram of importance, tangibility, dissatisfaction, and profitability. These core jobs are critical for customer success or failure, produce immediate or frequent results, are underserved by current solutions, and offer high revenue potential due to demand or willingness to pay. Prioritizing these \"middle\" jobs maximizes impact and value creation in value proposition design.","tags":"","authors":"","date":"","category":"playground > topics > design"},"874":{"file_path":"playground/topics/design/¶ Persona.md","title":"¶ persona","description":"User personas help product teams understand user needs, behaviors, and goals by creating realistic profiles that guide design and improve user experience in marketing and development.","spr_content":"- User personas are research artifacts.  <hr />- They depict patterns of user needs, behavior, and attributes.  <hr />- Usually represented as a character or descriptive profile of an individual user.  <hr />- Support product teams in understanding and empathizing with users.  <hr />- Highlight specific aspects of users; make research findings concrete.  <hr />- Different disciplines employ personas variably.  <hr />- Marketing personas target desired buyers, include demographic detail.  <hr />- User personas focus on people encountering the problem; contextual understanding.  <hr />- Marketing and user personas are distinct; serve different goals.  <hr />- Scope of personas varies: broad or narrow.  <hr />- Broad personas lack detail for focused design; narrow personas are too specific for large decisions.  <hr />- Both types have situational relevance.  <hr />- A user persona must be realistic, not idealized.  <hr />- Aim: help teams understand user context to accomplish goals or solve problems.  <hr />- Personas alone cannot produce empathy, but document shared understanding of users.  <hr />- References: Cooper (2004), Haag & Marsden (2018), Harley (2020), Salazar (2020), Young (2020).","tags":"","authors":"","date":"","category":"playground > topics > design"},"875":{"file_path":"playground/topics/design/§ design.md","title":"§ Design","description":"Explore essential design fundamentals, UX principles, personas, and effective design systems to improve UI and product development with clear, practical tips and user-focused strategies.","spr_content":"Design fundamentals & principles: Core understanding of good design; UI fundamentals; Gestalt principles as perceptual laws driving UI coherence; three levels of design representing abstraction layers; practical tips and tricks for effective design; spacing principles as crucial for visual clarity, partitioned into two parts; the \"three clicks\" rule is a myth, emphasizing user freedom and navigation flexibility.<hr /><hr />Design patterns & systems: Design system as a unified, scalable repository of UI standards; mechanisms of design system operation; UI best practices (\"dwarves\") as foundational guidelines; structured workflows for design processes; comprehension of application architecture through design; strategies for mobile app design optimization; incorporating forgiveness in design to handle user errors and variability.<hr /><hr />UX, personas & JTBD: UX models as conceptual frameworks; personas stemming from qualitative insights; personas as tools to communicate research, not solely empathy; shared understanding of user needs via personas; personas' limitations due to lack of rich contextual data; concrete representation of abstract data to assist design; personas may embed assumptions, necessitating careful use; omitting demographic minutiae to maintain focus on tasks and motivations; users fill gaps with assumptions, influencing persona accuracy; overcoming persona limitations with supplementary methods; core persona definitions; Jobs to Be Done (JTBD) as task-oriented approach; JTBD interview structure to uncover context; stories highlight situational needs; focusing product development on high-value, unmet, and profitable customer jobs; personas centered on specific tasks, goals, motivations; domain insight research as a method to inform design.<hr /><hr />Tools & resources: Design resource pools and tools; Webflow as a prototyping platform; guidelines for multimedia content creation; competency mapping for skill alignment.<hr /><hr />Techniques & methods: Card sorting to understand user mental models; insights from design thinking processes; principles of saving, investing, and speculating as strategic financial approaches.<hr /><hr />Case studies & blog posts: Approaches to KPI construction as a cornerstone of measurement; lessons from practical application of design and analytical strategies.","tags":"design moc","authors":"","date":{"days":20201},"category":"playground > topics > design"},"876":{"file_path":"playground/topics/design/focus-personas-on-tasks-goals-and-motivations.md","title":"Focus personas on tasks goals and motivations","description":"Discover how effective user personas emerge from qualitative research and sensemaking to capture real user experiences, guiding product design with authentic insights rather than assumptions.","spr_content":"- Personas should be discovered, not created; they document research.<hr />- They articulate patterns of thought and feeling, attributes not easily quantifiable.<hr />- Effective personas emerge from qualitative sensemaking, abductive research—openness to evidence forming theories.<hr />- Persons require attention to \"thick data\": the rich, empathetic context beyond surface facts.<hr />- Personas explain not just user types but their understanding and relationship with the product and problem space.<hr />- Small samples risk incomplete portraits; supplementary quantitative data can validate and generalize findings.<hr />- Quantitative personas add scientific veneer but involve time and incremental value.<hr />- Teams may develop proto-personas based on current understanding; treat them as assumptions to test.<hr />- Decisions should not rely solely on proto-personas unless validated further.<hr />- Proto-personas can serve as reminders of user-focus, especially in Lean UX with continuous testing and iteration.<hr />- Primary personas (user archetypes) are critical; most projects also benefit from anti-personas—explicitly excluded user types.<hr />- Personas should be living documents, evolving with new insights about users.<hr />- Personas communicate either research insights or assumptions; clarity is essential.","tags":"","authors":"","date":"","category":"playground > topics > design"},"877":{"file_path":"playground/topics/design/¶ Jobs to be done.md","title":"¶ jobs to be done","description":"Learn how the Jobs to Be Done (JTBD) framework helps product teams focus on customer needs and outcomes by understanding the processes customers use to achieve their goals.","spr_content":"- JTBD is a product development mindset focusing on customer needs, not just products.  <hr />- Customers engage with products/services primarily to satisfy a fundamental \"job\" or objective.  <hr />- A \"job\" is a process aimed at achieving a goal within specific circumstances, encompassing functional, emotional, or social dimensions.  <hr />- Jobs can be complex, with main jobs comprising multiple sub-jobs; they are stable over time, unlike solutions that evolve with technology.  <hr />- Jobs exist independently of the means used, allowing companies to compete by better solving the same job.  <hr />- JTBD emphasizes understanding the context and outcomes rather than superficial personas; it adds rich contextual insight.  <hr />- Customers do not want products; they want outcomes—products help achieve those outcomes.  <hr />- Jobs are multi-faceted, involving subordinate jobs that address different aspects or layers of the main objective.  <hr />- Defining customer segments by shared needs and desired outcomes is more precise than demographics.  <hr />- JTBD does not prescribe solutions; it concentrates on capturing the needs and desired outcomes of users.  <hr />- Foster a mindset that aligns organizational focus with delivering value for the customer’s jobs, not just selling products.","tags":"","authors":"","date":"","category":"playground > topics > design"},"878":{"file_path":"playground/topics/design/understanding-saving-investing-and-speculating-key-differences-and-strategies.md","title":"Understanding Saving, Investing, and Speculating: Key Differences and Strategies","description":"In personal finance, the strategies we choose to manage our money can significantly impact our financial future. These strategies typically fall into three categories: saving, investing, and speculating. Each comes with its own levels of risk, timeframes, and methods. Understanding the distinctions and appropriate uses of each can guide us in making smarter financial decisions...","spr_content":"- Personal finance strategies shape future wealth; they include saving, investing, and speculating.  <hr />- Saving: low risk, secure, short-term or emergency funds, regular deposits, capital preservation.  <hr />- Investing: moderate risk, long-term growth, asset purchase, diversification, wealth accumulation.  <hr />- Speculating: high risk, short-term, rapid gains, market timing, aggressive trades, acceptance of losses.  <hr />- Risks: very low in saving, moderate in investing, high in speculating.  <hr />- Timeframes: variable for saving, long-term for investing, short-term for speculating.  <hr />- Strategies differ in approach: saving focuses on security, investing on growth, speculating on quick profits.  <hr />- Effective management combines all three based on goals and risk tolerance.  <hr />- Diversification mitigates risks across strategies.  <hr />- Key decisions depend on risk appetite, research, and investment horizon.  <hr />- Tailor strategies to personal goals; use each method wisely with informed judgment.","tags":"investment personal-finance","authors":"huytq","date":{"days":19846},"category":"playground > topics > design"},"879":{"file_path":"playground/topics/design/designing-for-forgiveness.md","title":"Designing for Forgiveness: Creating Error-Tolerant Interfaces","description":"In this article, we will look at some simple principles for designing error-tolerant interfaces and how to apply them to improve user experience.","spr_content":"- Digital product success depends on smooth user experience.<hr />- Designing for forgiveness creates error-tolerant interfaces by aiding mistake prevention and recovery.<hr />- User errors are inevitable; design must accommodate accidental mistakes, misunderstandings, and unclear interfaces.<hr />- Early warnings alert users before potentially harmful actions, reducing mistakes and data loss.<hr />- Examples: Save prompts in Word, unsaved change alerts in Shopify.<hr />- Benefits: Fewer critical errors, data safety, increased user confidence.<hr />- Clear, consistent interfaces improve navigation and reduce confusion-induced errors.<hr />- Examples: Microsoft Office’s uniform icons, familiar layouts across versions.<hr />- Benefits: Fewer misunderstandings, enhanced usability.<hr />- Graceful error recovery tools enable quick correction of mistakes.<hr />- Examples: Undo features in Drive, item recovery options.<hr />- Benefits: Lower frustration, continued workflow without disruption.<hr />- Visual feedback prevents errors via real-time system cues.<hr />- Examples: Twitter’s character limit highlights, disables submit, Discord’s live limits.<hr />- Benefits: Immediate correction reduces errors, streamlines experience.<hr />- Guidance and support, like tooltips and onboarding tutorials, help users learn and avoid errors.<hr />- Examples: Tooltip hints in Word, interactive onboarding in Webflow.<hr />- Benefits: Reduced mistakes, smoother onboarding, higher satisfaction.<hr />- Overall: Error-tolerant design combines preventive cues, clear interface, recovery options, feedback, and guidance.<hr />- Goal: Foster user confidence, minimize obstacles, enhance satisfaction through resilient design principles.","tags":"design ux ux-ui","authors":"changtrailucluong","date":{"days":19958},"category":"playground > topics > design"},"880":{"file_path":"playground/topics/design/design-resourcestools.md","title":"Design Resourcestools","description":"Discover top UX design resources, including expert articles, communities, podcasts, books, and tools to improve user experience and master UX design techniques effectively.","spr_content":"- Learning UI design is foundational but insufficient; UX design is crucial for effective user experience.  <hr />- Good UX helps users achieve their goals within an app or site instinctively and efficiently.  <hr />- Knowledge sources include diverse publications, communities, podcasts, books, tools, and resources.  <hr />- Publications like Nielsen Norman Group, Smashing Magazine, UX Magazine, UX Matters, Usability Geek, UX Mastery, 52 Weeks of UX, and InVision Blog offer research, insights, and trends.  <hr />- Communities such as Designer News, Designer Hangout Slack, and /r/UserExperience facilitate discussion, critique, and shared learning.  <hr />- Podcasts like UX and Growth, User Defenders, Design Review, What Is Wrong with UX, Design Details, and Dorm Room Tycoon provide expert interviews, reviews, and trend analyses.  <hr />- Essential books include foundational texts on UX principles, usability, data visualization, and Lean UX processes.  <hr />- Quantitative tools (Google Analytics, HubSpot, Mixpanel, Heap, Crazy Egg, Kissmetrics, Optimizely, Google Optimize) provide data for decision-making and testing.  <hr />- Testing platforms (UserTesting, UserZoom, TryMyUI, VerifyApp, Loop11) enable user behavior insights through wireframe, prototype, and usability testing.  <hr />- Diagram tools (Gliffy, Google Drawings, Coggle.it, XMind, Keynote) support visual mapping and brainstorming.  <hr />- Wireframing tools like Balsamiq facilitate quick and simple UI sketches.  <hr />- The constellation of resources creates a comprehensive roadmap for mastering UX design and developing user-centric products.","tags":"design","authors":"","date":{"days":17615},"category":"playground > topics > design"},"881":{"file_path":"playground/topics/design/three-clicks-rule-is-a-myth.md","title":"Three clicks rule is a myth","description":"The \"three clicks rule\" for website navigation is a myth, as research shows click count doesn't impact user experience or conversion rates, and more clicks can sometimes improve control and satisfaction.","spr_content":"Three clicks rule: myth, origin in Zeldman 2001, no evidence linking clicks to conversions. Users do not see fewer clicks as easier; sometimes more clicks improve experience by providing control. Context matters: complex or risky tasks benefit from additional clicks. Device limitations influence click perception and usability, challenging universal best practices.","tags":"","authors":"","date":"","category":"playground > topics > design"},"882":{"file_path":"playground/topics/devops/§ devops.md","title":"§ DevOps","description":"Explore essential DevOps concepts including CI/CD, deployment strategies like blue-green deployment, containerization with Docker and Kubernetes, feature management, and security best practices for efficient software delivery.","spr_content":"- DevOps blends culture and practices emphasizing collaboration, automation, and continuous improvement.<hr />- Effective DevOps setup involves structured pipelines, clear processes, and team alignment.<hr />- CI/CD integrates code changes smoothly with automated pipelines, enabling frequent, reliable releases.<hr />- Deployment strategies like blue-green reduce downtime by maintaining two parallel environments; they facilitate quick rollback and minimize risk.<hr />- Blue-green deployment was pivotal for Mochi, ensuring seamless updates and zero-downtime.<hr />- Deploying with Vercel CLI supports branch-specific, fast, and isolated previews, accelerating development cycles.<hr />- Progressive delivery releases features gradually, reducing exposure and risk, while gathering user feedback.<hr />- Radio talks elaborate on blue-green deployment’s benefits, challenges, and real-world applications.<hr />- Containers (Docker Microcontainers) encapsulate applications and their dependencies, enabling consistency across environments.<hr />- Orchestration tools like Kubernetes, with Helm, simplify deploying, scaling, and managing containerized applications.<hr />- Kubeseal and Sops provide secrets management, encrypting sensitive info for secure deployment.<hr />- Feature flags enable dynamic feature toggling, allowing controlled feature rollout and experimentation.<hr />- LocalStack simulates AWS locally, supporting comprehensive testing without incurring cloud costs or latency.<hr />- Security practices emphasize secrets management, automated testing, and deployment safety protocols.<hr />- The ecosystem comprises tools, strategies, and cultural practices to ensure rapid, reliable, and secure software delivery.","tags":"devops moc","authors":"","date":{"days":20201},"category":"playground > topics > devops"},"883":{"file_path":"playground/topics/llm/raptor-llm-retrieval.md","title":"RAPTOR: Tree-based Retrieval for Language Models","description":"An overview of RAPTOR, a novel approach for improving retrieval-augmented language models for long documents using hierarchical tree summaries.","spr_content":"- RAPTOR enhances retrieval-augmented LLMs by organizing long document information hierarchically.  <hr />- Addresses inability of traditional methods to capture discourse structure and multi-part reasoning.  <hr />- Uses recursive process: segment → embed → cluster → summarize, building a bottom-up tree of summaries.  <hr />- Segments: 100 tokens; embeddings: SBERT; clustering: GMM; summarization: GPT-3.5-turbo.  <hr />- Repeats clustering and summarization to form multiple abstraction levels, creating a hierarchical tree.  <hr />- At retrieval, employs a collapsed tree method, outperforming simple tree traversal, and retrieves across all levels based on relevance with cosine similarity.  <hr />- Builds a hierarchical structure of summaries, allowing multi-level querying and flexible retrieval strategies.  <hr />- Benefits include better performance on QA tasks, handling complex, multi-part questions, scalable with document length, surpassing traditional methods (BM25, DPR).  <hr />- Demonstrates SOTA performance on benchmarks like NarrativeQA, QASPER, QuALITY, validated with BLEU, ROUGE, METEOR, F1, and Accuracy metrics.","tags":"document-processing information-retrieval llm","authors":"monotykamary","date":{"days":19914},"category":"playground > topics > llm"},"884":{"file_path":"playground/topics/llm/journey-of-thought-prompting.md","title":"Journey of Thought Prompting: Harnessing AI to Craft Better Prompts","description":"Journey of Thought Prompting is an innovative technique that leverages AI to craft more effective prompts for large language models. This approach uses the analytical capabilities of AI assistants to help users create detailed system prompts, fill in missing details, and iteratively refine their prompt engineering skills. It represents a shift towards collaborative AI interaction, enhancing problem-solving capabilities for businesses and engineers.","spr_content":"- Prompt engineering is difficult due to the unpredictable nature of LLMs and natural language interfaces.<hr />- Traditional approach involves trial, error, and manual crafting of prompts.<hr />- Transforming the process by leveraging AI’s own analytical capabilities can improve prompt creation.<hr />- Journey of Thought Prompting positions the AI as a collaborator in prompt formulation.<hr />- Starting with clear, explicit goals enhances precision; for example, defining exact JSON structures.<hr />- Articulating the 'why' clarifies purpose, guiding relevant data extraction and content framing.<hr />- AI can analyze desired outputs and generate detailed, structured prompts autonomously.<hr />- This involves iterative refinement: engaging AI through dialogue to improve prompts.<hr />- Observing AI’s prompt-structuring reveals best practices, insights, and implicit assumptions.<hr />- The method fosters skill development, making prompt engineering a learning process.<hr />- Collaborative prompting reduces frustration, saves time, and elevates problem-solving capacity.<hr />- It builds a partnership: human intent + AI analysis = optimized outputs.<hr />- For business and engineering, this accelerates AI integration, enhances efficiency, and fosters innovation.<hr />- Future developments will evolve toward deeper collaboration, moving beyond query-response to joint problem-solving.<hr />- The essence is AI as an augmenter, not replacer, of human cognition—amplifying insight and creativity.<hr />- Journey of Thought Prompting exemplifies smarter interaction strategies, unlocking AI's full potential as a cognitive partner.","tags":"ai llm prompt-engineering","authors":"monotykamary","date":{"days":19977},"category":"playground > topics > llm"},"885":{"file_path":"playground/topics/llm/§ LLM.md","title":"§ LLM","description":"Explore comprehensive guides on AI foundations, prompt engineering, model training, retrieval, evaluation, AI agents, security, and real-world applications of large language models for effective AI development.","spr_content":"- Foundational concepts include the AI hype cycle, foundation models, model context protocols, model selection strategies, and quantization techniques, which shape core infrastructure and efficiency in LLM deployment.<hr />- Prompt engineering involves adversarial prompting, effective communication with ChatGPT, and journey-of-thought prompting, aimed at guiding LLM behavior precisely and mitigating risks.<hr />- Model training and fine-tuning encompass approaches like reinforcement learning, RLHF, reward models, and optimization algorithms such as proximal policy optimization and Q-learning, enabling alignment and specialization.<hr />- Retrieval and caching strategies include RAG systems, chunking to overcome context limits, long-term memory handling, hybrid search, vector databases, re-ranking, and mechanisms to work around token limits with tools like Langchain.<hr />- Evaluation metrics and observability rely on application guidelines, judging LLM outputs, feedback loops, logs, metrics, traceability, and pattern recognition to ensure quality and transparency.<hr />- AI agents and workflows focus on supervisor agents, multi-agent collaboration, reasoning+action paradigms like ReAct and ReWOO, function calling, and orchestrating complex tasks.<hr />- Security and guardrails are emphasized through mechanisms to prevent prompt injection and establish safety boundaries within LLM systems.<hr />- Use cases highlight building open-source chatbot solutions, LLM-powered tools, generative user interfaces, tracing AI processes, and applying LLMs across diverse domains such as database querying and application generation.","tags":"llm moc","authors":"","date":{"days":20201},"category":"playground > topics > llm"},"886":{"file_path":"playground/topics/llm/§ Building LLM System.md","title":"§ Building LLM system","description":"This map of content (MoC) outlines the critical components required to design and build a large language model (LLM) system, focusing on architecture, model customization, safeguarding, performance evaluation, and more.","spr_content":"- LLMs revolutionize AI with advanced natural language understanding and generation.  <hr />- Building robust LLM systems involves model selection, context enhancement, safeguards, and performance evaluation.  <hr />- AI applications with LLMs enable diverse industry use cases: customer support, content creation, programming aid.  <hr />- Scalability requires proper architecture and tech stack integration.  <hr />- Choosing the right LLM balances performance and cost; involves fine-tuning and prompt engineering.  <hr />- Context augmentation methods include retrieval-augmented generation, multimodal RAG, agentic RAG, and query rewriting.  <hr />- Structuring output ensures responses are clear, actionable, and standardized via formatting, schema, and chaining.  <hr />- Safeguards prevent misuse, leaks, and harmful outputs; guardrails are essential.  <hr />- Managing multiple models and access through model gateways, intent classifiers, and next-action prediction ensures efficient routing.  <hr />- Caching—prompt, exact, semantic—reduces latency and cost in generation tasks.  <hr />- Handling complex reasoning requires conditional logic, task iteration, write actions, and anti-prompt injection measures.  <hr />- Multi-agent architectures like supervisor-worker or ReAct enable decomposition and robust reasoning.  <hr />- Performance assessment depends on suitable metrics and AI-as-judge paradigms.  <hr />- Observability and workflow orchestration monitor AI system health and coordinate components dynamically.","tags":"llm moc","authors":"thanh","date":{"days":19977},"category":"playground > topics > llm"},"887":{"file_path":"playground/topics/llm/building-llm-powered-tools-with-dify.md","title":"Streamlining Internal Tool Development with Managed LLMOps: A Dify Case Study","description":"Discover how managed LLMOps platforms like Dify streamline the development of AI-powered internal tools. Learn about the challenges of integrating LLMs, the benefits of managed solutions, and real-world examples of efficient AI tool creation. Perfect for businesses looking to enhance productivity with AI without extensive technical expertise.","spr_content":"- Organizations seek to optimize efficiency and productivity through internal tools.  <hr />- Large Language Models (LLMs) possess high potential to enhance workflow automation and intelligence.  <hr />- Integrating LLMs into existing workflows involves challenges:  <hr />  - Complexity: requires deep AI/ML knowledge.  <hr />  - Resource intensity: training and fine-tuning are costly and time-consuming.  <hr />  - Maintenance: ongoing updates and performance management are needed.  <hr />- Managed LLMOps platforms abstract infrastructure complexity, enabling easier development, deployment, and management of LLM applications.  <hr />- Dify exemplifies a managed LLMOps platform that simplifies internal AI tool creation.  <hr />  - User-friendly interface accessible to non-technical users.  <hr />  - Pre-built templates accelerate startup.  <hr />  - Customization allows tailored solutions.  <hr />  - Integrated lifecycle management streamlines development to deployment.  <hr />- Deployment efficiency is enhanced using platforms like elest.io, providing:  <hr />  - Automated setup reducing technical barriers.  <hr />  - Cost management across multi-cloud infrastructures.  <hr />  - Flexibility in cloud provider selection.  <hr />  - Scalability aligned with demand growth.  <hr />- Combining Dify with elest.io yields cost-effective, rapid, scalable internal LLM tool deployment—enabling a developer to build and launch tools in minutes.  <hr />- Case studies of LLM tools built with Dify include:<hr />  - SQL Sorcerer: translating natural language into SQL for database insights, integrated with DuckDB.  <hr />  - OGIF Memo Summarizer: extracts time-stamped summaries from YouTube transcripts to condense video content efficiently.  <hr />  - Discord Summarizer: translates and summarizes multi-language conversations for better team communication.  <hr />- These tools significantly boost productivity, primarily using Claude 3.5 Sonnet and GPT-4 for complex tasks.  <hr />- Best practices for internal LLM tool development:<hr />  - Define clear use cases addressing specific pain points.  <hr />  - Iterate through user feedback for continuous improvement.  <hr />  - Prioritize data privacy and security in sensitive contexts.  <hr />  - Monitor performance metrics to optimize effectiveness.  <hr />- Managed LLMOps democratize access to AI, making powerful internal automation tools feasible for organizations without extensive AI teams.  <hr />- Simplified development and deployment foster a new era of AI-augmented productivity, with ongoing innovations expected to further transform work processes.","tags":"ai ai-powered llm","authors":"ics3rd innno_ monotykamary","date":{"days":19916},"category":"playground > topics > llm"},"888":{"file_path":"playground/topics/llm/rewoo-in-llm.md","title":"ReWOO: Reasoning without observation - A deeper look","description":"In the process of improving Large Language Model (LLM) performance, many techniques have been proposed. The Augmented Language Model (ALM) approach boosted LLM accuracy by enabling the attachment of external sources to enhance the model's knowledge. However, ALMs still had limitations in terms of time consumption and token resources. To address these issues, ReWOO was developed as a more efficient solution.","spr_content":"- Improving LLM performance involves various techniques like ALM and ReWOO.  <hr />- ALM attaches external sources to enhance knowledge but has high time and token costs.  <hr />- ReWOO (Reasoning Without Observation) decouples reasoning from external observations into modular components.  <hr />- ReWOO's modular design simplifies modification, maintenance, and minimizes token usage.  <hr />- ReWOO core modules: Planner (creates solution blueprint), Worker (executes plans, calls external tools/APIs), Solver (analyzes evidence, synthesizes final answer).  <hr />- It enables referencing early-stage plans for complex task handling, improving efficiency.  <hr />- Final step involves a concise prompt for synthesis based on collected evidence, reducing calls and tokens.  <hr />- Implementation involves defining planner and solver prompts, creating nodes for each module, and connecting them in a graph structure.  <hr />- Planner generates detailed plans with tool calls and variable storage; Worker executes each plan step, storing results; Solver reviews all evidence to produce the final answer.  <hr />- The approach significantly reduces token consumption compared to techniques like ReAct, especially for complex, multi-step reasoning.  <hr />- ReWOO's architecture supports iterative, evidence-based reasoning with fewer model calls, enhancing performance and interpretability.","tags":"ai llm","authors":"hoangnnh","date":{"days":20014},"category":"playground > topics > llm"},"889":{"file_path":"playground/topics/llm/llm-as-a-judge.md","title":"LLM as a judge","description":"With the robust growth of LLM models currently, there is a new method is used to evaluate the performance of large language models (LLMs): LLM-as-a-Judge, also known as LLM-evaluators. This approach take adavantages of other advanced language models to assess the quality and effectiveness of responses generated by other LLMs.","spr_content":"LLMs are increasingly used as evaluators—LLM-as-a-Judge—leveraging their language understanding to assess other LLM responses.  <hr />This method involves three main types:  <hr />- Single output scoring without reference—evaluating LLM responses based on criteria, considering input and context.  <hr />- Single output scoring with reference—using ideal responses to improve scoring consistency.  <hr />- Pairwise comparison—comparing two outputs to choose the better, based on predefined criteria.  <hr /><hr />The core idea is: give an LLM criteria, and it judges responses accordingly.  <hr />Challenges include:  <hr />- Inconsistency—difficulty with detailed scoring; reliable for high-level judgments but unreliable for granular ones.  <hr />- Narcissistic bias—tendency of models to favor their own responses.  <hr />- Position bias—preference for the first output in pairwise comparisons.  <hr />- Hallucination—generation of false information impairing evaluation accuracy.  <hr /><hr />Improvements involve:  <hr />- Chain-of-thought prompting—prompt models to explain their reasoning step-by-step, improving judgment accuracy and alignment with human standards.  <hr />- Confining judgements—breaking down evaluations into fine-grained, sentence-level relevance checks to enhance precision.  <hr />- Using LLMs as scoring metrics—integrating their judgments into evaluation frameworks.  <hr />- Fine-tuning LLM judges—training models on annotated datasets to boost consistency and reliability.  <hr /><hr />Overall, LLM-as-a-Judge advances AI evaluation by enabling scalable, insightful assessments, fostering a symbiotic evolution as LLMs improve and evaluation methods refine.  <hr />Key issues—biases, prompt engineering—must be managed to realize full potential.","tags":"evaluation llm","authors":"hoangnnh","date":{"days":20000},"category":"playground > topics > llm"},"890":{"file_path":"playground/topics/llm/foundation-model.md","title":"Foundation Models: The Latest Advancement in AI","description":"An overview of foundation models, their versatility in generative AI tasks, and their impact across various domains like NLP, image generation, and scientific research. The article highlights the benefits, challenges, and future potential of these models.","spr_content":"- Foundation models are recent AI breakthrough, proposed by Stanford researchers.  <hr />- They differ from traditional AI: task-agnostic, adaptable utilities.  <hr />- Learn from vast unstructured data via unsupervised methods, similar to children's language acquisition through listening.  <hr />- Language models predict next words based on prior context, exemplifying generative AI.  <hr />- Initially designed for generation but also excel in classic NLP tasks (classification, recognition) through tuning.  <hr />- Tuning involves adjusting model parameters with labeled data, reducing need for extensive labels.  <hr />- Prompting enables strong performance with minimal labeled data, leveraging model's pretraining.  <hr />- Advantages: high performance, productivity, data efficiency via prompting/tuning.  <hr />- Large data sets lead to superior results compared to models trained on fewer data.  <hr />- Challenges: costly training and deployment, especially for large models needing multiple GPUs.  <hr />- Trust concerns: models trained on internet data may incorporate bias, hate speech, or misinformation.  <hr />- Foundation models apply across domains: image generation (DALL-E 2), code assistance (Copilot), chemistry (molecule discovery), geospatial analysis (climate research).  <hr />- Foundation models are versatile, not limited to language, enable multi-modal and cross-domain applications.","tags":"ai fine-tuning foundation-model llm","authors":"thanh","date":{"days":19495},"category":"playground > topics > llm"},"891":{"file_path":"playground/topics/llm/select-vector-database-for-llm.md","title":"Select Vector Database for LLM","description":"An overview of vector databases and their application in LLM systems. This article covers the history and core concepts of vector databases, their use cases, implementation considerations with LLMs, and a comparison of popular vector database options.","spr_content":"Vector databases as high-dimensional data repositories, originating from word embeddings, enable efficient similarity searches, clustering, and representation management in NLP and ML. They embody a shift from structured data to vectorized semantic representations, supporting models like GPT with enhanced semantic access. Their core comprises vector transformation, optimized storage, specialized indexing algorithms (KD-tree, LSH), and similarity metrics (cosine, Euclidean, Dot Product). Use cases span long-term memory, semantic retrieval, multimedia similarity, personalization, biometrics, and anomaly detection. Configurations involve selecting encoding models (Word2Vec, BERT), tuning search parameters (thresholds, count, content length), and choosing similarity metrics aligned with task needs. Popular vector databases vary by open-source status, features, index support, access control, and scalability, with options like Pinecone, Qdrant, Weaviate, and Milvus offering distinct advantages. Choice depends on dataset size, throughput, hardware, and specific application demands, emphasizing the importance of benchmarking. The evolution of vector database tech continues, promising increasingly sophisticated solutions for managing semantic-rich data in AI.","tags":"ai llm vector-database","authors":"thanhpn","date":{"days":19495},"category":"playground > topics > llm"},"892":{"file_path":"playground/topics/llm/multimodal-in-rag.md","title":"Multimodal: in rag","description":"In spite of having taken the world by storm, Large Language Models(LLM) still has some limitations such as limited context window and a knowledge cutoff date. Retrieval-Augmented Generation(RAG) steps in to bridge this gap by allowing LLMs to access and utilize external knowledge sources beyond their training data. However, data is not text based only, it also can be image, audio, table in docs,...","spr_content":"- LLMs excel but face limitations: constrained context window, knowledge cutoff.<hr />- RAG addresses these gaps by retrieving external sources beyond training data.<hr />- Data types are multimodal: text, images, audio, tables; loss of info occurs during preprocessing.<hr />- Proper multimodal data preprocessing is critical for RAG effectiveness.<hr />- Document preprocessing challenges include chunking breaks: tables split, images lose context.<hr />- Two main methods: multimodal embedding model or multimodal LLM. Focus here on second.<hr />- Multimodal LLM approach: unify data into one modality—text.<hr />- Convert images, tables, and text into text via summarization with LLM.<hr />- Extract all elements: use tools like Unstructured for element extraction.<hr />- Summarize images/tables with prompts, condensing info for retrieval.<hr />- Store: embeddings of summaries + raw data; avoid storing summarized text to ensure fidelity.<hr />- Retrieval: find relevant raw content via vector similarity, then query with original input.<hr />- Implementation steps:<hr />  1. Extract elements (text, images, tables).<hr />  2. Summarize non-text elements into text.<hr />  3. Embed summaries and raw data into vector DB.<hr />  4. Use stored raw data for context during retrieval.<hr />- Example: analyze document with mixed content; summarization aids in accurate retrieval.<hr />- Testing confirms the method retrieves precise info (e.g., revenue data) from images.<hr />- Multimodal RAG enhances response quality by integrating heterogeneous data.<hr />- Represents move toward human-like perception in AI systems.<hr />- This approach is foundational for future multimodal LLM developments.","tags":"llm rag vector-database","authors":"hoangnnh","date":{"days":19902},"category":"playground > topics > llm"},"893":{"file_path":"playground/topics/llm/text-to-mongodb.md","title":"Natural Language to Database Queries: Text-to-MongoDB","description":"An exploration of natural language to database query systems using MongoDB, examining system prompts and implications for data engineering and agentic workflows.","spr_content":"- The system prompt converts natural language into MongoDB queries with strict adherence to format and syntax.<hr />- It emphasizes schema consistency, especially using singular PascalCase for collection names per Prisma conventions.<hr />- Error prevention involves operator correctness, proper date formatting, and syntax validation.<hr />- Supports complex queries involving lookups, aggregations, filters, sorting, and projections.<hr />- Proper code formatting ensures immediate usability and clarity.<hr />- Handles ambiguity by requesting clarification or responding with \"Invalid input.\"<hr />- Facilitates ORM integration, maintaining model-collection correspondence.<hr />- Uses Date objects or ISODate() for date-based queries to ensure accuracy.<hr />- Advanced AI models like Claude 3.5 Sonnet enhance the interpretation of nuanced queries and sustain context over multi-step interactions.<hr />- These models enable non-technical users to access, explore, and analyze data through natural language interfaces.<hr />- They power agentic workflows, autonomously formulating, optimizing, and executing queries based on high-level prompts.<hr />- This democratization accelerates near real-time analytics and interactive exploration, influencing data culture.<hr />- The approach shifts the focus of data professionals towards interpretation and strategic insight, emphasizing supervision over direct query construction.<hr />- Challenges include managing ambiguity, ensuring performance, maintaining data literacy, and addressing biases.<hr />- The technology advances organizational agility, fosters interdisciplinary collaboration, and streamlines data operations.<hr />- Overall, integrating LLMs into data workflows transforms data interaction into a more accessible, efficient, and intelligent process, requiring careful implementation to augment expertise without replacing it.","tags":"ai database llm mongodb","authors":"monotykamary","date":{"days":20040},"category":"playground > topics > llm"},"894":{"file_path":"playground/topics/frontend/mitigate-blocking-the-main-thread.md","title":"Mitigate blocking the main thread","description":"We all know that for web applications, perceived performance is highly importance for our users. For data intensive SPAs with CPU-intensive tasks, the single-threaded nature of Javascript starts to hinder the application's perceived performance when you cannot fit those CPU-intensive tasks into a 16.67 ms/frame window (translates to 60fps). That doesn't even account for code execution time of frameworks (React, Vue...etc), which then leaves you with approximately only a 10 ms/frame window or less to complete all your tasks on the main thread to make user interaction feel smooth and snappy.","spr_content":"Perceived performance in web apps hinges on quick main thread responsiveness (60 fps = 16.67 ms/frame).  <hr />For data-heavy SPAs, CPU tasks can exceed this budget, squeezing down available time (~10 ms) for smooth UX.  <hr />JavaScript's capabilities include Web Workers for threading and generators for coroutines.  <hr />Web Worker offloads processing to separate threads, avoiding main thread blocking, but serialization overhead limits data size and frequency.  <hr />Binary formats like SharedArrayBuffer can mitigate serialization costs but introduce other complexities.  <hr />In real-time scenarios, periodically updating data within a Web Worker via game-loop-like patterns maintains responsiveness.  <hr />When serialization costs are prohibitive, coroutines via generators enable cooperative multitasking by suspending and resuming execution.  <hr />ES6 generators facilitate yielding control, yielding progress in chunks aligned with idle periods.  <hr />Combining generators with requestIdleCallback allows breaking tasks into manageable segments that run when the main thread is idle, enhancing responsiveness.  <hr />Existing solutions like js-coroutines implement these patterns, providing a foundation for coroutine-based task scheduling in the browser.  <hr />The strategic use of threading and coroutines addresses performance bottlenecks, optimizing perceived UX despite heavy processing demands.","tags":"javascript performance","authors":"phatgha","date":{"days":19235},"category":"playground > topics > frontend"},"895":{"file_path":"playground/topics/frontend/from-markup-to-pixels-a-look-inside-the-dom-cssom-and-render-tree.md","title":"From Markup to Pixels - A look inside the DOM, CSSOM, and Render Tree","description":"A deep dive into the rendering process of a web page, exploring the Document Object Model (DOM), CSS Object Model (CSSOM), and the Render Tree.","spr_content":"- Web browsers contain a browser engine, which determines displayed content based on received data.<hr />- Major browsers have different engine names: Firefox's Gecko, Chrome's Blink derived from WebKit.<hr />- HTML bytes are read, converted into characters, then parsed into tokens (tags, content).<hr />- Tokens are organized into nodes forming a hierarchical DOM structure.<hr />- CSS linked via `<link>` tags is fetched and parsed into the CSS Object Model (CSSOM).<hr />- The DOM and CSSOM are combined to create a Render Tree, considering styles, inheritance, visibility.<hr />- The layout/reflow step calculates exact positions, dimensions, x/y coordinates, and bounding boxes.<hr />- Reflow occurs after DOM changes: adding/removing elements, resizing window, changing styles.<hr />- The paint step visually renders the elements’ styles, colors, borders, images, again on change.<hr />- Painting is layered; chunks are stored in layers for faster repaint and composite efficiently.<hr />- Compositing divides the page into layers, which are rendered separately and then combined by the compositor thread.<hr />- The Layer Tree guides element layering; the main thread generates it from the layout tree.<hr />- The compositor thread handles layer rendering; large layers are split into tiles processed by raster threads.<hr />- Raster threads render tiles into GPU memory, enabling smooth scrolling and animation.<hr />- These processes involve the main thread, compositor thread, and raster threads working collaboratively for rendering efficiency.","tags":"cssom dom render-tree rendering","authors":"namnd","date":{"days":19611},"category":"playground > topics > frontend"},"896":{"file_path":"playground/topics/frontend/react-fiber.md","title":"React Fiber","description":"Fiber is the new reconciliation algorithm since React 16, a completely backward-compatible rewrite of the old reconciler (Stack Reconciler).","spr_content":"- React Fiber is the new reconciliation algorithm introduced in React 16.<hr />- It is a complete, backward-compatible rewrite of the previous Stack Reconciler.<hr />- Fiber aims to enhance performance by breaking the call stack limit.<hr />- It divides rendering work into smaller, manageable chunks.<hr />- These chunks can be distributed across multiple frames, enabling pausing or restarting.<hr />- Fiber introduces control over work priority, allowing critical tasks to execute first.<hr />- Prioritized work improves UI responsiveness, especially for animations, layouts, and gestures.<hr />- The fragmentation of work facilitates smoother, more fluid user experiences.<hr />- Unlike the Stack Reconciler, Fiber separates reconciliation from rendering.<hr />- It enables asynchronous, interruptible updates, reducing lag and input lag.<hr />- The architecture supports advanced UI features through priority management.<hr />- References provide detailed insights into the algorithm's mechanics and benefits.","tags":"engineering react","authors":"Mashiro#5951","date":{"days":19278},"category":"playground > topics > frontend"},"897":{"file_path":"playground/topics/frontend/sign-in-form-best-practices.md","title":"Sign-in Form Best Practices","description":"Use meaningful HTML elements: `<form>`, `<input>`, `<label>`, and `<button>`.","spr_content":"- Use semantic HTML elements: `<form>`, `<input>`, `<label>`, `<button>` for structure and accessibility.  <hr />- Each input must be labeled with `<label>` for clarity and screen reader support.  <hr />- Employ input attributes: `type`, `name`, `autocomplete`, `required` to utilize browser features and validation.  <hr />- Assign stable `name` and `id` attributes that do not change across sessions or deployments for consistency.  <hr />- Wrap sign-in inputs within a dedicated `<form>` element to encapsulate submission logic.  <hr />- Ensure form submission navigates deliberately—either by page change or simulated navigation—to confirm success.  <hr />- Use `autocomplete=\"current-password\"` and `id=\"current-password\"` for sign-in password inputs; `autocomplete=\"new-password\"` and `id=\"new-password\"` for sign-up and reset password forms.  <hr />- Provide password visibility toggle (\"Show password\") for user convenience.  <hr />- Enhance accessibility with `aria-label` and `aria-describedby` on password inputs.  <hr />- Avoid duplicating inputs; do not force users to re-enter email or password multiple times.  <hr />- Design forms for mobile usability: large enough inputs/buttons, legible text, to prevent keyboard obstruction.  <hr />- Style sign-in/sign-up pages consistently for branding and user experience.  <hr />- Test forms in real-world scenarios: implement analytics, user interaction tracking, and performance metrics.  <hr />- Perform thorough cross-browser and cross-device testing to address platform-specific behaviors.","tags":"form frontend","authors":"mashiro#5951","date":{"days":19282},"category":"playground > topics > frontend"},"898":{"file_path":"playground/topics/frontend/the-fundamental-of-web-performance.md","title":"The fundamental of web performance","description":"The key to improving your website speed is to understand where the bottlenecks are, and how much time each step takes.","spr_content":"Web performance hinges on identifying bottlenecks in two areas: network latency and browser rendering. Network latency depends on request travel time, influenced by ISP speed, DNS, TCP handshakes, hops, server processing, and static assets size. Improvements include relocating servers near clients, reducing server response time, compressing data, preloading resources, and employing CDNs. Browser rendering involves parsing assets into DOM and CSSOM, building the render tree, and executing pixel pipelines—painting, styling, layout, and compositing. Efficiency is achieved by minimizing work during rendering, understanding CSS specificity, and optimizing JavaScript and style calculations. Both aspects collectively determine page load speed and responsiveness.","tags":"frontend performance performance","authors":"thanh","date":{"days":19267},"category":"playground > topics > frontend"},"899":{"file_path":"playground/topics/frontend/§ frontend.md","title":"§ Frontend","description":"Explore comprehensive frontend development guides covering frameworks, state management, performance optimization, testing, accessibility, tools, and case studies to build efficient, modern web applications.","spr_content":"Frontend Fundamentals & Principles:<hr /><hr />- Atomic design pattern modularizes UI into reusable components.<hr />- CSS Container Queries enable element-based responsive styling.<hr />- CSS in JS integrates styles with JavaScript logic for scoped styling.<hr />- Dark mode Flickers issues temporarily display a white background.<hr />- HSL Color offers intuitive hue, saturation, lightness control.<hr />- HTML inert attribute disables focus and interaction for accessibility.<hr />- I18n guidelines ensure multilingual, localized frontend experiences.<hr />- IndexedDB provides client-side persistent storage.<hr />- Variable Fonts optimize typography with scalable, flexible font styles.<hr />- WAI-ARIA enhances web accessibility for assistive tech.<hr />- WebAssembly allows high-performance code execution in browsers.<hr />- WebSockets facilitate real-time, bidirectional communication.<hr /><hr />Frameworks & Libraries:<hr /><hr />- Nextjs boilerplate accelerates project startup with React Toolkit.<hr />- React, Angular, Vue differ in architecture, ecosystem, complexity.<hr />- Deno modern runtime focuses on security, simplicity.<hr />- React 18 introduces concurrent features, improvements.<hr />- React Fiber redefines reconciliation for smoother rendering.<hr />- React Server Components optimize server-side rendering and data fetching.<hr />- Remix and Nextjs compare in routing, data loading, SSR capabilities.<hr /><hr />State Management & Data Fetching:<hr /><hr />- Server state complexity tackled via abstraction patterns.<hr />- Typesafe client-server communications leverage TypeScript, Zod.<hr />- Validation integrates schema enforcement client-side and server-side.<hr /><hr />Performance & Optimization:<hr /><hr />- Code splitting setup impacts load speed and cache.<hr />- JavaScript concurrency improves responsiveness.<hr />- Main thread blocking mitigates lag.<hr />- Layout thrashing avoided with batching DOM reads/writes.<hr />- Pure CSS Parallax achieves visual depth without JavaScript.<hr />- Data-fetching render optimization reduces flicker.<hr />- Infinite scroll requires scroll position retention.<hr />- Scroll-driven animations create engaging user experiences.<hr />- ViteJS native modules improve build speed and dev experience.<hr />- DOM manipulation is slow; virtual DOM speeds updates.<hr />- Zaplib case study documents performance insights.<hr /><hr />Testing & Debugging:<hr /><hr />- React testing varies: unit, integration, E2E.<hr />- Cypress provides end-to-end frontend testing.<hr />- JavaScript debugging tools fix bugs efficiently.<hr />- MSW simulates API interactions for seamless dev.<hr /><hr />Accessibility & Standards:<hr /><hr />- Focus trap confines keyboard navigation.<hr />- Sign-in forms adhere to UX best practices.<hr />- Correct HTML elements boost accessibility.<hr /><hr />Tools & Techniques:<hr /><hr />- Pnpm adoption improves package management.<hr />- Monorepos streamline multi-package projects.<hr />- React component invocation methods.<hr />- Hoc, render props, hooks enhance component reuse.<hr />- Polymorphic React components support flexible UI.<hr />- ES6 file patterns enable scalable code exports.<hr />- Singleton pattern manages shared state.<hr />- Window-iframe communication facilitates cross-context messaging.<hr /><hr />Case Studies & Blog Posts:<hr /><hr />- Micro frontends/Microservices enable modular frontend architecture.<hr />- Lessons learned inform best practices.<hr />- Tech stack choices accelerate development.<hr />- PNPM offers advantages over NPM/Yarn.<hr />- URL formats optimize social sharing.","tags":"frontend moc","authors":"","date":{"days":20201},"category":"playground > topics > frontend"},"900":{"file_path":"playground/topics/frontend/invoking-component-functions-in-react.md","title":"Invoking component functions in React","description":"What happens if you invoked the component function directly in React?","spr_content":"- Invoking a React function component directly as `ExampleComponent()` treats it like a regular function, not a React component.<hr />- React function components contain hooks that depend on consistent call order across renders; direct invocation disrupts this order.<hr />- When called directly, hooks are called conditionally or inconsistently, causing \"Render more hooks than during the previous render\" error.<hr />- React enforces hooks rules: hooks must be called unconditionally at the top level of a component.<hr />- Using `<ExampleComponent />` creates a React element, integrating the component into the React reconciliation and virtual DOM process properly.<hr />- `<ExampleComponent />` ensures hooks are called in the same order on each render, maintaining React’s state management integrity.<hr />- Direct invocation misleads React into treating the component as a regular function, breaking hook rules.<hr />- The solution is to always use JSX syntax `<ExampleComponent />` rather than function call `ExampleComponent()`.<hr />- Under the hood, `<ExampleComponent />` compiles to `React.createElement(ExampleComponent)`, ensuring correct hooks lifecycle.<hr />- Improper invocation causes re-renders that disrupt internal hook state, violating React's rules and leading to errors.","tags":"components frontend hooks react","authors":"namth","date":{"days":19366},"category":"playground > topics > frontend"},"901":{"file_path":"playground/topics/frontend/mpa-spa-and-partial-hydration.md","title":"MPA, SPA and Partial Hydration","description":"MPA, SPA and Partial Hydration are three different approaches to building web applications.","spr_content":"- Web debate: \"Partial Hydration\" vs \"MPA\" vs \"SPA\".<hr />- MPA (\"Multi-page-app\") mimics traditional web: full page reloads on navigation.<hr />- SPA (\"Single-page-app\") offers app-like navigation, seamless, fast, dynamic.<hr />- SPAs built with JavaScript frameworks (React, Vue, Svelte) generate HTML at runtime.<hr />- Large JS payloads in SPAs cause slow initial load, high cost, and delayed content visibility.<hr />- SSR (Server Side Rendering) improves speed and SEO by pre-rendering HTML.<hr />- Hydration converts raw HTML into interactive app; uses ReactDOM.hydrate.<hr />- Full hydration makes entire page interactive, but causes \"hydration waste\"—loading unused interactive components.<hr />- Partial hydration targets only necessary parts, reducing JS, improving load times, TTI.<hr />- Partials supported by Astro, Marko; complex to implement manually in React.<hr />- Choice: SPA/SSR for highly interactive apps; MPA or partial hydration for static/more content-focused sites.<hr />- MPA with SSR (no full client-side hydration) keeps pages fast, simple, less JavaScript.<hr />- Modern approach favors partial hydration for optimized balance: content speed + interactivity where needed.","tags":"frontend","authors":"huygn","date":{"days":19075},"category":"playground > topics > frontend"},"902":{"file_path":"playground/topics/frontend/the-best-of-css-tldr.md","title":"The Best of CSS TLDR","description":"Tailwind is not another Bootstrap, a `justify-center` class maps exactly to 1 line of css code, you have total control over what is being shipped to the user, whereas a `.btn` class in Bootstrap expands to +50 line of css styles and custom variables, you can customize it but it will not be a joyful experience.","spr_content":"- UI libraries fall mainly into three categories: pure, behavioral, and style system.<hr />- Pure category uses only CSS (e.g., Tailwind, SASS); no JavaScript; produces straightforward styling output; emphasizes visual appearance.<hr />- Behavioral category relies solely on JavaScript (e.g., HeadlessUI, Radix, React-Aria); no styling; focuses on interaction consistency across browsers and accessibility.<hr />- Style system category offers predefined components built on CSS layers; partially opinionated; combines style and structure (e.g., Bootstrap, Mantine, DaisyUI); library controls component aesthetics.<hr />- Bootstrap’s `.btn` class encapsulates many styles, limiting customization and joyfulness.<hr />- Tailwind provides utility classes (e.g., `justify-center`) that map directly to minimal CSS; grants complete control; more customizable, flexible, and learning-friendly.<hr />- MUI (Material UI) combines styles and behaviors, with predefined look and JavaScript interaction; quick start but limits deep customization; often requires hacks for modified designs.<hr />- When in doubt, prefer Tailwind: helps learn CSS fast if new; speeds up development and improves quality if experienced.<hr />- Tailwind’s approach is distinct: minimal, composable, flexible, empowering, unlike opinionated or monolithic frameworks.","tags":"ui","authors":"hollow#3333","date":{"days":19281},"category":"playground > topics > frontend"},"903":{"file_path":"playground/topics/frontend/parse-don-t-validate-in-typescript.md","title":"Parse, don't validate in TypeScript","description":"The \"parse, don't validate\" approach is about processing incoming data and failing in a controlled manner if parsing fails.","spr_content":"- \"Parse, don't validate\" prioritizes immediate, explicit processing of incoming data for early failure upon parse errors.  <hr />- Focus on utilizing trustworthy, typed, and secure data structures at system edges.  <hr />- Parsing analyzes data to conform to a schema or formal grammar, embodying the process of fitting data to predefined rules.  <hr />- It enforces stricter control than validation alone, explicitly handling each data item at the moment of entry.  <hr />- Parsing ensures type safety and minimizes the spread of harmful or malformed data within applications.  <hr />- Validation often complements parsing but relies on separate, manual schema and type maintenance, risking divergence or mismatches.  <hr />- Example in TypeScript with yup shows validation → remains 'any' or 'unknown', no automatic sync with data types.  <hr />- Typecasting post-validation is insecure; it introduces risks if schemas and types drift apart.  <hr />- Using custom parsing functions with type guards and aliases enhances control, type safety, and trustworthiness.  <hr />- Parse functions convert 'any' data into well-defined types, returning either a valid type or Error, enabling safe, predictable processing.  <hr />- TypeScript's type system aids in enforcing parser correctness and helps prevent bugs, making \"parse\" a robust method over loose validation.  <hr />- Overall, \"parse\" as a paradigm emphasizes explicit, schema-driven, controlled, and type-aligned data handling at system boundaries.","tags":"frontend typescript validation","authors":"namtrhg","date":{"days":19362},"category":"playground > topics > frontend"},"904":{"file_path":"playground/topics/zettelkasten/permanent-notes-are-permanently-useful-not-permanently-unchanging.md","title":"Permanent notes are permanently useful not permanently unchanging","description":"Learn the difference between permanent and literature notes in the zettelkasten method, focusing on creating flexible, permanently useful notes that evolve with new ideas.","spr_content":"- Confusion exists between \"permanent\" notes and \"literature\" notes in zettelkasten.  <hr />- \"Permanent\" notes are not pre-marked or fixed; their identity is fluid.  <hr />- \"Permanent\" signifies \"permanently useful,\" not unchangeable.  <hr />- Notes are dynamic: they evolve, mutate, adapt, shrink, expand.  <hr />- Luhmann did not wait for perfection before adding notes; early inclusion was common.  <hr />- The value of an idea may manifest over time, often when related to future ideas.  <hr />- Notes are malleable, emphasizing usefulness over permanence for its own sake.  <hr />- Permanence is about continual relevance, not static form or content.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"905":{"file_path":"playground/topics/zettelkasten/¶ Luhmann's zettelkasten.md","title":"¶ luhmann's zettelkasten","description":"Discover how Niklas Luhmann's zettelkasten system uses linked note cards to organize ideas, boost creativity, and generate new knowledge through unique indexing and connections.","spr_content":"- Zettelkästen means \"slip box\" in German, used as an external knowledge management system.<hr />- Luhmann recorded bibliographic sources and content notes on note cards, storing them in one box.<hr />- He created a second box for reflective thoughts, opinions, and further ideas, emphasizing atomic units—one idea per card.<hr />- Each note had a unique identifier, supporting precise linking and retrieval.<hr />- Luhmann's process involved thinking about existing notes before adding new ones, fostering interconnected ideas.<hr />- Links between notes used three types: structural outline references, subject-area tags, and direct related links.<hr />- Proper linking prevents notes from becoming isolated or lost.<hr />- The zettelkasten functioned as a conversational partner, provoking surprise and surface novel associative connections.<hr />- It facilitated knowledge growth by connecting disparate ideas, with future insights often emerging from these links.<hr />- Schmidt emphasizes the organized system of numbering, linking rules, and comprehensive keyword index.<hr />- Luhmann's method transformed notes into a network of thoughts, aligning with principles of atomicity, meaningful linking, and emergent serendipity.<hr />- Related concepts include learning through surprise and integrating randomness into knowledge systems.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"906":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/¶ Principle of atomicity.md","title":"¶ principle of atomicity","description":"Learn how the atomicity principle in the Zettelkasten method improves note-taking by focusing each note on a single clear idea for better connections and easier reuse.","spr_content":"- Atomicity mandates that each note contains a single idea or unit of thought.  <hr />- This aligns with the Zettelkasten method’s core, emphasizing clear, focused notes.  <hr />- Paraphrased: notes should be about one thing but encompass its full scope.  <hr />- Decomposing texts promotes decontextualization and independent evaluation of ideas.  <hr />- Atomic notes enhance linking and connection across ideas, unlike traditional multi-idea documents.  <hr />- Atomicity facilitates note re-use and interconnectedness.  <hr />- Notes must avoid excessive granularity to prevent fragments lacking context.  <hr />- Well-crafted atomic notes are understandable without external references, aiding future recall.  <hr />- Atomicity supports a web of interconnected, self-sufficient ideas—like constellations.  <hr />- Over-atomization risks fragmenting context, undermining meaning.  <hr />- Writing notes is a form of thinking; concise, atomic notes externalize thought processes.  <hr />- Sources emphasize clarity, completeness, and strategic decomposition for effective knowledge management.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"907":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/brainstorming-surfaces-available-ideas-not-new-ideas.md","title":"Brainstorming surfaces available ideas not new ideas","description":"Brainstorming often limits creativity by recycling existing ideas quickly, so building a personal idea repository can help generate more original and diverse solutions over time.","spr_content":"- Brainstorming is a cue for retrieving existing ideas, not generating new ones.  <hr />- Retrieved ideas are raw, unprocessed, and often not our best or most original.  <hr />- Top-of-mind ideas are more available but not necessarily relevant or innovative.  <hr />- Human attachment to first ideas creates bias, anchors thinking, and inhibits critical evaluation.  <hr />- Brainstorming fosters investment in initial ideas, discouraging disconfirmation and new insights.  <hr />- Empirical evidence shows brainstorming reduces idea quantity and narrows topic diversity compared to solo work.  <hr />- Time-limited sessions constrain idea development; connection formation often requires asynchronous processing.  <hr />- Effective creativity avoids forced brainstorming; instead, maintain an always-accessible repository of processed ideas.  <hr />- Knowledge work involves transforming existing ideas into novel insights, emphasizing continuous collection over episodic sessions.  <hr />- Optimizing for being wrong encourages exploration and refinement over quick idea generation.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"908":{"file_path":"playground/topics/zettelkasten/How to Take Smart Notes/≈ How to Take Smart Notes.md","title":"≈ how to take smart notes","description":"Discover how the Zettelkasten note-taking method builds interconnected notes to boost knowledge creation and idea discovery using simple, effective strategies for writing and learning.","spr_content":"- Zettelkasten is a note-taking system emphasizing knowledge generation through interconnected notes.  <hr />- It's a dynamic knowledge database fostering serendipitous idea discovery as it expands.  <hr />- Decontextualizing ideas by stripping them from original context makes them reusable and innovative.  <hr />- Store notes intentionally where they're likely to be encountered again; location matters.  <hr />- Knowledge accumulation is a compounding process, growing more valuable over time.  <hr />- Atomicity principle: notes should be indivisible, focused on a single concept.  <hr />- Different note types serve various functions within the system; variety enhances robustness.  <hr />- Notes should be in your own words to deepen understanding and ownership.  <hr />- Connect notes deliberately; emphasis on relationships enhances retrieval and insight.  <hr />- Broad reading with purpose feeds diverse, rich note creation.  <hr />- Rigid systems lack flexibility; fragile structures hinder growth.  <hr />- Design environments that promote desired behaviors; adaptable setups foster resilience.  <hr />- Brainstorming surfaces current ideas, not necessarily new ones; it’s a generative process.  <hr />- Writing is a form of thinking, not just recording; it reshapes understanding.  <hr />- Knowledge work involves transforming existing ideas into new insights; synthesis is key.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten > How to Take Smart Notes"},"909":{"file_path":"playground/topics/zettelkasten/§ Zettelkasten.md","title":"§ zettelkasten","description":"Discover how the Zettelkasten method, inspired by Niklas Luhmann, enhances personal knowledge management and learning through organized notes and creative surprise.","spr_content":"Zettelkästen is a personal knowledge management method inspired by sociologist Niklas Luhmann. It involves organizing notes to facilitate thought, discovery, and connection. The purpose of a Zettelkasten is to create a network of interconnected notes that support learning, creativity, and insight. Different kinds of notes exist within this system, including temporary, fleeting notes and permanent notes, which are permanently useful but not unchanging. Incorporating randomness into the system fosters unexpected connections, enhancing learning through surprises. Writing with a Zettelkasten involves linking notes to trigger associative thinking and generate new knowledge.","tags":"","authors":"","date":"","category":"playground > topics > zettelkasten"},"910":{"file_path":"playground/topics/elixir/§ elixir.md","title":"§ Elixir","description":"Explore comprehensive guides on Elixir programming, including testing, finite state machines, clustering, process groups, and PostgreSQL integration to enhance your Elixir development skills.","spr_content":"Elixir testing relies on acceptance tests for validating full workflows and integrations.  <hr />Finite State Machines (FSM) in Elixir are modeled using Erlang’s robust FSM implementations, emphasizing state transitions and event handling.  <hr />Clustering in Elixir enables distributed system scalability and resilience, with tools like Libcluster facilitating automatic node discovery and connection management.  <hr />Persistent and distributed data management in Elixir leverages PostgreSQL integration through libraries like pg, enabling scalable, consistent data handling across nodes.","tags":"elixir moc","authors":"","date":{"days":20201},"category":"playground > topics > elixir"},"911":{"file_path":"playground/topics/security/a-holistic-guide-to-security.md","title":"A Holistic: Guide to Security","description":"A high-level overview of how to implement a holistic approach to securing your application platform.","spr_content":"- Security is integral to client trust, surpassing mere technical concerns.<hr />- Launching a collaboration tool revealed security as a top client inquiry focus.<hr />- Early feature-driven development shifted to prioritizing data privacy, compliance, and security questions.<hr />- Customers' concerns stem from high-profile breaches; addressing them is crucial for trust, scaling, and sales.<hr />- Strategic security foundation enables feature delivery without compromising safety.<hr />- Objectives include securing applications, data, infrastructure; achieving global compliance; providing transparency; maintaining agility.<hr />- Security must be applied holistically across application, data, and development/infrastructure.<hr />- Application security involves preventing unauthorized access via secure authentication, API best practices, regular testing, aligned with OWASP standards.<hr />- Data security emphasizes encryption, user privacy, control, and compliance with GDPR and CCPA.<hr />- Development and infrastructure security incorporate role controls, multi-factor authentication, cybersecurity training, and ISO 27001 standards.<hr />- A three-month phased plan: immediate actions (MFA, data encryption), short-term (OWASP vulnerabilities, GDPR/CCPA compliance), long-term (environment segmentation, logging/monitoring).<hr />- Security strategies must be adapted to specific business needs and client contexts.<hr />- The outlined plan serves as a flexible blueprint for building and customizing security measures to protect and foster growth.","tags":"security startup","authors":"thanh","date":{"days":19972},"category":"playground > topics > security"},"912":{"file_path":"playground/topics/security/§ security.md","title":"§ Security","description":"Explore essential security fundamentals and principles with guides on applied security, key mechanisms against cyber threats, and a holistic approach to protecting your digital assets.","spr_content":"Security fundamentals form the basis of protecting assets, information, and systems. Principles include confidentiality, integrity, availability, and accountability. Security mechanisms serve as the key tools to counter cyber threats by enforcing these principles through encryption, access controls, and monitoring. A holistic security approach integrates technical, organizational, and human elements, emphasizing layered defense, risk management, and continuous monitoring. Each resource explores aspects of applied security, mechanisms in threat mitigation, and comprehensive security strategies, underscoring the interconnectedness of principles and practical implementation.","tags":"moc security","authors":"","date":{"days":20201},"category":"playground > topics > security"},"913":{"file_path":"playground/topics/golang/template-method-design-pattern.md","title":"A Tour of Template method pattern with Golang","description":"Template method: the problem, the concept, the solution, its use cases, implementations, pros & cons. The Template Method pattern in Go offers a powerful way to define algorithm skeletons and handle variations. We examine its application in user registration, showcasing code reusability and scalability in Golang development.","spr_content":"- The Template Method pattern defines a fixed algorithm skeleton, enabling subclasses to override certain steps without altering overall flow.<hr />- It is a Behavioral design pattern useful for operations with multiple approaches, sharing common steps.<hr />- The pattern involves a base class (or interface in Go) with a template method calling various steps in sequence.<hr />- Common steps are implemented once in the base class; specific steps are abstract or have default/override options.<hr />- Hooks are optional steps with default empty implementations, allowing subclasses to skip them without breaking the algorithm.<hr />- In the registration scenario, steps include starting, collecting input, verifying, welcoming, and redirecting.<hr />- The framework accommodates multiple verification methods (email, SMS, non-verified), each overriding Verify().<hr />- In Go, interfaces declare steps; the template method takes an interface to invoke these steps, enabling composition over inheritance.<hr />- Base registration struct provides default implementations; subclasses embed it and override specific steps as needed.<hr />- The pattern's benefits include structured reusability, scalability, and clear algorithm skeletons.<hr />- Drawbacks include tight coupling, potential code redundancy when customizing steps, and complexity in managing multiple conditions.<hr />- Applicability arises when tasks share many steps with minor variations, requiring a consistent operational template.<hr />- Proper implementation avoids breaking the algorithm due to improper overrides, ensuring robustness and flexibility.","tags":"behavioral-pattern design-pattern gang-of-four golang","authors":"anhnh","date":{"days":19902},"category":"playground > topics > golang"},"914":{"file_path":"playground/topics/golang/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines.md","title":"Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines","description":"Explore efficient techniques for handling concurrent workloads in Go, including worker pools, fan-out/fan-in patterns, pipelines, and semaphores. This guide provides practical examples, code snippets, and insights into implementing these patterns, discussing their benefits and potential drawbacks. Learn how to improve performance, scalability, and resource management in Go applications while avoiding common pitfalls like deadlocks and excessive resource consumption.","spr_content":"- Go provides high-performance, convenient concurrency primitives; GOMAXPROCS adjusts to physical cores for potential parallelism.<hr />- Concurrency primitives are simple but prone to misuse; careful design and correct combination are required for safe concurrency.<hr />- Patterns in Go group primitives into structures for effective multitasking—common patterns include worker pools, fan-out/fan-in, pipelines, and semaphores.<hr />- Worker pool pattern: fixed number of workers consuming tasks from a channel, processing, and sending results; scalable but limited scalability at fixed size.<hr />- Dynamic worker pool: adjusts worker count based on workload via channels and goroutines, enhancing scalability but increasing complexity.<hr />- Worker pool drawbacks: lacks task prioritization; resource management requires mechanisms like timeouts to avoid resource exhaustion and long blocking.<hr />- Fan-out/fan-in pattern: distributes work across multiple goroutines (fan-out) and collects/merges results (fan-in); improves throughput and code structure.<hr />- Fan-out involves multiple goroutines processing chunks concurrently; fan-in merges multiple output channels efficiently.<hr />- Distributed download and content processing example demonstrates concurrency, combining channels, goroutines, and synchronization for large data workloads.<hr />- Challenges include resource overuse from excessive goroutines, increased complexity, error propagation, and resource contention.<hr />- Using buffered channels, limiting goroutines, and employing context for cancellation manage resource consumption and improve robustness.<hr />- Pattern selection impacts resource management—over-creating goroutines leads to overhead, context switches, and potential deadlocks or starvation.<hr />- Operating system scheduling: goroutines multiplexed on logical processors; GOMAXPROCS controls parallelism level.<hr />- Deadlocks occur if goroutines wait indefinitely for resources; ensure release with defer, monitor resource locks.<hr />- Starvation: some goroutines never acquire resources under unfair scheduling; fairness mechanisms prevent indefinite blocking.<hr />- Context switching overhead depends on goroutine count, task complexity, cache effects; manage goroutines to reduce switches.<hr />- Efficient architecture involves breaking tasks into manageable units, avoiding long critical sections, and using channels for communication.<hr />- Use non-blocking I/O and asynchronous operations to prevent goroutine pauses that reduce throughput.<hr />- Overall design emphasizes scalable, maintainable concurrent systems with proper synchronization, resource limits, and error handling.","tags":"engineering golang practice tool","authors":"tieubao","date":{"days":19499},"category":"playground > topics > golang"},"915":{"file_path":"playground/topics/golang/unexpected-pitfalls-and-some-handy-patterns-with-concurrency-in-go.md","title":"Unexpected pitfalls and some handy patterns with concurrency in go","description":"Learn about common Go concurrency pitfalls and master handy patterns like goroutines, channels, fan-in, timeouts, and replication to build fast, robust concurrent programs with easy-to-use synchronization.","spr_content":"- The world exhibits numerous independently executing entities: people, cars, agents.  <hr />- Concurrency models real-world independence, structuring programs as composition of autonomous computations.  <hr />- Concurrency ≠ parallelism; focus is on independence and non-sequentiality, not necessarily simultaneous execution.  <hr />- Go language simplifies concurrency with `go` keyword, goroutines, channels, and synchronization primitives.  <hr />- Pitfalls include lack of synchronization, leading to data races and instruction reordering issues; should use channels or sync package.  <hr />- Using `time.After` creates timers that can lead to resource leaks; prefer `time.NewTimer` and explicit reset/stop.  <hr />- `time.Timer` misuse causes bugs; reset only after expiration or stopping; drain channel if needed; avoid concurrent use.  <hr />- Sync package types (e.g., Mutex) should be passed/pointer-referenced, not copied; copying may corrupt internal state.  <hr />- Channels can behave as futures/promises; be careful with sequential vs. concurrent value generation.  <hr />- Launching goroutines individually per task enables parallelism, reducing total execution time compared to serial processing.  <hr />- Multiplexing with fan-in consolidates multiple channels into one, enabling concurrent data collection.  <hr />- Lockstep vs. independent execution can be controlled via channels, signals, or message passing; signals can enforce order.  <hr />- The `select` statement orchestrates multiple communication operations; supports non-blocking, timeout, and default patterns.  <hr />- Timeout patterns with `select` and `time.After` can cancel slow operations but risk discarding results unless carefully replicated.  <hr />- Replication (multiple servers) with first-response selection (`First` function) enhances resilience against slow or failed back-ends.  <hr />- Full search engine simulation demonstrates constructing scalable, parallel, robust systems via composition of simple concurrent primitives without locks.  <hr />- Core principle: \"Don't communicate by sharing memory; share memory by communicating.\"  <hr />- Use goroutines and channels to build fast, reliable, and maintainable systems, but choose tools judiciously based on problem scale.","tags":"","authors":"","date":{"days":19276},"category":"playground > topics > golang"},"916":{"file_path":"playground/topics/golang/202211141287-go-json-parsing.md","title":"Go JSON parser: number <-> interface","description":"TLDR; be careful when using  map[string]interface{} to hold json number value, use custom decoder with newDecoder.UseNumber() to decode the json string.","spr_content":"- Go's JSON unmarshal defaults to float64 for numbers in interface{} types.<hr />- Using map[string]interface{} to decode JSON can cause large integers to be truncated or rounded.<hr />- Example: struct with large int64 yields JSON with number, but unmarshaling into interface{} parses number as float64.<hr />- Large JSON numbers may lose precision when decoded as float64 due to IEEE 754 representation.<hr />- To preserve number precision, invoke json.Decoder with UseNumber() before decoding.<hr />- Using json.NewDecoder(...).UseNumber() keeps JSON numbers as json.Number, avoiding float64 conversion.<hr />- Afterwards, manual type assertion (e.g., json.Number) is necessary for precise handling.<hr />- This method prevents accidental precision loss in large integers represented as JSON numbers.<hr />- Developers should prefer custom decoder with UseNumber() when handling large or precise numeric data.<hr />- Link: https://cs.opensource.google/go/go/+/refs/tags/go1.19.3:src/encoding/json/decode.go;l=844;drc=a11cd6f69aec5c783656601fbc7b493e0d63f605","tags":"backend decoder golang json","authors":"hieuvd","date":{"days":19310},"category":"playground > topics > golang"},"917":{"file_path":"playground/topics/golang/§ Go.md","title":"§ Go","description":"Explore comprehensive Go language tutorials covering concurrency, testing, design patterns, package management, performance profiling, and popular tools to master efficient Golang development and best practices.","spr_content":"- Go language is foundational for modern software engineering, emphasizing modular design, import strategies via repository paths, generics for type safety, and efficient data structures like slices and arrays.<hr />- Atomic package in Go provides low-level synchronization primitives, critical for concurrent programming.<hr />- Error handling in Go follows best practices, promoting explicit and maintainable patterns.<hr />- Concurrency and parallelism are core, with strategies such as worker pools, pipelines, and awareness of pitfalls; patterns like circuit breakers help manage resilience.<hr />- Testing in Go leverages unit testing, test doubles, and frameworks like Gomock to improve test quality and simplicity.<hr />- Design patterns such as Template Method and Extension Interface optimize code reuse and extensibility.<hr />- Package and module management involves organized structuring, with checks like Bunk License for compliance.<hr />- Profiling tools in Go aid performance tuning, detect bottlenecks, and optimize throughput.<hr />- Integration and messaging leverage Kafka, Nats, RabbitMQ, enabling scalable streaming and data pipelines.<hr />- For specialized tasks, tools like Go Selenium facilitate data crawling, and Golang excels in high-performance applications like video streaming.<hr />- Development environments can be enhanced by connecting Vim with Go, streamlining workflow.","tags":"golang moc","authors":"","date":{"days":20201},"category":"playground > topics > golang"},"918":{"file_path":"playground/topics/golang/go-import.md","title":"Go import design: using git repo path","description":"Go’s use of git repository paths as package identifiers is a unique and powerful feature. Unlike most languages that rely on centralized package repositories, Go links directly to git paths.","spr_content":"- Go’s import system is directly linked to git repository paths, serving as precise package identifiers.  <hr />- Using git URLs as import paths grants each package global uniqueness, avoiding namespace clashes.  <hr />- Example: `\"github.com/username/projectname/package\"`; the URL acts as package identity.  <hr />- This linkage fosters simplified dependency management: traceability, isolation, minimal tooling.  <hr />- Direct version control: Go modules tie specific git tags/commits to dependencies, enabling reproducible builds.  <hr />- No central registry needed; any git repository, public or private, can serve as a package source.  <hr />- Modular, self-contained packages promote reusability and ease maintenance.  <hr />- Git paths connect package management directly to source control, enhancing clarity and traceability.  <hr />- Compared to languages like Python, Java, Ruby—Go’s approach bypasses central registries, using source URLs.  <hr />- `go.mod` exemplifies explicit version pinning linked directly to git tags or commits.  <hr />- Earlier Go relied on `$GOPATH` and checked-out repositories, akin to isolated virtual environments.  <hr />- The original Go model envisioned multi-module workspaces with separate repositories per project, each containing source and build artifacts.  <hr />- `$GOPATH` defined project scope, dependencies vendored within, facilitating archival and sharing.  <hr />- Dependency updates in that model required manual tracking; no built-in versioning history.  <hr />- “go get -u” updates dependencies en masse, assuming compatibility; no absolute guarantee.  <hr />- Vendoring (introduced in Go 1.5) allowed bundling dependencies, but with limitations.  <hr />- The old system presumed API stability for sharing workspaces; less effective in dynamic ecosystems.  <hr />- The evolution reflects a transition from isolated workspaces to direct, URL-based dependency referencing for simplicity.","tags":"golang import","authors":"tieubao","date":{"days":20021},"category":"playground > topics > golang"},"919":{"file_path":"playground/topics/solana/§ Solana.md","title":"§ Solana","description":"Explore comprehensive guides on Solana core concepts, token standards, NFTs, development frameworks like Anchor, and DeFi innovations to build and optimize projects on the Solana blockchain.","spr_content":"Solana is a blockchain platform with core concepts focused on accounts and architecture. Token standards and NFTs revolve around how tokens operate and new standards introduced in 2022 for token creation, with Metaplex enabling NFT compression. Development leverages frameworks like Anchor for smart contract building. The DeFi ecosystem includes innovative AMMs such as the dynamic liquidity market, emphasizing concentrated liquidity. Knowledge gaps exist in program development best practices, security and auditing, and performance optimization.","tags":"blockchain moc solana","authors":"","date":{"days":20201},"category":"playground > topics > solana"},"920":{"file_path":"playground/topics/qa/§ qa.md","title":"§ QA","description":"Explore comprehensive guides on Quality Assurance (QA) including testing techniques, onboarding processes, and test case management to improve software quality and team efficiency.","spr_content":"Testing Techniques: Boundary and Equivalence Partitioning testing; prime models for input domain segmentation, reducing test cases, maximizing coverage, exploiting input similarities.  <hr />Onboarding & Processes: QC onboarding as initial knowledge transfer, process assimilation; sets foundation, accelerates model understanding of project norms, standards.  <hr />Test Case Management: Test cases breakdown structure as hierarchical organization, clarifies scope, components, facilitates traceability, supports systematic testing, aids maintenance.","tags":"moc qa","authors":"","date":{"days":20201},"category":"playground > topics > qa"},"921":{"file_path":"playground/topics/devbox/research/≈ Nix - Build the same thing at any time.md","title":"Nix - Build the same thing at any time","description":"An overview of how Nix enables deterministic Docker image builds through reproducible builds, pinning, and Flakes","spr_content":"- Nix enables building Docker images with minimum determinism via solid mechanisms.  <hr />- It allows precise version control of packages and dependencies, ensuring identical builds (reproducibility).  <hr />- Reproducible builds are achieved by combining pinning nixpkgs and fixed-output derivations.  <hr />- Pinning nixpkgs locks package sources to specific versions.  <hr />- Fixed-output derivation ensures build outputs are predictable and consistent.  <hr />- Nix introduced Flakes as a new feature to standardize input and output definitions.  <hr />- Flakes define a strict project structure with locked, explicit inputs (dependencies) and outputs.  <hr />- Flakes eliminate reliance on global Nix state during builds.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"922":{"file_path":"playground/topics/devbox/research/≈ Nix - Minimum changes, Minimum redundancies.md","title":"Nix - Minimum changes, Minimum redundancies","description":"An overview of how Nix addresses issues like shadow copies in Docker builds, improving build efficiency and speed","spr_content":"- Reproducible build issue resolved earlier.<hr />- Current problem: Docker build produces shadow copies.<hr />- Shadow copies caused by underutilized Content-addressable storage (CAS) in Docker.<hr />- CAS underutilization leads to slower build times in Docker.<hr />- Nix build is faster than Docker build due to efficient storage and caching.<hr />- Content-addressable storage enhances reproducibility and speed.<hr />- Docker’s inefficiency in storage management hampers build performance.<hr />- Proper CAS utilization can mitigate shadow copies and improve speed.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"923":{"file_path":"playground/topics/devbox/research/≈ Docker Issues.md","title":"Docker Build Issues","description":"An overview of the non-deterministic nature of Docker builds and related issues","spr_content":"Docker build variability due to non-determinism; identical Dockerfile may produce different images over time or environments. The root cause is Docker’s access to the public internet during build, allowing dynamic content retrieval. This causes unintended variability, such as unstable package installs and shadow copies. Both issues stem from non-reproducible build artifacts influenced by external factors.","tags":"devbox docker","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"924":{"file_path":"playground/topics/devbox/research/≈ Nix in building Docker images.md","title":"Nix: Revolutionizing Docker Image Builds","description":"Ditch the Docker headaches. Learn how Nix brings sanity to image building with determinism and efficiency.","spr_content":"- Docker simplifies containerization but has practical challenges in image building.<hr />- Common issues include inconsistent builds, bloated images, slow compilation, and dependency management complexity.<hr />- Nix represents a paradigm shift beyond traditional package managers, emphasizing reproducibility and deterministic builds.<hr />- Nix guarantees identical outputs from the same inputs, ensuring \"works everywhere.\"<hr />- It enables precise version pinning, avoiding random \"latest\" tags.<hr />- Nix produces minimal, efficient images by including only necessary components.<hr />- It employs smart deduplication and layer optimization across images.<hr />- Nix’s caching is granular, enabling faster rebuilds upon minor changes.<hr />- Parallel and incremental builds exploit hardware capabilities for rapid image creation.<hr />- Declarative system descriptions in Nix eliminate Dockerfile gymnastics, resolving dependency conflicts and handling transitive dependencies seamlessly.<hr />- A Nix-based Docker build example demonstrates integrating runtime environments with intricate dependency trees.<hr />- Nix transforms Docker image creation into a deterministic, efficient, and sanity-preserving process.<hr />- Adoption requires an initial learning curve but results in leaner, more reliable containers.<hr />- Nix fundamentally enhances Docker workflows, making images more predictable and manageable.<hr />- Relevant resources include Nix.org, Nix Pills, NixOS Docker tools, and Docker best practices documentation.","tags":"devbox docker nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"925":{"file_path":"playground/topics/devbox/research/content-addressable-storage-in-docker.md","title":"Devbox vs Nix: Why We Chose Simplicity","description":"Discover why Devbox is the smart choice for developers who want Nix's power without the learning curve","spr_content":"- Devbox simplifies Nix by removing complexity while preserving its core benefits.  <hr />- Nix provides isolated, reproducible environments portable across machines.  <hr />- Devbox offers these benefits without requiring Nix language expertise—like an automatic transmission race car.  <hr />- Nix’s flexibility includes advanced features like custom derivations and flakes; Devbox can access these when needed.  <hr />- Devbox is developer-centric, focusing solely on creating excellent dev environments, not on Nix’s full versatility.  <hr />- User interface comparison: Nix uses a complex configuration language; Devbox uses simple JSON, easier for onboarding.  <hr />- No need to learn Nix language itself; JSON suffices for most use cases.  <hr />- Devbox’s layered approach allows starting simple and adding complexity as required, unlike Nix’s upfront complexity.  <hr />- Devbox aims to make dev environments powerful yet easy to set up—accelerating team productivity.  <hr />- In practical terms, Devbox transforms novices into effective users immediately, leveraging Nix’s strengths underneath.","tags":"devbox nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > research"},"926":{"file_path":"playground/topics/devbox/guide/containerless.md","title":"Ditch the Containers: Go Containerless with Devbox","description":"Build a lean, mean Golang backend without the container bloat. Here's how.","spr_content":"- Containers can be overkill for local development; alternative approaches exist.  <hr />- Devbox provides a containerless environment via Services and Plugins, enabling streamlined local setup.  <hr />- Initializing Devbox creates a minimal devbox.json with schema, empty packages, and simple shell hooks.  <hr />- Adding programming languages like Go is straightforward; installed in project-specific directories, verified via `which go`.  <hr />- Connecting to databases (e.g., PostgreSQL) via Devbox automates environment setup: YAML configurations, environment variables, and management commands.  <hr />- Initialization steps: `initdb`, starting services (`devbox services start` or `up`), creating databases, and updating app configuration with connection details.  <hr />- Running the app confirms successful database connection; Devbox abstracts environment complexity.  <hr />- Devbox supports multiple languages and system libraries within a single environment, ensuring reproducibility and avoiding \"it works on my machine.\"  <hr />- Version pinning enhances consistency; custom packages can be pulled directly from GitHub, bypassing Docker limitations.  <hr />- Devbox Services enable orchestrating complex workflows (e.g., Kafka, Zookeeper) with simple commands, no Docker-compose needed.  <hr />- Benefits include speed, flexibility, transparency, and guaranteed uniform environments across devs.  <hr />- Moving beyond containers, Devbox offers granular control and simplicity for local development environments, fostering productivity.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > guide"},"927":{"file_path":"playground/topics/devbox/guide/devbox-json.md","title":"Devbox.json: Your Project's DNA","description":"Master your Devbox environment with this no-nonsense guide to devbox.json","spr_content":"- `devbox.json` acts as a central blueprint for automating and reproducing dev environments.<hr />- Packages in `devbox.json` serve as a customizable toolbox; versions specified with `@<version>` enhance reproducibility.<hr />- Use `devbox search` to discover available package versions, ensuring precise setup.<hr />- Environment variables in `env` tailor the runtime context, optimizing environment-specific needs.<hr />- The `shell` section manages startup commands (`init_hook`) and shortcut scripts for development tasks.<hr />- `init_hook` runs setup commands each time a shell is launched, preparing the environment automatically.<hr />- `scripts` define reusable command shortcuts, streamlining complex or repetitive actions.<hr />- `include` enables extending the environment by pulling in external plugins from GitHub, local paths, or built-in plugins.<hr />- A comprehensive `devbox.json` integrates packages, environment variables, shell init commands, scripts, and plugins, forming a robust configuration.<hr />- The configuration file is a detailed, portable blueprint that enhances efficiency and consistency in development workflows.<hr />- Properly crafted `devbox.json` saves time, reduces setup friction, and ensures environment fidelity across systems.<hr />- Think of `devbox.json` as a meticulously fitted pair of shoes—customized for your workflow, ready to take you further.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > guide"},"928":{"file_path":"playground/topics/devbox/guide/run-your-own-shell.md","title":"Devbox Shell: Your Dev Environment, Your Rules","description":"Master the art of running your own shell with Devbox - locally or globally. No more environment headaches.","spr_content":"- Devbox provides customizable development environments via shell initialization.  <hr />- Installation command: `curl -fsSL https://get.jetify.com/devbox | bash` retrieves and runs the installer script.  <hr />- Two primary modes: local (project-specific) and global (system-wide).  <hr />- Devbox Local: creates isolated project environments with `devbox init`, producing `devbox.json` and `devbox.lock` as environment blueprint and snapshot.  <hr />- Packages are added via `devbox search` and `devbox add`, modifying `devbox.json` accordingly.  <hr />- To start the local environment, run `devbox shell`; for pure isolation, `devbox shell --pure`.  <hr />- Devbox Global: integrates into shell startup files with `eval \"$(devbox global shellenv)\"`, enabling system-wide access.  <hr />- Packages are added globally with `devbox global add`; global environment resides typically in `~/.local/share/devbox/global/default`.  <hr />- When shell is outdated, run `refresh-global` to update environment references.  <hr />- Commands like `which go` reveal the active Devbox environment paths.  <hr />- Devbox eliminates environment inconsistencies, ensuring reliable, predictable development setups.  <hr />- The approach leverages Nix shell foundations, emphasizing reproducibility and isolation.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > guide"},"929":{"file_path":"playground/topics/devbox/introduction/¶ Nix Flakes.md","title":"Nix Flakes: Next-Level Package Management","description":"Discover how Nix Flakes revolutionize package management with reproducibility and discoverability","spr_content":"- Setup sharing often fails with \"It doesn't work on my machine\" due to environment discrepancies.  <hr />- Nix Flakes act as self-contained, reproducible units akin to `package.json` but more powerful.  <hr />- Flakes include a `flake.lock` for dependency pinning, ensuring consistency.  <hr />- Reproducibility is improved: same setup across all machines, reduces \"it works locally\" issues.  <hr />- Discoverability is simplified: share Flakes as easily as Git repositories.  <hr />- Flexibility increases: customize packages without breaking compatibility.  <hr />- Flakes enable customizing complex setups like PostgreSQL with extensions (e.g., TimescaleDB).  <hr />- Example Flake dynamically generates packages for all supported systems.  <hr />- Use `pkgs.postgresql_15.withPackages` to add extensions like TimescaleDB seamlessly.  <hr />- Inputs fetch latest `nixpkgs` and utilities; outputs generate per-system configurations.  <hr />- Flakes' design allows easy extension: add extensions to `psqlExtensions`.  <hr />- Works universally on Linux, Mac, etc., due to system-agnostic design.  <hr />- Shareable and replicable deployment: identical setups for all users.  <hr />- Flakes revolutionize package management, replacing \"works on my machine\" with guaranteed consistency.  <hr />- Promotes proactive dependency management and environment control.","tags":"devbox nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"930":{"file_path":"playground/topics/devbox/introduction/¶ Devbox Services.md","title":"Devbox Services: Tame Your Daemons with process-compose","description":"Discover how Devbox Services uses process-compose to wrangle your daemon applications without the container overhead","spr_content":"- process-compose is a lightweight alternative to Docker Compose for orchestrating non-containerized apps, emphasizing simplicity and direct process control.<hr />- Defined in YAML (`process-compose.yml`), processes specify commands, lifecycle (daemon), shutdown procedures, and health checks.<hr />- Example service: PostgreSQL configured to preload TimescaleDB, started via scripting, set to restart always, with health checked by `pg_isready`.<hr />- Example service: Telegram bot executing setup commands, depending on PostgreSQL's health, with readiness verified via HTTP `/healthz`.<hr />- No Docker, no containers; modeling pure process orchestration with declarative configs.<hr />- Devbox wraps process-compose into a CLI for easier management: list (`ls`), restart, start, stop.<hr />- Key advantages: eliminates Docker overhead, accelerates dev cycles, maintains process fidelity.<hr />- Underlying concept: mimics container orchestration features—health, dependencies, restarts—using native OS processes.<hr />- Core metaphor: process-compose as a leaner, faster cousin of Docker Compose, tailored for direct process orchestration.<hr />- Analogous to orchestrating services directly on host OS with scripted health and dependency management, removing container layer.<hr />- References point to documentation for deep dives into process-compose, Devbox, PostgreSQL, and TimescaleDB integrations.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"931":{"file_path":"playground/topics/devbox/introduction/¶ Devbox.md","title":"Devbox: Your Dev Environment on Steroids","description":"Forget setup headaches. Devbox delivers instant, rock-solid dev environments powered by Nix.","spr_content":"- Onboarding new developers or testing tools often causes setup issues; these frustrations are common.<hr />- The ideal dev environment would be identical across teams, quick to test, fast to load, conflict-free, portable.<hr />- Devbox aims to realize this ideal by simplifying environment management through a centralized configuration.<hr />- Core concept: a single `devbox.json` file encapsulates dependencies, environment variables, and setup scripts.<hr />- Once configured, Devbox automates environment creation, ensuring consistency and reducing manual intervention.<hr />- The approach guarantees \"works everywhere\" by standardizing setups across machines.<hr />- Example `devbox.json` specifies package versions, environment variables, and initialization hooks.<hr />- Built on Nix, Devbox leverages 80,000+ packages from Nixpkgs; advanced users can directly use Nix Flakes.<hr />- Devbox combines power (via Nix) with simplicity (automatic management), appealing to developers wanting ease without sacrificing capabilities.<hr />- Quick start: install Devbox, initialize project, add packages, launch shell—minimal command set.<hr />- Devbox is a user-friendly interface to Nix, acting as \"training wheels\" for Nix's complexity.<hr />- It offers a revolution in dev environment management, transforming \"works on my machine\" into a universal truth.<hr />- A learning curve exists, but benefits outweigh the initial effort—once adopted, it’s hard to live without.<hr />- References support deeper exploration: official docs, Nix, nixpkgs, Nix Flakes.<hr />- Overall, Devbox enhances development reliability, team collaboration, and agility by automating and standardizing local setups.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"932":{"file_path":"playground/topics/devbox/introduction/¶ Nix Shell.md","title":"Nix Shell: Bulletproof Development Environments","description":"Discover how Nix Shell creates rock-solid dev environments that work everywhere, every time.","spr_content":"- Developers desire portable, cloneable, isolated environments for testing and deployment.  <hr />- Nix Shell provides instant, clean environments without system pollution.  <hr />- It ensures reproducibility across all machines, eliminating \"it works on my machine.\"  <hr />- Supports multiple package versions simultaneously without conflicts via hashing.  <hr />- The Nix store acts as a secure vault, isolating each package version.  <hr />- Packages are fingerprinted with hashes reflecting their exact state, enabling side-by-side coexistence.  <hr />- User environments are sandboxed, allowing package installation without sudo.  <hr />- Nix Shell has two modes: team-friendly (reproducible, global PATH) and personal (enhanced, customizable shell).  <hr />- It embodies a development philosophy: environment reliability, portability, and ease.  <hr />- Facilitates rapid environment replication on any machine—seamless, conflict-free, version-precise.","tags":"devbox nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"933":{"file_path":"playground/topics/devbox/introduction/¶ Devbox Plugins.md","title":"Devbox Plugins: Turbocharge Your Dev Setup","description":"Discover how Devbox Plugins streamline your development workflow by automating package setup and configuration","spr_content":"- Configuring packages manually in dev environments is tedious and time-consuming.  <hr />- Devbox Plugins simplify package integration through automation.  <hr />- Adding a package like Nginx involves minimal steps—plugin manages configs, environment variables, and service setup.  <hr />- Default configs are provided, ensuring consistent and optimized setup without manual editing.  <hr />- Plugins expose environment variables for easy customization.  <hr />- They organize configuration files systematically, preventing clutter and confusion.  <hr />- Plugins enable start/stop commands for services, streamlining workflow.  <hr />- Built-in plugins are pre-made for popular packages—easy, ready-to-use solutions.  <hr />- Custom plugins are user-defined, customizable, and hosted locally or on platforms like GitHub.  <hr />- Plugins participate actively in Devbox lifecycle—initialization, runtime, and service management.  <hr />- A plugin's structure includes documentation, configuration, service definitions, and metadata (`plugin.json`).  <hr />- `plugin.json` orchestrates plugin behavior: dependencies, environment variables, activation logic.  <hr />- Using plugins reduces setup headaches, accelerates development, and encourages reproducibility.  <hr />- Creating custom plugins follows a straightforward schema—empowering DIY customization.  <hr />- Devbox Plugins transform tedious setup into an automated, reliable process—turning configuration into a plug-and-play experience.","tags":"devbox","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"934":{"file_path":"playground/topics/devbox/introduction/why-devbox-but-not-nix.md","title":"Devbox vs Nix: Why We Chose Simplicity","description":"Discover why Devbox is the smart choice for developers who want Nix's power without the learning curve","spr_content":"- Devbox simplifies Nix by removing the learning curve, acting as training wheels for Nix’s powerful features.  <hr />- Built on Nix, it provides isolated, reproducible environments accessible across any machine, enhancing consistency and portability.  <hr />- Devbox encapsulates Nix’s capabilities into a developer-friendly interface focused solely on dev environments, reducing complexity.  <hr />- It uses a simple JSON interface, making environment setup straightforward without requiring knowledge of Nix’s native language.  <hr />- Devbox maintains access to advanced Nix features (custom derivations, flakes), allowing escalation in complexity as needed, but from a simple starting point.  <hr />- Compared to raw Nix, Devbox fosters quick adoption and ease of use, enabling teams to become proficient rapidly.  <hr />- It embodies a philosophy that developer environments should be both powerful and effortless to configure.  <hr />- Devbox is a bridge: powerful enough for experts, accessible enough for beginners, promoting productivity and environment stability.","tags":"devbox nix","authors":"bievh","date":{"days":19936},"category":"playground > topics > devbox > introduction"},"935":{"file_path":"playground/topics/devbox/§ Devbox.md","title":"§ Devbox","description":"A comprehensive guide to Devbox: The tool that creates isolated, reproducible development environments anywhere, without Docker or VMs, powered by Nix.","spr_content":"Devbox emerges as a transformative development tool, streamlining workflows, simplifying complex setups, and enabling customization. It offers a modular architecture with building blocks including core Devbox, services, and plugins for extendibility. From initial setup—crafting personalized shells and environment blueprints via devbox.json—to advancing beyond containers into containerless innovation, Devbox facilitates efficiency and flexibility. Its evolution traces from traditional methods—pre-Docker approaches, Docker's promise and pain—to an enlightened paradigm with Nix and Devbox, driving local development and production successes. Deep foundational knowledge includes Nix Shell's stability, Nix Flakes' reimagined package management, and how Devbox balances simplicity with the power of Nix, marking a strategic leap in modern development environments.","tags":"devbox moc nix","authors":"bievh","date":{"days":19944},"category":"playground > topics > devbox"},"936":{"file_path":"playground/topics/devbox/story/devbox-production-success-story.md","title":"Devbox in Production: Our Success Story","description":"How we transformed our development and deployment process with Devbox.","spr_content":"- Traditional project setup likened to blindfolded IKEA assembly—clunky, error-prone, frustrating.  <hr />- Devbox transforms this process into a streamlined, repeatable, and developer-friendly workflow.  <hr />- Key projects adopted Devbox fully; side projects benefit from its efficiency.  <hr />- Dev environment pre-configuration: from hours to minutes—cloning, `devbox shell`, immediate coding.  <hr />- `devbox.json` defines packages and init hooks, ensuring consistency and instant onboarding.  <hr />- Deployment via `devbox generate dockerfile` eliminates Dockerfile crafting, ensures dev-prod parity.  <hr />- Custom Nix Flakes create reusable, versioned, portable configurations; e.g., PostgreSQL with TimescaleDB extension.  <hr />- Flake management ensures uniformity across developers, environments, systems; easy extension with additional plugins.  <hr />- Devbox config acts like a love letter—comprehensive, multi-layered, optimized for productivity.  <hr />- Included services: Node.js, Python, Elixir, Redis, Kafka, Zookeeper—covering full-stack and data streaming needs.  <hr />- Version pinning guarantees reliability; no drift or mysterious failures.  <hr />- Cross-platform compatibility—macOS (darwin), Linux, adaptable.  <hr />- Custom packages (e.g., Timescale-enabled PostgreSQL) serve specialized needs—gourmet dev environments.  <hr />- Environment variables (`PKG_CONFIG_PATH`, `KAFKA_CONFIG`) preset for seamless setup.  <hr />- Scripts automate complex distributed system operations—start, stop, status—simplifying dev chaos.  <hr />- Plugins—PostgreSQL plugin—leverage existing solutions, avoid reinventing wheels.  <hr />- Multi-service local clusters (Kafka, Zookeeper, etc.) achievable on laptop—mini data centers.  <hr />- Multi-language stacks configured together—fast prototyping and testing with minimal effort.  <hr />- Configurations resemble a constellation—services aligned, ready for launch—maximizing developer productivity.  <hr />- Overkill for simple apps; essential for complex architectures—shifting culture from setup frustration to rapid iteration.  <hr />- Devbox replaces excuses: no more \"works on my machine,\" no more lengthy setup; instant readiness.  <hr />- While not perfect, covers 90% of needs—bests tools for scaling development velocity.","tags":"case-study devbox nix","authors":"bievh","date":{"days":19944},"category":"playground > topics > devbox > story"},"937":{"file_path":"playground/topics/personas/mbti/note.md","title":"Note","description":"Discover detailed insights into the 16 personality types, helping you understand yourself and others better through clear descriptions and practical advice.","spr_content":"","tags":"","authors":"","date":"","category":"playground > topics > personas > mbti"},"938":{"file_path":"playground/topics/personas/§ Personas.md","title":"§ personas","description":"Learn how to create effective user personas based on qualitative research to improve UX by focusing on user tasks, goals, and motivations while avoiding assumptions and lack of context.","spr_content":"- Personas represent shared understanding of users through communicated research or assumptions.  <hr />- Personas document user insights and collective perspectives.  <hr />- Methods exist to overcome personas' limitations, such as enriching context and clarifying assumptions.  <hr />- Shortcomings include lack of rich contextual detail and potential to foster assumptions.  <hr />- Personas alone do not cultivate empathy within teams.  <hr />- Creating personas begins with qualitative research to capture user voices.  <hr />- Focus personas on tasks, goals, motivations rather than just demographics.  <hr />- The number of users to interview depends on research goals; usually enough to reach data saturation.  <hr />- UX research underpins persona creation to ensure authenticity and relevance.","tags":"","authors":"","date":"","category":"playground > topics > personas"},"939":{"file_path":"playground/topics/blockchain/layer-2.md","title":"Layer 2: Scaling Solutions for Ethereum","description":"Explore Layer 2 solutions for Ethereum scaling, including rollups and their benefits. Learn how Layer 2 extends Ethereum's capabilities, reduces gas fees, and maintains security while improving transaction throughput and efficiency.","spr_content":"Ethereum scaling solutions extend blockchain capabilities by creating separate Layer 2 networks that inherit Ethereum's security guarantees. These Layer 2s process transactions independently, then settle back to Ethereum Layer 1, which functions as a data availability layer, posting transaction data and securing Layer 2 state. This approach enhances scalability while maintaining decentralization and security, addressing the blockchain trilemma. The core method involves Layer 2 communicating with Layer 1 via transaction bundles, with Layer 2 computing and submitting proofs for finalization, thus offloading transaction load from Layer 1. Rollups are the preferred Layer 2 strategy, aggregating hundreds of transactions into a single Layer 1 transaction to dramatically reduce gas fees—up to 100x cheaper—by batching and securing transaction proofs using optimistic or zk (zero-knowledge) rollup techniques. Examples include Arbitrum One, Optimism, and Boba Network.","tags":"blockchain ethereum network","authors":"bienvh","date":{"days":19332},"category":"playground > topics > blockchain"},"940":{"file_path":"playground/topics/blockchain/README.md","title":"§ Blockchain","description":"Explore comprehensive guides on blockchain technology, including foundational concepts, layer 2 scaling, security, smart contracts, zero-knowledge proofs, interoperability, and advanced topics to deepen your understanding and development skills.","spr_content":"- Foundational topics underpin blockchain tech: blocks, distributed systems, PoS, smart contracts, general principles, documentation, precautions, blockchain security.<hr />- Core blockchain concepts involve tokens, multisign wallets, liquidity pools, NFT fractionalization, DCA, emphasizing asset management and security.<hr />- Layer 2 solutions enhance scaling; zk rollups, Polygon zkEVM, StarkNet, Plonky2 optimize efficiency and throughput.<hr />- Interoperability built via blockchain bridges, cross-chain swaps, Ton, federated Byzantine models, enabling multi-chain communication.<hr />- Oracles serve as external data sources; external calls connect off-chain info with on-chain logic.<hr />- Zero-knowledge proofs (zk-SNARKs) provide privacy-preserving validation, essential for confidential transactions.<hr />- Development tools like Foundry facilitate EVM smart contract development; Web3, ElizaOS support AI integration; blockchain design is tailored for user experience.<hr />- Concepts are interconnected: scaling and interoperability depend on robust security, verifiable proofs, and developer tooling; foundational knowledge supports advanced, privacy-preserving, multi-chain blockchain systems.","tags":"blockchain moc","authors":"","date":{"days":20201},"category":"playground > topics > blockchain"},"941":{"file_path":"playground/topics/blockchain/blockchain-security.md","title":"Blockchain security checklist","description":"Ensure blockchain security with this checklist covering centralization, event logging, code safety, gas optimization, unit testing, coding style, logical issues, and potential attacks for safer smart contract development.","spr_content":"- The project emphasizes decentralization and privilege limitation; ownership controls access; initial token distribution prefixes recipient addresses; multisign wallets secure development privileges; unrestricted privileged functions pose risks.  <hr />- Event logging requires hooks on critical functions; clear, unambiguous naming; prefixed with \"Log\"; capture significant transactions and state changes.  <hr />- Volatile code mandates reentrancy guards; verifying external call return values; avoiding state changes post external calls; using safe math operations; preventing integer under/overflows; validating inputs; structured, readable code; avoiding transfer()/send(); implementing error handling with try/catch; preferring pull over push mechanics; avoiding delegatecall to untrusted code; handling Ether carefully.  <hr />- Gas optimization: avoid recursion; select appropriate data types; initialize variables in constructors; prefer external over public functions.  <hr />- Unit testing should cover getters/setters, overflow scenarios, external calls; testing pre-deployment is essential.  <hr />- Coding style: language conventions; configuration storage in upgradeable contracts; version control; reusable code with modifiers; minimal and efficient source code; documenting deployment status.  <hr />- Logical issues: monitor minting totals; use msg.sender, not tx.origin, for authorization; timestamp can be miner-manipulated; avoid block.number for timestamps.  <hr />- Potential attacks include sandwich attacks and other front-running vectors; proactive checks are necessary.","tags":"","authors":"","date":"","category":"playground > topics > blockchain"},"942":{"file_path":"playground/topics/blockchain/ton-blockchain-of-blockchains.md","title":"Ton: Blockchain of blockchains","description":"Talk about TON and its core technologies. Why do we call TON the 'Blockchain of blockchains'?","spr_content":"- TON (The Open Network) is a blockchain platform developed by the Telegram team, emphasizing scalability and security.  <hr />- Unique sharding technology, Multi-blockchain architecture, and Instant Hypercube Routing are core innovations enabling fast transactions and smart contracts.  <hr />- Actor model: a concurrency paradigm where all entities are actors, and each actor is a smart contract with individual storage and behavior.  <hr />- Wallets are actors, illustrating the actor-centric architecture of TON.  <hr />- Actor behavior involves event triggering, event handling via the Virtual Machine (TVM), state modification, message generation, and standby mode.  <hr />- A sequence of actor actions results in a blockchain transaction; multiple transactions form a chain, called a Chain or specifically an AccountChain when owned by an account.  <hr />- Groupings of AccountChains form ShardChains, which are stored in AccountShards.  <hr />- Hierarchical structure: AccountChain → ShardChain → Blockchain (Masterchain for managing multiple Workchains, Basechain as a primary chain).  <hr />- TON has two main blockchains: Workchain (normal transactions) and Masterchain (manages other chains).  <hr />- Scalability relies on splitting (dividing) and merging (combining) chains by account address prefixes, achieved through deterministic, bit-based shard assignment.  <hr />- ShardChains can be split when transaction volume is too high, distributing load among more nodes; they can also be merged to optimize underutilized chains.  <hr />- All accounts are treated as independent actors within a hypercube network topology, facilitating message passing.  <hr />- Instant Hypercube Routing uses binary string addressing, flipping bits to route messages efficiently between shards.  <hr />- Hypercube structure provides multi-dimensional, scalable, and fault-tolerant message routing with logarithmic neighbor knowledge.  <hr />- E-Cube Routing exemplifies the hypercube routing concept, ensuring rapid message delivery despite network failures.  <hr />- Overall, TON integrates multiple blockchains via sharding, actor model, and Hypercube Routing, delivering high scalability, speed, and security.  <hr />- This architecture exemplifies a “blockchain of blockchains,” fostering interoperability and a robust decentralized ecosystem.","tags":"blockchain ton web3","authors":"bievh","date":{"days":19915},"category":"playground > topics > blockchain"},"943":{"file_path":"playground/topics/ux/§ UX Design.md","title":"§ ux design","description":"Learn why the three clicks rule is a myth and how understanding personas and avoiding skeuomorphic designs can boost innovation and improve user experience.","spr_content":"Three clicks rule is a myth; user behavior and navigation are not reliably governed by arbitrary click counts.  <hr />Personas are simplified representations of user types, aiding design and targeting.  <hr />A persona encapsulates demographics, behaviors, goals, and motivations.  <hr />Skeuomorphism employs familiar, real-world cues in digital design, evoking tangible associations.  <hr />Skeuomorphic models constrain innovation by reinforcing existing paradigms, limiting creative exploration and new interfaces.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"944":{"file_path":"playground/topics/ux/make-research-insights-easy-to-find-consume-and-use.md","title":"Make research insights easy to find consume and use","description":"Make research valuable by publishing insights that are easy to find, access, and use, helping organizations unlock knowledge beyond just storing data on slides or drives.","spr_content":"Research is often confined to PowerPoint slides and stored on hard drives, rendering it inaccessible. For research and insights to be valuable, they must be published in accessible formats. Accessibility requires high availability, ease of discovery, straightforward consumption, and usability. Researchers bear responsibility for designing repositories aligned with these accessibility principles. Effective repositories should serve as organizational multipliers by enabling knowledge dissemination and creating new insights. They should not only catalog information but also facilitate insight generation, transforming passive data into active knowledge. This aligns with the concept that research and insights should empower organizations, democratize access, and foster continuous learning and innovation.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"945":{"file_path":"playground/topics/ux/¶ Skeuomorphism.md","title":"¶ skeuomorphism","description":"Skeuomorphism is a design approach that mimics familiar objects to help users understand new technology, but it can also limit innovation by sticking to old models.","spr_content":"Skeuomorphism embeds familiar attributes from physical materials or techniques into design. It creates metaphorical associations, such as a digital app mimicking analog devices or a container resembling natural materials. Such designs provide affordances, guiding user interaction through familiar cues, aiding comprehension of new objects. However, skeuomorphism can restrict innovation by anchoring perceptions to old paradigms. It shapes understanding through metaphors, influencing how we interpret and engage with technology. These metaphors can limit creative potential when transitioning from analog to digital realms.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"946":{"file_path":"playground/topics/ux/Sensemaking/¶ Sensemaking.md","title":"¶ sensemaking","description":"Sensemaking is a humanities-based method that uses cultural understanding and empathy to interpret how people relate to their world, offering deep insights beyond data and algorithms.","spr_content":"- Sensemaking is a humanities-based knowledge production method focused on deep cultural understanding.  <hr />- It draws heavily from phenomenology, especially Heidegger's \"being\" as interpretive lens.  <hr />- Prioritizes culture over individuals, emphasizing how cultural contexts shape worldview and relationships.  <hr />- Involves studying key texts and language to grasp how people live and interpret their environment.  <hr />- Transforms perception from viewing a space as items to understanding the underlying cultural structure.  <hr />- Represents an analytical form of empathy that uncovers not only events but the relations and meanings people assign.  <hr />- Emphasizes understanding structural frameworks behind thoughts rather than surface opinions.  <hr />- Opposes algorithmic thinking; prefers depth and richness over breadth and superficiality.  <hr />- Produces \"thick data\"—contextual, qualitative insights—rather than quantitative metrics.  <hr />- Assists in identifying suitable contexts for data collection and synthesizing data into a worldview.  <hr />- Functions as a guiding \"north star,\" not strict instructions, for navigating complex cultural terrains.  <hr />- Related concepts include abductive reasoning and various forms of empathy.  <hr />- Based on Christian Madsbjerg's \"Sensemaking\" (2017).","tags":"","authors":"","date":"","category":"playground > topics > ux > Sensemaking"},"947":{"file_path":"playground/topics/ux/Sensemaking/≈ Sensemaking.md","title":"≈ sensemaking","description":"Discover how sensemaking, a humanities-based approach, helps businesses gain deep cultural insight beyond data by using thick data and intuition to understand people and contexts.","spr_content":"- Modern culture, especially business, overly favors scientific and algorithmic thinking.<hr />- Data obsession narrows understanding of people and culture; quantification fails to capture depth.<hr />- Sensemaking, inspired by phenomenology, offers an alternative to data-driven approaches.<hr />- Sensemaking yields thick data—rich, qualitative insights about human relation to context.<hr />- There are four types of knowledge (Madsbjerg); sensemaking connects with these types via empathy.<hr />- Different forms of empathy are vital to true understanding; honing intuition enhances sensemaking.<hr />- Algorithmic thinking is culturally biased, diminishing capacity to interpret qualitative, nuanced information.<hr />- People cannot be reduced to computational processes; human complexity resists purely algorithmic models.<hr />- Peirce identifies four reasoning offenses; only abductive reasoning generates new ideas.<hr />- Reasoning errors hinder genuine understanding; awareness of offenses improves sensemaking.<hr />- Design thinking often spends insufficient time in the problem space, leading to surface-level insights.<hr />- Design thinking risks superficial knowing, lacking depth compared to humanities-based sensemaking.<hr />- Emphasis on qualitative, context-rich data (thick data) fosters more authentic human understanding than data alone.","tags":"","authors":"","date":"","category":"playground > topics > ux > Sensemaking"},"948":{"file_path":"playground/topics/ux/Sensemaking/change-happens-gradually-then-suddenly.md","title":"Change happens gradually then suddenly","description":"Discover how long-term change unfolds through subtle signals and storytelling, and learn why we often underestimate its impact over ten years despite early weak signs.","spr_content":"- Large-scale change often appears sudden but typically gestates over extended periods.  <hr />- Early signals of change are subtle, peripheral, and outside usual perception; difficult to observe in real-time.  <hr />- Initial indicators are primarily qualitative, conveyed through narratives and storytelling rather than quantitative data.  <hr />- Overconfidence in short-term change (e.g., two years) contrasts with underestimation of long-term change (e.g., ten years).  <hr />- Recognizing long-term signals requires attention to weak indicators and a long-term perspective.  <hr />- The future’s distribution is uneven; it is already present in some contexts and not others.  <hr />- Base strategic decisions on leading indicators rather than lagging metrics.  <hr />- Long-term visions help define near-term objectives through backward planning.  <hr />- Innovation occurs in cascades, with inflection points disrupting prevailing assumptions.  <hr />- De-risk innovation via smaller, incremental bets rather than large leaps.  <hr />- Strategic inflection points challenge foundational industry or business paradigms.  <hr />- Real change is best understood through sensemaking, integrating humanities to interpret subtle shifts.  <hr />- OODA loop (Observe, Orient, Decide, Act) accelerates response to emerging signals.  <hr />- Recognizing nascent change involves sifting narratives, stories, and weak signals rather than relying solely on quantitative evidence.","tags":"","authors":"","date":"","category":"playground > topics > ux > Sensemaking"},"949":{"file_path":"playground/topics/ux/§ UX Research.md","title":"§ ux research","description":"Explore essential UX research methods, data quality, reasoning techniques, and effective ways to share insights to improve digital experiences and scale user research across organizations.","spr_content":"- Good research begins with well-formed questions, emphasizing problem space exploration.  <hr />- Spending more time understanding the problem improves research quality.  <hr />- User research teams function as organizational multipliers, amplifying insights across teams.  <hr />- Digital experiences require longitudinal testing to capture evolving user interactions.  <hr />- There exists a landscape of UX research methods, each suited to different contexts.  <hr />- UX research activities align with the product lifecycle, from discovery to optimization.  <hr />- Qualitative and quantitative research embody distinct epistemological philosophies: interpretative versus empirical.  <hr />- Qualitative methods help create mental models of the problem space, focusing on depth.  <hr />- Qualitative care about data saturation, prioritizing richness over sample size.  <hr />- Quantitative measures detect behavior changes, enabling trend analysis.  <hr />- Excessive data can lead to a default reliance on quantitative solutions, which might be lossy.  <hr />- Prototypes are best for testing refined ideas, not initial concepts.  <hr />- Determining good sample sizes depends on context; qualitative emphasizes saturation, not quantity.  <hr />- UX researchers should prioritize the strength and robustness of evidence over sheer sample size.  <hr />- Abductive reasoning infers best explanations; deductive tests hypotheses; inductive builds theories from data.  <hr />- Avoid validation bias; seek invalidating evidence to strengthen conclusions.  <hr />- Four Theories of Truth (Correspondence, Coherence, Pragmatic, Consensus) guide epistemological assessment.  <hr />- Effective sharing involves showing rather than telling, especially with senior stakeholders.  <hr />- Inform rather than persuade fosters trust; delivering facts builds credibility.  <hr />- Clearly expressing uncertainty does not diminish authority; transparency enhances trust.  <hr />- The Pyramid Principle structures insights into a key message supported by clear, mutually exclusive points.  <hr />- Research repositories should facilitate idea collisions and generate new knowledge, not just store data.  <hr />- Democratizing user research scales insights by broadening participation.  <hr />- Artifacts like personas synthesize user insights to guide design and strategy.","tags":"","authors":"","date":"","category":"playground > topics > ux"},"950":{"file_path":"playground/topics/ux/Mixed Methods/¶ Inductive reasoning.md","title":"¶ inductive reasoning","description":"Inductive research develops new theories by observing limited data, linking ideas creatively to form hypotheses that help predict future events or explain phenomena.","spr_content":"- Inductive research aims to formulate new hypotheses or theories from limited observations, emphasizing plausibility over certainty.<hr />- Its function is to generate a cogent, likely-true position that expands human knowledge and enables future prediction of phenomena.<hr />- Unlike deduction, which applies existing models to data, induction involves creating mental models from raw, disparate observations.<hr />- Inductive reasoning is associated with creativity: linking unique insights into novel perspectives.<hr />- These mental models are tentative and must be revised or discarded if contradicted by new evidence or internal incoherence.<hr />- Induction builds frameworks that facilitate understanding and anticipate unobserved events.<hr />- It contrasts with deductive and abductive reasoning, and underpins qualitative research by modeling problem spaces.<hr />- Its core is the dynamic, provisional construction of mental models through raw data synthesis.<hr />- Combining induction with other reasoning modes enhances the robustness of sensemaking and knowledge development.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"951":{"file_path":"playground/topics/ux/Mixed Methods/¶ Falsifiability.md","title":"¶ falsifiability","description":"Falsifiability is the ability to prove a statement false and helps turn observations into scientific laws by seeking disconfirming evidence rather than just confirming data.","spr_content":"- Falsifiability defines a statement's testability by its potential to be proven false.  <hr />- Presence of a black swan falsifies \"All swans are white.\"  <hr />- Karl Popper emphasized falsifiability accelerates scientific discovery by shifting focus from proving to disconfirming.  <hr />- It is often impossible to verify universal claims; identifying counterexamples is more effective.  <hr />- Disconfirming evidence (falsification) is more critical than confirmation.  <hr />- Data exhaust from IoT and apps is abundant but does not guarantee knowledge without analysis and interpretation.  <hr />- Collecting data alone is insufficient; falsifiability ensures meaningful scientific or logical validation.  <hr />- Significance of leading indicators over lagging in hypothesis testing.  <hr />- Different theories of truth (correspondence, coherence, pragmatic, deflationary) relate to criteria for truth.  <hr />- Deductive reasoning begins with a falsifiable hypothesis, testing to confirm or disconfirm it.  <hr />- Overreliance on non-falsifiable data can mislead research and understanding.  <hr />- Ladner warns that more data ≠ better research without falsifiability as a guide.  <hr />- Falsifiability sharpens scientific and analytical focus toward disproof rather than proof.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"952":{"file_path":"playground/topics/ux/Mixed Methods/≈ Mixed Methods.md","title":"≈ mixed methods","description":"Explore the key differences between qualitative and quantitative research methods, highlighting their unique strengths, weaknesses, and underlying philosophies for better data analysis and understanding.","spr_content":"- Ladner contrasts qualitative and quantitative research as fundamentally different epistemological and ontological frameworks.  <hr />- These differences are deeper than data types, reflecting different ways of knowing and being.  <hr />- Qualitative research emphasizes explanation, rich context, and understanding underlying meanings.  <hr />- Quantitative research focuses on measurement, quantification, and statistical rigor.  <hr />- Both methods have inherent trade-offs; strengths and weaknesses align with their philosophical underpinnings.  <hr />- Deductive reasoning guides quantitative research; tests hypotheses through structured data.  <hr />- Inductive reasoning underpins qualitative research; develops theories from contextual data.  <hr />- Collecting analytics data is not equivalent to conducting scholarly research; it lacks interpretative depth.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"953":{"file_path":"playground/topics/ux/Mixed Methods/¶ Abductive reasoning.md","title":"¶ abductive reasoning","description":"Abductive reasoning involves forming the most likely explanation from new, incomplete data and is widely used in medicine and complex problem-solving for generating insightful theories.","spr_content":"Sherlock Holmes exemplifies abductive reasoning over deduction.  <hr />Abductive reasoning infers the most plausible explanation from novel, inconsistent data.  <hr />This reasoning form is non-linear and starts with open data, no hypotheses.  <hr />It synthesizes observations into theories or insights.  <hr />Abductive reasoning is powerful but fallible; relies on experience.  <hr />Medical professionals often use abductive reasoning with incomplete info.  <hr />Peirce regards abductive reasoning as key for complex, wicked problems.  <hr />It best incorporates novel insights or knowledge.  <hr />Martin views abductive reasoning as essential for integrative thought.  <hr />Inductive reasoning develops hypotheses from data, likely true.  <hr />Deductive reasoning tests general theories against data.  <hr />OODA Loop depends on abductive reasoning in observe and orient phases.","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"954":{"file_path":"playground/topics/ux/Mixed Methods/¶ Deductive reasoning.md","title":"¶ deductive reasoning","description":"Deductive research tests theories by gathering data to confirm or reject hypotheses, focusing on concrete conclusions rather than generating new knowledge or predicting future events.","spr_content":"- Deductive research tests theories or hypotheses derived from existing knowledge.<hr />- It starts with a general theory and collects data to confirm or refute it.<hr />- Deduction yields a binary outcome: true or false; it cannot generate new knowledge.<hr />- It is limited to validating known information; not for predicting or exploring unobserved phenomena.<hr />- A deductive study hinges on a falsifiable hypothesis; aims for clear proof.<hr />- Contrasts with inductive research, which explores open-ended questions to discover significance.<hr />- Combining inductive and deductive reasoning is complex.<hr />- Western education favors deductive (and inductive) reasoning over abductive reasoning.<hr />- Roger Martin argues this focus limits creative problem-solving; constrains seeing \"what is\" to fit \"what should be.\"<hr />- Deductive reasoning emphasizes fits existing frameworks, potentially ignoring novel insights.<hr />- Related concepts include abductive reasoning, inductive reasoning, objectivism (concrete, knowable world), and rationalistic models (limiting human behavior understanding).","tags":"","authors":"","date":"","category":"playground > topics > ux > Mixed Methods"},"955":{"file_path":"playground/topics/architecture/case-study-write-heavy-scalable-and-reliable-inventory-platform.md","title":"Case study: Write-heavy scalable and reliable inventory platform","description":"How Doordash designed a successful write-heavy scalable and reliable inventory platform","spr_content":"- **Successful write-heavy inventory platform**: design focuses on scalability, reliability, low latency, and observability.  <hr />- **High scalability**: accommodate growth via database optimizations and batching.  <hr />- **High reliability**: ensure data integrity, resilient architecture.  <hr />- **Low latency**: optimize query performance through indexing and schema design.  <hr />- **High observability**: monitor and troubleshoot efficiently with proper instrumentation.  <hr />- **Primary key selection**: replace auto-increment with natural combined keys based on business parameters to minimize columns and optimize queries.  <hr />- **Database index management**: add relevant indexes for all query patterns; remove redundant or unused indexes.  <hr />- **Column reduction**: merge frequently updated columns into a single JSONB column, balancing trade-offs.  <hr />- **TTL configuration**: apply TTL to high-volume tables with short data lifespan for efficient storage and cleanup.  <hr />- **Query batching**: bundle multiple operations into a single SQL request to reduce QPS and improve efficiency.","tags":"doordash inventory-platform low-latency observability reliability scalability write-heavy","authors":"cor3.co","date":{"days":19416},"category":"playground > topics > architecture"},"956":{"file_path":"playground/topics/architecture/README.md","title":"§ Architecture","description":"Explore comprehensive guides on software architecture patterns, design patterns, state machines, domain-driven design, and key software principles to improve your system design and development skills.","spr_content":"- Architecture patterns include event sourcing, service-based architecture, and broker pattern in distributed systems, focusing on data persistence, modularity, and message brokering.<hr />- Design patterns encompass builder, command, observer, prototype, singleton, strategy, and visitor, each providing reusable solutions for object creation, communication, and behavior extension.<hr />- State machines and automata theory features C4 diagrams/modeling, UML state machine diagrams, state patterns, finite automata, transducers, Mealy, and Moore machines, addressing system states, transitions, and complexity/Texplosion issues.<hr />- Domain-driven design emphasizes domain models, entities, and overarching design principles to align software structure with business concepts.<hr />- Principles and laws include the Law of Demeter, SOLID principles, and general good software design principles, ensuring maintainability, encapsulation, and correctness.<hr />- Case studies highlight scalable, reliable inventory systems, and directory-structured file sharing solutions, illustrating practical applications.<hr />- Implementation notes cover Redis streaming, concurrency in streaming, and SDK-based event sourcing, focusing on data flow, performance, and integration.<hr />- Knowledge gaps include understanding of reducers, which are functions that process state transformations in event-driven or functional architectures.","tags":"architecture moc","authors":"","date":{"days":20201},"category":"playground > topics > architecture"},"957":{"file_path":"playground/topics/architecture/redis-streaming-concurrency-with-master-and-consumers.md","title":"Redis streaming concurrency with master and consumers","description":"Learn how to implement a Redis streaming master-consumers pattern to delegate messages, handle concurrency, and avoid data conflicts using Redis commands like XREADGROUP and XCLAIM.","spr_content":"- Redis streaming facilitates message queuing with consumer groups, supporting order and parallel processing by multiple consumers.<hr />- Current system emphasizes rapid message ingestion, lacking inherent scalability for concurrent, conflicting message processing.<hr />- The problem arises when multiple consumers process messages with identical `ticket_id`, risking data conflicts without policy enforcement.<hr />- The master-consumer pattern introduces a central proxy (master) to regulate message delegation, preventing simultaneous processing of same `ticket_id`.<hr />- In Redis, only consumers in a group can `XREADGROUP` messages, and acknowledgments (`XACK`) confirm processing completion.<hr />- The master acts as a privileged consumer, first using `XREADGROUP` to read messages, then employing `XCLAIM` to delegate messages to specific consumers based on current processing status.<hr />- The master manages `tickets` (mapping `ticket_id` to consumer info and pending message IDs) and `consumers` (tracking consumer health and assigned tickets).<hr />- Delegation flow involves master reading incoming messages, determining suitable consumers, and claiming messages for processing, updating Redis maps accordingly.<hr />- Failure recovery uses health checks (`healthURL`) and scheduled tasks:<hr />  - Offline consumer recovery via pings; reassign their `ticket_id`s if unresponsive.<hr />  - Idle message recovery with `XAUTOCLAIM` to reassign messages stuck in the `PEL` past a minimum idle time.<hr />- Delegated consumers register with the master (`master_register_api_url`), process messages with `XREADGROUP`, acknowledge with `XACK`, and notify master upon completion via `master_acknowledge_api_url`.<hr />- The infrastructure must align with existing Redis structures and avoid introducing external messaging platforms like Kafka.<hr />- Maintaining order per `ticket_id` requires serial processing; concurrent handling is allowed only if `ticket_id` conflicts are managed to prevent data conflicts.<hr />- Recovery mechanisms rely on Redis capabilities (`XAUTOCLAIM`) and periodic health checks to ensure resilience.<hr />- The system prioritizes scalability within current infrastructure constraints, enabling concurrent, conflict-free processing of messages with identical `ticket_id`.","tags":"","authors":"","date":{"days":19493},"category":"playground > topics > architecture"},"958":{"file_path":"playground/topics/architecture/c4-modelling.md","title":"Breaking Down Complexity: The Role of Abstractions and UML in C4 Modelling","description":"Understanding and conveying software architecture can be a daunting task, especially when dealing with non-technical stakeholders or diverse development teams. This article delves into the challenges of traditional methods like complex UML diagrams and non-descriptive box-and-line drawings. We introduce the C4 model, a powerful framework that simplifies these challenges by using layered abstractions and visualizations. Explore how the model breaks down software architecture into comprehensible levels—Context, Container, Component, and Code—and offers guidelines on creating effective diagrams. Real-world examples illustrate the application of the C4 model, making it an invaluable tool for creating a shared understanding and ensuring clear, meaningful communication among all parties involved.","spr_content":"- Conveying software architecture to non-tech and developers is hindered by UML complexity, nondescriptive diagrams, domain knowledge gaps, technical jargon, and communication issues.<hr />- The C4 model uses abstraction and visualization to simplify and standardize system descriptions.<hr />- Abstractions serve as common language bridging domain knowledge gaps; their creation involves consensus, effort, and multiple meetings.<hr />- The C4 model defines abstraction levels: context, container, component, code.<hr />- System-level context is the highest abstraction: it encompasses the entire system, users, dependent systems, and value delivery.<hr />- Containers are applications or data stores within the system, essential for operation (e.g., web app, API, database).<hr />- Components are sets of functions/classes within containers, supporting operational flows (e.g., auth, ledger, notifications).<hr />- Code details the specific implementation of components, including conditions, outputs, exceptions, and fallback flows.<hr />- Visualization should use clear UML or diagrammatic elements, conveying domain-specific solutions with meaningful, consistent symbols and explanations.<hr />- The diagram acts as a key reference, guiding design, discussion, and documentation efforts, emphasizing value-driven abstraction levels.","tags":"graphical-notation software-architecture software-design","authors":"jim","date":{"days":19866},"category":"playground > topics > architecture"},"959":{"file_path":"playground/topics/architecture/design-file-sharing-system-part-1-directory-structure.md","title":"Design file-sharing system - Part 1: Directory Structure","description":"This system aims to provide users with the ability to store, access, and share files directly on our website, similar to Google Drive. This system aims to enhance user convenience and collaboration by allowing seamless file management and sharing capabilities.","spr_content":"- The system functions like Google Drive, enabling direct file storage, access, and sharing on a website.  <hr />- Focused on user convenience, collaboration, seamless file management, and secure sharing.  <hr />- Users can upload, edit, and organize various file types within personal or workspace storage.  <hr />- Users can share files selectively with individuals or groups (all workspace members).  <hr />- Files can be set to public, accessible without login, or password protected for enhanced security.  <hr />- The data model includes a `Workspace` for group context, and an `Asset` for digital content with metadata.  <hr />- Permissions govern access levels, roles, and resource scope, managed via a `Permissions` table.  <hr />- Hierarchical file listing is addressed by the `path` field in `Asset`, storing directory hierarchy as a slash-separated string of IDs.  <hr />- The `path` structure is: `workspaceID / parent directory IDs / asset ID`, representing full hierarchy.  <hr />- Path encoding allows O(1) retrieval and update of asset location, simplifying hierarchy operations.  <hr />- Updating locations involves direct string modification, avoiding recursive traversal.  <hr />- Overall, the system balances ease of use, security, and efficient data handling through the `path` approach and permission controls.","tags":"directory-structure file-management file-system","authors":"datpv","date":{"days":19935},"category":"playground > topics > architecture"},"960":{"file_path":"playground/topics/architecture/builder-design-pattern.md","title":"Introduce the Builder pattern and its use cases","description":"Builder, one of the creational patterns, allows user to construct complex object step by step while still maintaining flexibility.","spr_content":"- Objective: Create complex objects easily; abstract construction details.<hr />- Factory pattern: produces fixed, identical objects; lacks flexibility.<hr />- Builder pattern: stepwise customization; flexible property tweaks.<hr />- Build process: Create a Builder class (e.g., QueryBuilder, ButtonBuilder).<hr />- Builder methods: set parts/attributes; return builder for chaining.<hr />- Finalize: build() method returns the constructed object.<hr />- Example (DrinkBuilder): name() sets name; addIngredient() adds components; mix() creates Drink.<hr />- Usage: chaining methods for clarity and customization.<hr />- Benefits: enhances readability; allows property modifications without altering internal logic.<hr />- Real-world: jQuery chaining functions; JavaScript ecosystem favors this pattern.<hr />- Libraries: wretch (fetch wrapper), zod (validation), Spotify API wrapper.<hr />- Pros: transparent steps, flexible modifications, readable code.<hr />- Cons: requires separate Builder for each object type; scalability may become cumbersome.","tags":"creational-design-pattern design-pattern gang-of-four","authors":"vincent","date":{"days":19884},"category":"playground > topics > architecture"},"961":{"file_path":"playground/topics/mobile/§ mobile.md","title":"§ Mobile","description":"Explore essential mobile development topics including Flutter widgets, SwiftUI, Kotlin coroutines, and iOS security with practical guides and case studies for building modern apps.","spr_content":"- Data race and race condition involve concurrent access issues; crucial in multi-threaded programming.<hr />- UI frameworks utilize stateless widgets for immutable UI segments; stateful widgets manage mutable state.<hr />- Flutter's architecture hinges on Stateless and Stateful Widgets, enabling reactive UI updates.<hr />- SwiftUI employs declarative syntax; supports creating complex UIs with minimal code, emphasizing views and state.<hr />- UIKit Builder pattern facilitates modular UI construction; enhances reusability and composability.<hr />- Swift 5.4 introduces ResultBuilder; simplifies nested or complex view and data construction.<hr />- Passcode UI can be built with Swift; involves secure input handling and user experience considerations.<hr />- Circular text rendering in SwiftUI leverages geometry and path manipulation; illustrative of custom shape drawing.<hr />- SwiftUI can be used to draw watch faces; combines graphics, animations, and layout.<hr />- Reproducing Apple's Find Me bottom menu demonstrates UI mimicry, layering, and gesture handling.<hr />- Kotlin coroutines enable asynchronous programming; manage concurrency with structured lifecycle scope.<hr />- Kotlin coroutine lifecycle aligns with component lifecycles; prevents leaks, ensures proper cancellation.<hr />- Managing secrets on iOS involves keychain, secure storage, encryption; critical for app security.<hr />- Scaling Android apps with Jetpack Navigation enhances navigation flow, modularity, and deep linking.<hr />- XPC Services in macOS apps, via Swift; facilitate inter-process communication, security, modularity.","tags":"mobile moc","authors":"","date":{"days":20201},"category":"playground > topics > mobile"},"962":{"file_path":"playground/topics/mobile/§ Engineering Mobile MOC.md","title":"§ engineering mobile MOC","description":"Explore key mobile engineering concepts including stateless and stateful widgets in Flutter, command line app structure, and the UIKit Builder pattern for efficient app development.","spr_content":"Mobile encompasses key engineering concepts.  <hr />Widgets: Stateless and Stateful in Flutter represent static versus dynamic UI elements.  <hr />Command-line app structure illustrates modular and hierarchical organization of CLI tools.  <hr />UIKit Builder pattern exemplifies design pattern emphasizing flexible, declarative UI construction.  <hr />Content reflects a knowledge map of mobile app architecture and UI design patterns.  <hr />The latest update was on 2024-03-15, indicating current relevance.","tags":"","authors":"","date":"","category":"playground > topics > mobile"},"963":{"file_path":"playground/topics/ai/§ AI.md","title":"§ AI","description":"Explore clear explanations of gradient descent, AI-powered interview systems, secure remote servers, and challenges of AI in Hollywood and gaming to enhance your understanding of machine learning and AI applications.","spr_content":"- Gradient descent: optimization method; analogy: descending a mountain to find the lowest point; iteratively adjusting parameters to minimize error.<hr />- Machine learning & deep learning: systems trained on data; knowledge distilled into models; summarizer bot: crafted for efficient info sharing; AI interview system: built with OpenAI's ChatGPT to automate assessments.<hr />- AI systems & engineering: securing remote servers involves multi-layer defenses; tool-level security addresses specific vulnerabilities; prevents unauthorized access and data breaches.<hr />- AI in society & industry: Hollywood and gaming face challenges integrating AI; issues include creative originality concerns, industry resistance, and technical limitations; AI impacts entertainment, requiring adaptation.","tags":"ai moc","authors":"","date":{"days":20201},"category":"playground > topics > ai"},"964":{"file_path":"playground/topics/ai/README.md","title":"§ AI","description":"Explore key engineering concepts in AI, including large language models, reinforcement learning, chatbot building, and strategies to improve LLM performance and memory handling.","spr_content":"AI engineering concepts form a interconnected map of techniques and models.  <hr />Adversarial prompting exposes model vulnerabilities through purposeful input manipulation.  <hr />Open source LLMs enable customizable chatbot development, bridging accessible AI with user control.  <hr />Chunking strategies address context length constraints by partitioning data for sequential processing.  <hr />Long-term memory in AI chatbots combines retrieval and persistent storage to maintain context over time.  <hr />Foundation models serve as large, pre-trained bases upon which specialized tasks are fine-tuned.  <hr />Query caching in LLMs reduces redundancy, improving efficiency and response speed.  <hr />Self-refinement enhances LLM accuracy via iterative feedback and internal validation loops.  <hr />Q learning applies reinforcement strategies to optimize decision policies through reward signals.  <hr />RLHF (Reinforcement Learning from Human Feedback) aligns AI outputs with human preferences, exemplified by Open Assistant.  <hr />Reward models quantify alignment quality, guiding reinforcement learning processes.  <hr />Selecting vector databases is crucial for efficient similarity search in LLM applications.  <hr />Story mapping structures narrative or reasoning sequences for better comprehension in LLMs.  <hr />Token limit workarounds, like Langchain chaining, enable handling large inputs beyond native constraints.  <hr />Langchain document loaders facilitate integration of external data sources into LLM workflows.","tags":"","authors":"","date":"","category":"playground > topics > ai"},"965":{"file_path":"playground/topics/ai/tool-level-security-for-remote-mcp-servers.md","title":"Tool-Level Security for Remote MCP Servers","description":"A comprehensive guide to implementing granular access control for Model Context Protocol (MCP) servers, allowing organizations to securely expose tool capabilities based on user roles and permissions while maintaining data privacy.","spr_content":"- MCP (Model Context Protocol) standardizes AI-to-tool communication, enabling sophisticated interactions with external systems.<hr />- Use role-based access control (RBAC) to enforce fine-grained permissions on MCP servers, ensuring secure operations.<hr />- RBAC associates tools with permissions; applies data access policies dynamically during invocation.<hr />- Server filters available tools during listing based on user roles and permissions.<hr />- During tool invocation, server verifies permissions, applies data filtering, and enforces access policies.<hr />- Multi-layered security architecture includes network security, OAuth authentication, session authorization, tool registry, and data policies.<hr />- The tool registry must specify requiredPermissions and dataAccessPolicy for each tool.<hr />- Implement permission checks at two points: listing tools (filtering UI options) and executing tools (enforcing permissions).<hr />- Data filtering enforces resource-level access at argument (e.g., channel access) and result (e.g., document visibility) levels.<hr />- Integrate with existing identity providers via token claims or external user-role mappings.<hr />- Maintain a central RBAC schema with users, roles, permissions, and resource access rules, enabling scalable, auditable control.<hr />- Roles can inherit permissions, simplifying management; define role hierarchies aligned with organizational responsibilities.<hr />- Logging (audit trails) captures permission grants, access attempts, and security events for compliance and monitoring.<hr />- Implement defense-in-depth: combine RBAC with network security, TLS, monitoring, and request protections.<hr />- Follow least privilege: assign minimal necessary permissions, regularly review and revoke excess rights.<hr />- Use progressive checks: authentication → role filtering → permission verification → data filtering, for layered security.<hr />- Appropriately map permissions from external identity tokens or directory systems, ensuring seamless federated control.<hr />- Data minimization and field-level security reduce exposure of sensitive info, even within authorized tools.<hr />- Establish comprehensive inventory and categorize tools/data by risk to inform role design.<hr />- Design hierarchical roles to leverage inheritance, reducing complexity and redundancy.<hr />- Regularly review permissions, roles, and usage patterns to prevent permission creep and role explosion.<hr />- Integrate RBAC with audit logs to enhance security oversight and facilitate compliance.<hr />- Combining permission filtering, data policies, and integration with existing identity systems yields a robust, enterprise-grade MCP security layer.","tags":"ai mcp security","authors":"monotykamary","date":{"days":20174},"category":"playground > topics > ai"},"966":{"file_path":"playground/topics/communication/¶ Pyramid Principle.md","title":"¶ pyramid principle","description":"Learn how the Pyramid Principle helps organize information by synthesizing data from the bottom up and communicating key insights clearly from the top down for effective persuasive writing.","spr_content":"- The Pyramid Principle by Minto organizes information hierarchically with two core principles: synthesize from the bottom up and communicate from the top down.<hr />- Bottom-up synthesis starts with raw data, which is grouped into key insights or themes, then summarized into a main takeaway.<hr />- Raw data includes information, analyses, and survey results; it forms the foundation of the hierarchy.<hr />- Key insights, derived from raw data, are mutually exclusive and collectively exhaustive (MECE), ensuring no overlap and complete coverage.<hr />- The top level of the pyramid articulates the main conclusion or recommendation, derived from and supported by lower levels.<hr />- Communication should proceed from this top main point downward, ensuring clarity and ease of understanding—\"write a memo\" before a presentation.<hr />- Present the conclusion first, followed by supporting points, each MECE, preventing cognitive overload.<hr />- Direct storytelling (starting with the main answer) suits persuasive contexts with friendly, impatient, or strategic audiences.<hr />- Indirect storytelling (building from data to conclusion) helps mitigate pushback and suits analytical, data-loving, or hostile audiences.<hr />- The process assumes a clearly defined problem and hypothesis, which guides data collection and interpretation.<hr />- The Pyramid Principle promotes structured, logical, and strategic thinking—balancing synthesis and communication for effective ideas.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"967":{"file_path":"playground/topics/communication/≈ The Opposable Mind.md","title":"≈ the opposable mind","description":"Discover how successful leaders use integrative thinking to solve complex problems by combining different perspectives and avoiding simple either/or choices for creative solutions.","spr_content":"- Successful leaders practice integrative thinking, which embraces complexity and avoids binary choices.  <hr />- Integrative thinkers approach problems holistically, considering multiple factors simultaneously.  <hr />- They develop unique, creative solutions by broadening their view of salience.  <hr />- Integrative thinking involves putting mental models into conversation, fostering dialogue between perspectives.  <hr />- Perspective includes stance, tools, and experience, shaping how salience is perceived.  <hr />- Salience is subjective; what stands out depends on individual focus.  <hr />- Specialization narrows perception, reducing awareness of alternative salient factors.  <hr />- The core concept is to synthesize diverse perspectives rather than choose between opposing options.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"968":{"file_path":"playground/topics/communication/perspective-comprises-our-stance-our-tools-and-our-experience.md","title":"Perspective comprises our stance our tools and our experience","description":"Learn how perspective is shaped by the interaction of stance, tools, and experience to better understand and approach complex problems effectively.","spr_content":"- Perspective arises from the interaction of stance, tools, and experience.  <hr />- Stance encompasses personal knowledge, identity, and purpose, shaping perspective and approach.  <hr />- Tools include physical implements and cognitive aids like theories, processes, and heuristics, organizing complex problems.  <hr />- Experience refines intuition and sensitivity, informing our perception of issues.  <hr />- These elements do not operate linearly; they mutually inform and influence each other.  <hr />- Developing intuition involves acquiring new knowledge and experiences.  <hr />- Salience is subjective, shaped by individual experience and perception.  <hr />- Based on Roger Martin's concept of integrative thinking and dual influences shaping leadership cognition.","tags":"","authors":"","date":"","category":"playground > topics > communication"},"969":{"file_path":"playground/topics/data/data-pipeline-design-framework.md","title":"Data Pipeline Design Framework","description":"To improve and strongly go-live the data pipeline, besides apply best practices and pillar for Data Pipeline Native Solution, a design framework and pattern are robustly help us in...","spr_content":"Data pipeline design is driven by goals of robustness, best practices, and pattern clarity.  <hr />Frameworks guide organization, market alignment, and referential standards.  <hr />Pattern discussion enables pros/cons analysis, initiative questioning (when/why not).  <hr /><hr />**Decision factors for pipeline selection:**  <hr />- Need for data history? Replayable source?  <hr />- Data volume? Time range? Snapshot or streaming?  <hr />- Transformation complexity? Standard, conditional, multi-team?  <hr />- Sink nature? Append-only or overwritable?  <hr />- Idempotency possible?  <hr /><hr />**Understanding source and sink:**  <hr />- Source: input data system; replayability? order?  <hr />- Sink: output system; overwrite capability?  <hr /><hr />**Replayability nuances:**  <hr />- Essential for historical state queries?  <hr />- Supported by event streams, CDC logs, separated storage.  <hr /><hr />**Source ordering considerations:**  <hr />- Event stream order? Handling late/lost events via watermarks/backoff.  <hr /><hr />**Sink characteristics:**  <hr />- Overwritable? Primary keys?  <hr />- Append-only like Kafka?  <hr /><hr />**Pattern selection grounded on questions:**  <hr />1. Extraction type: time-ranged/ delta, snapshot, lookback, streaming.  <hr />2. Behavior: idempotent (delete-write), self-healing.  <hr />3. Structure: multi-hop layering, conditional flows, disconnected modules.  <hr /><hr />**Extraction patterns:**  <hr />- Time Ranged/Delta: selective, fast, needs replay support, complex UPSERTs.  <hr />- Snapshot: full data, versioned, easier but costly, slow, schema-sensitive.  <hr />- Lookback: handles late arrivals, ideal for KPI, more complex.  <hr />- Streaming: real-time, low latency, scalable, requires fault tolerance.  <hr /><hr />**Behavioral patterns:**  <hr />- Idempotent: prevent duplicates; delete-write for safety; suited for relational data.  <hr />- Self-healing: retries, checkpointing; reduces alerts; complexity in meta management.  <hr /><hr />**Structural paradigms:**  <hr />- Multi-hop: layered cleaning/validation; debug and quality control; storage/bandwidth costs.  <hr />- Conditional/Dynamic: adaptive flow; complex, testing difficulty.  <hr />- Disconnected (decoupled): independent modules; fast to implement; harder debugging, stricter SLAs.  <hr /><hr />**Design philosophy:**  <hr />- Every pattern has trade-offs; analyze pros and cons relative to data needs, scale, complexity.  <hr />- Use layered or conditional pipelines to handle evolving requirements and quality control.  <hr />- Strong communication and feedback loops, adopting Agile/Scrum methods, enhance maintainability.  <hr /><hr />**In essence:**  <hr />Optimal pipeline pattern depends on data history need, volume, latency, error recovery, and transformation complexity.  <hr />A thoughtful, pattern-aware approach guides reliable, maintainable, scalable data workflows.  <hr />Continual dialogue during design and implementation fosters refinement and success.","tags":"data data-pipeline","authors":"longddl","date":{"days":19797},"category":"playground > topics > data"},"970":{"file_path":"playground/topics/data/202301191192-multi-column-index-in-db.md","title":"Multi-column index in DB","description":"Multi-column index in DB","spr_content":"- Database supports composite (multi-column) indexes, combining multiple columns into a single index structure.<hr />- The order of columns in the index is critical; it determines which queries can benefit.<hr />- A well-defined composite index on `(col1, col2, col3)` accelerates queries filtering on prefixes:<hr />  - `col1` alone<hr />  - `col1` with `col2`<hr />  - all three columns<hr />- Index is ineffective for queries starting with `col2` or `col2` and `col3` only, because they do not follow the leftmost prefix.<hr />- Leftmost prefix principle: any leading subset of ordered columns in index can be utilized.<hr />- Index lookup efficiency depends on query's column order relative to index definition.","tags":"composite-index database index multi-column-index","authors":"hmhoang13","date":{"days":19376},"category":"playground > topics > data"},"971":{"file_path":"playground/topics/data/202211141513-materialized-view-pattern.md","title":"Materialized View Pattern","description":"Materialized view is the cache of views. It pre-computes, stores, and optimizes data access when created, and automatically refreshes to ensure real-time data availability.","spr_content":"- Normal views provide ease of use and flexibility without improving data access speed.  <hr />- Materialized views are pre-computed, stored, and optimized caches of views.  <hr />- They update automatically to maintain near real-time data freshness.  <hr />- In data warehouses with complex, resource-intensive queries on large tables, materialized views eliminate expensive joins and aggregations via pre-computation.  <hr />- They are ideal for repetitive, predictable subqueries.  <hr />- Two main refresh strategies:  <hr />  1. Complete refresh: transactional, deletes old data, inserts new, visible after commit, allows user access during refresh, but slow with large datasets.  <hr />  2. Fast (incremental) refresh: relies on source table logs, is faster, requires preconditions and setup, can be debugged with tools like dbms_mview.explain_mview, but may fail if conditions aren’t met.  <hr />- References for implementation details and best practices: Microsoft Azure pattern, Oracle documentation.","tags":"data data-warehouse database materialized-view sql","authors":"haongo1","date":{"days":19310},"category":"playground > topics > data"},"972":{"file_path":"playground/topics/data/evolutionary-database-design.md","title":"Evolutionary Database Design: Managing Change and Scaling with the System","description":"As systems scale to meet growing demands, databases must evolve alongside them to maintain performance and integrity. This document explores best practices for managing database changes, maintaining knowledge, and ensuring smooth integration. Topics covered include knowledge sharing, repository structuring, continuous integration, and database refactoring, with real-world examples illustrating their application.","spr_content":"- Growing public asset management app needs scalable, adaptable databases.<hr />- Challenges: scaling leads to increased load, complex regulations, data inconsistencies.<hr />- Outgrowing initial schema risks making databases liabilities.<hr />- Schema design may become outdated; change histories can be lost.<hr />- Integration issues arise from outdated or conflicting database versions.<hr />- Refactoring carries systemic risks, potential ripple effects.<hr />- Key strategy: combine knowledge sharing, structured repositories, automation, and controlled refactoring.<hr />- Evolutionary Database Design ensures smooth schema adaptations without disrupting systems.<hr />- Knowledge sharing involves active collaboration between DBAs, developers, architects.<hr />- Centralized knowledge base captures schema changes, decisions, dependencies.<hr />- Regular education sessions promote best practices.<hr />- Impact assessment of change requests prevents downstream issues.<hr />- Example: adding \"Last Login\" involves impact review, indexing, documentation.<hr />- Repository structure centralizes schema definitions, versioning, configurations, change logs.<hr />- Version control (e.g., Git) enables traceability, rollbacks.<hr />- Simulation environments help identify schema mismatches post-change.<hr />- Automated CI workflows verify schema compatibility, data migrations, conflict detection.<hr />- Examples include early conflict detection during table modifications.<hr />- Refactoring includes non-breaking (add columns) and breaking changes (split tables).<hr />- Transitional phases allow coexistence of old and new schemas.<hr />- Effective evolution relies on communication, documentation, automation benchmarks.<hr />- Visual tools — diagrams, scripts — facilitate change comprehension.<hr />- Repository as single source of truth ensures consistency.<hr />- Reference: Fowler’s article on collaborative evolution of databases.","tags":"database-management software-development","authors":"jim","date":{"days":20154},"category":"playground > topics > data"},"973":{"file_path":"playground/topics/data/a-lens-to-modern-data-engineering.md","title":"Building a Data-Driven Project Reporting System: A Lens into Modern Data Engineering","description":"Learn how to transition from application development to data engineering by building a modern project reporting system. Discover essential mindset shifts, best practices, and hands-on look using tools like DuckDB, and Modal. Master system-level architecture and data pipeline design for scalable enterprise solutions.","spr_content":"- Transition from application to data engineering parallels architectural shift from component-building to system design.<hr />- Application development is bottom-up: focus on individual features, one brick at a time.<hr />- System thinking in data engineering involves understanding data flows, events, and transformations at scale.<hr />- Traditional CRUD operations emulate reactive, request-driven models suitable for small scale but insufficient for big data.<hr />- Data engineering emphasizes continuous data streams, event sourcing, and immutable logs to capture whole history.<hr />- Data systems architecture includes collection, storage (Data Lake/Warehouse), processing (ETL, map-reduce), and serving layers.<hr />- Building project reports from multiple sources (Discord, Git, metrics) requires moving from request-triggered to flow-oriented design.<hr />- Data flow patterns: source → buffer → storage → transformation → visualization.<hr />- Data engineering hinges on core patterns: Map-Reduce, ETL, Event Streaming, Parallel Processing.<hr />- System design anticipates scale: storage formats like Parquet optimize querying and compression; query engines like DuckDB operate in-place; orchestration tools manage dependencies holistically.<hr />- Tools form a systems toolkit: Spark, DuckDB, Beam for processing; Data Lakes/Warehouses for storage; Airflow, Dagster, Modal for orchestration.<hr />- The evolution contrasts: bottom-up, reactive, feature-focused development versus top-down, anticipatory, architecture-focused systems thinking.<hr />- Key mindset shift: from fixing individual parts to orchestrating interconnected flows and scaling organization-wide.<hr />- Success in data engineering is measured by how components interoperate and generate value systemically, not just component correctness.<hr />- Developing system-level mental models transforms perception from transactional to flow-driven thinking.<hr />- The case study exemplifies moving from component-focused projects to holistic, scalable systems architecture.","tags":"architecture data-engineering etl system-design","authors":"monotykamary","date":{"days":20025},"category":"playground > topics > data"},"974":{"file_path":"playground/topics/data/quick-learning-vector-database.md","title":"Quick Learning Vector Database","description":"The motivation of this thoughts that trying to discover the LLMs and Generative AI...","spr_content":"- LLMs and generative AI require multidimensional data, metadata, data management, and infrastructure for creation and training.  <hr />- Vector databases serve as foundational storage for gen AI, tokenizing, vectorizing, and serializing everything into a unified language.  <hr />- Data sources (internet, databases, users) are encoded into vectors via embedding models like Gemini or OpenAI.  <hr />- Product development involves tools like Drant, Milvus, Redis, pgvector, Pinecone, LanceDB, Oracle, MongoDB Atlas, AthenaDB.  <hr />- Unlike relational databases, vector DBs store multi-dimensional vectors without strict schema definitions.  <hr />- Data structure: storage of vectors; query relies on similarity rather than fixed schema.  <hr />- Similarity search uses algorithms like KNN, with room for optimization (better indexing, caching).  <hr />- Indexing algorithms include Flat, HNSW, IVF, with potential improvements in cache and index efficiency.  <hr />- Workflow:  <hr />  - Embedding model converts raw data into vectors, optimized for large parameters.  <hr />  - End-user input is transformed into a query vector.  <hr />  - Database searches for similar vectors via algorithms.  <hr />  - Results retrieved based on vector similarity scores.  <hr />- Benefits:  <hr />  - Schemaless, non-structured data handling enhances flexibility.  <hr />  - Dynamic bucketing supports scalability.  <hr />  - Fast vector similarity searches improve performance.  <hr />  - Unified data format standardizes diverse data types.  <hr />- Use Cases:  <hr />  - Real-time data feeding into LLMs.  <hr />  - Search problem solutions.  <hr />  - Video/image recognition.  <hr />  - Contextual similarity recommendations.  <hr />- Challenges:  <hr />  - Indexing performance (Flat, ElasticSearch, Redis, pgvector).  <hr />  - Long-term cache optimization.  <hr />  - Hardware for hosting and computation.  <hr />  - Enhancing KNN and similarity models.","tags":"data database vector-database","authors":"longddl","date":{"days":19797},"category":"playground > topics > data"},"975":{"file_path":"playground/topics/data/sql-sargable-queries-and-their-impact-on-database-performance.md","title":"SQL Saragable Queries and Their Impact on Database Performance","description":"Structured Query Language (SQL) is widely used for managing data in relational database management systems (RDBMS). In the context of SQL, the optimization of database queries forms the foundation for efficient data retrieval, providing quicker response times and increasing overall database performance. One key strategy to optimize SQL queries involves the concept of \"Sargable\" queries...","spr_content":"- SQL manages data in relational databases; query optimization is vital for efficiency.<hr />- \"Sargable\" = \"Search ARGument ABLE\": queries can leverage indexes effectively.<hr />- Originates from Selinger et al. (1979) research on access path selection.<hr />- Sargable queries enable index utilization; non-sargable hinder index use.<hr />- Non-sargable: operations/functions on indexed columns in WHERE clause (e.g., SUBSTRING, DATEDIFF, ISNULL, functions like YEAR()).<hr />- Sargable: use simple comparisons/conditions that directly relate to indexed columns (e.g., LIKE 'ABC%', >=, <, IS NULL).<hr />- Wildcards at string start (e.g., '%prefix') cause full table/index scans; avoid for sargability.<hr />- Example: Address LIKE '%New York%' non-sargable; Address = 'New York' sargable.<hr />- Handling NULLs properly enhances sargability; e.g., IS NOT NULL on columns with indexes.<hr />- Functions on columns (e.g., YEAR(dateColumn) = 2022) disable index use; rewrite as date range conditions (e.g., dateColumn >= '2022-01-01' AND dateColumn < '2023-01-01').<hr />- Sargable queries improve index seeks, reduce disk IO, and enhance performance.<hr />- Different index types (clustered, non-clustered, columnstore) can be efficiently used via sargable queries.<hr />- Optimizing queries by avoiding functions on indexed columns and careful use of LIKE and wildcards boosts speed.<hr />- In large data environments, sargable queries are critical for system speed and efficiency.<hr />- Converting non-sargable to sargable requires rephrasing operations to simple comparisons.<hr />- Study techniques to improve query performance through sargability practices.","tags":"database performance sargable-queries sql","authors":"monotykamary","date":{"days":19614},"category":"playground > topics > data"},"976":{"file_path":"playground/topics/data/design-file-sharing-system-part-2-permission-and-password.md","title":"Design file-sharing system - Part 2: Permission & Password","description":"In this part, I will discuss how I handle the logic and design the data model for the following features: setting permissions, sharing files for public access, and setting a password for a file.","spr_content":"- The system manages file permissions, sharing, and password protection through a layered, inheritance-based data model.<hr />- Files inherit permissions from parent folders by default unless explicitly overridden.<hr />- Permissions are scoped at workspace or invite-only levels, influencing access controls.<hr />- MainPermission table holds general asset permission data, including public and child roles, with a flag for inheritance.<hr />- MainPermission’s `publicRole` defines guest access: VIEWER, EDITOR, NO_ASSET.<hr />- `ChildRole` specifies workspace member permissions, including INHERIT, FULL_ACCESS, EDITOR, VIEWER, NO_ACCESS.<hr />- SubPermission table manages individual invitee or project member permissions with role-specific entries.<hr />- Permission evaluation follows hierarchy: direct user permission > MainPermission’s childRole > inherited parent permissions.<hr />- Permissions reset to inheritance/default on asset initialization; updates override inheritance with specific roles.<hr />- Sharing files publicly is controlled via `publicRole`; guest access depends on this setting, restricted if not logged in.<hr />- Password protection is implemented via `passwordHash`: presence indicates enabled security, storing securely hashed passwords.<hr />- Access workflows involve obtaining an asset token and passing it via authorization headers for detailed info retrieval.<hr />- Overall, the system offers granular, inheritable permissions, flexible sharing options, and security features like password protection, ensuring secure, collaborative file management.","tags":"directory-structure file-management file-system permissions","authors":"datpv","date":{"days":19956},"category":"playground > topics > data"},"977":{"file_path":"playground/topics/data/202210150019-migration-planning.md","title":"Migration Planning","description":"Migration planning is a crucial part of any software development project, especially when migrating to a new database or platform.","spr_content":"Migration plan considerations encapsulate key factors: minimizing downtime to ensure availability, maintaining data consistency to prevent corruption, having a robust rollback plan to revert in case of failure, ensuring observability and measurability for monitoring progress, and fostering team awareness for coordinated effort.  <hr />Common steps involve initial dual reads/writes with the old database as primary, performing targeted backfilling, comparing and validating data accuracy between databases, switching dual reads/writes to make the new database primary, and finally removing the old database once stability is confirmed.","tags":"migrations","authors":"cor3.co","date":{"days":19279},"category":"playground > topics > data"},"978":{"file_path":"playground/topics/data/mapreduce.md","title":"MapReduce","description":"We are the head of census bureau for the state of California and tasked with finding the finding the population of all cities in California. All the resources we want are ready but we have only four months to finish the task. Calculating the population of all cities for a big state like california is not an easy task. The sensible thing to do is to divide the state by city and make individuals in charge of each city to calculate the population of each city where he is in charge of...","spr_content":"- MapReduce is a distributed programming model designed for processing large datasets efficiently across multiple machines.  <hr />- It was conceived by Google; Hadoop is a popular open-source implementation supporting this model.  <hr />- MapReduce is language-agnostic; it can be implemented using Scala, Python, C/C++, Java, etc.  <hr />- It is not a programming language but a conceptual framework guiding data processing workflows.  <hr />- The model divides tasks into three main phases: Map, Shuffle, and Reduce.  <hr />- The Map phase involves individual workers, called Mappers, processing input splits and outputting key-value pairs.  <hr />- Input splits are subdivisions of the total data assigned to each Mapper.  <hr />- The Shuffle phase redistributes data, transferring intermediate key-value pairs from Mappers to appropriate Reducers based on keys.  <hr />- The Reduce phase consists of Reducers that aggregate and consolidate the shuffled data into final results.  <hr />- This process enables scalable, parallel analysis of vast data sets.  <hr />- The system manages communication, data transfer, and parallel execution transparently, especially in Hadoop.","tags":"data distributed hadoop mapreduce","authors":"dudaka","date":{"days":19289},"category":"playground > topics > data"},"979":{"file_path":"playground/topics/data/self-balanced-bsts-avl-trees.md","title":"Self balanced bsts avl trees","description":"Learn how trees, especially binary search trees (BST) and AVL trees, organize hierarchical data for fast search, insertion, and deletion with guaranteed balanced height and efficient operations.","spr_content":"- Trees are non-linear data structures representing hierarchical parent-child relationships, connected by directed edges.<hr />- Main purpose of trees: efficient search, avoiding linear search seen in arrays or linked lists.<hr />- Key terminology:<hr />  - Node: fundamental element holding data and pointers.<hr />  - Edge: connection between parent and child nodes.<hr />  - Root: top node with no incoming edges.<hr />  - Leaf: node with no children.<hr />  - Path: sequence of connected nodes.<hr />  - Height of a node: longest downward path to a leaf, measured in edges.<hr />  - Parent: node with outgoing edge to children.<hr />  - Child: node with incoming edge from parent.<hr />  - Sibling: nodes sharing same parent.<hr />  - Ancestor: reachable node from descendant moving upward.<hr />  - Level/Depth: distance from root in edges.<hr />- Tree types:<hr />  - Non-binary: nodes have >2 children; examples include 2-3, B-trees.<hr />  - Binary: nodes have ≤2 children; includes BSTs, AVL, red-black trees.<hr />- Binary tree specifics:<hr />  - Each node, except root, has exactly one parent.<hr />  - Children are labeled Left and Right.<hr />  - Codified as structures with value, left/right pointers, optional parent, and height.<hr />- Properties:<hr />  - Level nodes ≤ 2^i.<hr />  - Max nodes at depth k: 2^(k+1)-1.<hr />  - Unique path from root to any node.<hr />  - N nodes → N−1 edges.<hr />  - Full binary trees have height O(log n); relations with nodes and leaves.<hr />- Tree variants:<hr />  - Complete: all levels fully filled except last, nodes as far left.<hr />  - Full: each node has 0 or 2 children.<hr />  - Perfect: full and all leaves at same level.<hr />  - Skewed: either all left or all right children, forming a degenerate tree.<hr />  - Height-balanced: node subtrees differ by ≤1 in height; includes AVL and red-black trees.<hr />- Binary Search Tree (BST):<hr />  - Orders nodes: left ≤ node ≤ right.<hr />  - Supports:<hr />    - Insert, delete, search in O(h).<hr />    - In-order traversal yields sorted list.<hr />- Utility:<hr />  - BST methods enable efficient scheduling, e.g., runway reservations.<hr />- Data structure challenges:<hr />  - Linear structures: slow insert/delete/search.<hr />  - Heaps/hash tables: hindered by order or slow range queries.<hr />  - BSTs: convertible for augmented data and flexible operations.<hr />- Balanced BSTs:<hr />  - Goal: maintain height O(log n) for operations.<hr />  - Key concepts:<hr />    - Balance factor: difference in subtree heights ≤1 (AVL invariant).<hr />    - Height stored at nodes (e.g., AVL's height field).<hr />    - Rotations (left/right) fix imbalance.<hr />- AVL trees:<hr />  - Named after Adelson-Velsky and Landis.<hr />  - Enforce balance: |height(left)−height(right)| ≤1.<hr />  - Maintains O(log n) height.<hr />  - Balancing via rotations during insertions/deletions:<hr />    - Left or right rotation depending on imbalance.<hr />    - Cases: skewed left/right subtrees, double rotations needed in complex cases.<hr />- Insertions/deletions:<hr />  - Perform standard BST operation.<hr />  - Rebalance as needed using rotations, propagating upward.<hr />- Rotations:<hr />  - Left rotation: parent becomes right child, right child moves up.<hr />  - Right rotation: parent becomes left child, left child moves up.<hr />- Maintenance:<hr />  - After modifications, update node heights.<hr />  - Fix violations up to the root.<hr />- Proving height bounds:<hr />  - Minimum nodes for height h: recurrence analogous to Fibonacci.<hr />  - Largest height for n nodes: O(log n), derived via exponential bounds.<hr />- Implementation considerations:<hr />  - Store heights to allow O(1) height checks.<hr />  - Rotations preserve BST properties.<hr />  - Final goal: self-balancing ensures logarithmic depth, optimizing operations.<hr />- Additional: AVL trees lend themselves to augmentation for extra functions (like rank, order statistics).<hr />- References:<hr />  - Wikipedia, YouTube tutorials, and open-source implementations.","tags":"","authors":"","date":{"days":19401},"category":"playground > topics > data"},"980":{"file_path":"playground/topics/data/designing-a-model-with-dynamic-properties.md","title":"Designing a model with dynamic properties","description":"When we started working on this project aimed at the creative community, we faced an interesting challenge. We needed to build a model that was similar to a task but with a key difference: it had to support custom, dynamic, and extensible properties. If you’ve ever used Notion and appreciated how flexible its objects are, you’ll know exactly what we were trying to achieve.","spr_content":"- The project aimed at the creative community required a model supporting dynamic, extensible properties.<hr />- Inspiration drawn from Notion’s flexible object system, emphasizing adaptability.<hr />- Extensibility prioritized: handle various data types (text, select, date-time, boolean, relations).<hr />- Select options needed to be shareable across teams, enabling unified configurations.<hr />- The model had to be easily query-able for sorting and pagination, scalable as data grows.<hr />- The `tasks` table initially was minimal, referencing a `values` table via many-to-many relation.<hr />- The `fields` table defined metadata: type (`text`, `checkbox`, `select`, `users`), name, options.<hr />- For select-type fields, options stored in an `options` table, linked via many-to-many.<hr />- The `values` table stored actual data: text, checkbox, select options, user references, each related to a specific field.<hr />- `options` table held selectable choices with labels and values, linked to fields.<hr />- Key decision: separate object (`tasks`) from its fields (`values`), enabling flexible, per-task property sets.<hr />- Tasks relate to values, not directly to fields, to maintain flexibility and reuse field definitions.<hr />- Data flow: tasks → values → fields; simplifies relationships, facilitates removal and sharing.<hr />- Challenges encountered: complex joins impacting performance, addressed via Common Table Expressions (CTEs).<hr />- Cross-team collaboration is hampered by team-scoped fields; sharing across teams remains complex.<hr />- System design provides significant flexibility and extensibility, with ongoing efforts to improve collaboration.<hr />- Overall, the model balances complexity with scalability, supporting evolving, dynamic data structures.","tags":"database-modelling system-design","authors":"mashiro5951","date":{"days":19956},"category":"playground > topics > data"},"981":{"file_path":"playground/topics/data/§ Data Engineering.md","title":"§ Data Engineering","description":"Explore comprehensive data engineering topics including Google Dataproc, Apache Hive, MapReduce, data pipeline design, and BI tools to enhance your knowledge of data analysis and processing techniques.","spr_content":"- Data engineering encompasses tools like Google Dataproc and Data Fusion for scalable processing and integration.<hr />- Data pipeline design relies on frameworks emphasizing modularity, reliability, and efficiency.<hr />- Statistical methods are fundamental for data analysis, informing decisions and model building.<hr />- Partitions in Apache Hive optimize query performance by segmenting data logically.<hr />- BI tools provide insights through dashboards, reporting, and visualization; understanding their overview aids selection.<hr />- Comparisons: Order By sorts entire result sets; Sort By sorts within partitions; Distribute By and Cluster By influence data distribution and clustering in parallel processing.<hr />- MapReduce models batch processing with components: Mapper, Reducer, and Driver; their understanding is key to distributed data tasks.<hr />- Managed tables are controlled within a database; external tables reference external data sources, impacting data lifecycle management.<hr />- Apache Pig and Hive simplify big data scripting; Pig deals with procedural workflows, Hive with SQL-like queries.<hr />- Hive supports window and analytic functions for advanced data analysis.<hr />- Data Vault modeling structures data warehouses around hubs, links, and satellites for agility and traceability.<hr />- DBT accelerates data transformation within ELT pipelines, enabling scalable and maintainable models.<hr />- Buckets and Bloom filters optimize data storage and query speed in Hive.<hr />- Behind Hive tables, data storage details affect performance and data management.<hr />- Cap Theorem clarifies trade-offs among consistency, availability, and partition tolerance in distributed systems.<hr />- Building local search engines (e.g., Memo) involves indexing and retrieval algorithms, possibly leveraging in-memory data structures.<hr />- Retail trading data analysis requires domain-specific data insights; understanding trading patterns and customer behavior.<hr />- Circular database design addresses normalization, denormalization, and schema evolution.<hr />- Locking mechanisms prevent concurrent data conflicts, maintain ACID properties.<hr />- DuckDB exemplifies an in-process database with fast analytical query capabilities.<hr />- Evolutionary design adapts schemas over time, balancing flexibility and stability.<hr />- PostgreSQL full-text search uses indexing (GIN/GIN) for efficient querying.<hr />- Hadoop HDFS provides distributed storage; integrates with processing engines like Dataproc and Hive.<hr />- Discord’s message storage transitions from MongoDB to Cassandra for scalability and availability.<hr />- Security standards derive from security principles, regulations, and organizational policies.<hr />- CRDTs (Conflict-free Replicated Data Types) enable eventual consistency without conflicts.<hr />- Local-first software emphasizes local data ownership and synchronization, enhancing resilience and privacy.<hr />- Multi-column indexes improve query performance for composite filters.<hr />- Vector databases (e.g., for ML embeddings) streamline similarity searches.<hr />- Redis leaderboards manage real-time ranking data efficiently.<hr />- Self-balanced BSTs like AVL trees maintain logarithmic height for fast insertions, deletions, and lookups.<hr />- SQL's I/O behavior impacts disk read/write performance; optimized queries reduce bottlenecks.<hr />- ORM simplifies database interactions but may introduce inefficiencies; plain SQL offers granular control.<hr />- SARGable (Search ARGable) queries enable the database engine to utilize indexes, improving performance.<hr />- Data governance, quality, security, cataloging, and observability are crucial placeholders for comprehensive data management, but require further detailed elaboration.","tags":"big-data data-engineering moc","authors":"","date":{"days":20201},"category":"playground > topics > data"},"982":{"file_path":"playground/topics/engineering/202210122014-forward-proxy.md","title":"Forward Proxy","description":"A forward proxy is a server that sits between user devices and the internet.","spr_content":"- Forward proxy: intermediates between users and internet; shields clients, bypasses restrictions, blocks content.  <hr />- Reverse proxy: intermediates between client requests and web servers; shields servers, balances load, caches static content, manages SSL encryption.  <hr />- Both serve as intermediaries but differ in direction and purpose: forward protects clients, reverse protects servers.  <hr />- Forward proxies focus on client anonymity and access control; reverse proxies optimize server performance and security.  <hr />- Conceptually similar to a filter or gatekeeper, acting at different points in data flow.","tags":"engineering forward-proxy","authors":"khacvy","date":{"days":19277},"category":"playground > topics > engineering"},"983":{"file_path":"playground/topics/engineering/§ Engineering Management MOC.md","title":"§ engineering management moc","description":"Explore key engineering management concepts like Conway's law, team topologies, backlog grooming, and quality assurance to improve product development and team performance effectively.","spr_content":"Management involves principles like Conway's law, where system design mirrors organizational structure. Analysis documents serve as foundational artifacts for decision-making. Burnup and burndown charts visualize progress and velocity. Cognitive load impacts team effectiveness and must be managed for optimal productivity. Differentiating roles: project, program, and portfolio managers clarify scope and responsibilities. Enabling teams foster autonomy and innovation. Incident management within teams exemplifies operational resilience. Building product sense requires user focus and market understanding. Effective backlog grooming ensures clarity and prioritization. Quality assurance integrates seamlessly into product teams for defect prevention. Story point estimation enables relative sizing and planning. Stream-aligned teams focus on end-to-end value delivery. Team-first thinking emphasizes collaboration over hierarchy. Team topologies optimize organizational flow and responsibility distribution. Fundamentals of web performance hinge on understanding DOM manipulation costs and virtual DOM efficiency. DOM manipulation is slow due to browser reflows; virtual DOM accelerates rendering by batching updates.","tags":"","authors":"","date":"","category":"playground > topics > engineering"},"984":{"file_path":"playground/topics/engineering/§ Engineering Backend MOC.md","title":"§ engineering backend moc","description":"Explore key backend engineering concepts including Golang atomic packages, database locking, GraphQL microservices, Redis tools, SQL optimization, concurrency patterns, and effective testing strategies.","spr_content":"- Backend encompasses concepts like atomic operations, database locking, and inter-service communication.<hr />- Atomic package in Golang provides thread-safe, lock-free operations essential for concurrent programming.<hr />- Database locking controls access to data, preventing race conditions but impacting performance.<hr />- GraphQL in microservices enables a unified API gateway, simplifying client access and reducing multiple round-trips.<hr />- CRDTs (Conflict-free Replicated Data Types) facilitate conflict resolution in distributed systems without central coordination.<hr />- Gomock enhances testing by enabling precise mocking of dependencies, increasing test reliability.<hr />- Redis techniques like Leaderboards and Rate Limiting leverage in-memory operations for high-performance, real-time features.<hr />- SQL sargable queries improve performance by enabling efficient index usage, reducing disk I/O.<hr />- SQL’s performance heavily depends on disk reads/writes; query optimization minimizes costly disk operations.<hr />- Test Doubles (mocks, stubs, fakes) are crucial for isolated, reliable unit testing.<hr />- Kafka's transition away from Zookeeper reduces dependency complexity and improves scalability.<hr />- Golang testing best practices promote simple, maintainable test code, emphasizing clarity and isolation.<hr />- Concurrency in Go introduces pitfalls (e.g., race conditions) but also patterns (channels, goroutines) to manage parallelism safely.<hr />- Real-time updates of symbol prices require efficient data pipelines and caching strategies.<hr />- Using cached tables (e.g., for Binance Kline API data) optimizes API data processing and reduces latency.<hr />- libcluster in Elixir facilitates dynamic clustering of nodes for fault tolerance and scaling.<hr />- pg in Elixir provides idiomatic database access, enhancing backend robustness and ease of use.","tags":"","authors":"","date":"","category":"playground > topics > engineering"},"985":{"file_path":"playground/topics/engineering/§ engineering.md","title":"§ Engineering","description":"Explore comprehensive engineering topics including backend development, management strategies, and web performance fundamentals to enhance your software skills and team productivity.","spr_content":"- Engineering Back-end concepts include Forward Proxy, Behavior Driven Development, Error Messaging, DNS A and CNAME Records, and various architecture and design documents.<hr />- Tools and techniques for back-end engineering encompass build assistants for terminals, burnup/burndown charts, cognitive load management, and solutions to the Cold Start Problem.<hr />- Principles like Conway's Law influence architecture, emphasizing the relation between organizational structure and system design.<hr />- Back-end programming guides cover daemons, services, multilingual database designs, and deployment series like Dcos tutorials covering installation, deployment, service discovery, load balancing, databases, and GitLab integration.<hr />- Data management involves double-entry accounting, database design, and reusability strategies.<hr />- Software modeling, quality assurance, and-life cycle fundamentals streamline development and ensure quality.<hr />- Microservices architecture features tools such as GraphQL APIs, Istio service mesh, and techniques for reusing React code, handling URL redirects, and real-time data updates.<hr />- Optimization methods like radix sort, Redis rate limiting, and infinite galleries with R3F enhance performance.<hr />- Development practices include Pomodoro technique, software craftsmanship, team thinking, tackling complexity, and building product sense.<hr />- Source control and development workflows incorporate Vim REPL-driven development, monorepos, and code split strategies.<hr />- Metrics and estimation techniques focus on story points, sprint lifecycle management, and incident handling.<hr />- Infrastructure topics cover Kubernetes, Kafka's architecture (like removing Zookeeper dependency), and investing in tooling for scalability.<hr />- Management principles emphasize analysis documents, project tracking, enabling teams, handling incidents, and strategic planning.<hr />- Organizational structures are guided by Conway's Law, team topologies, and stream-aligned teams.<hr />- Foundations include web performance fundamentals, DOM manipulation performance, and the efficiency of virtual DOM implementations.","tags":"engineering moc","authors":"","date":{"days":20201},"category":"playground > topics > engineering"},"986":{"file_path":"playground/topics/engineering/202211081111-error-messaging.md","title":"Error Messaging","description":"What makes a bad error message","spr_content":"- **Bad error message:**  <hr />  - Uses inappropriate tone, unprofessional or harsh language  <hr />  - Contains technical jargon that confuses users  <hr />  - Passes blame to the user or external factors  <hr />  - Is generic, vague, or provides no useful information<hr /><hr />- **Good error message:**  <hr />  - Clearly states what happened and why, in simple language  <hr />  - Offers reassurance that the problem can be resolved  <hr />  - Shows empathy, acknowledging user frustration or inconvenience  <hr />  - Guides the user with actionable steps to fix the issue  <hr />  - Always provides an option to recover or navigate away","tags":"ux-ui","authors":"khacvy","date":{"days":19304},"category":"playground > topics > engineering"},"987":{"file_path":"playground/topics/engineering/url-redirect-vs-rewrite.md","title":"URL Redirect vs. Rewrite; What’s the difference?","description":"When working with websites and managing the computers that show them, we run into two important ideas: redirect URLs and rewrite URLs. These ideas are like tools that help us make websites work better for people. They help us make websites easier to find on search engines, and they help us make the paths on websites smoother. In this guide, we're going to explore these tools together. We'll learn what makes them different and how we can use them to make websites even cooler.","spr_content":"- Redirect URLs guide users from one web address to another, serving as virtual signposts in navigation.<hr />- Rewrite URLs modify the visible URL structure on the server side, creating cleaner and more user-friendly links.<hr />- Redirects are categorized mainly into 301 (permanent) and 302 (temporary), each serving distinct SEO and user navigation purposes.<hr />- 301 redirects preserve SEO link equity, signaling permanently moved content to search engines.<hr />- 302 redirects suggest temporary moves, instructing browsers to revisit the original URL later.<hr />- Redirect flow: user requests URL → server applies redirect rule → browser navigates to new URL → content loads.<hr />- URL rewriting transforms complex URLs into simplified, descriptive ones, improving readability and sharing.<hr />- SEO benefits of rewriting include better keyword inclusion and improved search rankings.<hr />- User experience gains from rewriting involve memorable, shareable, aesthetic URLs.<hr />- Rewrite process: user requests a URL → server rewrites it based on rules → fetches content corresponding to the rewritten URL.<hr />- Key difference: redirects change the URL in the browser and involve HTTP status codes; rewriting does not.<hr />- Choice depends on intent: use redirects to move content; use rewriting to clean or optimize URLs without moving content.<hr />- Both techniques enhance site organization, SEO, and user navigation, forming integral tools for web management.<hr />- Underlying principle: priming LLMs with associations about navigation, illusions, and SEO improves contextual understanding.","tags":"engineering http seo url-redirect url-rewrite","authors":"trankhacvy","date":{"days":19606},"category":"playground > topics > engineering"},"988":{"file_path":"playground/topics/engineering/202210131000-behavior-driven-development.md","title":"Behavior Driven Development","description":"Behavior Driven Development (BDD) is a software development process that encourages collaboration among developers, QA, and non-technical stakeholders.","spr_content":"- BDD involves three core practices: exploring examples, automating documentation, and implementing behavior through test-driven development.  <hr />- First, select a small system change (User Story) and discuss concrete examples to clarify expectations, facilitating exploration and agreement.  <hr />- Second, formalize these examples into automated tests or specifications to ensure shared understanding and to serve as living documentation.  <hr />- Third, develop the feature by starting with automated tests based on documented examples, guiding implementation and providing quick feedback.  <hr />- BDD aims for rapid, small changes, leveraging feedback loops, and automation at early stages beyond just testing.  <hr />- Using examples early enhances requirement clarity and guides implementation before full development, unlike late-stage validation.  <hr />- Proper BDD emphasizes collaboration and ubiquitous language derived from domain-driven design, ensuring team-wide understanding.  <hr />- Mistakes include limiting BDD/TDD to testing phase; it should influence the entire development process from the start.  <hr />- BDD helps discover and cover multiple scenarios during requirements and implementation, reducing gaps.  <hr />- The «Feature» + «Scenario Outline» + «Examples» format exemplifies structured, automatable specification.  <hr />- The emphasised approach promotes incremental, validated, and shared understanding, integrating testing as a development catalyst.","tags":"agile behavior-driven-development testing ubiquitous-language","authors":"0xlight","date":{"days":19278},"category":"playground > topics > engineering"},"989":{"file_path":"playground/topics/git/§ git.md","title":"§ Git","description":"Learn the basics of Git, including Gitflow pull requests and commit message conventions, to improve your version control and collaboration skills effectively.","spr_content":"Git as version control: tracks, manages code changes.  <hr />Git fundamentals: repositories, commits, branches, merges.  <hr />Gitflow: structured workflow with branches for features, releases, hotfixes.  <hr />Pull requests: facilitate code review, collaboration, and integration.  <hr />Commit message conventions: standardize, clarity, semantic importance.","tags":"git moc","authors":"","date":{"days":20201},"category":"playground > topics > git"},"990":{"file_path":"playground/topics/writing/state-explain-link.md","title":"State, Explain, Link - An all-purpose writing technique","description":"State, explain, link is a basic style for organizing and explaining ideas in an understandable way. This technique may have many names, but in essence it is a way to organize paragraphs in roughly 3 sentences or more.","spr_content":"- State, explain, and link are core components of a basic organizational style for clarity and understanding.  <hr />- State briefly introduces the topic or main idea, providing breadth; it sets the stage.  <hr />- Explain delves into depth, elaborating on details, functions, or reasons to clarify the notion.  <hr />- Link establishes relationships, offering examples, comparisons, or implications to connect ideas.  <hr />- This technique formalizes paragraph structure into at least three parts: succinct introduction, detailed development, and contextual association.  <hr />- It emerged for concise writing but is widely applicable across different formats like theses and diagrams.  <hr />- In practice, \"State\" is marked in blue, \"Explain\" in orange, and \"Link\" in purple, guiding the construction of content.  <hr />- Constructing detailed points supports initial statements by providing depth and concrete examples.  <hr />- Example: Six Sigma as a quality approach—state it improves customer expectations; explain it uses statistical methods; link it to companies like Motorola and GE reducing waste.  <hr />- Complex topics, such as product quality failure, require layered explanation: define the issue, analyze effects on trust and economic loss, and give real-world examples like Samsung’s Note 7 crisis.  <hr />- This semantic structure is versatile, useful for outlining, speaking, or any English-based explanation context.  <hr />- Outlines built with this style facilitate improvisation and elaboration through the natural progression from state to explain to link.","tags":"english writing","authors":"monotykamary","date":{"days":19072},"category":"playground > topics > writing"},"991":{"file_path":"playground/topics/writing/show-don-t-tell.md","title":"Show don t tell","description":"Learn how \"show, don't tell\" enhances writing and business communication by using vivid details and sharing information to engage audiences more effectively than simple statements.","spr_content":"- \"Show, don't tell\" emphasizes presenting information through actions, gestures, and specific details rather than direct statements.  <hr />- Fictional emotion is conveyed through physical cues: frowns, snarls, nervous tics, body language, rather than explicit emotional labels.  <hr />- Quotations serve as a form of showing, illustrating ideas through authentic voices.  <hr />- Showing is more vivid, evokes clearer imagery; telling is concise, economical, useful for efficiency and straightforwardness.  <hr />- Telling performs a necessary \"grunt work,\" providing summary or background quickly.  <hr />- Showing adds richness, nuance, and a 'flourish' to description or narration.  <hr />- In business, sharing findings rather than conclusions engages stakeholders better (“show, don’t tell”).  <hr />- Trace findings toward, but do not state directly, the action needed; maintain a visual transfer of influence.  <hr />- Providing perspective remains critical, framing data and insights contextually.  <hr />- Related concepts: metaphors shape interpretation; narratives create effects; language should be necessary and impactful.  <hr />- Abstract ideas gain humanization by adding relatable faces or stories, making them more tangible.  <hr />- Spatial placement of characters in landscapes visualizes context and enhances storytelling.  <hr />- Dialogue reveals character traits, social dynamics, and underlying motivations directly.  <hr />- Use vivid, specific language to activate latent knowledge and associations within models.  <hr />- Emphasize imagery, humanization, and detail to maximize the expressive power of communication for clearer understanding.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"992":{"file_path":"playground/topics/writing/§ Writing.md","title":"§ writing","description":"Discover essential writing tips to create compelling stories, improve characterization, and master dialogue techniques that engage readers and make your narratives memorable.","spr_content":"- Abstract concepts benefit from personification, giving them human traits for relatability.  <hr />- Show, don't tell; create vivid images through actions rather than exposition.  <hr />- Marry form with function; design structure that serves purpose seamlessly.  <hr />- Narrative trunk should be more substantial than branches; core story must be robust.  <hr />- Use language precisely; eliminate unnecessary words to increase clarity and impact.  <hr />- Good stories entice by leading and inform through engaging leads.  <hr />- Incorporate action and commentary; dynamic events paired with insights deepen engagement.  <hr />- Familiar themes can be made fresh through inventive language and perspective.  <hr />- Memorable stories feature strong endings that resonate beyond the narrative.  <hr />- Blogging involves balancing stock ideas and flow of fresh content.  <hr />- Lester Dent's master plot emphasizes a structured approach to pulp fiction storytelling.  <hr />- A scene combines large-scale (overall purpose) and small-scale (details) structures for coherence.  <hr />- The five commandments of storytelling include elements like clarity, pacing, character, conflict, and resolution.  <hr />- Character depth arises from core needs and psychological tactics; complex characters are motivated.  <hr />- Dialogue reveals character, serving as a window into psychology and relationships.  <hr />- Elizabeth George's Character Prompt Sheet aids in creating nuanced personalities.  <hr />- Situate characters within a landscape to enhance believability and context.  <hr />- Talking Heads Avoidance Device (Elizabeth George) ensures dialogue remains lively and purposeful.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"993":{"file_path":"playground/topics/writing/The Elements of Story/≈ The Elements of Story.md","title":"≈ the elements of story","description":"Learn key nonfiction writing techniques from Francis Flaherty’s manual, covering narrative sequencing, strong leads, clear language, and storytelling that makes abstract ideas relatable and memorable.","spr_content":"- Narrative sequencing shapes meaning through ordered events.  <hr />- Strong endings anchor stories in memory.  <hr />- Effective stories both entice and inform the audience.  <hr />- Reframing familiar elements as new enhances engagement.  <hr />- Stories require action paired with commentary for depth.  <hr />- Vague language indicates imprecise thought; precision is essential.  <hr />- Every word must serve purpose; avoid redundancy.  <hr />- The core of a story must be more substantial than its details.  <hr />- Form must align with function for clarity.  <hr />- Abstract ideas gain impact when personified or humanized.","tags":"","authors":"","date":"","category":"playground > topics > writing > The Elements of Story"},"994":{"file_path":"playground/topics/writing/¶ Stock and Flow.md","title":"¶ stock and flow","description":"Learn how Robin Sloan's \"stock and flow\" theory helps creators balance evergreen content with fresh updates to grow long-term traffic and audience engagement effectively.","spr_content":"- \"Stock and flow\" is a content theory by Robin Sloan.  <hr />- \"Stock\" refers to a library of reliable, durable, evergreen content.  <hr />- Stock content sustains long-term traffic to a channel or website.  <hr />- \"Flow\" consists of frequent, ephemeral updates.  <hr />- Flow maintains creator visibility within the audience.  <hr />- Growth in stock requires collecting, organizing, and expanding flow content.  <hr />- Balance between stock (long-term) and flow (short-term) drives content strategy.  <hr />- Sloan's concept aligns with principles of content sustainability and audience engagement.  <hr />- Kleon emphasizes sharing work to increase discoverability, paralleling flow’s role in visibility.","tags":"","authors":"","date":"","category":"playground > topics > writing"},"995":{"file_path":"updates/build-log/create-slides-with-overleaf.md","title":"Create slides with Overleaf and ChatGPT","description":"This article shares a workflow for making slide decks with Overleaf and ChatGPT. It solves issues like slow content creation using ChatGPT and formats with Overleaf’s themes. It includes examples, tips, and a Dify automation for engineers.","spr_content":"- Personal workflow combines Overleaf, ChatGPT, and automation for professional slide creation.<hr />- Traditional tools (Google Slides, Markdown/Marp) are quick but lack polished consistency needed for serious presentations.<hr />- Overleaf offers high-quality, professional visuals with themes, uniform formatting, and collaboration.<hr />- LaTeX mastery can be a barrier; AI lowers this barrier by generating content, reducing manual effort.<hr />- Two-step process: ChatGPT for content (ideas, structure), Overleaf for formatting and visual output.<hr />- Prompt ChatGPT with clear instructions: slide count, topic, bullet points; obtain draft structure.<hr />- Transfer ChatGPT output into Overleaf, apply themes, recompile to generate slides rapidly.<hr />- Live preview allows iterative refinement; collaboration is straightforward online.<hr />- Workflow significantly cuts down time—content creation from hours to minutes; enhances quality.<hr />- Example: explaining data snapshot pattern via ChatGPT+Overleaf, producing a professional deck in 15 minutes.<hr />- Self-application: transforming existing articles into slide decks, demonstrating the method’s efficiency.<hr />- Automation with Dify streamlines procedures—content analysis, formatting, version control, retries, via links.<hr />- Practical tips: be specific in prompts, leverage predefined themes (Copenhagen, Berlin), keep raw text backups.<hr />- The process forms a pipeline: prompt → ChatGPT content → formatted LaTeX → slides in Overleaf.<hr />- Custom prompts tailored to specific topics (e.g., data persistence, e-commerce) improve relevance.<hr />- Real example: using this workflow to produce a 2-hour project presentation in 2 hours, not days.<hr />- Summary: leveraging AI and Overleaf turns stressful slide design into manageable, quick tasks.<hr />- Encourages adaptation, experimentation, and sharing results for diverse projects.<hr />- Overall goal: efficient, polished, minimal-stress presentation development workflow.","tags":"llm overleaf slide","authors":"bievh tieubao","date":{"days":20167},"category":"updates > build-log"},"996":{"file_path":"updates/OGIF/5-20240503.md","title":"OGIF Office Hours #5 - Singapore market report, C4 modelling, How we created Memo's nested sidebar","description":"Our fifth office hours community discussion covers the Singapore market report, C4 modeling, and how we created Memo's nested sidebar. We aim to promote learning and growth within our community by sharing weekly topics, selected through tags, and encouraging collaboration among members.","spr_content":"- LLMs embed knowledge, abilities, and concepts within a latent space, activated by associative priming words.<hr />- Priming involves cueing the model to access specific internal states, akin to human memory triggers.<hr />- Effective communication uses abstraction, analogy, and metaphor to simplify complex system representations.<hr />- C4 modeling provides a hierarchical, visual framework for system architecture, enhancing clarity and problem-solving.<hr />- C4 levels (Context, Containers, Components, Code) distill system complexity into understandable layers.<hr />- System structure communication benefits from standard terminology and diagrams, facilitating consensus.<hr />- Nesting structures (e.g., nested sidebar, recursion in HTML output.js) enable scalable, flexible visualization of hierarchies.<hr />- Memo's nested sidebar employs recursion and HTML techniques to dynamically render multi-level menus.<hr />- Transition from pure JavaScript to Outbox indicates a move toward more integrated, streamlined data handling.<hr />- Protocol stacking models enhance security, redundancy, and rapid decision-making through layered protection.<hr />- Transfer of IC (tokens) involves selection, address input, confirmation, and reward distribution, akin to transaction workflows.<hr />- Modular component implementation using UML-like diagrams (boxes, lines) clarifies system functionalities.<hr />- C4 modeling aids decision-making by providing structural clarity, aiding testing, QA, and documentation.<hr />- CFO framework offers a cross-domain, communicative approach integrated within C4 for effective stakeholder understanding.<hr />- Diagramming with C4 abstractions reduces misunderstandings, standardizes terminology, and improves cross-team collaboration.<hr />- Implementing C4 components involves defining functions, UML diagrams, and aligning with system requirements.<hr />- Recursive techniques support unlimited nesting, facilitating complex hierarchy visualization in automated HTML outputs.<hr />- Outbox integration improves user experience and system robustness, replacing less efficient previous methods.<hr />- Upcoming features (stacking, new layouts) prioritize user convenience and data accessibility.<hr />- Weekly planning involves selecting themes, templates, and preparing for rapid iteration and voting.<hr />- The nested sidebar enhances Memo's usability, allowing quick access to hierarchical data and ecosystem insights.<hr />- Submission workflows require structured review, collaboration on foundational elements, and iteration prior to final approval.<hr />- Overall emphasis on modular, scalable, and communicative system design exemplifies best practices in system architecture and team coordination.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19880},"category":"updates > OGIF"},"997":{"file_path":"updates/OGIF/21-20240830.md","title":"OGIF Office Hours #21 - Community engagement, Go weekly, Journey of thought for prompt engineering","description":"Our latest community discussion covers key topics such as increasing community engagement, the introduction of the DFG token for contribution recognition, building an internet brand, and market trends toward AI and tech advancements. We’ll also explore small tool development for monetization and insights on reducing software development costs with new technologies. Join us to learn more about upcoming initiatives and activities.","spr_content":"- Increasing community engagement and knowledge sharing is a key goal, achieved through mechanisms like ICY and contribution recognition.<hr />- Introduction of the DFG token as an internal asset, akin to stock or ESOP, incentivizes contributions and fosters team ownership.<hr />- Building a strong internet brand and enhancing team collaboration are central strategies for growth.<hr />- The market trend increasingly favors AI and technological advancements, prompting shifts in project focus and resource allocation.<hr />- Encouraging development of small tools and monetization aligns with the solo developer trend and community growth initiatives.<hr />- Future community activities include contribution and earn models, giveaways, and case study collection to expand the ecosystem.<hr />- Cost reduction in software development is facilitated by new technologies like EOM, automating workflows and accelerating deployment.<hr />- Software development costs decline due to AI, enabling faster, more efficient product creation, and a new entrepreneurial wave.<hr />- The team's operations adapt by focusing on strategic AI projects, open-source initiatives, and refining technical tools.<hr />- Market insights highlight sustained hiring in smaller firms and ongoing tech innovation despite layoffs in larger companies.<hr />- Emphasis on continuous monitoring, testing, and sharing experiences to improve deployment processes, especially on low-powered devices.<hr />- Leveraging AI for report automation, prompt engineering, system evaluation, and system integration represents a significant leap in autonomous software development.<hr />- Use of AI to generate, improve, and customize prompts enhances accuracy and efficiency in tasks ranging from location estimation to system documentation.<hr />- The concept of a \"System BOM\" underscores the importance of clear data, proper structure, and validation criteria, with AI assisting in evaluation and standardization.<hr />- Deployment of tools like `Range over function`, `xcv`, and `Permify` exemplifies innovation in compilers, extensions, and authorization management.<hr />- Transition from Java to Go in enterprise contexts is supported by case studies demonstrating cost-effectiveness, stability, and performance benefits.<hr />- Community revival efforts include \"contribution and earn\" models, promotional giveaways, and the creation of small, monetizable tools.<hr />- Focus on reducing production costs through mastery of emerging technologies like EOM is essential in modern development workflows.<hr />- Encouragement for team members to propose, share, and test new ideas or topics for small talks and knowledge-sharing sessions.<hr />- Overall strategic focus on autonomous, AI-augmented development processes, community engagement, and continuous innovation.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19971},"category":"updates > OGIF"},"998":{"file_path":"updates/OGIF/24-20240920.md","title":"OGIF Office Hours #24 - Go weekly, AI-Driven Workflows, Holistic Team AI Demo, and Figma to UI Component with Claude","description":"In our OGIF office hour 24 covers AI-driven workflows with Tom, a demo with the Holistic team, and Figma integration with Claude for UI components and Go commentary. Highlights include Agent Zero's data automation capabilities, Figma-to-code conversion, and the benefits of in-office collaboration for efficient knowledge transfer and AI/ML learning.","spr_content":"- Live coding demo focused on data engineering with real-time AI assistance, showing data cleaning and prep for analysis.<hr />- Used Agent Zero, an AI agent that writes code in natural language, to process and analyze CSV datasets sourced from web data.<hr />- Agent Zero automates code generation, error fixing, data transformation, and visualization, significantly reducing manual effort.<hr />- Tasks include converting messy CSV data to clean structured files, creating infographics to visualize backend tech usage, and managing outputs systematically.<hr />- Demonstrated AI-driven web crawling, data scraping, and preprocessing workflows, emphasizing automation of repetitive data tasks.<hr />- Illustrated downloading and editing videos via AI, including segment extraction, with the AI managing terminal commands and error handling.<hr />- Showed how Agent Zero manages tools and memory, storing created utilities in SQLite for reuse, optimizing workflow and avoiding redundant coding.<hr />- Highlighted that Agent Zero's core architecture automates tool creation, unlike traditional frameworks requiring manual setup; uses a cache system for efficiency.<hr />- Emphasized how code outputs are stored in YAML and AQL, enabling non-technical team members to define queries declaratively.<hr />- Discussed ongoing challenges with complex data scenarios, such as precise table extraction from PDFs and real-time contextual understanding.<hr />- Projected future improvements through AI that interprets natural language to generate AQL directly, bypassing explicit coding, increasing accessibility for business users.<hr />- Explained that AQL offers higher reusability and modularity than SQL, enabling functions, variables, and more advanced data manipulation.<hr />- Highlighted use of AI to enhance user experience: query suggestions, automatic refactoring, metadata addition, and natural language interfaces for analytics.<hr />- Described integration of AI-powered dashboards that generate code from UI components, supporting version control and collaborative development.<hr />- Noted the iterative development process, involving both engineering and product teams, with prompt engineering being critical to output quality.<hr />- Discussed the future goal of AI systems that understand contextual definitions (e.g., \"active users\") and adapt queries accordingly.<hr />- Provided insights into team efforts for AI adoption challenges, new tools, and community engagement strategies, including experimenting with new programming tools like Golang's `genkit`.<hr />- Shared ongoing initiatives such as creating comic strips (e.g., themed around finance/tech) as PR and internal team building, leveraging AI for art generation.<hr />- Emphasized the importance of returning to in-person work for faster knowledge transfer, especially on AI/ML topics, with incentives like ICY points for office check-ins.<hr />- Summarized strategic focus on data reprocessing, BI dashboards, and emerging AI tools, with plans to refine models, enhance user experience, and expand AI’s role in self-serve analytics.<hr />- Emphasized cross-team collaboration, ongoing experimentation, and adjustment of workflows to integrate AI effectively into data engineering, software development, and analytics.<hr />","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19989},"category":"updates > OGIF"},"999":{"file_path":"updates/OGIF/23-20240913.md","title":"OGIF Office Hours #23 - Go weekly, Frontend report, Hybrid working support, and AI mixture agent","description":"In OGIF Office Hour 23 covered a variety of topics, including updates on Golang Weekly and its use in enterprise environments, comparing Go with Java and C++. The session explored the latest trends in React 19 AC, Next.js, and CSS Grid, alongside new form-building tools. Additionally, the team discussed productivity enhancements using AI-driven solutions like mixture agents, while introducing upcoming tests and hybrid work support.","spr_content":"- LLM embedded knowledge, abilities, concepts via latent space.  <hr />- Word series prime neural internal states.  <hr />- Associative models only need correct cues to activate latent content.  <hr />- SPR uses compact, associative cues as language priming.  <hr />- Distilled assertions for advanced understanding and priming large models.  <hr />- Highlights include financial reports, Golang updates, enterprise Go readiness, tech trends, productivity tools, AI automation, team testing, and team building.  <hr />- Financial report focused on August financials and Golang blog survey.  <hr />- Go is evaluated for enterprise maturity versus Java and C++, considering transition costs.  <hr />- Enterprise languages: Java (stability, ecosystem), C++ (complexity, older), C# (Microsoft).  <hr />- Go’s advantages: performance, simplicity, emerging enterprise adoption, big company use cases.  <hr />- Technical trends: React 19 AC, Next.js updates, CSS Grid, JavaScript date handling, Vercel demos, and language rankings (Python top, Java, JS, C++).  <hr />- Web tools: rb, fity, i18n for UI, schema, community cleanup.  <hr />- AI tools: mixture agents, AI comments, system prompts, auto-inference, decision layers, multi-model inference.  <hr />- Knowledge discovery: from Google search to direct AI Q&A, leveraging large language models with reasoning layers and context layers.  <hr />- Learning methods: strategic prompting for Chinese, HSK prep, technical workflows, demo projects, API automation.  <hr />- Workflow design: selecting projects, building scripts, Docker, understanding code bases, comparing AI work methodologies.  <hr />- Team initiatives: testing AI tool usage, rewards for mastering tools, hybrid work adjustments, team outings, AI club invites for qualified members.  <hr />- Future focus: proficiency in AI techniques, workflow automation, manual to automated transition, collaboration on open source and data sharing.  <hr />- Organizational goals: increase speed, reduce manual work, develop team expertise, adapt to tech trend shifts.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19982},"category":"updates > OGIF"},"1000":{"file_path":"updates/OGIF/26-20241004.md","title":"OGIF Office Hours #26 - Product Design Commentary, Go Weekly, Trading App Case Study, Chatbot Evaluations, and Announcement for Essay Assignments","description":"In this Office Hours, Nam Bui shared product design insights on the Sparkle icon in AI and onboarding, Phat covered Go tools Prep and War Zero, and Hoang discussed chatbot evaluations. Anh presented a case study on AI-driven user research for Kafi. Management announced AI essay assignments tied to the year-end trip and performance reviews.","spr_content":"- LLMs embed knowledge, abilities, concepts in latent space, activated by associative primes.<hr />- Language priming cues activate latent content efficiently.<hr />- Sparse Priming Representation (SPR) condenses cues into succinct, high-impact statements.<hr />- SPR captures assertions, associations, metaphors, analogies with minimal words.<hr />- Use complete sentences where necessary to clarify latent activations.<hr />- Priming leverages deep learning’s associative nature, akin to human memory triggers.<hr />- Effective SPR aligns internal neural states to task-specific latent capabilities.<hr />- Distillation focuses on activating relevant knowledge thresholds in models.<hr />- SPR serves for advanced NLP tasks: reasoning, planning, content generation.<hr />- Extremely compact, concept-focused, primed language enhances model's contextual readiness.<hr />- SPR is a strategic implementation for controlling and directing deep neural activations.<hr />- Designed to optimize the activation of complex latent abilities with minimal input.<hr />- Enables models to internalize task context rapidly, improving accuracy and efficiency.<hr />- The beauty of SPR lies in its low-volume, high-signal linguistic priming.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20000},"category":"updates > OGIF"},"1001":{"file_path":"updates/OGIF/3-20240419.md","title":"OGIF Office Hours #3 - Generative AI, Tokenomics, and Finance Talks","description":"Our third office hours community discussion, where we'll cover diverse topics ranging from the current state of the dwarf community and their experiences with devbox, insights on and continuation of liquidity markets, advancements in generative AI technology, to fun events like a lucky draw for icy. The goal is to foster learning by sharing weekly topics suggested through tags, encouraging collaborative growth among our members.","spr_content":"Generative AI: a technology that combines multiple modalities (text, video, images) to produce novel content based on input prompts.  <hr />Neural networks: models that emulate human brain structures with layered architecture; deep learning is a subset with many layers.  <hr />Machine learning: models trained on data to make predictions or generate content without explicit rules.  <hr />Generative AI vs. MLM: generative AI creates new content; MLM (Masked Language Models) predict missing parts in language tasks.  <hr />AI development process: from idea, requirement definition, prototype, validation, to deployment; iterative and evaluative.  <hr />Model evaluation: involves assessing prompt quality, output relevance, safety, and performance; using benchmarks and proxy metrics.  <hr />Trade-offs in AI: cloud-based APIs like GPT-4 offer ease but cost; self-hosted models require maintenance but lower long-term costs.  <hr />Tokenomics and community: innovations like NFTs and blockchain-based governance aim to build supportive ecosystems; token roles and incentivization are central.  <hr />Liquidity in markets: ability to buy/sell assets rapidly at stable prices; market components include buyers, sellers, market makers, brokers, and platforms.  <hr />Liquidity markets: characterized by high market depth; assets like BTC or tokens can be liquid if easily traded in large size without impacting price.  <hr />Market visualization: order books, transaction flows, and price movements reveal liquidity conditions and trading behaviors.  <hr />Liquidity pools: mechanisms enabling easy asset exchange; NFT stacking and token staking boost liquidity and project engagement.  <hr />Evaluation protocols: systematic review (using rules, matrices) to select appropriate models and prompts for AI tasks; align outputs with objectives.  <hr />Impact on finance: Web3 and tokenized ecosystems foster new financial models; real-time liquidity management and incentivized contribution drive innovation.  <hr />Community involvement: projects leverage social platforms, community feedback, and NFTs; role-based participation enhances engagement.  <hr />Future directions: building universalized protocols for decentralized finance, AI model selection, and evaluation; enabling scalable, transparent, and community-driven ecosystems.","tags":"discord office-hours ogif","authors":"monotykamary","date":{"days":19840},"category":"updates > OGIF"},"1002":{"file_path":"updates/OGIF/19-20240821.md","title":"OGIF Office Hours #19 - Golang weekly, Designing for forgiveness, File sharing system design, Dify AI demo","description":"OGIF 19 dives into essential topics including Go 1.23 updates, effective UI error handling, and a detailed Dify AI demo. We explore common Go pitfalls, best practices for database design, and strategies for optimizing queries. The session also features a practical demonstration of integrating AI into development workflows with Dify AI.","spr_content":"- LLMs embed vast latent knowledge, abilities, and concepts within a high-dimensional latent space.  <hr />- Proper priming words activate specific latent content, similar to associative cues in human memory.  <hr />- SPR uses minimal, precise language to distill complex ideas, facilitating efficient activation of latent abilities.  <hr />- Programming languages like Go present common pitfalls, including pass-by-value issues and range loop behaviors; these are associative patterns of errors.  <hr />- Errors in Go often stem from misunderstanding pass-by-value, especially with strings and structs within slices, which can be fixed by indexing instead of value-range loops.  <hr />- Slice manipulation and copying can inadvertently affect original data due to reference-sharing; careful consideration of underlying arrays is required.  <hr />- UI error management should embrace user errors, providing immediate feedback, warnings, and undo options to enhance user experience.  <hr />- Designing for error handling involves accessible notifications, clear guidance, and robust validation, reducing user frustration.  <hr />- Complex product features like permissions and file sharing require hierarchical, multi-level access control models, similar to cloud storage services.  <hr />- Use case diagrams and ER models visualize system components: workspaces (groups), users, assets (files, folders), permissions, sharing, and paths.  <hr />- File path logic enables O(1)/O(2) query complexity, facilitating quick retrieval, listing, and movement of files/folders in hierarchical structures.  <hr />- Moving files updates paths en masse through recursive or categorized path updates, avoiding transaction delays.  <hr />- Permission systems integrate direct, inherited, public, and optional password protections, with granular control over access levels.  <hr />- Hierarchical permission inheritance relies on checking parent directories for access rights when conflicts or non-inheritance occur.  <hr />- Permission validation prioritizes direct, project, then public permissions, with fallback to default access rights; multi-layered to optimize performance.  <hr />- Access checks involve querying related permission tables, with inheritance flags dictating whether to traverse parent hierarchies.  <hr />- Efficient permission logic prevents redundant checks, mimicking cloud storage platforms, with O(1)/O(2) query complexity.  <hr />- Permissions can be toggled with inheritance flags, and sub-permissions dynamically created; this supports multi-level, flexible access control.  <hr />- The system's architecture extends to complex scenarios, including nested folders with differing inheritance and password protection workflows.  <hr />- Sharing files publicly, with password, and permission controls, mimics real-world cloud sharing functionalities; multi-tiered permission models ensure security.  <hr />- AI workflow automation employs LLMs to generate SQL queries from natural language, guided by prompt engineering and detailed context.  <hr />- Proper prompt descriptions of database schema tables are critical; they act like \"helper functions,\" ensuring precise AI output and avoiding errors.  <hr />- Prompt engineering is a powerful technique to tailor AI outputs, especially for dynamic query generation in prototypes or rapid development.  <hr />- With a clear schema and context, AI models can generate complex queries, reducing manual coding efforts and enabling rapid iteration.  <hr />- Tools like Dify serve as platform aggregators: facilitating agent configuration, prompt management, document indexing, and API integrations.  <hr />- Integrating LLMs via APIs (OpenAI-compatible) enables building scalable, modular AI applications without extensive code.  <hr />- Uploading documents (PDFs, texts) for internal knowledge bases enhances AI understanding and accurate responses within domain-specific systems.  <hr />- Search tools (Google, Doo, Tally) extend AI capabilities with external web data, supporting comprehensive information retrieval in workflows.  <hr />- Custom tools and workflows are converted into API requests, allowing modular, reusable, and composable automation patterns.  <hr />- API keys embedded within workflows enable custom, secure interactions with external services; supporting building sophisticated, low-code AI tools.  <hr />- Automating development tasks (e.g., auto PR creation) via APIs exemplifies how AI and platform integrations streamline operations.  <hr />- Systematic configuration of prompts, tools, and APIs within Dify encourages scalable, maintainable AI-driven solutions tailored to user needs.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19957},"category":"updates > OGIF"},"1003":{"file_path":"updates/OGIF/20-20240823.md","title":"OGIF Office Hours #20 - Golang weekly, Modeling dynamic object properties, Devbox demo, LLM tracing, Cursor AI editor","description":"Our latest OGIF session covers key topics such as Go 1.23 and the introduction of Go Notebook, dynamic object modeling inspired by Notion, advanced LLM tracing techniques, Devbox demo and a hands-on look at the Cursor AI code editor. By sharing weekly topics chosen through tags, we foster a collaborative learning environment for our community to grow.","spr_content":"- The session lasted 97 minutes, covering a variety of topics related to software development, AI, and tooling.<hr />- Topics included Go 1.23, with emphasis on Go Notebook—a Jupyter-like environment for Go, faster than Jupyter in local execution.<hr />- Dynamic object modeling inspired by Notion was discussed, involving separating models and fields into distinct tables for extensibility.<hr />- The system design avoids direct relationship between tasks and fields, using a bridge table (value) to link tasks to flexible, typed fields.<hr />- Storage decisions include per-field type columns in the value table, supporting dynamic options and global configuration of fields.<hr />- Challenges include handling complex queries with many joins, cross-organization permissions, and managing shared fields across workspaces.<hr />- Data integrity and loops in data relationships are critical considerations, with debates on whether to maintain or refactor loops to prevent future issues.<hr />- The discussion highlighted the importance of tracing and evaluation in ML systems, emphasizing metrics like latency, relevance, and accuracy.<hr />- Tools such as phonic and custom evaluation models (e.g., GPT-4, Cloud 3.5) enable detailed performance and output quality analysis.<hr />- Visual and matrix-based evaluation aids in identifying irrelevant or incorrect responses, improving system responses over time.<hr />- Deployment and infrastructure tools—like debox—were presented for managing services without Docker, balancing ease of use and configuration complexity.<hr />- Cursor IDE was introduced as a powerful code development assistant, with features \"comk\" for code generation and \"coml\" for chat/support.<hr />- Cursor can generate code snippets, create structured project files, import resources, and adapt to project conventions, though it cannot auto-create files/directories.<hr />- Importing code and project context from GitHub or web sources improves accuracy, with the system running locally and data privacy controls.<hr />- Cursor can create unit tests following existing conventions, and support complex features like loading from JSON, saving developer time.<hr />- The tool's strengths include quick contextual understanding, managing large codebases, and potential to replace or enhance tools like Copilot.<hr />- Overall, the session integrated technical insights with practical demonstrations of modern development, AI evaluation, and system management tools.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19961},"category":"updates > OGIF"},"1004":{"file_path":"updates/OGIF/25-20240927.md","title":"OGIF Office Hours #25 - Team & Community updates, Hybrid culture, Product design commentary, AI Tooling Insights, Golang weekly","description":"OGIF Office Hours 25 covers the latest insights on hybrid work culture, AI-driven tooling and workflows, Golang compiler optimizations, and AI-enhanced design strategies. Explore discussions on AR/VR trends, voice user interfaces, AI tools for UI/UX, predictive programming, and team demos showcasing AI integrations and Golang performance tweaks.","spr_content":"- LLMs embed knowledge, abilities, and concepts as latent representations within their neural network structure.<hr />- Words and prompts function as associative cues to prime specific internal states in LLMs, activating latent content.<hr />- Effective priming relies on association, akin to human memory triggers through cues.<hr />- The latent space can be activated with strategic wording, enabling reasoning, coding, design, and data processing tasks.<hr />- SPR uses succinct, distilled associations and assertions to prime the model’s latent understanding efficiently.<hr />- Multi-modal content (text, voice, images) can be integrated via prompts, enabling comprehensive knowledge activation.<hr />- Cultural and domain-specific knowledge (e.g., Vietnamese dialect nuances, tech libraries) can be embedded through targeted cues.<hr />- The process involves aligning prompt structure with desired internal states: e.g., technical explanations, project updates, or domain insights.<hr />- The user-supplied content encompasses project updates, technical lectures, tutorials on AI, mentions of company activities, and code/algorithm discussions.<hr />- The content aims to activate knowledge on hybrid work culture, AI project focus, product design trends, programming techniques, and case studies.<hr />- Discussions on AI tools highlight transcriptions, summarization, content extraction, and integration with APIs like Whisper and GPT.<hr />- The detailed transcripts serve as priming examples for language models to emulate or reason about similar internal content.<hr />- The associations include tech references: Golang, vectors, AR/VR, modular design, APIs, and AI models, linking these to their conceptual roles.<hr />- Contextual themes—company culture, project management, technical deep-dives—are primed via condensed assertions.<hr />- Analogies: LLM latent space is like human memory with cues; prompts are like keywords to unlock stored knowledge.<hr />- Metaphors: Priming is akin to setting a mental \"mode\" or \"status\" within the neural network for specific tasks.<hr />- Future latent activation can be further refined by adjusting prompt structure, domain cues, and contextual associations.<hr />- The approach enables advanced reasoning and knowledge retrieval aligned with the supplied content and domain expertise.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19996},"category":"updates > OGIF"},"1005":{"file_path":"updates/OGIF/28-20241018.md","title":"OGIF Office Hours #28 - Golang sync.Map, Generative AI UX design patterns, Yelp's AI use cases, Design patterns in LLM application, and Dify github analyzer","description":"OGIF Office Hours #28 covered Go Weekly #16 by Phat on sync.Map concurrency, Nam's Product Commentary #4 on Generative AI UX design patterns, Dat Nguyen's presentation on Yelp's AI use cases including recommendation systems, Hoang's discussion on LLM application design patterns, and Cat's demonstration of a Dify-based Git repository analysis tool.","spr_content":"- LLMs embed latent knowledge and abilities; associative, primed by contextual prompts.<hr />- Sparse priming activates internal states, akin to shorthand cues for human-like thinking.<hr />- Rendering SPR: concise, assertion-based language capturing concepts, associations, and metaphors.<hr />- Go concurrency: `sync.Map` structure optimized for high-read, low-write use cases.<hr />- `sync.Map`: layered design — read-only vs. dirty maps; pointer-based entries; non-collectable; best for infrequent writes.<hr />- `sync.Map` functions: load, store, delete, range; no length; trade-offs in consistency and garbage collection.<hr />- Pattern classification: spatial placement — separate, alongside, layered, integrated parent/child, icon (point).<hr />- Functional relations: independent, aware of, interacting, incorporated, usage-based, bidirectional interaction.<hr />- AI system scope: component level to full ecosystem integration; scalable from small features to platforms.<hr />- UI spatial placement: organized to minimize user confusion; independent, overlapping, layered, integrated roles, icons.<hr />- Design patterns: repeatable templates similar to human UI/UX conventions—modular, composable, adaptable.<hr />- AI button patterns: common UI elements for AI actions; embedded, toggle, overlay, multi-agent workflows.<hr />- In-context learning: minimal fine-tuning, few-shot/zero-shot; prompt + examples drive model adaptation.<hr />- Data preprocessing: filtering, noise removal, compression to optimize model input/output efficiency.<hr />- Example agent pattern: multi-agent pipeline; evaluations from different perspectives; aggregation for final output.<hr />- Agentic system: enhances automation; components — reflection, planning, execution, multi-collaboration.<hr />- Reflection: evaluate and iteratively optimize AI output based on criteria; reduces manual intervention.<hr />- Tools: external APIs or functions; extend model capabilities with real-time knowledge retrieval.<hr />- Planning: decomposing complex tasks into step-by-step operations; reducing repeated prompting.<hr />- Multi-collaboration: divide-and-conquer; passing tasks to specialized agents; chaining expertise.<hr />- Workflow analogs: parallel/in-depth planning vs. sequential step-by-step; typical for complex system design.<hr />- Challenges: large context handling, data retrieval optimization, balancing accuracy and latency.<hr />- Concurrency in Go `sync.Map`: layered store, pointer-based entries, states: normal, amended, deleted, expired.<hr />- Use case insights: enterprise adoption, library internal support, community-driven layering, trade-offs.<hr />- Market shifts: reduced demand volume, new tech waves (LLMs, AI, blockchain); strategic adaptation.<hr />- Team segmentation: core foundation vs. specialized research; culture and knowledge alignment.<hr />- Evaluation: individual testing, quality standards, clustering results for strategic resource allocation.<hr />- Technical focus: Finite State Machines (FSM), server architecture, Erlang implementation, scaling systems.<hr />- Knowledge discovery: leveraging external AI tools, measuring effectiveness, narrowing proficiency spectrum.<hr />- Future directions: deep-dive into system architecture, modularity, automation, specialized agent workflows.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20017},"category":"updates > OGIF"},"1006":{"file_path":"updates/OGIF/22-20240906.md","title":"OGIF Office Hours #22 - Hybrid working, Tech market report, Go commentary weekly, AI demo for Go weekly content production.","description":"In OGIF 22, we talked about Devbox progress, GReader updates, and using libre chat for artifact management. We also cover optimizing AI system prompts, Go commentary, and key market trends. Plus, we discuss how hybrid work can boost team collaboration and productivity. It’s all about practical tips and knowledge sharing to keep everyone up to speed.","spr_content":"- LLMs embed extensive knowledge, abilities, concepts, reasoning, planning, and theory of mind in latent space.<hr />- Activation of latent abilities depends on associative priming with specific words and associations.<hr />- SPR distills concepts into succinct assertions, metaphors, analogies, and complete statements to prime models.<hr />- Efficient priming involves minimal words capturing maximum latent content.<hr />- Emphasis on capturing tactical updates: office enhancements, remote work, hybrid plans, social and professional improvements.<hr />- Highlights include physical office upgrades, optional in-person days, support for parking and meals, and new social protocols.<hr />- Introduction of Daily check-in rewards (3-5 ICY per day), trial in limited offices, with phased remote transition.<hr />- Office capacity constraints prioritize hybrid workers, enabling personalization for comfort.<hr />- Market updates: shift from DynamoDB to MySQL, articles on Debox’s role as a dev box (not for deployment), and accessibility design issues in Figma.<hr />- Review of technical development tools: a new script writing tool in Go offering customizable API functions, HTTP requests integration; and Go 1.23 toggling telemetry for data collection—used for diagnostics, error reporting, and performance monitoring.<hr />- Error reporting system by the Go team reports crashes and bugs, optional enabling policies, with privacy considerations (local mode or disactivation).<hr />- Summarization of last month’s system performance and error logs, including improvements with Wind system and pending files.<hr />- Adoption of cutting-edge AI tools: CR 3.5, Sonnet, and integration of artifact handling, code generation, cost estimation, and mini-app creation within chat interfaces.<hr />- AI automation in upgrade processes, cost savings, and schema validation for structured outputs (e.g., link scanning with predefined schemas).<hr />- Fine-tuning models (DVT4) on personal datasets, supporting image processing and artifact visualization.<hr />- UI generation tools like V0 built with Svelte and TailwindCSS, facilitating rapid app prototyping, competing with Material UI or Ant Design.<hr />- Trend: deeper AI integration in large companies—Apple, Amazon, Google—embedding AI directly into systems and services.<hr />- AI service costs: from $15 per user, with prices decreasing over time as token limits increase, replacing traditional methods like RNN.<hr />- Competitor systems (TimingMind) accelerate enterprise AI adoption, aiming for comprehensive automation.<hr />- Google’s AI customer support exemplifies advanced natural interaction quality.<hr />- Strategies involve building scalable agents to automate reporting, knowledge extraction, and project management cycles.<hr />- Development of an AI-driven workflow to replace manual commentary, fetching, summarizing, and formatting links, using system prompts with tailored tone (e.g., David Ruby style).<hr />- Use of tools like GReader to retrieve info, then AI to generate structured Markdown articles with notes, code snippets, and insights, facilitating ongoing updates.<hr />- Iterative prompt refinements to emulate specific voices, optimize language, and address copyright filters, aiming for 70-90% style fidelity.<hr />- Automated scanning of latest articles, market trends, and technical updates via API connections, reducing human editing.<hr />- Deployment of chat-based agents maintains full context and ensures output alignment with style and content goals.<hr />- Long-term vision: full automation of weekly reports, project updates, and technical summaries through intelligent agents working from integrated data sources (Discord, JIRA, Notion, Slack).<hr />- Emphasize the importance of detailed prompt design: input describes data/resources, output specifies desired format/purpose, goal is consistent, high-fidelity style replication.<hr />- Training and customizing models (GPT-4, CL) to handle mathematical, technical, and schema-dependent content, with support for visual and code artifacts.<hr />- As AI tools become more embedded and affordable, organizations can transition from manual workflows to scalable, cost-effective automation.<hr />- Building and maintaining tailored agent ecosystems now offers competitive advantage, reducing manual labor and accelerating software development cycles.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19975},"category":"updates > OGIF"},"1007":{"file_path":"updates/OGIF/37-20241227.md","title":"OGIF Office Hours #37 - AI Fine-Tuning, Data Archiving, and Datalake Scaling with Notion","description":"In OGIF 37, our team dives into AI fine-tuning with an Open AI demo, data archiving for high-traffic apps, and datalake scaling via Notion’s use case. Join us for a session packed with practical insights and collaborative Q&A to boost our technical skills.","spr_content":"- LLMs embed latent knowledge, abilities, and associations; activation through priming words.  <hr />- Neural networks store knowledge via adaptable weights; knowledge expansion via retraining or fine-tuning.  <hr />- Fine-tuning updates weights for domain-specific knowledge; retraining rebuilds the whole model with new data.  <hr />- Fine-tuning involves retraining on a clean, domain-specific dataset; updates weights to embed new info.  <hr />- Workflow: start with a base model, fine-tune with new dataset, supervise, induce supervised fine-tuning.  <hr />- Human feedback cycle: collect responses, evaluate, retrain with reinforcement learning for model improvement.  <hr />- Catastrophic forgetting: retraining with new data can degrade old knowledge; mitigated by PEFT methods like LoRA—freeze some layers, update others.  <hr />- Differences: retraining depends on ongoing data collection; fine-tuning modifies model knowledge directly, enhances specificity.  <hr />- Fine-tuning upgrades model \"brain\" for specific topics; retraining provides a broader knowledge base.  <hr />- Example: fine-tuning doctor notes learning captures abbreviations, handwriting for precise answers; retraining finds relevant data but lacks deep understanding.  <hr />- Token consumption: fine-tuning saves tokens; retraining requires extensive prompts plus retraining data, token-intensive in long chats.  <hr />- Demo: fine-tuning Duty 40 Mini dataset (~4800 tokens), uploading, job creation, status tracking, confirmation of success.  <hr />- Commercial use: OpenAI offers fine-tuning as a service; self-hosting requires custom infrastructure, more resource-demanding.  <hr />- Reinforcement feedback cycles: iterative fine-tuning using human ratings and reward models to optimize model performance over time.  <hr />- Catastrophic forgetting: updating weights may diminish old knowledge; PEFT techniques help preserve it.  <hr />- Fine-tuning utility: when LLM needs high accuracy on specific topics or specialized tasks—medical notes, technical jargon, domain-specific nuances.  <hr />- Retraining preferable: when broad, updated, less resource-intensive knowledge base suffices, or model generalization is prioritized.  <hr />- Customization & learning style: fine-tuning embeds knowledge directly; retraining relies on reference data retrieval during inference.  <hr />- Costs: retraining involves frequent data updates; fine-tuning applies to static datasets, reduces ongoing token and resource use.  <hr />- Data handling: in high-traffic apps (e.g., stock trading), archiving long-term, infrequently accessed data reduces query load and costs.  <hr />- Data archiving: store metadata, encode data, checksum to ensure integrity; use cloud storage tiers (hot/warm/cold) for cost-efficient long-term storage.  <hr />- Archiving workflow: identify rarely accessed data, package, move to cheaper storage, enable retrieval without impacting live systems.  <hr />- Management: automate policies, monitor data integrity, schedule data movement, handle large, incrementally growing datasets.  <hr />- Data lifecycle: raw data ingestion via CDC, processing with tools like Hudi into S3, enabling scalable data reuse and recovery.  <hr />- Datalake vs data warehouse: lakes store raw, unstructured/semi-structured data; warehouses store structured, cleaned data; processing differs.  <hr />- Deployment patterns: sharding, horizontal scaling, multi-instance setups to handle growing data in systems like Notion.  <hr />- Evolution of data architecture: from 1980s databases, through MapReduce, to modern cloud lakes and datamarts, addressing big data challenges.  <hr />- Data management strategies: chunking, tiering (hot/warm/cold), compression, and selective retention optimize query performance and cost.  <hr />- External data integration: capture data changes via CDC, stream to Kafka, process with Hudi/S3, enable large-scale, decoupled data workflows.  <hr />- Choice considerations: resource efficiency, accuracy needs, specific domain tasks, and infrastructure capabilities guide between retraining and fine-tuning.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20086},"category":"updates > OGIF"},"1008":{"file_path":"updates/OGIF/39-20250207.md","title":"OGIF Office Hours #39 - Frontend updates, Database scaling, AI workflow, and Macro insights","description":"In OGIF 39, the team explored React 19 and Deno Deploy updates, database scaling with CI and migrations, Tom’s AI-driven dev workflow, and macro insights on protectionism and globalization trends.","spr_content":"- LLMs embed and correlate knowledge, abilities, and concepts within latent space.  <hr />- Proper priming words activate specific internal states in LLMs.  <hr />- SPR distills complex input into associations, assertions, and metaphors with succinct wording.  <hr />- LLMs interpret and organize information by using associative cues, resembling human priming.  <hr />- Efficient SPR captures the core concepts and relationships, creating versatile activation patterns.  <hr />- Language serves as a tool to invoke latent content and abilities in models for reasoning, planning, and development.  <hr />- Structured distilled lists optimize complex information for future reasoning and model priming.  <hr />- SPR approach emphasizes minimal, precise prompts to activate diverse model responses.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20131},"category":"updates > OGIF"},"1009":{"file_path":"updates/OGIF/27-20241011.md","title":"OGIF Office Hours #27 - Go Weekly, Frontend Report Sep, UX Guide to Prompt with AI, Computing the Union of Two Finite Automata","description":"In OGIF office hour 27, covering presentations on UX Guide to Prompt with AI, computing the union of finite automata, and other topics including Go Weekly and Frontend Report for September.","spr_content":"- LLMs embed latent knowledge and abilities; activated through associative priming via words.<hr />- Effective prompts prime internal states similar to human cues; utilize associations for sophisticated responses.<hr />- Design prompts as distilled concepts: succinct assertions, analogies, metaphors, complete sentences.<hr />- Key prompts structure: Role, Action, Context, Expectation (\"Race\") enables precise, goal-oriented interaction.<hr />- \"Race\" enhances UX by clarifying AI purpose, roles, and environment; aids UX beyond speed/accuracy.<hr />- In prompt engineering, rephrase context to maintain coherence (\"Context Through Rephrasing\").<hr />- Implicit referencing: rely on assumed context or prior info for seamless communication.<hr />- Continuous conversation chaining: questions linked naturally (\"Continue Conversation\").<hr />- \"AI Racing and Scoring\": provide multiple contextual options, improve flexibility, enable learning.<hr />- \"System Prompting\": guide AI behavior systematically to serve specific user/system goals.<hr />- UX design framework for AI tools: focus on interaction quality, engagement, not just metrics.<hr />- \"Race\" structure (Role, Action, Context, Expectation) as a standard for prompt clarity.<hr />- Build prompts with explicit Role, Action, and context alignment; standardize input/output expectations.<hr />- For app development, integrate \"Race\" into design, clarifying AI's expected behavior.<hr />- Automata applications: input validation (regex), event-driven systems, button-state filtering.<hr />- Finite automaton (FA): models states and transitions; used in pattern matching, event processing.<hr />- DFA/NFA distinctions: determinism vs. nondeterminism; similar expressive power, different representations.<hr />- Finite automata union: combine states and transitions from two automata; optimize by skipping redundant states.<hr />- Practical union: check if states lead to transitions; avoid exhaustive combinatorial state generation.<hr />- Automata states often represented as characters in UTF-8 (244 bits); transitions via character input.<hr />- Efficient automata merge: recursive, selective traversal; avoid full Cartesian product.<hr />- Automata in large systems (e.g., Amazon): millions of states; optimized merging crucial.<hr />- Mathematical automata: start/end states, transitions, inputs, accept states define language recognition.<hr />- Automata types: simple, unidirectional, no backtracking; handling morning routines or shopping states.<hr />- Implement union by incremental, pairwise merging; construct combined states (e.g., Ax-Bx).<hr />- Code logic: verify transitions for input characters; skip non-matching branches.<hr />- State combination: merge states when both automata move to final states; recursive union construction.<hr />- Discrete input symbols: characters, typically ASCII/UTF-8; standard for event inputs, regex.<hr />- Embedding files with Go: static binary including external resources (images, HTML); size considerations.<hr />- Use `//go:embed` directive; embed directories or files; access within binary via variables.<hr />- Reflection: convert interface{} to reflect.Value and vice versa; controlled via exported (capitalized) fields.<hr />- Reflection risks: panic if misused; avoid unless necessary; prefer explicit code.<hr />- Advanced reflection: modify settable, exported values; avoid overuse.<hr />- Concurrent maps: sync.Map vs. normal map with mutex; depends on use case.<hr />- Modeling logic from math to code: essential for automata union and complex condition handling.<hr />- Automata in industrial systems: logic modeling before implementation; ensure comprehensive case coverage.<hr />- Combining automata: adapting for multi-system, multi-condition scenarios; recursive, condition-based merging.<hr />- Market trend: shift toward engineer-driven logic modeling; focus on systems like finance, formal methods.<hr />- Emphasis on formal logic in system design improves maintainability, scalability.<hr />- Future focus: enhance math, logic content; compare old and new concepts; build on formal understanding.<hr />- Tools highlight: new libraries (e.g., WebUI), math-driven automata formulas for union, optimize large-scale automata handling.<hr />- Trend observation: move toward finance domain; leverage a strong mathematical/logical foundation.<hr />- Recognize importance of modeling for system conditions: login multi-factor, complex rule combinations.<hr />- Avoid messy, hard-to-maintain if-else code; implement with formal automata/logic for clarity and efficiency.<hr />- Upcoming content: deeper understanding of automata union, embedded file handling, reflective programming, and scaling logic applications.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20010},"category":"updates > OGIF"},"1010":{"file_path":"updates/OGIF/41-20250314.md","title":"OGIF Office Hours #41 - ICY-BTC Swap, GitHub Bot, MCP-DB, Pocket Turing, Recapable, and Arbitrage Strategy","description":"In OGIF 41, the team covered key updates on the ICY-BTC swap, GitHub bot automation, MCP-DB system for agent workflows, and progress on the Pocket Turning and Recapable projects and we also shared insights into funding rate arbitrage strategies.","spr_content":"- **Swap ICY-BTC:** Huy provided updates on the swap mechanism, emphasizing the dynamic and minting-based price control, not an AMM. The system stabilizes ICY price amidst large trades, relying on Bitcoin's value and pool ratios.  <hr />- **ICY valuation:** Currently pegged to USDC at 1.5 USD per ICY, with fluctuations driven by Bitcoin price and pool adjustments. Price control via minting and BTC pool size ensures stability.  <hr />- **Pool dynamics:** Monthly BTC injections raise ICY price slightly; minting increases ICY supply, lowering market price; external Bitcoin value impacts USD value but not ICY/BTC ratio.  <hr />- **Swap Limitations:** Only ICY to BTC swaps are supported; reverse swaps are disabled; minimum ICY for swap is above 20 ICY due to gas costs; account registration needed for transactions.  <hr />- **Circulation audit:** Review of ICY balance in team wallets, including Bảo’s account, to ensure circulating supply accuracy; current snapshots and holder lists are accessible.  <hr />- **Technical mechanism:** Price calculation depends on pool ratios (X/Y for ICY in BTC); liquidity adjustments affect price marginally; large BTC deposits or ICY minting influence market price temporarily.  <hr />- **Operational process:** The system fetches data via sockets, computes deviations, and automates swap execution; designed for stability, but still in testing with occasional minor bugs.  <hr />- **Market impact:** Bitcoin’s external price shifts influence USD valuation of ICY; internal minting/reserves stabilize in-market ICY price; external macro factors also affect overall market sentiment.  <hr />- **Governance and upgrade:** Focus on testing, fixing bugs, improving UI and user experience; ongoing review of code, calculations, and system stability; future enhancements include reverse swaps and finer control.  <hr />- **Team organization:** Internal workflows involve reviewing, testing, and iterating on tokenomics, swap mechanics, and system stability; team members gradually engage in project contributions and knowledge sharing.  <hr />- **Memo UI updates:** Reoriented to focus solely on project-based knowledge, excluding general info; data is stored on decentral platforms like Arweave, using direct submissions instead of Obsidian.  <hr />- **Data management:** Internal data tagged by source (GitHub, Discord); stored in blockchain-backed repositories; knowledge transfer emphasizes project insights, relevant learnings, and internal documentation.  <hr />- **Tools and automation:** Development of GitHub bots, agentic systems, and reminder tools for PRs and code reviews; modular workflows built with scalability in mind, leveraging APIs and custom protocols.  <hr />- **Workflow orchestration:** Supervisor-like entity with reasoning capabilities; separates from independent agents (Smithery) to enable dynamic, automated task sequencing; aims to enhance system flexibility.  <hr />- **Data infrastructure:** Legacy databases supplemented with Landing Zone for raw data collection; scalable architecture supports rapid transition from raw data to structured, analyzed formats (TSDB); prepared for real-time analytics.  <hr />- **Landing Zone plans:** Central hub for raw data uploads (files, events); automated conversion to TSDB; supports large data dumps and external integrations via APIs and crawlers; facilitates use-case driven data management.  <hr />- **Knowledge hub:** Core repository for project insights, cleaned, standardized, and accessible for retraining, suggestions, and sharing across team and community; supports future AI model training and collaborative discovery.  <hr />- **Data flow and protocols:** Unified API gateway enables cross-platform integrations; emphasizes modular development, enabling rapid deployment and reusability; adapts to external systems like GCS, S3, and external APIs for flexible data handling.  <hr />- **Security and access:** Implementing authentication and authorization systems; internal usage with private keys; plans to mature security protocols for wider deployment.  <hr />- **Development focus:** Continuous building of workflows, tools, and systems for automation; strengthening knowledge transfer through shadowing, documentation, and internal training; increasing operational efficiency and scalability.  <hr />- **Future outlook:** Systems aim to become essential project requirements; adopting a top-down use case approach for data storage; expanding marketplace for tools (e.g., Dify); aligning with industry trends in real-time analytics, AI, and automation.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20167},"category":"updates > OGIF"},"1011":{"file_path":"updates/OGIF/7-20240517.md","title":"OGIF Office Hours #7 - Echelon EXPO, Programming patterns, and Moonlighting","description":"In our seventh community discussion, we'll discuss about Echelon EXPO; builder, singleton, prototype patterns. By sharing weekly topics chosen through tags, we foster a collaborative learning environment for our community to grow.","spr_content":"- Programming patterns include creational, structural, and behavioral types, with focus on singleton, prototype, builder, factory, and abstract factory.<hr />- Factory button enables object creation with complexity but struggles with small field initialization; build button offers field customization.<hr />- Singleton pattern ensures a single instance but risks race conditions causing duplication; usage limited due to responsibility conflicts.<hr />- Race conditions in singleton lead to multiple initializations, compromising data consistency; locking mechanisms can mitigate this.<hr />- Prototype pattern involves cloning objects at runtime, utilizing proxy patterns to enhance reusability.<hr />- Inventory management can employ interfaces like Counter, with per-product counters for tracking stock.<hr />- Different creation patterns exhibit unique traits: builders for customization, abstract factory for specialized object creation, prototypes for cloning, factories for variation.<hr />- Builder pattern facilitates construction of objects with specific attributes; supports adding functionalities like logging or validation.<hr />- JavaScript builder pattern has limitations, often underused; abstract factory less prevalent than builder for object variation.<hr />- Market experience is valued more than the product by investors; enterprise AI faces challenges such as security, privacy, cost, and ethics concerns.<hr />- Expanding into new markets involves understanding local needs, handling complex data, and high-level programming skills.<hr />- Genuine storytelling enhances professional engagement and trust-building.<hr />- Echelon EXPO is a key networking event connecting startups, investors, and government, facilitating regional investments.<hr />- Southeast Asian markets, e.g., Philippines and Indonesia, show growth potential; local startups develop niche solutions like trucking cameras.<hr />- AI adoption in enterprises adopts caution due to ethical risks, security, and cost; internal development vs. leveraging government models debated.<hr />- Ethical issues arise around AI-generated content misuse; high operational costs and slow technology adoption hinder rapid innovation.<hr />- Knowledge sharing is encouraged via rewards and structured testing; teams document and update technical insights.<hr />- Future sessions will explore AI, architecture, product design, open-source analysis, with focus on technical proficiency and strategic growth.<hr />- Offline meetups planned to foster deeper collaboration, emphasizing active participation and exchange of technical ideas.<hr />- Continuous learning is critical; high-level programming skills favored for market competitiveness.<hr />- Adaptability and keen observation help navigate emerging technology and business opportunities.<hr />- Discussions incorporate feedback from recent conferences and regional strategies, emphasizing innovative market entry.<hr />- Team responsibilities split across development, research, and outreach; upcoming activities include design research and market analysis.<hr />- Critical themes include efficient object creation, preventing race conditions, cloning, and pattern selection in software systems.<hr />- Emotional storytelling, authentic communication, and strategic networking are vital for professional growth.<hr />- Discussions underscore balancing technical mastery with market insight, ethical considerations, and continuous adaptation to change.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":19899},"category":"updates > OGIF"},"1012":{"file_path":"updates/OGIF/38-20250117.md","title":"OGIF Office Hours #38 - Erlang automata p2, market report, DOTY, Year end celebrations ","description":"In OGIF 38, the team explored Erlang automata, AI and fintech market shifts in Southeast Asia, year-end reflections with team awards, and a new hybrid work direction for 2025.","spr_content":"- **Erlang automata part 2**: Minh Lưu explained practical differences between erlgen gen_statem and gen_server, using a TCP-Redis connection module in Elixir; emphasizes state management, transition logic, and persistence.  <hr />- **Behavior and state management**: Erlang’s built-in gen_statem offers structured state control, with features like automatic event insertion, stage transitions, and timeouts; critical for persistent connections like TCP.  <hr />- **Comparison with gen_server**: gen_server suffices for simple cases; gen_statem is for advanced scenarios involving multiple stages, insertions, triggers, and long-lived states.  <hr />- **Implementation pattern**: use callback modes—state functions per stage or a handle_event function—manage transitions via return atoms (like next_stage).  <hr />- **Code example**: Elixir module for TCP Redis connector, with states disconnect and connect; manages connection retries, request handling, and state transitions.  <hr />- **Significance of Erlang’s built-in state machine**: It enforces a shared mental model, reduces implicit code, and fosters maintainability, especially for complex, long-lived processes like TCP connections.  <hr />- **App in projects**: used in project architecture (e.g., Yolo, Ascenda) for handling multi-stage processes; supports flow control, timeouts, and resilience.  <hr />- **Comparison to other libs**: Unlike other languages, Erlang has native, optimized, and unified state management tools integrated, making it especially suitable for building reliable distributed systems.  <hr />- **Elixir’s approach**: calls Erlang’s gen_statem directly; no native high-level library; code offers more readability, but underlying complexity remains.  <hr />- **Implication for team and project**: Promotes unification of developer mental models, clearer state transition logic, repeatable patterns for complex workflows like WebSocket or protocol management.  <hr />- **Future directions**: recommend exploring open-source complex state management projects; aim for more realistic, multi-stage, dynamic systems; utilize larger files for clarity instead of fragmented functions.  <hr />- **Web3 & AI market insights**: Y Combinator, a16z pivot towards fintech, stablecoins; Southeast Asia trends favor challenger banks, neobanks, embedded AI systems for DeFi and crypto automation.  <hr />- **Regional market dynamics**: Philippines attracting more IT and financial investments due to lower costs, larger population; Vietnam’s funding down 80%, shifting focus away from general enterprise toward finance/blockchain models.  <hr />- **Innovation and market pulse**: focus on where new business models (stablecoins, AI agents, DeFi) emerge; identify “where’s the money?” and “what’s building now?” to align engineering efforts.  <hr />- **Strategic team outlook**: post-Tết operational shift to in-office, 3 days/week at hubs (SG, Hanoi, Danang); reduce remote default; foster dense info exchanges; emphasize physical presence for agility amid market shifts.  <hr />- **Team policies**: no more remote default for Saigon; encourage collaboration, active online engagement; one-month trial before full implementation; adapt to global layoffs and market skepticism.  <hr />- **Market impact and team adjustments**: market turbulence reduces new hiring; restructured staffing plans; focus on high-impact projects, community engagement, and recognition awards—Developer of the Year, team, community; reinforce shared core values: mastery, autonomy, meaning.  <hr />- **Year-end key takeaways**: market shift from enterprise to finance+blockchain; AI’s relevance but lower immediate enterprise applications; operational realignment towards innovation; strategic focus on identifying and supporting emerging trends.","tags":"discord office-hours ogif","authors":"innno_","date":{"days":20107},"category":"updates > OGIF"},"1013":{"file_path":"updates/forward/market-commentary/event-takeaways-2nd.md","title":"Talks and Takeaways from the Scene: Part 2","description":"Talks and Takeaways from the Scene Part 2","spr_content":"- LLMs embed knowledge, abilities, and concepts in latent space, activatable via priming words.  <hr />- Effective priming primes associative patterns, eliciting latent capabilities.  <hr />- LLM content can be distilled into concise assertions, analogies, and metaphors to map conceptual domains.  <hr />- Web3 events in Vietnam: energetic, future-focused crypto discussions, community-driven energy.  <hr />- Berachain’s strategic focus: expansion in Asia—Malaysia, Indonesia, Hong Kong, Vietnam—targeting large online populations (~2.93B internet users in 2024).  <hr />- Challenges: scarcity of local Web3 marketing experts and developers—23,000 Web3 devs globally vs. 26 million Web2 devs; talent shortage especially in Southeast Asia.  <hr />- Industry-wide: talent gap, rapid tech evolution outpacing skill development, token cycle volatility affecting community engagement.  <hr />- Berachain’s community approach: memes, “beras” identity, friendly culture, humorous accounts, fostering tech and local culture bonding.  <hr />- Incentive programs: airdrops, NFT whitelists, rewards for engagement, community building as resilience against market dips.  <hr />- Ethereum’s ethos: decentralized code-sharing, tech freedom; current sentiment: low, lacking sustainable growth strategies.  <hr />- Babylon’s innovation: Bitcoin yield protocols that generate altcoin rewards without transferring Bitcoin, leveraging staking and new blockchain development.  <hr />- Market context: Bitcoin’s $1.6T+ cap underpins cautious adoption; use-case gap identified—most Bitcoin holders are passive; technological security concerns remain.  <hr />- Rewards in Babylon: potential value loss of earned altcoins, unproven security, technical complexity deterring average users.  <hr />- Audience engagement: technical jargon can alienate; early interest wanes as audience focuses on portfolio gains.  <hr />- Event insights: potentials in ecosystem but face challenges—talent scarcity, market volatility, need for community-centric growth models.  <hr />- Berachain’s community-first strategy: long-term focus, building a loyal vibe over short-term token surges, fostering sustained engagement.  <hr />- Babylon’s approach: innovative but risky; must address security and user trust to succeed.  <hr />- Asia’s Web3 potential: high, with the right cultural and strategic adaptations—long-term community building over quick profits.  <hr />- Overall: success depends on clever moves, strong community culture, and addressing technical/talent gaps for sustainable growth.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20172},"category":"updates > forward > market-commentary"},"1014":{"file_path":"updates/forward/market-commentary/event-takeaways-1st.md","title":"Talks and Takeaways from the Scene: Part 1","description":"Talks and Takeaways from the Scene Part 1","spr_content":"- Web3 in Vietnam: quieter, more formal; contrast with past hype-driven chaos; rule-breaking ethos shifting.<hr />- Builders operate independently, outside events; innovation persists in shadows.<hr />- Investor enthusiasm: government-backed CEXes seen as secure, lucrative; big groups entering crypto.<hr />- Vietnam’s crypto inflow: ~$100B via CEXes; retail and institutional interest high.<hr />- Government motives: regulatory safety, economic growth, tech innovation, tax revenue, global standing.<hr />- Future plans: crypto trading platforms test-run in top cities; regulatory oversight aims for stability and growth.<hr />- Goals: control chaos, foster jobs, tech image, revenue, international prestige.<hr />- In Ho Chi Minh: AI startups showcase practical tools; significant advances, market shifting.<hr />- Notable startups: Costella (emotion detection), Asserto (prompt testing platform), Nex AI (automated data entry).<hr />- AI adoption in Vietnam: 80% of businesses, high regional engagement, driven by NVIDIA’s new R&D center.<hr />- AI challenges: some solutions trivial, hype over genuine impact; crowd energy remains high.<hr />- Overall: Vietnam’s tech scene vibrant, transforming fast—Web3 moving towards bigger waves, AI booming with real innovation.<hr />- Sentiment: optimistic, energetic, curious about future growth.","tags":"consulting market-report tech-report","authors":"minh","date":{"days":20160},"category":"updates > forward > market-commentary"},"1015":{"file_path":"updates/forward/ai-digest/ai-digest-01.md","title":"AI digest #1 Aider reasoning, OpenAI Realtime API, Cline - pre Claude-dev ","description":"Stay updated on the latest in AI tools for developers with this week’s digest, featuring Cline's v2.0.0 update, OpenAI’s Realtime API, and Aider’s Architect/Editor split for enhanced coding workflows.","spr_content":"- Recent AI updates focus on simplifying development with agentic tools.  <hr />- Cline (formerly Claude Dev) v2.0.0 enhances speed, real-time responses, and workflow efficiency.  <hr />- Cline employs XML tags for tool interactions, reducing requests by 40%, and integrates OpenRouter models under Apache 2.0 license.  <hr />- OpenAI’s Realtime API enables live function chaining and voice coding, supporting Ada, with file management and complex operation handling.  <hr />- Realtime API introduces trade-offs: faster, accurate, but with inherent risks; beneficial for maintaining competitive edge.  <hr />- Aider’s Architect/Editor approach separates reasoning from implementation, using strong reasoning models (e.g., o1-preview) for solution design and faster models (e.g., GPT-4o) for code edits.  <hr />- This separation improves speed, complexity handling, and interactivity in pair programming.  <hr />- Combining Architect and Editor models drives performance to SOTA scores (~85%), with advanced pairings like Sonnet or GPT-4o surpassing traditional single models.  <hr />- The methodology mirrors associative priming: priming models with specific roles activates latent abilities for optimized task execution.","tags":"aider cline llm realtime api tooling","authors":"datnguyennnx","date":{"days":20021},"category":"updates > forward > ai-digest"},"1016":{"file_path":"updates/forward/ai-digest/ai-digest-02.md","title":"AI digest #2 New command Aider, OpenHands, Qwen2.5 Coder 32B, Predicted Output","description":"Stay updated on the latest in AI tools for developers with this week’s digest, new command Aider, OpenHands, Qwen2.5 Coder 32B","spr_content":"- Aider v0.63.0 supports Qwen 2.5 Coder 32B, a high-performance open-source coding model rivaling GPT-4o.<hr />- The `/web` command adds URLs to chat as documentation context without triggering LLM responses, simplifying context input.<hr />- Qwen 2.5 Coder 32B, available in six sizes (0.5B to 32B), excels in code generation, repair, reasoning, and multi-language tasks.<hr />- Models perform well on benchmarks like EvalPlus, BigCodeBench, McEval, and MdEval, supporting over 40 languages.<hr />- OpenHands' All Hands Online (Beta) offers instant setup with a new hosted platform, a revamped UI, and integrated GitHub workflows.<hr />- OpenHands' GitHub features include repo hookup, cloning, pushing changes, streamlining software development workflows.<hr />- Predicted outputs facilitate minor code edits by providing a known base, enabling the model to generate only the necessary modifications.<hr />- In code editing, predicted outputs accelerate response generation, reducing computational load, exemplified by adding date logging to a function.<hr />- OpenAI’s predicted outputs leverage existing code structure, useful for refactoring, minor updates, and iterative development.<hr />- The overall trend emphasizes open-source, fast deployment, enhanced integration, and efficiency in coding and documentation tasks.","tags":"aider llm openhand predicted output qwen2.5 tooling","authors":"datnguyennnx","date":{"days":20042},"category":"updates > forward > ai-digest"},"1017":{"file_path":"updates/forward/ai Use cases/yelp.md","title":"Yelp use cases","description":"Yelp already had a machine learning platform before the big push for large language models (LLMs). Now, they’re using LLMs to level up their search and recommendation systems, making it easier for moderators and businesses to track down users. Let’s dive into how Yelp is making it work.","spr_content":"- Yelp is a platform for discovering local businesses through reviews, ratings, and recommendations, enhanced by AI and LLM integration.  <hr />- AI-powered moderation blocks over 23,600 inappropriate reviews in 2023, utilizing LLMs to detect hate speech, lewd content, threats, and harassment.  <hr />- Yelp trains models on curated datasets with sentence embeddings, scoring, sampling, and zero/few-shot techniques to identify harmful content effectively.  <hr />- LLMs enable proactive content filtering, enhancing user trust and safety.  <hr />- Yelp employs the CLIP model to generate semantic image embeddings, improving photo classification and understanding.  <hr />- Photo and business embeddings, derived from CLIP and review data, facilitate better recommendations, clustering, and search.  <hr />- There is misclassification in image categories (Interior, Exterior, Food) due to model limitations, highlighting ongoing refinement.  <hr />- Yelp uses embeddings for review highlights and tags, improving search relevance and user engagement with features like \"Surprise Me\" and clickable tags.  <hr />- Review features include adding videos, reactions, and topics, making reviews more dynamic and organized.  <hr />- Yelp Assistant, powered by LLMs, helps users find service providers via conversational queries, asking follow-up questions for refined matching.  <hr />- The Yelp Fusion AI API allows third-party apps to access Yelp’s data for natural language search and recommendations.  <hr />- Overall, AI and LLMs enhance search intelligence, content moderation, user interaction, and data accessibility, transforming the platform for faster, personalized experiences.","tags":"llm use cases yelp","authors":"datnguyennnx","date":{"days":20014},"category":"updates > forward > ai Use cases"},"1018":{"file_path":"updates/forward/ai Use cases/salesforce.md","title":"Salesforce use cases","description":"Salesforce is taking AI to the next level with large language models that make customer service smoother, sales more strategic, and insights faster. By automating routine tasks, these tools free up teams to focus on real connections with customers. The result? Happier customers, smarter sales, and big wins for businesses.","spr_content":"- Salesforce Einstein GPT functions as an interface between core CRM solutions and various large language models (LLMs).  <hr />- It provides natural language insights, automation, summaries, and content creation within Salesforce's platform.  <hr />- The platform supports a model-agnostic approach, enabling customization for industry-specific needs.  <hr />- Multiple LLM providers—OpenAI, Cohere, Anthropic, Google AI—are integrable via Einstein GPT, allowing model selection based on performance or cost.  <hr />- A specialized “Apex models” layer mediates Salesforce applications with third-party or in-house LLMs, filtering data and enhancing generative outcomes.  <hr />- The “Einstein trust layer” ensures data security and user control over data processing and storage, safeguarding customer privacy amid AI use.  <hr />- External AI models (Google Vertex AI, Amazon SageMaker, Claude, etc.) are compatible, often trained on extensive data stored in data lakes such as Snowflake, Databricks, BigQuery, Redshift.  <hr />- Data lakes enable data harmonization for generative AI, compatible with Salesforce Data Cloud or external lakes for context-rich responses.  <hr />- Data ingestion methods include scheduled data transfer and **zero-copy access**—virtualized, real-time querying without physical data movement, facilitating data federation.  <hr />- MuleSoft APIs enable tailored, real-time data pipelines and system integrations with external platforms like Snowflake.  <hr />- Salesforce employs the **Atlas reasoning engine** and **retrieval augmented generation (RAG)** to fetch relevant external data prior to generating responses.  <hr />- RAG’s search retriever uses indexes and filters to retrieve pertinent information from connected data sources dynamically.  <hr />- LLMs are integrated into CRM workflows for tasks such as:  <hr />  - Conversational AI and agent assistance—powering chatbots for customer inquiry response and suggested replies.  <hr />  - Conversation summarization—automatically extracting key points from interactions.  <hr />  - Automating data entry and updates—converting text-based input into accurate CRM records.  <hr />  - Content generation—drafting emails, marketing content, and knowledge articles contextualized by CRM data.  <hr />  - Sentiment analysis and predictive insights—assessing tone, customer satisfaction, churn risk, and intent from interactions.  <hr />- Salesforce benchmarks LLMs through task-specific metrics (generation quality, response accuracy, data extraction), multi-phase validation (training, validation, live testing), and industry-specific scenarios.  <hr />- Performance metrics include accuracy, fluency, latency, and user (agent and customer) satisfaction feedback.  <hr />- Use cases evaluated encompass B2B sales insights, service agent efficiency—reducing handling time—and marketing engagement improvements.  <hr />- Results show approximately 63% average performance improvement over rule-based systems, with reductions in resolution time (20-30%), response errors (~25%), and engagement (+15%).  <hr />- Continuous feedback mechanisms from live deployment are integral for iterative model refinement and performance enhancement.","tags":"llm salesforce use cases","authors":"datnguyennnx","date":{"days":20028},"category":"updates > forward > ai Use cases"},"1019":{"file_path":"careers/life/2022-09-21-7-my-anh.md","title":"#7 My Anh on Data to Backend Transition","description":"My Anh shares her journey from Data Science to Backend Engineering through the Dwarves Apprenticeship Program, highlighting how supportive mentorship and challenging opportunities helped her grow in unexpected ways","spr_content":"- Former Data Analyst transitioned to Backend Engineer via Dwarves Apprenticeship Program.<hr />- Experience emphasized supportive mentorship and challenging projects.<hr />- Program exceeded expectations, fostering personal growth and skill development.<hr />- Initial goal: enhance software development skills; unexpected opportunities emerged.<hr />- Collaborated with peers, particularly Huy Nguyen and Khoi Ngo, on a web3 project.<hr />- Encountered new programming techniques, source code comprehension, and problem-solving.<hr />- Transition involved overcoming challenges in software programming and Golang.<hr />- Interaction with Backend Engineers enhanced understanding of database solutions, algorithms, and logic design.<hr />- Experience characterized by peer recognition, trust, and delegated responsibility.<hr />- Focused learning on applicable tools: Visual Studio Code, Github, and backend/data subjects.<hr />- Participation in Learning & Development activities: Radio Talk and university-hosted tech training.<hr />- Gained foundational knowledge in software principles, Golang, blockchain, and web3.<hr />- Emphasis on self-management and continual skill upgrade as an engineer.<hr />- Ongoing journey to strengthen software engineering skills; interest in Backend and Data Science.<hr />- Social integration within the team is developing; sense of belonging emerging.","tags":"life-at-dwarves, apprenticeship, backend-engineer","authors":"","date":{"days":19256},"category":"careers > life"},"1020":{"file_path":"careers/life/2023-10-09-15-khoi-ngo.md","title":"#15 Khoi Ngo on mentorship culture","description":"Khoi reflects on his growth as a backend engineer through challenging times and how Dwarves' supportive culture transformed his outlook on helping others","spr_content":"- Transition from intense workload to personal growth; Backend Engineer’s journey.  <hr />- Dwarves’ mentoring culture impact: enhances technical skills, shifts perspective on collaboration.  <hr />- Internship experience: handling multiple projects (WeUp, WeGo, Aharooms); long hours (7 AM to midnight) for three months.  <hr />- Rapid growth in technical skills and problem-solving during high-pressure period.  <hr />- Colleague kindness: supportive environment; notable mentoring from line manager Huy Nguyen and Quang’s collaborative coding assistance.  <hr />- Leadership example: Thanh Pham’s calm feedback in tense client meetings; protects and supports team members.  <hr />- Changed mindset: from introversion and individual focus to readiness to assist new colleagues; influenced by mentoring culture.","tags":"life-at-dwarves, backend-engineer, mentorship","authors":"","date":{"days":19639},"category":"careers > life"},"1021":{"file_path":"careers/life/2023-09-05-11-dinh-nam.md","title":"#11 Dinh Nam on community learning","description":"Dinh Nam reflects on his growth as a frontend engineer at Dwarves, from intensive internship training to participating in and benefiting from community-focused technical courses","spr_content":"- Recent graduate's early career highlighted at Dwarves Foundation.<hr />- Structured mentorship leads to rapid professional growth.<hr />- Strong appreciation for learning opportunities offered to employees and the tech community.<hr />- Internship involved professors teaching fundamentals and practical tech skills.<hr />- Balancing work and late classes established commitment and discipline.<hr />- Close mentorship with Engineering Manager, Thanh, shaped early career.<hr />- Transition from nervousness to confidence through regular updates and check-ins.<hr />- Significant personal and professional growth due to thorough training and guidance.<hr />- Dwarves Foundation actively engages in community-oriented activities.<hr />- Company promotes knowledge sharing, research, and tech blogging.<hr />- Senior members offer free technical courses to the community.<hr />- Successful participation in Golang training leads to team recognition and rewards.<hr />- Pride in accomplishments and contributions to Dwarves and the tech community.<hr />- Sense of identity and belonging as a member of Dwarves Foundation.","tags":"life-at-dwarves, frontend-engineer, community-learning","authors":"","date":{"days":19605},"category":"careers > life"},"1022":{"file_path":"careers/life/2023-10-30-18-tuan-tran.md","title":"#18 Tuan Tran on work culture","description":"Tuan Tran reflects on his experience as a Senior AQA at Dwarves, highlighting the focus on work culture, mentorship opportunities, and knowledge sharing","spr_content":"- Perspective of a Senior Automation QA Engineer at Dwarves.<hr />- Dwarves' culture emphasizes work efficiency and focus.<hr />- Transition from a younger role in a previous firm to being among the oldest at Dwarves.<hr />- Initial mentoring hesitance from team leader, Nhut Huynh, resolved through active support and communication.<hr />- Extensive experience in both manual and automation QA.<hr />- Engages in online teaching with successful mentees currently employed at major corporations.<hr />- Mentorship of Ngan Le in QA automation while managing her workload with manual QA tasks.<hr />- Environment supports 200% work commitment, prioritizing collaboration over personal matters.<hr />- Dwarves promotes technical knowledge sharing through events like Radio Talk and Tech Event.<hr />- Events facilitate learning for Dwarves members and the wider tech community, enhancing company visibility and engagement.","tags":"life-at-dwarves, qa-engineer, mentorship","authors":"","date":{"days":19660},"category":"careers > life"},"1023":{"file_path":"careers/life/2021-03-31-0-tuan-dao.md","title":"#0 Tuan Dao on Learning from Mistakes","description":"Tuan Dao reflects on how embracing failure and working on diverse projects at Dwarves helped him grow from an introverted newcomer to a confident engineer through mentorship and challenging opportunities","spr_content":"- Supportive environment fosters growth.  <hr />- Introversion can be overcome with encouragement.  <hr />- Embracing mistakes is essential for success.  <hr />- Failure is a learning opportunity.  <hr />- Diverse projects encourage skills development.  <hr />- Offshore projects enhance collaboration proficiency despite strict client requirements.  <hr />- In-house tools promote interdisciplinary knowledge and skills updates.  <hr />- Mentorship from senior engineers is pivotal for onboarding.  <hr />- Feedback helps build confidence and integrate into team dynamics.  <hr />- Growth is facilitated by a positive and mentoring workplace culture.  <hr />- Transformation from introversion to teamwork illustrates personal development.  <hr />- Emotional well-being can be impacted by professional support systems.  ","tags":"life-at-dwarves, software-engineer, growth-mindset","authors":"","date":{"days":18717},"category":"careers > life"},"1024":{"file_path":"careers/life/2023-11-13-20-hoai-khang.md","title":"#20 Nguyen Hoai Khang on community experience","description":"Nguyen Hoai Khang shares his experience as a Dwarves community member, participating in their well-organized Frontend Course and appreciating the knowledge shared by the company","spr_content":"- Reflects on journey with Dwarves Foundation.<hr />- Highlighted high-quality Frontend Course.<hr />- Valuable technical knowledge gained.<hr />- Supportive learning environment led to recognition.<hr />- Invited for \"Life at Dwarves\" series, despite not being an employee.<hr />- Active participation in Dwarves Discord community created opportunities.<hr />- Introduction to Dwarves by Thanh Le, tech blogger.<hr />- Applied for a position at Dwarves but was not selected.<hr />- Continued engagement with Dwarves through technical blog posts.<hr />- Prompt registration for Frontend Course 2023 upon announcement.<hr />- Course praised as most well-organized experienced.<hr />- Previous courses (e.g., FrontEnd Master) lacked depth and quality.<hr />- Learned practical tools: a11y-compliant dialogs, Zod forms, React Query.<hr />- Utilized Orval for frontend-backend integration, expanding understanding.<hr />- Managed libraries effectively: React Query, React Hook Form.<hr />- Plans to apply Orval in future pet projects.<hr />- Memorable experience with teammate, Mr. B 1998 (5 years of experience).<hr />- Code review support from Dwarves and Mr. B 1998.<hr />- Final project won first place, resulting in tokens reward.<hr />- Unexpected bonuses improved motivation and excitement.<hr />- Gratitude expressed towards Dwarves for free course provision.<hr />- Hope for future course offerings from Dwarves.","tags":"life-at-dwarves, frontend-engineer, community-member","authors":"","date":{"days":19674},"category":"careers > life"},"1025":{"file_path":"careers/life/2023-06-30-7-khac-vy.md","title":"#7 Khac Vy on learning culture and mentorship","description":"Khac Vy shares his appreciation for Dwarves' learning and sharing culture, mentoring spirit, and the freedom to work remotely with self-management","spr_content":"- Dwarves fosters a unique culture of learning and sharing among software engineers.  <hr />- Transition from introversion to openness; collective knowledge sharing through events (Monday Radio Talk, Friday OGIF).  <hr />- Growth as a universal language; continuous self-improvement personally and professionally.  <hr />- Strong mentorship culture; mentors guide technical skills and professional development.  <hr />- Mentor-student dynamics: emotional productivity vs. disciplined work ethic; guidance in focus and communication.  <hr />- Importance of mentoring for new engineers; helps uncover strengths and weaknesses.  <hr />- Mentors inspire confidence and model exceptional performance to encourage learning.  <hr />- Remote work environment predating the pandemic; emphasis on self-management and accountability.  <hr />- Freedom to manage time and responsibilities; quality over quantity in output.  <hr />- Work-life balance; proactive scheduling, support, recognition, and motivation are key.","tags":"life-at-dwarves, software-engineer, mentorship","authors":"","date":{"days":19538},"category":"careers > life"},"1026":{"file_path":"careers/life/2022-08-11-6-hieu-vu.md","title":"#6 Hieu Vu on golang journey","description":"Hieu Vu shares his journey from a NodeJS developer to becoming a Golang advocate, and how the people and culture at Dwarves influenced his decision to stay despite other opportunities","spr_content":"- Backend Engineer's journey of becoming a Golang enthusiast began in 2017.<hr />- Initial encounter with Golang was a challenging entrance test for a Japanese tech firm; failure sparked interest.<hr />- Previous experience included Frontend development with NodeJS at Citytech.<hr />- Golang's simplicity and efficiency stand out compared to Python and Java.<hr />- Preference for Golang attributed to minimalism and performance optimization.<hr />- Believes in Golang's potential for future development, especially in cloud-native applications.<hr />- Past experience at KMS revealed isolation; strong desire for teamwork emerged.<hr />- Dwarves team embodies excitement, enthusiasm, and supportive culture.<hr />- Valued team members include Hieu Phan (knowledge sharing), Thanh Pham (constructive feedback), Bao (vision), and Minh (project management).<hr />- Turned down a full-time offer from a client for growth opportunities at Dwarves.<hr />- Prefers a collaborative, knowledge-sharing environment over a rigid 9-to-5 job.<hr />- Development of confidence in sharing knowledge after three years at Dwarves.<hr />- Challenging yet rewarding aspect includes supporting and understanding interns' needs.<hr />- Encourages exploration and experimentation in learning programming languages.<hr />- If a language does not bring joy, seek projects for diversified experience instead.","tags":"life-at-dwarves, backend-engineer, golang","authors":"","date":{"days":19215},"category":"careers > life"},"1027":{"file_path":"careers/life/2023-10-13-17-hoang-nguyen.md","title":"#17 Hoang Nguyen on youthful energy","description":"Hoang Nguyen reflects on the vibrant learning culture at Dwarves, where young engineers eagerly explore new technologies and embrace challenges","spr_content":"- Backend Engineer role at Dwarves emphasizes learning and enthusiasm.<hr />- Transition from hardware to software engineering experienced firsthand.<hr />- Collaboration on Aharooms project with mentors Thanh Pham and Hieu Phan.<hr />- Training received in Frontend and Backend development, software deployment, server, and system development.<hr />- Encouragement to innovate and present ideas in response to project requirements.<hr />- Engagement with product rollout and external software teams adds excitement.<hr />- Progression from Aharooms to NFT game projects, currently working on large-scale green energy.<hr />- Dwarves embodies youthful energy, collaboration, and motivation.<hr />- Team culture encourages experimentation without fear of failure.<hr />- Active knowledge sharing through Discord channels (#til, #tech).<hr />- Strong mentorship culture enhances learning; mentors continuously explore new technologies.<hr />- Inclusive environment promotes growth for newbies and veterans alike.<hr />- Pride in affiliation with Dwarves and its dynamic team culture.","tags":"life-at-dwarves, backend-engineer, learning-culture","authors":"","date":{"days":19643},"category":"careers > life"},"1028":{"file_path":"careers/life/2020-05-08-0-thanh-pham.md","title":"#0 Thanh Pham on Design and Engineering","description":"Thanh Pham shares his journey from design to front-end engineering at Dwarves, highlighting how finding alignment between personal and company goals creates an environment where growth is natural","spr_content":"- Thanh Pham: Front-end Engineer, previously focused on Design.<hr />- Transitioned to coding, developed dual expertise in Design and Engineering.<hr />- Joined Dwarves Foundation two years ago, first post-university role.<hr />- Received Hall of Fame recognition for two consecutive years.<hr />- Key traits: enthusiasm, meticulousness, diligence.<hr />- Joined Dwarves for small team dynamics, learning opportunities, and impactful contributions.<hr />- Shift in university focus led him to Front-end, associated with user interface.<hr />- Impressed by Dwarves' early online presence, client engagement.<hr />- Values shared goals and growth opportunities over financial aspects.<hr />- Believes that shared pursuits foster team alignment and continuous learning.<hr />- View: Work is about growth, not merely a paycheck.","tags":"life-at-dwarves, frontend-engineer, design-engineering","authors":"","date":{"days":18390},"category":"careers > life"},"1029":{"file_path":"careers/life/2020-04-10-0-huy-nguyen.md","title":"#0 Huy Nguyen on software engineering values","description":"Huy Nguyen, software engineer, shares his perspective on how software engineering should deliver long-term value beyond programming, and his approach to leading a team despite age differences","spr_content":"- Huy's IT journey emphasizes meaningful work over financial gain.<hr />- Financial motivation is valid; pursuing money can be a solid starting point.<hr />- Encourages juniors to seek deeper, inspiring targets for personal growth.<hr />- Importance of building helpful tools with impact for others.<hr />- Software Engineering extends beyond programming; it entails creating products with long-term value.<hr />- Prioritization of customer-oriented solutions over short-term services.<hr />- Acknowledges pressure in working with older peers; values open feedback.<hr />- Team culture thrives on data-driven decisions, free from biases.<hr />- Conflict arises from differing ideas but is managed constructively.<hr />- Team dynamics focus on collaboration and maintaining harmony despite disagreements.","tags":"life-at-dwarves, software-engineer, engineering-values","authors":"","date":{"days":18362},"category":"careers > life"},"1030":{"file_path":"careers/life/2022-03-17-3-tom-nguyen.md","title":"#3 Tom Nguyen on remote working","description":"Tom Nguyen, Dwarves' Data Lead, shares how remote working fits his lifestyle perfectly, allowing him to stay productive without distractions while maintaining effective team collaboration","spr_content":"- Data Lead at Dwarves Brainery embraces remote work for balance between productivity and collaboration.<hr />- Preferences align with home environment: productive, less distracting, enjoyable.<hr />- Traditional office culture can be overwhelming; social gatherings add pressure.<hr />- Home allows focus without disruptions from meetings or casual conversations.<hr />- Flexibility of remote work: can perform tasks anywhere with a good internet connection.<hr />- Dwarves Foundation supports remote setups: provides necessary equipment on request.<hr />- Encourages team adaptation to remote culture; promotes pair working for comfort.<hr />- Offers support for co-working spaces for extroverted team members.<hr />- Emphasizes that effective communication remains possible remotely when approached correctly.<hr />- Asserts remote working is optimal work style, prioritizing personal comfort and productivity.","tags":"life-at-dwarves, data-engineer, remote-work","authors":"","date":{"days":19068},"category":"careers > life"},"1031":{"file_path":"careers/life/2023-09-18-12-toan-ho.md","title":"#12 Toan Ho on community building","description":"Toan Ho shares his pride in Dwarves Foundation's community-building spirit, open-source contributions, and supportive work environment","spr_content":"- Dwarves excels in community-building culture, fostering collaboration.<hr />- Strong emphasis on open-source contributions, enhancing developer resources.<hr />- Notable projects: <hr />  - Hidden Bar: MacOS app for hiding menu bar icons; highlighted on HackerNews, popular in 2019.<hr />  - NextJS Boilerplate: Robust starter kit for production-ready frontend development; utilizes TypeScript, SWR, TailwindCSS, Jest, testing-library, Cypress, and Storybook.<hr />- Vibrant Discord community: channels for knowledge sharing (#til), tech news, specific tech stacks (#news, #tech, #frontend, #backend).<hr />- Personal growth: Continuous learning opportunities, encouragement to explore new technologies, mentoring practices.<hr />- Memorable experience: Collaborative research on LLM with Tom Nguyen, faced challenges and stress; supportive intervention from Thanh Pham, emphasizing process over output.<hr />- Impact of leadership: Patience and understanding from management, fostering a supportive environment.<hr />- Key takeaway: Importance of support and encouragement in professional development at Dwarves.","tags":"life-at-dwarves, frontend-engineer, community-building","authors":"","date":{"days":19618},"category":"careers > life"},"1032":{"file_path":"careers/life/2024-01-22-27-tri-tran.md","title":"#27 Tri Tran on growth environment","description":"Tri Tran, a Dwarves alumnus, reflects on his development at Dwarves Foundation and why it's an ideal environment for fresh graduates to grow rapidly with clear career paths","spr_content":"- Dwarves Foundation offers strong mentorship and open community.<hr />- Ideal starting point for fresh graduates and career beginners.<hr />- Personal development emphasized, fostering rapid growth.<hr />- Mentorship experience: Thanh guided from A-Z, easing adaptation.<hr />- Team meals foster motivation amidst pressures of studies.<hr />- Open community encourages connectivity among alumni and non-members.<hr />- Ongoing engagement on platforms like Discord strengthens relationships.<hr />- Continuous sharing of knowledge from Dwarves benefits personal learning.<hr />- Community contributions are rewarding; active participation encouraged.<hr />- Culture of continuous learning accelerates individual development.<hr />- Mentors provide crucial guidance on career paths.<hr />- Strong foundation for career established during early experiences at Dwarves.<hr />- Gratitude for supportive environment post-graduation.","tags":"life-at-dwarves, alumni, career-growth","authors":"","date":{"days":19744},"category":"careers > life"},"1033":{"file_path":"careers/life/2022-02-25-2-anh-tran.md","title":"#2 Anh Tran on UI design journey","description":"Anh Tran, Dwarves' Head of UI, shares her 5-year journey from graphic design to becoming the UI wizard behind the company's visual identity, highlighting the importance of communication between designers and developers","spr_content":"- UI Designer transition from graphic design to product design.<hr />- Dwarves’ startup environment fosters professional growth through new projects.<hr />- Emphasis on vital communication between designers and developers.<hr />- Experience in UI, app appearance, and research for team insight.<hr />- Dual role in small projects: managing both UX and UI design.<hr />- Shift from graphic design due to saturation and emergence of UX/UI.<hr />- Initial roughness in adapting to product design's technical constraints.<hr />- Dwarves as a startup presented learning and exploration opportunities.<hr />- Previous experiences in larger corporations limited growth and learning.<hr />- Pre-pandemic office dynamics contrasted with post-pandemic remote adjustments.<hr />- Initial communication difficulties stemmed from differing perspectives.<hr />- Conflicts with developers over work scope and opinions.<hr />- Implementation of seminars enhanced understanding and collaboration.<hr />- Team empathy improved through opportunities to share roles and perspectives.<hr />- Overall journey characterized by learning, challenges, and valuable experiences.","tags":"life-at-dwarves, ui-designer, design-communication","authors":"","date":{"days":19048},"category":"careers > life"},"1034":{"file_path":"careers/life/2023-10-16-16-kim-ngan.md","title":"#16 Le Kim Ngan on QA Standards","description":"Le Kim Ngan shares her journey as a QA Engineer at Dwarves, highlighting her personal standards and growth in automation testing","spr_content":"- Journey of a QA Engineer: novice to skilled tester.<hr />- Importance of personal quality standards beyond client requirements.<hr />- Supportive remote culture at Dwarves enhances collaboration.<hr />- Initial role on Setel project; minimal automation knowledge.<hr />- Key mentors: Tuan (automation/manual support) and Nhut Huynh (opportunities for growth).<hr />- Developed solid API testing skills in web and Android domains.<hr />- Team support extends beyond Setel; helpful culture throughout Dwarves.<hr />- Proactive assistance for queries about benefits/salaries from Huy Nguyen and Giang.<hr />- Culture of enthusiastic support necessary for remote operations.<hr />- Challenging projects requiring overtime, even during weekends.<hr />- Balancing personal commitments with urgent project demands.<hr />- High stress from user bugs; felt personal responsibility.<hr />- Commitment to quality: adherence to self-set standards, not just client requirements.<hr />- Successful client campaign despite stress and challenges. <hr />- Upholding high expectations leads to great job results.","tags":"life-at-dwarves, qa-engineer, quality-standards","authors":"","date":{"days":19646},"category":"careers > life"},"1035":{"file_path":"careers/life/2023-08-07-9-hoang-anh.md","title":"#9 Hoang Anh on self-motivation","description":"Hoang Anh shares his experience at Dwarves, where engineers put in extra time not because they have to, but because they enjoy new challenges","spr_content":"- Introverted engineer values personal development at Dwarves.<hr />- Company culture emphasizes individual contributions and team challenges.<hr />- Referral by Thanh Pham in \"Life at Dwarves\" prompted interview.<hr />- Participation in social activities is optional; respect for personal boundaries.<hr />- Encouraged by Tuan Dao to join Dwarves after leaving previous job.<hr />- Interview process valued potential, talents, and work ethic over skill set.<hr />- Chose Dwarves over higher salary offer due to innovative environment.<hr />- Thrives in dynamic workplace with talented peers, embracing new technologies.<hr />- One-on-one conversations with Thanh foster growth and alignment with goals.<hr />- Recognition from supervisor Huy Nguyen boosts motivation and morale.<hr />- Team members exhibit a strong work ethic and enthusiasm for challenges.<hr />- Each project acts as a playground for experimenting with technologies.<hr />- Nhut Huynh exemplifies dedication, moving from QA to tech lead through hard work.<hr />- Impressive commitment from colleagues inspires personal ambition and effort.<hr />- Environment of collective advancement; fear of stagnation in a motivated team.","tags":"life-at-dwarves, engineer, work-culture","authors":"","date":{"days":19576},"category":"careers > life"},"1036":{"file_path":"careers/life/2024-02-19-28-duyen-tran.md","title":"#28 Duyen Tran on Techie project","description":"Duyen Tran shares her experience as a contributor to Techie Story, a Dwarves community initiative that highlights the journeys of tech professionals around the world","spr_content":"- Techie contributor reflects on joining Dwarves community initiative.<hr />- Dwarves focuses on tech professionals' stories globally.<hr />- Values open, supportive community atmosphere.<hr />- Initial engagement through radio talks and webinars on Discord.<hr />- Impressed by talented and energetic community members.<hr />- Joined **Techie Story** project, a non-profit by Dwarves members.<hr />- Project honors contributions of tech professionals to Science, Technology & Innovation.<hr />- Opportunity to connect with Vietnamese engineers worldwide.<hr />- Recognizes technical and non-technical aspects of work and life in tech.<hr />- Achievements stem from challenges, effort, and perseverance, not luck.<hr />- Aims to inspire others through shared stories.<hr />- Techie provides financial support and networking opportunities.<hr />- Appreciates Dwarves for fostering a growth-oriented environment.<hr />- Encourages others to join Techie Project on Discord.","tags":"life-at-dwarves, community-contributor, techie-project","authors":"","date":{"days":19772},"category":"careers > life"},"1037":{"file_path":"careers/life/2024-09-26-29-dat-nguyen.md","title":"#29 Dat Nguyen on hybrid learning","description":"Dat Nguyen shares his experience as an AI Dev Intern at Dwarves, highlighting how the hybrid working model accelerated his learning in LLM/AI through real-time mentorship and spontaneous knowledge sharing","spr_content":"- **Hybrid Learning Environment:** Dwarves' model integrates remote focus with in-person collaboration.<hr />- **Knowledge Transfer:** Rapid knowledge exchange occurs through informal conversations; formal meetings are less emphasized.<hr />- **Mentorship Importance:** Mentorship fosters a culture of continuous learning; seniors and newbies engage in shared learning experiences.<hr />- **Real-Time Problem Solving:** Quick discussions and whiteboard sessions enhance understanding and problem resolution.<hr />- **Active Observation:** Learning by watching experienced colleagues tackle challenges boosts comprehension of complex topics.<hr />- **Collaborative Projects:** Diverse input from team members broadens collaborative perspectives and problem-solving approaches.<hr />- **Continuous Learning Culture:** Dwarves promotes ongoing sharing of ideas and experiences, contributing to personal and collective growth.<hr />- **Skill Development:** In-office interactions strengthen skills like spontaneous thinking and clear communication.<hr />- **GenAI and LLM Knowledge:** Shared understanding of technology trends accelerates product development and personal learning curves.<hr />- **Balanced Work Dynamics:** Remote work allows deep focus, while office presence provides valuable insights and support.","tags":"life-at-dwarves, ai-developer, hybrid-work","authors":"","date":{"days":19992},"category":"careers > life"},"1038":{"file_path":"careers/life/2023-11-20-21-minh-cloud.md","title":"#21 Minh Cloud on expanding horizons","description":"Minh Cloud reflects on her journey at Console Labs (Dwarves), highlighting how remote work and encouragement to try new things helped her step out of her comfort zone","spr_content":"- Product Executive shares transformative experience at Console Labs (Dwarves).<hr />- Remote work reshaped daily routine, improved work-life balance.<hr />- Overcame 34km commute in Hanoi traffic; gained time for exercise, rest, and early school arrival.<hr />- Emphasizes value of stepping outside comfort zone; encourages growth and self-discovery.<hr />- Initial hesitance to apply to Console Labs due to competition and self-doubt.<hr />- Remote work fosters opportunities for new experiences and skill development.<hr />- Interaction with diverse professionals in Saigon expanded networking and understanding of product development.<hr />- Shift in perspective from introversion to finding enjoyment in social interactions.<hr />- Engaged with product builders, gaining insights into their processes and goals.<hr />- Boost in self-esteem and courage to embrace challenges and opportunities.<hr />- Console Labs viewed as an experimental hub for innovative Web3 products, supported by Dwarves Foundation.","tags":"life-at-dwarves, product-executive, personal-growth","authors":"","date":{"days":19681},"category":"careers > life"},"1039":{"file_path":"careers/life/2023-08-17-10-cuong-mai.md","title":"#10 Cuong Mai on work-life balance","description":"Cuong Mai shares how a health crisis changed his perspective on work-life balance and the importance of mentorship at Dwarves Foundation","spr_content":"- **Health Crisis Impact:** Hospitalization for stomach ulcer leads to lifestyle changes.<hr />- **Work-Life Balance:** Shift from work-centric living to prioritizing diet and exercise.<hr />- **Perspective on Wealth:** Acknowledgment that material wealth is not carried into death.<hr />- **Organizational Improvement:** Increased efficiency and problem-solving mindset post-crisis.<hr />- **Mentorship Value:** Recognition of Dwarves' strong mentorship culture beyond technical guidance.<hr />- **Mentor Relationship:** Tom provides enthusiastic guidance in Golang and career development.<hr />- **Skill Development:** Engagement in software modeling group enhances technical discussions and presentation skills.<hr />- **Confidence Growth:** Improved public speaking through practice and feedback from peers and mentors.<hr />- **Career Path Clarity:** Defined steps to become a senior engineer facilitated by mentoring.<hr />- **Personal Support:** Mentoring includes discussions on financial management and personal matters.<hr />- **Community and Sharing:** Open environment for discussing personal and professional challenges amongst Dwarves' team.","tags":"life-at-dwarves, backend-engineer, mentorship","authors":"","date":{"days":19586},"category":"careers > life"},"1040":{"file_path":"careers/life/2023-11-27-22-cat-nguyen.md","title":"#22 Cat Nguyen on team support","description":"Cat Nguyen shares her experience as a Junior Backend Engineer at Dwarves, highlighting the supportive team culture and how asking for help accelerated her growth","spr_content":"- Attracted to Dwarves Foundation by distinctive red logo during senior year at university.  <hr />- Job description aligned with aspirations; successfully passed tests and interviews.  <hr />- Remote work enhances job satisfaction (10/10), saves 2-3 hours commuting.  <hr />- Extra time dedicated to fitness, knowledge, and family interactions.  <hr />- Worked on projects: Console Labs and a client project.  <hr />- Received substantial support from team members Khoi and Tuan Dao.  <hr />- Encouraged curiosity, provided reading materials for learning.  <hr />- Client project presented challenges and steep learning curve.  <hr />- Initially hesitant to ask for help; focused on individual effort.  <hr />- Eventually sought guidance from Bien Vo for difficult queries.  <hr />- Thanh Pham assigned Hieu Phan as mentor, enhancing support network.  <hr />- Key lesson: seeking help fosters personal and professional growth within the team.  ","tags":"life-at-dwarves, backend-engineer, teamwork","authors":"","date":{"days":19688},"category":"careers > life"},"1041":{"file_path":"careers/life/2022-07-22-4-an-tran.md","title":"#4 An Tran on senior engineering","description":"An Tran shares his journey as a Senior Software Engineer at Dwarves, highlighting the balance between delivery speed and quality, and the importance of continuous learning and mentorship","spr_content":"- Senior Software Engineer with 7 years of experience, transitioned from startups to leading projects at Dwarves.<hr />- Emphasizes that challenging oneself enhances the excitement of work.<hr />- Journey includes roles such as Tech Lead and Frontend Lead, diverse experience in Android, Web, Backend, and Frontend.<hr />- Identifies as a Full-stack Engineer; prefers diverse tasks to avoid monotony.<hr />- Management of project complexities and balancing client requirements with delivery timelines are key challenges faced.<hr />- Experience with Nghe Nhan system highlights the need for adaptability and maintaining product quality under pressure.<hr />- True Seniors offer comfort and are reliable problem-solvers; they excel in communication and teamwork.<hr />- Senior promotion criteria at Dwarves focus on teamwork, communication, product development mindset, and holistic vision.<hr />- Emphasizes producing quality work over seeking recognition; results are the true measure of output.<hr />- Knowledge gap between Senior and Junior positions acknowledged, yet learning opportunities exist across levels at Dwarves.<hr />- Task management involves listing and prioritizing tasks, ensuring no bottlenecks, and maintaining team productivity.<hr />- Leadership influences junior members’ career trajectories and work styles; mentoring fosters trust and guidance.<hr />- Personal philosophy: continuously challenging oneself leads to greater engagement and interest in work.","tags":"life-at-dwarves, senior-engineer, mentorship","authors":"","date":{"days":19195},"category":"careers > life"},"1042":{"file_path":"careers/life/2023-12-12-23-hieu-nghia.md","title":"#23 Nguyen Hieu Nghia on personal development","description":"Nguyen Hieu Nghia reflects on Dwarves' emphasis on personal development through mentorship, knowledge sharing, and providing supportive guidance to all team members","spr_content":"- Backend Engineer values Dwarves’ welcoming culture and continuous learning.<hr />- Mentorship program significantly enhances skills and confidence.<hr />- First company dinner exemplifies supportive environment; felt included before onboarding.<hr />- Friendly interactions with senior members fostered connection; mentors include An and Hieu Phan.<hr />- Workplace promotes respect and collaboration regardless of position.<hr />- COO Nikki Ngoc Truong offers personal support in reviewing client pitch profile.<hr />- Feedback received on writing nurtures improvement in documenting and note-taking.<hr />- Dwarves emphasizes individual development through structured programs.<hr />- Mentor-mentee relationships guide career and soft skill growth.<hr />- Brainery and Tech Radar events accelerate personal and professional development.<hr />- Evolution from novice in documentation to writing technical blogs and articles.<hr />- Collaboration with Tom Nguyen enriches writing experience; provides insightful reviews and questions.<hr />- Community-driven atmosphere cultivates shared knowledge and learning opportunities.","tags":"life-at-dwarves, backend-engineer, personal-development","authors":"","date":{"days":19703},"category":"careers > life"},"1043":{"file_path":"careers/life/2022-08-04-6-duy-nguyen.md","title":"#6 Duy Nguyen on finding her path","description":"Duy Nguyen shares her journey from Business Development to Operations at Dwarves, exploring her strengths and passions along the way as co-founder of Techie Story","spr_content":"- Duy Nguyen's journey at Dwarves Foundation: Unconventional and transformative.  <hr />- Transition from Business Development intern to Operations & Business Writer.  <hr />- Initial excitement in tech industry overshadowed by peer pressure.  <hr />- Preference for behind-the-scenes work versus competitive engagement.  <hr />- Shift to food blogging: pursuing passion, facing challenges of deadlines and criticism.  <hr />- Love for food transforms into pressure, complicating enthusiasm.  <hr />- Decision to return to Dwarves, embracing writing as a primary focus.  <hr />- Writing as a versatile tool for expression: accept diverse perspectives.  <hr />- Entering the crypto realm in 2021: steep learning curve, understanding volatility.  <hr />- Facing challenges helps broaden perspective and skillset.  <hr />- Involvement in renovating Dalat office: fostering remote work culture.  <hr />- Striving to create a welcoming workspace that feels like home.  <hr />- Balancing personal interest in interior design with professional goals.  <hr />- Understanding self-discovery as a continuous process: interests, needs, and capabilities.  <hr />- Emphasis on adaptability and learning through uncomfortable experiences in career growth.  <hr />- Ultimate aim: aligning personal fulfillment with professional development.","tags":"life-at-dwarves, operations, techie-story","authors":"","date":{"days":19208},"category":"careers > life"},"1044":{"file_path":"careers/life/2021-03-11-0-phat-nguyen.md","title":"#0 Phat Nguyen on career transition","description":"Phat Nguyen shares his bold journey from medical school to pursuing IT, highlighting the importance of following one's true passion even when it means starting over and making difficult decisions","spr_content":"- The individual reflects on a pivotal life decision: leaving medical school at the second year of college to pursue IT.  <hr />- He describes himself as a \"blank canvas\" at 17, lacking clarity about interests, occupation, and skills.  <hr />- The choice of medical school was based on external expectations and limited understanding, not passion.  <hr />- Exposure to medical terminology and work revealed a clear mismatch with his interests; he recognized he lacked passion for medicine.  <hr />- Committing 10 years to medicine without passion was undesirable; passion and purpose are essential for meaningful work.  <hr />- Parental expectations created pressure; he chose to quietly pursue IT without seeking approval or risking academic record.  <hr />- The decision was made in secret, trusting his intuition, training independently, and believing it was the correct move.  <hr />- Starting a career later than peers is acceptable if driven by willpower and clarity of purpose.  <hr />- Despite age differences, his strong desire, curiosity, and perseverance allowed continuous growth in IT.  <hr />- Living in an internet-rich era emphasizes self-nurturing, passion, and inner strength over age or conventional timelines.  <hr />- Three years into his role as a Backend Engineer, he is still exploring, learning, and thankful for following his beliefs.","tags":"life-at-dwarves, backend-engineer, career-change","authors":"","date":{"days":18697},"category":"careers > life"},"1045":{"file_path":"careers/life/2023-11-03-19-vi-tran.md","title":"#19 Vi Tran on life changes","description":"Vi Tran shares her journey transitioning to the tech industry at Dwarves, overcoming challenges in communication, and finding financial stability through remote work","spr_content":"- Transitioned to the tech industry in 2023 while working remotely at Dwarves.<hr />- Joked about financial growth due to newfound savings from remote work.<hr />- Experienced initial struggle with tech terminology and high expectations.<hr />- Faced pressure during initial months, considered ending probation early.<hr />- Mentored by colleagues, notably Nikki and Han Ngo, aided in overcoming challenges.<hr />- Organized successful tech events with partners like AWS, VietTech, and GrokkingVN.<hr />- Facilitated free technical courses (e.g., Golang, Frontend), which garnered community enthusiasm.<hr />- Led the Techie Story project, interviewing Vietnamese engineers globally for insights.<hr />- Motivation grew from understanding peers' journeys and struggles.<hr />- Continuously learning to enhance skills as a tech marketer, utilizing support from team engineers.","tags":"life-at-dwarves, communication-specialist, remote-work","authors":"","date":{"days":19664},"category":"careers > life"},"1046":{"file_path":"careers/life/2023-09-29-13-bien-vo.md","title":"#13 Bien Vo on customer value","description":"Bien Vo reflects on his journey at Dwarves, emphasizing the mentorship culture and the importance of delivering real value through products that satisfy customers","spr_content":"- Backend Engineer's journey began as an intern at Dwarves.  <hr />- Faced challenging projects, felt overwhelmed and doubted abilities.  <hr />- Mentorship from Huy Nguyen and Minh Luu was crucial.  <hr />- Mentors provided guidance rather than just tasks, fostering confidence.  <hr />- Dwarves’ culture emphasizes support for inexperienced mentees.  <hr />- Value of receiving guidance, being heard, and opportunities for development.  <hr />- Strong responsibility towards client projects; culture of ownership.  <hr />- Detail-oriented approach delights clients; commitment to project success.  <hr />- Consistent aspiration to improve and enhance user satisfaction.  <hr />- Balancing monetary goals with delivering real value to customers.  <hr />- Real fulfillment lies in customer satisfaction, not just profit.  ","tags":"life-at-dwarves, backend-engineer, mentorship","authors":"","date":{"days":19629},"category":"careers > life"},"1047":{"file_path":"careers/life/2023-12-13-24-tai-pham.md","title":"#24 Tai Pham on community spirit","description":"Tai Pham shares his experience as a Backend Engineer at Dwarves, highlighting the welcoming community culture and active knowledge sharing both internally and with the wider tech community","spr_content":"- Backend Engineer's journey with Dwarves Foundation: discovered via tech blogs, particularly by WeBuild community member Thach (Dwarves Alumni).<hr />- Interested in Dwarves, followed CEO Han, applied for a job in late 2021, currently employed.<hr />- Referred older brother Ngoc Thanh to join Dwarves.<hr />- Active and welcoming community; relocated from Hanoi to Saigon, received warm reception from members.<hr />- Nam introduced Saigon to the Engineer; Hieu Phan cooked and invited for swimming.<hr />- Remote work leads to quiet weekdays, lively weekends; board game club members (Phat, Bien, Quang, Huy Tieu, Huy Nguyen, Hoang Anh, Han) gather for games.<hr />- Strong sense of community within Dwarves; involves participation in external communities (Golang Vietnam, WeBuild).<hr />- Notable events during 2021 lockdown: WeBuild and Dwarves held community calls for developers.<hr />- In 2023, organized regular tech events and offered training courses (Golang, front-end).<hr />- Pride in being a Dwarves member stems from the culture of sharing and community building.","tags":"life-at-dwarves, backend-engineer, community-building","authors":"","date":{"days":19704},"category":"careers > life"},"1048":{"file_path":"careers/life/2022-02-14-1-thanh-pham.md","title":"#1 Thanh Pham on Engineering Management","description":"Thanh Pham, Engineering Manager at Dwarves for nearly 5 years, shares his approach to mentoring team members, balancing individual growth with company direction, and his journey toward becoming a CTO","spr_content":"- Engineering Manager at Dwarves, 5 years of experience.<hr />- Transitioned from technical focus to team development.<hr />- Prioritizes creating a healthy environment for growth.<hr />- Supports both junior and senior engineers in achieving goals.<hr />- Dwarves Team utilizes a flexible 60-day evaluation program.<hr />- Newcomers often struggle despite potential, requiring leadership guidance.<hr />- Team encourages personal goal-setting and self-driven growth.<hr />- Progress assessed through regular check-ups: weekly, monthly, and after 6 months.<hr />- Commitment to a thriving culture is paramount.<hr />- Two career tracks: Individual Contributor (IC) for independent growth, Management Track (MT) for collaboration and leadership.<hr />- Initially reluctant to manage; now embraces role as facilitator and connector.<hr />- Four crucial roles for project success: Product Manager (what), Engineering Lead (how), Developer (execution), Engineering Manager (team allocation).<hr />- Addresses conflicts: balancing personal aspirations with company objectives.<hr />- Team embodies a culture of hustle and productivity.<hr />- Aspires to become CTO in 5-6 years, focusing on self-improvement and understanding people in leadership roles. <hr />- Emphasizes upgrading skills for future responsibilities.","tags":"life-at-dwarves, engineering-manager, mentorship","authors":"","date":{"days":19037},"category":"careers > life"},"1049":{"file_path":"careers/life/2022-08-03-5-nam-nguyen.md","title":"#5 Nam Nguyen on growth journey","description":"Nam Nguyen shares his 5-year journey at Dwarves Foundation, from a shy developer to a DevOps engineer recognized as a 'rockstar' by clients, and his experience exploring different roles","spr_content":"- Transformation: Introverted developer evolved to versatile team member.<hr />- Journey: 5 years at Dwarves shaped professional identity.<hr />- Accidental entry: Invitation from a friend led to joining Dwarves.<hr />- Learning path: Bachelor’s degree pursuit; transitioned from Fullstack Engineer to Frontend Engineer, then Backend and DevOps.<hr />- Mentor influence: Huy Tieu guided development in Quality Control (QC).<hr />- Motto: \"Experiencing new things\" drove continuous learning across various roles.<hr />- Social dynamics: Preference for solitary activities; resisted social norms of peers.<hr />- Growth through challenges: Event organization at GopherCon facilitated skill enhancement in communication and networking.<hr />- Effort principle: Committed to '200% effort'; recognized for contributions and success on projects like Open Fabric.<hr />- Productivity trade-off: Detail-oriented approach sometimes conflicts with efficiency; ongoing optimization efforts.<hr />- Advice for newcomers: Explore various roles; value consistency and enjoyment in work.<hr />- Reflection: Acknowledgment of personal and professional growth since 2017.","tags":"life-at-dwarves, devops-engineer, personal-growth","authors":"","date":{"days":19207},"category":"careers > life"},"1050":{"file_path":"careers/life/2024-01-03-25-khoi-nguyen.md","title":"#25 Khoi Nguyen on continuous learning","description":"Khoi Nguyen shares his experience as a Backend Engineer at Dwarves, highlighting the continuous learning opportunities, challenging projects, and knowledge sharing culture","spr_content":"- Backend Engineer at Dwarves for nearly two years; a commitment driven by engaging challenges.<hr />- Enjoys learning new programming languages, recently tackled Elixir, fun yet underutilized in Vietnam.<hr />- Active participant in tech events and courses; enrolled in Frontend Course 2023 to transition to full-stack engineering.<hr />- Final project involved coding an AI-assisted chess game; awarded \"Favorite Project\" with CEO participation.<hr />- Mentorship at Dwarves: paired with Tom Nguyen, a knowledgeable and humble mentor, enhancing learning in AI and LLM.<hr />- Dwarves shares knowledge through brainery, hashnote, and tech blogs, recognized for high-quality content in the community.<hr />- Pride in contributing to brainery; praised by peers for Dwarves’ unique and impactful tech blogs.<hr />- Dwarves fosters personal development while positively impacting the tech community.","tags":"life-at-dwarves, backend-engineer, continuous-learning","authors":"","date":{"days":19725},"category":"careers > life"}},"dirtCount":0,"index":[["<",{"0":{"916":1}}],["≈",{"0":{"868":1,"908":1,"947":1,"952":1,"967":1,"993":1}}],["`justify",{"1":{"902":1}}],["`<button>`",{"1":{"897":1}}],["`<label>`",{"1":{"897":1}}],["`<input>`",{"1":{"897":1}}],["`<form>`",{"1":{"897":1}}],["`",{"1":{"543":2,"902":1}}],["`panic",{"1":{"543":2}}],["`inert`",{"1":{"473":1}}],["`useeffect`",{"1":{"479":1}}],["`usereducer`",{"1":{"470":1}}],["`usestate`",{"1":{"470":2}}],["`node",{"1":{"202":1}}],["+50",{"1":{"902":1}}],["+",{"0":{"439":1}}],["|",{"1":{"428":1}}],["zone",{"1":{"1038":1}}],["zookeeper",{"0":{"642":1},"1":{"642":2},"2":{"642":1}}],["zod",{"0":{"461":1},"1":{"461":1}}],["zero",{"0":{"604":1},"1":{"603":1,"604":1,"605":1,"940":1,"998":1,"1000":1},"2":{"605":1}}],["zettelkasten",{"0":{"346":1,"861":1,"864":1,"866":1,"905":1,"909":1},"1":{"346":1,"852":1,"855":1,"861":1,"864":1,"866":1,"904":1,"905":1,"906":1,"908":1,"909":1},"2":{"346":1},"4":{"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"860":1,"861":1,"862":1,"863":1,"864":1,"865":1,"866":1,"904":1,"905":1,"906":1,"907":1,"908":1,"909":1}}],["zk",{"0":{"603":1,"605":1},"1":{"605":2},"2":{"583":1,"591":1,"604":1}}],["zkevm",{"0":{"583":1},"1":{"583":1,"603":1}}],["zaplib",{"0":{"480":1},"1":{"480":1}}],["zanzibar",{"1":{"222":1}}],["🧊",{"0":{"307":1},"1":{"364":1}}],["✨",{"1":{"286":1}}],["$usdc",{"1":{"367":1}}],["$43",{"1":{"360":1}}],["$dfg",{"0":{"350":1,"364":1},"1":{"350":1,"367":1}}],["$1",{"0":{"255":1},"1":{"255":1}}],["$icy",{"0":{"359":1,"363":1,"364":1},"1":{"47":1,"363":1,"364":1}}],["💠",{"0":{"364":1}}],["💼",{"0":{"314":1}}],["👾",{"0":{"235":1}}],["💎",{"0":{"35":1}}],["721",{"1":{"701":1}}],["7",{"0":{"227":1,"255":1,"261":1,"287":1,"1011":1,"1019":1,"1025":1},"1":{"255":1}}],["xclaim",{"1":{"957":1}}],["xcode",{"1":{"616":1,"797":1}}],["xreadgroup",{"1":{"957":1}}],["xpc",{"0":{"617":1},"1":{"617":1,"663":1}}],["xstate",{"1":{"496":1}}],["xml",{"1":{"415":1}}],["x",{"0":{"198":1,"368":1},"1":{"368":2}}],["0xlight",{"3":{"871":1,"988":1}}],["0xm",{"3":{"414":1,"440":1}}],["000",{"1":{"368":1}}],["03",{"0":{"294":1}}],["02",{"0":{"290":1}}],["01",{"0":{"267":1}}],["0",{"0":{"182":1,"259":1,"1023":1,"1028":1,"1029":1,"1044":1},"1":{"178":1,"205":1,"375":1,"1015":2}}],["9",{"0":{"114":1,"222":1,"255":1,"1035":1}}],["67",{"1":{"894":1}}],["61",{"0":{"659":1}}],["60fps",{"1":{"894":1}}],["6000",{"1":{"843":1}}],["60",{"0":{"404":1},"1":{"462":1}}],["6",{"0":{"110":1,"226":1,"256":1,"285":1,"1026":1,"1043":1},"1":{"108":1,"205":1}}],["41",{"0":{"1010":1},"1":{"1010":1}}],["450",{"0":{"532":1}}],["40",{"1":{"462":1}}],["40th",{"1":{"91":1}}],["4o",{"1":{"273":1,"274":1}}],["43",{"1":{"118":1}}],["4",{"0":{"104":1,"111":1,"223":1,"257":1,"288":1,"645":1,"676":1,"796":1,"1041":1},"1":{"92":1,"244":1,"1005":1}}],["4+",{"1":{"28":1}}],["5951",{"3":{"896":1,"897":1}}],["50",{"1":{"569":1}}],["500",{"1":{"223":1}}],["5b",{"0":{"255":1},"1":{"255":1}}],["5",{"0":{"229":1,"263":1,"284":1,"657":1,"677":1,"796":1,"996":1,"1016":1,"1049":1},"1":{"89":1,"223":1,"272":1,"274":1,"343":1,"1016":1,"1033":1,"1048":1,"1049":1},"2":{"1016":1}}],["☀️",{"0":{"64":1}}],["1s",{"1":{"305":1}}],["19",{"0":{"179":1,"539":1,"1002":1,"1045":1},"1":{"171":1,"179":1,"206":1,"273":1,"493":1,"494":1,"496":1,"656":1,"703":1,"999":1,"1002":1,"1008":1}}],["12",{"0":{"116":1,"221":1,"1031":1},"1":{"226":1}}],["101",{"0":{"402":1,"662":1}}],["10x",{"0":{"261":1,"664":1},"1":{"261":1,"480":1,"495":1,"664":1}}],["10",{"0":{"112":1,"228":1,"1039":1},"1":{"368":1,"720":1,"894":1}}],["18",{"0":{"108":1,"209":1,"479":1,"535":1,"1022":1},"1":{"108":1,"209":1,"479":1}}],["1776",{"0":{"262":1},"1":{"262":1}}],["17",{"0":{"106":1,"532":1,"1027":1},"1":{"360":1}}],["11",{"0":{"105":1,"231":1,"1021":1}}],["16",{"0":{"104":1,"541":1,"1034":1},"1":{"894":1,"896":1,"937":1,"1005":1}}],["133",{"1":{"495":1}}],["13",{"0":{"113":1,"230":1,"1046":1},"1":{"89":1,"376":1}}],["1",{"0":{"107":1,"108":1,"118":1,"181":1,"233":1,"259":1,"283":1,"305":2,"393":1,"534":1,"536":1,"540":1,"649":1,"678":1,"721":1,"959":1,"1014":1,"1015":1,"1048":1},"1":{"89":1,"113":1,"181":1,"227":1,"243":1,"274":1,"276":2,"305":3,"494":1,"534":1,"536":1,"591":1,"902":1,"1002":1,"1003":1,"1014":1}}],["14",{"0":{"56":1,"115":1,"225":1}}],["15th",{"1":{"537":1}}],["15",{"0":{"103":1,"533":1,"537":1,"1020":1},"1":{"53":1,"206":1,"494":1,"496":1,"631":1}}],["qwen2",{"0":{"1016":1},"1":{"1016":1},"2":{"1016":1}}],["q=material",{"1":{"515":1}}],["q=geometry",{"1":{"515":1}}],["q=renderer",{"1":{"515":1}}],["q=scene",{"1":{"515":1}}],["q=camera",{"1":{"515":1}}],["q",{"0":{"789":1},"1":{"272":1,"789":1,"1007":1}}],["q3",{"1":{"264":1}}],["qc",{"0":{"146":1,"148":1,"553":1}}],["qa",{"0":{"134":1,"920":1,"1034":1},"1":{"55":1,"553":1,"768":1,"920":1,"988":1,"1034":1},"2":{"920":1,"1022":1,"1034":1},"4":{"553":1,"802":1,"803":1,"920":1}}],["quorum",{"1":{"594":1}}],["quoc",{"0":{"54":1},"1":{"54":1}}],["queue",{"1":{"613":1}}],["queues",{"0":{"528":1},"1":{"528":2}}],["queries",{"0":{"474":1,"893":1,"975":1},"1":{"409":1,"474":1,"496":1,"633":1,"716":1,"722":1,"726":1,"728":1,"975":3,"1002":1},"2":{"975":1}}],["query",{"0":{"104":1,"253":1,"409":1},"1":{"104":1,"409":1,"442":1,"711":1,"728":1,"893":1,"975":1}}],["quests",{"0":{"230":1}}],["questioning",{"1":{"221":1}}],["questions",{"1":{"112":1,"301":1,"624":1,"845":1,"867":1}}],["question",{"0":{"815":1,"845":1},"1":{"98":1,"300":1,"410":1,"815":1,"845":1}}],["quantitative",{"0":{"804":1,"805":1,"809":1,"812":1},"1":{"804":1,"805":1,"807":2,"809":1,"811":1,"812":1,"817":1,"952":1}}],["quantization",{"0":{"445":1},"1":{"445":1}}],["quantum",{"1":{"259":1}}],["quant",{"0":{"811":1},"2":{"175":1}}],["quang",{"3":{"61":1,"236":1,"237":1,"252":1,"600":1}}],["qualifiers",{"1":{"830":1}}],["qualified",{"1":{"79":1}}],["qualitative",{"0":{"742":1,"804":1,"805":1,"806":1,"807":1,"808":1,"809":1},"1":{"742":1,"804":1,"805":1,"806":1,"807":1,"808":1,"811":1,"816":1,"817":1,"876":1,"938":1,"952":1}}],["quality",{"0":{"768":1,"770":1},"1":{"57":1,"58":1,"118":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"203":1,"297":1,"325":1,"326":1,"372":1,"374":1,"380":1,"386":1,"389":1,"395":1,"447":1,"662":1,"665":1,"668":1,"672":1,"770":1,"773":1,"786":1,"889":1,"920":2,"949":1,"983":1,"1041":1},"2":{"337":1,"344":1,"1034":1}}],["quicker",{"1":{"975":1}}],["quick",{"0":{"469":1,"649":1,"974":1},"1":{"210":1,"225":1,"249":1,"363":1,"531":1,"533":1,"654":1,"735":1,"818":1,"862":1}}],["quickly",{"1":{"53":1,"164":1,"179":1,"203":1,"380":1,"396":1,"530":1,"772":1,"847":1,"907":1}}],["quite",{"1":{"93":1}}],["quiet",{"1":{"36":1,"271":1,"339":1}}],["8",{"0":{"55":1,"232":1,"262":1,"578":1},"1":{"58":1,"89":1,"181":1}}],["29",{"0":{"1037":1}}],["27",{"0":{"1009":1,"1032":1},"1":{"1009":1}}],["28",{"0":{"1005":1,"1036":1},"1":{"1005":1}}],["25",{"0":{"1004":1,"1050":1},"1":{"767":1,"1004":1}}],["2500",{"1":{"356":1}}],["2d",{"1":{"618":1}}],["22",{"0":{"542":1,"1006":1,"1040":1},"1":{"1006":1}}],["24",{"0":{"534":2,"536":1,"998":1,"1047":1},"1":{"534":1,"536":1,"998":1}}],["20",{"0":{"537":1,"1003":1,"1024":1},"1":{"701":2}}],["2017",{"1":{"453":1}}],["2016",{"1":{"202":1}}],["2023",{"0":{"265":1,"266":1,"269":1,"279":1,"280":1,"291":1,"292":1,"293":1},"1":{"279":1,"293":1,"869":1}}],["2026",{"0":{"261":1},"1":{"261":1}}],["2024",{"0":{"205":1,"206":1,"207":1,"264":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"360":1,"363":1,"368":1,"492":1,"493":1,"496":1},"1":{"205":1,"206":1,"207":1,"232":1,"264":1,"272":1,"275":1,"332":1,"360":1,"363":1,"492":1,"496":1}}],["2025",{"0":{"204":1,"268":1,"494":1,"495":1},"1":{"204":1,"258":1,"360":1,"494":1,"495":1,"1012":1}}],["2020",{"1":{"102":1}}],["2021",{"0":{"101":1},"1":{"96":1,"125":1,"181":1}}],["2022",{"0":{"123":1,"289":1,"551":1},"1":{"92":1,"101":1,"209":1,"551":1},"4":{"28":1,"29":1,"123":1}}],["23",{"0":{"536":1,"540":1,"869":1,"999":1,"1042":1},"1":{"113":1,"227":1,"999":1,"1002":1,"1003":1}}],["2nd",{"1":{"106":1}}],["21",{"0":{"538":1,"997":1,"1038":1},"1":{"89":1}}],["2",{"0":{"117":1,"120":1,"259":1,"260":1,"286":1,"379":1,"540":1,"603":1,"648":1,"674":1,"939":1,"976":1,"1013":1,"1016":1,"1033":1},"1":{"89":1,"181":1,"223":1,"347":1,"375":1,"485":1,"515":1,"591":1,"603":1,"939":2,"940":1,"1013":1}}],["26",{"0":{"54":1,"1000":1}}],["jetpack",{"0":{"793":1},"1":{"793":1}}],["jtbd",{"0":{"732":1,"743":1},"1":{"877":1}}],["jvm",{"1":{"666":1}}],["jim",{"3":{"614":1,"958":1,"972":1}}],["j",{"1":{"571":1}}],["jack",{"3":{"350":1,"367":1}}],["january",{"0":{"278":1,"494":1},"1":{"494":1}}],["java",{"0":{"219":1},"1":{"219":2,"666":1,"723":1,"999":1},"2":{"219":1}}],["javascript",{"0":{"467":1,"475":1,"478":1,"498":1,"512":1,"779":1,"780":1},"1":{"205":1,"455":1,"469":1,"475":1,"478":1,"484":1,"493":1,"498":1,"505":1,"510":1,"512":3,"513":1,"515":1,"777":1,"779":1,"780":1,"781":1,"894":1},"2":{"498":1,"511":1,"512":1,"894":1}}],["json",{"0":{"916":1,"927":1},"1":{"415":1,"652":1,"916":2,"927":1},"2":{"916":1}}],["js",{"0":{"132":1,"510":1},"1":{"202":1,"204":1,"206":1,"207":1,"387":1,"459":1,"472":2,"480":1,"482":1,"492":1,"493":1,"494":2,"495":2,"496":1,"497":1,"510":1,"511":1,"640":2,"999":1},"2":{"464":1,"478":1,"510":1}}],["jump",{"0":{"812":1}}],["judge",{"0":{"889":1},"1":{"889":1}}],["judgment",{"1":{"809":1}}],["judgments",{"1":{"735":1}}],["judging",{"0":{"571":1}}],["jupyter",{"0":{"232":1},"1":{"232":1}}],["juniors",{"1":{"275":1}}],["junior",{"0":{"126":1},"1":{"1040":1}}],["june",{"0":{"114":1,"116":1,"266":1},"1":{"102":1,"112":1,"114":1,"116":1,"266":1}}],["july",{"0":{"106":1,"207":1,"274":1},"1":{"207":1,"274":1}}],["justice",{"1":{"579":1}}],["just",{"1":{"49":1,"53":1,"155":1,"174":1,"188":1,"207":1,"249":1,"269":1,"278":1,"335":1,"847":1,"944":1,"951":1}}],["joyful",{"1":{"902":1}}],["joined",{"1":{"162":1}}],["join",{"0":{"297":1},"1":{"104":1,"105":1,"106":1,"112":1,"114":1,"117":1,"131":2,"139":1,"297":1,"997":1,"1007":1}}],["joining",{"1":{"3":1,"200":1}}],["journeys",{"1":{"1036":1}}],["journey",{"0":{"358":1,"884":1,"997":1,"1026":1,"1033":1,"1049":1},"1":{"35":1,"55":1,"56":1,"93":1,"94":1,"95":1,"427":1,"443":1,"819":1,"884":1,"1019":1,"1026":1,"1028":1,"1033":1,"1034":1,"1038":1,"1041":1,"1043":1,"1044":1,"1045":1,"1046":1,"1048":1,"1049":1}}],["jobs",{"0":{"873":1,"877":1},"1":{"232":1,"723":1,"732":1,"733":1,"873":1,"877":1}}],["job",{"0":{"732":1},"1":{"24":1,"92":1,"192":1,"275":1,"325":1,"343":1,"378":1,"718":1,"743":1,"791":1,"792":1}}],["khac",{"0":{"1025":1},"1":{"1025":1}}],["khacvy",{"3":{"209":1,"455":1,"482":1,"487":1,"490":1,"510":1,"517":1,"548":1,"550":1,"552":1,"590":1,"601":1,"982":1,"986":1}}],["khang",{"0":{"1024":1},"1":{"1024":1}}],["khoi",{"0":{"1020":1,"1050":1},"1":{"1020":1,"1050":1}}],["kotlin",{"0":{"791":1,"792":1},"1":{"791":1,"792":1,"961":1}}],["konvoy",{"1":{"180":1}}],["kline",{"0":{"731":1},"1":{"731":1}}],["k8s",{"2":{"402":1}}],["kpis",{"1":{"385":1}}],["kpi",{"0":{"385":1}}],["kafka",{"0":{"528":1,"642":1},"1":{"642":3},"2":{"642":1}}],["kafi",{"0":{"167":1},"1":{"167":1,"1000":1}}],["kauffman",{"1":{"315":1}}],["kubeseal",{"0":{"747":1},"1":{"747":1}}],["kubeconfig",{"1":{"232":1}}],["kubetrim",{"1":{"232":1}}],["kubernetes",{"0":{"221":1,"232":1,"402":1,"670":1},"1":{"221":1,"400":1,"401":1,"402":2,"653":1,"670":1,"744":1,"747":1,"751":1,"882":1}}],["kim",{"0":{"1034":1},"1":{"1034":1}}],["kicker",{"1":{"831":1}}],["kicked",{"1":{"116":1}}],["kick",{"1":{"677":1}}],["kit",{"4":{"628":1,"629":1}}],["kits",{"1":{"608":1}}],["kinds",{"0":{"861":1}}],["kind",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1}}],["king",{"0":{"69":1},"1":{"568":1}}],["knowing",{"1":{"316":1}}],["know",{"0":{"346":1},"1":{"96":1,"432":1,"437":1,"611":1,"674":1,"675":1,"676":1,"677":1,"678":1,"868":1,"894":1,"980":1}}],["knowledgable",{"1":{"95":1}}],["knowledge",{"0":{"98":1,"309":1,"352":1,"358":1,"442":1,"604":1,"625":1,"805":1,"821":1,"850":1,"851":1,"860":1},"1":{"54":1,"63":1,"98":2,"107":1,"116":1,"117":1,"177":1,"235":1,"267":1,"269":1,"278":1,"289":1,"290":1,"302":1,"309":1,"336":1,"348":1,"356":1,"362":1,"442":1,"595":1,"603":1,"604":1,"605":1,"625":1,"641":1,"680":1,"762":1,"821":1,"848":1,"850":1,"851":1,"860":1,"863":1,"864":1,"888":1,"892":2,"905":1,"908":1,"909":1,"940":1,"944":1,"954":1,"972":2,"981":1,"998":1,"1006":1,"1022":1,"1024":1,"1037":1,"1042":1,"1047":1,"1050":1},"2":{"63":1,"98":1,"358":1,"595":1,"605":1}}],["known",{"1":{"28":1,"251":1,"565":1,"568":1,"579":1,"580":1,"697":1,"889":1}}],["keirsey",{"1":{"801":1}}],["keen",{"1":{"480":1}}],["keeps",{"1":{"188":1,"406":1}}],["keeping",{"1":{"31":1,"237":1,"371":1,"757":1,"794":1}}],["keep",{"1":{"1":1,"63":1,"65":1,"152":1,"188":1,"207":1,"281":1,"295":1,"352":1,"642":1,"830":1,"843":1,"1006":1}}],["kernel",{"1":{"233":1},"2":{"233":1}}],["kegs",{"1":{"180":2}}],["keg",{"0":{"180":1}}],["keys",{"1":{"713":1}}],["keyboard",{"1":{"458":1,"620":1}}],["key",{"0":{"521":1,"878":1},"1":{"24":1,"67":1,"108":1,"113":1,"114":1,"206":1,"207":1,"211":1,"214":1,"232":1,"259":1,"260":1,"264":1,"268":1,"355":1,"358":1,"360":1,"376":1,"382":1,"383":1,"388":1,"393":1,"417":1,"443":1,"446":1,"447":1,"492":1,"494":1,"496":1,"499":1,"524":1,"551":1,"552":1,"554":1,"568":1,"571":1,"573":1,"575":1,"578":1,"581":1,"585":1,"625":1,"662":1,"667":1,"680":1,"683":1,"690":1,"693":1,"724":1,"730":1,"753":1,"756":1,"759":1,"782":1,"795":1,"804":1,"805":1,"808":1,"827":1,"834":1,"838":1,"847":1,"869":1,"870":1,"898":1,"912":1,"952":1,"956":1,"962":1,"964":1,"966":1,"975":1,"980":1,"983":1,"984":1,"993":1,"997":1,"1003":1,"1006":1,"1010":1}}],["yelp",{"0":{"1005":1,"1017":1},"1":{"1005":1,"1017":2},"2":{"1017":1}}],["yes",{"1":{"845":1}}],["yet",{"1":{"269":2,"278":2,"358":1,"588":1,"647":1}}],["year",{"0":{"76":1,"1012":1},"1":{"96":1,"165":1,"202":1,"368":1,"677":1,"1000":1,"1012":1,"1033":1,"1049":1}}],["yearly",{"1":{"41":1}}],["years",{"1":{"28":1,"159":1,"181":1,"185":1,"203":1,"226":1,"343":1,"450":1,"456":1,"948":1,"1048":1}}],["yarn",{"0":{"202":1},"1":{"202":1,"452":1}}],["young",{"1":{"1027":1}}],["youthful",{"0":{"1027":1}}],["youtube",{"1":{"406":1,"625":1}}],["you",{"0":{"37":1,"71":1,"323":1,"816":1,"855":1},"1":{"3":1,"33":1,"36":4,"41":2,"45":2,"49":1,"61":1,"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"90":1,"93":1,"96":1,"112":2,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"163":2,"188":1,"191":1,"207":4,"264":1,"297":1,"306":1,"307":1,"324":1,"327":1,"331":1,"332":1,"341":1,"344":3,"347":2,"349":1,"350":1,"361":1,"367":1,"369":1,"413":1,"427":1,"430":2,"436":1,"468":1,"495":1,"497":1,"530":3,"588":2,"612":1,"613":1,"623":2,"638":1,"735":1,"767":1,"847":1,"855":2,"868":1,"894":2,"900":1,"902":2,"937":1,"980":2}}],["yours",{"1":{"341":1}}],["yourself",{"1":{"96":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"578":1,"937":1}}],["your",{"0":{"3":1,"62":1,"98":1,"163":1,"304":1,"361":1,"408":1,"476":1,"626":1,"786":1,"852":1,"927":1,"928":2,"930":1,"931":1,"933":1},"1":{"7":2,"33":1,"35":2,"40":1,"41":1,"45":1,"61":1,"62":2,"99":1,"101":1,"112":1,"119":1,"163":1,"189":1,"190":1,"204":1,"208":1,"288":1,"304":2,"306":3,"331":1,"337":1,"344":1,"354":1,"370":1,"373":1,"385":1,"394":1,"408":1,"413":1,"417":1,"419":1,"427":1,"430":1,"454":1,"460":1,"475":1,"480":1,"495":1,"497":1,"521":1,"526":1,"530":2,"567":1,"574":1,"576":1,"581":1,"650":1,"651":1,"671":1,"747":1,"753":1,"765":1,"800":1,"830":2,"834":2,"836":1,"839":1,"852":1,"856":1,"857":1,"859":1,"865":1,"894":1,"898":1,"910":1,"911":1,"912":1,"927":1,"928":1,"930":1,"933":1,"940":1,"956":1,"963":1,"981":1,"985":1,"989":1,"992":1}}],["32b",{"0":{"1016":1},"1":{"1016":1}}],["38",{"0":{"1012":1},"1":{"1012":1}}],["39",{"0":{"1008":1},"1":{"1008":1}}],["37",{"0":{"1007":1},"1":{"1007":1}}],["3333",{"3":{"902":1}}],["3d",{"1":{"515":2,"661":1}}],["3rd",{"1":{"294":1}}],["3",{"0":{"119":1,"224":1,"255":1,"258":1,"262":1,"282":1,"650":1,"675":1,"1001":1,"1030":1},"1":{"15":1,"89":1,"255":1,"262":1,"272":1,"274":2,"276":1,"515":1,"631":1,"708":1,"990":1}}],["vu",{"0":{"1026":1},"1":{"1026":1}}],["vue",{"0":{"475":1},"1":{"475":1,"491":1,"894":1}}],["vy",{"0":{"1025":1},"1":{"1025":1}}],["vms",{"1":{"935":1}}],["v",{"1":{"708":1}}],["vr",{"1":{"375":1,"1004":1}}],["v0",{"1":{"364":1}}],["v2",{"1":{"290":1,"1015":1}}],["vc",{"0":{"257":1,"263":1},"1":{"263":1}}],["vs",{"0":{"475":2,"571":1,"573":1,"575":1,"581":1,"633":1,"724":1,"726":3,"925":1,"934":1,"987":1},"1":{"245":1,"417":2,"672":1,"699":1,"817":2}}],["vhbien",{"3":{"234":1,"562":1,"563":1}}],["v4",{"1":{"205":1}}],["v7",{"1":{"205":1}}],["v3",{"1":{"178":1}}],["vo",{"0":{"1046":1},"1":{"1046":1}}],["voting",{"1":{"594":1}}],["volume",{"0":{"239":1,"267":1,"290":1,"294":1},"1":{"239":1,"294":1,"708":1}}],["voconic",{"0":{"174":1},"1":{"174":1}}],["vouchers",{"1":{"160":1}}],["voice",{"0":{"104":1},"1":{"104":1,"250":1,"283":1,"1004":1}}],["vault",{"0":{"713":1},"1":{"713":1}}],["variety",{"1":{"642":1,"708":1,"999":1}}],["varies",{"1":{"607":1}}],["variable",{"0":{"486":1},"1":{"486":1},"2":{"486":1}}],["variables",{"1":{"406":1,"902":1}}],["variations",{"1":{"451":1,"486":1,"913":1}}],["various",{"1":{"103":1,"345":1,"362":1,"381":1,"411":1,"433":1,"489":1,"497":1,"595":1,"890":1}}],["valid",{"1":{"829":1}}],["validate",{"0":{"903":1},"1":{"903":1}}],["validators",{"1":{"594":1}}],["validation",{"0":{"461":1},"1":{"284":1,"457":1,"461":1,"737":1},"2":{"903":1}}],["valuing",{"1":{"577":1}}],["valuable",{"1":{"108":1,"118":1,"119":1,"120":1,"356":1,"420":1,"440":1,"815":1,"817":1,"850":1,"944":1}}],["valued",{"1":{"289":1}}],["value",{"0":{"299":1,"1046":1},"1":{"29":1,"30":1,"54":1,"62":2,"98":1,"194":2,"313":1,"323":1,"333":1,"336":1,"690":1,"702":1,"802":1,"818":1,"861":1,"873":2,"916":1,"1029":1,"1046":1}}],["values",{"0":{"1029":1},"1":{"24":1,"37":1,"299":1,"332":1,"365":1,"447":1,"579":1},"2":{"1029":1}}],["velocity",{"0":{"818":1},"1":{"708":1}}],["vendor",{"1":{"626":1}}],["ventures",{"0":{"38":1,"181":1,"182":1},"1":{"38":1,"181":1},"2":{"38":1,"181":1,"182":1}}],["veteran",{"1":{"273":1}}],["vexations",{"0":{"230":1}}],["vectordb",{"0":{"418":1},"1":{"418":1}}],["vector",{"0":{"222":1,"230":1,"891":1,"974":1},"1":{"222":1,"230":1,"409":1,"410":1,"418":1,"432":1,"891":3},"2":{"409":1,"418":1,"433":1,"891":1,"892":1,"974":1}}],["verbs",{"1":{"835":1}}],["vercel",{"0":{"745":1},"1":{"422":1,"745":2}}],["vertical",{"1":{"379":1}}],["versus",{"0":{"482":1}}],["versatile",{"1":{"275":1}}],["versatility",{"1":{"223":1,"890":1}}],["versioning",{"1":{"557":1}}],["version",{"1":{"115":1,"178":1,"229":1,"287":1,"386":1,"479":2,"647":1,"667":1,"783":1,"989":1}}],["very",{"1":{"7":2,"270":1,"291":1}}],["ve",{"1":{"102":1,"194":1,"271":1,"337":1,"345":1,"381":1,"980":1}}],["vi",{"0":{"1045":1},"1":{"1045":1}}],["vibrant",{"1":{"1027":1}}],["vincent",{"3":{"960":1}}],["vivid",{"1":{"832":1,"835":1,"991":1}}],["video",{"0":{"527":1},"1":{"527":1},"2":{"527":1}}],["videos",{"1":{"236":1,"625":1}}],["vim",{"0":{"526":1,"777":1},"1":{"526":4,"777":2},"2":{"526":1}}],["via",{"0":{"460":1},"1":{"1007":1}}],["virtual",{"0":{"491":1},"1":{"424":1,"476":1,"491":2,"650":1},"2":{"491":1}}],["virtualization",{"2":{"234":1,"562":1,"563":1,"564":1}}],["views",{"1":{"796":1,"971":1}}],["view",{"0":{"620":1,"622":1,"641":1,"971":1},"1":{"267":1,"385":1,"620":1,"622":1,"971":1},"2":{"241":1,"971":1}}],["viewing",{"1":{"221":1}}],["vietnamese",{"0":{"171":1,"177":1},"1":{"177":1,"625":1}}],["vietnam",{"0":{"8":1,"360":1},"1":{"8":1,"106":1,"161":1,"171":1,"311":1,"347":1,"360":2},"2":{"177":1}}],["vital",{"1":{"309":1,"437":1}}],["vitally",{"1":{"31":1}}],["vitejs",{"0":{"513":1},"1":{"513":1},"2":{"513":1}}],["vite",{"1":{"205":1,"207":1}}],["vitran",{"3":{"138":1,"144":1}}],["visibility",{"1":{"460":1,"699":1}}],["visiting",{"1":{"368":1}}],["visit",{"1":{"118":1,"119":1,"120":1,"311":1}}],["visitor",{"0":{"105":1,"612":1},"1":{"105":1,"612":1},"2":{"612":1}}],["visceral",{"1":{"377":1}}],["visually",{"1":{"249":1}}],["visualize",{"1":{"251":1,"679":1,"695":1}}],["visualizations",{"1":{"958":1}}],["visualization",{"1":{"245":1,"727":1}}],["visualizing",{"0":{"245":1}}],["visual",{"0":{"143":1},"1":{"52":1,"380":1,"389":1,"398":1,"1033":1}}],["r3f",{"0":{"661":1}}],["rdbms",{"1":{"975":1}}],["rd",{"2":{"639":1}}],["rjim",{"3":{"609":1}}],["rtl",{"1":{"472":1}}],["rscs",{"1":{"466":1}}],["rlhf",{"0":{"441":1},"1":{"441":2}}],["rl",{"1":{"416":2}}],["r1",{"0":{"262":1},"1":{"262":1}}],["rfc",{"1":{"199":1},"2":{"199":1},"4":{"199":1}}],["rfcs",{"0":{"199":1}}],["rockstar",{"1":{"1049":1}}],["rock",{"1":{"931":1,"932":1}}],["roadmap",{"0":{"869":1},"1":{"869":1}}],["roadmaps",{"1":{"296":1}}],["rotate",{"1":{"800":1}}],["rotating",{"1":{"619":1}}],["roger",{"1":{"706":1}}],["row",{"1":{"639":1,"714":1}}],["root",{"1":{"314":1}}],["robin",{"1":{"994":1}}],["robotaxi",{"0":{"261":1},"1":{"261":1}}],["robustly",{"1":{"969":1}}],["robust",{"0":{"203":1},"1":{"158":1,"172":1,"216":1,"217":1,"219":1,"238":1,"242":1,"248":1,"626":1,"889":1,"915":1}}],["rollups",{"1":{"939":1}}],["rollup",{"0":{"603":1},"2":{"583":1,"591":1}}],["rollouts",{"1":{"400":1,"670":1,"744":1}}],["rolling",{"1":{"123":1}}],["roles",{"1":{"192":1,"297":1,"492":1,"759":1,"800":1,"965":1,"1049":1}}],["role",{"0":{"958":1},"1":{"144":1,"214":1,"231":1,"238":1,"249":1,"275":1,"282":1,"285":2,"325":1,"410":1,"414":1,"447":1,"544":1,"559":1,"589":1}}],["roughly",{"1":{"990":1}}],["routing",{"1":{"472":1,"650":1}}],["routines",{"1":{"339":1,"577":1}}],["routine",{"0":{"50":1},"1":{"1018":1}}],["route",{"0":{"466":1},"1":{"505":1}}],["router",{"1":{"205":1,"495":1}}],["rounding",{"1":{"633":1}}],["roundup",{"1":{"205":1,"493":1}}],["rounded",{"1":{"135":1}}],["round",{"1":{"74":1,"75":1,"164":1}}],["raptor",{"0":{"883":1},"1":{"883":1}}],["rapidly",{"0":{"448":1},"1":{"440":1,"1032":1}}],["rapid",{"1":{"274":1,"449":1}}],["race",{"0":{"790":2},"1":{"653":1,"784":1,"790":2}}],["rare",{"1":{"565":1}}],["rabbitmq",{"0":{"528":1},"1":{"528":1}}],["raw",{"1":{"415":1,"633":1}}],["rate",{"0":{"769":1},"1":{"700":1,"769":1,"1010":1}}],["rates",{"1":{"388":1,"628":1,"629":1,"881":1}}],["rationals",{"1":{"801":1}}],["ratio",{"1":{"338":1,"428":2}}],["rather",{"0":{"704":1},"1":{"325":1,"335":1,"336":1,"834":1,"876":1,"951":1,"954":1}}],["radio",{"0":{"404":1,"659":1},"2":{"482":1}}],["radical",{"1":{"299":1}}],["radix",{"0":{"105":1,"113":1,"654":1},"1":{"105":1,"113":2,"654":2}}],["radar",{"0":{"48":1,"267":1,"290":1,"294":1,"308":1,"322":1},"1":{"48":1,"93":1,"281":2,"290":1,"308":1},"2":{"267":1,"281":1,"290":1,"294":1,"322":1,"358":1,"404":1,"452":1,"632":1},"4":{"322":1}}],["ranging",{"1":{"1001":1}}],["ranges",{"1":{"731":1,"802":1}}],["range",{"1":{"104":1,"327":1,"428":1}}],["randomness",{"0":{"860":1},"1":{"860":1}}],["random",{"1":{"863":1},"2":{"636":2}}],["ranking",{"0":{"104":1,"431":1},"1":{"104":1,"360":1,"431":2}}],["rag",{"0":{"104":1,"108":1,"116":1,"431":1,"432":1,"437":1,"442":1,"892":1},"1":{"104":1,"108":1,"264":1,"431":2,"437":2,"442":2,"892":1},"2":{"431":1,"432":1,"437":1,"442":1,"892":1}}],["raises",{"1":{"98":1}}],["rigid",{"0":{"854":1},"1":{"854":1}}],["right",{"0":{"163":1,"475":1},"1":{"45":1,"120":1,"203":1,"248":1,"342":1,"387":1,"417":1,"541":1,"816":1}}],["risk",{"1":{"404":1,"588":1,"878":1}}],["risks",{"0":{"435":1},"1":{"238":1,"407":1,"435":1,"700":1,"701":1,"748":1,"778":1,"812":1,"828":1}}],["rise",{"0":{"260":1,"449":1},"1":{"271":1,"272":1,"275":1,"411":1,"444":1,"449":1,"513":1}}],["rising",{"1":{"56":1,"273":1}}],["richer",{"1":{"733":1}}],["rich",{"0":{"739":1},"1":{"201":1,"742":1,"811":1,"840":1}}],["ride",{"0":{"161":1},"1":{"100":1,"161":1},"2":{"161":1}}],["ruby",{"0":{"248":1},"1":{"248":2}}],["rushing",{"1":{"820":1}}],["rush",{"1":{"230":1}}],["russ",{"1":{"226":1}}],["rust",{"0":{"135":1,"543":1,"544":1,"545":1},"1":{"135":1,"469":1,"480":1,"543":1,"544":1,"545":2,"582":1,"781":1,"869":1},"2":{"278":1,"480":1,"543":1,"544":1,"545":1,"674":1,"675":1,"676":1,"677":1,"678":1},"4":{"543":1,"544":1,"545":1}}],["rundown",{"1":{"413":1}}],["runs",{"0":{"330":1}}],["runtime",{"1":{"225":1,"746":1,"781":1}}],["run",{"0":{"766":1},"1":{"157":1,"436":1,"453":1,"543":1,"750":1,"766":1,"777":1,"987":1}}],["running",{"1":{"39":1,"229":1,"270":1,"469":1,"542":1,"928":1}}],["rules",{"0":{"31":1,"928":1},"1":{"152":1,"644":1}}],["rule",{"0":{"881":1},"1":{"10":1,"881":1,"943":1}}],["r",{"0":{"365":1},"1":{"6":1,"281":1,"365":2}}],["rewrite",{"0":{"987":1},"1":{"896":1,"987":1},"2":{"987":1}}],["rewoo",{"0":{"888":1},"1":{"888":1}}],["rewording",{"1":{"862":1}}],["rewarded",{"1":{"289":1}}],["rewards",{"1":{"153":1,"307":1}}],["reward",{"0":{"356":1,"362":1,"367":1,"447":1},"1":{"47":1,"64":1,"316":1,"356":1,"441":1,"447":1},"2":{"356":1}}],["reentrancy",{"1":{"698":1}}],["registration",{"1":{"913":1}}],["regardless",{"1":{"588":1}}],["regulatory",{"1":{"551":1}}],["regularly",{"1":{"305":1,"311":1}}],["regular",{"0":{"253":1},"1":{"588":1}}],["rerank",{"1":{"412":1}}],["reuse",{"0":{"655":1},"1":{"655":1,"668":2,"906":1}}],["reusing",{"1":{"409":1}}],["reusability",{"0":{"668":1},"1":{"0":1,"544":1,"913":1}}],["reusable",{"1":{"0":1,"201":1,"283":1,"389":1,"459":1,"487":1,"523":1,"798":1}}],["rebase",{"1":{"672":1}}],["rebound",{"1":{"270":1}}],["rebuilt",{"1":{"254":1}}],["rebuild",{"1":{"167":1}}],["renderers",{"1":{"515":1}}],["renderer",{"1":{"515":1}}],["renderprops",{"0":{"459":1}}],["render",{"0":{"454":1,"895":1},"1":{"251":1,"459":1,"466":1,"503":1,"655":1,"895":1},"2":{"895":1}}],["rendering",{"0":{"506":1},"1":{"209":1,"241":1,"387":1,"466":1,"491":1,"506":3,"511":2,"895":1},"2":{"895":1}}],["renaissance",{"0":{"221":1}}],["rental",{"1":{"180":1}}],["rephrasing",{"1":{"861":1}}],["repl",{"0":{"777":1},"1":{"777":1}}],["replication",{"1":{"719":1,"915":1}}],["replicated",{"1":{"630":4}}],["replicas",{"1":{"630":2}}],["replaces",{"1":{"872":1}}],["replace",{"1":{"324":1,"470":1}}],["reproducibility",{"1":{"929":1}}],["reproducible",{"1":{"558":1,"559":1,"921":1,"935":1}}],["reproduce",{"0":{"622":1}}],["represent",{"0":{"805":1},"1":{"601":1}}],["represents",{"1":{"37":1,"287":1,"628":1,"629":1,"884":1}}],["repeating",{"1":{"831":1}}],["repeated",{"1":{"444":1,"824":1}}],["repetitive",{"1":{"184":1,"655":1}}],["repository",{"1":{"821":1,"907":1,"918":1,"972":1,"1005":1}}],["repositories",{"0":{"821":1},"1":{"402":1,"657":1,"918":1}}],["repos",{"1":{"747":1}}],["repo",{"0":{"462":1,"918":1}}],["reported",{"1":{"764":1}}],["report",{"0":{"204":1,"205":1,"206":1,"207":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"360":1,"492":1,"493":1,"494":1,"495":1,"496":1,"996":1,"999":1,"1006":1,"1009":1,"1012":1},"1":{"204":1,"207":2,"269":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"293":1,"351":1,"360":2,"494":1,"996":1,"1009":1},"2":{"204":1,"205":1,"206":1,"207":1,"209":1,"255":2,"256":2,"257":2,"258":2,"259":2,"260":2,"261":2,"262":2,"263":2,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"360":1,"368":1,"492":1,"493":1,"494":1,"495":1,"496":1,"1013":2,"1014":2},"4":{"204":1,"205":1,"206":1,"207":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"492":1,"493":1,"494":1,"495":1,"496":1}}],["reports",{"0":{"197":1,"246":1},"1":{"197":1,"246":1,"305":1,"373":1,"553":1,"628":1}}],["reporting",{"0":{"187":1,"973":1},"1":{"187":1,"628":1,"760":1,"973":1},"2":{"197":1}}],["redirect",{"0":{"987":1},"1":{"785":1,"987":1},"2":{"987":1}}],["redis",{"0":{"690":1,"729":1,"769":1,"957":1},"1":{"690":2,"729":1,"769":1,"957":2,"984":1}}],["redeployments",{"1":{"746":1}}],["redesigning",{"0":{"170":1}}],["redundancies",{"0":{"922":1}}],["redux",{"1":{"691":1}}],["reduction",{"0":{"261":1},"1":{"261":1}}],["reducers",{"0":{"691":1},"1":{"691":1,"726":1}}],["reduces",{"1":{"241":1,"346":1,"404":1,"595":1,"685":1,"857":1,"939":1}}],["reduce",{"1":{"180":1,"250":1,"338":1,"409":1,"412":1,"445":1,"631":1,"659":1,"689":1,"700":1,"725":1,"744":1,"748":1,"750":1,"751":1,"757":1,"767":1,"775":1,"776":1,"802":1,"828":1,"849":1}}],["reducing",{"1":{"174":1,"243":1,"385":1,"548":1,"711":1,"728":1,"756":1,"772":1,"811":1,"997":1}}],["redraw",{"1":{"511":1}}],["red",{"0":{"331":1},"1":{"331":1}}],["reminders",{"0":{"862":1},"1":{"862":1}}],["remix",{"0":{"482":1},"1":{"482":1}}],["remains",{"1":{"830":1}}],["remaining",{"1":{"755":1}}],["remain",{"1":{"351":1}}],["removal",{"0":{"642":1}}],["remove",{"0":{"516":1},"1":{"516":1}}],["removing",{"1":{"339":1,"415":1,"511":1}}],["remotely",{"1":{"139":1,"1025":1}}],["remote",{"0":{"1":1,"56":1,"188":1,"626":1,"656":1,"965":1,"1030":1},"1":{"1":1,"56":1,"310":1,"438":1,"656":1,"785":1,"963":1,"1030":1,"1038":1,"1045":1},"2":{"1":1,"36":1,"56":1,"102":1,"188":1,"310":1,"311":1,"1030":1,"1045":1}}],["remembers",{"1":{"163":1}}],["relying",{"1":{"637":1,"736":1,"740":1,"812":1}}],["rely",{"1":{"573":1,"638":1,"737":1,"918":1}}],["reloaded",{"1":{"477":1}}],["relevance",{"1":{"431":1}}],["relevant",{"1":{"418":1,"431":1}}],["releases",{"0":{"227":1},"1":{"399":1,"400":1,"402":1,"746":1}}],["release",{"0":{"536":1},"1":{"209":1,"222":1,"227":1,"374":1,"536":1,"537":1,"644":1,"748":1}}],["released",{"1":{"202":1,"209":1}}],["reliability",{"1":{"404":1,"415":1,"431":1,"707":1,"744":1,"770":1,"787":1},"2":{"955":1}}],["reliable",{"0":{"809":1,"955":1},"1":{"159":1,"399":1,"401":1,"457":1,"594":1,"715":1,"785":1,"829":1,"955":1}}],["relatable",{"1":{"842":1,"993":1}}],["relate",{"1":{"946":1}}],["relates",{"0":{"636":1}}],["related",{"1":{"406":1,"476":1,"768":1,"923":1}}],["relational",{"1":{"485":1,"975":1}}],["relationship",{"1":{"326":1}}],["relationships",{"1":{"138":1,"197":1,"305":1,"573":1,"634":1}}],["relation",{"1":{"200":1,"323":1}}],["relay",{"0":{"164":1},"1":{"164":2}}],["relaxed",{"1":{"109":1}}],["revamping",{"1":{"265":1,"292":1}}],["revolutionize",{"1":{"929":1}}],["revolutionizing",{"0":{"924":1}}],["revolution",{"0":{"231":1}}],["revert",{"0":{"696":1},"1":{"696":1,"699":1}}],["reveal",{"1":{"844":1,"856":1,"860":1}}],["reveals",{"1":{"839":1,"859":1}}],["revealing",{"1":{"605":1,"705":1,"761":1,"806":1,"846":1}}],["revealed",{"1":{"118":1,"120":1}}],["revenue",{"1":{"171":1,"554":2}}],["reviews",{"1":{"365":1,"406":1,"689":1,"1000":1}}],["reviewing",{"1":{"199":1}}],["review",{"0":{"90":1,"101":1,"194":1,"365":1},"1":{"90":1,"103":1,"625":1,"672":1},"2":{"365":1}}],["reinforce",{"1":{"332":1}}],["reinforced",{"1":{"238":1}}],["reinforcement",{"0":{"416":1},"1":{"116":1,"416":1,"428":2,"434":1,"441":2,"447":1,"789":1,"964":1},"2":{"416":1,"428":1,"441":1,"447":1}}],["reimbursement",{"0":{"40":1},"1":{"40":1}}],["returns",{"1":{"588":1}}],["retention",{"1":{"554":1}}],["retain",{"0":{"450":1}}],["retail",{"0":{"632":1},"1":{"375":1,"632":1}}],["retrieving",{"1":{"431":1}}],["retrieved",{"1":{"431":1}}],["retrieve",{"1":{"418":1}}],["retrieval",{"0":{"108":1,"116":1,"883":1},"1":{"108":1,"431":1,"432":1,"442":1,"731":1,"883":1,"885":1,"892":1,"975":1},"2":{"883":1}}],["rethinking",{"1":{"100":1}}],["reject",{"1":{"79":1,"954":1}}],["rejection",{"0":{"79":1}}],["refreshes",{"1":{"971":1}}],["reformulating",{"1":{"852":1}}],["refactoring",{"1":{"972":1}}],["refactor",{"1":{"459":1}}],["refine",{"1":{"884":1}}],["refined",{"0":{"820":1}}],["refinement",{"0":{"434":1},"1":{"284":1,"434":1,"447":1}}],["refining",{"1":{"316":1,"412":1}}],["reflections",{"1":{"1012":1}}],["reflection",{"1":{"576":1}}],["reflective",{"1":{"377":1}}],["reflect",{"0":{"533":1},"1":{"265":1,"292":1,"332":1,"533":1}}],["reflects",{"1":{"56":1,"1020":1,"1021":1,"1022":1,"1023":1,"1027":1,"1032":1,"1038":1,"1042":1,"1046":1}}],["refueling",{"1":{"160":1}}],["references",{"1":{"615":1,"634":2}}],["reference",{"1":{"345":1,"381":1,"625":1}}],["refers",{"1":{"72":1}}],["referral",{"0":{"72":1},"1":{"72":1,"106":1,"554":1}}],["requiring",{"1":{"640":1}}],["requirements",{"1":{"213":1,"441":1,"445":1,"754":1,"759":1,"770":1}}],["requires",{"1":{"203":1,"351":1,"420":1,"442":1,"587":1}}],["require",{"0":{"696":1},"1":{"119":1,"275":1,"696":1,"699":1,"737":1}}],["required",{"0":{"743":1},"1":{"56":1,"89":1,"125":1,"886":1}}],["requests",{"0":{"223":1},"1":{"223":1,"454":1,"497":1,"613":1,"757":1,"769":1,"785":1,"989":1}}],["requesting",{"0":{"150":1}}],["request",{"0":{"2":1,"17":1,"672":1},"1":{"2":1,"17":1,"77":1,"150":1,"468":1,"613":3,"672":1}}],["reason",{"0":{"439":1,"561":1},"1":{"561":1}}],["reasoning",{"0":{"888":1,"950":1,"953":1,"954":1,"1015":1},"1":{"271":1,"442":1,"949":1,"953":1}}],["reasons",{"1":{"217":1}}],["reader",{"1":{"833":1}}],["readers",{"0":{"221":1},"1":{"221":1,"346":1,"351":1,"355":1,"831":1,"832":1,"835":1,"837":1,"839":1,"843":1,"992":1}}],["reading",{"1":{"690":1,"853":1,"862":1,"863":1}}],["read",{"0":{"853":1},"1":{"636":3}}],["reads",{"0":{"636":1},"2":{"636":2}}],["readability",{"1":{"379":1}}],["ready",{"1":{"181":1,"284":1,"978":1}}],["reapit",{"1":{"162":1}}],["reaching",{"1":{"445":1}}],["reach",{"1":{"158":1,"360":1}}],["reaction",{"1":{"837":1}}],["reactjs",{"0":{"459":1},"2":{"457":1,"459":1,"487":1,"501":1}}],["react",{"0":{"132":1,"139":1,"209":1,"439":1,"457":1,"466":1,"475":1,"479":1,"481":1,"487":1,"488":1,"501":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"655":1,"896":1,"900":1},"1":{"28":1,"139":1,"204":3,"205":1,"206":1,"207":1,"209":1,"273":1,"439":1,"457":3,"459":1,"464":1,"466":1,"472":1,"475":1,"476":1,"479":1,"481":2,"487":1,"488":1,"491":1,"492":1,"493":2,"494":1,"495":1,"496":2,"503":1,"504":1,"506":1,"507":1,"508":1,"509":1,"655":2,"661":1,"691":1,"778":1,"782":1,"894":1,"896":1,"900":1,"999":1,"1008":1},"2":{"456":1,"466":1,"470":1,"479":1,"488":1,"491":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"896":1,"900":1},"4":{"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"782":1}}],["really",{"0":{"647":1}}],["realistic",{"1":{"424":1,"618":1,"874":1}}],["reality",{"1":{"283":1}}],["realized",{"1":{"182":1}}],["real",{"0":{"162":1,"673":1,"776":1},"1":{"93":1,"95":1,"124":1,"175":1,"241":1,"249":1,"250":1,"252":1,"397":1,"462":1,"527":1,"590":1,"615":1,"621":1,"634":1,"637":1,"640":1,"643":1,"673":1,"738":1,"740":1,"741":1,"742":1,"743":1,"773":1,"776":1,"819":1,"822":1,"842":1,"844":1,"876":1,"885":1,"887":1,"958":1,"971":1,"972":1,"1018":1,"1037":1,"1046":1},"2":{"162":1,"241":1,"637":1}}],["realtime",{"0":{"1015":1},"1":{"40":1,"518":2,"1015":1},"2":{"1015":1}}],["resolution",{"1":{"764":1,"841":1}}],["resolving",{"1":{"517":1}}],["resourcestools",{"0":{"880":1}}],["resources",{"1":{"155":1,"177":1,"241":1,"414":1,"438":1,"553":1,"790":1,"880":1,"888":1,"978":1}}],["resource",{"0":{"191":1},"1":{"190":1,"191":1,"252":1,"445":1,"617":1,"785":1,"914":2},"2":{"24":1}}],["resetting",{"0":{"488":1}}],["reset",{"1":{"476":1}}],["researcher",{"1":{"816":1}}],["researchers",{"0":{"808":1,"829":1},"1":{"396":1,"703":1,"813":1,"829":1}}],["research",{"0":{"107":1,"396":1,"737":1,"740":1,"742":1,"804":1,"805":1,"806":1,"807":1,"813":2,"815":1,"817":1,"819":1,"821":1,"826":1,"828":1,"944":1,"949":1},"1":{"36":1,"52":1,"200":1,"235":1,"316":1,"351":1,"365":1,"376":1,"378":1,"396":2,"674":1,"675":1,"676":1,"677":1,"678":1,"704":1,"737":1,"741":1,"742":1,"804":1,"805":1,"806":1,"807":1,"808":1,"813":2,"815":1,"816":1,"817":1,"819":1,"821":1,"826":1,"828":1,"845":1,"876":1,"881":1,"890":1,"938":1,"944":1,"949":2,"950":1,"952":1,"954":1,"1000":1},"2":{"652":1,"673":1},"4":{"556":1,"557":1,"558":1,"559":1,"560":1,"921":1,"922":1,"923":1,"924":1,"925":1}}],["reshaping",{"1":{"259":1,"449":1}}],["restful",{"1":{"497":1}}],["restricts",{"1":{"467":1}}],["rest",{"0":{"221":1},"1":{"221":1}}],["resizes",{"1":{"622":1}}],["resilient",{"1":{"214":1,"360":1}}],["resistant",{"1":{"176":1}}],["resultbuilder",{"0":{"796":1},"1":{"796":1}}],["resulting",{"1":{"501":1}}],["result",{"1":{"284":1,"442":1,"1018":1}}],["results",{"1":{"203":1,"640":1}}],["resurgence",{"1":{"221":1}}],["resume",{"0":{"80":1}}],["response",{"1":{"422":1,"757":1,"975":1}}],["responses",{"1":{"406":1,"424":1,"447":1,"889":1}}],["responsive",{"1":{"380":1,"394":1,"496":1},"2":{"474":1}}],["responsibility",{"0":{"341":1},"1":{"340":1,"341":1,"411":1,"577":1,"693":1}}],["responsibilities",{"1":{"306":1}}],["responsible",{"1":{"138":1}}],["respecting",{"1":{"39":1}}],["re",{"0":{"104":1,"431":1},"1":{"31":1,"36":2,"96":2,"100":1,"104":1,"107":2,"139":1,"184":1,"207":1,"264":1,"279":1,"283":1,"293":1,"314":1,"322":1,"345":1,"351":1,"381":1,"431":3,"478":1,"987":1,"1017":1}}],["recycling",{"1":{"907":1}}],["recreate",{"1":{"622":1}}],["recreating",{"1":{"614":1}}],["recruiting",{"1":{"335":1}}],["recruiter",{"0":{"144":1}}],["recruitment",{"1":{"79":1}}],["recursive",{"1":{"478":1}}],["recursively",{"0":{"478":1}}],["recipe",{"1":{"366":1}}],["recapable",{"0":{"1010":1},"1":{"1010":1}}],["recap",{"1":{"363":1}}],["recapping",{"0":{"355":1},"1":{"355":2}}],["recent",{"1":{"116":1,"221":1,"279":1,"293":1,"323":1,"450":1}}],["receiver",{"1":{"613":1}}],["receive",{"1":{"28":1,"124":1,"304":1}}],["recommendation",{"1":{"1005":1,"1017":1}}],["recommended",{"1":{"89":1,"200":1}}],["reconciler",{"1":{"896":2}}],["reconciliation",{"1":{"896":1}}],["reconstructing",{"0":{"254":1}}],["recognition",{"1":{"565":1,"997":1}}],["recognized",{"1":{"356":1,"1049":1}}],["recognize",{"1":{"325":1}}],["recovery",{"0":{"239":1},"1":{"239":1}}],["records",{"0":{"753":1},"1":{"669":1,"682":1,"753":2,"768":1}}],["recording",{"0":{"366":1},"2":{"366":1}}],["record",{"0":{"356":1,"669":1},"1":{"15":1,"366":1}}],["hmhoang13",{"3":{"970":1}}],["hdfs",{"0":{"719":1},"1":{"710":1,"719":1,"724":1}}],["hsl",{"0":{"517":1},"1":{"517":1},"2":{"517":1}}],["hq",{"1":{"311":1}}],["hypotheses",{"1":{"950":1,"954":1}}],["hype",{"0":{"444":1},"1":{"271":1}}],["hyperledger",{"0":{"596":1},"1":{"596":1}}],["hyperliquid",{"0":{"260":1}}],["hypermedia",{"1":{"484":1}}],["hyper",{"0":{"287":1},"1":{"287":1}}],["hypertables",{"0":{"253":1}}],["hydration",{"0":{"901":1},"1":{"901":1}}],["hybrid",{"0":{"310":1,"999":1,"1004":1,"1006":1,"1037":1},"1":{"432":2,"640":1,"999":1,"1004":1,"1006":1,"1012":1,"1037":1},"2":{"153":1,"640":1,"1037":1}}],["htmx",{"0":{"484":1},"1":{"484":1},"2":{"278":1,"484":1}}],["htmlcanvaselement",{"1":{"515":1}}],["html",{"0":{"208":1,"473":1},"1":{"208":1,"455":1,"473":1,"484":2,"515":6,"897":1},"2":{"208":1,"458":1,"471":1,"473":1}}],["https",{"1":{"480":1,"511":1,"515":6,"631":1,"657":1}}],["http",{"0":{"223":1,"535":1},"1":{"223":1,"518":1},"2":{"987":1}}],["hthai2201",{"3":{"204":1,"205":1,"494":1,"495":1,"496":1,"497":1}}],["horizons",{"0":{"1038":1}}],["horizontal",{"1":{"379":1}}],["ho",{"0":{"1031":1},"1":{"1031":1}}],["hoai",{"0":{"1024":1},"1":{"1024":1}}],["hoang",{"0":{"1027":1,"1035":1},"1":{"1000":1,"1005":1,"1027":1,"1035":1},"3":{"499":1}}],["hoangnnh",{"3":{"244":1,"405":1,"411":1,"421":1,"423":1,"424":1,"431":1,"439":1,"442":1,"445":1,"635":1,"888":1,"889":1,"892":1}}],["honest",{"1":{"704":1}}],["honor",{"1":{"91":1}}],["homogeneous",{"1":{"702":1}}],["homepage",{"1":{"867":1}}],["home",{"0":{"51":1,"295":1},"1":{"227":1,"311":1,"495":1},"2":{"295":1,"314":1,"867":1}}],["hocs",{"1":{"503":1}}],["hoc",{"0":{"459":1},"1":{"459":1}}],["hooked",{"1":{"843":1}}],["hooks",{"1":{"457":1,"459":1,"481":1,"507":2,"655":1,"782":1},"2":{"488":1,"900":1}}],["hook",{"0":{"459":1,"507":1},"1":{"457":1,"470":1,"479":1,"503":1},"2":{"507":1}}],["hosted",{"1":{"666":1}}],["host",{"1":{"650":1}}],["hosting",{"1":{"380":1,"417":1,"493":1}}],["hosts",{"1":{"223":1}}],["hospitals",{"0":{"179":1},"1":{"179":1}}],["hospitality",{"2":{"171":1}}],["hotels",{"0":{"171":1},"1":{"171":1}}],["hope",{"1":{"96":1,"269":1,"278":1,"420":1}}],["hound",{"1":{"750":1}}],["hour",{"1":{"847":1,"998":1,"999":1,"1009":1}}],["hourly",{"1":{"318":1}}],["hours",{"0":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"318":1,"366":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1},"1":{"89":1,"104":1,"107":1,"109":1,"111":1,"112":1,"117":1,"996":1,"1000":1,"1001":1,"1004":1,"1005":1},"2":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1}}],["house",{"1":{"40":1,"161":1}}],["holistic",{"0":{"911":1,"998":1},"1":{"911":1,"912":1,"998":1}}],["holiday",{"0":{"85":1},"1":{"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"191":1}}],["hollow",{"3":{"902":1}}],["hollywood",{"0":{"627":1},"1":{"627":1,"963":1}}],["holds",{"1":{"333":1}}],["hold",{"1":{"98":1,"207":1,"358":1,"916":1}}],["holdings",{"1":{"62":1}}],["however",{"1":{"36":1,"411":1,"439":1,"450":1,"511":1,"888":1,"892":1}}],["how",{"0":{"30":1,"39":1,"45":1,"58":1,"61":1,"62":1,"187":1,"197":1,"210":1,"218":1,"285":1,"287":1,"320":1,"336":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"353":1,"354":1,"365":1,"366":1,"367":1,"370":1,"390":1,"400":1,"401":1,"419":1,"552":1,"563":1,"624":1,"625":1,"636":1,"638":1,"721":1,"764":1,"765":1,"766":1,"816":1,"871":1,"908":1,"996":1},"1":{"11":1,"16":1,"18":1,"23":1,"31":1,"32":1,"33":1,"38":1,"42":1,"48":1,"49":1,"50":1,"51":1,"59":1,"62":2,"64":1,"150":1,"152":1,"153":1,"169":1,"187":1,"189":1,"193":1,"194":1,"197":1,"198":2,"210":1,"211":1,"212":1,"213":1,"233":1,"237":1,"238":1,"244":1,"246":1,"248":2,"250":1,"251":2,"253":1,"254":1,"265":1,"270":2,"272":1,"275":1,"281":2,"282":1,"283":2,"285":1,"288":2,"292":1,"297":1,"302":1,"303":1,"305":2,"307":2,"308":1,"309":1,"310":1,"332":1,"334":1,"347":1,"348":1,"350":1,"353":1,"354":1,"356":1,"357":1,"361":1,"366":1,"367":1,"368":1,"370":1,"372":1,"375":1,"377":1,"378":1,"380":1,"384":1,"385":1,"387":1,"389":1,"391":1,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"406":3,"408":1,"409":1,"410":1,"413":2,"414":1,"416":1,"417":1,"418":1,"427":1,"429":1,"430":1,"432":3,"433":1,"436":1,"437":2,"438":1,"440":1,"444":1,"449":2,"451":1,"459":1,"462":1,"464":1,"469":1,"470":1,"471":1,"472":1,"476":2,"478":1,"483":1,"487":1,"504":1,"516":1,"520":1,"524":1,"530":1,"535":1,"540":1,"545":1,"548":1,"550":1,"551":1,"552":1,"553":1,"554":1,"560":1,"563":1,"566":1,"567":1,"569":1,"570":1,"572":1,"573":1,"574":2,"575":1,"576":1,"577":1,"583":1,"584":1,"585":1,"587":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"596":1,"597":1,"598":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"608":2,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"631":1,"632":1,"633":1,"639":1,"640":1,"641":1,"643":1,"645":1,"646":1,"648":1,"649":1,"650":1,"652":1,"653":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":1,"661":1,"663":1,"665":1,"668":1,"669":1,"671":1,"673":1,"681":1,"683":1,"684":1,"685":1,"686":1,"689":1,"690":1,"691":1,"694":1,"695":1,"696":1,"697":1,"700":1,"704":1,"705":1,"706":1,"707":1,"708":1,"710":1,"711":1,"712":2,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"720":1,"721":1,"722":1,"724":1,"725":1,"726":1,"728":1,"729":1,"730":1,"731":1,"732":1,"734":1,"735":1,"736":1,"739":1,"741":1,"742":1,"743":1,"744":1,"745":1,"747":1,"750":1,"751":1,"752":1,"754":1,"755":1,"756":1,"757":1,"758":1,"759":1,"760":1,"762":1,"763":1,"765":1,"766":1,"767":1,"768":1,"769":1,"770":1,"771":1,"772":1,"773":1,"775":1,"776":1,"777":1,"778":1,"779":1,"780":1,"783":1,"784":1,"785":1,"786":1,"787":1,"790":1,"791":1,"792":1,"793":1,"795":1,"796":1,"797":1,"798":1,"799":1,"801":1,"802":1,"803":1,"804":1,"805":1,"808":1,"813":1,"814":1,"816":1,"817":1,"821":1,"822":1,"824":1,"826":1,"828":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":1,"839":1,"842":1,"844":1,"845":1,"848":1,"850":1,"852":1,"853":1,"854":1,"855":1,"856":1,"860":1,"861":1,"863":1,"864":1,"865":1,"866":1,"871":1,"873":1,"876":1,"877":1,"879":1,"887":1,"898":1,"905":1,"906":1,"908":1,"909":1,"911":1,"914":1,"921":1,"922":1,"924":1,"926":1,"929":1,"930":1,"932":1,"933":1,"936":1,"938":1,"939":1,"943":1,"946":1,"947":1,"948":1,"955":1,"957":1,"958":1,"966":1,"967":1,"968":1,"973":1,"976":1,"979":1,"980":1,"987":1,"991":1,"994":1,"996":1,"1006":1,"1017":1,"1019":1,"1020":1,"1023":1,"1026":1,"1028":1,"1029":1,"1030":1,"1037":1,"1038":1,"1039":1,"1040":1},"4":{"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"906":1,"907":1,"908":1}}],["haproxy",{"1":{"650":1}}],["happier",{"1":{"1018":1}}],["happiness",{"1":{"336":1}}],["happens",{"0":{"948":1},"1":{"324":1,"328":1,"468":1,"477":1,"900":1}}],["happen",{"0":{"285":1},"1":{"342":1}}],["happening",{"1":{"207":1,"330":1}}],["happy",{"1":{"101":1}}],["haongo1",{"3":{"582":1,"586":1,"971":1}}],["habits",{"1":{"571":1,"577":1,"849":1}}],["having",{"0":{"764":1},"1":{"405":1,"892":1}}],["have",{"0":{"804":1},"1":{"31":1,"90":1,"91":1,"93":1,"121":1,"136":1,"182":1,"186":1,"265":2,"270":1,"287":1,"292":2,"311":1,"320":1,"327":1,"343":1,"355":1,"368":1,"411":1,"442":1,"470":2,"501":1,"512":1,"529":1,"631":1,"888":1,"902":1,"978":1,"990":1,"1035":1}}],["hacked",{"0":{"262":1},"1":{"262":1}}],["hacks",{"1":{"260":1}}],["hack",{"0":{"255":1},"1":{"255":1}}],["hacking",{"0":{"223":1},"1":{"223":1,"521":1}}],["harnessing",{"0":{"884":1}}],["harnesses",{"1":{"250":1}}],["harming",{"1":{"810":1}}],["hardly",{"1":{"343":1}}],["hard",{"1":{"338":1,"631":1,"761":1}}],["hardening",{"0":{"238":1}}],["harder",{"1":{"201":1}}],["half",{"0":{"205":1,"496":1},"1":{"205":1,"496":1,"622":1}}],["hadoop",{"0":{"708":1,"719":1},"1":{"708":1,"718":1,"719":1,"722":1,"723":1},"2":{"978":1}}],["had",{"1":{"185":1,"480":1,"888":1,"980":1,"1017":1}}],["hailing",{"0":{"161":1},"1":{"161":1},"2":{"161":1}}],["han",{"1":{"91":1,"96":1,"99":1,"100":1,"101":1,"102":1}}],["handy",{"0":{"915":1},"1":{"915":1}}],["hand",{"0":{"858":1},"1":{"772":1,"858":1}}],["handful",{"1":{"349":1}}],["handles",{"1":{"620":1}}],["handle",{"1":{"168":1,"190":1,"433":1,"435":1,"653":1,"723":1,"764":1,"779":1,"785":1,"913":1,"957":1,"976":1}}],["handling",{"0":{"531":1,"543":1},"1":{"116":1,"223":1,"412":1,"454":1,"460":1,"472":1,"507":1,"531":1,"543":1,"698":1,"721":1,"793":1,"870":1,"914":1,"964":1,"1002":1},"2":{"543":1}}],["hands",{"1":{"124":1,"566":1,"621":1,"973":1,"1003":1}}],["handovers",{"1":{"386":1,"628":1}}],["handover",{"0":{"9":1},"1":{"9":1}}],["handbook",{"0":{"154":1,"303":1,"343":1},"1":{"334":1},"2":{"2":1,"3":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"58":1,"59":1,"60":1,"63":1,"150":1,"151":1,"152":1,"153":1,"154":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"312":1,"343":1},"4":{"2":1,"3":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"150":1,"151":1,"152":1,"153":1,"154":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1}}],["hashes",{"1":{"729":1}}],["hash",{"1":{"635":1}}],["has",{"1":{"62":1,"95":1,"100":1,"202":1,"207":1,"219":1,"267":1,"270":3,"280":1,"291":1,"316":1,"411":1,"440":1,"444":1,"450":1,"456":1,"460":1,"479":1,"518":1,"642":1,"892":1}}],["her",{"0":{"1043":1},"1":{"1019":2,"1033":1,"1034":2,"1036":1,"1038":3,"1040":2,"1043":2,"1045":1}}],["hero",{"1":{"843":1}}],["here",{"1":{"33":1,"35":1,"90":1,"93":1,"100":1,"152":1,"269":1,"278":1,"305":1,"332":1,"337":1,"352":1,"364":1,"495":1,"926":1}}],["heuristic",{"1":{"651":1}}],["hexadecimal",{"1":{"517":1}}],["heterogeneous",{"1":{"431":1}}],["hell",{"1":{"779":1}}],["helm",{"0":{"402":1},"1":{"402":1}}],["helpful",{"1":{"345":1,"381":1,"406":1}}],["helper",{"1":{"609":1}}],["helpers",{"1":{"283":1,"788":1}}],["helped",{"0":{"400":1},"1":{"156":1,"158":1,"160":1,"164":2,"165":1,"166":1,"167":1,"168":1,"170":1,"171":1,"172":1,"173":1,"174":1,"176":1,"177":1,"178":1,"179":1,"180":1,"656":1,"1019":1,"1023":1,"1038":1}}],["helping",{"0":{"161":1,"164":1,"178":1,"323":1},"1":{"159":1,"162":1,"166":1,"169":1,"182":1,"374":1,"679":1,"688":1,"742":1,"767":1,"806":1,"847":1,"937":1,"944":1,"1020":1}}],["helps",{"1":{"34":1,"47":1,"48":1,"52":1,"53":1,"58":1,"63":1,"157":1,"163":1,"175":1,"249":1,"300":1,"306":1,"308":1,"396":1,"406":2,"480":1,"518":1,"639":1,"703":1,"783":1,"813":1,"815":1,"855":1,"858":1,"866":1,"877":1,"947":1,"951":1,"966":1,"994":1}}],["help",{"0":{"736":1,"820":1},"1":{"30":1,"36":1,"45":1,"161":1,"180":1,"194":1,"269":1,"278":1,"286":1,"314":1,"325":1,"345":1,"369":1,"381":1,"430":2,"454":1,"463":1,"530":1,"588":1,"628":1,"629":1,"651":1,"669":1,"714":1,"730":1,"738":1,"740":1,"755":1,"845":1,"874":1,"884":1,"907":1,"945":1,"950":1,"969":1,"987":3,"1040":1}}],["hedging",{"0":{"251":1}}],["hedge",{"0":{"249":1,"252":1},"1":{"175":1,"249":2,"251":1}}],["height",{"1":{"179":1,"379":1,"511":1,"979":1}}],["heavy",{"0":{"955":1},"1":{"955":1},"2":{"955":1}}],["head",{"1":{"978":1,"1033":1}}],["headaches",{"1":{"924":1,"928":1,"931":1}}],["heads",{"0":{"846":1},"1":{"846":1}}],["heading",{"1":{"368":1}}],["healing",{"1":{"670":1}}],["healthier",{"1":{"385":1}}],["healthcare",{"0":{"179":1},"1":{"446":1},"2":{"179":1}}],["health",{"0":{"13":1},"1":{"13":1,"1039":1}}],["hear",{"1":{"112":1}}],["hey",{"1":{"99":1,"101":1}}],["hence",{"1":{"97":1}}],["he",{"1":{"82":1,"480":1,"978":1}}],["him",{"1":{"1023":1,"1030":1}}],["hinder",{"1":{"894":1}}],["hinders",{"1":{"734":1,"852":1}}],["hive",{"0":{"710":1,"711":1,"720":1,"722":1,"728":1},"1":{"710":2,"711":1,"720":1,"722":1,"724":1,"726":1,"728":2,"981":1}}],["hidden",{"1":{"705":1,"821":1}}],["hill",{"1":{"623":1}}],["hierarchical",{"1":{"694":1,"883":1,"979":1}}],["hierarchy",{"1":{"398":1}}],["hienld",{"3":{"470":1,"589":1,"610":1}}],["hieuvd",{"3":{"555":1,"607":1,"613":1,"654":1,"916":1}}],["hieuphq",{"3":{"519":1}}],["hieuthu1",{"3":{"211":1,"212":1,"214":1,"634":1}}],["hieu",{"0":{"1026":1,"1042":1},"1":{"106":1,"521":1,"1026":1,"1042":1}}],["hi",{"1":{"91":1}}],["highest",{"0":{"776":1},"1":{"731":1,"776":1}}],["higher",{"1":{"330":1,"388":1,"655":1}}],["highlight",{"1":{"274":1,"332":1}}],["highlights",{"1":{"206":1,"232":1,"279":1,"293":1,"360":1,"492":1,"493":1,"890":1,"998":1,"1036":1}}],["highlighting",{"1":{"54":1,"55":1,"56":1,"277":1,"282":1,"286":1,"421":1,"496":1,"575":1,"577":1,"647":1,"743":1,"758":1,"812":1,"869":1,"952":1,"1019":1,"1022":1,"1028":1,"1033":1,"1034":1,"1037":1,"1038":1,"1040":1,"1041":1,"1044":1,"1047":1,"1050":1}}],["highly",{"1":{"138":1,"405":1,"664":1,"894":1}}],["high",{"0":{"239":1,"335":1,"527":1},"1":{"58":1,"223":1,"239":1,"380":1,"386":1,"518":1,"527":1,"618":1,"639":1,"662":1,"714":1,"751":1,"873":1,"911":1,"1007":1}}],["hire",{"0":{"30":1},"1":{"30":2,"183":1,"325":1,"336":1}}],["hiring",{"0":{"7":1,"16":1,"92":1,"183":1,"192":1,"325":1},"1":{"16":1,"30":1,"92":1,"144":1,"250":1,"264":1,"325":1},"2":{"7":1,"16":1,"18":1,"30":1,"70":1,"72":1,"74":1,"75":1,"77":1,"79":1,"83":1,"91":1,"92":1,"121":1,"122":1,"183":1,"192":1,"271":1,"274":1,"319":1,"325":1}}],["history",{"0":{"415":1,"569":1},"1":{"418":1,"444":1,"562":1,"671":1,"682":1,"697":1,"891":1},"2":{"415":1}}],["historical",{"0":{"247":1,"254":1},"1":{"247":1,"254":1,"713":1}}],["his",{"1":{"28":2,"29":1,"54":1,"55":1,"56":1,"106":1,"315":1,"1020":2,"1021":1,"1022":1,"1024":1,"1025":1,"1026":2,"1028":1,"1029":2,"1030":1,"1031":1,"1032":1,"1035":1,"1037":2,"1039":1,"1041":1,"1044":1,"1046":1,"1047":1,"1048":2,"1049":2,"1050":1}}],["huge",{"1":{"463":1}}],["hurt",{"1":{"341":1}}],["hubs",{"1":{"348":1,"713":1}}],["hub",{"0":{"173":1},"1":{"173":1,"177":1,"362":1,"368":1}}],["hung",{"0":{"69":1}}],["huy",{"0":{"1029":1},"1":{"1029":1}}],["huygn",{"3":{"901":1}}],["huymaius",{"3":{"547":1,"549":1,"551":1,"592":1}}],["huynh",{"0":{"55":1},"1":{"55":1}}],["huytq",{"3":{"9":1,"10":1,"11":1,"12":1,"21":1,"89":1,"119":1,"172":1,"178":1,"180":1,"190":1,"313":1,"878":1}}],["humanities",{"1":{"946":1,"947":1}}],["humans",{"1":{"282":1}}],["human",{"0":{"113":1,"282":1,"842":1},"1":{"113":2,"282":2,"338":1,"405":1,"406":1,"415":1,"420":1,"441":1,"447":1,"805":1,"809":2,"811":2,"831":1,"842":1},"2":{"24":1}}],["hnh",{"1":{"70":1},"3":{"5":1,"8":1,"13":1,"14":1,"16":1,"18":1,"19":1,"20":1,"22":1,"25":1,"27":1,"42":1,"49":1,"62":1,"69":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"151":1,"165":1,"166":1,"177":1,"186":1,"189":1,"191":1,"193":1,"213":1,"234":1,"235":1,"295":1,"325":1,"359":1,"363":1,"562":1,"563":1,"564":1}}],["nlp",{"1":{"890":1}}],["nlu",{"1":{"421":1}}],["nx",{"1":{"659":1}}],["nyc",{"1":{"631":1}}],["nsxpcconnection",{"1":{"617":1}}],["nrecoverable",{"1":{"543":1}}],["ngan",{"0":{"1034":1},"1":{"1034":1}}],["nguyen",{"0":{"1024":1,"1027":1,"1029":1,"1030":1,"1037":1,"1040":1,"1042":1,"1043":1,"1044":1,"1049":1,"1050":1},"1":{"1005":1,"1024":1,"1027":1,"1029":1,"1030":1,"1037":1,"1040":1,"1042":1,"1043":1,"1044":1,"1049":1,"1050":1}}],["nguyend",{"3":{"450":1,"460":1,"463":1,"485":1}}],["nghia",{"0":{"1042":1},"1":{"1042":1}}],["nghiaphm",{"3":{"516":1}}],["nghenhan",{"0":{"462":1}}],["ngo",{"0":{"1020":1}}],["ngolapnguyen",{"3":{"486":1}}],["ngoc",{"3":{"447":1}}],["nfts",{"1":{"548":2,"552":1,"601":1,"919":1}}],["nft",{"0":{"361":1,"548":1,"601":1},"1":{"361":3,"548":1,"601":3},"2":{"361":1,"548":1,"601":1}}],["nhooyr",{"1":{"227":1}}],["nhut",{"0":{"55":1},"1":{"55":1}}],["npm",{"0":{"202":1},"1":{"202":1}}],["nutshell",{"0":{"554":1}}],["nuanced",{"1":{"423":1}}],["nurses",{"1":{"179":1}}],["nurturing",{"0":{"125":1}}],["numbers",{"1":{"621":1,"654":1,"811":1}}],["number",{"0":{"916":1},"1":{"89":2,"816":1,"916":1}}],["niklas",{"1":{"905":1,"909":1}}],["nikkingtr",{"3":{"318":1}}],["nikki",{"1":{"70":1,"96":1,"99":1,"100":1,"101":1},"3":{"0":1,"9":1,"10":1,"11":1,"12":1,"21":1,"47":1,"53":1,"65":1,"66":1,"69":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"98":1,"99":1,"100":1,"101":1,"102":1,"118":1,"119":1,"121":1,"122":1,"123":1,"124":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"148":1,"149":1,"155":1,"158":1,"159":1,"160":1,"162":1,"163":1,"165":1,"168":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"179":1,"181":1,"182":1,"187":1,"191":1,"296":1,"313":1,"314":1,"316":1,"320":1,"321":1,"345":1,"351":1,"355":1,"368":1,"381":1}}],["nine",{"1":{"774":1}}],["ninth",{"1":{"114":1}}],["nipopok",{"1":{"595":1}}],["ni",{"0":{"565":1},"1":{"565":1,"572":1}}],["night",{"1":{"343":1}}],["nixpkgs",{"0":{"558":1},"1":{"558":1}}],["nix",{"0":{"558":1,"559":1,"560":1,"563":1,"921":1,"922":1,"924":1,"925":1,"929":1,"932":1,"934":1},"1":{"117":1,"558":1,"559":1,"560":1,"563":1,"921":1,"922":1,"924":1,"925":1,"929":1,"931":1,"932":1,"934":1,"935":1},"2":{"556":1,"557":1,"558":1,"559":1,"560":1,"921":1,"922":1,"924":1,"925":1,"929":1,"932":1,"934":1,"935":1,"936":1}}],["navigating",{"0":{"484":1},"1":{"458":1}}],["navigation",{"0":{"793":1},"1":{"393":1,"397":1,"476":1,"661":1,"793":2,"881":1}}],["navigate",{"0":{"59":1},"1":{"346":1}}],["nasty",{"1":{"338":1}}],["nats",{"0":{"528":1}}],["natural",{"0":{"893":1},"1":{"343":1,"477":1,"618":1,"684":1,"829":1,"893":1,"1028":1}}],["naturally",{"1":{"270":1}}],["nature",{"0":{"839":1},"1":{"338":1,"444":1,"579":1,"894":1,"923":1}}],["native",{"0":{"139":1,"513":1},"1":{"139":1,"223":1,"453":1,"469":1,"496":1,"513":2,"527":1,"781":1,"969":1},"2":{"513":1}}],["national",{"0":{"87":1}}],["narrative",{"0":{"830":1,"834":1},"1":{"806":1,"993":1}}],["narratives",{"1":{"242":1,"807":1,"992":1}}],["narrow",{"1":{"705":1,"860":1}}],["naru",{"0":{"163":1},"1":{"163":1}}],["namth",{"3":{"900":1}}],["namtrhg",{"3":{"461":1,"479":1,"512":1,"513":1,"514":1,"903":1}}],["namtran",{"3":{"26":1,"68":1,"88":1,"192":1,"195":1,"196":1}}],["namnd",{"3":{"515":1,"895":1}}],["namnanh14mn",{"3":{"422":1}}],["namanh14mn",{"3":{"518":1}}],["namanh",{"3":{"484":1}}],["nam",{"0":{"1021":1,"1049":1},"1":{"1000":1,"1005":1,"1021":1,"1049":1},"3":{"450":1,"460":1,"463":1,"485":1,"499":1}}],["nambui",{"3":{"282":1,"283":1,"284":1,"285":1,"286":1,"288":1}}],["names",{"1":{"990":1}}],["name",{"1":{"189":1}}],["naming",{"0":{"189":1},"1":{"386":1,"390":1,"803":1}}],["nested",{"0":{"996":1},"1":{"996":1}}],["negatives",{"1":{"635":1}}],["negligible",{"1":{"349":1}}],["net",{"2":{"591":1}}],["networking",{"1":{"223":1,"660":1},"2":{"222":1,"223":1,"226":1,"227":1,"228":1,"229":1,"232":1}}],["networks",{"0":{"460":1},"1":{"53":1,"596":1,"602":1},"2":{"460":1}}],["network",{"0":{"49":1,"155":1,"350":1},"1":{"155":1,"182":1,"238":1,"273":1,"454":1,"460":1,"591":1,"594":1,"630":1},"2":{"302":1,"939":1}}],["ne",{"0":{"572":1},"1":{"572":1}}],["neuroticism",{"1":{"567":1}}],["necessity",{"0":{"836":1},"1":{"512":1}}],["necessary",{"1":{"487":1,"489":1}}],["never",{"1":{"121":1,"280":1,"289":1,"337":1,"635":1,"698":1}}],["nearly",{"1":{"1048":1}}],["near",{"1":{"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"191":1,"453":1,"469":1}}],["nextjs",{"0":{"466":1,"481":1,"482":1},"1":{"481":1},"2":{"466":1}}],["next",{"0":{"97":1,"114":1,"929":1},"1":{"43":1,"66":1,"97":1,"106":1,"164":1,"204":1,"205":1,"206":1,"207":1,"344":1,"363":1,"387":1,"472":1,"482":1,"492":1,"493":1,"494":1,"495":1,"496":1,"551":1,"999":1,"1018":1}}],["newcomer",{"1":{"1023":1}}],["newcomers",{"1":{"669":1}}],["newdecoder",{"1":{"916":1}}],["newbie",{"1":{"343":1}}],["news",{"1":{"105":1,"116":1}}],["newsletter",{"1":{"492":1},"2":{"90":1,"91":1,"92":1,"93":1,"94":1,"96":1,"97":1,"99":1,"100":1,"101":1,"102":1}}],["new",{"0":{"76":1,"117":1,"137":1,"200":1,"260":1,"283":1,"549":1,"551":1,"821":1,"833":1,"848":1,"851":1,"907":1,"1016":1},"1":{"30":1,"41":1,"48":1,"70":1,"77":1,"83":1,"102":1,"103":1,"106":1,"138":1,"150":1,"159":1,"160":1,"172":1,"178":1,"186":1,"198":1,"200":3,"204":2,"205":1,"206":1,"222":1,"224":1,"226":1,"227":1,"235":1,"264":1,"273":1,"276":1,"283":1,"290":1,"308":1,"311":1,"318":1,"324":1,"327":1,"333":1,"344":1,"360":1,"411":1,"442":2,"444":1,"480":1,"492":1,"493":1,"495":1,"540":1,"549":1,"566":1,"614":1,"673":1,"674":1,"675":1,"676":1,"677":2,"678":1,"748":1,"821":1,"833":1,"848":1,"851":1,"856":1,"860":1,"863":1,"864":1,"865":1,"889":1,"896":1,"904":1,"905":1,"945":1,"950":1,"953":1,"954":1,"977":1,"997":1,"999":1,"1012":1,"1016":1,"1027":1,"1035":1,"1038":1}}],["needless",{"0":{"734":1}}],["needs",{"0":{"838":1},"1":{"285":1,"287":1,"325":1,"391":1,"417":1,"422":1,"426":1,"692":1,"732":1,"734":1,"738":1,"740":1,"742":1,"743":1,"819":1,"820":1,"838":1,"873":1,"874":1,"877":1}}],["needed",{"1":{"179":1,"325":1,"512":1,"980":1}}],["need",{"0":{"835":1},"1":{"30":1,"36":1,"39":1,"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"92":1,"150":1,"191":1,"241":1,"347":1,"405":1,"415":1,"420":1,"421":1,"434":1,"439":1,"456":1,"562":1,"631":1,"758":1,"855":1}}],["nov",{"0":{"869":1}}],["novel",{"1":{"838":1,"883":1}}],["november",{"0":{"205":1,"292":1,"496":1},"1":{"205":1,"496":1,"869":1}}],["nosql",{"1":{"709":1}}],["nocode",{"2":{"380":1}}],["norman",{"1":{"377":1}}],["normal",{"1":{"253":1,"730":1}}],["normally",{"1":{"40":1}}],["nomination",{"0":{"362":1}}],["nows",{"1":{"495":1}}],["nowadays",{"1":{"411":1}}],["now",{"1":{"280":2,"291":2,"415":1,"421":1,"573":1,"1017":1}}],["nodejs",{"1":{"1026":1}}],["nodes",{"1":{"649":1}}],["node",{"1":{"202":1,"495":1,"497":1,"511":2,"591":1,"751":1}}],["no",{"1":{"66":1,"163":1,"202":1,"380":1,"463":1,"845":1,"927":1,"928":1}}],["noise",{"1":{"36":1,"339":1,"351":1}}],["notion",{"0":{"1007":1},"1":{"980":1,"1003":1,"1007":1}}],["notation",{"2":{"614":1,"958":1}}],["notable",{"1":{"270":1,"674":1,"675":1,"676":1,"677":1,"678":1}}],["nothing",{"1":{"188":1}}],["notebook",{"1":{"1003":1}}],["notebooks",{"0":{"232":1},"1":{"232":1}}],["notes",{"0":{"334":1,"536":1,"852":1,"856":1,"861":1,"862":1,"865":2,"904":1,"908":1},"1":{"227":1,"295":2,"346":1,"348":1,"354":1,"370":1,"533":1,"536":1,"852":1,"855":1,"856":1,"857":1,"861":1,"862":1,"864":1,"865":2,"866":1,"904":2,"908":1,"909":1},"4":{"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"868":1,"906":1,"907":1,"908":1}}],["note",{"0":{"72":1,"937":1},"1":{"210":1,"346":1,"351":1,"414":1,"522":1,"531":1,"631":1,"851":1,"858":1,"905":1,"906":2,"908":1}}],["not",{"0":{"341":1,"809":1,"904":1,"907":1},"1":{"30":1,"79":1,"155":1,"183":1,"184":1,"249":1,"269":1,"278":1,"333":1,"336":1,"341":1,"365":1,"406":1,"428":1,"442":1,"470":1,"511":2,"518":1,"635":4,"736":1,"892":1,"902":2,"978":1,"1035":1}}],["nonfiction",{"1":{"993":1}}],["nonsense",{"1":{"927":1}}],["non",{"1":{"3":2,"27":1,"202":1,"485":1,"551":1,"595":1,"601":1,"654":1,"691":1,"723":1,"779":1,"803":1,"813":1,"923":1,"958":2,"988":1}}],["nda",{"0":{"3":1},"2":{"3":1}}],["mpa",{"0":{"901":1},"1":{"901":1}}],["mpc",{"1":{"869":1}}],["ms",{"1":{"894":2}}],["msw",{"0":{"497":1},"1":{"497":3}}],["mcgraw",{"1":{"568":1}}],["mcp",{"0":{"626":1,"965":1,"1010":1},"1":{"438":2,"626":1,"965":1,"1010":1},"2":{"438":1,"626":1,"965":1}}],["ml",{"0":{"542":1},"1":{"998":1}}],["mfa",{"1":{"238":1}}],["myth",{"0":{"881":1},"1":{"881":1,"943":1}}],["myers",{"1":{"581":1,"801":1}}],["myersbriggs",{"0":{"192":1}}],["my",{"0":{"1019":1},"1":{"168":1,"349":1,"638":1,"1019":1}}],["mvp",{"0":{"164":1,"250":1},"1":{"173":1,"250":1}}],["mutex",{"1":{"784":1,"790":1}}],["must",{"1":{"355":1,"495":1,"972":1}}],["mudah",{"1":{"168":1}}],["multidimensional",{"1":{"838":1}}],["multipliers",{"0":{"826":1},"1":{"826":1}}],["multiple",{"0":{"345":1},"1":{"156":1,"175":1,"181":1,"246":1,"423":1,"440":1,"442":1,"470":1,"486":1,"498":1,"587":1,"607":1,"630":1,"705":1,"726":1,"746":1,"763":1}}],["multithreaded",{"1":{"666":1,"790":1}}],["multisign",{"0":{"587":1},"1":{"587":2},"2":{"587":1}}],["multimedia",{"0":{"381":1}}],["multimodal",{"0":{"116":1,"892":1},"1":{"116":1}}],["multilingual",{"0":{"652":1},"1":{"274":1,"652":1}}],["multi",{"0":{"423":1,"462":1,"970":1},"1":{"244":1,"472":1,"527":1,"652":1,"970":1},"2":{"970":1}}],["much",{"0":{"62":1},"1":{"485":1,"511":1,"588":1,"812":1,"898":1}}],["mma",{"0":{"34":1},"1":{"34":1,"351":1}}],["moore",{"0":{"687":1},"1":{"686":1,"687":1}}],["moonlighting",{"0":{"306":1,"1011":1}}],["mouse",{"1":{"661":1}}],["mozilla",{"1":{"515":1,"545":1}}],["mortem",{"0":{"480":1}}],["morning",{"1":{"339":1}}],["more",{"0":{"52":1,"808":1,"809":1,"823":1,"830":1},"1":{"95":1,"119":1,"158":1,"159":1,"167":1,"168":1,"172":1,"201":1,"248":1,"264":1,"269":1,"270":1,"278":1,"356":1,"367":1,"406":2,"415":1,"420":2,"423":1,"424":1,"428":1,"439":1,"446":1,"452":1,"454":1,"485":1,"500":1,"501":1,"511":1,"694":1,"695":1,"702":1,"815":1,"823":1,"836":1,"857":1,"858":2,"881":1,"884":1,"886":1,"888":1,"907":1,"928":1,"990":1,"991":1,"997":1,"1018":1}}],["moment",{"1":{"342":1}}],["moments",{"1":{"339":1}}],["momos",{"1":{"173":1}}],["motivating",{"1":{"568":1}}],["motivations",{"0":{"876":1},"1":{"743":1,"806":1,"938":1}}],["motivation",{"0":{"1035":1},"1":{"123":1,"837":1,"974":1}}],["motivate",{"1":{"281":1}}],["modifiers",{"1":{"699":1}}],["modal",{"1":{"655":1,"973":1}}],["modular",{"1":{"523":1,"617":1,"715":1,"793":1}}],["modularity",{"1":{"499":1}}],["modules`",{"1":{"202":1}}],["modules",{"0":{"512":1,"513":1},"1":{"201":1,"512":2,"513":1,"689":1},"2":{"512":1,"513":1}}],["modes",{"1":{"775":1}}],["mode",{"0":{"477":1},"1":{"477":2},"2":{"477":1}}],["moderators",{"1":{"1017":1}}],["moderated",{"0":{"656":1},"1":{"656":1}}],["moderation",{"1":{"406":1}}],["modern",{"0":{"158":1,"973":1},"1":{"162":1,"168":1,"275":1,"463":1,"492":1,"502":1,"582":1,"631":1,"649":1,"763":1,"781":1,"899":1,"961":1,"973":1}}],["modelling",{"0":{"713":1,"958":1,"996":1},"2":{"980":1}}],["modeling",{"0":{"658":1,"1003":1},"1":{"441":1,"658":1,"996":1,"1003":1},"2":{"634":1,"658":1}}],["models",{"0":{"115":1,"260":1,"408":1,"409":1,"429":1,"445":1,"555":1,"705":1,"806":1,"822":1,"883":1,"890":1},"1":{"98":1,"113":1,"115":1,"181":1,"229":1,"271":1,"282":1,"406":2,"407":1,"408":1,"409":1,"411":1,"415":2,"416":2,"420":2,"421":2,"426":1,"428":1,"429":1,"433":1,"434":1,"436":1,"439":1,"442":1,"443":2,"445":2,"446":1,"447":1,"449":1,"450":1,"528":1,"555":1,"596":1,"623":1,"672":1,"688":1,"705":1,"740":1,"883":1,"884":1,"885":1,"889":3,"890":2,"892":1,"945":1,"964":1,"1017":1,"1018":1}}],["model",{"0":{"106":1,"318":1,"362":1,"392":1,"417":1,"438":1,"447":1,"567":1,"680":1,"707":1,"709":1,"980":1},"1":{"62":1,"67":1,"106":2,"212":1,"287":1,"318":1,"405":1,"417":1,"431":1,"438":1,"439":2,"441":1,"445":1,"447":1,"449":1,"626":1,"637":1,"679":1,"680":1,"683":1,"684":1,"686":1,"695":1,"707":1,"709":1,"789":1,"799":1,"885":1,"886":2,"888":3,"895":2,"958":3,"965":1,"976":1,"980":1,"1037":1},"2":{"567":1,"890":1}}],["moving",{"1":{"289":1,"327":1,"621":1,"720":1}}],["movie",{"1":{"170":1}}],["movies",{"1":{"170":1}}],["move",{"1":{"53":1,"204":1,"340":1,"350":1,"430":1}}],["mocks",{"1":{"787":1,"788":1}}],["mocking",{"1":{"497":3},"2":{"497":1}}],["mock",{"0":{"497":1},"1":{"497":2,"786":1},"2":{"497":1}}],["mocha",{"1":{"464":1}}],["mochi",{"0":{"400":1},"1":{"400":1}}],["moc",{"0":{"108":1,"348":1,"962":1,"983":1,"984":1},"1":{"348":2,"886":1},"2":{"348":1,"870":1,"875":1,"882":1,"885":1,"886":1,"899":1,"910":1,"912":1,"917":1,"919":1,"920":1,"935":1,"940":1,"956":1,"961":1,"963":1,"981":1,"985":1,"989":1}}],["monetization",{"1":{"997":1}}],["money",{"0":{"45":1},"1":{"45":1,"169":1,"180":1,"316":1,"588":1,"631":1,"878":1}}],["mongodb",{"0":{"721":1,"893":1},"1":{"721":1,"893":1},"2":{"893":1}}],["monoliths",{"1":{"692":1}}],["monolithic",{"1":{"201":1}}],["monorepo",{"0":{"462":2,"659":1},"1":{"462":1,"745":1}}],["monorepos",{"1":{"202":1,"659":1}}],["monotykamary",{"3":{"49":1,"51":1,"64":1,"89":1,"107":1,"109":1,"117":1,"120":1,"135":1,"153":1,"235":1,"246":1,"248":1,"264":1,"265":1,"266":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"289":1,"291":1,"292":1,"293":1,"295":1,"314":1,"356":1,"410":1,"412":1,"443":1,"527":1,"625":1,"626":1,"628":1,"629":1,"631":1,"636":1,"640":1,"674":1,"675":1,"676":1,"677":1,"678":1,"867":1,"883":1,"884":1,"887":1,"893":1,"965":1,"973":1,"975":1,"990":1,"1001":1}}],["monitor",{"0":{"169":1},"1":{"436":1}}],["monitoring",{"0":{"237":1,"252":1},"1":{"61":1,"237":1,"252":1,"514":1,"527":1,"660":1,"699":1},"2":{"237":1,"252":1}}],["month",{"1":{"40":1,"91":1,"94":1,"124":1,"200":1,"266":1,"270":1,"271":1,"277":1,"279":1,"293":1,"492":1,"869":1}}],["monthly",{"0":{"108":1},"1":{"27":1,"40":1,"108":1,"190":1,"246":1,"356":1}}],["months",{"1":{"15":1,"264":1,"978":1}}],["mostly",{"1":{"66":1}}],["most",{"1":{"44":1,"45":1,"100":1,"179":1,"291":1,"358":1,"418":1,"431":1,"706":1,"918":1,"953":1}}],["mobile",{"0":{"149":1,"383":1,"961":1,"962":1},"1":{"31":1,"170":1,"383":1,"476":1,"514":1,"768":1,"961":1,"962":1},"2":{"131":1,"149":1,"167":1,"961":1},"4":{"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"790":1,"791":1,"792":1,"793":1,"794":1,"795":1,"796":1,"797":1,"798":1,"961":1,"962":1}}],["mbti",{"0":{"68":1,"88":1,"195":1,"196":1,"801":1},"1":{"26":1,"192":1,"569":1,"574":1,"578":1},"2":{"26":1,"68":1,"88":1,"192":1,"195":1,"196":1,"567":1},"4":{"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"800":1,"801":1,"937":1}}],["mimics",{"1":{"945":1}}],["mimir",{"1":{"651":1}}],["middle",{"1":{"692":1}}],["middleware",{"1":{"495":1}}],["mixture",{"0":{"999":1},"1":{"999":1}}],["mixpanel",{"0":{"514":1},"1":{"514":1}}],["mixed",{"0":{"952":1},"1":{"283":1,"805":1},"4":{"804":1,"805":1,"806":1,"807":1,"808":1,"809":1,"950":1,"951":1,"952":1,"953":1,"954":1}}],["migrations",{"1":{"1008":1},"2":{"977":1}}],["migration",{"0":{"977":1},"1":{"496":1,"977":1}}],["migrating",{"1":{"462":1,"977":1}}],["migrated",{"1":{"721":1}}],["migrate",{"0":{"253":1},"1":{"253":1}}],["might",{"1":{"296":1,"423":1,"439":1,"442":1}}],["mitigate",{"0":{"894":1}}],["mitigated",{"1":{"238":1}}],["mitigating",{"0":{"435":1},"1":{"407":1}}],["mitochondria",{"1":{"24":1}}],["misses",{"1":{"773":1}}],["missing",{"1":{"543":1,"739":1,"884":1}}],["mission",{"1":{"24":1}}],["mislead",{"1":{"741":1,"812":1}}],["misleading",{"1":{"737":1}}],["misalignment",{"1":{"739":1}}],["mistake",{"1":{"341":1}}],["mistakes",{"0":{"1023":1},"1":{"227":1,"342":1,"388":1}}],["misc",{"4":{"298":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"868":1}}],["misuse",{"1":{"271":1}}],["millennials",{"1":{"673":1}}],["million",{"1":{"223":2}}],["mile",{"0":{"337":1}}],["milestone",{"0":{"81":1,"261":1},"1":{"81":1,"261":1}}],["minute",{"1":{"767":1}}],["minutes",{"1":{"631":1}}],["minting",{"1":{"552":1}}],["mindful",{"1":{"385":1,"858":1}}],["mind",{"0":{"856":1,"967":1},"1":{"338":1,"340":1,"735":1}}],["mindset",{"1":{"337":1,"581":1,"973":1},"2":{"1023":1}}],["minded",{"1":{"182":1}}],["minimum",{"0":{"922":2}}],["minimize",{"1":{"588":1,"614":1,"774":1}}],["minimal",{"1":{"403":1}}],["mini",{"0":{"257":1},"1":{"274":1}}],["minecraft",{"0":{"229":1},"1":{"229":1}}],["minhkek",{"3":{"360":1}}],["minhcloud",{"3":{"347":1,"353":1,"354":1,"370":1}}],["minhth",{"3":{"241":1,"253":1}}],["minhlq",{"3":{"215":1}}],["minh",{"0":{"1038":1},"1":{"1038":1},"3":{"2":1,"15":1,"136":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"319":1,"346":1,"350":1,"361":1,"366":1,"367":2,"368":1,"369":1,"419":1,"1013":1,"1014":1}}],["microservice",{"1":{"692":1,"763":1}}],["microservices",{"0":{"465":1,"763":1},"1":{"660":1,"692":1,"984":1}}],["microsaas",{"1":{"270":1}}],["microcontainers",{"0":{"403":1}}],["micromanaging",{"1":{"371":1}}],["micro",{"0":{"156":1,"201":1,"465":1,"483":1,"673":1},"1":{"156":1,"201":1,"465":1,"483":1,"673":1},"2":{"201":1,"465":1,"483":1}}],["m",{"1":{"6":1,"188":1,"242":1}}],["maximum",{"1":{"725":1}}],["maximize",{"1":{"50":1,"588":1}}],["made",{"0":{"788":1},"1":{"341":1}}],["mai",{"0":{"1039":1},"1":{"1039":1}}],["mail",{"1":{"304":1}}],["maintenance",{"1":{"668":1,"681":1,"721":1}}],["maintains",{"1":{"939":1}}],["maintainable",{"1":{"220":1,"248":1,"254":1,"284":1,"483":1,"501":1,"523":1,"646":1,"693":1,"782":1}}],["maintainability",{"1":{"216":1,"613":1,"658":1,"685":1,"770":1,"787":1}}],["maintain",{"1":{"201":1,"325":1,"433":1,"518":1,"972":1}}],["maintaining",{"1":{"58":1,"214":1,"246":1,"248":1,"626":1,"634":1,"827":1,"960":1,"965":1,"972":1,"1030":1}}],["mainnet",{"0":{"350":1}}],["main",{"0":{"894":1},"1":{"300":1,"489":1,"583":1,"591":1,"814":1,"830":1,"831":1,"836":1,"894":1}}],["materialized",{"0":{"971":1},"1":{"971":1},"2":{"971":1}}],["materials",{"1":{"515":2,"872":1}}],["mature",{"1":{"748":1}}],["mathematical",{"1":{"684":1,"686":1}}],["math",{"1":{"647":1}}],["match",{"1":{"420":1}}],["matching",{"2":{"215":1}}],["matplotlib",{"1":{"251":1}}],["matters",{"1":{"34":1,"355":1,"806":1}}],["matter",{"0":{"336":1},"1":{"32":1,"163":1}}],["marathon",{"1":{"645":1,"650":1}}],["martin",{"1":{"568":1,"706":1}}],["march",{"0":{"277":1,"279":1,"495":1},"1":{"209":1,"279":1,"495":1}}],["markup",{"0":{"895":1}}],["markov",{"1":{"789":1}}],["markets",{"1":{"396":1,"1001":1}}],["marketing",{"0":{"176":1,"298":1},"1":{"160":1,"176":1,"298":1,"632":1,"874":1},"2":{"298":1}}],["market",{"0":{"164":1,"245":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"549":1,"996":1,"1006":1,"1012":1},"1":{"158":1,"164":1,"178":1,"207":1,"245":1,"264":2,"268":1,"269":1,"271":1,"272":1,"273":1,"274":1,"275":2,"276":1,"277":1,"278":1,"332":1,"360":1,"396":1,"588":1,"589":1,"673":1,"818":1,"842":1,"996":1,"997":1,"1006":1,"1012":1},"2":{"204":1,"205":1,"206":1,"207":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"360":1,"368":1,"492":1,"493":1,"494":1,"495":1,"496":1,"1013":1,"1014":1},"4":{"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"1013":1,"1014":1}}],["marketplace",{"0":{"168":1},"1":{"157":1},"2":{"157":1,"168":1}}],["markdown",{"0":{"107":1},"1":{"433":1}}],["malaysia",{"0":{"168":1},"1":{"172":1}}],["malaysian",{"0":{"160":1},"1":{"160":1}}],["major",{"1":{"162":1,"360":1}}],["mashiro",{"3":{"896":1,"897":1}}],["mashiro5951",{"3":{"156":1,"201":1,"206":1,"207":1,"451":1,"471":1,"492":1,"493":1,"501":1,"637":1,"980":1}}],["massive",{"1":{"708":1}}],["mastering",{"0":{"116":1,"233":1,"819":1},"1":{"838":1,"840":1}}],["mastery",{"1":{"34":1,"351":1}}],["master",{"0":{"843":1,"957":1},"1":{"33":1,"649":1,"843":1,"880":1,"915":1,"917":1,"927":1,"928":1,"957":1,"973":1,"992":1}}],["macro",{"0":{"1008":1},"1":{"543":1,"1008":1}}],["machine",{"0":{"429":1,"519":1,"623":1,"686":1,"687":1,"695":1},"1":{"416":1,"421":1,"542":1,"623":1,"686":1,"687":1,"695":1,"963":1,"1017":1},"2":{"429":1,"444":1,"623":1,"789":1}}],["machines",{"0":{"110":1},"1":{"110":1,"282":1,"519":1,"683":1,"686":1,"687":2,"691":1,"694":1,"910":1,"956":1},"2":{"215":1}}],["mac",{"0":{"223":1,"349":1},"1":{"223":1}}],["macos",{"0":{"130":1,"617":1},"1":{"617":1,"663":1},"2":{"617":1,"618":1,"663":1}}],["maps",{"1":{"902":1}}],["mapreduce",{"0":{"725":1,"978":1},"1":{"722":1,"723":1,"725":1,"981":1},"2":{"978":1}}],["mapping",{"0":{"240":1,"376":1},"1":{"753":1,"819":1}}],["map",{"0":{"112":1,"443":1,"541":1,"1005":1},"1":{"112":1,"181":1,"218":1,"346":1,"348":1,"364":1,"412":2,"529":1,"541":1,"631":1,"725":1,"886":1,"916":1,"1005":1}}],["maurya",{"1":{"67":1}}],["may",{"0":{"273":1,"293":1,"741":1},"1":{"31":1,"273":1,"293":1,"415":1,"439":1,"635":1,"736":1,"809":1,"990":1}}],["maneuvers",{"0":{"838":1},"1":{"838":1}}],["manner",{"1":{"636":1,"903":1}}],["mangement",{"2":{"456":1}}],["manipulation",{"0":{"511":1}}],["manipulate",{"1":{"411":1}}],["manifesto",{"0":{"57":1}}],["managing",{"0":{"639":1,"972":1},"1":{"180":1,"212":1,"371":1,"553":1,"634":1,"649":1,"670":1,"692":1,"728":1,"745":1,"756":1,"972":1,"975":1,"987":1}}],["managed",{"0":{"724":1,"887":1},"1":{"724":1,"887":2}}],["manageable",{"1":{"689":1}}],["manages",{"1":{"211":1,"524":1,"608":1,"795":1}}],["managers",{"1":{"115":1,"305":1,"755":1}}],["manager",{"0":{"121":1,"163":1,"759":1},"1":{"202":2,"371":1,"402":1,"759":3,"1048":1},"2":{"55":1,"1048":1}}],["manage",{"0":{"914":1},"1":{"14":1,"172":1,"175":1,"629":1,"639":1,"648":1,"652":1,"657":1,"663":1,"713":1,"714":1,"717":1,"747":1,"759":1,"766":1,"767":1,"783":1,"794":1,"803":1,"878":1}}],["management",{"0":{"6":1,"180":1,"244":1,"326":1,"371":1,"508":1,"794":1,"929":1,"983":1,"1048":1},"1":{"6":1,"118":1,"163":1,"172":1,"178":1,"185":1,"232":1,"244":1,"269":1,"278":1,"326":1,"373":1,"376":1,"386":1,"395":1,"402":1,"452":1,"456":1,"459":1,"462":1,"470":1,"478":1,"480":1,"496":1,"502":1,"507":1,"508":1,"552":1,"616":1,"617":1,"628":2,"629":1,"644":1,"648":1,"655":1,"659":1,"660":1,"682":1,"691":1,"707":1,"710":1,"719":1,"753":1,"870":1,"882":1,"899":1,"909":1,"914":1,"917":1,"920":1,"929":1,"959":1,"975":1,"983":1,"985":1,"1000":1,"1006":1,"1025":1},"2":{"185":1,"326":1,"328":1,"330":1,"331":1,"333":1,"335":1,"336":1,"337":1,"338":1,"340":1,"341":1,"456":1,"470":1,"488":1,"628":1,"629":1,"959":1,"972":1,"976":1}}],["manual",{"0":{"148":1},"1":{"174":1,"480":1,"750":1,"803":1,"993":1}}],["many",{"0":{"816":1},"1":{"31":1,"769":1,"888":1,"990":1}}],["maker",{"0":{"549":1}}],["makers",{"1":{"182":1,"589":1}}],["makeover",{"1":{"92":1}}],["make",{"0":{"188":1,"285":1,"348":1,"740":1,"831":1,"848":1,"852":1,"944":1},"1":{"7":1,"15":1,"44":1,"45":1,"152":1,"159":1,"194":1,"249":1,"283":1,"288":2,"305":1,"328":1,"334":1,"337":1,"338":1,"340":1,"342":1,"392":1,"394":1,"413":1,"416":1,"460":1,"470":1,"547":1,"570":1,"730":1,"739":1,"825":1,"844":1,"865":1,"894":1,"944":1,"978":1,"987":4,"992":1,"1018":1}}],["makes",{"0":{"812":1,"833":1},"1":{"0":1,"44":1,"63":1,"157":1,"160":1,"165":1,"174":1,"178":1,"180":1,"382":1,"406":1,"427":1,"430":1,"473":1,"511":1,"664":1,"842":1,"986":1,"987":1,"993":1}}],["making",{"0":{"33":1,"52":1,"53":1,"157":1,"167":1,"180":1,"340":1},"1":{"0":1,"167":1,"204":1,"207":1,"337":1,"346":1,"384":1,"406":1,"497":1,"571":1,"573":1,"705":1,"706":1,"722":1,"810":1,"812":1,"815":1,"823":1,"827":1,"845":1,"858":1,"878":1,"958":1,"995":1,"1017":2,"1044":1}}],["merge",{"1":{"654":1,"672":1}}],["merch",{"1":{"367":1}}],["merchants",{"1":{"176":1}}],["mental",{"0":{"705":1,"806":1},"1":{"705":1,"756":1,"767":1}}],["mentorship",{"0":{"1020":1,"1025":1},"1":{"29":1,"124":1,"1019":1,"1022":1,"1023":1,"1037":1,"1039":1,"1041":1,"1042":1,"1046":1},"2":{"1020":1,"1022":1,"1025":1,"1039":1,"1041":1,"1046":1,"1048":1}}],["mentoring",{"1":{"28":1,"1025":1,"1048":1}}],["mentor",{"0":{"28":1,"29":1},"1":{"70":1,"200":1}}],["menu",{"0":{"622":1},"1":{"622":2}}],["mesh",{"1":{"660":1}}],["meshbasicmaterial",{"1":{"515":1}}],["mesosphere",{"1":{"650":1}}],["mesos",{"1":{"649":1}}],["messaging",{"0":{"986":1},"1":{"591":1,"690":1}}],["messages",{"0":{"721":1},"1":{"671":1,"721":1,"752":1,"957":1}}],["message",{"0":{"528":1,"671":1},"1":{"528":2,"543":2,"672":1,"690":1,"986":1,"989":1},"2":{"489":1}}],["medical",{"1":{"1044":1}}],["medicine",{"1":{"953":1}}],["meditation",{"1":{"385":1}}],["media",{"1":{"120":1}}],["me",{"0":{"622":1},"1":{"337":1,"622":1}}],["memorable",{"0":{"831":1},"1":{"740":1,"992":1,"993":1}}],["memories",{"1":{"576":1}}],["memorization",{"1":{"346":1}}],["memory",{"0":{"229":1,"418":1},"1":{"211":1,"229":1,"418":1,"445":1,"480":1,"524":1,"776":1,"852":1,"858":1,"964":1}}],["memo",{"0":{"154":1,"352":1,"354":1,"369":1,"370":1,"532":1,"640":1,"996":1},"1":{"154":1,"346":1,"352":1,"354":1,"366":1,"369":1,"370":1,"421":1,"625":1,"638":1,"640":1,"996":1},"2":{"154":1,"352":1,"369":1}}],["members",{"1":{"47":1,"55":1,"104":1,"109":1,"111":1,"144":1,"192":1,"200":2,"345":1,"361":1,"365":1,"381":1,"996":1,"1001":1,"1042":1,"1048":1}}],["member",{"0":{"200":1,"340":1},"1":{"37":1,"200":2,"635":1,"1024":1},"2":{"1024":1}}],["mechanisms",{"0":{"521":1},"1":{"405":1,"512":1,"912":1}}],["mechanism",{"0":{"113":1,"420":1},"1":{"113":2,"543":1,"591":1},"2":{"420":1}}],["metaphors",{"1":{"807":1,"822":1}}],["metaplex",{"0":{"548":1},"1":{"548":1}}],["metastore",{"1":{"710":1}}],["metadata",{"1":{"710":1}}],["meta",{"1":{"274":1,"276":1}}],["meticulous",{"1":{"120":1}}],["methodologies",{"0":{"818":1}}],["methodology",{"1":{"499":1}}],["methods",{"0":{"733":1,"804":1,"817":1,"952":1},"1":{"290":1,"412":1,"421":1,"457":1,"613":1,"647":1,"651":1,"771":1,"780":1,"782":1,"804":1,"805":2,"807":1,"817":1,"819":1,"828":1,"870":1,"878":1,"949":1,"952":1,"958":1},"4":{"804":1,"805":1,"806":1,"807":1,"808":1,"809":1,"950":1,"951":1,"952":1,"953":1,"954":1}}],["method",{"0":{"105":1,"346":1,"913":1},"1":{"89":1,"105":1,"346":2,"416":1,"424":1,"428":1,"432":1,"847":1,"852":1,"855":1,"861":1,"864":1,"866":1,"889":1,"904":1,"906":1,"908":1,"909":1,"913":2,"946":1}}],["metrics",{"0":{"194":1,"413":1},"1":{"67":1,"194":1,"376":1,"413":2,"426":1,"432":1,"436":1,"554":1,"720":1,"810":1}}],["metric",{"1":{"4":1},"2":{"413":1}}],["mealy",{"0":{"686":1},"1":{"686":1,"687":1}}],["measuring",{"0":{"810":1},"1":{"619":1,"810":1}}],["measurement",{"1":{"804":1}}],["measures",{"1":{"406":1,"569":1,"811":1}}],["measure",{"1":{"4":1,"34":1}}],["mean",{"1":{"155":1,"337":1,"421":1,"463":1,"926":1}}],["meanings",{"1":{"351":1}}],["meaningful",{"1":{"242":1,"336":1,"730":1,"897":1,"958":1}}],["meaningfully",{"1":{"34":1}}],["meaning",{"0":{"834":1},"1":{"34":1,"351":1,"805":1,"834":1}}],["means",{"0":{"851":1},"1":{"30":1,"62":1,"235":1,"270":1,"342":1,"392":1,"502":1,"641":1,"1044":1}}],["meets",{"1":{"770":1}}],["meetings",{"0":{"152":1,"305":1},"1":{"39":2,"152":2,"305":1,"766":1}}],["meeting",{"0":{"39":1,"352":1},"1":{"77":1,"106":1,"109":1,"631":1},"2":{"39":1,"152":1,"305":1}}],["meet",{"0":{"28":1,"29":1,"368":1},"1":{"305":1,"374":1,"391":1,"759":1,"819":1,"972":1}}],["equivalence",{"0":{"802":1},"1":{"802":1}}],["equity",{"1":{"760":1}}],["equipment",{"1":{"169":1}}],["eight",{"1":{"819":1}}],["eip",{"1":{"701":3}}],["einstein",{"1":{"580":1}}],["either",{"1":{"24":1,"200":1,"340":1,"967":1}}],["efj",{"1":{"568":1}}],["effects",{"1":{"490":1,"507":1,"618":1,"661":1}}],["effect",{"2":{"479":1}}],["effectiveness",{"1":{"245":1,"285":1,"431":1,"889":1}}],["effectively",{"0":{"419":1,"766":1},"1":{"113":1,"224":1,"251":1,"314":1,"320":1,"348":1,"420":2,"423":1,"500":1,"521":1,"634":1,"680":1,"688":1,"714":1,"745":1,"751":1,"759":1,"767":1,"768":1,"780":1,"783":1,"819":1,"835":1,"849":1,"856":1,"880":1,"968":1,"983":1,"989":1,"991":1,"994":1}}],["effective",{"0":{"113":1,"152":1,"187":1,"249":1},"1":{"67":1,"112":1,"113":1,"114":1,"152":1,"187":1,"188":1,"282":1,"286":1,"309":1,"326":1,"358":1,"378":1,"382":1,"386":1,"390":1,"391":1,"424":1,"428":1,"429":1,"457":1,"659":1,"667":1,"689":1,"708":1,"742":1,"764":1,"766":1,"774":1,"786":1,"788":1,"791":1,"815":1,"821":1,"828":1,"832":1,"836":1,"839":1,"841":1,"851":1,"854":1,"858":1,"864":1,"865":1,"873":1,"875":1,"876":1,"884":1,"885":1,"908":1,"938":1,"949":1,"958":1,"966":1,"984":1,"1002":1,"1030":1}}],["efficiently",{"1":{"373":1,"395":1,"429":1,"454":1,"530":1,"608":1,"652":1,"656":1,"726":1,"728":1,"731":1,"750":1,"779":1,"816":1}}],["efficient",{"0":{"215":1},"1":{"136":1,"180":1,"202":1,"212":1,"246":1,"247":1,"254":1,"358":1,"415":1,"452":1,"456":1,"483":1,"508":1,"545":1,"570":1,"603":1,"617":1,"633":1,"635":1,"650":1,"653":1,"655":1,"658":1,"666":1,"694":1,"711":1,"725":1,"803":1,"872":1,"882":1,"887":1,"888":1,"899":1,"914":1,"917":1,"962":1,"975":1,"979":1,"998":1}}],["efficiency",{"1":{"113":1,"156":1,"184":1,"215":1,"216":1,"217":1,"220":1,"233":1,"238":1,"241":1,"246":1,"409":1,"413":1,"423":1,"491":1,"573":1,"628":1,"629":1,"771":1,"776":1,"818":1,"920":1,"922":1,"924":1,"939":1}}],["efforts",{"1":{"365":1,"614":1}}],["effort",{"1":{"89":1,"100":1,"174":1,"316":1,"318":1,"349":1,"756":1,"820":1,"850":1}}],["eg",{"0":{"528":1}}],["echelon",{"0":{"368":1,"1011":1},"1":{"368":2,"1011":1}}],["economic",{"1":{"449":1,"842":1}}],["economy",{"1":{"360":1}}],["ecosystem",{"0":{"360":1},"1":{"219":1,"224":1,"231":1,"307":1,"368":1,"548":1,"551":1}}],["ecommerce",{"2":{"156":1,"178":1}}],["erd",{"1":{"658":1}}],["error",{"0":{"531":1,"543":1,"879":1,"986":1},"1":{"531":1,"543":1,"545":1,"689":1,"696":1,"879":1,"986":1,"1002":1},"2":{"531":1,"543":1}}],["errors",{"1":{"174":1,"543":1,"633":1,"698":1}}],["erlang",{"0":{"110":1,"519":1,"1012":1},"1":{"110":1,"751":1,"752":1,"1012":1},"2":{"519":1}}],["elizabeth",{"0":{"840":1,"846":1},"1":{"838":1,"840":1}}],["elizaos",{"0":{"592":1},"1":{"592":1}}],["eliminating",{"1":{"400":1}}],["elixir",{"0":{"135":1,"750":1,"751":1,"752":1,"910":1},"1":{"135":1,"643":1,"750":1,"751":1,"752":1,"910":2},"2":{"519":1,"674":1,"675":1,"676":1,"677":1,"910":1},"4":{"519":1,"750":1,"751":1,"752":1,"910":1}}],["elegance",{"1":{"761":1}}],["elements",{"0":{"993":1},"1":{"213":1,"282":1,"286":1,"379":1,"398":1,"422":1,"474":1,"515":1,"897":1},"4":{"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"993":1}}],["element",{"0":{"208":1},"1":{"208":1,"458":2,"468":1,"473":1,"635":3}}],["electricity",{"0":{"169":1},"1":{"169":1}}],["e",{"0":{"156":1},"1":{"156":1,"178":1,"682":1}}],["etl",{"1":{"717":1},"2":{"973":1}}],["etf",{"0":{"261":1},"1":{"261":1}}],["ethereum",{"0":{"256":1,"350":1,"939":1},"1":{"256":1,"350":1,"582":1,"603":1,"701":1,"939":2},"2":{"605":1,"939":1}}],["ethically",{"1":{"405":1}}],["ethical",{"0":{"223":1},"1":{"60":1,"223":1,"818":1}}],["etc",{"1":{"135":1,"269":1,"278":1,"588":1,"894":1}}],["ebpf",{"0":{"116":1,"233":1},"1":{"233":1}}],["edsger",{"0":{"761":1},"1":{"761":1}}],["edit",{"0":{"370":1}}],["editor",{"0":{"229":1,"1003":1},"1":{"229":1,"1003":1,"1015":1}}],["edition",{"1":{"92":1,"100":1,"108":2,"267":1,"282":1,"283":1,"286":1,"288":1}}],["edge",{"1":{"223":1,"274":1,"276":1,"445":1}}],["education",{"0":{"41":1},"1":{"66":1,"446":1}}],["essay",{"0":{"1000":1},"1":{"1000":1}}],["essential",{"0":{"819":1},"1":{"371":1,"386":1,"415":1,"435":1,"521":1,"526":1,"543":1,"662":1,"667":1,"719":1,"819":1,"824":1,"841":1,"875":1,"882":1,"912":1,"949":1,"961":1,"973":1,"992":1,"1002":1}}],["essentially",{"1":{"366":1}}],["essentials",{"1":{"39":1,"275":1}}],["essence",{"1":{"329":1,"990":1}}],["esfps",{"1":{"566":1}}],["esm",{"1":{"781":1},"2":{"513":1}}],["esbuild",{"1":{"513":1}}],["es",{"1":{"513":1}}],["eslint",{"1":{"481":1}}],["es6",{"0":{"478":1},"1":{"478":1}}],["especially",{"1":{"171":1,"356":1,"406":1,"588":1,"703":1,"958":1,"977":1,"979":1}}],["estps",{"1":{"566":1}}],["estimates",{"1":{"372":1}}],["estimate",{"1":{"372":1,"771":1}}],["estimated",{"1":{"316":1,"872":1}}],["estimation",{"0":{"89":1,"372":1,"771":1},"1":{"89":2,"870":1},"2":{"89":1}}],["estjs",{"1":{"570":1}}],["estj",{"0":{"195":1},"1":{"195":1},"2":{"195":1}}],["estate",{"0":{"162":1,"673":1},"1":{"673":1},"2":{"162":1}}],["establish",{"1":{"158":1,"638":1}}],["execute",{"1":{"453":1}}],["executing",{"1":{"498":1}}],["execution",{"1":{"175":1,"469":1,"538":1,"543":1,"603":1,"613":1,"653":1,"894":1}}],["executives",{"1":{"138":1}}],["executive",{"0":{"133":1,"138":1,"159":1},"1":{"133":1,"138":1,"159":1},"2":{"1038":1}}],["exhaustively",{"1":{"421":1}}],["exhaustive",{"1":{"269":1,"278":1}}],["example",{"1":{"543":1}}],["examples",{"1":{"223":1,"224":1,"406":1,"422":1,"528":1,"568":1,"580":1,"631":1,"671":1,"683":1,"684":1,"720":1,"792":1,"887":1,"914":1,"958":1,"972":1,"995":1}}],["examining",{"1":{"893":1}}],["examine",{"1":{"288":1,"913":1}}],["examines",{"1":{"248":1}}],["examination",{"1":{"221":1}}],["exactly",{"1":{"902":1,"980":1}}],["exact",{"1":{"89":1}}],["extraverion",{"0":{"581":1}}],["extraversion",{"1":{"567":1}}],["extraverted",{"0":{"566":1,"568":1,"570":1,"572":1},"1":{"581":1}}],["extracts",{"1":{"625":1}}],["extracted",{"0":{"384":1}}],["extracting",{"1":{"213":1}}],["extra",{"0":{"337":1},"1":{"1035":1}}],["extism",{"1":{"205":1}}],["extends",{"1":{"484":1,"939":1}}],["extensible",{"1":{"980":1}}],["extensive",{"1":{"219":1,"445":1,"887":1}}],["extensions",{"1":{"551":1,"798":1}}],["extension",{"0":{"522":1},"1":{"163":1,"164":1,"222":1,"522":1},"2":{"163":1,"164":1}}],["external",{"0":{"698":1,"724":1},"1":{"119":1,"151":1,"414":1,"698":1,"724":1,"888":1,"892":1}}],["exist",{"1":{"607":1,"614":1}}],["existing",{"1":{"172":1,"184":1,"200":1,"248":1,"851":1,"856":1,"857":1,"907":1}}],["exists",{"1":{"57":1}}],["exciting",{"1":{"291":2}}],["excited",{"1":{"93":1,"95":1,"265":1,"279":1,"292":1,"293":1}}],["excessive",{"1":{"249":1,"914":1}}],["exceptional",{"1":{"203":1,"334":1,"664":1}}],["excels",{"0":{"807":1}}],["excel",{"1":{"190":1,"566":1,"572":1,"575":1}}],["excellent",{"1":{"121":1}}],["excellence",{"1":{"55":1,"264":1}}],["exchanges",{"1":{"175":1}}],["exchange",{"1":{"107":1,"117":1}}],["expressing",{"0":{"703":1},"1":{"703":1}}],["expressiveness",{"1":{"568":1}}],["expression",{"1":{"545":1}}],["expresses",{"1":{"89":1}}],["expo",{"0":{"1011":1},"1":{"1011":1}}],["expose",{"1":{"965":1}}],["exposing",{"1":{"230":1}}],["exporting",{"1":{"553":1}}],["export",{"0":{"478":1},"1":{"478":2}}],["exponential",{"1":{"445":1}}],["exponentially",{"1":{"445":1}}],["expounded",{"1":{"323":1}}],["expansion",{"0":{"257":1}}],["expands",{"1":{"902":1}}],["expanded",{"1":{"564":1,"622":2}}],["expanding",{"0":{"1038":1},"1":{"257":1,"813":1}}],["expand",{"1":{"47":1,"160":1,"267":1,"290":1,"311":1}}],["explicit",{"1":{"639":1,"714":1}}],["explanations",{"1":{"963":1}}],["explanation",{"0":{"596":1,"807":1},"1":{"556":1,"557":1,"558":1,"559":1,"686":1,"804":1,"953":1}}],["explained",{"1":{"713":1}}],["explaining",{"0":{"623":1},"1":{"410":1,"520":1,"552":1,"569":1,"990":1}}],["explain",{"0":{"990":1},"1":{"62":1,"427":1,"574":1,"950":1,"990":1}}],["explains",{"1":{"49":1,"63":1,"113":1,"188":1,"212":1,"251":1,"406":1,"706":1,"712":1,"758":1,"807":1}}],["explosion",{"0":{"694":1},"1":{"694":1}}],["exploit",{"1":{"495":1}}],["exploring",{"0":{"429":1},"1":{"221":1,"222":1,"227":1,"228":1,"248":1,"382":1,"475":1,"540":1,"572":1,"576":1,"641":1,"708":1,"838":1,"895":1,"1043":1,"1049":1}}],["explored",{"1":{"421":1,"999":1,"1008":1,"1012":1}}],["explores",{"1":{"212":1,"214":1,"218":1,"220":1,"223":1,"246":1,"285":1,"410":1,"412":1,"414":1,"420":1,"421":1,"422":1,"433":1,"440":1,"449":1,"494":1,"527":1,"529":1,"595":1,"626":1,"972":1}}],["explore",{"1":{"205":1,"229":1,"232":1,"233":1,"258":1,"264":1,"268":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"282":1,"286":1,"334":1,"383":1,"411":1,"417":1,"438":1,"442":1,"446":1,"495":1,"530":1,"551":1,"580":1,"640":1,"647":1,"687":1,"732":1,"733":1,"812":1,"814":1,"845":1,"869":1,"870":1,"875":1,"882":1,"885":1,"899":1,"910":1,"912":1,"914":1,"917":1,"919":1,"920":1,"939":1,"940":1,"949":1,"952":1,"956":1,"958":1,"961":1,"962":1,"963":1,"964":1,"981":1,"983":1,"984":1,"985":1,"987":1,"997":1,"1002":1,"1004":1,"1027":1}}],["exploration",{"1":{"66":1,"211":1,"217":1,"247":1,"259":1,"409":1,"444":1,"484":1,"524":1,"528":1,"560":1,"828":1,"893":1}}],["expensive",{"1":{"511":1}}],["expense",{"0":{"818":1},"1":{"40":1}}],["expected",{"1":{"360":1,"442":1}}],["expectations",{"1":{"355":1,"371":1,"420":1}}],["experiencing",{"1":{"480":1}}],["experiences",{"0":{"824":1},"1":{"282":1,"287":1,"334":1,"375":1,"566":1,"577":1,"741":1,"742":1,"811":1,"824":1,"876":1,"949":1,"1001":1}}],["experienced",{"1":{"138":1,"167":1,"589":1}}],["experience",{"0":{"170":1,"172":1,"249":1,"287":1,"968":1,"1024":1},"1":{"28":1,"54":1,"106":1,"121":1,"124":1,"135":1,"139":1,"156":1,"170":1,"203":1,"285":1,"286":1,"377":1,"379":1,"388":1,"392":1,"397":1,"398":1,"424":1,"624":1,"643":1,"656":1,"661":1,"706":1,"748":1,"757":1,"816":1,"827":1,"829":1,"874":1,"879":1,"880":1,"881":1,"902":1,"943":1,"968":1,"1022":1,"1024":1,"1035":1,"1036":1,"1037":1,"1040":1,"1047":1,"1049":1,"1050":1}}],["experimental",{"0":{"397":1}}],["experiment",{"0":{"534":1},"1":{"307":1,"534":1}}],["experiments",{"1":{"264":1,"746":1}}],["expert",{"1":{"493":1,"494":1,"521":1,"880":1}}],["experts",{"1":{"182":1,"203":1,"681":1,"688":1,"765":1}}],["expertise",{"1":{"28":1,"120":1,"182":1,"198":1,"762":1,"887":1}}],["eagerly",{"1":{"1027":1}}],["ease",{"1":{"727":1}}],["easy",{"0":{"435":1,"944":1},"1":{"174":1,"286":1,"288":1,"346":1,"380":1,"392":2,"406":1,"427":1,"520":1,"525":1,"616":1,"620":1,"648":1,"673":1,"720":1,"723":1,"763":1,"781":1,"825":1,"915":1,"944":1,"978":1}}],["easily",{"1":{"53":1,"158":1,"170":1,"172":1}}],["easier",{"0":{"52":1,"53":1,"157":1,"167":1},"1":{"7":1,"157":1,"165":1,"178":1,"283":1,"330":1,"402":1,"722":1,"796":1,"906":1,"987":1,"1017":1}}],["early",{"1":{"164":1,"786":1,"803":1,"948":1},"2":{"163":1,"164":1,"173":1}}],["earn",{"0":{"367":1},"1":{"124":1,"307":1,"361":1,"367":1},"2":{"47":1,"199":1,"235":1},"4":{"235":1}}],["earning",{"0":{"47":1,"153":1}}],["each",{"0":{"804":1},"1":{"109":1,"200":1,"287":1,"352":1,"412":1,"423":1,"432":1,"460":1,"508":1,"619":1,"623":1,"642":1,"724":1,"795":1,"804":1,"828":1,"878":2,"898":1,"906":1,"978":2}}],["emitters",{"1":{"782":1}}],["emotions",{"1":{"573":1,"839":1,"846":1}}],["emotional",{"1":{"568":1,"579":1}}],["emerge",{"1":{"742":1,"876":1}}],["emerges",{"1":{"445":1}}],["emerged",{"1":{"440":1}}],["emerging",{"1":{"201":1,"206":1,"258":1,"259":1,"277":1,"285":1}}],["embeddings",{"1":{"640":1}}],["embedded",{"1":{"489":1,"695":1}}],["embed",{"0":{"533":1},"1":{"533":1}}],["embracing",{"1":{"339":1,"384":1,"773":1,"823":1,"848":1,"1023":1}}],["embraced",{"1":{"529":1}}],["embrace",{"1":{"266":1,"1027":1}}],["embarked",{"1":{"95":1,"185":1}}],["embodies",{"1":{"37":1}}],["email",{"0":{"151":1,"193":1,"304":1},"1":{"69":1,"70":1,"71":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"94":1,"151":2,"189":1,"191":1,"193":1,"304":1,"657":1},"2":{"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"151":1,"191":1,"304":1},"4":{"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"191":1}}],["emphasis",{"1":{"1042":1}}],["emphasizing",{"1":{"216":1,"219":1,"665":1,"830":1,"1046":1}}],["emphasizes",{"1":{"29":1,"637":1}}],["empathy",{"0":{"736":1},"1":{"326":1,"734":1,"736":1,"738":1,"946":1}}],["employment",{"1":{"83":1}}],["employees",{"0":{"24":1},"1":{"24":1,"44":1}}],["employee",{"0":{"80":1},"1":{"2":1,"14":1,"22":1,"70":1,"77":1,"80":1,"82":1,"186":1},"2":{"44":1}}],["empower",{"1":{"32":1,"43":1}}],["enforce",{"1":{"696":1}}],["enfps",{"1":{"572":1}}],["en",{"1":{"515":6}}],["enough",{"1":{"470":1}}],["encrypt",{"1":{"747":1}}],["encryption",{"1":{"520":1}}],["encapsulates",{"1":{"613":1}}],["encapsulation",{"1":{"455":1}}],["encounter",{"0":{"855":1}}],["encouragement",{"1":{"1038":1}}],["encourages",{"1":{"406":1,"988":1}}],["encourage",{"1":{"289":1,"849":1}}],["encouraging",{"1":{"111":1,"996":1,"1001":1}}],["encompassing",{"1":{"27":1}}],["enrich",{"1":{"270":1}}],["enhancing",{"0":{"240":1},"1":{"362":1,"414":1,"422":1,"431":1,"438":1,"613":1,"628":1,"629":1,"637":1,"656":1,"846":1,"884":1}}],["enhances",{"0":{"702":1},"1":{"375":1,"384":1,"625":1,"646":1,"909":1,"991":1}}],["enhancements",{"1":{"233":1,"496":1,"999":1}}],["enhance",{"1":{"166":1,"197":1,"219":1,"285":1,"286":1,"346":1,"423":1,"526":1,"551":1,"629":1,"700":1,"775":1,"787":1,"853":1,"887":1,"888":1,"910":1,"959":1,"963":1,"981":1,"985":1}}],["enhanced",{"0":{"863":1},"1":{"115":1,"238":1,"243":1,"398":1,"1004":1,"1015":1}}],["ensuring",{"1":{"190":1,"249":1,"284":1,"306":1,"358":1,"374":1,"392":1,"400":1,"420":1,"426":1,"428":1,"559":1,"747":1,"802":1,"830":1,"958":1,"972":1}}],["ensures",{"1":{"431":1,"637":1,"707":1,"770":1}}],["ensured",{"1":{"238":1}}],["ensure",{"0":{"830":1},"1":{"30":1,"197":1,"219":1,"286":1,"316":1,"318":1,"355":1,"386":1,"405":1,"502":1,"594":1,"642":1,"644":1,"696":1,"697":1,"790":1,"820":1,"828":1,"829":1,"941":1,"971":1}}],["enabling",{"0":{"762":1},"1":{"172":1,"241":1,"438":1,"469":1,"497":1,"590":1,"606":1,"617":1,"637":1,"670":1,"691":1,"711":1,"719":1,"722":1,"723":1,"752":1,"762":1,"826":1,"888":1}}],["enables",{"0":{"210":1},"1":{"171":1,"210":1,"544":1,"603":1,"642":1,"779":1,"921":1}}],["enabled",{"1":{"158":1,"477":1}}],["enable",{"1":{"0":1,"125":1,"551":1,"596":1,"618":1,"630":1,"709":1,"746":1,"772":1}}],["enjoyment",{"1":{"827":1}}],["enjoy",{"1":{"170":1,"1035":1}}],["energytech",{"0":{"127":1}}],["energy",{"0":{"119":1,"140":1,"1027":1},"2":{"119":1}}],["english",{"1":{"625":1},"2":{"990":1}}],["engaged",{"1":{"406":1}}],["engage",{"1":{"391":1,"832":1,"835":1,"837":1,"839":1,"991":1,"992":1}}],["engagement",{"0":{"997":1},"1":{"286":1,"307":1,"346":1,"460":1,"643":1,"994":1,"997":1},"2":{"318":1,"321":1}}],["engaging",{"1":{"104":1,"235":1,"393":1,"843":1}}],["engines",{"1":{"987":1}}],["engine",{"0":{"432":1,"640":1},"1":{"209":1,"640":1},"2":{"640":1}}],["engineers",{"0":{"647":1},"1":{"100":1,"125":1,"164":1,"269":1,"275":1,"278":1,"285":1,"333":1,"334":1,"443":1,"624":1,"664":1,"778":1,"884":1,"995":1,"1027":1,"1035":1}}],["engineering",{"0":{"96":1,"118":1,"120":1,"140":1,"214":1,"264":1,"265":1,"266":1,"268":1,"279":1,"280":1,"281":1,"289":1,"291":1,"292":1,"293":1,"407":1,"435":1,"641":1,"962":1,"973":1,"981":1,"983":1,"984":1,"985":1,"997":1,"1028":1,"1029":1,"1041":1,"1048":1},"1":{"45":1,"118":1,"120":1,"124":1,"125":1,"154":1,"192":1,"214":1,"264":2,"265":1,"268":1,"274":1,"277":1,"279":1,"280":1,"291":1,"292":1,"293":1,"407":1,"435":1,"641":1,"643":1,"647":3,"715":1,"764":1,"867":1,"884":1,"885":1,"893":1,"962":1,"964":1,"973":1,"981":1,"983":1,"984":1,"985":1,"1019":1,"1028":1,"1029":1,"1048":1},"2":{"33":1,"90":1,"100":1,"126":1,"127":1,"130":1,"132":1,"139":1,"140":1,"146":1,"148":1,"201":1,"202":1,"203":1,"209":1,"214":1,"264":1,"265":1,"266":1,"267":1,"268":1,"279":1,"280":1,"281":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"400":1,"407":1,"429":1,"434":1,"435":1,"443":1,"452":1,"454":1,"462":1,"472":1,"476":1,"481":1,"482":1,"502":1,"521":1,"524":1,"528":1,"530":1,"624":1,"632":1,"636":2,"641":1,"642":1,"643":1,"646":1,"647":1,"652":1,"653":1,"655":1,"659":1,"664":1,"665":1,"667":1,"668":1,"669":1,"670":1,"884":1,"896":1,"914":1,"973":1,"981":1,"982":1,"985":1,"987":1,"1028":1,"1029":1,"1048":1},"4":{"89":1,"641":1,"642":1,"643":1,"644":1,"645":1,"646":1,"647":1,"648":1,"649":1,"650":1,"651":1,"652":1,"653":1,"654":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":1,"661":1,"662":1,"663":1,"664":1,"665":1,"666":1,"667":1,"668":1,"669":1,"670":1,"753":1,"754":1,"755":1,"756":1,"757":1,"758":1,"759":1,"760":1,"761":1,"762":1,"763":1,"764":1,"765":1,"766":1,"767":1,"768":1,"769":1,"770":1,"771":1,"772":1,"773":1,"774":1,"775":1,"776":1,"777":1,"778":1,"982":1,"983":1,"984":1,"985":1,"986":1,"987":1,"988":1}}],["engineer",{"0":{"90":1,"130":1,"132":1,"134":1,"135":1,"136":1,"146":1,"147":1,"148":1,"149":1,"664":1,"667":1},"1":{"28":1,"55":1,"126":1,"127":1,"128":1,"130":1,"132":1,"134":1,"135":1,"136":1,"140":1,"142":1,"145":1,"146":1,"147":1,"148":1,"149":1,"320":1,"344":1,"664":1,"1020":1,"1021":1,"1023":1,"1029":1,"1034":1,"1040":1,"1041":1,"1047":1,"1049":1,"1050":1},"2":{"54":1,"56":1,"109":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1034":1,"1035":1,"1039":1,"1040":1,"1041":1,"1042":1,"1044":1,"1046":1,"1047":1,"1049":1,"1050":1}}],["entry",{"0":{"760":1},"1":{"760":2}}],["entrepreneurs",{"0":{"177":1}}],["entrepreneur",{"1":{"67":1}}],["entice",{"0":{"832":1}}],["entity",{"1":{"681":1}}],["entities",{"0":{"681":1}}],["entire",{"1":{"101":1,"136":1,"427":1,"642":1}}],["enter",{"1":{"673":1}}],["entertainment",{"2":{"627":1}}],["enterprise",{"0":{"161":1,"216":1,"218":1,"219":1,"220":1,"529":1},"1":{"119":1,"161":1,"216":2,"217":1,"218":1,"219":2,"220":2,"246":1,"248":1,"328":1,"446":1,"529":1,"596":1,"973":1,"999":1},"2":{"160":1,"162":1,"168":1,"180":1,"216":1,"217":1,"218":1,"219":1,"220":1,"529":1},"4":{"216":1,"217":1,"218":1,"219":1,"220":1,"529":1}}],["entps",{"1":{"572":1}}],["entjs",{"1":{"570":1}}],["enthusiasts",{"1":{"108":1,"302":1}}],["ended",{"1":{"806":1}}],["end2end",{"1":{"750":1}}],["endless",{"1":{"572":1,"661":1}}],["ends",{"1":{"289":1,"324":1}}],["endings",{"0":{"831":1}}],["ending",{"1":{"121":1,"831":1}}],["end",{"0":{"464":2,"1012":1},"1":{"96":1,"109":1,"125":1,"201":2,"207":1,"457":2,"464":2,"472":1,"491":1,"509":2,"772":2,"1000":1,"1012":1,"1028":1}}],["environments",{"0":{"849":1,"932":1},"1":{"56":1,"218":1,"220":1,"404":1,"428":1,"445":1,"497":1,"665":1,"744":1,"745":1,"849":1,"854":1,"931":1,"932":1,"935":1,"999":1}}],["environment",{"0":{"370":1,"564":1,"928":1,"931":1,"1032":1},"1":{"28":1,"105":1,"106":1,"109":1,"110":1,"114":1,"354":1,"370":1,"385":1,"416":1,"564":1,"749":1,"927":1,"928":1,"1003":1,"1011":1,"1028":1,"1031":1,"1032":1}}],["evidence",{"0":{"829":1},"1":{"703":1,"704":1,"829":1,"951":1}}],["evm",{"0":{"586":1},"1":{"552":2,"586":1},"2":{"582":1,"583":1,"586":1,"591":1,"604":1}}],["evolutionary",{"0":{"972":1}}],["evolution",{"1":{"282":1,"315":1,"493":1}}],["evolving",{"1":{"207":1,"224":1,"231":1,"274":1,"276":1,"277":1,"440":1}}],["evolve",{"1":{"201":1,"445":1,"824":1,"904":1,"972":1}}],["evolved",{"1":{"62":1}}],["evleventh",{"1":{"105":1}}],["even",{"1":{"331":1,"341":1,"894":1,"987":1,"1044":1}}],["eventual",{"1":{"709":1,"721":1}}],["events",{"1":{"157":1,"366":1,"473":3,"626":1,"680":1,"682":1,"683":1,"695":1,"867":1,"950":1,"954":1,"1001":1}}],["event",{"0":{"608":1,"682":1},"1":{"46":1,"66":1,"232":1,"608":1,"682":1,"690":1,"699":1,"779":1,"782":1,"807":1,"941":1},"2":{"608":1,"631":1,"674":1,"675":1,"676":1,"677":1,"678":1}}],["evergreen",{"1":{"994":1}}],["ever",{"1":{"107":1,"266":1,"291":1,"337":1,"980":1}}],["everywhere",{"1":{"932":1}}],["everyday",{"1":{"157":1,"384":1,"765":1}}],["everything",{"1":{"154":1,"295":1,"328":1}}],["everyone",{"0":{"167":1},"1":{"34":1,"39":1,"66":1,"96":1,"167":1,"204":1,"287":1,"674":1,"675":1,"676":1,"677":1,"678":1,"1006":1}}],["every",{"0":{"812":1},"1":{"4":1,"15":1,"37":2,"57":1,"78":1,"151":1,"267":1,"351":1,"430":1,"625":1,"932":1}}],["evaluators",{"1":{"889":1}}],["evaluating",{"0":{"432":1,"437":1},"1":{"322":1,"358":1,"426":1,"431":1,"624":1},"2":{"358":1}}],["evaluations",{"0":{"1000":1},"1":{"1000":1}}],["evaluation",{"0":{"225":1,"426":1},"1":{"19":1,"225":1,"424":1,"426":1,"885":1,"886":1},"2":{"424":1,"426":1,"432":1,"889":1}}],["evaluated",{"1":{"814":1}}],["evaluate",{"0":{"424":1},"1":{"18":1,"34":1,"281":1,"424":1,"432":1,"434":1,"447":1,"703":1,"889":1}}],["db",{"0":{"970":1,"1010":1},"1":{"970":1,"1010":1}}],["dbt",{"0":{"715":1},"1":{"715":1}}],["dsl",{"1":{"796":1}}],["dns",{"0":{"753":1},"1":{"753":1}}],["dna",{"0":{"927":1},"1":{"66":1}}],["dynamodb",{"1":{"749":1}}],["dynamics",{"1":{"245":1,"268":1}}],["dynamic",{"0":{"245":1,"549":1,"980":1,"1003":1},"1":{"62":1,"213":1,"277":1,"463":1,"505":1,"606":1,"666":1,"695":1,"711":1,"728":1,"793":1,"795":1,"980":1,"1003":1}}],["ddd",{"1":{"681":1,"688":1}}],["dwarf",{"1":{"665":1,"1001":1}}],["dwarves",{"0":{"37":1,"49":1,"78":1,"91":1,"92":1,"93":1,"95":1,"100":1,"125":1,"181":1,"182":1,"267":1,"290":1,"294":1,"296":1,"297":1,"302":1,"303":1,"330":1,"343":1,"345":1,"356":1,"366":1,"386":1,"563":1,"643":1},"1":{"3":1,"25":1,"29":1,"33":1,"34":1,"35":1,"44":1,"45":1,"54":1,"56":1,"66":1,"72":1,"90":1,"91":3,"92":2,"93":1,"96":1,"97":1,"100":2,"101":1,"102":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"139":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"155":1,"181":1,"187":1,"190":1,"235":1,"237":1,"246":1,"281":1,"290":1,"295":1,"297":1,"298":1,"306":1,"307":1,"310":1,"311":1,"332":1,"333":1,"345":2,"355":1,"356":1,"361":1,"381":2,"401":1,"452":1,"563":1,"638":1,"643":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1030":1,"1031":1,"1032":2,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1},"2":{"54":1,"55":1,"56":1,"125":1,"358":1,"359":1,"365":1,"521":1,"631":1,"641":1,"674":1,"675":1,"676":1,"677":1,"678":1,"867":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1}}],["dc",{"1":{"645":1,"648":1,"649":1,"657":1}}],["dcos",{"0":{"645":1,"648":1,"649":1,"650":1,"657":1},"1":{"650":1},"2":{"645":1,"648":1,"649":1,"650":1,"657":1}}],["dca",{"0":{"111":1,"588":1},"1":{"111":1,"588":2}}],["dx",{"2":{"452":1}}],["dfg",{"0":{"367":1},"1":{"997":1},"2":{"347":1,"350":1,"353":1,"363":1,"364":1,"367":1}}],["df",{"0":{"364":1},"1":{"317":1}}],["d",{"0":{"354":1,"365":1},"1":{"281":1,"304":1,"346":1,"354":1,"365":2,"370":1,"631":1}}],["dzs",{"1":{"120":1}}],["dinh",{"0":{"1021":1},"1":{"1021":1}}],["ditch",{"0":{"926":1},"1":{"924":1}}],["dijkstra",{"0":{"761":1},"1":{"761":1}}],["dialogue",{"0":{"839":1},"1":{"839":1,"846":1,"992":1}}],["dialect",{"1":{"666":1}}],["diagram",{"0":{"695":1}}],["diagrams",{"0":{"679":1},"1":{"658":1,"679":1,"695":1,"958":2}}],["dimensions",{"1":{"515":2}}],["dividing",{"1":{"601":1}}],["divide",{"1":{"423":2,"978":1}}],["divergent",{"1":{"848":1}}],["diverging",{"1":{"466":1}}],["diversity",{"0":{"702":1},"1":{"702":1,"816":1}}],["diverse",{"1":{"117":1,"446":1,"625":1,"702":1,"705":1,"800":1,"808":1,"851":1,"853":1,"907":1,"958":1,"1001":1,"1023":1}}],["dives",{"1":{"212":1,"1002":1,"1007":1}}],["dive",{"0":{"475":1},"1":{"108":1,"242":1,"411":1,"538":1,"895":1,"1017":1}}],["dir",{"1":{"396":1,"780":1}}],["directory",{"0":{"959":1},"2":{"959":1,"976":1}}],["direct",{"1":{"305":1,"405":1}}],["directions",{"1":{"518":1}}],["direction",{"1":{"281":1,"578":1,"1012":1,"1048":1}}],["directly",{"1":{"118":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"304":1,"415":1,"651":1,"900":1,"918":1,"959":1}}],["digest",{"0":{"1015":1,"1016":1},"1":{"1015":1,"1016":1},"4":{"674":1,"675":1,"676":1,"677":1,"678":1,"1015":1,"1016":1}}],["digits",{"1":{"654":2}}],["digital",{"0":{"119":1,"172":1,"824":1},"1":{"53":1,"119":1,"165":1,"171":1,"177":1,"288":1,"351":1,"360":1,"382":1,"394":1,"396":1,"397":1,"587":1,"673":1,"734":1,"819":1,"822":2,"912":1,"949":1}}],["digging",{"1":{"337":1}}],["differs",{"1":{"686":1}}],["difference",{"0":{"609":1,"759":1,"987":1},"1":{"428":1,"460":1,"569":1,"790":1,"791":1,"904":1,"980":1}}],["differences",{"0":{"878":1},"1":{"211":1,"212":1,"383":1,"524":1,"552":1,"581":1,"687":1,"724":1,"753":1,"759":1,"795":1,"804":1,"805":1,"952":1,"1029":1}}],["different",{"0":{"457":1,"805":1,"861":1},"1":{"53":1,"151":1,"174":1,"330":1,"334":1,"448":1,"489":1,"497":1,"501":1,"544":1,"547":1,"602":1,"613":1,"712":1,"828":1,"901":1,"967":1,"987":1,"1049":1}}],["difficult",{"1":{"420":1,"1044":1}}],["dify",{"0":{"887":1,"1002":1,"1005":1},"1":{"264":1,"625":1,"628":1,"629":1,"887":1,"995":1,"1002":2,"1005":1}}],["didn",{"1":{"185":1,"343":1}}],["disasters",{"1":{"837":1}}],["disable",{"1":{"746":1}}],["disadvantages",{"1":{"528":1}}],["distinctions",{"1":{"878":1}}],["distortion",{"1":{"661":1}}],["distracting",{"1":{"833":1}}],["distractions",{"1":{"1030":1}}],["distraction",{"0":{"339":1}}],["distributed",{"0":{"584":1,"606":1,"719":1},"1":{"584":1,"596":1,"606":1,"653":1,"709":1,"712":1,"719":2,"725":1},"2":{"584":1,"594":1,"606":1,"630":1,"978":1}}],["distribute",{"0":{"726":1},"1":{"423":1,"726":1}}],["distributions",{"1":{"730":1}}],["distribution",{"1":{"115":1}}],["displays",{"1":{"620":1}}],["display",{"1":{"515":1,"543":1}}],["disparate",{"1":{"442":1}}],["disk",{"0":{"636":1},"1":{"202":1,"452":1}}],["disc",{"0":{"799":1},"1":{"799":1}}],["discardableresult",{"1":{"798":1}}],["discrete",{"1":{"647":1}}],["disconfirming",{"1":{"951":1}}],["disconnected",{"1":{"242":1}}],["discoverability",{"1":{"929":1}}],["discovery",{"0":{"650":1},"1":{"650":1,"828":1,"908":1}}],["discover",{"1":{"237":1,"238":1,"243":1,"250":1,"268":1,"272":1,"307":1,"356":1,"375":1,"376":1,"384":1,"385":1,"388":1,"449":1,"469":1,"483":1,"494":1,"508":1,"551":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"579":1,"581":1,"585":1,"608":1,"616":1,"624":1,"632":1,"641":1,"643":1,"646":1,"664":1,"666":1,"667":1,"673":1,"708":1,"715":1,"732":1,"733":1,"736":1,"742":1,"761":1,"763":1,"775":1,"778":1,"781":1,"790":1,"791":1,"801":1,"804":1,"819":1,"821":1,"825":1,"833":1,"840":1,"844":1,"847":1,"855":1,"857":1,"860":1,"863":1,"864":1,"872":1,"876":1,"880":1,"887":1,"905":1,"908":1,"909":1,"925":1,"929":1,"930":1,"932":1,"933":1,"934":1,"937":1,"947":1,"948":1,"967":1,"973":1,"974":1,"992":1}}],["discovered",{"1":{"118":1}}],["discord",{"0":{"49":1,"721":1},"1":{"49":1,"366":1,"400":1,"440":1,"643":1,"721":1},"2":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"363":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1}}],["discussing",{"1":{"914":1}}],["discussions",{"1":{"108":1,"117":1,"1004":1}}],["discussion",{"1":{"103":1,"104":1,"105":2,"110":1,"111":1,"114":2,"576":1,"996":1,"997":1,"1001":1,"1005":1,"1011":1},"2":{"631":1,"674":1,"675":1,"676":1,"677":1,"678":1}}],["discussed",{"1":{"234":1,"999":1,"1000":1}}],["discusses",{"1":{"115":1,"220":1,"412":1,"420":1}}],["discuss",{"1":{"106":1,"112":1,"113":1,"267":1,"327":1,"330":1,"976":1,"1006":1,"1011":1}}],["disciplines",{"1":{"814":1}}],["discipline",{"0":{"56":1},"1":{"56":1,"665":1}}],["disclosure",{"1":{"3":1}}],["disrupted",{"1":{"2":1}}],["dudaka",{"3":{"978":1}}],["dummies",{"1":{"787":1}}],["durability",{"1":{"707":1}}],["during",{"0":{"179":1},"1":{"52":1,"171":1,"179":1,"332":1,"656":1,"746":1,"844":1,"862":1}}],["duplication",{"1":{"659":1}}],["due",{"1":{"445":1,"735":1}}],["duckdb",{"0":{"631":1},"1":{"631":2,"640":1,"973":1},"2":{"291":1,"631":1,"640":1}}],["dutch",{"1":{"176":1}}],["dune",{"0":{"104":1},"1":{"104":1}}],["duyen",{"0":{"1036":1},"1":{"1036":1}}],["duy",{"0":{"1043":1},"1":{"1043":1},"3":{"2":1,"7":1,"28":1,"29":1,"32":1,"36":1,"40":1,"41":1,"44":1,"52":1,"53":1,"65":1,"90":1,"91":1,"92":1,"94":1,"95":1,"96":1,"97":1,"99":1,"100":1,"101":1,"102":1,"122":1,"123":1,"124":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"168":1,"169":1,"170":1,"171":1,"173":1,"174":1,"176":1,"179":1,"183":1,"185":1,"188":1,"267":1,"281":1,"290":1,"294":1,"296":1,"299":1,"311":1,"322":1,"325":1,"326":1,"330":1,"336":1,"337":1,"340":1}}],["daunting",{"1":{"958":1}}],["daemon",{"1":{"930":1}}],["daemons",{"0":{"663":1,"930":1},"1":{"663":2}}],["david",{"1":{"801":1}}],["dark",{"0":{"477":1},"1":{"477":3},"2":{"477":1}}],["darwinkit",{"1":{"223":1}}],["daily",{"0":{"373":1},"1":{"235":1,"285":1,"373":1}}],["dashboards",{"1":{"727":1}}],["dashboard",{"0":{"175":1},"1":{"166":1,"175":1,"178":1}}],["danang",{"1":{"118":1}}],["da",{"0":{"102":1},"1":{"102":1}}],["datpv",{"3":{"528":1,"959":1,"976":1}}],["datnguyennnx",{"3":{"406":1,"413":1,"415":1,"420":1,"426":1,"427":1,"430":1,"432":1,"436":1,"438":1,"1015":1,"1016":1,"1017":1,"1018":1}}],["date",{"0":{"80":1},"1":{"72":1,"86":1,"502":1,"731":1,"892":1}}],["dat",{"0":{"56":1,"1037":1},"1":{"56":1,"1005":1,"1037":1}}],["datalake",{"0":{"1007":1},"1":{"1007":1}}],["dataproc",{"0":{"718":1},"1":{"718":1,"981":1}}],["dataflow",{"0":{"639":1}}],["datasets",{"1":{"421":1,"716":1,"722":1,"726":1,"728":1}}],["databases",{"1":{"409":1,"410":1,"415":1,"438":1,"639":1,"652":1,"709":1,"712":1,"714":1,"891":2,"972":1}}],["database",{"0":{"238":1,"634":1,"639":1,"645":1,"652":1,"714":1,"891":1,"893":1,"972":1,"974":1,"975":1,"1008":1},"1":{"115":1,"238":1,"418":1,"420":1,"485":1,"633":1,"634":1,"645":1,"690":1,"707":1,"712":1,"776":1,"891":1,"893":1,"972":2,"975":3,"977":1,"984":1,"1002":1,"1008":1},"2":{"238":1,"409":1,"418":1,"433":1,"633":1,"634":1,"891":1,"892":1,"893":1,"970":1,"971":1,"972":1,"974":2,"975":1,"980":1}}],["data",{"0":{"99":1,"140":1,"213":1,"236":1,"239":1,"247":2,"254":1,"454":1,"466":1,"632":1,"708":1,"713":1,"715":1,"717":1,"730":1,"731":1,"790":1,"808":1,"809":1,"811":1,"812":2,"969":1,"973":2,"981":1,"1007":1,"1019":1},"1":{"31":1,"116":1,"173":2,"213":1,"238":1,"239":1,"241":1,"242":1,"245":1,"246":2,"247":2,"249":2,"251":1,"252":1,"253":1,"254":2,"269":1,"278":1,"285":1,"375":1,"384":1,"406":1,"410":1,"415":3,"433":1,"434":1,"435":1,"446":1,"454":2,"515":1,"518":1,"520":1,"521":1,"590":1,"608":1,"623":1,"630":4,"631":2,"632":2,"634":1,"635":2,"636":2,"637":2,"638":1,"639":1,"643":1,"649":1,"666":1,"682":1,"691":1,"707":1,"708":2,"709":1,"710":1,"713":3,"714":1,"715":3,"717":2,"718":1,"719":1,"720":1,"721":1,"722":2,"723":2,"724":1,"725":1,"727":2,"728":1,"730":1,"731":1,"790":2,"804":1,"805":1,"808":1,"809":1,"811":1,"812":1,"816":1,"829":1,"892":2,"893":1,"894":1,"903":1,"944":1,"946":1,"947":2,"949":1,"950":1,"951":1,"952":1,"953":1,"954":1,"957":1,"965":1,"966":1,"969":2,"971":2,"973":2,"975":2,"976":1,"979":1,"981":3,"998":1,"1007":1,"1019":1,"1030":1},"2":{"140":1,"211":1,"236":1,"239":1,"240":1,"242":1,"245":1,"246":1,"247":1,"251":1,"253":1,"254":1,"454":1,"466":1,"630":2,"634":1,"635":1,"636":1,"637":2,"639":1,"969":2,"971":2,"973":1,"974":1,"978":1,"981":2,"1030":1},"4":{"630":1,"631":1,"632":1,"633":1,"634":1,"635":1,"636":1,"637":1,"638":1,"639":1,"640":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1,"724":1,"725":1,"726":1,"727":1,"728":1,"729":1,"730":1,"731":1,"969":1,"970":1,"971":1,"972":1,"973":1,"974":1,"975":1,"976":1,"977":1,"978":1,"979":1,"980":1,"981":1}}],["days",{"1":{"337":1}}],["day",{"0":{"69":1,"76":1,"80":1,"84":1,"87":1},"1":{"35":1,"107":1,"674":1,"675":1,"676":1,"677":1,"678":1,"720":1}}],["dao",{"0":{"28":1,"1023":1},"1":{"28":1,"1023":1}}],["doty",{"0":{"1012":1}}],["dots",{"1":{"620":1}}],["doubt",{"1":{"703":1}}],["doubles",{"0":{"787":1},"1":{"787":1,"788":1}}],["double",{"0":{"479":1,"760":1},"1":{"760":1}}],["dollar",{"0":{"588":1},"1":{"588":1}}],["dolt",{"1":{"115":1}}],["dominance",{"1":{"799":1}}],["dom",{"0":{"455":1,"491":1,"511":1,"895":1},"1":{"455":1,"458":1,"491":2,"511":4,"895":1},"2":{"455":2,"491":1,"511":1,"895":1}}],["domain",{"0":{"375":1,"396":1,"680":2,"681":1,"688":1},"1":{"290":1,"396":1,"657":1,"680":3,"681":2,"688":2,"753":1,"816":1,"956":1}}],["domains",{"1":{"270":1,"277":1,"890":1}}],["dod",{"1":{"374":1}}],["dos",{"1":{"355":1}}],["doordash",{"1":{"955":1},"2":{"955":1}}],["door",{"1":{"342":1}}],["docs",{"1":{"515":6,"892":1}}],["documentation",{"1":{"754":1,"768":1,"803":1}}],["document",{"0":{"410":1,"738":1,"754":1},"1":{"410":1,"468":1,"511":1,"669":1,"697":1,"895":1,"972":1},"2":{"883":1}}],["documents",{"0":{"697":1},"1":{"185":1,"199":1,"412":1,"431":1,"883":1}}],["dockerfile",{"1":{"645":1}}],["docker",{"0":{"117":1,"234":1,"403":1,"556":1,"557":1,"560":1,"562":1,"923":1,"924":1},"1":{"117":1,"135":1,"234":1,"401":1,"403":1,"556":1,"557":1,"560":1,"562":1,"645":1,"690":1,"882":1,"921":1,"922":1,"923":1,"924":1,"935":1},"2":{"234":1,"403":1,"556":1,"557":1,"558":1,"559":1,"560":1,"562":1,"563":1,"564":1,"921":1,"922":1,"923":1,"924":1}}],["doesn",{"0":{"703":1},"1":{"342":1,"477":1,"881":1,"894":1}}],["does",{"0":{"210":1,"300":1},"1":{"98":1,"210":1,"341":1}}],["downtime",{"1":{"400":1,"404":1,"744":1}}],["downloads",{"1":{"236":1,"403":1}}],["down",{"0":{"406":1,"958":1},"1":{"53":1,"188":1,"201":1,"226":1,"406":1,"439":1,"495":1,"958":1,"966":1,"1017":1}}],["don",{"0":{"325":1,"903":1,"991":1},"1":{"44":1,"63":1,"306":1,"331":2,"377":1,"631":1,"868":1,"903":1,"991":1}}],["done",{"0":{"374":1,"877":1},"1":{"15":1,"39":1,"194":1,"374":1,"732":1,"733":1,"877":1}}],["doing",{"1":{"36":1}}],["do",{"0":{"187":1,"325":1},"1":{"30":1,"45":1,"98":1,"183":1,"186":1,"187":1,"253":1,"281":1,"295":1,"305":1,"337":1,"344":1,"631":2,"942":1,"978":1}}],["dr",{"1":{"568":1}}],["dry",{"1":{"459":1}}],["dropping",{"1":{"495":1,"724":1}}],["droppii",{"0":{"178":1},"1":{"178":2}}],["drop",{"1":{"360":1,"717":1}}],["drops",{"0":{"255":1},"1":{"255":1}}],["dropshipping",{"0":{"178":1},"1":{"178":1},"2":{"178":1}}],["drag",{"1":{"717":1}}],["draggable",{"1":{"622":1}}],["drawings",{"1":{"958":1}}],["draw",{"0":{"621":1},"1":{"1001":1}}],["drawbacks",{"1":{"412":1,"914":1}}],["draws",{"1":{"117":1}}],["drastically",{"1":{"409":1}}],["drafts",{"1":{"866":1}}],["draft",{"0":{"536":1},"1":{"364":1,"536":1}}],["dramatically",{"1":{"7":1}}],["drilling",{"1":{"782":1}}],["drinks",{"1":{"343":1}}],["drinking",{"1":{"40":1}}],["driving",{"1":{"138":1,"257":1,"360":1}}],["drives",{"1":{"646":1,"839":1,"944":1}}],["drivers",{"0":{"160":1},"1":{"160":1}}],["drive",{"1":{"24":1,"636":2,"873":1,"959":1}}],["driven",{"0":{"250":1,"490":1,"680":1,"681":1,"688":1,"777":1,"973":1,"988":1,"998":1},"1":{"24":1,"120":1,"214":1,"232":1,"250":1,"258":1,"264":1,"286":1,"490":1,"492":1,"554":1,"673":1,"680":1,"681":1,"688":1,"777":1,"788":1,"806":1,"956":1,"988":1,"998":1,"999":1,"1000":1,"1004":1,"1008":1},"2":{"490":1,"988":1}}],["deductive",{"0":{"954":1},"1":{"954":1}}],["dedicated",{"1":{"131":1}}],["deadlocks",{"1":{"914":1}}],["dealing",{"1":{"958":1}}],["deals",{"1":{"160":1}}],["deal",{"0":{"871":1},"1":{"59":1,"213":1,"470":1,"871":1}}],["debt",{"0":{"871":1},"1":{"870":1,"871":1}}],["debug",{"1":{"780":1}}],["debugger",{"1":{"780":1}}],["debugging",{"0":{"780":1},"1":{"651":1,"667":1}}],["debuts",{"0":{"262":1},"1":{"262":1}}],["derive",{"1":{"631":1}}],["derivations",{"1":{"559":1}}],["derivation",{"0":{"559":1}}],["degrees",{"1":{"569":1}}],["denote",{"1":{"609":1}}],["deno",{"0":{"781":1},"1":{"494":1,"781":1,"1008":1}}],["dent",{"0":{"843":1},"1":{"843":1}}],["dentists",{"1":{"157":1}}],["dental",{"0":{"157":1},"1":{"157":3}}],["detect",{"1":{"786":1}}],["detecting",{"1":{"745":1}}],["detection",{"1":{"472":1}}],["determinism",{"1":{"924":1}}],["deterministic",{"1":{"691":1,"921":1,"923":1}}],["determine",{"1":{"285":1,"377":1,"816":1}}],["detail",{"1":{"840":1}}],["detailing",{"1":{"244":1}}],["details",{"1":{"212":1,"223":1,"566":1,"575":1,"718":1,"734":1,"741":1,"830":1,"836":1,"846":1,"884":1,"991":1}}],["detailed",{"1":{"103":1,"254":1,"284":1,"376":1,"426":1,"441":1,"625":1,"682":1,"740":1,"844":1,"884":1,"937":1,"1002":1}}],["decks",{"1":{"995":1}}],["decode",{"1":{"916":1}}],["decoder",{"1":{"916":1},"2":{"916":1}}],["decontextualizing",{"1":{"848":1}}],["decontextualize",{"0":{"848":1}}],["decoupled",{"1":{"782":1}}],["decoupling",{"0":{"782":1},"1":{"606":1,"613":1}}],["declines",{"0":{"827":1},"1":{"827":1}}],["declarative",{"1":{"616":1,"798":1}}],["decrypt",{"1":{"747":1}}],["decrease",{"1":{"415":1}}],["decentralized",{"1":{"589":1,"825":1}}],["decentralization",{"1":{"520":1,"585":1}}],["december",{"0":{"265":1,"269":1}}],["decision",{"0":{"340":1,"669":1},"1":{"281":1,"340":1,"384":1,"571":1,"573":1,"669":1,"705":1,"706":1,"789":1,"812":1,"823":1,"845":1,"1026":1}}],["decisions",{"1":{"249":1,"334":1,"416":1,"570":1,"730":1,"737":1,"740":1,"829":1,"878":1,"1044":1}}],["decide",{"1":{"91":1,"466":1}}],["demeter",{"0":{"685":1},"1":{"685":1}}],["demands",{"1":{"972":1}}],["demand",{"1":{"264":1,"273":1}}],["demos",{"1":{"1004":1}}],["democratize",{"0":{"813":1}}],["democratizing",{"1":{"449":1,"813":1}}],["demographic",{"0":{"734":1},"1":{"734":1,"741":1}}],["demonstrating",{"1":{"248":1,"410":1}}],["demonstration",{"1":{"103":1,"113":1,"116":1,"1002":1,"1005":1}}],["demonstrate",{"1":{"223":1,"289":1}}],["demonstrates",{"1":{"213":1,"251":1,"471":1,"516":1}}],["demo",{"0":{"104":1,"631":1,"998":1,"1002":1,"1003":1,"1006":1},"1":{"46":1,"104":1,"631":1,"998":1,"1002":1,"1003":1,"1007":1},"2":{"631":1}}],["destinations",{"1":{"793":1}}],["descriptive",{"1":{"958":1}}],["descriptions",{"1":{"937":1}}],["describe",{"1":{"463":1,"515":1}}],["descending",{"1":{"623":1}}],["descent",{"0":{"623":1},"1":{"623":1,"963":1}}],["desk",{"1":{"311":1}}],["desktop",{"1":{"162":1}}],["despite",{"1":{"275":1,"360":1,"948":1,"1026":1,"1029":1}}],["designs",{"0":{"255":1,"652":1},"1":{"255":1,"284":2,"394":1,"694":1,"825":1,"943":1}}],["designing",{"0":{"879":1,"980":1,"1002":1},"1":{"249":1,"286":1,"879":1}}],["designers",{"0":{"585":1},"1":{"131":1,"282":1,"283":1,"285":1,"286":1,"383":1,"386":1,"818":1,"1033":1}}],["designer",{"0":{"129":1,"137":1,"143":1},"1":{"129":1,"137":1,"143":1,"163":1},"2":{"1033":1}}],["designed",{"1":{"52":1,"104":1,"332":1,"358":1,"362":1,"447":1,"469":1,"628":1,"629":1,"781":1,"955":1}}],["design",{"0":{"0":1,"66":1,"105":1,"114":1,"125":1,"156":1,"282":1,"283":2,"284":1,"285":2,"286":1,"287":1,"288":2,"377":1,"378":1,"379":1,"382":1,"383":1,"384":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"393":1,"395":1,"398":1,"420":1,"467":1,"499":1,"504":1,"523":1,"603":1,"609":2,"612":1,"614":1,"615":1,"634":1,"680":1,"681":1,"688":1,"689":1,"740":1,"819":1,"849":1,"875":1,"880":1,"918":1,"943":1,"959":1,"969":1,"972":1,"976":1,"1000":1,"1002":1,"1004":1,"1005":2,"1028":1,"1033":1},"1":{"0":2,"52":1,"66":2,"105":1,"112":1,"114":1,"125":1,"156":1,"192":1,"232":1,"267":1,"270":1,"277":1,"283":2,"288":1,"296":1,"316":1,"376":1,"377":1,"378":2,"379":1,"380":2,"382":1,"384":1,"387":2,"388":2,"389":3,"390":2,"391":1,"393":1,"394":1,"395":1,"396":1,"398":1,"450":1,"467":2,"490":1,"496":1,"499":2,"504":2,"545":1,"585":1,"603":1,"607":2,"609":2,"612":1,"613":1,"617":1,"634":1,"646":1,"652":1,"658":1,"663":1,"667":1,"680":1,"681":1,"688":1,"689":2,"693":1,"733":1,"734":1,"736":1,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"743":1,"758":1,"817":1,"818":1,"820":1,"822":1,"828":1,"829":1,"849":1,"854":1,"874":1,"875":2,"876":1,"880":2,"886":1,"917":1,"945":1,"956":3,"969":1,"973":1,"976":1,"981":1,"1000":1,"1002":1,"1004":1,"1005":2,"1028":1,"1033":1},"2":{"0":1,"66":1,"129":1,"137":1,"143":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"375":1,"376":1,"377":1,"378":1,"379":1,"382":1,"383":1,"384":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"450":1,"467":1,"474":1,"499":1,"504":1,"554":1,"585":1,"607":1,"609":2,"610":1,"612":2,"613":1,"614":1,"615":1,"673":1,"875":1,"879":1,"880":1,"913":1,"958":1,"960":2,"973":1,"980":1,"1028":1,"1033":1},"4":{"0":1,"4":1,"66":1,"67":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"732":1,"733":1,"734":1,"735":1,"736":1,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"743":1,"873":1,"874":1,"875":1,"876":1,"877":1,"878":1,"879":1,"880":1,"881":1}}],["depend",{"1":{"687":1,"809":1}}],["dependencies",{"1":{"525":1,"560":1,"634":1,"685":1,"786":1,"787":1}}],["dependency",{"0":{"642":1},"1":{"462":1,"525":1,"693":1}}],["dependancies",{"1":{"513":1}}],["depends",{"1":{"119":1,"774":1}}],["depth",{"0":{"838":1},"1":{"211":1,"215":1,"246":1,"506":1,"507":1,"524":1,"528":1,"589":1,"831":1,"840":1,"846":1}}],["deployments",{"1":{"670":1}}],["deployment",{"0":{"400":1,"404":1,"744":1},"1":{"400":1,"402":2,"404":1,"445":1,"495":1,"644":1,"645":1,"697":1,"744":1,"763":1,"781":1,"882":2,"936":1}}],["deploying",{"1":{"203":1,"401":1,"546":1}}],["deploy",{"0":{"645":1,"648":1,"745":1},"1":{"174":1,"403":1,"494":1,"586":1,"645":1,"648":1,"745":1,"1008":1}}],["deployed",{"1":{"72":1}}],["deletion",{"1":{"979":1}}],["delegatecall",{"1":{"698":1}}],["delegate",{"0":{"341":1},"1":{"957":1},"2":{"328":1,"341":1}}],["delegating",{"1":{"328":1,"341":1}}],["delegation",{"0":{"328":1}}],["delays",{"1":{"757":1}}],["delay",{"1":{"613":1}}],["delves",{"1":{"958":1}}],["delve",{"1":{"110":1,"282":1}}],["delivers",{"1":{"931":1}}],["deliverable",{"1":{"465":1}}],["delivering",{"1":{"287":1,"1046":1}}],["deliveries",{"1":{"190":1,"644":1}}],["delivered",{"1":{"162":1,"165":1}}],["deliver",{"1":{"57":1,"58":1,"97":1,"203":1,"420":1,"640":1,"872":1,"1029":1}}],["delivery",{"0":{"190":1,"197":1,"344":1,"748":1},"1":{"118":1,"190":1,"197":1,"399":1,"401":1,"662":1,"715":1,"748":1,"762":1,"772":1,"774":1,"775":1,"818":1,"882":1,"1041":1},"2":{"15":1,"190":1,"197":1}}],["deepens",{"1":{"859":1}}],["deepen",{"1":{"852":1,"856":1,"940":1}}],["deeper",{"0":{"888":1},"1":{"574":1,"576":1,"733":1,"809":1,"857":1}}],["deeply",{"1":{"325":1,"820":1}}],["deepseek",{"0":{"256":1},"1":{"256":1}}],["deep",{"0":{"475":1},"1":{"108":1,"121":1,"212":1,"242":1,"411":1,"538":1,"560":1,"565":1,"572":1,"579":1,"580":1,"689":1,"739":1,"806":1,"807":1,"838":1,"895":1,"946":1,"947":1}}],["defect",{"1":{"553":1}}],["defend",{"1":{"435":1}}],["defining",{"1":{"658":1}}],["definitions",{"1":{"687":1}}],["definition",{"0":{"374":1},"1":{"374":1,"451":1,"584":1,"589":1,"597":1,"598":1,"604":1}}],["defined",{"1":{"316":1,"774":1}}],["define",{"1":{"6":1,"23":1,"334":1,"501":1,"544":1,"913":1}}],["defi",{"1":{"589":1,"919":1},"2":{"242":1,"551":1}}],["default",{"1":{"44":1,"202":1}}],["devtools",{"1":{"780":1}}],["devs",{"1":{"611":1}}],["dev",{"0":{"928":1,"931":1,"933":1,"1015":1},"1":{"511":1,"931":1,"932":1,"1008":1,"1037":1}}],["devex",{"1":{"269":1,"278":1}}],["develops",{"1":{"950":1}}],["developed",{"1":{"224":1,"625":1,"640":1,"888":1}}],["developer",{"0":{"126":1,"127":1,"139":1,"142":1},"1":{"49":1,"131":1,"139":1,"462":1,"515":1,"659":1,"1026":1,"1049":1},"2":{"1037":1}}],["developers",{"1":{"47":1,"108":1,"115":1,"124":1,"131":1,"240":1,"386":1,"497":1,"502":1,"512":1,"515":1,"544":1,"551":1,"641":1,"646":1,"681":1,"688":1,"722":1,"749":1,"783":1,"794":1,"925":1,"934":1,"988":1,"1015":1,"1016":1,"1033":1}}],["developing",{"0":{"448":1},"1":{"121":1,"443":1}}],["developments",{"1":{"502":1}}],["development",{"0":{"121":1,"203":1,"223":1,"395":1,"456":1,"465":1,"497":1,"564":1,"582":1,"586":1,"662":1,"668":1,"777":1,"873":1,"887":1,"932":1,"988":1,"1042":1},"1":{"29":1,"41":1,"64":1,"66":1,"108":1,"115":1,"120":1,"121":1,"123":1,"156":1,"162":1,"179":1,"200":1,"204":1,"206":2,"207":1,"214":1,"216":2,"217":1,"219":1,"221":1,"223":2,"235":1,"241":1,"272":1,"274":1,"277":1,"284":1,"287":1,"313":1,"365":1,"376":1,"380":1,"383":1,"395":1,"399":1,"444":1,"449":1,"452":1,"456":1,"481":1,"483":1,"489":1,"492":1,"494":1,"496":1,"502":1,"512":1,"526":1,"546":1,"562":1,"564":1,"582":2,"599":1,"608":2,"637":1,"659":1,"662":1,"664":1,"667":1,"668":1,"669":1,"695":1,"736":1,"738":1,"739":1,"749":1,"754":1,"755":1,"758":1,"759":1,"761":1,"770":1,"771":1,"777":1,"778":1,"783":1,"796":1,"840":1,"874":1,"875":1,"885":1,"887":1,"899":1,"910":1,"913":1,"917":1,"919":1,"933":1,"935":1,"936":1,"940":1,"941":1,"956":1,"958":1,"961":1,"962":1,"973":1,"977":1,"983":1,"985":1,"988":2,"997":2,"1002":1,"1032":1,"1042":1,"1043":1},"2":{"497":1,"972":1,"988":1,"1042":1}}],["develop",{"1":{"28":1,"124":1,"125":1,"164":1,"376":1,"515":1,"586":1,"749":1,"865":1,"866":1}}],["devops",{"0":{"147":1,"399":1,"882":1},"1":{"399":1,"882":1,"1049":1},"2":{"147":1,"399":1,"400":1,"401":1,"404":1,"882":1,"1049":1},"4":{"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"744":1,"745":1,"746":1,"747":1,"748":1,"749":1,"882":1}}],["devbox",{"0":{"108":1,"111":1,"117":1,"563":1,"564":1,"925":1,"926":1,"927":1,"928":1,"930":1,"931":1,"933":1,"934":1,"935":1,"936":1,"1003":1},"1":{"111":1,"234":1,"561":1,"562":1,"563":1,"564":1,"925":1,"927":2,"928":1,"930":1,"931":1,"933":1,"934":1,"935":1,"936":1,"1001":1,"1003":1,"1006":1},"2":{"234":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"921":1,"922":1,"923":1,"924":1,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1,"935":1,"936":1},"4":{"234":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"921":1,"922":1,"923":1,"924":1,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1,"935":1,"936":1}}],["device",{"0":{"846":1},"1":{"40":1,"637":1,"846":1}}],["devices",{"1":{"31":1,"150":1,"445":1,"982":1}}],["lucky",{"1":{"1001":1}}],["lucrative",{"0":{"873":1},"1":{"873":1}}],["luhmann",{"0":{"905":1},"1":{"905":1,"909":1}}],["luther",{"1":{"568":1}}],["lunch",{"1":{"40":1}}],["ltr",{"1":{"472":1}}],["lyft",{"0":{"261":1},"1":{"261":1}}],["literature",{"0":{"865":1},"1":{"865":1,"904":1}}],["liabilities",{"1":{"760":1}}],["libre",{"1":{"1006":1}}],["libraries",{"0":{"454":1},"1":{"219":1,"389":1,"454":1,"470":1,"497":1}}],["library",{"1":{"216":1,"217":1,"223":1,"228":1,"457":2,"461":1,"484":1,"497":1,"515":1,"527":1,"752":1,"785":1}}],["libcluster",{"0":{"751":1},"1":{"751":1}}],["liskov",{"1":{"693":1}}],["lisp",{"1":{"666":1}}],["listening",{"1":{"828":1}}],["listed",{"1":{"269":1,"278":1}}],["lists",{"1":{"476":1,"525":1,"769":1}}],["list",{"0":{"103":1},"1":{"103":1,"867":1}}],["licenses",{"1":{"525":1}}],["license",{"0":{"525":1},"1":{"525":2},"2":{"525":1}}],["limited",{"1":{"809":1,"892":1,"950":1}}],["limiter",{"0":{"769":1}}],["limiting",{"1":{"769":1}}],["limitation",{"0":{"433":1}}],["limitations",{"0":{"733":1},"1":{"421":1,"433":1,"484":1,"888":1,"892":1}}],["limit",{"0":{"412":1,"822":1},"1":{"412":1,"822":1,"945":1}}],["limits",{"1":{"410":1,"700":1,"733":1,"761":1,"812":1,"907":1}}],["link",{"0":{"990":1},"1":{"990":1}}],["linked",{"1":{"905":1}}],["links",{"1":{"713":1,"918":1}}],["linking",{"1":{"348":1,"681":1,"863":1,"865":1,"950":1}}],["linting",{"1":{"401":1}}],["lines",{"0":{"847":1},"1":{"668":1,"847":1}}],["linear",{"1":{"636":1}}],["line",{"0":{"797":1},"1":{"221":1,"379":1,"797":1,"902":2,"958":1,"962":1}}],["light",{"1":{"277":1,"491":1}}],["lightweight",{"1":{"271":1,"403":1,"792":1}}],["lies",{"1":{"249":1}}],["live",{"1":{"969":1},"2":{"241":1}}],["liveview",{"0":{"241":1},"1":{"241":1}}],["living",{"1":{"106":1,"281":1}}],["liquidity",{"0":{"117":1,"549":2,"589":1,"868":1},"1":{"117":1,"549":1,"589":2,"868":1,"1001":1},"2":{"589":1},"4":{"673":1}}],["likely",{"1":{"953":1}}],["likewise",{"1":{"270":1}}],["like",{"0":{"914":1},"1":{"97":1,"98":1,"150":1,"182":1,"204":1,"205":1,"211":1,"213":1,"228":1,"235":1,"236":1,"238":1,"249":1,"264":2,"272":1,"284":1,"296":1,"324":1,"327":1,"343":1,"356":1,"371":1,"382":1,"387":1,"398":1,"405":1,"406":1,"408":1,"417":1,"422":1,"427":1,"430":1,"433":1,"435":1,"449":1,"453":1,"480":1,"485":1,"492":1,"494":1,"505":1,"524":1,"526":1,"528":1,"551":1,"566":1,"568":1,"570":1,"572":1,"580":1,"618":1,"623":1,"632":1,"635":1,"647":1,"654":1,"655":1,"658":1,"659":1,"660":1,"667":1,"668":1,"670":1,"680":1,"683":1,"693":1,"700":1,"701":1,"703":1,"720":1,"727":1,"729":1,"730":1,"733":1,"749":1,"771":1,"777":1,"778":1,"780":1,"782":1,"783":1,"787":1,"796":1,"819":1,"837":1,"882":1,"887":1,"890":1,"914":1,"915":1,"919":1,"922":1,"957":1,"958":1,"973":1,"978":1,"983":1,"987":1,"995":1,"999":1,"1001":1}}],["lifecycle",{"0":{"644":1,"791":1,"828":1},"1":{"591":1,"644":1,"791":1,"792":1,"828":1}}],["lifestyle",{"1":{"581":1,"1030":1}}],["lifetime",{"1":{"545":1}}],["life",{"0":{"106":1,"296":1,"351":1,"662":1,"1039":1,"1045":1},"1":{"7":1,"58":1,"285":1,"384":1,"395":1,"662":1,"822":1,"1039":1},"2":{"54":1,"55":1,"56":1,"125":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1},"4":{"54":1,"55":1,"56":1,"125":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1}}],["le",{"0":{"1034":1},"1":{"1034":1}}],["lens",{"0":{"973":1}}],["length",{"1":{"211":1,"524":1}}],["less",{"1":{"894":1}}],["lessons",{"0":{"118":1,"120":1,"483":1,"653":1},"1":{"63":1}}],["lester",{"0":{"843":1},"1":{"843":1}}],["legacy",{"1":{"484":1}}],["legal",{"1":{"360":1}}],["legitimate",{"1":{"98":1}}],["lets",{"1":{"557":1,"612":1,"748":1,"749":1}}],["let",{"1":{"338":1,"432":1,"437":1,"746":1,"1017":1}}],["letter",{"0":{"71":1,"82":1,"83":1}}],["leverages",{"1":{"497":1,"884":1}}],["leveraged",{"1":{"244":1}}],["leverage",{"1":{"216":1,"219":1}}],["leveraging",{"0":{"527":1,"532":1},"1":{"55":1,"423":1,"545":1,"560":1}}],["levels",{"0":{"377":1},"1":{"362":1,"377":1,"624":1,"878":1,"958":1}}],["level",{"0":{"786":1,"929":1,"965":1},"1":{"216":1,"217":1,"219":1,"233":1,"453":1,"485":1,"529":1,"639":2,"679":1,"714":2,"911":1,"973":1,"1017":1,"1018":1}}],["ledgers",{"1":{"596":1}}],["led",{"1":{"178":1,"248":1,"449":1}}],["leaks",{"1":{"435":1}}],["least",{"1":{"269":1,"278":1}}],["lean",{"0":{"67":1,"818":1},"1":{"67":3,"188":1,"246":1,"818":1,"819":1,"926":1}}],["leaders",{"1":{"967":1}}],["leadership",{"0":{"55":1,"226":1},"2":{"55":1}}],["leaderboard",{"0":{"729":1},"1":{"729":1}}],["leading",{"0":{"97":1},"1":{"371":1,"735":1,"778":1,"1029":1}}],["lead",{"0":{"122":1},"1":{"55":1,"226":1,"300":1,"440":1,"739":1,"761":1,"832":1,"1030":1}}],["leads",{"0":{"832":1},"1":{"29":1,"823":1,"993":1}}],["learns",{"1":{"416":1}}],["learned",{"0":{"395":1,"483":1,"653":1},"1":{"63":1,"119":1}}],["learn",{"1":{"46":1,"48":1,"62":1,"124":2,"154":1,"211":1,"213":1,"233":1,"238":1,"244":1,"264":1,"265":1,"272":1,"275":1,"283":1,"288":1,"292":1,"297":1,"307":1,"308":1,"309":1,"342":1,"348":1,"371":1,"372":1,"377":1,"378":1,"379":1,"380":1,"382":1,"386":1,"387":1,"389":1,"390":1,"391":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"417":1,"429":1,"435":1,"438":1,"446":1,"457":1,"459":1,"462":1,"464":1,"472":1,"476":1,"478":1,"495":1,"503":1,"504":1,"520":1,"521":1,"524":1,"526":1,"540":1,"545":1,"551":1,"553":1,"554":1,"573":1,"574":1,"578":1,"585":1,"590":1,"594":1,"596":1,"603":1,"606":1,"608":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"633":1,"639":1,"640":1,"644":1,"645":1,"648":1,"649":1,"650":1,"652":1,"653":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":1,"661":1,"662":1,"663":1,"665":1,"668":1,"669":1,"671":1,"672":1,"680":1,"681":1,"683":1,"684":1,"685":1,"686":1,"687":1,"689":1,"690":1,"691":1,"693":1,"694":1,"695":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"704":1,"705":1,"706":1,"707":1,"708":1,"710":1,"711":1,"712":1,"713":1,"714":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"724":1,"725":1,"726":1,"728":1,"729":1,"730":1,"731":1,"734":1,"735":1,"739":1,"741":1,"743":1,"744":1,"745":1,"747":1,"750":1,"751":1,"752":1,"753":1,"754":1,"755":1,"756":1,"757":1,"759":1,"760":1,"762":1,"764":1,"765":1,"766":1,"767":1,"768":1,"769":1,"770":1,"771":1,"772":1,"773":1,"776":1,"777":1,"779":1,"780":1,"782":1,"783":1,"784":1,"785":1,"786":1,"787":1,"788":1,"789":1,"790":1,"791":1,"792":1,"793":1,"794":1,"795":1,"796":1,"797":1,"798":1,"799":1,"802":1,"803":1,"805":1,"808":1,"813":1,"816":1,"817":1,"823":1,"826":1,"828":1,"830":1,"831":1,"832":1,"834":1,"835":1,"836":1,"837":1,"838":1,"839":1,"841":1,"842":1,"843":1,"845":1,"847":1,"848":1,"850":1,"852":1,"853":1,"854":1,"856":1,"861":1,"865":1,"866":1,"873":1,"877":1,"887":1,"904":1,"906":1,"914":1,"915":1,"924":1,"938":1,"939":1,"943":1,"948":1,"957":1,"966":1,"968":1,"973":1,"979":1,"987":1,"989":1,"991":1,"993":1,"994":1,"997":1}}],["learning",{"0":{"416":1,"429":1,"623":1,"789":1,"863":1,"974":1,"1021":1,"1023":1,"1025":1,"1037":1,"1050":1},"1":{"41":2,"65":1,"66":1,"104":1,"105":1,"110":1,"111":1,"114":1,"118":1,"154":1,"289":2,"302":1,"356":1,"362":1,"416":2,"421":1,"428":2,"434":1,"441":2,"447":1,"475":1,"542":1,"571":1,"623":1,"765":1,"789":2,"852":1,"853":1,"855":1,"856":1,"858":1,"908":1,"909":1,"925":1,"934":1,"963":1,"964":1,"996":1,"998":1,"1001":1,"1003":1,"1011":1,"1017":1,"1025":1,"1027":1,"1037":1,"1041":1,"1050":1},"2":{"41":1,"66":1,"154":1,"416":1,"428":1,"429":1,"441":1,"444":1,"447":1,"623":1,"789":1,"1021":1,"1027":1,"1050":1}}],["leaves",{"1":{"831":1,"894":1}}],["leave",{"0":{"2":1,"17":1},"1":{"2":1,"17":1}}],["llama",{"0":{"429":1},"1":{"274":1,"276":1,"429":1}}],["llmops",{"0":{"887":1},"1":{"887":1}}],["llms",{"0":{"415":1,"416":1,"435":1,"443":1},"1":{"407":1,"408":1,"409":1,"411":2,"415":1,"416":1,"421":3,"426":1,"433":1,"434":1,"439":1,"443":1,"445":1,"446":1,"447":2,"887":1,"889":2,"891":1,"892":1,"974":1,"1017":2}}],["llm",{"0":{"93":1,"229":1,"231":1,"405":1,"420":1,"421":1,"425":1,"426":1,"433":1,"434":1,"439":1,"446":1,"449":1,"885":1,"886":1,"889":1,"891":1,"1003":1,"1005":1},"1":{"93":1,"231":1,"266":1,"272":1,"276":1,"280":1,"356":1,"405":1,"413":1,"425":2,"427":1,"430":1,"448":1,"886":1,"888":2,"889":3,"891":1,"892":1,"964":1,"1003":1,"1005":1,"1037":1},"2":{"98":1,"221":1,"230":1,"250":1,"265":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":2,"411":1,"412":2,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"623":1,"624":1,"674":1,"675":1,"678":1,"789":1,"883":1,"884":1,"885":1,"886":1,"887":1,"888":1,"889":1,"890":1,"891":1,"892":1,"893":1,"995":1,"1015":1,"1016":1,"1017":1,"1018":1},"4":{"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"789":1,"883":1,"884":1,"885":1,"886":1,"887":1,"888":1,"889":1,"890":1,"891":1,"892":1,"893":1}}],["ll",{"1":{"36":1,"41":1,"61":1,"62":1,"103":1,"106":2,"110":1,"112":1,"349":1,"411":1,"530":1,"980":1,"987":1,"997":1,"1001":1,"1011":1}}],["lagging",{"1":{"812":1}}],["lambda",{"1":{"749":1}}],["lack",{"0":{"739":1},"1":{"739":1,"938":1}}],["lakes",{"1":{"713":1}}],["laws",{"1":{"951":1}}],["law",{"0":{"685":1,"758":1},"1":{"685":1,"758":1,"983":1}}],["laundering",{"1":{"631":1}}],["launchd",{"1":{"617":1}}],["launched",{"1":{"453":1}}],["launch",{"0":{"161":1,"164":1},"1":{"91":1,"158":1,"161":1,"162":1,"164":1,"182":1,"281":1,"663":1}}],["lazy",{"1":{"493":1,"505":1}}],["layered",{"1":{"958":1}}],["layers",{"1":{"442":1}}],["layer",{"0":{"603":1,"939":1},"1":{"386":1,"430":1,"500":1,"591":2,"603":1,"939":2,"940":1}}],["layouts",{"1":{"394":1,"616":1}}],["layout",{"0":{"394":1,"468":1},"1":{"284":1,"382":1,"468":3,"511":1}}],["landscapes",{"1":{"844":1}}],["landscape",{"0":{"817":1,"844":1},"1":{"206":1,"266":1,"276":1,"277":1}}],["langgraph",{"1":{"244":1,"264":1}}],["langchain",{"0":{"410":1,"412":1},"1":{"116":1,"244":1,"410":1,"412":1},"2":{"410":1}}],["languages",{"1":{"212":1,"277":1,"513":1,"531":1,"777":1,"918":1}}],["language",{"0":{"216":1,"408":1,"409":1,"445":1,"836":1,"883":1,"893":1},"1":{"98":1,"216":1,"217":1,"218":1,"219":1,"220":1,"229":1,"273":1,"274":1,"282":1,"389":1,"406":1,"407":1,"408":1,"409":1,"411":1,"415":1,"416":1,"420":1,"421":1,"426":1,"429":1,"433":1,"434":1,"439":1,"442":1,"443":1,"445":1,"446":1,"447":1,"453":1,"472":1,"529":1,"652":1,"684":1,"688":1,"847":1,"883":1,"884":1,"885":1,"886":1,"888":2,"889":2,"892":1,"893":1,"917":1,"964":1,"975":1,"993":1,"1017":1,"1018":1},"2":{"216":1,"218":1,"219":1,"220":1,"529":1,"988":1}}],["largely",{"1":{"351":1}}],["largest",{"0":{"168":1}}],["large",{"0":{"408":1,"409":1,"445":1,"837":1},"1":{"98":1,"216":1,"218":1,"219":1,"229":1,"282":1,"406":1,"407":1,"408":1,"409":1,"411":1,"412":1,"415":1,"416":1,"420":1,"426":1,"428":2,"429":1,"433":1,"434":1,"439":1,"442":1,"443":1,"445":1,"446":1,"447":1,"483":1,"636":2,"716":1,"725":1,"726":1,"728":1,"731":1,"813":1,"837":1,"884":1,"885":1,"886":1,"888":1,"889":1,"892":1,"964":1,"1017":1,"1018":1}}],["labor",{"1":{"423":1}}],["labour",{"0":{"84":1}}],["labeled",{"1":{"421":1}}],["labeling",{"1":{"97":1}}],["labs",{"0":{"198":1,"200":1,"674":1,"675":1,"676":1,"677":1,"678":1,"867":1,"869":1},"1":{"198":1,"200":1,"265":1,"292":1,"362":1,"867":2,"869":1,"1038":1},"2":{"198":1,"200":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"358":1,"362":1,"365":1,"631":1,"674":1,"675":1,"676":1,"677":1,"678":1,"867":1,"869":1},"4":{"674":1,"675":1,"676":1,"677":1,"678":1}}],["lab",{"1":{"66":1}}],["latin",{"1":{"723":1}}],["lat",{"0":{"102":1},"1":{"102":1}}],["latency",{"1":{"518":1,"527":1},"2":{"955":1}}],["latex",{"1":{"433":1}}],["late",{"1":{"332":1,"343":1}}],["latest",{"0":{"890":1},"1":{"46":1,"105":1,"108":1,"113":1,"207":1,"222":1,"279":1,"293":1,"493":1,"502":1,"867":1,"997":1,"999":1,"1003":1,"1004":1,"1015":1,"1016":1}}],["later",{"1":{"40":1}}],["latter",{"1":{"24":1}}],["lasting",{"1":{"33":1,"326":1,"850":1,"861":1}}],["laptops",{"1":{"31":2}}],["location",{"1":{"710":1}}],["localstack",{"0":{"749":1},"1":{"749":1}}],["localstorage",{"1":{"485":1}}],["locally",{"0":{"749":1},"1":{"749":1,"928":1}}],["locale",{"1":{"472":1}}],["local",{"0":{"103":1,"564":1,"637":1,"640":1},"1":{"103":2,"438":1,"477":1,"562":1,"564":1,"637":1,"640":1},"2":{"637":1}}],["locks",{"1":{"639":1,"653":1,"714":1,"784":1}}],["locking",{"0":{"714":1},"1":{"639":1,"653":1,"714":1,"984":1}}],["lora",{"1":{"429":1}}],["loading",{"1":{"493":1,"505":1}}],["loaders",{"0":{"410":1},"1":{"410":1}}],["loaded",{"1":{"213":1}}],["load",{"0":{"243":1,"650":1,"756":1},"1":{"243":1,"453":1,"650":2,"670":1,"756":1,"774":1,"775":1,"776":1}}],["logs",{"1":{"242":1,"430":1,"436":1}}],["loggers",{"0":{"240":1}}],["logging",{"0":{"430":1},"1":{"238":1,"240":1,"430":1,"941":1}}],["log",{"1":{"221":1,"631":1,"780":1},"2":{"430":1},"4":{"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"995":1}}],["logic",{"1":{"459":1,"570":1,"573":1,"580":1,"859":1,"976":1}}],["logical",{"1":{"29":1,"941":1}}],["login",{"1":{"213":1,"663":1}}],["logistics",{"0":{"146":1}}],["loose",{"1":{"685":1}}],["loosely",{"1":{"316":1,"709":1}}],["loops",{"1":{"777":1}}],["loop",{"1":{"207":1,"779":1}}],["looks",{"1":{"288":1}}],["looking",{"0":{"110":1},"1":{"131":1,"135":1,"136":1,"139":1,"207":1,"887":1}}],["look",{"0":{"649":1,"888":1,"895":1},"1":{"30":1,"103":1,"192":1,"230":1,"231":1,"246":1,"254":1,"279":1,"283":1,"293":1,"394":1,"430":1,"477":1,"879":1,"973":1,"1003":1}}],["lossy",{"0":{"811":1}}],["loss",{"1":{"589":1}}],["losses",{"1":{"252":1}}],["lost",{"1":{"180":1}}],["loses",{"0":{"255":1},"1":{"255":1,"811":1}}],["lose",{"1":{"63":1,"338":1}}],["loyalty",{"1":{"827":1}}],["loyal",{"1":{"170":1}}],["love",{"0":{"178":1},"1":{"131":1}}],["longddl",{"3":{"969":1,"974":1}}],["longitudinal",{"1":{"824":1}}],["longitudinally",{"0":{"824":1}}],["long",{"0":{"418":1},"1":{"29":1,"30":1,"93":1,"219":1,"418":1,"588":1,"669":1,"810":1,"818":1,"827":1,"883":1,"948":1,"994":1,"1029":1}}],["lot",{"1":{"7":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"269":1,"278":1,"480":1}}],["lowest",{"0":{"776":1},"1":{"623":1,"731":1,"776":1}}],["low",{"0":{"0":1},"1":{"453":1,"485":1,"527":1,"673":1,"721":1},"2":{"955":1}}],["aqa",{"1":{"1022":1}}],["aaa",{"1":{"788":1}}],["aarrr",{"0":{"4":1,"554":1},"1":{"4":1,"554":1}}],["aka",{"1":{"630":1}}],["avl",{"0":{"979":1},"1":{"979":1}}],["available",{"0":{"907":1}}],["availability",{"1":{"513":1,"709":1,"712":1,"971":1}}],["avatars",{"1":{"729":1}}],["average",{"1":{"720":1}}],["averaging",{"0":{"588":1},"1":{"588":1}}],["avoidance",{"0":{"846":1},"1":{"846":1}}],["avoiding",{"1":{"428":1,"698":1,"823":1,"860":1,"865":1,"866":1,"914":1,"938":1,"943":1,"967":1}}],["avoid",{"0":{"324":1},"1":{"184":1,"270":1,"313":1,"388":1,"633":1,"737":1,"779":1,"813":1,"820":2,"853":1,"862":1,"957":1}}],["a11y",{"2":{"473":1}}],["a16z",{"0":{"259":1}}],["aesthetics",{"1":{"391":1,"393":1}}],["aws",{"0":{"749":1},"1":{"248":1,"749":2}}],["awards",{"1":{"1012":1}}],["awareness",{"1":{"198":1,"574":1}}],["await",{"1":{"779":1}}],["away",{"1":{"204":1}}],["apache",{"0":{"642":1,"708":1,"711":1,"722":1,"723":1,"728":1},"1":{"649":1,"711":1,"718":1,"722":1,"723":1,"981":1}}],["apart",{"1":{"497":1,"647":1}}],["apollo",{"0":{"501":1}}],["april",{"0":{"276":1},"1":{"276":1}}],["apis",{"1":{"375":1,"449":1,"497":1,"608":1,"689":1,"763":1,"774":1,"781":1}}],["api",{"0":{"731":1,"763":1,"1015":1},"1":{"221":1,"277":1,"412":1,"417":1,"485":1,"497":4,"515":6,"643":1,"660":1,"731":1,"782":1,"785":1,"1015":1},"2":{"455":1,"497":1,"1015":1}}],["apps",{"0":{"652":1},"1":{"270":1,"272":1,"391":1,"403":1,"480":1,"616":1,"650":1,"652":1,"745":1,"794":1,"961":1,"1007":1}}],["appearances",{"1":{"566":1}}],["appealing",{"1":{"249":1}}],["append",{"1":{"211":1,"524":1}}],["apple",{"0":{"622":1},"1":{"616":1,"622":1}}],["application",{"0":{"383":1,"387":1,"416":1,"457":1,"478":1,"645":1,"655":1,"793":1,"1005":1},"1":{"223":1,"239":1,"362":1,"402":1,"416":1,"421":1,"454":1,"497":1,"749":1,"891":1,"894":1,"911":1,"913":1,"958":1,"972":1,"973":1,"1005":1}}],["applications",{"0":{"420":1,"426":1,"446":1,"449":1,"648":1,"827":1},"1":{"135":1,"136":1,"156":1,"201":1,"214":1,"216":1,"219":1,"220":1,"223":2,"233":1,"284":1,"383":1,"387":1,"400":1,"411":1,"422":1,"425":1,"426":1,"443":1,"446":1,"463":1,"465":1,"466":1,"472":1,"480":1,"483":1,"484":1,"498":1,"504":1,"508":1,"514":1,"529":1,"595":1,"605":1,"634":1,"648":1,"649":1,"658":1,"660":1,"670":1,"684":1,"751":1,"782":1,"824":1,"825":1,"885":1,"894":1,"899":1,"901":1,"914":1,"930":1,"963":1}}],["applied",{"0":{"520":1},"1":{"66":1,"185":1,"321":1,"814":1,"912":1}}],["applying",{"0":{"192":1,"497":1},"1":{"384":1,"705":1,"788":1,"823":1}}],["apply",{"1":{"31":1,"118":1,"198":1,"297":1,"423":1,"879":1,"969":1}}],["app",{"0":{"160":1,"170":1,"223":1,"617":1,"797":1,"1000":1},"1":{"52":1,"158":1,"160":1,"161":1,"164":1,"167":1,"170":1,"204":1,"383":1,"435":1,"480":2,"481":1,"608":1,"617":1,"648":1,"793":1,"795":1,"797":1,"962":2}}],["appreciating",{"1":{"1024":1}}],["appreciation",{"1":{"71":1,"1025":1}}],["appreciated",{"1":{"980":1}}],["apprentice",{"0":{"124":1},"1":{"124":1},"2":{"124":1},"4":{"28":1,"29":1,"123":1,"124":1}}],["apprenticeship",{"0":{"123":1},"1":{"92":1,"1019":1},"2":{"28":1,"29":1,"123":1,"1019":1}}],["apprentices",{"1":{"28":1}}],["approximately",{"1":{"894":1}}],["appropriate",{"1":{"543":1,"609":1,"878":1}}],["approaches",{"0":{"429":1,"914":1},"1":{"417":1,"451":1,"509":1,"571":1,"652":1,"901":1}}],["approach",{"0":{"183":1,"215":1,"254":1,"661":1},"1":{"28":1,"52":1,"120":1,"212":1,"241":1,"248":1,"254":1,"290":1,"313":1,"351":1,"412":1,"423":2,"424":1,"426":1,"432":1,"438":1,"439":1,"440":1,"442":1,"466":1,"502":1,"508":1,"572":1,"628":1,"629":1,"637":1,"692":1,"709":1,"794":1,"834":1,"883":1,"884":1,"888":1,"889":1,"903":1,"911":1,"912":1,"945":1,"947":1,"968":1,"1029":1,"1048":1}}],["approvals",{"1":{"701":1}}],["approval",{"1":{"20":1}}],["ajax",{"1":{"213":1}}],["ahrens",{"1":{"866":1}}],["ahead",{"1":{"203":1}}],["aharooms",{"1":{"171":1}}],["affects",{"1":{"724":1,"756":1}}],["affecting",{"1":{"393":1}}],["affect",{"1":{"288":1}}],["affiliate",{"0":{"176":1},"1":{"176":1}}],["after",{"1":{"71":1,"226":1,"316":1,"341":1,"480":1,"844":1,"862":1}}],["aml",{"1":{"631":1}}],["amm",{"0":{"549":1},"1":{"549":1,"589":1},"2":{"549":1}}],["amount",{"1":{"588":1}}],["amounts",{"1":{"463":1}}],["among",{"0":{"614":1},"1":{"104":1,"111":1,"630":1,"958":1,"988":1,"996":1,"1001":1}}],["amazon",{"1":{"213":1,"272":1}}],["ambient",{"1":{"36":1}}],["aggregates",{"1":{"680":1}}],["aggregate",{"1":{"631":1}}],["agreeableness",{"1":{"567":1}}],["agreements",{"0":{"3":1},"1":{"3":1}}],["ago",{"1":{"185":1,"337":1}}],["agile",{"0":{"372":1},"1":{"162":1,"647":1,"665":1,"766":1,"771":1,"808":1,"870":1},"2":{"372":1,"374":1,"644":1,"988":1}}],["against",{"1":{"435":1,"912":1}}],["again",{"0":{"855":1},"1":{"99":1,"101":1,"102":1,"338":1}}],["agenda",{"1":{"674":1,"675":1,"676":1,"677":1,"678":1}}],["agentic",{"1":{"893":1}}],["agent",{"0":{"244":1,"423":1,"424":1,"440":1,"592":1,"999":1},"1":{"244":2,"410":1,"414":1,"416":1,"423":3,"424":1,"440":2,"592":1,"606":1,"649":1,"998":1,"1010":1}}],["agents",{"0":{"414":1},"1":{"268":1,"414":1,"423":2,"440":1,"663":1,"885":1,"999":1},"2":{"236":1,"244":1,"246":1,"248":1,"423":1,"424":1}}],["age",{"0":{"221":1},"1":{"98":1,"1029":1}}],["aider",{"0":{"1015":1,"1016":1},"1":{"1015":1,"1016":1},"2":{"1015":1,"1016":1}}],["aim",{"1":{"996":1}}],["aimed",{"1":{"980":1}}],["aims",{"1":{"201":1,"216":1,"219":1,"365":1,"428":1,"638":1,"959":2}}],["aiming",{"1":{"27":1}}],["airwatt",{"1":{"169":1}}],["ai",{"0":{"93":1,"103":2,"104":1,"166":1,"224":1,"248":1,"250":1,"257":2,"258":2,"260":1,"261":1,"263":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"319":1,"414":1,"425":1,"436":1,"444":1,"448":1,"449":1,"592":1,"624":1,"627":1,"884":1,"890":1,"963":1,"964":1,"998":2,"999":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":2,"1006":1,"1007":1,"1008":1,"1009":1,"1015":1,"1016":1},"1":{"93":1,"103":1,"104":1,"224":1,"232":1,"236":1,"244":1,"248":2,"250":1,"257":1,"258":3,"259":1,"260":1,"261":1,"263":1,"264":3,"268":2,"270":2,"271":1,"272":2,"273":1,"274":1,"275":2,"282":2,"284":3,"285":2,"286":3,"287":1,"288":4,"319":1,"356":1,"375":1,"405":1,"408":1,"410":1,"411":1,"414":2,"417":1,"420":1,"421":1,"422":2,"423":1,"425":1,"429":1,"436":2,"438":1,"439":2,"440":1,"441":1,"443":1,"444":1,"446":1,"448":1,"449":2,"492":1,"494":1,"592":1,"624":1,"626":1,"627":1,"628":2,"629":2,"651":1,"869":1,"884":3,"885":3,"887":3,"890":1,"963":3,"964":1,"974":1,"997":1,"998":2,"999":1,"1000":3,"1001":1,"1002":3,"1003":1,"1004":4,"1005":2,"1006":1,"1007":2,"1008":1,"1009":1,"1012":1,"1015":1,"1016":1,"1018":1,"1037":2},"2":{"236":1,"244":1,"246":1,"248":1,"250":1,"265":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"291":1,"292":1,"319":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"414":1,"416":1,"417":1,"418":1,"419":1,"422":1,"423":2,"424":2,"425":1,"428":1,"431":1,"433":1,"434":1,"439":1,"440":1,"441":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"592":1,"623":1,"624":1,"625":1,"626":1,"627":1,"628":1,"629":1,"789":1,"884":1,"887":2,"888":1,"890":1,"891":1,"893":1,"963":1,"965":1,"1037":1},"4":{"623":1,"624":1,"625":1,"626":1,"627":1,"963":1,"964":1,"965":1,"1015":1,"1016":1,"1017":1,"1018":1}}],["abductive",{"0":{"953":1},"1":{"953":1}}],["abundant",{"0":{"812":1}}],["abbreviated",{"1":{"453":1}}],["abstract",{"0":{"740":1,"842":1},"1":{"575":1,"699":1,"842":1,"993":1}}],["abstractions",{"0":{"958":1},"1":{"958":1}}],["abstraction",{"1":{"544":1}}],["absolutely",{"1":{"512":1}}],["absolve",{"1":{"341":1}}],["absence",{"1":{"69":1,"73":1,"76":1,"84":1,"85":1,"87":1}}],["absent",{"1":{"2":1}}],["able",{"1":{"340":1}}],["ability",{"1":{"136":1,"182":1,"625":1,"951":1,"959":1}}],["abandon",{"1":{"89":1}}],["about",{"0":{"191":1,"399":1,"738":1,"806":1,"808":1,"829":1},"1":{"46":1,"48":1,"68":1,"69":1,"70":1,"73":1,"76":1,"77":1,"81":1,"83":1,"84":1,"85":1,"87":1,"88":1,"94":1,"106":1,"118":1,"136":1,"154":1,"188":1,"191":1,"195":1,"196":1,"203":1,"211":1,"238":1,"249":1,"264":1,"269":1,"272":1,"278":1,"294":1,"297":1,"300":1,"301":1,"308":1,"363":1,"406":1,"436":1,"446":1,"495":1,"522":1,"524":1,"526":1,"540":1,"551":1,"562":1,"578":1,"611":1,"631":1,"640":1,"687":1,"701":1,"712":1,"799":1,"887":1,"903":1,"915":1,"942":1,"997":1,"1006":2,"1011":1}}],["audience",{"1":{"994":1}}],["audiences",{"1":{"703":1,"704":1,"991":1}}],["audio",{"1":{"236":1,"892":1}}],["audits",{"1":{"27":1}}],["authentic",{"1":{"876":1}}],["authentication",{"1":{"520":1,"869":1}}],["authority",{"0":{"703":1}}],["authorize",{"1":{"587":1}}],["authorization",{"0":{"222":1},"1":{"222":1,"626":1}}],["auth",{"1":{"204":1}}],["autogen",{"1":{"478":1}}],["autocomplete",{"1":{"464":1}}],["automating",{"1":{"933":1,"1018":1}}],["automatically",{"1":{"971":1}}],["automatic",{"1":{"644":1}}],["automation",{"0":{"146":1,"164":1},"1":{"164":1,"399":1,"715":1,"797":1,"995":1,"998":1,"1010":1,"1034":1}}],["automata",{"0":{"215":1,"611":1,"683":1,"1009":1,"1012":1},"1":{"215":1,"611":1,"683":1,"686":1,"1009":1,"1012":1},"2":{"215":1,"611":1}}],["automates",{"1":{"624":1}}],["automate",{"1":{"175":1,"184":1,"478":1,"750":1}}],["automated",{"1":{"115":1,"236":1,"401":1,"589":1,"667":1,"670":1,"803":1}}],["autonomy",{"1":{"34":1,"58":1,"351":1}}],["australia",{"2":{"180":1}}],["august",{"0":{"206":1,"272":1,"280":1},"1":{"206":1,"272":1}}],["augmented",{"0":{"116":1},"1":{"161":1,"431":1,"442":1,"883":1,"888":1,"892":1}}],["aug",{"1":{"106":1}}],["ac",{"1":{"999":1}}],["acid",{"0":{"707":1},"1":{"707":2}}],["acquisition",{"1":{"554":1}}],["acquire",{"1":{"164":1}}],["achieving",{"1":{"544":1}}],["achievements",{"1":{"279":1,"293":1}}],["achieve",{"0":{"210":1,"736":1},"1":{"210":1,"423":1,"428":1,"816":1,"877":1,"980":1}}],["across",{"1":{"136":1,"156":1,"163":1,"165":1,"174":1,"175":1,"269":1,"277":1,"278":1,"322":1,"345":1,"376":1,"381":1,"446":1,"449":1,"452":1,"489":1,"497":1,"501":1,"544":1,"630":1,"649":1,"719":1,"752":1,"814":1,"826":1,"853":1,"890":1,"949":1}}],["act",{"0":{"439":1,"826":1},"1":{"691":1,"826":1}}],["actual",{"1":{"325":1}}],["actually",{"1":{"33":1,"511":1,"635":1}}],["actors",{"0":{"231":1}}],["active",{"1":{"1047":1}}],["activates",{"1":{"858":1}}],["activation",{"1":{"554":1}}],["activity",{"1":{"811":1}}],["activities",{"0":{"828":1},"1":{"116":1,"190":1,"194":1,"235":1,"343":1,"364":1,"365":1,"566":1,"997":1}}],["action",{"0":{"835":1},"1":{"801":1,"835":1,"846":1}}],["actions",{"1":{"237":1,"299":1,"401":1,"411":1,"494":1,"695":1,"745":1,"810":1}}],["actionable",{"1":{"67":1,"246":1,"632":1}}],["accumulate",{"1":{"588":1}}],["accuracy",{"0":{"434":1},"1":{"415":1,"417":1,"431":1,"435":1,"442":1,"623":1,"760":1,"888":1}}],["accurately",{"1":{"730":1,"771":1}}],["accurate",{"0":{"576":1},"1":{"249":1,"284":1,"372":1,"406":1,"420":1,"442":1,"640":1,"707":1,"737":1}}],["accident",{"1":{"185":1}}],["accidentally",{"1":{"2":1}}],["accounting",{"0":{"760":1},"1":{"760":1}}],["account",{"0":{"326":1,"550":1},"1":{"304":1,"894":1}}],["accounts",{"1":{"175":1,"242":1,"550":1}}],["accountability",{"1":{"27":1}}],["accelerated",{"1":{"1037":1,"1040":1}}],["accelerate",{"0":{"481":1,"715":1},"1":{"179":1,"250":1}}],["accelerating",{"0":{"203":1},"1":{"123":1}}],["acceptance",{"0":{"750":1},"1":{"750":1}}],["acceptable",{"1":{"445":1}}],["accepted",{"1":{"701":1}}],["accept",{"1":{"165":1,"340":1}}],["accessing",{"1":{"636":2}}],["accessibility",{"0":{"208":1},"1":{"208":1,"382":1,"450":1,"458":1,"504":1,"899":1},"2":{"208":1,"458":1,"463":1,"473":1}}],["accessible",{"1":{"167":1,"392":1,"449":1}}],["accessed",{"1":{"437":1}}],["access",{"1":{"31":1,"42":1,"98":1,"177":1,"184":1,"202":1,"238":2,"249":1,"553":1,"763":1,"769":1,"790":1,"825":1,"892":1,"944":1,"959":1,"965":1,"971":1,"976":1}}],["alumni",{"2":{"1032":1}}],["alumnus",{"1":{"1032":1}}],["alms",{"1":{"888":1}}],["alm",{"1":{"888":1}}],["almost",{"1":{"96":1}}],["already",{"0":{"820":1},"1":{"1017":1}}],["algebraic",{"1":{"691":1}}],["algorithm",{"1":{"428":1,"623":1,"654":1,"789":1,"896":1,"913":1}}],["algorithms",{"1":{"416":1,"511":1,"612":1,"654":1,"946":1},"2":{"654":1}}],["alpine",{"1":{"640":1}}],["alpaca",{"1":{"408":1}}],["alone",{"0":{"736":1},"1":{"339":1,"423":1,"736":1,"811":1}}],["alongside",{"1":{"501":1,"972":1,"999":1}}],["along",{"1":{"151":1,"368":1,"1043":1}}],["aligning",{"1":{"447":1}}],["alignment",{"1":{"379":1,"426":1,"1028":1}}],["align",{"1":{"365":1,"647":1,"754":1,"758":1}}],["aligned",{"0":{"772":1},"1":{"15":1,"502":1,"762":1,"772":1}}],["alias",{"1":{"304":1}}],["alerts",{"1":{"252":1}}],["alexander",{"1":{"67":1}}],["alternative",{"0":{"872":1},"1":{"470":1,"743":1}}],["alternatives",{"1":{"117":1,"733":1,"784":1}}],["altcoin",{"0":{"251":1},"1":{"245":1,"251":1}}],["alt",{"0":{"245":1}}],["also",{"1":{"112":1,"113":1,"115":1,"251":1,"267":1,"274":1,"296":1,"311":1,"365":1,"368":1,"450":1,"480":1,"591":1,"889":1,"892":1,"945":1,"997":1,"1002":1,"1006":1,"1010":1}}],["allocation",{"1":{"211":1,"524":1}}],["allowing",{"1":{"249":1,"427":1,"636":1,"682":1,"892":1,"959":1,"965":1,"1030":1}}],["allowed",{"1":{"179":1,"415":1}}],["allows",{"1":{"158":1,"170":1,"423":1,"424":1,"455":1,"474":1,"486":1,"501":1,"515":1,"548":1,"605":1,"607":1,"613":1,"960":1}}],["allowance",{"0":{"41":1}}],["all",{"0":{"990":1},"1":{"68":1,"88":1,"105":1,"106":1,"114":1,"182":1,"194":1,"195":1,"196":1,"294":1,"335":1,"341":1,"345":1,"381":1,"392":1,"421":1,"423":1,"436":1,"477":1,"502":1,"511":1,"517":1,"525":1,"530":1,"588":1,"624":1,"630":1,"682":1,"735":1,"894":2,"958":1,"978":3,"1006":1,"1042":1}}],["always",{"1":{"30":1,"41":1,"280":1,"291":1,"328":1,"512":1,"630":1}}],["aspect",{"1":{"421":1,"491":1,"638":1}}],["aspects",{"1":{"330":1,"334":1}}],["aspiring",{"1":{"124":1}}],["asking",{"1":{"1040":1}}],["asked",{"1":{"337":1,"867":1}}],["ask",{"1":{"300":1}}],["asynchronous",{"1":{"779":1}}],["async",{"1":{"206":1,"779":1}}],["asia",{"1":{"165":1,"360":1,"1012":1}}],["assurance",{"0":{"768":1,"770":1},"1":{"770":1,"920":1,"983":1}}],["assumptions",{"0":{"735":1,"737":1,"741":1},"1":{"735":1,"737":1,"739":1,"740":1,"823":1,"876":1,"938":1}}],["assumption",{"1":{"480":1}}],["associated",{"1":{"407":1}}],["assisted",{"1":{"628":1,"629":1}}],["assists",{"1":{"514":1}}],["assistive",{"1":{"473":1}}],["assist",{"1":{"439":1}}],["assistants",{"0":{"159":1},"1":{"159":1,"438":1,"628":1,"629":1,"884":1}}],["assistant",{"0":{"138":1,"248":1,"441":1,"651":1},"1":{"138":1,"248":1,"441":2}}],["assignments",{"0":{"1000":1},"1":{"1000":1}}],["assignment",{"0":{"74":1,"75":1},"1":{"74":1,"75":1}}],["assert",{"0":{"696":1},"1":{"696":1,"699":1,"780":1}}],["assertions",{"1":{"464":1}}],["assembly",{"1":{"453":1}}],["asset",{"1":{"281":1,"588":2,"602":1}}],["assets",{"0":{"14":1,"150":1,"298":1},"1":{"14":1,"53":1,"150":1,"298":1,"760":1,"912":1},"2":{"150":1}}],["assessing",{"1":{"285":1}}],["assessments",{"1":{"800":1}}],["assessment",{"0":{"74":1,"643":1},"1":{"74":1,"89":1},"2":{"365":1}}],["assess",{"1":{"48":1,"308":1,"358":1,"376":1,"424":1,"889":1}}],["ash",{"1":{"67":1}}],["as",{"0":{"117":1,"216":1,"302":1,"340":1,"812":1,"826":1,"889":1},"1":{"15":1,"36":1,"44":2,"54":1,"95":1,"100":1,"119":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"151":1,"162":1,"190":3,"201":2,"207":1,"216":1,"217":1,"218":3,"219":1,"220":3,"226":1,"251":1,"264":1,"266":1,"269":3,"270":2,"275":1,"278":3,"279":1,"281":1,"291":1,"293":1,"299":2,"344":1,"345":1,"381":1,"415":1,"423":2,"433":1,"440":1,"442":1,"445":2,"449":1,"450":1,"453":1,"470":1,"480":1,"484":1,"489":1,"523":1,"526":1,"529":1,"588":2,"591":2,"613":1,"642":2,"682":1,"691":1,"703":1,"809":1,"810":1,"826":1,"859":1,"867":2,"881":1,"888":1,"889":2,"892":1,"918":1,"972":1,"997":1,"1003":1,"1020":1,"1021":1,"1022":1,"1024":1,"1034":1,"1036":1,"1037":1,"1040":1,"1041":1,"1043":1,"1047":1,"1049":1,"1050":1}}],["adavantages",{"1":{"889":1}}],["adapting",{"1":{"772":1}}],["adaptability",{"1":{"313":1,"384":1}}],["adaptation",{"1":{"67":1,"171":1}}],["adapt",{"1":{"287":1,"854":1}}],["adr",{"1":{"669":1}}],["adjacent",{"0":{"315":1},"1":{"315":1}}],["adjusting",{"1":{"623":1,"834":1}}],["adjustable",{"1":{"619":1}}],["adjusted",{"1":{"372":1}}],["adjust",{"0":{"185":1},"1":{"810":1}}],["advocate",{"1":{"1026":1}}],["advice",{"1":{"937":1}}],["advisory",{"1":{"639":1,"653":1,"714":1}}],["adversarial",{"0":{"407":1},"1":{"407":1,"435":1}}],["adventure",{"1":{"280":1,"291":1}}],["advantage",{"1":{"513":1}}],["advantages",{"0":{"484":1},"1":{"67":1,"220":1,"412":1,"528":1,"584":1,"597":1,"598":1,"604":1}}],["advancing",{"1":{"492":1}}],["advances",{"1":{"867":1}}],["advance",{"0":{"359":1},"1":{"347":1,"839":1}}],["advanced",{"0":{"481":1},"1":{"233":1,"362":1,"421":1,"889":1,"940":1,"1003":1}}],["advancements",{"1":{"104":1,"108":1,"206":1,"259":1,"273":1,"274":1,"277":1,"494":1,"496":1,"997":1,"1001":1}}],["advancement",{"0":{"890":1},"1":{"65":1}}],["adds",{"1":{"846":1}}],["additional",{"1":{"318":1,"325":1,"605":1}}],["additionally",{"1":{"103":1,"497":1,"999":1}}],["adding",{"1":{"288":1,"511":2,"831":1,"860":1}}],["addressable",{"1":{"560":1}}],["addresses",{"1":{"431":1,"922":1}}],["address",{"1":{"201":1,"427":1,"753":1,"769":1,"820":1,"888":1}}],["addressing",{"1":{"114":1,"218":1,"484":1}}],["adopting",{"1":{"220":1,"659":1}}],["adoption",{"0":{"234":1,"452":1},"1":{"216":1,"218":1,"234":1,"281":1},"2":{"638":1}}],["adopt",{"1":{"48":1,"308":1,"358":2}}],["adopted",{"1":{"1":1,"219":1}}],["administrators",{"1":{"14":1}}],["arbitrage",{"0":{"1010":1},"1":{"589":1,"1010":1}}],["arbitrary",{"1":{"202":1}}],["aria",{"0":{"463":1},"1":{"463":1},"2":{"463":1}}],["argo",{"1":{"400":1,"744":1}}],["ar",{"1":{"375":1,"1004":1}}],["arraybuffers",{"1":{"480":1}}],["arrays",{"1":{"211":2,"524":2}}],["array",{"0":{"211":1}}],["art",{"0":{"282":1},"1":{"124":1,"282":1,"928":1}}],["artisans",{"1":{"801":1}}],["artificial",{"1":{"169":1,"277":1,"285":1,"440":1,"449":1}}],["artifacts",{"1":{"15":1,"662":1}}],["artifact",{"0":{"15":1},"1":{"1006":1}}],["articles",{"1":{"334":1,"866":1,"880":1}}],["article",{"1":{"21":1,"115":1,"212":1,"223":1,"251":1,"284":1,"285":1,"349":1,"351":1,"406":2,"410":1,"411":1,"412":1,"416":1,"420":1,"422":1,"432":1,"433":1,"437":1,"440":1,"441":1,"449":1,"451":1,"470":1,"471":1,"487":1,"516":1,"530":1,"548":1,"550":1,"552":1,"583":1,"584":1,"587":1,"589":1,"591":1,"593":1,"595":1,"597":1,"598":1,"601":1,"604":1,"605":1,"879":1,"890":1,"891":1,"958":1,"995":1}}],["archiving",{"0":{"1007":1},"1":{"1007":1}}],["archival",{"1":{"239":1}}],["archived",{"4":{"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1}}],["archive",{"0":{"11":1,"239":1},"1":{"11":1}}],["architect",{"1":{"1015":1}}],["architectural",{"1":{"465":1}}],["architectures",{"1":{"201":1,"414":1,"497":1,"763":1}}],["architecture",{"0":{"507":1,"583":1,"591":1,"596":1,"669":1,"692":1,"956":1},"1":{"103":1,"156":1,"201":1,"397":1,"414":1,"483":1,"507":1,"583":1,"591":1,"669":1,"679":1,"692":1,"713":1,"758":1,"886":1,"956":1,"958":2,"973":1},"2":{"201":1,"440":1,"596":1,"614":1,"615":1,"669":1,"956":1,"958":1,"973":1},"4":{"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"679":1,"680":1,"681":1,"682":1,"683":1,"684":1,"685":1,"686":1,"687":1,"688":1,"689":1,"690":1,"691":1,"692":1,"693":1,"694":1,"695":1,"955":1,"956":1,"957":1,"958":1,"959":1,"960":1}}],["architects",{"0":{"125":1},"1":{"125":1}}],["architecting",{"0":{"103":1},"1":{"103":1}}],["arm",{"0":{"38":1}}],["around",{"1":{"30":1,"183":1,"271":1,"368":1,"1036":1}}],["are",{"0":{"37":1,"323":1,"647":1,"820":1,"854":1,"862":1,"873":1,"904":1},"1":{"24":1,"39":1,"66":1,"93":1,"95":1,"131":1,"136":1,"138":1,"181":1,"185":1,"188":2,"265":1,"269":3,"272":1,"277":1,"278":3,"283":2,"285":1,"291":1,"292":1,"296":3,"303":1,"305":2,"331":2,"335":1,"344":1,"352":1,"356":1,"406":2,"421":1,"428":1,"430":1,"449":1,"454":1,"465":1,"470":1,"486":1,"490":3,"492":1,"495":1,"502":1,"518":1,"543":1,"630":1,"642":1,"683":1,"814":1,"817":1,"862":1,"867":1,"898":1,"901":1,"944":1,"969":1,"978":2,"980":1,"987":1}}],["areas",{"1":{"300":1,"356":1,"376":1,"858":1,"869":1}}],["area",{"1":{"7":1}}],["atomicity",{"0":{"906":1},"1":{"707":1,"906":1}}],["atomic",{"0":{"451":1,"499":1,"784":1},"1":{"321":1,"387":1,"390":1,"451":1,"499":1,"504":1,"538":1,"541":1,"784":2,"790":1,"872":1,"984":1},"2":{"451":1,"499":1}}],["attitudinal",{"1":{"817":1}}],["attachment",{"1":{"618":1,"888":1}}],["attacks",{"1":{"411":2,"594":1,"941":1}}],["attributes",{"1":{"442":1}}],["attractiveness",{"1":{"827":1}}],["attracting",{"1":{"144":1}}],["attract",{"1":{"392":1}}],["attrace",{"1":{"176":1}}],["attended",{"1":{"368":1}}],["attention",{"1":{"280":1,"291":1}}],["attempt",{"1":{"123":1}}],["at",{"0":{"92":1,"93":1,"95":1,"100":1,"110":1,"125":1,"258":1,"296":1,"345":1,"356":1,"397":1,"643":1,"807":1,"818":1,"921":1},"1":{"4":1,"29":1,"33":1,"34":1,"56":1,"66":1,"92":1,"96":1,"103":1,"109":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"153":1,"184":1,"187":1,"230":1,"231":1,"246":1,"254":1,"258":1,"269":1,"278":1,"283":1,"288":1,"291":1,"295":1,"306":1,"310":1,"311":1,"321":1,"324":1,"332":1,"333":1,"346":1,"355":1,"362":1,"364":1,"430":1,"439":1,"480":1,"572":1,"588":1,"624":1,"643":1,"665":1,"879":1,"980":1,"1003":1,"1021":1,"1022":1,"1023":1,"1026":1,"1027":1,"1028":1,"1032":1,"1034":1,"1035":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1043":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1},"2":{"54":1,"55":1,"56":1,"125":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1}}],["anh",{"0":{"1019":1,"1033":1,"1035":1},"1":{"1000":1,"1019":1,"1033":1,"1035":1}}],["anhnh",{"3":{"615":1,"913":1}}],["anxiety",{"1":{"857":1}}],["anecdotes",{"1":{"832":1}}],["analogy",{"0":{"623":1}}],["analytical",{"1":{"720":1,"884":1}}],["analytic",{"0":{"720":1}}],["analytics",{"1":{"173":1,"274":1,"415":1,"514":1,"631":2,"643":1,"682":1,"715":1,"717":1,"793":1},"2":{"514":2}}],["analysts",{"1":{"632":1,"722":1}}],["analyst",{"0":{"632":1}}],["analysis",{"0":{"241":1,"730":1,"754":1,"809":1},"1":{"241":1,"242":1,"245":1,"268":1,"396":1,"406":1,"446":1,"722":1,"754":1,"802":1,"809":1,"812":1,"819":1,"823":1,"952":1,"981":1,"1005":1}}],["analyzer",{"0":{"1005":1}}],["analyze",{"1":{"396":1,"730":1}}],["analyzing",{"1":{"355":1,"514":1,"765":1}}],["anchor",{"0":{"546":1},"1":{"546":2,"919":1},"2":{"546":1,"547":1}}],["angular",{"0":{"475":1},"1":{"475":1}}],["angles",{"1":{"97":1}}],["animation",{"2":{"471":1}}],["animations",{"0":{"490":1},"1":{"380":1,"490":2,"618":1},"2":{"490":2}}],["answer",{"1":{"442":1,"517":1}}],["answering",{"1":{"410":1}}],["answers",{"1":{"301":1,"409":1,"624":1,"651":1,"845":1}}],["anti",{"1":{"631":1}}],["anticipating",{"1":{"371":1}}],["antran",{"3":{"425":1,"448":1,"500":1}}],["ant",{"1":{"387":1}}],["anthropic",{"1":{"272":1,"438":1}}],["anywhere",{"1":{"935":1}}],["anyone",{"1":{"311":1}}],["any",{"0":{"921":1},"1":{"89":1,"98":1,"311":1,"470":1,"511":1,"605":1,"977":1}}],["anniversary",{"1":{"537":1}}],["anna",{"3":{"167":1,"249":1,"285":1,"287":1,"588":1}}],["announcing",{"1":{"226":1}}],["announced",{"1":{"1000":1}}],["announcement",{"0":{"73":1,"1000":1}}],["announce",{"1":{"69":1,"72":1,"73":1,"76":1,"78":1,"84":1,"85":1,"87":1,"191":1,"265":1,"292":1}}],["annouce",{"1":{"83":1,"86":1}}],["annual",{"0":{"5":1},"1":{"5":1,"90":1}}],["another",{"0":{"705":1},"1":{"49":1,"90":1,"93":1,"185":1,"605":1,"902":1}}],["android",{"0":{"131":1,"149":1},"1":{"131":1,"158":1,"383":1,"793":1}}],["and",{"0":{"52":1,"53":1,"93":1,"99":1,"103":1,"104":1,"105":1,"106":1,"107":1,"110":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"151":1,"173":1,"187":1,"190":1,"211":1,"221":1,"222":1,"225":1,"227":1,"229":1,"230":1,"231":1,"233":1,"234":1,"237":2,"239":1,"255":1,"256":1,"257":1,"258":1,"261":1,"262":1,"263":1,"283":1,"285":1,"286":1,"312":1,"319":1,"328":1,"356":1,"364":1,"394":1,"395":1,"397":1,"406":1,"416":1,"435":1,"459":1,"466":1,"484":1,"488":1,"489":1,"527":1,"528":1,"532":1,"533":1,"534":1,"536":1,"609":1,"610":1,"612":1,"614":1,"627":1,"631":1,"636":2,"639":1,"650":1,"655":1,"663":1,"708":1,"720":1,"753":1,"755":1,"776":1,"782":1,"790":1,"795":1,"802":1,"804":1,"805":1,"832":1,"835":1,"837":1,"838":1,"873":1,"876":1,"878":2,"895":1,"901":1,"914":1,"915":1,"944":1,"955":1,"957":1,"958":1,"960":1,"968":1,"972":1,"975":1,"994":1,"995":1,"998":1,"999":1,"1000":1,"1001":1,"1005":1,"1007":1,"1008":1,"1010":1,"1011":1,"1013":1,"1014":1,"1025":1,"1028":1},"1":{"3":1,"4":1,"7":1,"14":1,"15":1,"17":1,"25":1,"27":2,"28":1,"29":1,"30":1,"31":4,"32":1,"33":1,"34":1,"37":1,"38":1,"39":1,"40":1,"41":3,"43":1,"44":1,"45":1,"46":2,"48":2,"49":2,"50":1,"52":2,"53":1,"54":1,"58":2,"60":1,"62":1,"63":1,"64":1,"65":1,"66":2,"67":3,"70":1,"77":1,"78":1,"91":1,"93":2,"95":2,"96":2,"98":1,"99":1,"100":1,"101":1,"102":1,"103":4,"104":2,"105":2,"106":3,"107":4,"108":3,"109":1,"110":1,"112":2,"113":3,"114":1,"115":3,"116":2,"117":3,"118":2,"119":1,"120":2,"121":1,"122":2,"124":3,"126":2,"127":2,"128":2,"129":2,"130":2,"131":1,"132":2,"133":2,"134":2,"135":1,"136":3,"137":2,"138":2,"139":1,"140":2,"141":2,"142":2,"143":2,"144":2,"145":2,"146":2,"147":2,"148":2,"149":2,"151":1,"152":2,"153":1,"154":2,"155":2,"156":1,"157":1,"158":2,"159":3,"160":1,"163":2,"164":3,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"173":2,"174":1,"175":1,"177":1,"178":2,"180":3,"181":1,"182":2,"184":1,"185":2,"187":1,"190":2,"192":2,"197":1,"198":2,"199":2,"201":3,"203":2,"204":2,"205":3,"206":2,"207":3,"209":1,"211":3,"212":4,"213":2,"214":3,"215":1,"216":2,"217":1,"218":3,"219":2,"220":3,"221":1,"222":1,"223":3,"224":4,"225":1,"226":1,"227":2,"228":1,"229":1,"230":1,"231":1,"232":2,"233":2,"234":1,"235":2,"236":2,"237":1,"238":4,"239":1,"240":2,"241":2,"242":1,"244":1,"245":2,"246":1,"248":2,"250":1,"251":2,"252":2,"255":1,"256":1,"257":1,"258":2,"259":1,"260":1,"261":1,"262":1,"263":1,"264":4,"265":3,"266":1,"267":1,"269":3,"270":6,"271":2,"272":3,"273":1,"274":4,"275":3,"277":4,"278":3,"279":1,"280":1,"281":2,"282":3,"283":3,"284":6,"285":4,"286":3,"287":1,"288":3,"289":4,"290":1,"291":1,"292":3,"293":1,"295":1,"297":2,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":2,"307":2,"308":2,"309":2,"310":1,"311":3,"312":1,"313":2,"314":2,"315":1,"316":3,"317":1,"318":1,"319":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"330":1,"332":2,"333":1,"334":2,"336":1,"337":1,"338":1,"339":1,"342":2,"343":1,"344":1,"345":1,"346":5,"348":2,"349":2,"351":2,"352":1,"354":1,"355":3,"356":3,"358":2,"360":1,"362":1,"363":1,"365":3,"366":1,"367":1,"368":1,"369":1,"370":1,"371":1,"372":2,"373":1,"374":1,"375":2,"376":3,"377":2,"378":2,"379":3,"380":1,"381":1,"382":2,"383":2,"384":2,"385":1,"386":1,"387":1,"388":2,"389":2,"390":3,"391":3,"392":2,"393":2,"394":3,"395":2,"396":2,"397":2,"398":2,"399":2,"400":1,"401":1,"402":2,"403":2,"404":2,"405":4,"406":6,"407":1,"408":1,"409":1,"410":2,"411":2,"412":2,"413":1,"414":2,"415":4,"416":1,"417":2,"418":1,"420":3,"421":1,"422":1,"423":6,"424":3,"425":1,"426":3,"427":1,"428":4,"429":1,"430":1,"431":5,"432":2,"433":2,"434":1,"435":2,"436":3,"438":2,"439":1,"441":3,"442":1,"444":2,"445":2,"446":3,"447":2,"448":1,"449":4,"450":1,"451":1,"452":2,"453":1,"454":2,"455":1,"456":1,"457":1,"459":2,"460":2,"462":1,"463":2,"464":2,"469":2,"470":2,"471":1,"472":2,"473":1,"475":2,"476":1,"477":2,"478":1,"480":1,"481":3,"482":1,"483":2,"485":1,"487":2,"489":2,"491":1,"492":3,"493":3,"494":2,"495":2,"496":1,"497":2,"499":1,"500":1,"501":1,"502":3,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"511":1,"512":1,"513":1,"514":2,"515":5,"518":1,"520":2,"521":2,"523":1,"524":3,"525":2,"526":1,"527":2,"528":4,"529":1,"530":3,"532":1,"533":1,"534":1,"536":1,"538":1,"540":1,"541":1,"543":3,"544":1,"545":1,"546":2,"548":1,"550":1,"551":3,"552":3,"553":3,"554":2,"558":1,"559":1,"560":1,"562":1,"564":1,"565":2,"566":3,"567":2,"568":2,"569":1,"570":2,"571":3,"572":3,"573":3,"574":1,"575":2,"576":2,"577":3,"578":4,"579":3,"580":3,"581":2,"583":1,"584":1,"585":2,"586":1,"587":1,"588":1,"589":2,"590":1,"591":2,"593":1,"594":3,"595":2,"596":2,"597":1,"598":1,"601":1,"602":2,"603":3,"604":1,"605":1,"606":2,"607":1,"608":2,"610":1,"613":3,"616":2,"617":2,"618":2,"619":1,"620":2,"621":2,"622":1,"623":1,"624":1,"625":4,"627":1,"628":4,"629":4,"630":2,"631":2,"632":2,"633":3,"634":2,"635":1,"637":3,"638":1,"639":1,"640":3,"641":1,"642":1,"643":2,"644":2,"645":2,"646":1,"647":1,"648":3,"649":2,"650":1,"651":2,"652":2,"653":2,"655":2,"656":1,"657":3,"658":2,"659":3,"660":2,"661":1,"662":2,"663":4,"664":2,"665":2,"666":1,"667":2,"668":3,"669":2,"670":2,"671":2,"672":2,"673":2,"674":1,"675":1,"676":1,"677":1,"678":1,"679":1,"680":1,"681":3,"682":2,"683":3,"684":2,"685":2,"686":2,"687":2,"688":2,"689":2,"690":2,"691":2,"692":1,"693":2,"694":2,"695":2,"696":2,"697":2,"698":1,"699":1,"700":2,"701":2,"702":2,"703":1,"704":1,"705":2,"706":2,"707":2,"708":3,"709":2,"710":2,"711":2,"712":2,"713":3,"714":2,"715":2,"716":2,"717":2,"718":3,"719":1,"720":2,"721":1,"722":1,"724":2,"725":2,"726":2,"727":2,"728":2,"729":3,"730":2,"731":2,"732":2,"733":3,"734":1,"735":1,"736":1,"738":2,"739":2,"741":2,"742":2,"743":2,"744":1,"745":2,"746":1,"747":2,"748":2,"749":2,"750":2,"751":1,"753":2,"754":2,"755":2,"756":4,"757":1,"759":2,"760":2,"761":2,"762":2,"763":1,"764":2,"765":1,"766":2,"767":1,"768":2,"769":1,"770":2,"771":2,"772":2,"773":3,"774":1,"775":2,"776":3,"777":3,"778":1,"779":2,"780":1,"781":2,"782":2,"783":2,"784":2,"785":1,"786":2,"787":3,"788":3,"790":3,"791":2,"792":2,"793":1,"794":1,"795":2,"796":1,"797":2,"798":1,"799":3,"800":2,"801":4,"802":2,"803":3,"804":3,"805":3,"806":1,"807":2,"808":2,"809":4,"810":3,"811":2,"812":1,"813":1,"814":3,"815":2,"816":1,"817":2,"818":3,"819":1,"820":1,"821":1,"822":1,"823":2,"824":1,"825":3,"826":1,"827":2,"828":2,"829":2,"830":2,"832":2,"833":1,"834":2,"835":1,"836":1,"837":2,"838":1,"839":3,"840":1,"841":1,"842":2,"843":1,"844":3,"845":1,"846":2,"847":2,"848":3,"849":2,"850":1,"851":2,"852":2,"853":3,"854":3,"855":1,"856":2,"857":2,"858":3,"859":1,"860":2,"861":4,"862":1,"863":3,"864":3,"865":2,"866":2,"867":1,"868":1,"869":2,"870":3,"872":2,"873":1,"874":3,"875":3,"876":1,"877":1,"878":3,"879":1,"880":2,"881":2,"882":2,"884":2,"885":1,"886":2,"887":1,"888":1,"889":1,"890":3,"891":3,"892":2,"893":2,"894":1,"895":1,"897":1,"898":1,"899":1,"901":1,"902":1,"903":1,"904":1,"905":2,"906":1,"907":1,"908":2,"909":2,"910":1,"912":2,"913":2,"914":5,"915":2,"917":2,"918":1,"919":2,"920":2,"921":1,"922":1,"923":1,"924":1,"929":1,"933":1,"936":1,"937":2,"938":2,"939":3,"940":2,"941":1,"942":1,"943":3,"944":1,"946":2,"947":2,"948":2,"949":2,"951":1,"952":3,"953":2,"955":1,"956":2,"957":2,"958":7,"959":3,"961":2,"962":2,"963":3,"964":2,"965":1,"966":1,"967":1,"968":2,"969":3,"971":2,"972":3,"973":3,"974":1,"975":1,"976":2,"978":2,"979":3,"980":2,"981":2,"982":1,"983":2,"984":1,"985":2,"987":4,"988":1,"989":2,"990":1,"991":2,"992":2,"993":2,"994":2,"995":3,"996":3,"997":4,"998":4,"999":4,"1000":4,"1001":2,"1002":2,"1003":2,"1004":4,"1005":1,"1006":4,"1007":2,"1008":4,"1009":2,"1010":3,"1012":2,"1013":1,"1014":1,"1015":1,"1017":2,"1018":2,"1019":1,"1020":1,"1021":1,"1022":1,"1023":2,"1024":1,"1025":2,"1026":2,"1027":1,"1028":1,"1029":1,"1031":1,"1032":1,"1033":1,"1034":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":3,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":2,"1048":1,"1049":1,"1050":1}}],["an",{"0":{"216":1,"387":1,"451":1,"624":1,"651":1,"661":1,"673":1,"872":1,"990":1,"1041":1},"1":{"2":1,"22":1,"67":2,"89":2,"98":1,"103":1,"104":1,"114":1,"115":1,"116":2,"126":1,"127":1,"128":1,"130":1,"131":1,"132":1,"134":1,"140":1,"142":1,"145":1,"146":1,"147":1,"148":1,"149":1,"156":1,"157":1,"161":1,"168":1,"170":1,"200":1,"201":1,"211":1,"214":1,"215":1,"217":1,"222":1,"223":1,"236":1,"244":1,"246":1,"248":1,"249":1,"251":1,"254":1,"259":1,"270":1,"289":1,"302":1,"320":1,"333":1,"340":1,"341":1,"361":1,"405":1,"406":1,"407":1,"409":1,"410":1,"415":1,"416":3,"418":1,"420":1,"422":1,"428":1,"434":1,"441":2,"444":1,"448":1,"451":1,"465":1,"468":2,"470":1,"473":1,"480":1,"489":1,"491":1,"495":1,"497":1,"520":1,"524":1,"526":1,"528":1,"543":1,"548":1,"550":1,"556":1,"557":1,"558":1,"559":1,"560":1,"583":1,"584":1,"587":1,"588":1,"591":1,"593":1,"597":1,"598":1,"601":1,"604":1,"605":1,"607":2,"613":1,"624":1,"635":3,"637":1,"661":2,"670":1,"673":1,"674":1,"675":1,"676":1,"677":1,"678":1,"763":1,"764":1,"789":1,"821":1,"832":1,"883":1,"884":1,"890":1,"891":1,"893":1,"921":1,"922":1,"923":1,"958":1,"978":1,"980":1,"990":1,"997":1,"1007":1,"1023":1,"1028":1,"1032":1,"1037":1,"1041":1}}],["a",{"0":{"2":1,"33":1,"39":1,"101":1,"156":1,"158":1,"163":1,"165":1,"169":1,"170":1,"171":1,"173":1,"175":1,"177":1,"178":1,"184":1,"203":1,"215":1,"238":1,"239":1,"243":1,"246":1,"254":1,"302":1,"325":1,"335":1,"340":1,"348":1,"351":1,"355":1,"357":1,"366":1,"390":1,"397":1,"442":1,"444":1,"462":1,"469":1,"475":1,"477":3,"483":1,"501":1,"549":1,"551":1,"554":1,"600":1,"615":1,"620":1,"623":1,"640":1,"643":1,"710":1,"743":1,"753":1,"765":1,"815":1,"830":1,"831":1,"837":1,"842":1,"844":1,"850":1,"858":1,"866":1,"881":1,"887":1,"888":1,"889":1,"895":1,"911":1,"913":1,"973":2,"980":1},"1":{"2":2,"3":1,"4":2,"6":1,"7":3,"10":1,"18":1,"21":1,"27":1,"28":2,"29":1,"30":1,"31":1,"33":1,"34":1,"36":2,"41":1,"43":1,"45":2,"49":1,"52":1,"53":1,"54":1,"58":1,"61":1,"62":2,"72":3,"79":1,"89":1,"92":1,"93":1,"95":1,"98":3,"100":2,"102":1,"103":3,"104":2,"105":1,"106":2,"108":1,"109":1,"110":1,"113":1,"114":1,"116":2,"121":2,"122":2,"124":1,"125":1,"126":2,"127":2,"128":2,"129":3,"130":2,"131":1,"132":2,"133":3,"134":2,"135":1,"136":2,"137":3,"138":1,"139":1,"140":2,"141":2,"142":2,"143":3,"144":1,"145":2,"146":2,"147":2,"148":2,"149":2,"151":1,"152":1,"153":1,"155":2,"156":3,"157":1,"158":1,"160":1,"161":1,"162":2,"163":3,"164":2,"165":3,"168":1,"170":1,"171":1,"172":1,"173":2,"174":2,"175":1,"176":3,"177":1,"178":2,"179":1,"181":1,"182":1,"186":1,"188":1,"192":1,"194":1,"199":1,"200":3,"202":3,"203":1,"205":1,"206":1,"207":2,"210":1,"212":2,"217":1,"218":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"228":1,"229":3,"230":1,"231":1,"236":1,"238":1,"239":1,"240":1,"242":2,"243":1,"244":3,"245":1,"246":1,"247":1,"248":2,"249":3,"251":2,"252":2,"254":3,"264":1,"266":1,"267":2,"269":2,"270":3,"273":1,"278":2,"280":2,"281":1,"284":2,"285":1,"286":1,"288":1,"291":3,"295":1,"296":1,"297":2,"299":1,"300":2,"303":1,"304":1,"314":1,"316":1,"318":1,"322":1,"323":2,"324":1,"325":1,"327":1,"328":1,"329":1,"330":2,"331":1,"332":1,"333":5,"334":2,"337":5,"340":2,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"348":2,"349":1,"350":1,"351":2,"354":1,"355":4,"356":2,"357":1,"359":1,"360":2,"361":1,"362":1,"366":1,"368":2,"370":1,"374":1,"376":1,"377":1,"381":1,"385":1,"389":1,"392":1,"393":1,"405":1,"408":2,"410":1,"411":1,"414":1,"415":1,"416":1,"418":2,"421":1,"422":1,"423":2,"424":2,"426":1,"428":3,"430":1,"431":1,"434":1,"437":1,"438":1,"439":1,"440":4,"442":1,"443":1,"445":1,"447":3,"449":1,"450":1,"453":2,"455":2,"458":2,"460":1,"462":2,"463":1,"464":1,"465":1,"467":2,"469":1,"470":2,"471":1,"473":1,"474":2,"477":5,"480":4,"482":1,"484":3,"485":1,"486":3,"487":1,"488":1,"489":1,"490":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":2,"502":2,"510":1,"511":4,"512":1,"514":1,"515":2,"518":1,"525":1,"526":1,"527":1,"530":1,"538":1,"543":4,"544":2,"546":2,"547":1,"548":1,"549":1,"552":1,"562":1,"564":1,"582":2,"587":2,"588":2,"589":1,"592":1,"595":1,"600":1,"601":2,"602":1,"605":2,"607":1,"609":3,"612":1,"613":4,"619":1,"620":1,"621":1,"622":1,"623":3,"625":1,"626":1,"628":2,"629":2,"630":2,"631":2,"634":1,"635":4,"636":3,"638":2,"640":1,"642":2,"643":2,"645":1,"649":1,"651":1,"654":1,"664":1,"666":1,"679":1,"680":1,"684":1,"686":1,"687":1,"692":1,"709":1,"717":1,"720":1,"729":1,"731":1,"732":1,"736":1,"743":1,"745":1,"746":1,"749":1,"753":1,"758":1,"763":1,"769":1,"781":1,"789":1,"815":1,"831":2,"834":1,"842":1,"844":1,"855":1,"859":1,"868":1,"881":1,"883":1,"884":1,"886":1,"888":1,"889":2,"891":1,"892":1,"894":2,"895":2,"896":1,"902":3,"903":1,"906":1,"907":1,"911":2,"912":1,"913":1,"918":1,"926":1,"935":1,"943":1,"945":1,"946":1,"947":1,"951":1,"955":1,"957":1,"958":3,"965":1,"969":1,"973":1,"976":2,"977":2,"978":1,"980":3,"982":2,"986":1,"988":1,"990":2,"995":2,"998":1,"999":1,"1000":1,"1001":1,"1002":2,"1003":2,"1005":1,"1007":2,"1011":1,"1012":1,"1017":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1026":2,"1029":1,"1032":1,"1034":1,"1036":2,"1039":1,"1040":1,"1041":1,"1047":1,"1048":1,"1049":3,"1050":1}}],["cpu",{"1":{"894":2}}],["cname",{"0":{"753":1},"1":{"753":1}}],["cto",{"1":{"1048":1}}],["ct",{"1":{"502":1}}],["c++",{"1":{"469":1,"999":1}}],["csr",{"1":{"506":1}}],["csv",{"1":{"410":1}}],["cssom",{"0":{"895":1},"1":{"895":1},"2":{"895":1}}],["css",{"0":{"451":1,"471":1,"474":1,"510":1,"516":1,"902":1},"1":{"205":2,"451":2,"455":1,"471":2,"474":1,"492":1,"493":1,"495":1,"510":1,"516":1,"895":1,"902":2,"999":1},"2":{"451":2,"471":1,"474":1,"486":1,"510":1,"516":1}}],["cms",{"1":{"380":1}}],["cyber",{"0":{"521":1},"1":{"912":1}}],["cybersecurity",{"1":{"223":1,"270":1,"274":1,"521":1},"2":{"270":1,"278":1}}],["cypress",{"0":{"464":1},"1":{"457":1,"464":2}}],["cyclical",{"1":{"444":1}}],["cycle",{"0":{"351":1,"444":1,"662":1},"1":{"351":1,"395":1,"502":1,"662":1}}],["cycles",{"1":{"58":1}}],["c",{"1":{"223":1,"469":1}}],["cjc",{"1":{"174":1}}],["celebrations",{"0":{"1012":1}}],["celebrate",{"1":{"362":1}}],["census",{"1":{"978":1}}],["center`",{"1":{"902":1}}],["center",{"1":{"649":1}}],["centered",{"1":{"391":1}}],["centralization",{"1":{"941":1}}],["centralized",{"0":{"252":1},"1":{"173":1,"252":1,"918":1}}],["central",{"0":{"173":1},"1":{"266":1,"267":1}}],["centric",{"1":{"135":1}}],["certain",{"1":{"269":1,"278":1}}],["ces",{"0":{"258":1},"1":{"258":1}}],["ceo",{"1":{"91":1,"341":1}}],["cd",{"1":{"135":1,"401":1,"748":1,"882":1}}],["city",{"1":{"978":3}}],["cities",{"1":{"978":2}}],["citations",{"1":{"346":1}}],["circumstances",{"1":{"732":1}}],["circuit",{"0":{"785":1},"1":{"700":1,"785":1}}],["circular",{"0":{"619":1,"634":1},"1":{"619":1,"621":1,"634":3}}],["circle",{"0":{"333":1},"1":{"323":1,"333":1,"619":1}}],["cicd",{"0":{"401":1}}],["cimb",{"0":{"172":1},"1":{"172":1}}],["cinema",{"0":{"170":1},"1":{"170":2}}],["ci",{"1":{"135":1,"401":1,"748":1,"882":1,"1008":1}}],["c4",{"0":{"106":1,"679":1,"958":1,"996":1},"1":{"106":1,"679":1,"958":2,"996":1}}],["childhood",{"1":{"576":1}}],["chinhld12",{"3":{"466":1,"467":1}}],["chunks",{"1":{"476":1}}],["chunk",{"1":{"433":1}}],["chunking",{"0":{"433":1},"1":{"433":1}}],["churn",{"1":{"33":1}}],["chrome",{"1":{"164":1,"495":1,"780":1}}],["choose",{"1":{"417":1,"633":1,"878":1}}],["choosing",{"0":{"475":1},"1":{"248":1,"387":1}}],["chose",{"0":{"203":1,"219":1,"925":1,"934":1}}],["chosen",{"1":{"110":1,"200":1,"1003":1,"1011":1}}],["choices",{"1":{"248":1,"669":1,"967":1}}],["choice",{"1":{"36":1,"219":1,"470":1,"497":1,"925":1,"934":1}}],["champion",{"1":{"579":1}}],["chain",{"0":{"600":2},"1":{"548":1,"590":2,"595":1,"600":1}}],["chai",{"1":{"464":1}}],["chairs",{"0":{"97":1}}],["charge",{"1":{"978":2}}],["characterization",{"1":{"992":1}}],["character",{"0":{"839":1,"840":1},"1":{"299":1,"619":2,"839":1,"840":1,"844":1,"846":1}}],["characters",{"0":{"255":1,"838":1,"844":1},"1":{"255":1,"733":1,"838":1,"840":1}}],["charters",{"1":{"628":1}}],["chart",{"0":{"755":1},"1":{"251":1}}],["charts",{"1":{"245":1,"402":1,"755":1}}],["challenge",{"1":{"249":1,"411":1,"431":1,"980":1}}],["challenges",{"0":{"234":1,"286":1},"1":{"119":1,"201":1,"213":1,"218":1,"224":1,"234":1,"274":1,"275":1,"314":1,"332":1,"411":1,"423":1,"445":1,"450":1,"557":1,"634":1,"668":1,"761":1,"869":1,"887":1,"890":1,"958":2,"963":1,"1027":1,"1035":1,"1045":1}}],["challenging",{"1":{"171":1,"349":1,"1019":1,"1020":1,"1023":1,"1050":1}}],["chat",{"1":{"422":1,"441":1,"1006":1}}],["chatbots",{"1":{"275":1}}],["chatbot",{"0":{"244":1,"408":1,"424":1,"1000":1},"1":{"113":1,"244":1,"408":1,"418":1,"424":3,"625":1,"964":1,"1000":1}}],["chatgpt",{"0":{"113":1,"418":1,"419":1,"624":1,"995":1},"1":{"98":1,"113":2,"418":1,"419":1,"435":1,"449":1,"624":1,"995":2},"2":{"419":1}}],["chapter",{"1":{"97":1}}],["chance",{"1":{"328":1,"330":1,"332":1}}],["changing",{"0":{"283":1},"1":{"266":1,"270":1,"283":1,"291":1,"495":1,"703":1,"773":1}}],["changtrailucluong",{"3":{"167":1,"879":1}}],["changed",{"1":{"1039":1}}],["change",{"0":{"191":1,"226":1,"948":1,"972":1},"1":{"384":1,"567":1,"607":1,"772":1,"854":1,"948":1},"2":{"1044":1}}],["changelog",{"4":{"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1}}],["changes",{"0":{"59":1,"810":1,"922":1,"1045":1},"1":{"59":1,"191":1,"199":1,"413":1,"511":2,"607":1,"682":1,"745":1,"783":1,"810":1,"824":1,"972":1}}],["channels",{"1":{"212":2,"764":1,"854":1,"915":1}}],["channel",{"1":{"70":1}}],["checking",{"1":{"696":1}}],["checker",{"1":{"525":1}}],["checkout",{"1":{"388":1}}],["check",{"0":{"27":1,"153":1,"525":1},"1":{"153":1}}],["checklists",{"1":{"426":1},"4":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"186":1}}],["checklist",{"0":{"941":1},"1":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"357":1,"374":1,"941":1},"2":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"186":1,"357":1}}],["cuong",{"0":{"1039":1},"1":{"1039":1}}],["custodial",{"1":{"825":1}}],["customize",{"1":{"902":1}}],["customization",{"1":{"429":1,"526":1,"886":1}}],["custom",{"0":{"592":1},"1":{"184":1,"223":1,"284":1,"481":1,"503":1,"507":1,"592":1,"620":1,"621":1,"628":1,"629":1,"716":1,"782":1,"797":1,"872":1,"902":1,"916":1,"980":1}}],["customer",{"0":{"172":1,"873":1,"1046":1},"1":{"31":1,"732":1,"764":1,"772":1,"826":2,"873":1,"877":1,"1018":1}}],["customers",{"1":{"31":1,"45":1,"158":1,"164":1,"170":1,"172":1,"877":1,"1018":2,"1046":1}}],["cultural",{"1":{"296":1,"332":1,"946":1,"947":1}}],["cultures",{"1":{"814":1}}],["culture",{"0":{"65":1,"332":1,"334":1,"343":1,"1004":1,"1020":1,"1022":1,"1025":1},"1":{"30":1,"34":1,"46":1,"119":1,"154":1,"305":1,"309":1,"332":1,"334":1,"343":1,"356":1,"1004":1,"1020":1,"1022":1,"1025":1,"1026":1,"1027":1,"1040":1,"1046":1,"1047":1,"1050":1},"2":{"37":1,"57":1,"109":1,"299":1,"309":1,"327":1,"329":1,"332":1,"333":1,"334":1,"343":1,"1027":1,"1035":1},"4":{"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1}}],["curve",{"1":{"475":1,"925":1,"934":1}}],["curiosity",{"1":{"281":1}}],["cursor",{"0":{"1003":1},"1":{"272":1,"1003":1}}],["currently",{"1":{"889":1}}],["current",{"1":{"1":1,"106":1,"123":1,"224":1,"290":1,"364":1,"428":1,"588":1,"687":1,"1001":1}}],["cutoff",{"1":{"892":1}}],["cutting",{"1":{"223":1,"836":1}}],["cut",{"1":{"53":1,"351":1,"462":1,"668":1}}],["crisis",{"1":{"841":1,"1039":1}}],["critical",{"1":{"162":1,"221":1,"231":1,"414":1,"447":1,"495":1,"638":1,"642":1,"848":1,"852":1,"886":1}}],["criteria",{"1":{"21":1}}],["cronjob",{"1":{"653":1}}],["cross",{"0":{"600":1},"1":{"185":1,"223":1,"330":1,"403":1,"590":1,"616":1}}],["crdts",{"1":{"630":1}}],["crdt",{"0":{"630":1},"2":{"630":1,"637":1}}],["creep",{"1":{"738":1}}],["credibility",{"1":{"382":1}}],["credit",{"1":{"359":1}}],["crew",{"1":{"297":1}}],["creators",{"1":{"994":1}}],["creates",{"0":{"806":1},"1":{"202":1,"286":1,"330":1,"741":1,"932":1,"935":1,"1028":1}}],["created",{"0":{"624":1,"996":1},"1":{"67":1,"156":1,"157":1,"163":1,"270":1,"332":1,"971":1,"996":1}}],["create",{"0":{"345":1,"551":1,"619":1,"741":1,"995":1},"1":{"43":1,"158":1,"159":1,"166":1,"171":1,"174":1,"176":1,"177":1,"180":1,"204":1,"269":1,"270":1,"278":1,"299":1,"336":1,"345":1,"348":1,"369":1,"373":1,"381":1,"382":1,"383":1,"388":1,"389":1,"391":1,"393":1,"394":1,"395":1,"403":1,"459":1,"471":1,"487":1,"585":1,"619":1,"621":1,"628":1,"641":1,"661":1,"689":1,"693":1,"710":1,"736":1,"738":1,"765":1,"786":1,"796":1,"806":1,"807":1,"819":1,"835":1,"838":1,"840":1,"873":1,"884":1,"938":1,"992":1}}],["creativity",{"1":{"50":1,"449":1,"848":1,"850":1,"851":1,"855":1,"860":1,"863":1,"864":1,"905":1,"907":1}}],["creatively",{"1":{"702":1,"950":1}}],["creative",{"1":{"36":1,"188":1,"572":1,"575":1,"909":1,"967":1,"980":1}}],["creational",{"0":{"614":1},"1":{"614":1,"960":1},"2":{"960":1}}],["creation",{"1":{"29":1,"446":1,"478":1,"489":1,"552":1,"645":1,"718":1,"887":1,"908":1,"995":1}}],["creating",{"0":{"159":1,"169":1,"734":1,"879":1},"1":{"28":1,"34":1,"125":1,"131":1,"223":1,"236":1,"249":1,"313":1,"314":1,"339":1,"392":1,"420":1,"424":1,"523":1,"546":1,"688":1,"740":1,"764":1,"797":1,"833":1,"866":1,"874":1,"904":1,"958":2}}],["crucial",{"1":{"171":1,"249":1,"282":1,"285":1,"291":1,"405":1,"421":1,"431":1,"445":1,"544":1,"977":1}}],["crash",{"1":{"617":1}}],["crashes",{"1":{"296":1}}],["crawl",{"0":{"103":1,"213":1},"1":{"103":1,"213":1}}],["crafted",{"0":{"625":1,"646":1},"1":{"646":1,"665":1}}],["crafting",{"1":{"203":1,"282":1,"297":1,"351":1,"499":1,"843":1}}],["craft",{"0":{"884":1},"1":{"33":1,"831":1,"832":1,"837":1,"841":1,"884":1}}],["craftsmanship",{"0":{"118":1,"665":1},"1":{"32":1,"58":1,"94":1,"118":1,"154":1,"646":1,"665":1}}],["cryptocurrency",{"1":{"158":1,"240":1,"731":1}}],["crypto",{"0":{"53":1,"158":1,"175":1,"245":1,"347":1},"1":{"53":1,"158":1,"175":1,"245":1,"347":1,"588":1},"2":{"588":1}}],["clustered",{"1":{"752":1}}],["clustering",{"1":{"751":1,"910":1}}],["clusters",{"1":{"719":1}}],["cluster",{"0":{"726":1},"1":{"642":2,"648":1,"718":1,"726":1,"747":1}}],["clarify",{"1":{"754":1}}],["clarity",{"1":{"346":1,"470":1,"669":1}}],["classes",{"1":{"609":1}}],["class",{"1":{"467":1,"902":2}}],["classification",{"0":{"421":1},"1":{"421":2},"2":{"421":1}}],["claude",{"0":{"255":1,"284":1,"998":1,"1015":1},"1":{"255":1,"272":1,"274":1,"284":3,"449":1,"998":1}}],["claims",{"1":{"814":1}}],["claiming",{"1":{"690":1}}],["claim",{"0":{"361":1},"1":{"40":1,"153":1}}],["cleaner",{"1":{"478":1,"798":1}}],["clean",{"1":{"394":1,"646":1,"693":1,"796":1}}],["cleaning",{"1":{"40":1}}],["clearly",{"1":{"374":1,"679":1,"755":1,"774":1,"836":1,"966":1}}],["clear",{"1":{"286":1,"314":1,"355":1,"373":1,"393":1,"398":1,"543":1,"570":1,"658":1,"669":1,"671":1,"686":1,"688":1,"691":1,"743":1,"768":1,"803":1,"815":1,"830":1,"835":1,"843":1,"845":1,"866":1,"872":1,"875":1,"906":1,"937":1,"958":1,"963":1,"993":1,"1032":1}}],["clearer",{"1":{"182":1,"397":1,"857":1}}],["cline",{"0":{"1015":1},"1":{"1015":1},"2":{"1015":1}}],["click",{"1":{"881":1}}],["clicks",{"0":{"881":1},"1":{"174":1,"881":2,"943":1}}],["climax",{"1":{"841":1}}],["clips",{"1":{"428":1}}],["cli",{"0":{"221":1,"745":1},"1":{"221":1,"648":1,"651":1,"745":1,"797":1}}],["client",{"0":{"500":1},"1":{"69":1,"73":1,"76":1,"81":1,"84":1,"85":1,"86":1,"87":1,"91":1,"138":1,"191":1,"197":1,"238":1,"317":1,"320":1,"326":1,"371":1,"376":1,"466":1,"485":1,"491":1,"506":1,"759":1,"794":1},"2":{"320":1,"485":1}}],["clients",{"0":{"320":1},"1":{"25":1,"107":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"138":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"203":1,"314":1,"318":1,"371":1,"452":1,"591":1,"606":1,"638":1,"754":1,"755":1,"1049":1}}],["clojure",{"0":{"666":1},"1":{"666":1},"2":{"666":1}}],["closing",{"1":{"725":1}}],["closure",{"1":{"398":1,"644":1}}],["closer",{"1":{"623":1}}],["closely",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"314":1}}],["closed",{"1":{"71":1,"693":1}}],["cloning",{"1":{"104":1,"553":1,"614":1}}],["clone",{"0":{"104":1}}],["cloudinary",{"1":{"205":1}}],["cloud",{"0":{"162":1,"174":1,"1038":1},"1":{"162":1,"174":2,"214":1,"670":1,"717":2,"718":1,"749":1,"1038":1},"3":{"2":1,"15":1,"346":1,"361":1,"366":1,"367":1,"419":1}}],["causation",{"1":{"807":1}}],["causing",{"1":{"739":1}}],["caused",{"1":{"518":1}}],["cause",{"1":{"476":1}}],["causes",{"1":{"314":1}}],["came",{"0":{"638":1}}],["camera",{"1":{"515":2}}],["cameras",{"0":{"515":1},"1":{"515":1}}],["camdidate",{"1":{"74":1,"75":1}}],["cache",{"1":{"437":1,"971":1}}],["cached",{"0":{"731":1},"1":{"409":1,"731":1}}],["caching",{"0":{"409":1,"437":1},"1":{"272":1,"409":1,"437":1,"776":1},"2":{"437":1,"466":1}}],["capture",{"1":{"742":1,"811":1,"862":1,"876":1}}],["capturing",{"1":{"346":1,"861":1}}],["cap",{"0":{"712":1},"1":{"712":1}}],["capabilities",{"0":{"702":1},"1":{"45":1,"124":1,"248":1,"414":1,"423":1,"424":1,"496":1,"884":2,"939":1,"959":1,"965":1,"998":1}}],["cat",{"0":{"1040":1},"1":{"1005":1,"1040":1}}],["categories",{"1":{"878":1}}],["categorize",{"1":{"569":1}}],["cats",{"1":{"311":1}}],["catchup",{"0":{"674":1,"675":1,"676":1,"677":1,"678":1},"1":{"674":1,"675":1,"676":1,"677":1,"678":1},"2":{"674":1,"675":1,"676":1,"677":1,"678":1}}],["catch",{"1":{"112":1,"530":1}}],["caring",{"1":{"579":1}}],["carousel",{"1":{"457":1}}],["cards",{"1":{"905":1}}],["card",{"0":{"397":1},"1":{"397":1}}],["cardex",{"0":{"262":1},"1":{"262":1}}],["carefully",{"1":{"623":1}}],["careful",{"0":{"476":1},"1":{"577":1,"737":1,"916":1}}],["care",{"0":{"808":1,"829":1},"1":{"96":1,"144":1,"283":1,"656":1}}],["careers",{"4":{"28":1,"29":1,"54":1,"55":1,"56":1,"57":1,"65":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"296":1,"297":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1}}],["career",{"0":{"33":1,"1044":1},"1":{"33":1,"578":1,"1032":1},"2":{"28":1,"29":1,"30":1,"33":1,"57":1,"65":1,"96":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"296":1,"297":1,"1032":1,"1044":1}}],["cassandra",{"0":{"721":1},"1":{"721":1}}],["casual",{"1":{"109":1}}],["cases",{"0":{"446":1,"609":1,"610":1,"612":1,"614":1,"803":1,"960":1,"1005":1,"1017":1,"1018":1},"1":{"446":1,"475":1,"528":1,"615":1,"788":1,"802":1,"803":1,"891":1,"913":1,"1005":1},"2":{"1017":1,"1018":1},"4":{"1017":1,"1018":1}}],["case",{"0":{"21":1,"246":1,"462":1,"887":1,"955":1,"1000":1},"1":{"21":1,"36":1,"74":1,"236":1,"244":1,"246":1,"248":1,"252":1,"341":1,"462":1,"527":1,"899":1,"920":1,"961":1,"1000":1,"1007":1},"2":{"52":1,"53":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"319":1,"936":1},"4":{"52":1,"53":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"319":1}}],["california",{"1":{"978":3}}],["calculating",{"1":{"978":1}}],["calculations",{"0":{"532":1}}],["calculated",{"1":{"194":1}}],["calculate",{"1":{"5":1,"574":1,"720":1,"978":1}}],["callback",{"1":{"779":1}}],["callbacks",{"1":{"779":1}}],["calling",{"0":{"414":1},"1":{"414":2},"2":{"414":1}}],["called",{"1":{"327":1,"343":1,"442":1,"479":1}}],["call",{"0":{"106":1},"1":{"106":1,"116":1,"698":1,"942":1}}],["calls",{"0":{"479":1,"698":1},"1":{"40":1,"698":1,"785":1}}],["café",{"1":{"36":1}}],["cancellation",{"1":{"791":1,"792":1}}],["cannot",{"1":{"543":1,"894":1}}],["candle",{"1":{"324":1}}],["candidates",{"1":{"138":1,"192":1}}],["candidate",{"0":{"18":1},"1":{"18":1,"79":1,"121":1,"136":1,"144":1}}],["canvas",{"0":{"67":1},"1":{"67":3,"515":1,"616":1,"819":1}}],["can",{"0":{"736":1},"1":{"7":1,"33":1,"34":1,"57":1,"168":1,"177":1,"200":1,"208":1,"235":1,"286":1,"307":1,"328":1,"338":1,"351":1,"355":1,"385":1,"409":1,"411":1,"415":1,"420":1,"421":1,"423":3,"430":2,"440":1,"450":1,"454":1,"460":1,"463":1,"470":1,"476":1,"489":1,"495":1,"497":1,"512":1,"515":1,"530":2,"543":1,"588":1,"607":1,"630":2,"636":1,"659":1,"734":1,"736":1,"739":1,"741":1,"747":1,"773":1,"809":1,"811":1,"812":1,"818":1,"822":1,"835":1,"853":1,"860":1,"878":2,"881":1,"892":1,"902":1,"907":1,"943":1,"945":1,"958":1,"987":1,"1006":1}}],["coyne",{"1":{"841":1}}],["cognitive",{"0":{"574":1,"702":1,"756":1},"1":{"565":1,"574":2,"702":1,"756":1,"774":1,"775":1}}],["cogent",{"1":{"226":1}}],["cohesive",{"1":{"501":1}}],["coherence",{"1":{"431":1,"433":1,"814":1}}],["coherent",{"1":{"405":1}}],["copies",{"0":{"556":1},"1":{"556":1,"922":1}}],["copilots",{"0":{"628":1,"629":1},"1":{"628":2,"629":2},"2":{"628":1,"629":1}}],["copilot",{"1":{"492":1}}],["copying",{"1":{"852":1}}],["copy",{"1":{"276":1}}],["cooperative",{"1":{"791":1}}],["coordination",{"1":{"630":1}}],["coordinating",{"1":{"423":1}}],["cookies",{"1":{"485":1}}],["cooler",{"1":{"987":1}}],["cool",{"0":{"285":1},"1":{"41":1,"204":1,"367":1}}],["coefficient",{"1":{"406":1}}],["cold",{"0":{"757":1},"1":{"757":1}}],["column",{"0":{"970":1},"1":{"652":1,"970":1},"2":{"970":1}}],["columns",{"1":{"394":1}}],["colocation",{"0":{"501":1},"1":{"501":1}}],["colors",{"1":{"390":1}}],["color",{"0":{"517":1},"1":{"382":1,"517":1}}],["collapsed",{"1":{"622":1}}],["collaboraton",{"1":{"317":1}}],["collaborate",{"1":{"302":1,"783":1}}],["collaborative",{"1":{"104":1,"105":1,"106":1,"110":1,"111":1,"114":1,"199":1,"483":1,"771":1,"884":1,"1001":1,"1003":1,"1007":1,"1011":1}}],["collaboration",{"0":{"25":1,"317":1,"423":1},"1":{"25":1,"46":1,"155":1,"313":1,"390":1,"399":1,"625":1,"629":1,"637":2,"667":1,"762":1,"775":1,"826":1,"959":1,"988":1,"989":1,"996":1,"998":1,"1006":1,"1030":1},"2":{"637":1}}],["collision",{"1":{"618":1}}],["collecting",{"1":{"420":2,"812":1,"829":1}}],["collection",{"1":{"295":1,"322":1,"334":1,"361":1}}],["collections",{"0":{"115":1,"224":1},"1":{"224":1}}],["collect",{"1":{"15":1}}],["coding",{"1":{"275":1,"284":1,"526":1,"643":1,"646":1,"665":1,"667":1,"671":1,"723":1,"797":1,"941":1,"1015":1}}],["coder",{"0":{"1016":1},"1":{"1016":1}}],["codes",{"1":{"517":1}}],["codebase",{"1":{"501":1}}],["codebases",{"1":{"273":1}}],["code",{"0":{"103":1,"229":1,"284":1,"476":1,"505":1,"539":1,"655":1},"1":{"103":1,"202":1,"213":1,"216":1,"229":1,"284":3,"380":1,"476":1,"500":1,"505":1,"521":1,"530":2,"539":1,"544":1,"545":1,"644":1,"655":1,"659":1,"672":2,"679":1,"685":1,"693":1,"746":1,"761":1,"773":1,"774":1,"777":1,"780":1,"786":1,"794":1,"796":1,"798":1,"894":1,"902":1,"913":1,"914":1,"941":1,"958":1,"998":1,"1003":1},"2":{"187":1,"500":1}}],["costs",{"1":{"270":1,"409":1,"668":1,"749":1,"751":1,"997":1}}],["cost",{"0":{"261":1,"588":1},"1":{"246":1,"261":1,"316":2,"417":1,"429":1,"548":1,"588":1,"659":1,"673":1,"708":1,"749":1}}],["cox",{"1":{"226":1}}],["coroutines",{"1":{"791":1,"792":1,"961":1}}],["coroutinescope",{"1":{"791":1}}],["coroutinecontext",{"1":{"791":1}}],["coroutine",{"0":{"791":1,"792":1},"1":{"792":1}}],["corrupted",{"1":{"543":1}}],["correspondence",{"1":{"814":1}}],["corresponding",{"1":{"501":1}}],["correlation",{"1":{"406":1}}],["correct",{"0":{"208":1,"385":1},"1":{"208":1,"460":1}}],["corsa",{"1":{"495":1}}],["cor3",{"3":{"453":1,"454":1,"474":1,"502":1,"955":1,"977":1}}],["corp",{"1":{"328":1}}],["corporate",{"0":{"483":1},"1":{"218":1}}],["corepack",{"1":{"495":1}}],["core",{"0":{"547":1,"838":1},"1":{"66":1,"125":1,"161":1,"165":1,"226":1,"299":1,"305":1,"309":1,"351":1,"515":1,"547":1,"586":1,"658":1,"830":1,"838":1,"891":1,"919":1,"942":1}}],["covid",{"0":{"179":1},"1":{"171":1,"179":1,"656":1,"703":1}}],["coverage",{"1":{"503":1,"504":1,"506":1,"507":1,"802":1}}],["covering",{"1":{"211":1,"212":1,"232":1,"443":1,"487":1,"524":1,"589":1,"797":1,"899":1,"917":1,"941":1,"993":1,"1009":1}}],["covered",{"1":{"207":1,"271":1,"972":1,"999":1,"1000":1,"1005":1,"1010":1}}],["cover",{"1":{"104":1,"116":1,"1001":1,"1006":1}}],["covers",{"1":{"39":1,"108":1,"113":1,"115":1,"204":1,"218":1,"282":1,"286":1,"360":1,"416":1,"433":1,"441":1,"527":1,"528":1,"546":1,"552":1,"591":1,"634":1,"891":1,"996":1,"997":1,"998":1,"1003":1,"1004":1}}],["coffee",{"0":{"118":1},"1":{"118":2}}],["course",{"1":{"1024":1}}],["courses",{"1":{"1021":1}}],["coupling",{"1":{"685":1}}],["couple",{"1":{"182":1,"337":1}}],["counters",{"1":{"769":1}}],["counterparts",{"1":{"485":1}}],["count",{"1":{"305":1,"525":1,"881":1}}],["counts",{"1":{"267":1,"445":1}}],["countries",{"1":{"44":1}}],["could",{"1":{"45":1,"194":1,"437":1}}],["co",{"1":{"36":1,"43":1,"1043":1},"3":{"453":1,"454":1,"474":1,"502":1,"955":1,"977":1}}],["comfort",{"1":{"1038":1}}],["coming",{"0":{"534":1}}],["combiners",{"1":{"725":1}}],["combine",{"1":{"616":1,"805":1}}],["combined",{"1":{"499":1}}],["combines",{"1":{"180":1,"442":1,"821":1}}],["combining",{"1":{"314":1,"967":1}}],["come",{"1":{"186":1}}],["comes",{"1":{"151":1,"411":1,"432":1,"439":1,"878":1}}],["commutative",{"1":{"630":1}}],["communities",{"1":{"880":1}}],["community",{"0":{"54":1,"106":1,"116":1,"133":1,"177":1,"302":1,"997":1,"1004":1,"1021":1,"1024":1,"1031":1,"1047":1},"1":{"47":1,"49":1,"54":2,"64":1,"103":1,"104":1,"105":2,"106":2,"110":2,"111":1,"114":2,"116":1,"117":1,"133":1,"185":1,"224":1,"235":1,"269":1,"278":1,"297":1,"302":1,"307":1,"334":1,"356":1,"980":1,"996":2,"997":2,"1001":2,"1003":1,"1011":2,"1021":1,"1024":1,"1031":1,"1036":1,"1047":2},"2":{"46":1,"47":1,"48":1,"49":1,"54":1,"64":1,"302":1,"308":1,"309":1,"349":1,"356":1,"363":1,"368":1,"643":1,"1021":1,"1024":1,"1031":1,"1036":1,"1047":1},"4":{"46":1,"47":1,"48":1,"49":1,"61":1,"62":1,"154":1,"307":1,"308":1,"309":1}}],["communicate",{"0":{"737":2},"1":{"774":1}}],["communicating",{"1":{"423":1,"489":1,"966":1}}],["communications",{"2":{"133":1,"351":1,"355":1}}],["communication",{"0":{"10":1,"151":1,"489":1,"782":1},"1":{"10":1,"70":1,"121":1,"151":1,"185":1,"246":1,"282":1,"286":1,"309":1,"314":1,"326":1,"330":1,"385":1,"386":1,"483":1,"489":1,"518":1,"568":1,"571":1,"590":1,"602":1,"606":1,"608":1,"617":1,"626":1,"629":1,"663":1,"664":1,"667":1,"704":1,"752":1,"758":1,"764":1,"782":1,"799":1,"801":1,"958":1,"991":1,"1033":1,"1045":1},"2":{"1033":1,"1045":1},"4":{"702":1,"703":1,"704":1,"705":1,"706":1,"966":1,"967":1,"968":1}}],["common",{"1":{"218":1,"227":1,"286":1,"301":1,"388":1,"416":1,"423":1,"501":1,"528":1,"579":1,"847":1,"914":1,"915":1,"1002":1}}],["commercial",{"1":{"417":1}}],["commerce",{"0":{"156":1},"1":{"156":1,"178":1,"682":1}}],["commentary",{"0":{"105":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"541":1,"542":1,"835":1,"1000":1,"1004":1,"1006":1},"1":{"104":1,"282":1,"494":1,"835":1,"998":1,"1005":1,"1006":1},"4":{"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"1013":1,"1014":1}}],["commemoration",{"0":{"69":1}}],["commandments",{"0":{"841":1},"1":{"841":1}}],["commands",{"1":{"553":1,"680":1,"797":1,"957":1}}],["command",{"0":{"103":1,"613":1,"797":1,"1016":1},"1":{"103":1,"221":1,"613":1,"797":1,"962":1,"1016":1}}],["commission",{"1":{"106":1}}],["comminity",{"1":{"78":1}}],["committed",{"1":{"646":1}}],["commitment",{"1":{"60":1,"154":1}}],["commit",{"0":{"671":1},"1":{"45":1,"671":2,"672":1,"989":1}}],["comprises",{"0":{"837":1,"968":1}}],["compromising",{"1":{"640":1}}],["comprehensible",{"1":{"958":1}}],["comprehensive",{"1":{"27":1,"52":1,"206":1,"212":1,"240":1,"246":1,"303":1,"443":1,"484":1,"496":1,"504":1,"526":1,"546":1,"552":1,"582":1,"589":1,"602":1,"628":1,"634":1,"885":1,"899":1,"910":1,"917":1,"919":1,"920":1,"935":1,"940":1,"956":1,"965":1,"981":1,"985":1}}],["compression",{"0":{"548":1},"1":{"548":2}}],["compounding",{"0":{"850":1}}],["compound",{"1":{"503":1}}],["composite",{"2":{"970":1}}],["composition",{"0":{"503":1},"1":{"503":1}}],["compose",{"0":{"930":1},"1":{"930":1}}],["composed",{"1":{"465":1}}],["component",{"0":{"503":1,"782":1,"900":1,"998":1},"1":{"414":1,"447":1,"457":1,"470":1,"478":1,"510":1,"668":1,"782":1,"793":1,"900":1,"958":1},"2":{"466":1,"470":1,"487":1}}],["components",{"0":{"466":1,"487":1,"725":1},"1":{"162":1,"206":1,"207":1,"284":1,"387":1,"389":1,"390":1,"459":1,"463":1,"466":2,"483":1,"487":2,"501":1,"503":1,"504":1,"546":1,"583":1,"591":1,"655":1,"679":1,"680":1,"886":1,"998":1},"2":{"900":1}}],["computes",{"1":{"971":1}}],["computers",{"1":{"630":1,"987":1}}],["computer",{"1":{"408":1}}],["computational",{"1":{"409":1,"445":1}}],["computing",{"0":{"1009":1},"1":{"259":1,"276":1,"590":1,"725":1,"1009":1}}],["compiling",{"1":{"403":1}}],["compiler",{"0":{"230":1},"1":{"230":1,"233":1,"492":1,"493":1,"1004":1}}],["compile",{"0":{"225":1},"1":{"225":1,"513":1}}],["compelling",{"1":{"830":1,"835":1,"837":1,"992":1}}],["competitor",{"1":{"396":1,"819":1}}],["competition",{"1":{"203":1}}],["competitive",{"1":{"67":1,"158":1,"274":1}}],["competency",{"0":{"376":1},"1":{"376":1}}],["compensation",{"1":{"318":1}}],["compliant",{"1":{"707":1}}],["compliance",{"0":{"27":1,"60":1,"94":1},"1":{"27":2,"60":1,"525":1,"551":1},"2":{"3":1,"60":1}}],["complementing",{"1":{"807":1}}],["complements",{"1":{"660":1}}],["complexity",{"0":{"221":1,"456":1,"773":1,"958":1},"1":{"273":1,"689":1,"692":1}}],["complex",{"1":{"174":1,"201":1,"223":1,"249":1,"254":1,"415":1,"423":1,"428":1,"435":1,"436":1,"439":1,"440":1,"456":1,"463":1,"501":1,"511":1,"688":1,"689":1,"692":1,"720":1,"781":1,"811":1,"953":1,"958":1,"960":1,"967":1,"968":1}}],["completely",{"1":{"896":1}}],["complete",{"0":{"171":1},"1":{"164":1,"284":1,"374":1,"894":1}}],["completed",{"1":{"90":1,"755":1}}],["completion",{"0":{"103":1,"423":1},"1":{"103":1,"423":1}}],["compatible",{"1":{"896":1}}],["compatibility",{"1":{"204":1,"603":1}}],["compassion",{"1":{"573":1}}],["compact",{"1":{"453":1}}],["comparative",{"1":{"654":1}}],["comparable",{"1":{"44":1}}],["comparing",{"1":{"552":1,"999":1}}],["comparison",{"1":{"482":1,"654":1,"891":1}}],["comparisons",{"1":{"206":1}}],["compared",{"1":{"635":1,"858":1}}],["compares",{"1":{"212":1,"451":1,"595":1}}],["compare",{"0":{"202":1},"1":{"417":1,"475":1,"479":1,"727":1}}],["companies",{"1":{"45":1,"174":1,"181":1,"188":1,"275":1,"335":1,"480":2,"514":1,"529":1,"664":1}}],["company",{"0":{"150":1,"304":1},"1":{"1":1,"2":1,"7":2,"14":1,"24":1,"31":1,"49":1,"70":1,"100":1,"117":1,"150":1,"176":1,"194":1,"235":1,"296":2,"299":1,"329":1,"333":2,"341":1,"415":1,"638":1,"758":1,"1024":1,"1028":1,"1033":1,"1048":1}}],["conway",{"0":{"758":1},"1":{"758":1,"983":1}}],["condition",{"0":{"790":1},"1":{"790":1}}],["conditions",{"1":{"653":1,"694":1,"784":1,"802":1}}],["conduct",{"0":{"39":1,"197":1},"1":{"89":1,"197":1},"2":{"187":1}}],["conquer",{"1":{"423":1}}],["convenience",{"1":{"959":1}}],["conventions",{"1":{"386":1,"390":1,"989":1}}],["convention",{"0":{"189":1,"671":1}}],["conveying",{"1":{"958":1}}],["converge",{"1":{"630":1}}],["convergent",{"1":{"630":1}}],["convert",{"1":{"515":1}}],["converting",{"1":{"61":1,"723":1}}],["conversational",{"1":{"421":1}}],["conversation",{"0":{"705":1},"1":{"418":1}}],["conversion",{"1":{"160":1,"388":1,"881":1,"998":1}}],["connectivity",{"1":{"637":1}}],["connection",{"0":{"856":1},"1":{"518":1}}],["connections",{"1":{"121":1,"155":1,"241":1,"288":2,"346":1,"575":1,"853":1,"855":1,"860":1,"863":1,"905":1,"906":1,"1018":1}}],["connecting",{"0":{"179":1,"526":1},"1":{"346":1,"590":1,"850":1,"851":1,"856":1}}],["connects",{"1":{"157":1,"172":1,"176":1,"179":1}}],["connect",{"1":{"109":1,"177":1,"305":1}}],["connected",{"1":{"52":1,"339":1,"490":1,"866":1}}],["conclusions",{"1":{"954":1}}],["concludes",{"1":{"116":1}}],["conclude",{"1":{"103":1}}],["concrete",{"0":{"740":1},"1":{"954":1}}],["concentrated",{"0":{"549":1},"1":{"549":1}}],["concerns",{"0":{"484":1},"1":{"275":1}}],["concept",{"0":{"609":1,"612":1},"1":{"267":1,"315":1,"333":1,"440":1,"491":1,"589":1,"610":1,"615":1,"913":1,"975":1}}],["concepts",{"0":{"547":1,"599":1,"842":1},"1":{"116":1,"346":1,"487":1,"547":1,"599":1,"683":1,"686":1,"693":1,"807":1,"838":1,"842":1,"882":1,"891":1,"919":1,"940":1,"962":1,"964":1,"983":1,"984":1}}],["concurrently",{"1":{"630":1}}],["concurrent",{"0":{"914":1},"1":{"212":1,"216":1,"707":1,"784":1,"792":1,"914":1,"915":1}}],["concurrency",{"0":{"212":1,"534":1,"639":1,"653":1,"779":1,"915":1,"957":1},"1":{"212":3,"214":1,"218":1,"220":1,"223":1,"527":1,"534":1,"639":1,"653":1,"666":1,"714":1,"779":1,"791":1,"792":1,"915":1,"917":1,"957":1,"984":1,"1005":1},"2":{"212":1,"498":1}}],["concise",{"1":{"67":1}}],["conf",{"1":{"492":1}}],["conflicts",{"1":{"338":1,"639":1,"704":1,"714":1,"837":1,"839":1,"843":1,"957":1}}],["conflict",{"1":{"306":1,"630":1}}],["confusion",{"1":{"286":1}}],["configurations",{"1":{"716":1}}],["configuration",{"1":{"526":1,"645":1,"933":1}}],["configured",{"1":{"481":1}}],["configure",{"0":{"304":1},"1":{"657":1}}],["confidential",{"1":{"551":1}}],["confident",{"1":{"181":1,"826":1,"857":1,"1023":1}}],["confirming",{"1":{"951":1}}],["confirm",{"0":{"80":1},"1":{"81":1,"374":1,"954":1}}],["confirmations",{"1":{"595":1}}],["confirmation",{"0":{"72":1},"1":{"853":1}}],["conferences",{"1":{"41":1}}],["contact",{"1":{"697":1}}],["containing",{"1":{"463":1}}],["containerless",{"0":{"926":1}}],["containerized",{"1":{"649":1,"650":1,"670":1}}],["containerization",{"1":{"882":1},"2":{"234":1,"562":1,"563":1,"564":1}}],["container",{"0":{"474":1},"1":{"474":2,"490":1,"496":1,"796":1,"926":1,"930":1,"958":1}}],["containers",{"0":{"926":1},"1":{"403":1,"679":1,"757":1}}],["contains",{"1":{"290":1}}],["contain",{"1":{"31":1,"486":1}}],["content",{"0":{"107":1,"112":1,"345":1,"354":1,"381":1,"1006":1},"1":{"112":1,"178":1,"213":1,"218":1,"345":1,"346":1,"348":1,"351":1,"352":1,"354":1,"355":1,"369":1,"370":1,"381":1,"391":1,"393":1,"397":1,"406":2,"433":1,"446":1,"460":1,"463":1,"489":1,"529":1,"560":1,"886":1,"994":1,"995":1},"2":{"345":1,"351":1,"354":1,"355":1,"370":1,"381":1}}],["contexts",{"1":{"680":1,"806":1,"947":1}}],["contextual",{"1":{"286":1}}],["context",{"0":{"433":1,"438":1,"739":1,"743":1},"1":{"1":1,"282":1,"287":1,"433":1,"438":1,"455":1,"609":1,"626":1,"669":1,"679":1,"733":1,"739":1,"743":1,"782":1,"805":1,"809":1,"811":1,"817":1,"892":1,"938":1,"958":1,"965":1,"975":1}}],["continuity",{"1":{"681":1}}],["continuing",{"0":{"41":1}}],["continuation",{"1":{"270":1,"1001":1}}],["continues",{"1":{"207":1}}],["continue",{"1":{"95":1,"445":1}}],["continuously",{"1":{"420":1}}],["continuous",{"0":{"502":1,"1050":1},"1":{"46":1,"66":1,"118":1,"281":1,"356":1,"362":1,"399":1,"502":2,"636":1,"637":1,"646":1,"665":1,"972":1,"1041":1,"1050":1},"2":{"1050":1}}],["contradictions",{"1":{"859":1}}],["contrasting",{"1":{"570":1,"572":1}}],["contracts",{"1":{"586":1,"590":1,"596":1,"597":1,"697":1,"698":2,"699":2,"700":1,"701":1,"940":1}}],["contract",{"0":{"19":1,"586":1,"597":1},"1":{"19":1,"546":1,"582":1,"603":1,"696":2,"941":1},"2":{"597":1}}],["controversy",{"1":{"540":1}}],["controlling",{"1":{"790":1}}],["controlled",{"0":{"321":1},"1":{"321":1,"872":1,"903":1}}],["controls",{"1":{"283":1}}],["control",{"0":{"639":1},"1":{"115":1,"238":1,"318":1,"386":1,"405":1,"637":1,"639":1,"647":1,"667":1,"714":1,"763":1,"769":1,"770":1,"783":1,"791":1,"825":1,"881":1,"902":1,"965":1,"989":1}}],["contributors",{"1":{"356":1}}],["contributor",{"1":{"54":1,"1036":1},"2":{"54":1,"1036":1}}],["contributions",{"1":{"103":1,"307":1,"336":1,"362":1,"365":1,"1031":1}}],["contribution",{"0":{"54":1},"1":{"323":1,"997":1},"2":{"51":1}}],["contributing",{"1":{"47":1,"362":1}}],["contributes",{"0":{"365":1}}],["contribute",{"1":{"34":1,"51":1,"64":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"235":1,"267":1,"355":1}}],["cons",{"1":{"610":1,"615":1,"713":1,"913":1}}],["conserve",{"1":{"849":1}}],["consensus",{"1":{"594":1,"814":1}}],["consequences",{"1":{"27":1,"669":1}}],["conscientiousness",{"1":{"567":1,"799":1}}],["constantly",{"1":{"339":1}}],["construct",{"1":{"960":1}}],["constructive",{"0":{"338":1}}],["constrained",{"1":{"445":1}}],["constraints",{"0":{"224":1},"1":{"224":1,"412":1,"822":1}}],["constellations",{"1":{"335":1}}],["consider",{"1":{"818":1}}],["considering",{"1":{"816":1}}],["considerations",{"1":{"215":1,"218":1,"220":1,"891":1}}],["consists",{"1":{"358":1}}],["consistency",{"1":{"346":1,"390":1,"499":1,"707":1,"709":1,"712":1,"721":1}}],["consistent",{"1":{"2":1,"156":1,"345":1,"378":1,"381":1,"497":1,"630":1,"709":1}}],["consolidate",{"1":{"631":2,"674":1,"675":1,"676":1,"677":1,"678":1}}],["consolidates",{"1":{"198":1}}],["console",{"1":{"631":1,"780":5,"1038":1},"3":{"167":1}}],["consume",{"0":{"944":1}}],["consumers",{"0":{"957":1},"1":{"957":1}}],["consumer",{"1":{"161":1,"446":1,"690":1}}],["consumption",{"1":{"888":1,"914":1}}],["consulting",{"0":{"19":1,"198":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"314":1},"1":{"198":1,"259":1,"260":1,"265":1,"292":1,"302":1},"2":{"89":1,"155":1,"190":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"313":1,"314":1,"316":1,"318":1,"320":1,"321":1,"326":1,"1013":1,"1014":1},"4":{"52":1,"53":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1}}],["omit",{"0":{"734":1}}],["os",{"1":{"645":1,"648":1,"649":2,"657":1}}],["osterwalder",{"1":{"67":1}}],["o",{"2":{"635":1}}],["ocaml",{"1":{"777":1}}],["ocean",{"0":{"567":1},"1":{"567":1}}],["occurs",{"1":{"543":1,"636":1}}],["occur",{"1":{"489":1,"543":1}}],["october",{"0":{"275":1,"291":1,"492":1},"1":{"100":1,"275":1,"291":1}}],["older",{"1":{"479":1}}],["old",{"0":{"851":1},"1":{"311":1,"421":1,"428":1,"896":1,"945":1}}],["obfuscation",{"1":{"794":1}}],["observations",{"1":{"951":1}}],["observation",{"0":{"888":1}}],["observability",{"0":{"436":1},"1":{"436":1},"2":{"413":1,"427":1,"430":1,"436":1,"955":1}}],["observing",{"1":{"765":1,"829":1,"950":1}}],["observer",{"0":{"610":1},"1":{"610":1},"2":{"490":1,"610":1}}],["obsession",{"1":{"230":1}}],["obsidian",{"1":{"346":1}}],["objects",{"1":{"515":1,"609":1,"612":1,"658":1,"786":1,"945":1,"980":1}}],["objective",{"1":{"223":1,"805":1}}],["objectives",{"0":{"6":1},"1":{"6":1,"365":1}}],["object",{"0":{"1003":1},"1":{"219":1,"321":1,"467":1,"511":1,"607":2,"613":1,"614":1,"685":2,"693":1,"695":1,"895":2,"960":1,"1003":1}}],["oop",{"1":{"214":1}}],["oh",{"0":{"109":1,"327":1},"1":{"109":1,"327":1,"625":1}}],["ogifs",{"1":{"107":1}}],["ogif",{"0":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":2,"116":1,"117":1,"236":1,"327":1,"625":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1},"1":{"106":1,"108":1,"109":1,"113":1,"115":1,"327":1,"625":2,"998":1,"999":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1012":1},"2":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"625":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1},"4":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1}}],["overleaf",{"0":{"995":1},"1":{"995":2},"2":{"995":1}}],["overlook",{"1":{"809":1,"818":1}}],["overload",{"1":{"756":1,"865":1}}],["overly",{"1":{"428":1}}],["overhead",{"1":{"518":1,"692":1,"930":1}}],["overcome",{"0":{"433":1,"733":1},"1":{"314":1,"412":1,"421":1,"423":1}}],["overcoming",{"1":{"213":1,"410":1,"705":1,"1045":1}}],["oversights",{"1":{"296":1}}],["overwhelmed",{"1":{"249":1}}],["overview",{"0":{"103":1,"563":1,"606":1,"673":1,"682":1,"688":1,"727":1},"1":{"103":1,"114":1,"214":1,"251":1,"407":1,"418":1,"434":1,"441":1,"448":1,"451":1,"548":1,"550":1,"555":1,"563":1,"583":1,"584":1,"587":1,"591":1,"593":1,"597":1,"598":1,"601":1,"604":1,"605":1,"883":1,"890":1,"891":1,"911":1,"921":1,"922":1,"923":1},"2":{"334":1}}],["overall",{"1":{"89":1,"393":1,"629":1,"975":1}}],["over",{"0":{"827":1},"1":{"55":1,"181":1,"214":1,"230":1,"248":1,"264":1,"318":1,"450":1,"456":1,"477":1,"567":1,"569":1,"588":1,"626":1,"631":1,"698":1,"760":1,"808":1,"824":1,"827":1,"830":1,"902":1,"907":1,"948":1,"1044":1}}],["owning",{"1":{"772":1}}],["ownership",{"1":{"545":1,"601":1,"637":1},"2":{"637":1}}],["owners",{"1":{"502":1}}],["own",{"0":{"852":1},"1":{"31":1,"98":1,"119":1,"287":1,"328":1,"434":1,"460":1,"774":1,"800":1,"852":1,"859":1,"865":1,"878":1,"928":1}}],["orm",{"0":{"633":1},"1":{"633":1}}],["oracles",{"1":{"590":1}}],["oracle",{"0":{"590":1},"1":{"590":1},"2":{"590":1}}],["org",{"1":{"515":6}}],["organizing",{"1":{"199":1,"348":1,"371":1,"384":1,"397":1,"398":1,"775":1,"788":1,"855":1,"864":1,"990":1}}],["organizations",{"1":{"529":1,"810":1,"813":1,"826":1,"944":1,"949":1,"965":1}}],["organization",{"0":{"112":1},"1":{"112":1,"365":1,"570":1,"758":1}}],["organizational",{"0":{"96":1,"826":1},"1":{"119":1,"289":1,"296":1,"365":1}}],["organize",{"0":{"346":1},"1":{"58":1,"346":1,"674":1,"675":1,"676":1,"677":1,"678":1,"680":1,"905":1,"966":1,"979":1,"990":1}}],["organized",{"1":{"52":1,"138":1,"163":1,"352":1,"420":1,"817":1,"866":1,"909":1,"1024":1}}],["orchestrating",{"1":{"440":1}}],["orchestrate",{"1":{"246":1}}],["oriented",{"1":{"219":1,"685":1,"693":1}}],["origins",{"1":{"489":1}}],["original",{"1":{"345":1,"381":1,"601":1,"907":1}}],["originates",{"1":{"315":1}}],["origin",{"1":{"117":1,"489":1}}],["ordering",{"1":{"431":1}}],["order",{"0":{"726":1},"1":{"175":1,"320":1,"442":1,"655":1,"682":1,"726":2}}],["or",{"0":{"737":1},"1":{"24":1,"31":1,"36":1,"63":1,"66":1,"89":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":2,"200":1,"203":1,"207":1,"223":1,"235":1,"264":1,"270":1,"296":1,"300":1,"316":1,"323":1,"328":2,"340":1,"342":1,"343":1,"347":1,"351":1,"355":1,"377":1,"387":1,"406":1,"412":1,"415":1,"434":1,"442":1,"454":1,"468":1,"489":2,"511":1,"543":1,"613":1,"630":1,"635":1,"636":2,"640":1,"654":1,"674":1,"675":1,"676":1,"677":1,"678":1,"704":1,"723":1,"746":2,"795":1,"831":1,"845":1,"859":1,"862":1,"881":1,"894":1,"928":1,"935":1,"944":1,"950":1,"954":2,"958":1,"967":1,"977":1,"990":1}}],["okr",{"0":{"23":1},"1":{"23":1},"2":{"23":1}}],["outlook",{"1":{"1020":1}}],["outlining",{"1":{"443":1}}],["outlines",{"1":{"300":1,"886":1}}],["outline",{"1":{"21":1}}],["outperforms",{"1":{"469":1,"560":1}}],["output",{"0":{"559":1,"1016":1},"1":{"419":1,"434":1,"447":1,"559":1,"590":1},"2":{"1016":1}}],["outputting",{"1":{"415":1}}],["outputs",{"0":{"415":1},"1":{"272":1,"415":1,"684":1,"687":1}}],["outcomes",{"1":{"413":1,"758":1,"800":1,"854":1,"877":1}}],["outside",{"1":{"306":1,"458":1}}],["outsource",{"1":{"184":1}}],["outstanding",{"1":{"182":1}}],["outdated",{"1":{"168":1,"170":1,"280":1}}],["out",{"0":{"324":1},"1":{"65":1,"123":1,"300":1,"337":2,"344":1,"351":1,"406":1,"867":1,"914":1,"1038":1},"2":{"324":1}}],["ourselves",{"1":{"203":1,"340":1}}],["our",{"0":{"1":1,"43":1,"63":1,"194":1,"203":1,"234":1,"334":1,"373":1,"638":1,"640":1,"641":1,"936":1,"968":3},"1":{"1":1,"25":1,"31":3,"37":2,"38":1,"44":1,"46":2,"48":1,"49":2,"50":1,"51":1,"52":1,"53":1,"58":1,"60":1,"61":1,"63":2,"64":1,"66":1,"90":1,"93":1,"94":1,"95":1,"98":1,"100":3,"103":1,"104":2,"105":1,"106":1,"107":4,"109":1,"110":2,"111":2,"112":1,"114":1,"115":1,"117":2,"118":2,"119":1,"120":2,"122":1,"123":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"137":1,"138":2,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"151":1,"154":2,"155":1,"158":1,"160":1,"162":1,"164":1,"165":1,"179":1,"181":1,"182":3,"185":1,"186":1,"190":3,"198":1,"200":2,"203":1,"204":1,"234":2,"235":1,"248":1,"250":1,"264":1,"265":2,"267":1,"269":2,"277":1,"278":2,"279":2,"280":2,"289":1,"290":1,"291":2,"292":2,"293":2,"295":1,"297":1,"299":3,"300":1,"305":1,"307":1,"308":1,"309":1,"313":1,"322":1,"327":2,"328":1,"331":1,"332":1,"334":1,"339":1,"345":1,"352":1,"354":1,"358":2,"362":1,"364":2,"365":3,"368":1,"370":1,"381":1,"420":1,"625":2,"638":1,"640":1,"674":2,"675":2,"676":2,"677":2,"678":2,"706":1,"867":3,"869":1,"878":2,"894":1,"936":1,"959":1,"996":2,"997":1,"998":1,"1001":2,"1003":2,"1007":2,"1011":2}}],["opposable",{"0":{"967":1}}],["opportunities",{"1":{"138":1,"155":1,"259":1,"285":1,"291":1,"1019":1,"1022":1,"1023":1,"1026":1,"1050":1}}],["opinions",{"1":{"355":1,"406":1}}],["operating",{"1":{"383":1}}],["operational",{"1":{"184":1,"200":1,"238":1,"751":1}}],["operation",{"1":{"330":1},"2":{"7":1,"371":1}}],["operations",{"0":{"7":1,"628":1},"1":{"7":1,"171":1,"173":1,"192":1,"211":1,"246":1,"265":1,"292":1,"358":1,"399":1,"524":1,"538":1,"541":1,"613":1,"628":1,"630":1,"636":2,"691":1,"784":1,"790":1,"979":1,"1043":1},"2":{"1":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"24":1,"25":1,"26":1,"27":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"346":1,"1043":1},"4":{"1":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1}}],["operates",{"1":{"405":1}}],["operate",{"1":{"295":1,"612":1}}],["openhand",{"2":{"1016":1}}],["openhands",{"0":{"1016":1},"1":{"1016":1}}],["openly",{"1":{"703":1}}],["opennext",{"1":{"493":1}}],["openness",{"1":{"54":1,"567":1}}],["opening",{"1":{"342":1}}],["openart",{"0":{"255":1},"1":{"255":1}}],["openais",{"0":{"624":1}}],["openai",{"0":{"259":1,"260":1,"412":1,"1015":1},"1":{"236":1,"271":1,"274":1,"412":2,"1015":1}}],["opensource",{"4":{"64":1}}],["open",{"0":{"64":1,"235":1,"262":1,"408":1,"441":1},"1":{"64":1,"165":1,"166":1,"222":1,"262":1,"291":1,"297":1,"302":1,"340":1,"375":1,"408":1,"417":1,"429":1,"441":2,"537":1,"596":1,"670":1,"693":1,"763":1,"806":1,"1007":1,"1031":1},"2":{"64":1,"408":1},"4":{"121":1,"122":1}}],["optimal",{"1":{"789":1}}],["optimizations",{"1":{"223":1,"640":1,"1004":1}}],["optimization",{"0":{"116":1,"229":1,"233":1,"428":1,"454":1},"1":{"116":2,"229":1,"233":2,"252":1,"428":1,"480":1,"491":1,"623":1,"899":1,"941":1,"975":1,"984":1}}],["optimizing",{"0":{"243":1,"249":1},"1":{"4":1,"243":1,"249":1,"426":1,"745":1,"1002":1,"1006":1}}],["optimizes",{"1":{"971":1}}],["optimized",{"1":{"253":1}}],["optimize",{"1":{"4":1,"241":1,"436":1,"505":1,"554":1,"633":1,"726":1,"728":1,"753":1,"919":1,"975":1}}],["optional",{"1":{"725":1}}],["options",{"1":{"180":1,"417":1,"797":1,"891":1}}],["option",{"1":{"45":1}}],["ops",{"1":{"7":1},"2":{"361":1,"366":1}}],["others",{"1":{"188":1,"568":1,"578":1,"937":1,"1020":1}}],["other",{"0":{"3":1},"1":{"30":1,"44":1,"92":1,"183":1,"188":1,"194":1,"207":1,"212":1,"288":1,"343":1,"347":1,"451":1,"547":1,"595":1,"635":1,"889":2,"1009":1,"1026":1}}],["once",{"0":{"538":1},"1":{"200":1,"538":1}}],["online",{"0":{"166":1,"168":1},"1":{"157":1,"163":1,"166":1,"170":1,"173":1,"176":1,"388":1}}],["only",{"1":{"30":1,"358":1,"365":1,"431":1,"479":1,"687":1,"747":1,"836":1,"892":1,"894":1,"978":1}}],["ongoing",{"1":{"103":1,"289":1,"808":1}}],["onboarded",{"1":{"200":1}}],["onboard",{"0":{"77":1}}],["onboarding",{"0":{"70":1,"186":1,"200":1,"286":1,"553":1},"1":{"77":1,"286":1,"800":1,"920":1,"1000":1},"2":{"35":1}}],["ones",{"0":{"851":1},"1":{"150":1,"184":1,"849":1,"856":1}}],["one",{"0":{"705":1,"764":1},"1":{"4":1,"35":1,"66":1,"168":1,"200":1,"294":1,"311":1,"324":1,"333":1,"346":1,"411":1,"424":1,"467":1,"479":1,"515":1,"518":1,"605":1,"614":1,"803":1,"847":1,"960":1,"975":1,"1044":1}}],["on",{"0":{"54":1,"55":1,"56":1,"305":1,"334":1,"344":1,"349":1,"354":1,"395":1,"532":1,"543":1,"549":1,"552":1,"606":1,"617":1,"641":1,"642":1,"643":1,"651":1,"711":1,"728":1,"794":1,"801":1,"873":1,"876":1,"931":1,"975":1,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1},"1":{"2":1,"4":1,"28":1,"29":1,"36":2,"45":1,"52":1,"56":1,"58":1,"67":1,"89":1,"93":1,"97":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":2,"108":1,"112":1,"116":1,"117":2,"119":2,"120":1,"124":2,"139":1,"153":1,"158":1,"161":2,"162":1,"181":1,"185":2,"188":2,"190":2,"200":1,"203":1,"206":1,"209":1,"210":1,"215":2,"224":2,"232":1,"237":1,"240":1,"245":1,"252":1,"264":1,"265":1,"266":1,"270":3,"273":1,"277":1,"279":1,"280":1,"281":2,"282":1,"284":1,"286":1,"288":2,"291":1,"292":1,"293":1,"297":1,"305":2,"313":1,"315":1,"323":1,"325":1,"328":1,"330":1,"336":2,"344":1,"354":1,"355":1,"364":1,"366":1,"369":1,"370":1,"372":1,"384":1,"385":1,"391":1,"397":1,"400":1,"406":1,"407":1,"408":2,"409":1,"413":1,"423":1,"436":1,"440":1,"443":1,"445":1,"464":1,"466":1,"469":1,"470":1,"474":1,"480":1,"487":1,"491":2,"493":1,"496":2,"511":1,"514":1,"515":1,"521":2,"526":1,"531":1,"532":1,"533":1,"546":1,"548":3,"549":1,"551":1,"552":1,"554":1,"564":2,"566":2,"567":1,"573":1,"575":1,"577":1,"607":1,"612":1,"617":1,"631":1,"632":1,"636":1,"637":2,"638":1,"640":1,"643":1,"645":1,"648":1,"649":1,"653":1,"657":1,"662":1,"666":1,"687":1,"706":1,"709":1,"716":1,"718":1,"720":1,"722":1,"734":1,"736":1,"737":2,"738":1,"740":2,"741":1,"742":1,"743":1,"751":1,"761":1,"774":1,"801":1,"808":1,"809":1,"812":1,"818":1,"820":2,"829":1,"833":1,"836":1,"867":1,"873":1,"877":1,"885":1,"886":1,"894":1,"904":1,"906":1,"910":1,"912":1,"918":1,"919":2,"920":1,"938":2,"940":1,"944":1,"954":1,"956":1,"958":1,"959":1,"965":1,"973":1,"980":1,"987":2,"997":1,"999":1,"1000":2,"1001":1,"1003":1,"1004":2,"1005":4,"1008":1,"1009":1,"1010":2,"1015":1,"1016":1,"1018":1,"1020":2,"1021":1,"1022":2,"1023":2,"1027":1,"1029":1,"1032":1,"1038":1,"1039":1,"1042":2,"1046":1}}],["often",{"1":{"285":1,"489":1,"734":1,"735":1,"739":1,"810":1,"811":1,"907":1,"948":1}}],["offs",{"0":{"804":1},"1":{"772":1}}],["offshore",{"1":{"162":1}}],["offline",{"1":{"637":1}}],["office",{"0":{"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"153":1,"366":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1},"1":{"102":1,"104":1,"107":1,"109":1,"111":1,"112":1,"117":1,"153":1,"188":2,"310":1,"311":4,"343":1,"996":1,"998":2,"999":1,"1000":1,"1001":1,"1004":1,"1005":1,"1009":1},"2":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1}}],["officially",{"1":{"181":1}}],["official",{"1":{"72":1,"495":1}}],["offers",{"1":{"120":1,"212":1,"426":1,"450":1,"497":1,"673":1,"692":1,"804":1,"913":1,"958":1}}],["offered",{"1":{"119":1}}],["offering",{"1":{"108":1,"115":1,"666":1,"743":1,"784":1,"807":1,"946":1}}],["offer",{"0":{"83":1},"1":{"98":1,"466":1}}],["off",{"0":{"81":1},"1":{"116":1,"590":1,"677":1,"794":1}}],["offboard",{"1":{"22":1}}],["offboarding",{"0":{"22":1}}],["of",{"0":{"24":1,"92":1,"93":1,"95":1,"123":1,"205":1,"215":1,"221":1,"231":1,"282":1,"325":1,"351":1,"374":1,"377":1,"379":1,"393":1,"415":1,"444":1,"449":1,"452":1,"470":1,"477":1,"483":1,"496":1,"521":1,"549":1,"614":1,"615":1,"642":1,"667":1,"673":1,"685":1,"688":1,"689":1,"727":1,"733":1,"797":1,"805":1,"814":1,"817":1,"818":1,"825":1,"827":1,"829":1,"830":1,"839":1,"841":1,"847":1,"861":1,"864":1,"884":1,"898":1,"902":1,"906":1,"913":1,"942":1,"958":1,"993":1,"997":1,"1009":1},"1":{"1":1,"4":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":1,"15":1,"17":1,"19":1,"20":1,"21":1,"28":1,"29":1,"31":1,"40":1,"45":1,"46":1,"54":2,"55":1,"57":1,"65":1,"66":1,"67":1,"72":1,"89":2,"91":1,"92":1,"93":1,"95":1,"96":2,"97":2,"98":1,"100":2,"101":1,"103":3,"104":2,"106":1,"107":1,"108":1,"109":1,"113":1,"114":1,"116":1,"117":1,"119":1,"121":1,"122":3,"124":1,"125":1,"126":3,"127":3,"128":3,"129":3,"130":3,"131":1,"132":3,"133":3,"134":3,"136":1,"137":3,"140":3,"141":3,"142":3,"143":3,"144":1,"145":3,"146":3,"147":3,"148":3,"149":3,"171":1,"179":1,"181":2,"182":2,"198":1,"203":4,"205":1,"207":3,"208":1,"211":1,"212":3,"214":1,"215":1,"217":1,"220":1,"221":1,"223":1,"224":1,"226":1,"236":1,"244":1,"247":1,"251":2,"258":2,"259":1,"266":2,"267":1,"269":3,"270":3,"271":2,"272":2,"273":2,"276":2,"277":3,"278":3,"282":5,"285":2,"286":2,"287":2,"288":1,"291":2,"295":1,"296":1,"297":1,"300":1,"315":1,"322":1,"323":1,"327":1,"329":1,"331":1,"332":1,"333":2,"334":3,"335":1,"337":1,"338":1,"341":2,"347":1,"348":1,"349":2,"351":2,"355":3,"356":2,"358":1,"362":2,"365":1,"368":2,"374":1,"377":1,"405":3,"407":1,"409":1,"411":2,"412":2,"414":2,"415":2,"416":1,"418":1,"420":1,"421":2,"423":2,"424":1,"426":1,"428":1,"430":2,"431":3,"434":1,"440":2,"441":3,"442":4,"443":1,"444":3,"445":1,"446":1,"447":1,"448":1,"449":2,"451":1,"454":1,"455":1,"460":2,"463":2,"466":1,"467":1,"468":1,"470":1,"474":1,"477":2,"480":2,"484":2,"486":1,"490":1,"491":2,"494":1,"496":2,"497":1,"498":1,"503":1,"504":1,"506":1,"507":1,"511":2,"512":1,"513":3,"515":2,"517":2,"518":1,"519":1,"520":1,"524":1,"528":2,"530":1,"536":1,"537":1,"546":1,"547":1,"548":3,"549":1,"550":1,"552":1,"555":1,"556":1,"557":1,"558":1,"559":1,"560":2,"565":1,"568":1,"571":1,"575":1,"580":1,"583":1,"584":1,"587":2,"588":3,"589":2,"591":1,"593":1,"595":2,"597":1,"598":2,"601":3,"604":1,"605":2,"609":3,"610":1,"613":2,"614":2,"616":1,"623":1,"628":1,"629":1,"631":2,"635":1,"636":1,"638":1,"642":3,"647":1,"683":1,"685":1,"686":1,"687":1,"692":1,"693":1,"699":1,"701":1,"702":1,"704":1,"721":1,"727":1,"733":1,"736":1,"740":1,"760":1,"761":1,"774":1,"792":1,"806":1,"809":1,"812":2,"814":1,"816":1,"817":1,"824":1,"825":1,"834":1,"847":1,"878":2,"883":1,"884":2,"885":1,"886":1,"887":4,"888":3,"889":4,"890":2,"891":3,"892":1,"893":1,"894":2,"895":1,"896":1,"902":2,"911":1,"918":1,"921":1,"922":1,"923":2,"928":1,"938":1,"942":1,"958":2,"960":1,"963":3,"968":1,"971":1,"974":1,"975":3,"977":1,"978":7,"981":1,"989":1,"997":1,"998":1,"999":1,"1001":2,"1002":1,"1003":1,"1005":1,"1009":1,"1033":2,"1036":1,"1038":1,"1039":1,"1041":1,"1043":1,"1044":1,"1046":1},"2":{"187":1,"595":1,"607":1,"609":1,"610":1,"612":1,"613":1,"614":1,"615":1,"913":1,"960":1},"4":{"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"993":1}}],["illustrating",{"1":{"972":1}}],["illustrate",{"1":{"958":1}}],["illustrates",{"0":{"839":1},"1":{"20":1}}],["ibm",{"1":{"631":1}}],["idx",{"1":{"492":1}}],["ide",{"1":{"526":1}}],["identifiers",{"1":{"918":1}}],["identify",{"1":{"413":1,"427":1,"530":1,"754":1,"873":1}}],["identifying",{"1":{"138":1}}],["identity",{"1":{"681":1,"1033":1}}],["identical",{"1":{"404":1}}],["idealists",{"1":{"801":1}}],["ideal",{"1":{"121":1,"136":1,"138":1,"144":1,"692":1,"1032":1}}],["idea",{"1":{"97":1,"125":1,"182":1,"333":1,"346":1,"480":1,"830":1,"838":1,"906":1,"907":1,"908":1}}],["ideas",{"0":{"285":1,"330":1,"820":1,"848":1,"851":1,"907":2},"1":{"63":1,"112":1,"199":1,"269":1,"278":1,"575":1,"638":1,"820":1,"821":1,"848":1,"850":1,"851":1,"855":1,"856":1,"857":1,"859":1,"861":1,"862":1,"863":1,"864":1,"865":1,"866":1,"904":1,"905":1,"907":1,"950":1,"987":2,"990":1,"993":1}}],["ignore",{"1":{"473":1}}],["i18next",{"1":{"472":1}}],["i18n",{"0":{"472":1}}],["irrelevant",{"1":{"431":1}}],["immutable",{"1":{"666":1}}],["immutability",{"1":{"545":1,"585":1}}],["imagine",{"1":{"470":1,"511":1}}],["image",{"0":{"661":1,"924":1},"1":{"403":1,"661":1,"890":1,"892":1,"921":1,"924":1}}],["images",{"1":{"401":1,"403":1,"560":1}}],["impermanent",{"1":{"589":1}}],["import",{"0":{"918":1},"2":{"918":1}}],["imported",{"1":{"512":1}}],["imports",{"1":{"478":1,"505":1}}],["important",{"0":{"873":1},"1":{"31":1,"39":1,"63":1,"112":1,"280":1,"365":1,"406":1,"424":1,"491":1,"642":1,"706":1,"811":1,"873":1,"987":1}}],["importance",{"1":{"29":1,"55":1,"203":1,"251":1,"282":1,"286":1,"323":1,"420":1,"558":1,"701":1,"894":1,"1033":1,"1039":1,"1041":1,"1044":1,"1046":1}}],["implications",{"1":{"411":1,"893":1}}],["implemented",{"1":{"414":1}}],["implementing",{"0":{"247":1},"1":{"215":1,"218":1,"224":1,"239":1,"241":1,"245":1,"247":1,"252":1,"400":1,"422":1,"626":1,"914":1,"965":1}}],["implementation",{"0":{"483":1},"1":{"212":1,"244":1,"440":1,"441":1,"489":1,"527":1,"528":1,"609":1,"679":1,"773":1,"891":1}}],["implementations",{"1":{"211":1,"524":1,"615":1,"628":1,"629":1,"913":1}}],["implement",{"0":{"241":1,"600":1},"1":{"89":1,"156":1,"314":1,"418":1,"437":1,"472":1,"600":1,"617":1,"744":1,"769":1,"785":1,"911":1,"957":1}}],["improper",{"1":{"331":1,"476":1}}],["improving",{"1":{"113":1,"240":1,"372":1,"404":1,"420":1,"447":1,"452":1,"685":1,"702":1,"711":1,"740":1,"756":1,"757":1,"762":1,"766":1,"771":1,"883":1,"888":1,"898":1,"922":1,"939":1}}],["improves",{"0":{"287":1},"1":{"309":1,"346":1,"389":1,"397":1,"399":1,"431":1,"658":1,"660":1,"688":1,"705":1,"741":1,"760":1,"775":1,"799":1,"906":1}}],["improved",{"1":{"156":1,"178":1,"400":1,"413":1,"481":1}}],["improvements",{"1":{"204":1,"209":1,"274":1,"470":1}}],["improvement",{"1":{"46":1,"646":1,"665":1}}],["improve",{"0":{"253":1},"1":{"7":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"159":1,"166":1,"171":1,"197":1,"208":1,"216":1,"378":1,"379":1,"390":1,"398":1,"406":1,"409":1,"415":1,"419":1,"420":1,"428":1,"434":1,"435":1,"442":1,"454":1,"458":1,"491":1,"498":1,"551":1,"578":1,"623":1,"629":1,"656":1,"668":1,"669":1,"671":1,"681":1,"706":1,"726":1,"734":1,"743":1,"744":1,"748":1,"765":1,"768":1,"770":1,"773":1,"776":1,"785":1,"786":1,"787":1,"792":1,"808":1,"810":1,"817":1,"828":1,"829":1,"853":1,"858":1,"862":1,"870":1,"874":1,"875":1,"879":1,"880":1,"881":1,"914":1,"920":1,"938":1,"943":1,"949":1,"956":1,"964":1,"969":1,"983":1,"989":1,"992":1}}],["impactful",{"1":{"836":1,"842":1}}],["impacts",{"1":{"342":1,"818":1}}],["impact",{"0":{"975":1},"1":{"232":1,"258":1,"272":1,"273":1,"449":1,"496":1,"548":1,"878":1,"881":1,"890":1,"948":1}}],["i",{"0":{"345":1,"384":1,"395":1,"638":1},"1":{"188":1,"323":2,"327":1,"337":7,"349":1,"470":1,"638":1,"976":2}}],["iot",{"2":{"169":1}}],["io",{"1":{"166":1,"480":1}}],["ios",{"0":{"127":1,"142":1,"794":1},"1":{"284":1,"383":1,"618":1,"794":1,"961":1}}],["ics3rd",{"3":{"887":1}}],["ice",{"1":{"527":1}}],["icon",{"0":{"286":1},"1":{"286":1,"379":1,"1000":1}}],["icy",{"0":{"61":1,"62":1,"153":1,"307":1,"347":1,"353":1,"1010":1},"1":{"61":1,"62":2,"117":1,"153":1,"307":1,"347":1,"353":1,"356":1,"1001":1,"1010":1},"2":{"61":1,"62":1,"307":1,"347":1,"350":1,"353":1,"359":1,"361":1,"363":1,"364":1,"367":1,"592":1,"600":1}}],["icrosschain",{"1":{"53":1}}],["ifp",{"1":{"579":1}}],["iframes",{"1":{"489":1}}],["iframe",{"0":{"489":1},"1":{"489":1},"2":{"489":1}}],["if",{"1":{"36":2,"328":1,"337":1,"341":1,"342":1,"406":1,"543":1,"900":1,"903":1,"980":1}}],["itp",{"1":{"580":1}}],["iteratively",{"1":{"884":1}}],["iterative",{"1":{"447":1}}],["iterations",{"1":{"296":1}}],["iterators",{"0":{"540":1},"1":{"113":1,"540":1},"2":{"540":1}}],["item",{"1":{"89":1}}],["items",{"0":{"70":1},"1":{"663":1}}],["itself",{"1":{"442":1}}],["its",{"0":{"234":1,"416":1,"610":1,"960":1},"1":{"48":1,"207":1,"214":1,"216":1,"217":1,"219":1,"220":1,"223":1,"231":1,"274":1,"308":1,"355":2,"411":1,"414":1,"416":1,"424":2,"441":1,"451":1,"460":1,"546":1,"548":1,"551":1,"558":1,"560":1,"564":1,"583":2,"591":2,"595":1,"598":2,"607":3,"610":1,"647":1,"684":1,"686":1,"758":1,"878":1,"913":2,"942":1,"948":1,"980":1,"999":1}}],["it",{"0":{"101":1,"109":1,"210":1,"327":1,"328":1,"614":1,"636":1,"855":1},"1":{"4":1,"40":1,"44":1,"48":1,"49":2,"63":1,"67":1,"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"89":1,"96":1,"98":1,"99":1,"100":1,"101":1,"102":1,"109":1,"115":1,"123":1,"154":1,"155":1,"165":1,"174":1,"179":1,"182":1,"185":1,"188":1,"191":1,"198":1,"202":2,"210":1,"212":1,"218":1,"220":1,"223":1,"251":1,"269":1,"278":1,"286":2,"308":1,"309":2,"327":1,"332":2,"335":1,"337":3,"338":1,"340":1,"343":1,"346":1,"351":1,"355":1,"358":1,"365":1,"405":1,"406":1,"412":1,"415":1,"416":1,"424":1,"427":1,"428":1,"430":1,"432":1,"433":1,"436":1,"437":1,"439":1,"447":1,"450":2,"451":1,"453":1,"456":1,"470":2,"477":1,"497":3,"501":1,"511":1,"530":1,"540":2,"548":1,"552":1,"583":1,"591":2,"595":1,"598":1,"614":1,"623":2,"625":2,"631":1,"635":4,"642":2,"647":2,"660":1,"684":1,"686":1,"756":1,"810":1,"884":1,"892":1,"902":2,"945":1,"958":1,"971":1,"980":1,"990":1,"995":2,"1006":1,"1017":2,"1032":1,"1044":2}}],["ip",{"1":{"3":1,"753":1,"769":1}}],["inquiries",{"1":{"845":1}}],["inquiry",{"1":{"815":1}}],["inherently",{"0":{"809":1}}],["inheritance",{"1":{"699":1}}],["inaccurate",{"1":{"735":1}}],["inert",{"0":{"473":1}}],["injection",{"0":{"411":1},"1":{"411":2}}],["info",{"1":{"697":1}}],["informs",{"0":{"834":1}}],["informed",{"1":{"207":1,"352":1,"371":1}}],["information",{"0":{"734":1,"735":1,"855":1},"1":{"77":1,"98":1,"249":1,"384":1,"392":1,"397":1,"415":1,"431":2,"432":1,"437":1,"442":1,"468":1,"605":1,"706":1,"734":1,"735":1,"821":1,"834":1,"851":1,"853":1,"865":1,"966":1,"991":1},"2":{"883":1}}],["inform",{"0":{"191":1,"704":1,"832":1,"865":1},"1":{"70":1,"77":1,"82":1,"704":1,"834":1}}],["infps",{"1":{"579":1}}],["infjs",{"1":{"565":1}}],["inference",{"1":{"461":1,"542":1}}],["infinite",{"0":{"450":1,"661":1},"1":{"450":1,"661":1},"2":{"450":1}}],["influenced",{"1":{"1026":1}}],["influence",{"1":{"342":1,"799":1}}],["infrastructure",{"1":{"248":1,"527":1,"641":1}}],["inductive",{"0":{"950":1},"1":{"950":1}}],["industries",{"1":{"396":1,"449":1}}],["industry",{"1":{"33":1,"53":1,"121":1,"182":1,"203":1,"221":1,"230":1,"269":1,"278":1,"289":1,"375":1,"475":1,"492":1,"1045":1}}],["indexes",{"1":{"716":1}}],["indexeddb",{"0":{"485":1},"1":{"485":1}}],["indexing",{"1":{"633":1,"905":1}}],["index",{"0":{"322":1,"970":1},"1":{"478":1,"515":5,"970":1},"2":{"970":3}}],["independence",{"1":{"219":1,"580":1,"626":1}}],["independently",{"1":{"465":1,"630":1}}],["independent",{"1":{"201":1,"483":1,"606":1}}],["individuals",{"1":{"978":1}}],["individuality",{"1":{"579":1}}],["individual",{"1":{"289":1,"299":1,"336":1,"365":1,"654":2,"1048":1}}],["indicating",{"1":{"635":2}}],["indicates",{"1":{"428":1}}],["indicate",{"1":{"194":1}}],["indicators",{"0":{"245":1,"251":1},"1":{"245":1,"251":1,"812":1}}],["indicator",{"0":{"192":1}}],["intps",{"1":{"580":1}}],["intuition",{"0":{"565":1,"572":1,"575":1},"1":{"565":1,"947":1}}],["intuitives",{"1":{"575":2}}],["intuitive",{"1":{"170":1,"249":1}}],["intricate",{"1":{"480":1}}],["introversion",{"0":{"581":1}}],["introverted",{"0":{"565":1,"577":1,"579":1,"580":1},"1":{"565":1,"577":1,"581":1,"1023":1}}],["intro",{"0":{"438":1,"469":1,"485":1}}],["introducing",{"0":{"484":1},"1":{"226":1,"513":1,"625":1,"999":1}}],["introduction",{"0":{"416":1,"451":1,"630":1,"665":1,"722":1,"723":1},"1":{"116":2,"416":1,"422":1,"789":1,"997":1,"1003":1},"4":{"561":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1}}],["introduces",{"1":{"223":1,"348":1}}],["introduced",{"1":{"198":1,"202":1,"318":1,"411":1}}],["introduce",{"0":{"551":1,"610":1,"960":1},"1":{"106":1,"327":1,"586":1,"958":1}}],["intjs",{"1":{"565":1}}],["intj",{"0":{"196":1},"1":{"196":1},"2":{"196":1}}],["integers",{"1":{"654":1}}],["integrate",{"1":{"504":1}}],["integrates",{"1":{"438":1}}],["integrated",{"1":{"415":1,"423":1}}],["integrative",{"1":{"967":1}}],["integrating",{"1":{"248":1,"284":1,"358":1,"410":1,"717":1,"887":1,"1002":1}}],["integrations",{"1":{"173":1,"1004":1}}],["integration",{"0":{"504":1},"1":{"164":1,"399":1,"414":1,"426":1,"509":1,"616":1,"666":1,"727":1,"793":1,"910":1,"972":2,"998":1},"2":{"423":1}}],["integral",{"1":{"411":1}}],["integrity",{"1":{"238":1,"252":1,"634":1,"972":1}}],["intensive",{"1":{"894":3,"1021":1}}],["intentions",{"1":{"839":1}}],["intent",{"0":{"421":1},"1":{"421":2},"2":{"421":1}}],["intended",{"1":{"405":1,"642":1}}],["intelligence",{"1":{"169":1,"246":1,"277":1,"285":1,"440":1,"449":1,"727":1}}],["interesting",{"1":{"980":1}}],["interested",{"1":{"264":1}}],["interoperability",{"1":{"940":1}}],["interpret",{"1":{"946":1}}],["interpretation",{"1":{"809":1,"835":1}}],["interprocess",{"1":{"617":1,"663":1}}],["interconnected",{"1":{"908":1}}],["interchangeable",{"1":{"609":1}}],["intercept",{"1":{"497":1}}],["intervals",{"1":{"588":1,"767":1}}],["interviewgpt",{"1":{"624":1}}],["interview",{"0":{"86":1,"106":1,"250":1,"624":1,"643":1,"732":1,"761":1,"816":1},"1":{"86":1,"106":1,"643":1,"732":1,"963":1}}],["interviews",{"1":{"24":1,"92":1,"250":1,"624":1,"808":1,"816":1}}],["intersection",{"1":{"277":1},"2":{"490":1}}],["interface",{"0":{"522":1,"916":1},"1":{"214":1,"249":1,"393":1,"422":1,"522":1,"609":2,"618":1,"693":1,"717":1,"916":1},"2":{"522":1}}],["interfaces",{"0":{"879":1},"1":{"166":1,"221":1,"284":1,"287":1,"378":1,"391":1,"689":1,"699":1,"795":1,"798":1,"879":1,"1004":1}}],["interact",{"1":{"213":1,"424":1}}],["interacting",{"1":{"416":1}}],["interactively",{"1":{"777":1}}],["interactive",{"1":{"52":1,"245":1,"270":1,"284":1,"422":1,"595":1,"727":1}}],["interactions",{"1":{"282":1,"418":1,"438":1,"578":1}}],["interaction",{"0":{"282":1},"1":{"37":1,"221":1,"282":1,"391":1,"606":1,"775":1,"884":1,"894":1,"968":1}}],["internet",{"1":{"287":1,"637":1,"982":1,"997":1}}],["intern",{"0":{"141":1},"1":{"341":1,"1037":1}}],["internationalized",{"1":{"472":1}}],["international",{"0":{"84":1}}],["internally",{"1":{"1047":1}}],["internals",{"1":{"230":1}}],["internal",{"0":{"887":1},"1":{"46":1,"107":1,"151":1,"185":1,"211":1,"235":1,"237":1,"295":1,"364":1,"524":1,"570":1,"607":1,"623":1,"887":1},"2":{"89":1,"190":1,"358":1,"364":1,"365":1,"631":1,"674":1,"675":1,"676":1,"677":1,"678":1}}],["internship",{"1":{"56":1,"1021":1},"2":{"141":1}}],["into",{"0":{"253":1,"475":1,"563":1,"851":1,"860":1,"973":1},"1":{"108":2,"110":1,"160":1,"162":1,"170":2,"201":1,"212":2,"242":2,"246":2,"254":1,"282":1,"284":2,"288":1,"291":1,"332":1,"343":1,"358":1,"365":1,"411":1,"415":1,"420":1,"426":1,"439":2,"465":1,"512":1,"515":1,"538":1,"563":1,"588":1,"601":1,"632":1,"689":1,"723":1,"763":1,"767":1,"775":1,"833":1,"850":1,"851":1,"854":1,"859":1,"878":1,"894":1,"895":1,"914":1,"937":1,"951":1,"958":2,"987":1,"1002":2,"1007":1,"1010":1,"1017":1}}],["inputs",{"1":{"684":1}}],["input",{"1":{"105":1,"106":1,"114":1,"379":1,"420":1,"473":1,"590":1,"620":2,"725":1,"802":1}}],["inbox",{"1":{"99":1,"101":1}}],["inciting",{"1":{"841":1}}],["incidents",{"1":{"764":1}}],["incident",{"0":{"764":1},"1":{"764":1,"841":1}}],["incomplete",{"1":{"953":1}}],["incoming",{"1":{"536":1,"903":1}}],["incorrect",{"1":{"739":1}}],["incorporate",{"1":{"365":1}}],["inconsistencies",{"1":{"576":1}}],["inc",{"1":{"328":1}}],["increasing",{"1":{"846":1,"975":1,"997":1}}],["increasingly",{"1":{"456":1}}],["increased",{"1":{"423":1}}],["increase",{"0":{"208":1},"1":{"171":1,"413":1,"849":1}}],["incredibly",{"1":{"280":1}}],["increment",{"0":{"73":1}}],["including",{"1":{"104":1,"113":1,"116":1,"117":1,"164":1,"214":1,"217":1,"274":1,"284":1,"339":1,"379":1,"383":1,"386":1,"412":1,"416":1,"451":1,"457":1,"464":1,"473":1,"493":1,"494":1,"550":1,"567":1,"571":1,"580":1,"581":1,"583":1,"584":1,"591":1,"593":1,"597":1,"598":1,"604":1,"634":1,"644":1,"645":1,"663":1,"667":1,"668":1,"680":1,"684":1,"698":1,"699":1,"710":1,"718":1,"724":1,"732":1,"741":1,"753":1,"760":1,"764":1,"788":1,"795":1,"805":1,"870":1,"880":1,"882":1,"910":1,"914":1,"920":1,"939":1,"940":1,"961":1,"962":1,"964":1,"981":1,"984":1,"985":1,"989":1,"999":1,"1002":1,"1005":1,"1009":1}}],["includes",{"1":{"235":1,"406":1,"995":1}}],["include",{"1":{"103":1,"206":1,"869":1,"972":1,"998":1}}],["included",{"1":{"40":1,"52":1}}],["invaluable",{"1":{"958":1}}],["invalidated",{"1":{"468":1}}],["invariants",{"1":{"696":1}}],["inventory",{"0":{"955":1},"1":{"955":1},"2":{"955":1}}],["invented",{"1":{"518":1}}],["inversion",{"1":{"693":1}}],["investors",{"1":{"182":1,"249":1,"341":1,"588":1,"673":1,"868":1}}],["investing",{"0":{"878":1},"1":{"167":1,"673":1,"878":1}}],["investments",{"1":{"172":1,"257":1,"360":1}}],["investment",{"0":{"158":1,"249":1,"673":1,"850":1},"1":{"106":1,"155":1,"181":1,"249":1,"275":1,"588":1},"2":{"878":1}}],["invest",{"0":{"778":1},"1":{"38":1,"158":1,"188":1,"588":1}}],["invoking",{"0":{"900":1}}],["invoked",{"1":{"900":1}}],["invoke",{"1":{"511":1}}],["involve",{"1":{"636":1}}],["involves",{"1":{"424":1,"502":1,"953":1,"975":1}}],["involved",{"1":{"356":1,"958":1}}],["invoice",{"0":{"8":1},"1":{"8":1}}],["invitation",{"0":{"86":1}}],["invite",{"1":{"74":1,"75":1}}],["inviation",{"0":{"74":1,"75":1}}],["innovate",{"1":{"822":1}}],["innovative",{"1":{"203":1,"297":1,"307":1,"494":1,"869":1,"884":1}}],["innovations",{"0":{"258":1,"263":1,"368":1},"1":{"43":1,"263":1,"919":1}}],["innovation",{"0":{"822":1},"1":{"32":1,"266":1,"360":1,"368":1,"449":1,"664":1,"778":1,"850":1,"943":1,"945":1},"2":{"315":1}}],["inner",{"0":{"333":1},"1":{"212":1,"323":1,"333":1}}],["innno",{"1":{"625":1},"3":{"2":1,"17":1,"22":1,"47":1,"49":1,"103":1,"104":1,"105":1,"106":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"119":1,"120":1,"121":1,"125":1,"153":1,"266":1,"279":1,"289":1,"293":1,"345":1,"349":1,"352":1,"356":1,"369":1,"381":1,"623":1,"625":1,"887":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1}}],["initiation",{"0":{"481":1},"1":{"481":1}}],["initiative",{"1":{"216":1,"327":1,"1036":1}}],["initiatives",{"1":{"29":1,"38":1,"997":1}}],["initially",{"1":{"439":1}}],["initial",{"0":{"243":1},"1":{"200":1,"243":1,"270":1}}],["initialization",{"0":{"12":1},"1":{"12":1}}],["insertion",{"1":{"979":1}}],["inside",{"0":{"895":1},"1":{"436":1,"458":1}}],["insight",{"0":{"396":1},"1":{"279":1,"396":1,"565":1,"572":1,"576":1,"674":1,"675":1,"676":1,"677":1,"678":1,"947":1}}],["insightful",{"1":{"106":1,"197":1,"355":1,"628":1,"835":1,"953":1}}],["insights",{"0":{"119":1,"440":1,"944":1,"1004":1,"1008":1},"1":{"46":1,"104":1,"107":1,"108":1,"115":1,"117":1,"118":1,"120":1,"207":1,"212":1,"224":1,"233":1,"246":1,"264":1,"265":1,"268":1,"277":1,"292":1,"293":1,"355":1,"356":1,"440":1,"442":1,"493":1,"567":1,"578":1,"589":1,"632":1,"682":1,"705":1,"730":1,"732":1,"733":1,"737":1,"761":1,"801":1,"804":1,"806":1,"807":1,"808":1,"813":1,"817":1,"821":1,"826":1,"850":1,"851":1,"856":1,"857":1,"860":1,"863":1,"864":1,"876":1,"914":1,"937":1,"944":1,"946":1,"949":1,"966":1,"997":1,"1000":1,"1001":1,"1004":1,"1007":1,"1008":1,"1010":1,"1018":1}}],["inspite",{"1":{"405":1}}],["inspire",{"1":{"840":1}}],["inspired",{"1":{"48":1,"222":1,"308":1,"909":1,"1003":1}}],["inspiration",{"0":{"368":1}}],["install",{"1":{"648":1,"649":1,"657":1}}],["installation",{"0":{"557":1,"649":1},"1":{"526":1,"546":1}}],["instantiation",{"1":{"467":1}}],["instantly",{"1":{"338":1}}],["instant",{"1":{"98":1,"931":1}}],["instructions",{"1":{"151":1,"441":1,"546":1,"657":1},"2":{"345":1,"348":1,"349":1,"352":1,"354":1,"369":1,"370":1,"381":1}}],["instead",{"0":{"470":1},"1":{"89":1,"313":1,"415":1,"423":1}}],["insurance",{"0":{"13":1},"1":{"13":1}}],["insane",{"1":{"4":1}}],["in",{"0":{"6":1,"101":1,"104":2,"106":1,"108":1,"116":1,"153":1,"157":1,"163":1,"173":1,"185":1,"192":1,"193":1,"211":1,"214":1,"215":1,"218":1,"220":1,"221":1,"245":1,"251":1,"255":1,"282":1,"285":1,"363":1,"372":1,"379":1,"393":1,"398":1,"405":1,"407":1,"414":1,"418":1,"425":1,"431":1,"432":1,"433":1,"435":1,"436":1,"437":1,"439":1,"450":1,"454":1,"456":1,"459":1,"467":1,"478":1,"479":1,"488":1,"498":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"515":1,"521":1,"524":1,"529":1,"530":1,"532":1,"534":1,"536":1,"542":1,"551":1,"554":1,"556":1,"557":1,"558":1,"559":1,"606":1,"623":1,"632":1,"653":1,"655":1,"668":1,"673":1,"680":1,"681":1,"705":1,"730":1,"743":1,"750":1,"751":1,"752":1,"753":1,"763":1,"768":1,"776":1,"778":1,"779":1,"780":1,"784":1,"785":1,"795":1,"799":1,"823":1,"825":1,"852":1,"856":1,"871":1,"890":1,"892":1,"897":1,"900":1,"903":1,"915":1,"936":1,"958":1,"970":1,"1005":1},"1":{"1":1,"10":1,"26":1,"28":1,"29":1,"36":1,"37":1,"38":1,"40":1,"44":2,"45":1,"49":1,"53":1,"56":1,"57":1,"58":1,"64":1,"66":1,"67":1,"74":1,"79":1,"92":1,"95":1,"98":1,"99":1,"101":1,"102":1,"103":1,"104":2,"106":2,"107":1,"108":3,"109":1,"110":1,"113":1,"115":2,"116":1,"118":1,"121":1,"131":1,"135":1,"139":1,"144":1,"153":1,"154":1,"155":1,"157":1,"158":2,"161":1,"171":1,"173":1,"175":1,"176":1,"181":1,"182":1,"185":1,"190":1,"192":1,"193":1,"200":1,"202":1,"203":2,"204":1,"206":2,"207":2,"209":1,"211":2,"212":1,"214":2,"215":2,"216":1,"218":3,"219":1,"220":1,"221":2,"223":2,"224":1,"231":1,"233":1,"235":1,"244":1,"246":1,"249":3,"251":1,"255":1,"258":1,"259":1,"260":1,"264":3,"266":2,"268":1,"269":1,"271":2,"272":1,"273":1,"274":4,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"282":3,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"291":1,"293":1,"294":1,"311":2,"318":1,"320":1,"323":2,"331":1,"334":1,"336":1,"337":1,"338":1,"339":1,"341":1,"342":1,"343":1,"346":1,"347":1,"349":1,"356":1,"360":2,"363":1,"368":1,"384":1,"393":1,"397":1,"406":1,"407":1,"409":1,"410":1,"411":1,"412":1,"414":3,"415":1,"416":1,"418":1,"421":1,"422":2,"423":1,"425":1,"428":1,"431":1,"432":3,"433":2,"436":1,"437":2,"440":2,"442":3,"445":1,"446":1,"447":2,"449":1,"450":1,"453":1,"460":1,"462":1,"468":1,"469":1,"470":1,"472":1,"476":1,"479":3,"485":1,"488":2,"490":1,"493":1,"495":1,"496":1,"498":1,"501":1,"502":1,"504":1,"506":1,"507":1,"510":1,"511":1,"513":2,"514":1,"515":1,"518":2,"523":1,"524":2,"526":1,"528":2,"530":5,"531":1,"532":1,"535":1,"536":1,"541":1,"542":1,"544":1,"551":1,"552":1,"556":1,"558":1,"559":2,"560":1,"565":1,"566":1,"573":1,"575":1,"579":1,"584":1,"589":2,"591":1,"593":1,"595":1,"597":1,"598":1,"604":1,"605":1,"607":1,"618":1,"619":1,"620":1,"621":1,"623":1,"625":2,"630":1,"631":1,"634":1,"635":2,"636":2,"638":1,"639":2,"650":2,"651":1,"653":1,"664":1,"665":1,"673":1,"680":1,"683":1,"684":2,"685":1,"686":1,"690":1,"691":1,"694":1,"695":1,"696":1,"698":1,"701":1,"702":1,"703":2,"707":1,"710":1,"714":2,"715":1,"723":1,"724":1,"734":1,"735":1,"736":2,"739":1,"744":1,"745":1,"747":1,"750":1,"753":1,"756":1,"759":1,"766":1,"769":2,"770":1,"776":2,"777":1,"780":1,"781":1,"784":2,"785":1,"786":1,"787":1,"788":1,"789":1,"790":1,"791":1,"794":1,"795":1,"796":1,"800":1,"803":1,"804":1,"812":1,"820":1,"822":1,"823":1,"829":1,"834":1,"841":1,"847":1,"852":1,"854":1,"859":1,"863":1,"865":1,"867":1,"871":1,"874":1,"878":2,"879":1,"884":1,"888":2,"890":1,"891":1,"892":3,"900":1,"902":1,"903":1,"904":1,"906":1,"913":3,"914":3,"915":1,"922":1,"953":1,"962":1,"963":1,"964":1,"969":1,"970":1,"975":2,"976":1,"978":3,"987":1,"990":3,"998":2,"999":3,"1000":2,"1001":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":2,"1015":1,"1016":1,"1019":1,"1021":1,"1024":1,"1031":1,"1034":1,"1035":1,"1037":1,"1045":1},"2":{"510":1}}],["isolated",{"1":{"935":1}}],["isolate",{"1":{"786":1,"787":1}}],["isolation",{"1":{"238":1,"617":1,"707":1}}],["isfps",{"1":{"579":1}}],["isfjs",{"1":{"577":1}}],["ish",{"1":{"311":1}}],["issues",{"0":{"923":1},"1":{"413":1,"470":1,"530":2,"553":2,"585":1,"697":1,"711":1,"754":1,"888":1,"922":1,"923":1,"941":1,"995":1}}],["issue",{"1":{"300":1,"480":1,"773":1}}],["istio",{"0":{"660":1},"1":{"660":1}}],["istps",{"1":{"580":1}}],["istp",{"0":{"88":1},"1":{"88":1},"2":{"88":1}}],["istjs",{"1":{"577":1}}],["istj",{"0":{"68":1},"1":{"68":1},"2":{"68":1}}],["isn",{"1":{"49":1,"269":1,"278":1,"342":1}}],["is",{"0":{"62":1,"99":1,"202":1,"422":1,"491":1,"511":1,"529":1,"538":1,"560":1,"670":1,"706":1,"743":1,"809":1,"811":1,"830":1,"850":1,"858":1,"859":1,"863":1,"881":1},"1":{"1":1,"7":1,"14":1,"15":1,"16":1,"24":1,"28":1,"30":1,"31":1,"36":1,"44":1,"45":2,"63":1,"66":1,"67":1,"70":1,"71":1,"74":2,"75":1,"77":1,"78":1,"79":2,"80":1,"81":1,"82":1,"83":1,"86":1,"89":1,"91":1,"94":1,"96":1,"98":1,"109":1,"111":1,"122":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"136":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"151":1,"154":1,"155":1,"181":1,"189":1,"194":1,"198":1,"200":2,"201":1,"202":2,"207":2,"216":1,"217":1,"235":1,"249":2,"267":1,"280":1,"281":1,"284":1,"289":2,"291":1,"294":1,"295":1,"299":1,"309":1,"311":3,"318":1,"321":1,"325":1,"330":1,"332":1,"333":1,"337":2,"341":1,"354":1,"355":1,"358":1,"361":1,"362":2,"366":1,"368":1,"370":1,"374":2,"393":1,"405":2,"406":2,"411":1,"414":2,"421":2,"424":1,"427":1,"428":3,"431":2,"436":1,"437":1,"439":2,"447":1,"449":1,"455":1,"458":1,"461":1,"463":1,"465":1,"467":1,"468":1,"470":2,"473":1,"474":1,"477":3,"480":1,"485":2,"488":1,"489":1,"495":1,"497":1,"498":1,"499":1,"502":1,"510":2,"511":3,"514":1,"515":2,"517":1,"518":1,"525":1,"530":1,"540":2,"543":2,"544":1,"548":1,"587":1,"588":3,"595":1,"601":1,"605":2,"607":2,"612":1,"613":1,"623":1,"628":1,"629":1,"631":2,"635":5,"637":2,"638":1,"642":3,"647":1,"651":1,"654":1,"670":1,"680":1,"684":1,"686":1,"708":1,"709":1,"719":1,"735":2,"756":1,"794":1,"824":1,"834":2,"859":1,"867":1,"868":1,"881":1,"884":1,"889":2,"892":1,"894":1,"896":1,"898":1,"902":2,"903":1,"918":1,"925":1,"934":1,"943":1,"945":1,"946":1,"951":1,"953":1,"968":1,"971":1,"975":1,"977":1,"978":3,"982":1,"988":1,"990":2,"1001":1,"1017":1,"1018":1,"1028":1}}],["glice",{"1":{"525":1}}],["glitches",{"1":{"476":1}}],["glimpse",{"0":{"397":1}}],["glance",{"1":{"439":1}}],["globalization",{"1":{"1008":1}}],["global",{"1":{"782":1},"2":{"456":1}}],["globally",{"1":{"138":1,"928":1}}],["glossary",{"0":{"375":1}}],["guaranteed",{"1":{"979":1}}],["guarantees",{"1":{"538":1,"712":1}}],["guardians",{"1":{"801":1}}],["guard",{"1":{"694":1}}],["guardrails",{"0":{"405":1}}],["gutters",{"1":{"394":1}}],["guerrilla",{"1":{"378":1}}],["guessing",{"1":{"300":1}}],["gui",{"0":{"226":1},"1":{"226":1,"648":1}}],["guiding",{"1":{"845":1,"876":1}}],["guidline",{"2":{"317":1}}],["guidance",{"1":{"28":1,"200":1,"325":1,"429":1,"672":1,"762":1,"1042":1}}],["guided",{"1":{"105":1,"106":1,"114":1,"233":1}}],["guides",{"1":{"554":1,"815":1,"885":1,"899":1,"910":1,"912":1,"919":1,"920":1,"940":1,"956":1,"961":1},"2":{"474":1},"4":{"2":1,"3":1,"39":1,"40":1,"41":1,"42":1,"150":1,"151":1,"152":1,"153":1,"304":1,"305":1}}],["guide",{"0":{"663":1,"911":1,"1009":1},"1":{"3":1,"5":1,"39":1,"49":1,"61":1,"153":1,"189":1,"190":1,"192":1,"212":1,"213":1,"215":1,"239":1,"240":1,"284":1,"299":1,"300":1,"303":1,"304":1,"347":1,"348":1,"350":1,"353":1,"354":1,"361":1,"367":1,"369":1,"370":1,"395":1,"408":1,"426":1,"439":1,"443":1,"487":1,"520":1,"526":1,"546":1,"552":1,"582":1,"589":1,"592":1,"600":1,"602":1,"621":1,"626":1,"634":1,"669":1,"732":1,"874":1,"878":1,"914":1,"927":1,"935":1,"965":1,"987":1,"1009":1},"2":{"2":1,"39":1,"40":1,"41":1,"42":1,"150":1,"151":1,"152":1,"153":1,"304":1,"305":1},"4":{"926":1,"927":1,"928":1}}],["guidelines",{"0":{"25":1,"89":1,"190":1,"381":1,"426":1},"1":{"25":1,"31":1,"184":1,"309":1,"317":1,"958":1},"2":{"351":1,"355":1,"625":1}}],["guideline",{"0":{"317":1,"472":1},"1":{"345":1,"381":1,"638":1},"2":{"0":1,"4":1,"66":1,"89":1,"345":1,"348":1,"349":1,"352":1,"354":1,"369":1,"370":1,"381":1}}],["gas",{"1":{"939":1,"941":1}}],["gallery",{"0":{"661":1},"1":{"661":1}}],["gaming",{"0":{"627":1},"1":{"627":1,"963":1}}],["game",{"0":{"786":1},"1":{"300":1,"495":1}}],["gang",{"2":{"607":1,"609":1,"610":1,"612":1,"613":1,"614":1,"615":1,"913":1,"960":1}}],["gateway",{"0":{"763":1},"1":{"763":1}}],["gateways",{"1":{"660":1}}],["gates",{"1":{"580":1}}],["gathering",{"1":{"384":1,"954":1}}],["gap",{"1":{"285":1,"500":1,"892":1}}],["gaps",{"0":{"735":1},"1":{"273":1,"735":1,"762":1,"859":1}}],["gaining",{"1":{"217":1,"289":1}}],["gain",{"1":{"124":1,"578":1,"947":1}}],["gpt4all",{"1":{"408":1}}],["gpt",{"1":{"244":1,"273":1,"274":1,"433":1}}],["gin",{"1":{"716":1}}],["gitflow",{"0":{"672":1},"1":{"989":1}}],["git",{"0":{"671":1,"783":1,"918":1,"989":1},"1":{"657":1,"671":1,"672":1,"783":2,"918":2,"989":1,"1005":1},"2":{"671":1,"672":1,"989":1},"4":{"671":1,"672":1,"783":1,"989":1}}],["gitlab",{"0":{"657":1},"1":{"401":1,"553":1,"657":1}}],["github",{"0":{"237":1,"1005":1,"1010":1},"1":{"237":1,"401":1,"492":1,"745":1,"783":1,"1010":1}}],["giving",{"0":{"357":1},"1":{"842":1}}],["given",{"1":{"605":1}}],["give",{"0":{"838":1,"842":1},"1":{"344":1,"413":1,"635":1}}],["gives",{"1":{"207":1,"436":1,"635":1}}],["giangthan",{"3":{"7":1,"183":1}}],["gmail",{"0":{"193":1},"1":{"193":1,"304":1}}],["g",{"1":{"185":1}}],["george",{"0":{"840":1,"846":1},"1":{"838":1,"840":1}}],["geometryreader",{"1":{"619":1}}],["geometries",{"1":{"515":2}}],["genius",{"1":{"565":1}}],["genuine",{"1":{"842":1}}],["genui",{"1":{"422":1}}],["general",{"0":{"699":1}}],["generators",{"1":{"633":1}}],["generated",{"1":{"431":1,"447":1,"889":1}}],["generate",{"0":{"440":1,"821":1},"1":{"415":1,"628":1,"682":1,"848":1,"864":1,"905":1,"907":1}}],["generates",{"1":{"236":1,"284":1,"422":1}}],["generating",{"1":{"316":1,"440":1,"624":1,"953":1,"954":1}}],["generation",{"0":{"116":1,"860":1},"1":{"431":2,"442":1,"500":1,"506":1,"551":1,"890":1,"892":1},"2":{"500":1}}],["generative",{"0":{"108":1,"288":1,"422":1,"448":1,"1001":1,"1005":1},"1":{"108":1,"272":2,"288":1,"422":2,"448":1,"890":1,"974":1,"1001":1,"1005":1},"2":{"422":1}}],["generics",{"0":{"210":1,"224":1},"1":{"115":1,"210":1,"224":2},"2":{"210":1,"224":1}}],["generic",{"0":{"115":1,"224":1},"1":{"224":1}}],["gestalt",{"0":{"398":1},"1":{"398":1}}],["gemini",{"0":{"259":1},"1":{"449":1}}],["gear",{"1":{"150":1}}],["gets",{"0":{"262":1},"1":{"198":1,"262":1}}],["get",{"1":{"41":1,"204":1,"267":1,"288":1,"324":1,"338":1,"356":1,"731":1}}],["getting",{"0":{"35":1,"380":1},"1":{"39":1,"120":1,"150":1,"546":1}}],["greader",{"1":{"1006":1}}],["greater",{"1":{"420":1,"465":1}}],["great",{"1":{"7":1,"184":1,"338":1,"411":2,"631":1}}],["green",{"0":{"400":1,"404":1,"744":1},"1":{"400":1,"404":1,"744":1,"882":1}}],["grids",{"1":{"394":1}}],["grid",{"0":{"394":1},"1":{"493":1,"841":1,"999":1}}],["granular",{"1":{"965":1}}],["grand",{"0":{"444":1}}],["grasp",{"1":{"847":1}}],["grained",{"1":{"763":1}}],["gravity",{"1":{"618":1}}],["graphs",{"1":{"442":1}}],["graph",{"0":{"442":1}}],["graphrag",{"0":{"442":1},"1":{"442":1}}],["graphical",{"2":{"614":1,"958":1}}],["graphic",{"1":{"394":1,"1033":1}}],["graphics",{"1":{"393":1}}],["graphql",{"0":{"501":1,"763":1},"1":{"273":1,"497":1,"501":1,"763":1,"778":1,"984":1},"2":{"501":1}}],["grab",{"1":{"349":1}}],["grafana",{"1":{"252":1}}],["graduates",{"1":{"1032":1}}],["gradually",{"0":{"948":1},"1":{"623":1,"748":1}}],["gradient",{"0":{"623":1},"1":{"623":1,"963":1}}],["grade",{"1":{"246":1}}],["grad",{"0":{"137":1}}],["grooming",{"0":{"766":1},"1":{"766":1,"983":1}}],["ground",{"1":{"692":1}}],["groundbreaking",{"1":{"438":1}}],["grouping",{"1":{"476":1}}],["groups",{"1":{"52":1,"654":1,"690":1,"702":1,"752":1,"910":1}}],["group",{"0":{"52":1,"125":1},"1":{"119":1,"125":1,"152":1,"328":1,"331":1,"333":1},"4":{"125":1}}],["grok",{"0":{"262":1},"1":{"262":1}}],["groq",{"1":{"236":1}}],["growing",{"1":{"65":1,"139":1,"211":1,"273":1,"415":1,"524":1,"972":1}}],["grow",{"1":{"41":1,"110":1,"168":1,"177":1,"194":1,"302":1,"356":1,"445":1,"994":1,"1003":1,"1011":1,"1019":1,"1023":1,"1032":1}}],["growth",{"0":{"95":1,"100":1,"122":1,"1032":1,"1049":1},"1":{"24":1,"34":1,"93":1,"95":1,"100":1,"104":1,"111":1,"138":1,"144":1,"155":1,"270":2,"281":1,"296":1,"306":1,"309":1,"335":1,"362":1,"365":1,"445":1,"554":1,"578":1,"889":1,"996":1,"1001":1,"1020":1,"1021":1,"1028":1,"1034":1,"1040":1,"1048":1},"2":{"34":1,"59":1,"1023":1,"1032":1,"1038":1,"1049":1}}],["gomock",{"0":{"786":1},"1":{"786":1}}],["gomlx",{"0":{"542":1}}],["gobreaker",{"1":{"785":1}}],["governance",{"1":{"596":1}}],["gonb",{"1":{"232":1}}],["gophercon",{"0":{"232":1},"1":{"232":1}}],["gopher",{"0":{"231":1}}],["gold",{"0":{"847":1},"1":{"230":1,"847":1}}],["golang",{"0":{"104":1,"108":1,"128":1,"211":1,"215":1,"225":1,"245":1,"524":1,"526":1,"527":1,"615":1,"784":1,"788":1,"913":1,"1002":1,"1003":1,"1004":1,"1005":1,"1026":1},"1":{"104":1,"108":1,"215":1,"245":1,"356":1,"525":1,"527":1,"645":1,"788":1,"913":1,"917":1,"926":1,"984":1,"999":1,"1004":2,"1026":1},"2":{"128":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"615":1,"913":1,"914":1,"916":1,"917":1,"918":1,"1026":1},"4":{"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"784":1,"785":1,"786":1,"787":1,"788":1,"913":1,"914":1,"915":1,"916":1,"917":1,"918":1}}],["goroutines",{"1":{"212":1,"915":1}}],["google",{"0":{"174":1,"717":1,"718":1},"1":{"222":1,"717":1,"718":2,"727":1,"959":1,"981":1}}],["good",{"0":{"382":1,"689":1,"715":1,"815":2,"831":1,"832":1,"833":1},"1":{"63":1,"194":1,"342":1,"382":1,"392":1,"833":1,"849":1}}],["goers",{"1":{"170":1}}],["goes",{"0":{"262":1},"1":{"1":1,"262":1,"543":1}}],["go",{"0":{"113":1,"116":2,"135":1,"210":1,"212":1,"213":1,"214":1,"216":1,"217":1,"218":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":2,"226":1,"227":1,"228":1,"229":1,"230":1,"231":2,"232":1,"233":2,"337":1,"522":1,"529":1,"530":1,"532":3,"533":2,"534":2,"535":2,"536":3,"537":2,"538":2,"539":2,"540":2,"541":1,"542":2,"785":1,"915":1,"916":1,"917":1,"918":1,"926":1,"997":1,"998":1,"999":1,"1000":1,"1006":2,"1009":1},"1":{"113":3,"115":1,"116":1,"135":1,"163":1,"190":1,"210":1,"211":2,"212":5,"213":2,"214":2,"216":2,"217":1,"218":2,"220":2,"221":1,"223":4,"224":4,"225":1,"226":2,"227":2,"228":2,"229":3,"230":1,"231":1,"233":2,"341":1,"343":1,"403":1,"497":1,"522":1,"523":1,"524":2,"526":3,"527":2,"528":1,"529":1,"530":2,"532":2,"533":2,"534":1,"535":1,"536":2,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"653":1,"784":1,"785":1,"786":1,"787":1,"913":1,"914":2,"915":1,"917":1,"918":2,"969":1,"998":1,"999":1,"1000":1,"1002":2,"1003":2,"1005":1,"1006":1,"1009":1},"2":{"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1},"4":{"216":1,"217":1,"218":1,"219":1,"220":1,"529":1}}],["god",{"0":{"109":1,"327":1},"1":{"109":1,"327":1,"625":1}}],["going",{"0":{"614":1},"1":{"36":1,"436":1,"987":1}}],["goals",{"0":{"876":1},"1":{"23":1,"41":1,"287":1,"423":1,"426":1,"738":1,"805":1,"810":1,"837":1,"874":1,"877":1,"938":1,"1028":1}}],["goal",{"1":{"6":1,"111":1,"588":1,"834":1,"1001":1},"2":{"6":1,"23":1}}],["w",{"1":{"761":1}}],["wth",{"1":{"337":1}}],["wondered",{"1":{"337":1}}],["won",{"1":{"328":1}}],["would",{"0":{"855":1},"1":{"327":1,"337":1,"480":2,"511":1}}],["woodland",{"1":{"297":1}}],["word",{"1":{"843":1}}],["words",{"0":{"852":1},"1":{"716":1,"836":1,"852":1,"859":1,"865":1}}],["worry",{"1":{"631":1}}],["worldwide",{"1":{"778":1}}],["worldcoin",{"0":{"257":1},"1":{"257":1}}],["world",{"0":{"562":1},"1":{"203":1,"207":1,"291":1,"339":1,"411":1,"527":1,"530":1,"562":1,"590":1,"615":1,"634":1,"885":1,"887":1,"892":1,"946":1,"958":1,"972":1,"1036":1}}],["worth",{"0":{"62":1}}],["workloads",{"0":{"914":1},"1":{"771":1,"914":1}}],["workload",{"1":{"423":2,"639":1,"714":1}}],["workaround",{"0":{"412":1}}],["workplace",{"1":{"385":1}}],["worker",{"0":{"497":1,"914":1},"1":{"244":1,"497":2,"914":1},"2":{"497":1}}],["workers",{"0":{"179":1}}],["worked",{"1":{"159":1}}],["workflows",{"0":{"998":1},"1":{"232":1,"264":1,"270":1,"389":1,"415":1,"492":1,"502":1,"672":1,"783":1,"893":1,"998":1,"1002":1,"1004":1,"1010":1,"1015":1}}],["workflow",{"0":{"164":1,"198":1,"366":1,"369":1,"378":1,"1008":1},"1":{"135":1,"164":1,"198":1,"290":1,"349":1,"372":1,"526":1,"671":1,"933":1,"995":1,"1008":1},"2":{"50":1,"58":1,"187":1,"366":1}}],["work",{"0":{"36":1,"50":1,"56":1,"58":1,"157":1,"185":1,"311":1,"320":1,"328":1,"336":1,"341":1,"390":1,"552":1,"799":1,"851":1,"1022":1,"1039":1},"1":{"36":1,"44":1,"45":1,"47":1,"56":1,"57":1,"58":2,"63":1,"80":1,"89":1,"107":1,"109":1,"115":1,"124":1,"136":1,"139":1,"152":1,"158":1,"167":1,"204":1,"265":1,"270":1,"281":1,"292":1,"299":1,"303":1,"306":2,"310":1,"311":2,"312":1,"315":1,"318":1,"320":1,"323":1,"330":1,"334":1,"336":1,"341":1,"355":1,"372":1,"374":1,"423":1,"480":1,"502":1,"528":1,"550":1,"571":1,"573":1,"584":1,"587":1,"593":1,"597":1,"601":1,"604":1,"605":1,"755":1,"761":1,"767":1,"772":1,"851":1,"864":1,"932":1,"987":1,"999":1,"1004":1,"1006":1,"1012":1,"1017":1,"1022":1,"1025":1,"1031":1,"1038":1,"1039":1,"1045":1},"2":{"56":1,"311":1,"358":1,"365":1,"631":1,"638":1,"674":1,"675":1,"676":1,"677":1,"678":1,"1030":1,"1035":1,"1037":1,"1045":1}}],["workshops",{"1":{"867":1}}],["workshop",{"2":{"631":1}}],["workspace",{"1":{"199":1}}],["works",{"0":{"163":1,"188":1,"764":1,"768":1},"1":{"7":1,"49":1,"416":1,"432":1,"437":1,"548":1,"583":1,"591":1,"598":1,"791":1}}],["workings",{"1":{"212":1}}],["working",{"0":{"1":1,"188":1,"310":1,"410":1,"643":1,"999":1,"1006":1,"1030":1},"1":{"1":1,"36":1,"107":1,"122":2,"124":1,"126":2,"127":2,"128":2,"129":2,"130":2,"132":2,"133":2,"134":2,"137":2,"140":2,"141":3,"142":2,"143":2,"145":2,"146":2,"147":2,"148":2,"149":2,"152":1,"163":1,"165":1,"174":1,"178":1,"301":1,"314":1,"330":1,"412":1,"439":1,"489":1,"501":1,"634":1,"642":1,"980":1,"987":1,"1023":1,"1030":1,"1037":1},"2":{"153":1}}],["wrangle",{"1":{"930":1}}],["wrapper",{"1":{"225":1}}],["wrapping",{"1":{"96":1}}],["wraps",{"1":{"113":1}}],["wrap",{"0":{"101":1},"1":{"106":1}}],["wrote",{"1":{"323":1}}],["wrong",{"1":{"188":1,"331":1,"543":1,"820":1}}],["writers",{"1":{"866":1}}],["writes",{"0":{"636":1},"2":{"636":2}}],["write",{"0":{"857":1,"865":1,"955":1},"1":{"539":1,"633":1,"636":3,"671":1,"723":1,"786":1,"836":1,"955":1},"2":{"955":1}}],["writing",{"0":{"6":1,"381":1,"539":1,"833":1,"858":1,"859":1,"866":1,"990":1,"992":1},"1":{"115":1,"213":1,"345":2,"381":2,"464":1,"761":1,"788":1,"830":1,"833":1,"841":1,"852":1,"856":1,"857":2,"858":1,"859":1,"861":1,"864":1,"865":1,"908":1,"966":1,"991":1,"992":1,"993":1},"2":{"990":1},"4":{"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":1,"839":1,"840":1,"841":1,"842":1,"843":1,"844":1,"845":1,"846":1,"847":1,"990":1,"991":1,"992":1,"993":1,"994":1}}],["written",{"1":{"1":1,"44":1,"334":1,"513":1}}],["war",{"1":{"1000":1}}],["warehouse",{"2":{"971":1}}],["warehouses",{"1":{"715":1}}],["warm",{"1":{"757":1}}],["wars",{"0":{"260":1}}],["watch",{"0":{"621":1},"1":{"621":1}}],["water",{"1":{"40":1}}],["wai",{"0":{"463":1},"1":{"463":1},"2":{"463":1}}],["wait",{"1":{"342":1}}],["wave",{"0":{"256":1},"1":{"256":1}}],["waves",{"1":{"207":1}}],["wazero",{"0":{"225":1}}],["wall",{"0":{"258":1},"1":{"258":1}}],["wallets",{"1":{"587":1}}],["wallet",{"0":{"347":1,"587":1},"1":{"61":1,"347":2,"587":2},"2":{"587":1}}],["wala",{"2":{"118":1,"119":1,"120":1},"4":{"118":1,"119":1,"120":1}}],["walked",{"1":{"337":1}}],["walk",{"1":{"61":1,"284":1}}],["wants",{"1":{"66":2}}],["want",{"0":{"855":1},"1":{"30":1,"36":2,"45":1,"112":1,"207":1,"289":1,"311":1,"331":1,"342":1,"470":1,"631":1,"638":1,"868":1,"925":1,"934":1,"978":1}}],["wasting",{"1":{"820":1}}],["waste",{"1":{"331":1}}],["wasm",{"1":{"453":1,"480":2,"640":1,"781":1,"869":1},"2":{"469":1,"480":1}}],["was",{"1":{"15":1,"100":1,"171":1,"202":2,"209":1,"337":1,"368":1,"453":1,"480":1,"512":1,"888":1,"980":1}}],["ways",{"0":{"457":1},"1":{"188":1,"288":1,"342":1,"764":1,"794":1,"949":1,"1019":1}}],["way",{"0":{"185":1,"385":1},"1":{"7":1,"30":1,"176":1,"183":1,"249":1,"288":1,"406":1,"460":1,"623":1,"673":1,"913":1,"990":2,"1043":1}}],["white",{"0":{"477":1},"1":{"477":1}}],["which",{"0":{"743":1},"1":{"63":1,"67":1,"151":1,"202":1,"235":1,"279":1,"285":1,"293":1,"406":2,"420":1,"421":1,"424":1,"430":1,"442":1,"499":1,"518":1,"612":1,"642":1,"712":1,"894":1}}],["while",{"1":{"34":1,"58":1,"96":1,"119":1,"161":1,"163":1,"174":1,"207":1,"221":1,"237":1,"241":1,"246":1,"248":1,"285":2,"306":1,"337":1,"375":1,"412":1,"445":1,"468":1,"569":1,"573":1,"575":1,"576":1,"626":1,"634":1,"637":1,"668":1,"737":1,"747":1,"766":1,"802":1,"846":1,"852":1,"914":1,"938":1,"939":1,"960":1,"965":1,"999":1,"1030":1}}],["why",{"0":{"201":1,"203":1,"217":1,"219":1,"491":1,"511":1,"627":1,"778":1,"925":1,"934":1},"1":{"30":1,"188":1,"217":1,"275":2,"283":1,"309":1,"313":1,"328":1,"355":1,"393":1,"495":1,"561":1,"562":1,"627":1,"647":1,"660":1,"664":1,"719":1,"734":1,"736":1,"739":1,"741":1,"756":1,"761":1,"773":1,"794":1,"812":1,"823":1,"834":1,"854":1,"857":1,"863":1,"872":1,"925":1,"934":1,"942":1,"943":1,"948":1,"1032":1}}],["whether",{"1":{"207":1,"264":1,"351":1,"377":1,"635":1}}],["whereas",{"1":{"902":1}}],["where",{"0":{"311":1,"368":1,"855":1},"1":{"28":1,"34":1,"46":1,"49":1,"63":1,"98":1,"106":1,"109":1,"114":1,"154":1,"163":1,"177":1,"185":1,"234":1,"289":1,"295":1,"296":1,"302":1,"416":1,"434":1,"439":1,"465":1,"466":1,"510":1,"607":1,"630":1,"687":1,"867":1,"898":1,"978":1,"1001":1,"1027":1,"1028":1,"1035":1}}],["whenever",{"1":{"72":1,"343":1,"345":1,"381":1}}],["when",{"0":{"210":1,"220":1,"470":1,"734":1,"764":1},"1":{"2":1,"3":1,"22":1,"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"89":1,"171":1,"179":1,"182":2,"186":1,"191":1,"210":1,"311":1,"325":1,"331":1,"336":1,"338":1,"344":2,"374":1,"415":1,"419":1,"424":1,"439":1,"468":1,"477":1,"480":1,"489":1,"499":1,"501":1,"508":1,"512":1,"543":2,"607":1,"614":1,"635":2,"636":1,"724":1,"795":1,"834":1,"855":1,"894":1,"916":1,"958":1,"971":1,"977":1,"980":1,"987":1,"1044":1}}],["whose",{"1":{"299":1}}],["whole",{"1":{"267":1,"330":1,"465":1}}],["who",{"0":{"300":1,"529":1},"1":{"24":1,"30":1,"136":1,"183":1,"200":1,"300":2,"303":1,"579":1,"774":1,"867":1,"925":1,"934":1}}],["what",{"0":{"32":1,"114":1,"202":1,"299":1,"300":1,"395":1,"422":1,"670":1,"987":1},"1":{"15":1,"30":1,"34":1,"62":1,"97":1,"183":1,"184":1,"186":1,"204":1,"207":1,"269":1,"278":1,"283":1,"303":1,"320":1,"324":1,"330":1,"334":1,"336":1,"337":1,"344":1,"363":1,"382":1,"421":1,"436":1,"463":1,"540":2,"641":1,"664":1,"680":1,"683":1,"684":1,"686":1,"708":1,"735":1,"806":1,"867":1,"900":1,"902":1,"980":1,"986":1,"987":1}}],["wizard",{"1":{"1033":1}}],["wins",{"1":{"1018":1}}],["windows",{"1":{"489":1}}],["window",{"0":{"489":1,"720":1},"1":{"489":1,"720":1,"892":1,"894":2}}],["widgets",{"0":{"795":1},"1":{"795":1,"961":1,"962":1}}],["widget",{"1":{"489":1}}],["widely",{"1":{"219":1,"953":1,"975":1}}],["widespread",{"1":{"216":1}}],["wider",{"1":{"49":1,"1047":1}}],["wireframing",{"1":{"378":1}}],["wild",{"1":{"100":1}}],["willpower",{"1":{"849":1}}],["will",{"0":{"328":1},"1":{"11":1,"18":1,"40":1,"41":1,"44":1,"97":1,"104":1,"105":1,"106":1,"114":2,"121":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"136":1,"137":1,"138":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"190":1,"194":2,"201":1,"269":1,"278":1,"287":1,"316":2,"327":1,"341":1,"344":1,"347":1,"350":1,"361":1,"367":1,"369":1,"413":1,"427":1,"430":1,"432":1,"437":1,"442":1,"631":1,"879":1,"902":1,"976":1}}],["withdraw",{"0":{"347":1,"353":1},"1":{"347":1}}],["without",{"0":{"542":1,"888":1},"1":{"203":1,"223":1,"249":1,"371":1,"421":1,"434":1,"542":1,"569":1,"605":1,"630":1,"637":1,"640":1,"651":1,"692":1,"704":1,"723":1,"734":1,"740":1,"746":1,"749":1,"752":1,"781":1,"813":1,"831":1,"833":1,"887":1,"925":1,"926":1,"930":1,"934":1,"935":1,"1030":1}}],["within",{"0":{"844":1},"1":{"27":1,"104":1,"165":1,"200":1,"248":1,"304":1,"307":1,"316":1,"329":1,"333":1,"405":1,"412":1,"428":1,"444":1,"455":1,"662":1,"731":1,"872":1,"996":1}}],["with",{"0":{"47":1,"174":1,"179":1,"203":1,"221":1,"237":1,"284":1,"320":1,"346":1,"380":1,"408":1,"410":1,"412":2,"416":1,"441":1,"448":1,"449":1,"461":1,"462":1,"464":1,"476":1,"481":1,"487":1,"501":1,"526":1,"545":1,"582":1,"592":1,"609":1,"615":1,"620":1,"623":1,"627":1,"638":1,"639":1,"645":1,"661":1,"666":1,"705":1,"716":1,"735":1,"742":1,"745":1,"749":1,"786":1,"815":1,"836":1,"853":1,"856":1,"866":1,"871":1,"887":1,"913":1,"915":1,"926":1,"930":1,"957":1,"972":1,"980":1,"995":1,"998":1,"1007":1,"1009":1},"1":{"15":1,"28":1,"29":1,"35":1,"41":1,"44":1,"47":1,"58":1,"59":1,"81":1,"86":1,"100":1,"103":1,"106":1,"113":1,"116":2,"117":1,"122":2,"125":1,"126":2,"127":2,"128":2,"129":2,"130":2,"132":2,"133":2,"134":2,"135":3,"137":2,"139":1,"140":2,"141":2,"142":2,"143":2,"145":2,"146":2,"147":2,"148":2,"149":2,"151":1,"155":1,"156":1,"159":1,"163":1,"166":1,"168":1,"172":1,"174":1,"176":1,"178":2,"179":1,"180":1,"181":2,"182":1,"185":1,"188":1,"192":1,"200":1,"203":1,"207":2,"213":2,"224":2,"225":1,"227":1,"230":1,"241":1,"264":1,"265":1,"269":1,"275":1,"278":1,"280":1,"284":2,"285":1,"286":1,"291":1,"292":1,"297":1,"301":1,"302":1,"305":1,"306":2,"314":1,"318":1,"320":1,"324":1,"326":1,"328":1,"331":1,"335":1,"340":1,"343":1,"344":1,"346":2,"349":2,"356":2,"360":1,"365":1,"368":1,"372":1,"373":1,"375":1,"378":1,"380":1,"384":1,"389":1,"395":1,"399":1,"400":1,"401":1,"402":1,"403":1,"407":1,"410":1,"411":1,"416":2,"421":1,"424":1,"426":1,"429":1,"437":1,"438":2,"439":3,"440":1,"445":1,"447":1,"453":2,"456":1,"457":3,"461":1,"463":2,"464":2,"470":3,"472":1,"478":1,"480":2,"481":1,"483":1,"487":1,"489":2,"493":1,"495":1,"497":1,"499":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"509":1,"515":1,"520":1,"546":1,"552":1,"553":1,"557":1,"567":1,"568":1,"570":1,"572":1,"580":1,"585":1,"588":1,"590":1,"592":1,"595":1,"596":1,"599":1,"603":1,"609":1,"610":1,"613":1,"616":2,"617":1,"619":2,"620":1,"621":1,"622":1,"625":1,"627":1,"633":1,"634":1,"638":2,"639":1,"645":1,"647":1,"650":1,"652":1,"657":1,"660":1,"661":1,"663":1,"664":1,"669":1,"670":1,"671":1,"683":1,"684":1,"689":1,"690":1,"691":1,"693":1,"697":1,"700":1,"702":1,"707":1,"711":1,"713":1,"715":1,"716":1,"717":1,"720":1,"721":1,"726":1,"730":1,"735":1,"749":1,"751":1,"754":1,"757":1,"758":1,"763":1,"765":1,"767":1,"768":1,"777":1,"781":1,"788":2,"792":1,"793":2,"796":1,"798":1,"805":1,"813":1,"815":1,"822":1,"824":1,"828":1,"832":1,"835":1,"842":1,"843":1,"845":1,"850":1,"855":1,"856":1,"857":1,"871":1,"872":1,"875":1,"876":1,"878":1,"882":1,"887":1,"889":1,"891":1,"894":2,"904":1,"912":1,"915":1,"916":1,"924":1,"927":1,"928":1,"929":1,"936":1,"941":1,"958":1,"959":1,"961":1,"972":1,"978":1,"979":1,"980":1,"987":1,"994":1,"995":2,"997":1,"998":3,"999":1,"1001":1,"1002":1,"1007":2,"1008":1,"1009":1,"1012":1,"1015":1,"1016":1,"1018":2,"1025":1,"1032":1,"1047":1,"1048":1}}],["weaknesses",{"1":{"952":1}}],["weak",{"0":{"536":1},"1":{"536":1,"948":1}}],["wealth",{"0":{"172":1},"1":{"172":1}}],["were",{"1":{"337":1,"980":1}}],["welcoming",{"1":{"1047":1}}],["welcomes",{"1":{"297":1}}],["welcome",{"0":{"77":1,"78":1},"1":{"80":1,"311":1}}],["well",{"0":{"646":1},"1":{"135":1,"190":1,"218":1,"220":1,"269":1,"278":1,"423":1,"591":1,"646":1,"665":1,"818":1,"866":1,"867":1,"872":1,"1024":1}}],["webdriver",{"1":{"750":1}}],["webgl",{"1":{"661":1}}],["webglrenderer",{"1":{"515":1}}],["webrtc",{"0":{"527":1},"1":{"527":2},"2":{"527":1}}],["webworkers",{"1":{"480":1}}],["webviz",{"1":{"480":1}}],["webpack",{"1":{"476":1}}],["webflow",{"0":{"380":1},"1":{"380":1}}],["websocket",{"1":{"227":1,"241":1,"518":1,"752":1,"776":1},"2":{"518":1}}],["websockets",{"0":{"227":1,"518":1},"1":{"518":1}}],["website",{"0":{"208":1,"640":1},"1":{"208":1,"354":1,"370":1,"471":1,"640":1,"753":1,"881":1,"898":1,"959":1}}],["websites",{"1":{"176":1,"204":1,"380":1,"387":1,"391":1,"397":1,"463":1,"514":1,"987":5}}],["webassembly",{"0":{"453":1,"469":1},"1":{"225":1,"453":1,"469":1,"869":1},"2":{"453":1}}],["web",{"0":{"132":1,"497":1,"898":1},"1":{"135":1,"136":1,"158":1,"163":1,"164":1,"201":1,"206":2,"207":1,"213":2,"271":1,"380":1,"387":1,"394":1,"403":1,"450":1,"455":1,"458":1,"469":1,"475":1,"480":1,"483":1,"489":1,"490":1,"498":1,"511":1,"515":1,"651":1,"781":1,"894":1,"895":1,"899":1,"901":1,"985":1},"2":{"202":1,"203":1,"450":1,"455":1,"462":1,"468":1,"472":1,"475":1,"480":1,"483":1,"497":1,"502":1,"659":1}}],["web3",{"0":{"582":1,"825":1},"1":{"29":1,"307":1,"400":1,"582":1,"825":1},"2":{"582":1,"599":1,"602":1,"942":1}}],["week",{"1":{"58":1,"106":1,"109":1,"113":1,"250":1,"260":1,"352":1,"1015":1,"1016":1}}],["weekly",{"0":{"104":1,"105":1,"108":1,"113":1,"116":1,"233":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"540":1,"625":1,"674":1,"675":1,"676":1,"677":1,"678":1,"997":1,"998":1,"999":1,"1000":1,"1002":1,"1003":1,"1004":1,"1006":2,"1009":1},"1":{"46":1,"105":1,"108":1,"109":1,"110":1,"111":1,"113":1,"114":1,"116":1,"190":2,"305":1,"674":1,"675":1,"676":1,"677":1,"678":1,"996":1,"999":1,"1001":1,"1003":1,"1005":1,"1009":1,"1011":1},"2":{"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1},"4":{"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1}}],["we",{"0":{"30":1,"32":1,"45":1,"58":1,"185":1,"187":1,"203":1,"299":1,"311":1,"366":1,"401":1,"470":1,"563":1,"624":1,"625":1,"647":1,"925":1,"934":1,"996":1},"1":{"1":1,"4":1,"15":1,"23":1,"30":4,"31":2,"32":1,"34":1,"38":1,"40":1,"43":1,"44":1,"45":2,"48":1,"50":1,"52":1,"53":1,"57":2,"58":1,"59":1,"61":1,"62":1,"63":2,"64":1,"65":1,"72":1,"89":1,"90":1,"91":2,"93":1,"94":1,"95":2,"96":3,"97":1,"100":1,"102":1,"103":2,"106":2,"107":2,"110":2,"112":2,"113":1,"114":1,"116":2,"118":1,"119":1,"131":1,"136":1,"138":1,"139":1,"151":1,"152":2,"154":2,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":2,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":2,"179":1,"180":1,"181":2,"182":1,"184":1,"185":1,"186":1,"187":1,"190":1,"194":1,"197":1,"203":2,"234":1,"246":1,"248":1,"253":1,"254":1,"264":2,"265":4,"266":2,"269":3,"270":2,"271":1,"273":1,"274":2,"276":1,"277":1,"278":3,"279":2,"280":1,"281":3,"282":2,"283":2,"284":1,"286":1,"288":2,"289":1,"291":3,"292":4,"293":2,"295":2,"296":2,"299":1,"302":1,"303":3,"305":2,"306":1,"308":1,"310":1,"311":1,"313":1,"314":2,"322":1,"328":1,"330":1,"331":1,"334":1,"336":1,"340":1,"342":3,"343":2,"345":2,"346":2,"351":2,"352":1,"355":2,"358":1,"381":2,"411":1,"413":1,"420":1,"423":1,"427":1,"430":1,"432":1,"437":1,"439":2,"442":1,"470":3,"530":1,"561":1,"562":1,"563":1,"625":1,"638":1,"640":1,"674":1,"675":1,"676":1,"677":1,"678":1,"822":1,"867":1,"878":1,"879":1,"894":1,"913":1,"936":1,"942":1,"948":1,"958":1,"978":3,"980":4,"987":4,"996":2,"997":1,"1001":1,"1002":1,"1003":1,"1006":3,"1010":1,"1011":2}}],[">",{"0":{"916":1},"4":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":1,"24":1,"25":1,"26":1,"27":1,"28":2,"29":2,"39":1,"40":1,"41":1,"42":1,"46":1,"47":1,"48":1,"49":1,"52":1,"53":1,"54":1,"55":1,"56":1,"61":1,"62":1,"66":1,"67":1,"68":1,"69":2,"70":2,"71":2,"72":2,"73":2,"74":2,"75":2,"76":2,"77":2,"78":2,"79":2,"80":2,"81":2,"82":2,"83":2,"84":2,"85":2,"86":2,"87":2,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":2,"124":1,"125":2,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"183":1,"184":1,"185":1,"186":2,"187":1,"188":1,"189":1,"190":1,"191":2,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"199":1,"201":2,"202":2,"203":2,"204":3,"205":3,"206":3,"207":3,"208":2,"209":2,"210":2,"211":2,"212":2,"213":2,"214":2,"215":2,"216":3,"217":3,"218":3,"219":3,"220":3,"221":3,"222":3,"223":3,"224":3,"225":3,"226":3,"227":3,"228":3,"229":3,"230":3,"231":3,"232":3,"233":3,"234":3,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":2,"256":2,"257":2,"258":2,"259":2,"260":2,"261":2,"262":2,"263":2,"264":1,"265":1,"266":1,"267":1,"268":1,"269":2,"270":2,"271":2,"272":2,"273":2,"274":2,"275":2,"276":2,"277":2,"278":2,"279":1,"280":1,"281":1,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"298":1,"304":1,"305":1,"307":1,"308":1,"309":1,"319":1,"345":2,"346":2,"347":2,"348":2,"349":2,"350":2,"351":2,"352":2,"353":2,"354":2,"355":2,"356":2,"357":2,"358":2,"359":2,"360":2,"361":2,"362":2,"363":2,"364":2,"365":2,"366":2,"367":2,"368":2,"369":2,"370":2,"371":2,"372":2,"373":2,"374":2,"375":2,"376":2,"377":2,"378":2,"379":2,"380":2,"381":2,"382":2,"383":2,"384":2,"385":2,"386":2,"387":2,"388":2,"389":2,"390":2,"391":2,"392":2,"393":2,"394":2,"395":2,"396":2,"397":2,"398":2,"399":2,"400":2,"401":2,"402":2,"403":2,"404":2,"405":2,"406":2,"407":2,"408":2,"409":2,"410":2,"411":2,"412":2,"413":2,"414":2,"415":2,"416":2,"417":2,"418":2,"419":2,"420":2,"421":2,"422":2,"423":2,"424":2,"425":2,"426":2,"427":2,"428":2,"429":2,"430":2,"431":2,"432":2,"433":2,"434":2,"435":2,"436":2,"437":2,"438":2,"439":2,"440":2,"441":2,"442":2,"443":2,"444":2,"445":2,"446":2,"447":2,"448":2,"449":2,"450":2,"451":2,"452":2,"453":2,"454":2,"455":2,"456":2,"457":2,"458":2,"459":2,"460":2,"461":2,"462":2,"463":2,"464":2,"465":2,"466":2,"467":2,"468":2,"469":2,"470":2,"471":2,"472":2,"473":2,"474":2,"475":2,"476":2,"477":2,"478":2,"479":2,"480":2,"481":2,"482":2,"483":2,"484":2,"485":2,"486":2,"487":2,"488":2,"489":2,"490":2,"491":2,"492":3,"493":3,"494":3,"495":3,"496":3,"497":2,"498":2,"499":2,"500":2,"501":2,"502":2,"503":3,"504":3,"505":3,"506":3,"507":3,"508":3,"509":3,"510":2,"511":2,"512":2,"513":2,"514":2,"515":3,"516":2,"517":2,"518":2,"519":2,"520":2,"521":2,"522":2,"523":2,"524":2,"525":2,"526":2,"527":2,"528":2,"529":3,"530":2,"531":2,"532":3,"533":3,"534":3,"535":3,"536":3,"537":3,"538":3,"539":3,"540":3,"541":3,"542":3,"543":2,"544":2,"545":2,"546":2,"547":2,"548":2,"549":2,"550":2,"551":2,"552":2,"553":2,"554":2,"555":2,"556":3,"557":3,"558":3,"559":3,"560":3,"561":3,"562":3,"563":3,"564":3,"565":3,"566":3,"567":3,"568":3,"569":3,"570":3,"571":3,"572":3,"573":3,"574":3,"575":3,"576":3,"577":3,"578":3,"579":3,"580":3,"581":3,"582":2,"583":2,"584":2,"585":2,"586":2,"587":2,"588":2,"589":2,"590":2,"591":2,"592":2,"593":2,"594":2,"595":2,"596":2,"597":2,"598":2,"599":2,"600":2,"601":2,"602":2,"603":2,"604":2,"605":2,"606":2,"607":2,"608":2,"609":2,"610":2,"611":2,"612":2,"613":2,"614":2,"615":2,"616":2,"617":2,"618":2,"619":2,"620":2,"621":2,"622":2,"623":2,"624":2,"625":2,"626":2,"627":2,"628":2,"629":2,"630":2,"631":2,"632":2,"633":2,"634":2,"635":2,"636":2,"637":2,"638":2,"639":2,"640":2,"641":2,"642":2,"643":2,"644":2,"645":2,"646":2,"647":2,"648":2,"649":2,"650":2,"651":2,"652":2,"653":2,"654":2,"655":2,"656":2,"657":2,"658":2,"659":2,"660":2,"661":2,"662":2,"663":2,"664":2,"665":2,"666":2,"667":2,"668":2,"669":2,"670":2,"671":2,"672":2,"673":2,"674":1,"675":1,"676":1,"677":1,"678":1,"679":2,"680":2,"681":2,"682":2,"683":2,"684":2,"685":2,"686":2,"687":2,"688":2,"689":2,"690":2,"691":2,"692":2,"693":2,"694":2,"695":2,"696":2,"697":2,"698":2,"699":2,"700":2,"701":2,"702":2,"703":2,"704":2,"705":2,"706":2,"707":2,"708":2,"709":2,"710":2,"711":2,"712":2,"713":2,"714":2,"715":2,"716":2,"717":2,"718":2,"719":2,"720":2,"721":2,"722":2,"723":2,"724":2,"725":2,"726":2,"727":2,"728":2,"729":2,"730":2,"731":2,"732":2,"733":2,"734":2,"735":2,"736":2,"737":2,"738":2,"739":2,"740":2,"741":2,"742":2,"743":2,"744":2,"745":2,"746":2,"747":2,"748":2,"749":2,"750":2,"751":2,"752":2,"753":2,"754":2,"755":2,"756":2,"757":2,"758":2,"759":2,"760":2,"761":2,"762":2,"763":2,"764":2,"765":2,"766":2,"767":2,"768":2,"769":2,"770":2,"771":2,"772":2,"773":2,"774":2,"775":2,"776":2,"777":2,"778":2,"779":2,"780":2,"781":2,"782":3,"783":2,"784":2,"785":2,"786":2,"787":2,"788":2,"789":2,"790":2,"791":2,"792":2,"793":2,"794":2,"795":2,"796":2,"797":2,"798":2,"799":2,"800":3,"801":3,"802":2,"803":2,"804":3,"805":3,"806":3,"807":3,"808":3,"809":3,"810":3,"811":3,"812":2,"813":2,"814":2,"815":2,"816":2,"817":2,"818":2,"819":2,"820":2,"821":2,"822":2,"823":2,"824":2,"825":2,"826":2,"827":2,"828":2,"829":2,"830":3,"831":3,"832":3,"833":3,"834":3,"835":3,"836":3,"837":2,"838":2,"839":2,"840":2,"841":2,"842":2,"843":2,"844":2,"845":2,"846":2,"847":2,"848":3,"849":3,"850":3,"851":3,"852":3,"853":3,"854":3,"855":3,"856":3,"857":3,"858":3,"859":3,"860":2,"861":2,"862":2,"863":2,"864":2,"865":2,"866":2,"868":2,"870":2,"871":2,"872":2,"873":2,"874":2,"875":2,"876":2,"877":2,"878":2,"879":2,"880":2,"881":2,"882":2,"883":2,"884":2,"885":2,"886":2,"887":2,"888":2,"889":2,"890":2,"891":2,"892":2,"893":2,"894":2,"895":2,"896":2,"897":2,"898":2,"899":2,"900":2,"901":2,"902":2,"903":2,"904":2,"905":2,"906":3,"907":3,"908":3,"909":2,"910":2,"911":2,"912":2,"913":2,"914":2,"915":2,"916":2,"917":2,"918":2,"919":2,"920":2,"921":3,"922":3,"923":3,"924":3,"925":3,"926":3,"927":3,"928":3,"929":3,"930":3,"931":3,"932":3,"933":3,"934":3,"935":2,"936":3,"937":3,"938":2,"939":2,"940":2,"941":2,"942":2,"943":2,"944":2,"945":2,"946":3,"947":3,"948":3,"949":2,"950":3,"951":3,"952":3,"953":3,"954":3,"955":2,"956":2,"957":2,"958":2,"959":2,"960":2,"961":2,"962":2,"963":2,"964":2,"965":2,"966":2,"967":2,"968":2,"969":2,"970":2,"971":2,"972":2,"973":2,"974":2,"975":2,"976":2,"977":2,"978":2,"979":2,"980":2,"981":2,"982":2,"983":2,"984":2,"985":2,"986":2,"987":2,"988":2,"989":2,"990":2,"991":2,"992":2,"993":3,"994":2,"995":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1,"1013":2,"1014":2,"1015":2,"1016":2,"1017":2,"1018":2,"1019":1,"1020":1,"1021":1,"1022":1,"1023":1,"1024":1,"1025":1,"1026":1,"1027":1,"1028":1,"1029":1,"1030":1,"1031":1,"1032":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1038":1,"1039":1,"1040":1,"1041":1,"1042":1,"1043":1,"1044":1,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":1}}],["ubiquitous",{"2":{"988":1}}],["ubiquity",{"0":{"258":1}}],["urging",{"1":{"818":1}}],["urls",{"1":{"460":1,"987":2}}],["url",{"0":{"460":1,"987":1},"2":{"987":2}}],["uml",{"0":{"695":1,"958":1},"1":{"695":1,"958":1}}],["ultimately",{"1":{"431":1}}],["ultra",{"1":{"403":1}}],["utilize",{"1":{"892":1}}],["utilized",{"1":{"151":1}}],["utilizing",{"0":{"731":1}}],["utility",{"1":{"214":1}}],["uk",{"0":{"162":1},"1":{"232":1}}],["usd",{"1":{"658":1}}],["usdc",{"1":{"62":1}}],["usability",{"0":{"656":1},"1":{"376":1,"378":1,"382":1,"398":1,"450":1,"656":1,"770":1,"828":1}}],["usage",{"0":{"113":1},"1":{"113":1,"477":1,"525":1,"532":1}}],["usher",{"1":{"266":1}}],["using",{"0":{"208":1,"225":1,"418":1,"516":1,"529":1,"533":1,"564":1,"586":1,"603":1,"617":1,"619":1,"621":1,"624":1,"793":1,"918":1},"1":{"61":1,"63":1,"107":1,"113":1,"116":1,"176":1,"192":1,"208":1,"223":1,"224":1,"233":1,"236":1,"244":1,"248":1,"251":1,"252":1,"284":1,"322":1,"350":1,"372":1,"390":1,"394":1,"396":1,"403":1,"406":1,"408":1,"410":1,"412":1,"418":1,"422":1,"429":1,"441":1,"459":1,"464":1,"478":1,"480":1,"513":1,"522":1,"526":1,"527":1,"528":1,"541":1,"546":1,"570":1,"576":1,"578":1,"582":1,"603":1,"616":1,"618":1,"621":1,"625":1,"628":1,"629":1,"640":1,"642":1,"643":1,"645":1,"648":1,"652":1,"653":1,"655":1,"657":1,"658":1,"671":1,"673":1,"683":1,"691":1,"694":1,"696":1,"698":1,"713":1,"714":1,"716":1,"722":1,"725":1,"726":1,"729":1,"731":1,"744":1,"745":1,"747":1,"748":1,"750":1,"751":1,"764":1,"769":1,"775":1,"776":1,"779":1,"783":1,"784":1,"785":1,"788":1,"797":1,"798":1,"803":1,"807":1,"832":1,"835":1,"837":1,"840":1,"852":1,"883":1,"893":1,"908":1,"916":1,"947":1,"957":1,"958":1,"973":1,"991":1,"995":1,"999":1,"1006":1,"1017":1}}],["usually",{"1":{"66":1,"305":1}}],["usual",{"1":{"47":1}}],["us",{"0":{"106":1,"164":1,"812":1},"1":{"30":1,"31":1,"34":1,"36":1,"48":1,"58":1,"63":1,"100":1,"104":1,"105":1,"106":2,"112":1,"114":1,"139":1,"163":1,"182":1,"183":1,"269":1,"278":1,"301":1,"308":1,"356":1,"439":1,"474":1,"501":1,"515":1,"638":1,"878":1,"969":1,"987":3,"997":1,"1007":1},"2":{"159":1,"164":1,"166":1,"179":1}}],["usenumber",{"1":{"916":1}}],["useeffect",{"0":{"479":1}}],["used",{"0":{"827":1},"1":{"267":1,"283":1,"428":1,"490":1,"510":1,"591":1,"631":1,"635":1,"789":1,"889":1,"953":1,"975":1,"980":1}}],["usestate",{"0":{"470":1},"1":{"655":1}}],["uses",{"1":{"169":1,"237":1,"375":1,"428":1,"477":1,"480":1,"545":1,"594":1,"642":1,"651":1,"681":1,"753":1,"822":1,"861":1,"878":1,"884":1,"905":1,"930":1,"946":1}}],["usereducer",{"0":{"470":1}}],["usernames",{"1":{"729":1}}],["username",{"1":{"189":1}}],["users",{"0":{"178":1,"738":1,"816":1,"827":1},"1":{"53":1,"158":1,"160":1,"168":1,"240":1,"249":1,"286":1,"288":1,"344":1,"392":2,"406":2,"421":1,"424":1,"570":1,"572":1,"589":1,"738":1,"740":1,"765":1,"825":1,"829":1,"884":1,"894":1,"945":1,"959":1,"1017":1}}],["user",{"0":{"287":1,"424":1,"813":2,"826":1},"1":{"31":1,"52":1,"156":1,"172":1,"178":2,"282":1,"284":1,"285":3,"286":2,"287":1,"376":1,"377":1,"378":2,"379":1,"382":1,"388":2,"391":3,"393":1,"395":1,"396":1,"397":2,"398":1,"406":1,"420":2,"421":1,"422":2,"424":3,"426":1,"458":1,"473":1,"477":1,"514":1,"585":1,"618":1,"620":1,"637":1,"641":1,"656":1,"729":2,"733":1,"734":2,"736":2,"737":1,"738":1,"740":1,"741":2,"742":3,"743":3,"748":1,"757":1,"765":1,"766":1,"769":1,"798":1,"808":2,"817":1,"818":1,"819":3,"820":1,"824":1,"826":1,"827":2,"829":1,"874":3,"875":1,"876":2,"879":1,"880":1,"881":1,"894":1,"902":1,"913":1,"938":2,"943":1,"949":1,"959":1,"960":1,"965":1,"982":1,"1000":1,"1004":1}}],["use",{"0":{"151":1,"169":1,"213":1,"218":1,"220":1,"435":1,"446":1,"470":1,"563":1,"609":1,"610":1,"612":1,"614":1,"743":1,"836":1,"944":1,"960":1,"1005":1,"1017":1,"1018":1},"1":{"4":1,"6":1,"23":1,"48":1,"72":1,"89":1,"131":1,"151":1,"169":1,"184":1,"213":1,"283":1,"286":1,"288":1,"307":1,"308":1,"346":1,"367":1,"392":1,"413":1,"415":1,"420":1,"446":1,"470":1,"471":1,"475":1,"480":1,"491":1,"508":1,"516":1,"527":1,"528":1,"530":1,"535":1,"540":1,"553":1,"561":1,"563":1,"573":1,"615":1,"632":1,"647":1,"650":1,"679":1,"690":1,"699":1,"717":1,"718":1,"720":1,"724":1,"727":1,"752":1,"754":1,"771":1,"777":1,"780":1,"786":1,"787":1,"795":1,"796":1,"800":1,"817":1,"824":1,"877":1,"891":1,"897":1,"913":1,"915":1,"916":1,"918":1,"944":1,"967":1,"987":1,"999":1,"1005":1,"1007":1},"2":{"479":1,"1017":1,"1018":1},"4":{"1017":1,"1018":1}}],["usefulness",{"1":{"827":1}}],["useful",{"0":{"904":1},"1":{"1":1,"392":1,"431":1,"607":1,"904":1}}],["upcoming",{"1":{"495":1,"869":1,"997":1,"999":1}}],["upwards",{"1":{"270":1}}],["upptime",{"0":{"237":1},"1":{"237":1},"2":{"237":1}}],["uptime",{"0":{"237":1},"1":{"237":1}}],["updating",{"1":{"209":1,"518":1,"803":1}}],["updated",{"1":{"265":1,"292":1,"479":1,"521":1,"630":1,"765":1,"1015":1,"1016":1}}],["update",{"0":{"776":1,"869":1},"1":{"90":1,"93":1,"95":1,"206":1,"330":1,"496":1,"776":1,"1015":1}}],["updates",{"0":{"78":1,"91":1,"113":1,"116":1,"1004":1,"1008":1},"1":{"78":1,"91":1,"100":1,"104":1,"108":1,"109":1,"112":1,"113":1,"114":1,"116":2,"117":1,"204":1,"207":1,"224":1,"241":1,"360":1,"400":1,"404":1,"428":2,"492":1,"495":1,"621":1,"872":1,"994":1,"999":1,"1002":1,"1006":1,"1008":1,"1010":1},"2":{"91":1,"92":1,"93":1,"94":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"869":1},"4":{"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"674":1,"675":1,"676":1,"677":1,"678":1,"995":1,"996":1,"997":1,"998":1,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1004":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1,"1013":1,"1014":1,"1015":1,"1016":1,"1017":1,"1018":1}}],["uplift",{"1":{"182":1}}],["upgradeability",{"1":{"700":1}}],["upgrade",{"1":{"178":1,"290":1}}],["upgrading",{"0":{"168":1}}],["upon",{"1":{"95":1}}],["up",{"0":{"15":1,"70":1,"347":1,"366":1,"370":1,"406":1,"532":1,"638":1,"786":1,"793":1,"857":1},"1":{"96":1,"106":1,"112":1,"113":1,"155":1,"213":1,"304":1,"343":1,"347":1,"356":1,"389":1,"406":1,"480":2,"481":1,"502":1,"512":1,"532":1,"595":1,"649":1,"718":1,"731":1,"749":1,"751":1,"857":1,"966":1,"1006":1,"1017":1,"1018":1}}],["unfolds",{"1":{"948":1}}],["unsatisfied",{"0":{"873":1},"1":{"873":1}}],["unstable",{"0":{"557":1},"1":{"557":1}}],["unstructured",{"1":{"433":1}}],["unlock",{"1":{"821":1,"944":1}}],["unlike",{"1":{"421":1,"654":1,"918":1}}],["unreliable",{"1":{"810":1}}],["unchanging",{"0":{"904":1}}],["uncertain",{"1":{"812":1,"854":1}}],["uncertainties",{"1":{"703":1,"704":1}}],["uncertainty",{"0":{"703":1},"1":{"823":1,"848":1}}],["uncovers",{"1":{"857":1}}],["uncover",{"1":{"732":1,"808":1,"817":1}}],["untrusted",{"1":{"698":1}}],["until",{"1":{"280":1,"291":1}}],["unused",{"0":{"516":1},"1":{"516":1}}],["unexpected",{"0":{"915":1},"1":{"860":1,"1019":1}}],["unexpectedly",{"1":{"476":1}}],["unemployment",{"0":{"13":1},"1":{"13":1}}],["unpredictable",{"1":{"405":1}}],["unpacking",{"0":{"286":1}}],["unnecessary",{"1":{"338":1,"734":1,"741":1,"836":1}}],["undoable",{"1":{"613":1}}],["undone",{"1":{"338":1}}],["underestimate",{"1":{"948":1}}],["underlying",{"1":{"724":1,"952":1}}],["undermine",{"0":{"703":1}}],["under",{"1":{"243":1,"285":1}}],["understandable",{"1":{"249":1,"990":1}}],["understand",{"0":{"541":1},"1":{"45":1,"192":1,"203":1,"287":1,"325":1,"330":1,"396":1,"406":1,"411":1,"421":1,"430":1,"571":1,"576":1,"578":1,"581":1,"679":1,"710":1,"720":1,"738":1,"791":1,"800":1,"814":1,"822":1,"824":1,"874":1,"898":1,"937":1,"945":1,"947":1,"968":1}}],["understanding",{"0":{"3":1,"117":1,"382":1,"387":1,"738":1,"818":1,"878":1},"1":{"121":1,"136":1,"190":1,"212":1,"269":1,"278":1,"286":1,"355":1,"368":1,"407":1,"425":1,"436":1,"443":1,"460":1,"491":1,"532":1,"535":1,"538":1,"541":1,"547":1,"560":1,"589":1,"602":1,"634":1,"736":1,"741":1,"799":1,"804":1,"806":1,"809":1,"820":1,"823":1,"852":1,"853":1,"856":1,"858":1,"859":1,"861":1,"862":1,"863":1,"865":1,"877":1,"878":1,"940":1,"943":1,"946":1,"952":1,"958":2,"963":1}}],["unifies",{"1":{"763":1}}],["unified",{"0":{"444":1,"763":1}}],["uniform",{"1":{"730":1}}],["unique",{"1":{"423":1,"460":1,"497":1,"574":1,"643":1,"647":1,"804":1,"905":1,"918":1,"952":1}}],["unintended",{"1":{"411":1}}],["union",{"0":{"215":1,"1009":1},"1":{"215":1,"1009":1}}],["units",{"1":{"837":1}}],["unites",{"1":{"389":1}}],["unit",{"0":{"524":1},"1":{"135":1,"457":1,"509":1,"786":1,"787":1,"941":1}}],["universe",{"1":{"98":1,"648":1}}],["unwinding",{"1":{"543":1}}],["unwind",{"1":{"109":1}}],["ux",{"0":{"283":1,"288":1,"392":1,"817":1,"819":1,"825":1,"828":1,"829":1,"943":1,"949":1,"1005":1,"1009":1},"1":{"282":1,"285":1,"376":1,"382":1,"383":1,"388":1,"392":1,"396":1,"422":1,"808":1,"817":1,"819":1,"825":1,"828":1,"829":1,"875":1,"880":2,"938":1,"949":1,"1004":1,"1005":1,"1009":1},"2":{"0":1,"66":1,"249":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"879":2,"986":1},"4":{"804":1,"805":1,"806":1,"807":1,"808":1,"809":1,"810":1,"811":1,"812":1,"813":1,"814":1,"815":1,"816":1,"817":1,"818":1,"819":1,"820":1,"821":1,"822":1,"823":1,"824":1,"825":1,"826":1,"827":1,"828":1,"829":1,"943":1,"944":1,"945":1,"946":1,"947":1,"948":1,"949":1,"950":1,"951":1,"952":1,"953":1,"954":1}}],["uistackview",{"1":{"796":1}}],["uiview",{"1":{"620":1}}],["uikeyinput",{"1":{"620":1}}],["uikit",{"0":{"798":1},"1":{"616":1,"796":1,"798":1,"962":1}}],["uidynamicitem",{"1":{"618":1}}],["uidynamicanimator",{"0":{"618":1},"1":{"618":1}}],["ui",{"0":{"0":1,"108":1,"249":1,"283":1,"379":1,"386":1,"391":1,"393":1,"398":1,"422":1,"998":1,"1033":1},"1":{"108":1,"249":2,"272":1,"276":1,"284":1,"378":1,"379":1,"382":1,"383":1,"386":1,"389":1,"390":1,"398":1,"422":2,"488":1,"616":1,"795":1,"796":1,"798":1,"869":1,"875":1,"998":1,"1002":1,"1004":1,"1033":2},"2":{"0":1,"249":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"422":1,"879":1,"902":1,"986":1,"1033":1}}],["p2",{"0":{"1012":1}}],["pyramid",{"0":{"966":1},"1":{"966":1}}],["python",{"0":{"542":1},"1":{"275":1,"542":1,"723":1,"777":1}}],["psychological",{"0":{"838":1},"1":{"838":1}}],["pg",{"0":{"752":1},"1":{"752":1}}],["pgo",{"0":{"116":1,"233":1},"1":{"233":1}}],["p",{"1":{"571":1}}],["pc",{"1":{"521":1}}],["pcs",{"0":{"257":1}}],["pwas",{"1":{"476":1}}],["ppo",{"1":{"428":2}}],["pm",{"0":{"870":1},"2":{"371":1,"870":1,"872":1},"4":{"371":1,"372":1,"373":1,"374":1,"870":1,"871":1,"872":1}}],["pnl",{"0":{"241":1,"254":1},"1":{"241":1,"254":1}}],["pnpm",{"0":{"202":1,"452":1},"1":{"202":2,"452":1}}],["plot",{"0":{"843":1},"1":{"839":1,"843":1}}],["plonky2",{"0":{"595":1},"1":{"595":2}}],["plug",{"1":{"324":1}}],["plugins",{"0":{"933":1},"1":{"166":1,"526":1,"933":1}}],["plus",{"1":{"205":1,"493":1,"495":1,"667":1,"837":1,"1006":1}}],["plain",{"0":{"633":1}}],["platforms",{"0":{"345":1,"436":1,"528":1},"1":{"345":1,"381":1,"383":1,"673":1,"682":1,"887":1}}],["platform",{"0":{"158":1,"159":1,"165":1,"172":1,"174":1,"177":1,"178":1,"238":1,"243":1,"250":1,"252":1,"955":1},"1":{"53":1,"61":1,"157":1,"158":1,"160":2,"161":1,"162":2,"165":1,"170":1,"172":1,"174":1,"176":1,"178":1,"179":1,"219":1,"223":1,"238":1,"243":1,"244":1,"249":1,"252":1,"380":1,"462":1,"514":1,"616":1,"670":1,"911":1,"955":1,"977":1,"1017":1},"2":{"514":1,"955":1}}],["place",{"0":{"614":1,"844":1},"1":{"45":1,"49":1,"267":1}}],["places",{"0":{"36":1},"1":{"296":1}}],["playaround",{"0":{"545":1,"666":1}}],["players",{"1":{"360":1}}],["plays",{"1":{"249":1,"447":1}}],["playground",{"4":{"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"462":1,"463":1,"464":1,"465":1,"466":1,"467":1,"468":1,"469":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":1,"583":1,"584":1,"585":1,"586":1,"587":1,"588":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"595":1,"596":1,"597":1,"598":1,"599":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"624":1,"625":1,"626":1,"627":1,"628":1,"629":1,"630":1,"631":1,"632":1,"633":1,"634":1,"635":1,"636":1,"637":1,"638":1,"639":1,"640":1,"641":1,"642":1,"643":1,"644":1,"645":1,"646":1,"647":1,"648":1,"649":1,"650":1,"651":1,"652":1,"653":1,"654":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":1,"661":1,"662":1,"663":1,"664":1,"665":1,"666":1,"667":1,"668":1,"669":1,"670":1,"671":1,"672":1,"673":1,"679":1,"680":1,"681":1,"682":1,"683":1,"684":1,"685":1,"686":1,"687":1,"688":1,"689":1,"690":1,"691":1,"692":1,"693":1,"694":1,"695":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"702":1,"703":1,"704":1,"705":1,"706":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1,"724":1,"725":1,"726":1,"727":1,"728":1,"729":1,"730":1,"731":1,"732":1,"733":1,"734":1,"735":1,"736":1,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"743":1,"744":1,"745":1,"746":1,"747":1,"748":1,"749":1,"750":1,"751":1,"752":1,"753":1,"754":1,"755":1,"756":1,"757":1,"758":1,"759":1,"760":1,"761":1,"762":1,"763":1,"764":1,"765":1,"766":1,"767":1,"768":1,"769":1,"770":1,"771":1,"772":1,"773":1,"774":1,"775":1,"776":1,"777":1,"778":1,"779":1,"780":1,"781":1,"782":1,"783":1,"784":1,"785":1,"786":1,"787":1,"788":1,"789":1,"790":1,"791":1,"792":1,"793":1,"794":1,"795":1,"796":1,"797":1,"798":1,"799":1,"800":1,"801":1,"802":1,"803":1,"804":1,"805":1,"806":1,"807":1,"808":1,"809":1,"810":1,"811":1,"812":1,"813":1,"814":1,"815":1,"816":1,"817":1,"818":1,"819":1,"820":1,"821":1,"822":1,"823":1,"824":1,"825":1,"826":1,"827":1,"828":1,"829":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":1,"839":1,"840":1,"841":1,"842":1,"843":1,"844":1,"845":1,"846":1,"847":1,"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"860":1,"861":1,"862":1,"863":1,"864":1,"865":1,"866":1,"867":1,"868":1,"869":1,"870":1,"871":1,"872":1,"873":1,"874":1,"875":1,"876":1,"877":1,"878":1,"879":1,"880":1,"881":1,"882":1,"883":1,"884":1,"885":1,"886":1,"887":1,"888":1,"889":1,"890":1,"891":1,"892":1,"893":1,"894":1,"895":1,"896":1,"897":1,"898":1,"899":1,"900":1,"901":1,"902":1,"903":1,"904":1,"905":1,"906":1,"907":1,"908":1,"909":1,"910":1,"911":1,"912":1,"913":1,"914":1,"915":1,"916":1,"917":1,"918":1,"919":1,"920":1,"921":1,"922":1,"923":1,"924":1,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1,"935":1,"936":1,"937":1,"938":1,"939":1,"940":1,"941":1,"942":1,"943":1,"944":1,"945":1,"946":1,"947":1,"948":1,"949":1,"950":1,"951":1,"952":1,"953":1,"954":1,"955":1,"956":1,"957":1,"958":1,"959":1,"960":1,"961":1,"962":1,"963":1,"964":1,"965":1,"966":1,"967":1,"968":1,"969":1,"970":1,"971":1,"972":1,"973":1,"974":1,"975":1,"976":1,"977":1,"978":1,"979":1,"980":1,"981":1,"982":1,"983":1,"984":1,"985":1,"986":1,"987":1,"988":1,"989":1,"990":1,"991":1,"992":1,"993":1,"994":1}}],["play",{"1":{"144":1,"285":1,"364":1,"439":1,"544":1}}],["playing",{"1":{"41":1}}],["playbook",{"1":{"366":1},"4":{"0":1,"1":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1}}],["plan9",{"0":{"532":1},"1":{"532":1}}],["plans",{"1":{"106":1}}],["planning",{"0":{"187":1,"977":1},"1":{"102":1,"120":1,"187":1,"316":1,"326":1,"372":2,"754":1,"766":1,"770":1,"771":2,"977":1}}],["plan",{"1":{"15":1,"45":1,"67":1,"200":1}}],["pulp",{"0":{"843":1}}],["pull",{"0":{"672":1},"1":{"324":1,"672":1,"989":1}}],["publishing",{"1":{"690":1,"944":1}}],["publish",{"1":{"369":1,"528":1}}],["publications",{"1":{"867":1}}],["publication",{"0":{"351":1,"355":1,"369":1},"1":{"355":2}}],["public",{"1":{"154":1,"237":1,"649":1,"747":1,"976":1}}],["putting",{"1":{"859":1}}],["put",{"0":{"705":1},"1":{"345":1,"351":1,"381":1,"423":1,"1035":1}}],["push",{"0":{"354":1},"1":{"207":1,"354":1,"370":1,"1017":1}}],["pursuing",{"1":{"1044":1}}],["pursue",{"1":{"365":1}}],["purchasing",{"1":{"656":1}}],["purchase",{"1":{"40":1}}],["purgecss",{"0":{"516":1},"1":{"516":1}}],["purview",{"1":{"285":1}}],["pure",{"0":{"471":1},"1":{"229":1,"471":1}}],["purposes",{"1":{"351":1,"451":1}}],["purposeful",{"1":{"325":1,"853":1}}],["purpose",{"0":{"43":1,"853":1,"864":1,"990":1},"1":{"35":1,"43":1,"466":1},"2":{"32":1,"43":1}}],["pitfalls",{"0":{"915":1},"1":{"914":1,"915":1,"1002":1}}],["pixels",{"0":{"895":1}}],["pig",{"0":{"723":1},"1":{"723":2}}],["pin",{"1":{"620":1}}],["pinning",{"0":{"558":1},"1":{"558":1,"921":1}}],["pion",{"1":{"527":2}}],["pillar",{"1":{"969":1},"2":{"413":1,"427":1,"430":1}}],["pick",{"1":{"343":1}}],["picky",{"1":{"7":1}}],["pivotal",{"1":{"144":1}}],["pipelines",{"0":{"914":1},"1":{"717":1,"748":1,"914":1}}],["pipeline",{"0":{"107":1,"236":1,"254":1,"969":1},"1":{"254":1,"352":1,"969":2,"973":1,"981":1},"2":{"969":1}}],["pieces",{"1":{"442":1}}],["piece",{"1":{"57":1,"89":1,"351":1}}],["panic",{"1":{"543":2}}],["pandemic",{"1":{"179":1}}],["paid",{"1":{"643":1}}],["pairs",{"1":{"578":1}}],["paired",{"1":{"200":1}}],["painful",{"1":{"450":1,"480":1,"517":1}}],["pagination",{"1":{"450":1}}],["pages",{"1":{"213":1,"866":1}}],["page",{"0":{"241":1},"1":{"63":1,"213":1,"241":1,"297":1,"466":1,"477":2,"491":1,"895":1}}],["pastes",{"1":{"276":1}}],["past",{"1":{"264":1,"279":1,"293":1,"343":1,"418":1,"577":1}}],["passcode",{"0":{"620":1},"1":{"620":1}}],["passed",{"1":{"431":1}}],["passions",{"1":{"1043":1}}],["passionate",{"1":{"136":1,"203":1,"269":1,"278":1}}],["passion",{"1":{"121":1,"182":1,"1044":1}}],["passwordless",{"1":{"869":1}}],["password",{"0":{"42":1,"976":1},"1":{"42":1,"284":1,"976":1}}],["packed",{"1":{"1007":1}}],["packages",{"1":{"188":1,"202":1,"523":1,"648":1,"984":1}}],["package",{"0":{"523":1,"557":1,"784":1,"929":1},"1":{"45":1,"202":2,"402":1,"452":1,"478":1,"540":1,"557":1,"560":1,"784":1,"917":1,"918":2,"929":1,"933":1},"2":{"523":1}}],["pacing",{"1":{"843":1}}],["paced",{"1":{"203":1}}],["patch",{"1":{"495":1}}],["pattern",{"0":{"110":1,"247":1,"406":1,"467":1,"478":1,"499":1,"501":1,"522":1,"606":1,"607":1,"609":2,"610":1,"612":1,"613":1,"614":1,"615":1,"798":1,"913":1,"960":1,"971":1},"1":{"110":1,"244":1,"247":1,"444":1,"467":2,"501":1,"522":1,"565":1,"606":1,"607":3,"609":2,"610":1,"612":1,"613":2,"655":1,"785":1,"788":1,"796":1,"798":1,"913":1,"957":1,"962":1,"969":1},"2":{"215":1,"406":1,"467":1,"607":1,"609":3,"610":2,"612":3,"613":1,"615":1,"913":2,"960":2}}],["patterns",{"0":{"105":1,"112":1,"114":1,"288":1,"503":1,"531":1,"614":1,"915":1,"1005":2,"1011":1},"1":{"105":1,"112":1,"114":1,"478":1,"503":1,"528":1,"531":1,"614":1,"848":1,"914":2,"915":1,"917":1,"956":2,"960":1,"984":1,"1005":2,"1011":1},"2":{"607":1,"613":1}}],["paths",{"1":{"100":1,"621":1,"918":2,"987":1,"1032":1}}],["path",{"0":{"100":1,"918":1,"1043":1},"1":{"185":1}}],["parser",{"0":{"916":1}}],["parse",{"0":{"903":1},"1":{"903":1}}],["parsing",{"1":{"903":1},"2":{"461":1}}],["pareto",{"1":{"730":1}}],["parallax",{"0":{"471":1},"1":{"471":1}}],["parallelizable",{"1":{"691":1}}],["parallelism",{"0":{"498":1},"1":{"212":1,"498":1},"2":{"498":1}}],["parallel",{"1":{"273":1,"545":1,"631":1,"694":1}}],["parallels",{"1":{"118":1,"120":1}}],["parameterize",{"1":{"613":1}}],["parameter",{"1":{"445":1}}],["parameters",{"1":{"405":1,"445":1}}],["paragraphs",{"1":{"990":1}}],["paragraph",{"1":{"379":1}}],["para",{"1":{"179":1}}],["paradigm",{"1":{"103":1}}],["parties",{"1":{"958":1}}],["partition",{"1":{"712":1}}],["partitioning",{"0":{"802":1},"1":{"711":1,"802":1}}],["partitions",{"0":{"728":1},"1":{"711":1,"728":2}}],["participating",{"1":{"1021":1,"1024":1}}],["participant",{"1":{"816":1}}],["participants",{"1":{"105":1,"106":1,"114":1,"124":1,"368":1}}],["particularly",{"1":{"607":1}}],["partial",{"0":{"901":1},"1":{"601":1,"901":1}}],["parts",{"1":{"283":1,"288":1,"497":1}}],["party",{"1":{"173":1,"426":1,"605":1,"752":1}}],["partnering",{"1":{"155":1}}],["partnership",{"2":{"174":1}}],["partnerships",{"1":{"119":1,"121":1,"326":1,"638":1}}],["partners",{"0":{"155":1},"1":{"155":1},"2":{"155":1}}],["partner",{"1":{"71":1,"156":1}}],["part",{"0":{"379":1,"393":1,"483":1,"645":1,"648":1,"649":1,"650":1,"657":1,"721":1,"959":1,"976":1,"1013":1,"1014":1},"1":{"45":1,"119":1,"291":1,"297":1,"512":1,"631":1,"642":1,"976":1,"977":1,"1013":1,"1014":1}}],["paying",{"1":{"164":1}}],["payroll",{"1":{"40":1}}],["pay",{"1":{"40":1}}],["payments",{"1":{"165":1}}],["payment",{"0":{"160":1,"165":1},"1":{"40":1,"160":1,"165":1},"2":{"165":1,"353":1}}],["phenomena",{"1":{"950":1}}],["phrases",{"1":{"847":1}}],["physics",{"1":{"618":1}}],["physical",{"1":{"566":1,"822":1,"843":1}}],["physically",{"1":{"31":1}}],["philosophies",{"0":{"805":1},"1":{"952":1}}],["phil",{"1":{"568":1}}],["phoenix",{"0":{"241":1},"1":{"241":1},"2":{"241":1}}],["phones",{"1":{"31":1}}],["phat",{"0":{"1044":1},"1":{"1000":1,"1005":1,"1044":1}}],["phatgha",{"3":{"894":1}}],["pham",{"0":{"29":1,"56":1,"1028":1,"1047":1,"1048":1},"1":{"29":1,"56":1,"1028":1,"1047":1,"1048":1},"3":{"404":1,"447":1,"641":1}}],["phases",{"1":{"296":1,"662":1,"725":1}}],["phase",{"1":{"4":1,"66":1,"828":1}}],["peak",{"1":{"776":1}}],["pearson",{"1":{"406":1}}],["peft",{"1":{"429":1}}],["peep",{"1":{"361":1}}],["peeps",{"0":{"361":1},"1":{"235":1,"331":1,"359":1,"361":1}}],["permission",{"0":{"976":1}}],["permissions",{"1":{"965":1,"976":1},"2":{"976":1}}],["permissioned",{"1":{"596":1}}],["permanently",{"0":{"904":2},"1":{"904":1}}],["permanent",{"0":{"865":1,"904":1},"1":{"861":1,"904":1}}],["perceived",{"1":{"827":1,"894":2}}],["perceiving",{"0":{"571":1}}],["perception",{"0":{"827":1},"1":{"824":1}}],["per",{"1":{"346":1}}],["periodical",{"1":{"343":1}}],["period",{"1":{"171":1,"200":1,"769":1}}],["persuasive",{"1":{"966":1}}],["persuasion",{"1":{"704":1,"834":1}}],["persuade",{"0":{"704":1},"1":{"834":1}}],["perspective",{"0":{"968":1},"1":{"316":1,"471":1,"706":1,"968":1,"1029":1,"1039":1}}],["perspectives",{"1":{"119":1,"330":1,"705":1,"833":1,"848":1,"851":1,"853":1,"967":1}}],["persistence",{"1":{"247":1}}],["persist",{"0":{"247":1}}],["persona",{"0":{"874":1}}],["personas",{"0":{"733":1,"734":1,"736":1,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"876":1,"938":1},"1":{"733":1,"734":1,"736":1,"737":2,"738":1,"739":1,"740":1,"741":1,"742":1,"874":1,"875":1,"876":1,"938":1,"943":1},"4":{"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"799":1,"800":1,"801":1,"937":1,"938":1}}],["personally",{"1":{"200":1}}],["personal",{"0":{"1042":1},"1":{"55":1,"66":1,"98":2,"287":1,"304":1,"365":1,"408":2,"578":1,"579":1,"740":1,"878":1,"907":1,"909":1,"1028":1,"1034":1,"1042":1},"2":{"878":1,"1038":1,"1042":1,"1049":1}}],["personalization",{"0":{"287":2},"1":{"287":1}}],["personalized",{"1":{"28":1,"287":1,"375":1}}],["personality",{"0":{"799":1},"1":{"68":1,"88":1,"192":1,"195":1,"196":1,"567":2,"568":1,"569":2,"571":1,"573":1,"574":1,"576":1,"578":1,"579":1,"581":1,"799":1,"800":1,"801":1,"844":1,"937":1}}],["personalities",{"1":{"26":1,"580":1},"2":{"26":1}}],["person",{"1":{"7":1,"323":1,"337":2}}],["perks",{"0":{"44":1},"1":{"44":1,"297":1}}],["perform",{"1":{"411":1,"464":1}}],["performing",{"0":{"335":1},"1":{"413":1}}],["performant",{"1":{"202":1}}],["performance",{"0":{"90":1,"116":1,"194":1,"233":1,"245":1,"251":1,"253":1,"365":1,"527":1,"898":1,"975":1},"1":{"90":1,"135":1,"194":1,"197":1,"206":1,"207":1,"209":1,"215":1,"218":1,"223":1,"232":1,"233":1,"245":1,"251":1,"323":1,"365":1,"383":1,"420":1,"424":1,"437":1,"445":1,"453":1,"454":1,"475":1,"480":2,"491":1,"498":1,"505":1,"511":1,"527":1,"532":1,"618":1,"629":1,"632":1,"633":1,"636":1,"640":1,"656":1,"702":1,"711":1,"716":1,"721":1,"725":1,"726":1,"728":1,"751":1,"756":1,"757":1,"886":1,"888":1,"889":1,"894":2,"899":1,"914":1,"917":1,"964":1,"972":1,"975":1,"983":1,"985":1,"1000":1,"1004":1},"2":{"23":1,"34":1,"90":1,"109":1,"184":1,"188":1,"194":1,"243":1,"323":1,"365":1,"400":1,"453":1,"468":2,"472":1,"480":1,"491":1,"505":1,"894":1,"898":2,"975":1}}],["perfectly",{"1":{"1030":1}}],["perfectionist",{"1":{"337":1}}],["perfect",{"1":{"36":1,"887":1}}],["people",{"0":{"336":1,"735":1},"1":{"30":1,"119":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"163":1,"182":1,"183":1,"188":1,"192":1,"311":3,"331":1,"336":1,"342":1,"774":1,"806":1,"810":1,"842":1,"946":1,"947":1,"987":1,"1026":1},"2":{"7":1,"8":1,"13":1,"14":1,"16":1,"17":1,"19":1,"20":1,"22":1,"24":1,"68":1,"88":1,"183":1,"186":1,"189":1,"192":1,"193":1,"194":1,"195":1,"196":1,"325":1,"331":1,"336":1,"553":1}}],["pragmatic",{"1":{"814":1}}],["pratices",{"1":{"539":1}}],["practical",{"0":{"215":1},"1":{"204":1,"215":1,"288":1,"314":1,"339":1,"384":1,"440":1,"575":1,"671":1,"683":1,"875":1,"914":1,"937":1,"961":1,"1002":1,"1006":1,"1007":1}}],["practice",{"1":{"65":1},"2":{"476":1,"524":1,"554":1,"632":1,"914":1}}],["practices",{"0":{"386":1,"524":1,"633":1,"653":1,"788":1,"897":1},"1":{"1":1,"113":1,"117":1,"118":1,"120":1,"124":1,"125":1,"157":1,"200":1,"214":1,"218":1,"224":1,"267":1,"275":1,"286":1,"290":1,"372":1,"386":1,"494":1,"508":1,"564":1,"586":1,"663":1,"672":1,"698":1,"699":1,"715":1,"788":1,"826":1,"869":1,"870":1,"882":1,"917":1,"969":1,"972":1,"973":1,"1002":1}}],["priorities",{"1":{"738":1}}],["prioritize",{"1":{"712":1,"766":1}}],["prioritized",{"1":{"289":1}}],["prioritizing",{"1":{"24":1}}],["primarily",{"1":{"637":1}}],["primary",{"1":{"216":1,"218":1,"219":1,"306":1,"529":1}}],["prices",{"0":{"776":1},"1":{"725":1,"731":1,"776":1}}],["price",{"1":{"588":1,"776":1}}],["pricing",{"0":{"115":1,"318":1,"555":1},"1":{"115":1,"555":1,"718":1,"727":1},"2":{"555":1}}],["private",{"1":{"429":1,"649":1,"657":1}}],["privacy",{"1":{"383":1,"417":1,"637":1,"640":1,"965":1}}],["principle",{"0":{"379":1,"393":1,"906":1,"966":1},"1":{"459":1,"906":1,"966":1}}],["principles",{"0":{"398":1,"689":1,"693":1},"1":{"219":1,"284":1,"334":1,"378":1,"388":1,"398":1,"425":1,"585":1,"693":1,"875":1,"879":1,"912":1,"956":1}}],["pride",{"1":{"203":1,"1031":1}}],["predicted",{"0":{"1016":1},"2":{"1016":1}}],["predictive",{"1":{"1004":1}}],["predicting",{"1":{"954":1}}],["predictions",{"0":{"256":1,"259":1},"1":{"256":1}}],["predict",{"1":{"950":1}}],["predictable",{"1":{"721":1}}],["precautions",{"0":{"700":1}}],["precise",{"1":{"651":1}}],["precision",{"1":{"284":1}}],["prefetching",{"1":{"495":1}}],["preference",{"1":{"477":1,"578":1}}],["preferences",{"0":{"26":1,"578":1},"1":{"26":1,"287":1,"571":1,"581":1}}],["preferred",{"1":{"217":1}}],["prep",{"1":{"1000":1}}],["preprocessing",{"1":{"433":1}}],["preparation",{"1":{"421":1}}],["prepare",{"1":{"164":1,"357":1,"700":1,"766":1}}],["previewing",{"1":{"401":1}}],["prevention",{"1":{"689":1}}],["preventing",{"1":{"639":1,"769":1}}],["prevent",{"0":{"411":1,"468":1},"1":{"169":1,"252":1,"411":1,"458":1,"521":1,"594":1,"714":1,"738":1}}],["prevents",{"1":{"2":1}}],["preserving",{"0":{"488":1},"1":{"445":1,"577":1}}],["presenting",{"1":{"704":1}}],["presentation",{"1":{"1005":1},"2":{"357":1}}],["presentations",{"0":{"107":1},"1":{"1009":1}}],["presented",{"1":{"249":1,"1000":1}}],["present",{"1":{"106":1,"188":1,"450":1,"566":1}}],["presents",{"1":{"16":1,"19":1,"357":1,"419":1,"445":1}}],["prescriptive",{"1":{"273":1}}],["pre",{"0":{"74":1,"1015":1},"1":{"74":1,"173":1,"481":1,"513":1,"971":1}}],["proxy",{"0":{"982":1},"1":{"982":1},"2":{"982":1}}],["proxies",{"1":{"606":1}}],["proximal",{"0":{"428":1},"1":{"428":1}}],["proximity",{"1":{"398":1}}],["pros",{"1":{"610":1,"615":1,"713":1,"913":1}}],["proofs",{"0":{"604":1},"1":{"603":1,"604":1,"940":1}}],["proof",{"1":{"595":2,"598":1,"605":1,"682":1},"2":{"595":1,"604":1}}],["protectionism",{"1":{"1008":1}}],["protecting",{"1":{"521":1,"912":1}}],["protect",{"1":{"520":1}}],["proto",{"1":{"737":1}}],["protocols",{"1":{"520":1},"2":{"518":1}}],["protocol",{"0":{"364":1,"438":1},"1":{"438":1,"594":1,"626":1,"965":1},"2":{"364":1,"438":1}}],["prototyping",{"1":{"52":1,"376":1,"378":1}}],["prototypes",{"0":{"820":1},"1":{"820":1}}],["prototype",{"0":{"0":1,"614":1},"1":{"284":1,"614":2,"1011":1}}],["proposed",{"1":{"888":1}}],["propositions",{"1":{"873":1}}],["proposals",{"1":{"199":1}}],["properties",{"0":{"980":1,"1003":1},"1":{"980":1}}],["property",{"1":{"473":1,"511":1,"673":1}}],["proper",{"1":{"699":1}}],["properly",{"1":{"642":1,"697":1}}],["props",{"1":{"459":1,"503":1,"655":1,"782":1}}],["produce",{"1":{"405":1}}],["production",{"0":{"120":1,"936":1,"1006":1},"1":{"120":1,"135":1,"266":1,"280":1,"284":1,"744":1}}],["productive",{"0":{"800":1},"1":{"39":1,"152":1,"163":1,"339":1,"664":1,"854":1,"1030":1}}],["productivity",{"1":{"50":1,"243":1,"260":1,"275":1,"449":1,"462":1,"629":1,"659":1,"672":1,"767":1,"864":1,"870":1,"887":1,"985":1,"999":1,"1006":1},"2":{"4":1,"323":1,"324":1,"330":1,"335":1,"337":1,"338":1,"339":1,"342":1,"344":1,"385":1,"452":1}}],["product",{"0":{"129":1,"137":1,"282":1,"283":2,"284":1,"285":1,"286":1,"287":1,"288":1,"764":1,"765":1,"768":1,"828":1,"873":1,"1000":1,"1004":1},"1":{"4":1,"115":1,"154":1,"165":1,"182":1,"287":1,"296":1,"337":3,"374":1,"376":1,"377":1,"378":1,"388":1,"389":1,"502":1,"554":1,"656":1,"668":1,"732":1,"733":1,"734":1,"736":1,"738":1,"739":1,"740":1,"743":1,"754":1,"755":1,"765":1,"771":1,"817":1,"828":1,"874":1,"875":1,"876":1,"877":1,"983":1,"1000":1,"1005":1},"2":{"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"555":1,"1038":1},"4":{"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"554":1,"555":1}}],["products",{"0":{"256":1},"1":{"0":1,"29":1,"32":1,"131":1,"256":1,"283":1,"288":1,"382":1,"392":1,"395":1,"396":1,"397":1,"521":1,"585":1,"742":1,"765":2,"806":1,"808":1,"819":1,"1046":1}}],["prolific",{"1":{"291":1}}],["proactive",{"1":{"138":1}}],["prove",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"605":1,"951":1}}],["providing",{"1":{"114":1,"348":1,"355":1,"497":1,"512":1,"543":1,"625":1,"626":1,"975":1,"1042":1}}],["providers",{"1":{"174":1}}],["provided",{"1":{"161":1,"643":1}}],["provides",{"1":{"108":1,"200":1,"212":1,"251":1,"284":1,"451":1,"487":1,"543":1,"546":1,"548":1,"550":1,"582":1,"583":1,"584":1,"587":1,"589":1,"591":1,"593":1,"597":1,"598":1,"601":1,"604":1,"605":1,"708":1,"914":1}}],["provide",{"1":{"44":1,"45":1,"116":1,"138":1,"240":1,"442":1,"589":1,"608":1,"651":1,"733":1,"737":1,"959":1}}],["prompts",{"0":{"884":1},"1":{"282":1,"284":1,"412":1,"840":1,"884":2,"893":1,"1006":1}}],["prompting",{"0":{"282":1,"407":1,"884":1},"1":{"282":3,"407":1,"419":1,"435":1,"439":1,"884":1},"2":{"421":1}}],["prompt",{"0":{"407":1,"411":1,"435":1,"840":1,"997":1,"1009":1},"1":{"272":1,"407":1,"411":2,"435":1,"840":1,"884":1,"885":1,"1009":1},"2":{"407":1,"419":1,"434":1,"443":1,"884":1},"4":{"628":1,"629":1}}],["promising",{"1":{"269":1,"278":1}}],["promises",{"1":{"67":1,"779":1}}],["prometheus",{"1":{"252":1}}],["promoting",{"1":{"106":1,"138":1,"385":1,"685":1}}],["promotes",{"1":{"613":1,"646":1,"704":1}}],["promote",{"0":{"818":1},"1":{"104":1,"336":1,"499":1,"800":1,"996":1}}],["probabilistic",{"1":{"635":1}}],["probation",{"1":{"82":1,"200":1}}],["problem",{"0":{"612":1,"702":1,"757":1,"806":1,"812":1,"823":1},"1":{"254":1,"314":1,"384":1,"423":1,"439":1,"477":1,"590":1,"615":1,"664":1,"694":1,"702":1,"706":1,"820":1,"884":1,"913":1,"953":1}}],["problems",{"1":{"67":1,"169":1,"285":1,"371":1,"427":1,"430":1,"432":1,"463":1,"518":1,"688":1,"702":1,"823":1,"845":1,"967":1,"968":1}}],["profiling",{"0":{"530":1},"1":{"530":2,"917":1},"2":{"530":1}}],["profiles",{"1":{"729":1,"874":1}}],["profile",{"1":{"70":1,"233":1}}],["profits",{"1":{"554":1}}],["profit",{"1":{"316":1}}],["professionalism",{"1":{"647":1,"665":1}}],["professionals",{"0":{"175":1},"1":{"157":1,"1036":1}}],["professional",{"0":{"107":1},"1":{"28":1,"66":1,"124":2,"175":1,"394":1}}],["programmers",{"1":{"273":1,"723":1}}],["programming",{"0":{"663":1,"1011":1},"1":{"216":2,"217":1,"218":1,"219":2,"220":1,"223":1,"273":1,"274":1,"277":1,"529":1,"531":1,"651":1,"666":1,"683":1,"684":1,"685":1,"761":1,"784":1,"790":1,"792":1,"910":1,"1004":1,"1029":1},"2":{"217":1}}],["programing",{"2":{"233":1}}],["programs",{"1":{"214":1,"336":1,"512":1,"915":1}}],["program",{"0":{"124":1,"759":1},"1":{"27":1,"123":1,"124":1,"179":1,"235":1,"362":1,"543":4,"546":1,"759":1,"1019":1}}],["progressive",{"0":{"748":1},"1":{"748":1}}],["progress",{"0":{"116":1},"1":{"15":1,"27":1,"363":1,"373":1,"674":1,"675":1,"676":1,"677":1,"678":1,"755":1,"872":1,"1006":1,"1010":1}}],["procedures",{"1":{"697":1}}],["proceed",{"1":{"543":1}}],["proceeded",{"1":{"16":1}}],["processing",{"0":{"731":1},"1":{"250":1,"415":3,"454":1,"640":1,"654":1,"684":1,"708":1,"718":1,"723":1,"903":1,"981":1},"2":{"883":1}}],["processes",{"1":{"216":1,"236":1,"388":1,"511":2,"628":1,"663":1,"684":1,"725":1,"789":1,"877":1,"920":1}}],["processed",{"1":{"198":1,"862":1}}],["processs",{"1":{"8":1}}],["process",{"0":{"27":1,"110":1,"153":1,"930":1},"1":{"2":1,"9":1,"12":1,"19":1,"20":1,"22":1,"61":1,"79":1,"110":1,"190":1,"289":1,"348":1,"351":1,"358":1,"405":1,"421":1,"427":1,"428":1,"431":1,"441":1,"546":1,"552":1,"601":1,"638":1,"738":1,"752":1,"770":1,"815":1,"838":1,"840":1,"888":1,"895":1,"910":1,"930":1,"936":1,"988":1},"2":{"185":1,"198":1,"200":1,"340":1,"362":1,"386":1,"553":1}}],["projectmanagement",{"2":{"871":1}}],["projects",{"0":{"532":1,"653":1},"1":{"46":1,"66":1,"103":1,"107":1,"124":1,"198":1,"221":1,"223":1,"258":1,"269":1,"278":1,"279":1,"293":1,"306":1,"322":1,"386":1,"395":1,"452":1,"475":1,"595":1,"653":1,"770":1,"869":1,"872":1,"919":1,"1010":1,"1023":1,"1050":1}}],["project",{"0":{"9":1,"10":1,"11":1,"12":1,"21":1,"94":1,"116":1,"190":1,"244":1,"246":1,"371":1,"481":1,"628":1,"643":1,"759":1,"927":1,"973":1,"1036":1},"1":{"9":1,"10":1,"11":1,"12":1,"15":1,"21":1,"25":1,"71":1,"72":1,"115":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"185":1,"190":1,"223":1,"244":1,"246":2,"284":1,"313":1,"316":1,"317":1,"318":1,"371":2,"372":1,"373":1,"387":1,"481":1,"492":1,"515":1,"628":7,"629":1,"643":1,"644":1,"662":2,"669":1,"755":1,"759":1,"773":1,"800":2,"861":1,"870":2,"973":1,"977":1,"980":1},"2":{"5":1,"9":1,"10":1,"11":1,"12":1,"21":1,"25":1,"27":1,"55":1,"94":1,"317":1,"320":1,"628":1,"1036":1}}],["pocket",{"0":{"1010":1},"1":{"1010":1}}],["population",{"1":{"978":3}}],["popular",{"1":{"161":1,"248":1,"283":1,"415":1,"422":1,"428":1,"450":1,"490":1,"491":1,"783":1,"891":1,"917":1}}],["podcasts",{"1":{"880":1}}],["pomodoro",{"0":{"767":1},"1":{"767":1}}],["po",{"2":{"598":1}}],["policies",{"1":{"789":1}}],["policy",{"0":{"1":1,"428":1},"1":{"1":1,"306":1,"428":5},"2":{"1":1}}],["polygon",{"0":{"583":1},"1":{"583":1},"2":{"583":1}}],["polymorphic",{"0":{"487":1},"1":{"487":1},"2":{"487":1}}],["polling",{"1":{"518":1}}],["port",{"1":{"480":1}}],["portable",{"1":{"469":1,"670":1}}],["portfolio",{"0":{"759":1},"1":{"181":1,"759":1}}],["poker",{"1":{"372":1,"771":1}}],["pools",{"0":{"914":1},"1":{"589":1,"914":1}}],["pool",{"0":{"589":1},"1":{"356":1,"589":1}}],["power",{"1":{"273":1,"411":1,"519":1,"565":1,"632":1,"727":1,"925":1,"934":1}}],["powerful",{"0":{"175":1},"1":{"175":1,"223":1,"440":1,"485":1,"514":1,"530":1,"544":1,"588":1,"666":1,"797":1,"837":1,"841":1,"859":1,"913":1,"918":1,"958":1}}],["powered",{"0":{"166":1,"248":1,"624":1},"1":{"229":1,"248":1,"425":1,"448":1,"462":1,"624":1,"887":1,"931":1,"935":1,"963":1},"2":{"887":1}}],["potentially",{"1":{"431":1,"511":1,"810":1}}],["potential",{"1":{"138":1,"223":1,"275":1,"316":2,"421":1,"548":1,"890":1,"914":1,"941":1}}],["pos",{"0":{"598":1},"1":{"598":1}}],["possibly",{"1":{"674":1,"675":1,"676":1,"677":1,"678":1}}],["possible",{"0":{"315":1},"1":{"0":1,"315":1,"588":1,"623":1}}],["possibilities",{"0":{"822":1},"1":{"572":1}}],["posing",{"1":{"275":1}}],["position",{"0":{"450":1},"1":{"178":1,"207":1,"476":1,"488":1,"490":1}}],["positions",{"1":{"175":1},"4":{"121":1,"122":1}}],["positives",{"1":{"635":1}}],["positive",{"1":{"178":1,"385":1,"849":1}}],["postgresql",{"0":{"716":1},"1":{"639":1,"645":1,"653":1,"714":1,"716":1,"910":1}}],["posting",{"1":{"325":1}}],["post",{"0":{"480":1},"1":{"190":1,"223":1,"323":1,"351":1,"361":1,"419":1,"442":1},"2":{"489":1}}],["pointers",{"0":{"536":1},"1":{"536":1,"784":1}}],["points",{"1":{"92":1,"355":1,"372":1,"517":1,"625":1,"771":1,"831":1}}],["point",{"0":{"771":1},"1":{"89":1,"291":1,"623":1,"631":1}}],["snippets",{"1":{"914":1}}],["snappy",{"1":{"894":1}}],["snapshot",{"0":{"247":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1},"1":{"207":1,"247":1}}],["snarks",{"0":{"605":1},"1":{"605":2}}],["sönke",{"1":{"866":1}}],["s3",{"1":{"749":1}}],["sse",{"1":{"626":1}}],["ssl",{"1":{"520":1}}],["ssh",{"1":{"520":1}}],["ssg",{"1":{"506":1}}],["ssr",{"1":{"206":1,"506":1}}],["sdks",{"1":{"608":1}}],["sdk",{"0":{"608":1},"1":{"422":1}}],["sdlc",{"1":{"395":1,"662":1},"2":{"662":1}}],["skeletons",{"1":{"913":1}}],["skeuomorphic",{"1":{"943":1}}],["skeuomorphism",{"0":{"945":1},"1":{"822":1,"945":1}}],["skeuoumorphic",{"0":{"822":1}}],["skepticism",{"1":{"271":1,"580":1}}],["skill",{"0":{"667":1},"1":{"762":1}}],["skilled",{"1":{"95":1,"641":1}}],["skillset",{"1":{"123":1}}],["skills",{"1":{"28":1,"47":1,"121":1,"124":1,"125":1,"309":1,"314":1,"320":1,"336":1,"371":1,"376":1,"423":1,"646":1,"664":1,"667":2,"852":1,"856":1,"884":1,"910":1,"940":1,"956":1,"985":1,"989":1,"1007":1}}],["skipped",{"1":{"74":1}}],["skip",{"0":{"74":1}}],["sql",{"0":{"633":2,"636":1,"639":1,"975":1},"1":{"242":1,"632":1,"633":2,"715":1,"720":1,"722":1,"975":3,"984":1},"2":{"633":1,"634":1,"971":1,"975":1}}],["sqlite",{"0":{"222":1,"225":1},"1":{"222":1,"225":1}}],["sloan",{"1":{"994":1}}],["slow",{"0":{"511":1},"1":{"495":1,"511":2,"995":1}}],["slide",{"1":{"995":1},"2":{"995":1}}],["slides",{"0":{"995":1},"1":{"944":1}}],["slime",{"1":{"777":1}}],["slippage",{"1":{"589":1}}],["slices",{"1":{"211":3,"227":1,"524":3,"594":1}}],["slice",{"0":{"211":1}}],["slack",{"1":{"164":1,"185":1,"189":1}}],["symbol",{"0":{"776":1},"1":{"776":1}}],["symbols",{"1":{"205":1}}],["sybil",{"1":{"594":1}}],["synthesizing",{"1":{"966":1}}],["synthesized",{"1":{"442":1}}],["syntax",{"1":{"720":1,"847":1}}],["synchronization",{"1":{"637":1,"915":1},"2":{"637":1}}],["synchronizing",{"1":{"502":1}}],["sync",{"0":{"538":1,"541":1,"1005":1},"1":{"538":1,"541":1,"784":1,"1005":1}}],["synctest",{"0":{"534":1},"1":{"534":1}}],["syste",{"1":{"242":1}}],["system",{"0":{"104":1,"156":1,"169":1,"171":1,"239":1,"246":1,"252":1,"389":1,"390":1,"425":1,"442":1,"504":1,"603":1,"606":1,"624":1,"719":1,"886":1,"959":1,"972":1,"973":1,"976":1,"1002":1},"1":{"1":1,"62":1,"104":1,"156":1,"159":1,"168":1,"169":1,"172":1,"236":1,"244":1,"246":2,"282":1,"288":1,"346":1,"389":1,"390":1,"406":1,"410":1,"430":2,"437":1,"441":1,"544":1,"624":1,"658":1,"679":2,"681":1,"695":1,"719":1,"729":1,"758":1,"760":1,"783":1,"854":1,"884":1,"886":1,"893":1,"905":1,"956":1,"959":2,"973":2,"1006":1,"1010":1},"2":{"0":1,"504":1,"630":1,"959":1,"973":1,"976":1,"980":1}}],["systems",{"0":{"312":1,"432":1,"437":1,"584":1,"854":2,"860":1},"1":{"0":1,"31":1,"106":1,"172":1,"174":1,"240":1,"270":1,"288":1,"312":1,"378":1,"383":1,"411":1,"423":1,"425":1,"431":2,"436":1,"442":1,"499":1,"504":1,"570":1,"584":1,"606":1,"608":1,"683":1,"689":1,"695":1,"707":1,"854":1,"860":1,"863":1,"875":1,"891":1,"893":1,"963":1,"972":1,"975":1,"1005":1,"1017":1},"2":{"584":1}}],["swat",{"1":{"764":1}}],["swap",{"0":{"61":1,"600":1,"1010":1},"1":{"353":1,"600":1,"1010":1},"2":{"53":1,"600":1}}],["swr",{"2":{"450":1}}],["switched",{"1":{"452":1}}],["switching",{"1":{"404":1}}],["switch",{"1":{"168":1,"744":1}}],["swiftui",{"0":{"284":1,"616":1,"619":1,"621":1},"1":{"284":3,"616":1,"619":1,"621":1,"961":1}}],["swift",{"0":{"156":1,"617":1,"620":1,"796":1},"1":{"156":1,"223":1,"620":1,"622":1,"796":2,"797":1,"798":1},"2":{"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1}}],["school",{"1":{"1044":1}}],["schemas",{"1":{"501":1}}],["schema",{"1":{"461":1,"763":1}}],["scheduled",{"1":{"757":1}}],["schedules",{"1":{"644":1}}],["scheduler",{"1":{"212":2}}],["schedule",{"0":{"190":1},"1":{"158":1}}],["science",{"1":{"1019":1}}],["scientific",{"1":{"890":1,"951":1}}],["scientists",{"1":{"285":1}}],["scopes",{"1":{"671":1}}],["scope",{"0":{"321":1},"1":{"288":1,"316":1,"318":1,"321":1,"872":1}}],["scores",{"1":{"729":1,"810":1}}],["score",{"1":{"91":1,"447":1}}],["scenes",{"1":{"515":1,"837":1,"841":1,"846":1}}],["scene",{"0":{"837":1,"1013":1,"1014":1},"1":{"267":1,"360":1,"515":2,"1013":1,"1014":1}}],["scenarios",{"1":{"220":1,"607":1,"768":1}}],["scathing",{"1":{"230":1}}],["scan",{"1":{"204":1,"728":1}}],["scalability",{"1":{"218":1,"219":1,"423":1,"454":1,"499":1,"631":1,"658":1,"681":1,"913":1,"914":1},"2":{"955":1}}],["scalable",{"0":{"955":1},"1":{"136":1,"220":1,"223":1,"483":1,"508":1,"527":1,"603":1,"606":1,"652":1,"660":1,"670":1,"708":1,"709":1,"713":1,"718":1,"719":1,"721":1,"751":1,"752":1,"763":1,"955":1,"973":1}}],["scaling",{"0":{"939":1,"972":1,"1007":1,"1008":1},"1":{"135":1,"155":1,"325":1,"471":1,"595":1,"939":1,"940":1,"1007":1,"1008":1}}],["scale",{"0":{"793":1,"813":1,"837":2},"1":{"0":1,"201":1,"216":1,"218":1,"219":1,"483":1,"813":1,"837":2,"949":1,"972":1}}],["screen",{"1":{"511":1}}],["screenshot",{"1":{"349":1}}],["screenshots",{"0":{"107":1,"349":1},"1":{"349":2}}],["scrolling",{"1":{"471":1}}],["scroll",{"0":{"450":2,"490":1},"1":{"450":1,"476":1,"490":3},"2":{"490":1}}],["scrum",{"0":{"871":1},"1":{"870":1,"871":1},"2":{"373":1,"871":1}}],["scripts",{"1":{"723":1}}],["scripting",{"1":{"228":1}}],["script",{"0":{"228":1}}],["scratch",{"0":{"165":1},"1":{"403":1}}],["shy",{"1":{"1049":1}}],["shuffle",{"1":{"725":1}}],["shawn",{"1":{"841":1}}],["shadow",{"0":{"455":1,"556":1},"1":{"455":1,"556":1,"922":1},"2":{"455":1}}],["shapes",{"1":{"577":1,"621":1,"665":1,"758":1,"834":1}}],["shaped",{"1":{"287":1,"706":1,"968":1}}],["shape",{"1":{"282":1,"377":1,"567":1,"801":1,"822":1}}],["shaping",{"1":{"231":1,"260":1,"277":1,"494":1}}],["shakeup",{"1":{"271":1}}],["shared",{"0":{"738":1},"1":{"63":1,"156":1,"442":1,"460":1,"483":1,"501":1,"544":1,"625":1,"688":1,"738":1,"790":1,"958":1,"1000":1,"1010":1,"1024":1}}],["shares",{"1":{"54":1,"55":1,"995":1,"1019":1,"1024":1,"1025":1,"1026":1,"1028":1,"1029":1,"1030":1,"1031":1,"1033":1,"1034":1,"1035":1,"1036":1,"1037":1,"1039":1,"1040":1,"1041":1,"1043":1,"1044":1,"1045":1,"1047":1,"1048":1,"1049":1,"1050":1},"2":{"868":1}}],["share",{"1":{"46":1,"93":1,"94":1,"95":1,"109":1,"154":1,"177":1,"264":1,"279":1,"293":1,"302":1,"327":1,"330":1,"332":1,"375":1,"638":1,"703":1,"826":1,"949":1,"959":1}}],["sharing",{"0":{"42":1,"309":1,"356":1,"460":1,"625":1,"959":1,"976":1,"1002":1},"1":{"46":1,"54":1,"110":1,"111":1,"155":1,"235":1,"289":1,"309":2,"336":1,"356":2,"704":1,"762":1,"813":1,"959":1,"972":1,"976":1,"991":1,"996":1,"1001":1,"1003":1,"1006":1,"1011":1,"1022":1,"1025":1,"1037":1,"1042":1,"1047":1,"1050":1},"2":{"327":1}}],["ship",{"1":{"344":1}}],["shipped",{"1":{"337":1,"902":1}}],["shipping",{"1":{"135":1,"344":1}}],["shining",{"1":{"335":1}}],["shifts",{"1":{"268":1,"277":1,"492":1,"973":1,"1012":1}}],["shift",{"1":{"221":1,"272":1,"276":1,"280":1,"291":1,"628":1,"629":1,"884":1}}],["shot",{"1":{"342":1}}],["shoe",{"1":{"337":1}}],["short",{"1":{"294":1,"359":1,"625":1,"767":1}}],["shortages",{"1":{"179":1}}],["shouldn",{"1":{"300":1,"349":1}}],["should",{"0":{"336":1,"470":1,"816":1,"821":1,"826":1,"829":1},"1":{"283":1,"316":1,"320":1,"611":1,"674":1,"675":1,"676":1,"677":1,"678":1,"703":1,"737":1,"829":1,"1029":1}}],["shopify",{"1":{"496":1}}],["shopping",{"1":{"375":1}}],["shop",{"1":{"118":1}}],["showing",{"1":{"406":1,"702":1,"755":1,"811":1,"839":1,"842":1}}],["showcasing",{"1":{"223":1,"257":1,"263":1,"913":1,"1004":1}}],["showcase",{"0":{"46":1,"631":1},"1":{"327":1},"2":{"46":1}}],["show",{"0":{"991":1},"1":{"18":1,"71":1,"332":1,"347":1,"350":1,"353":1,"367":1,"406":1,"413":1,"530":1,"987":1,"991":1}}],["shows",{"1":{"9":1,"10":1,"11":1,"12":1,"592":1,"600":1,"620":1,"827":1,"881":1}}],["sheet",{"0":{"840":1},"1":{"840":1}}],["sheds",{"1":{"491":1}}],["shed",{"1":{"277":1}}],["shell",{"0":{"928":1,"932":1},"1":{"228":1,"928":1,"932":1}}],["she",{"1":{"82":1}}],["si",{"0":{"577":1},"1":{"577":1}}],["sizes",{"1":{"433":1,"619":1}}],["size",{"0":{"808":1},"1":{"403":1,"474":1,"595":1,"808":1}}],["simultaneously",{"1":{"498":1}}],["simulation",{"0":{"424":1},"1":{"424":1}}],["similar",{"1":{"409":1,"480":1,"959":1,"980":1}}],["similarity",{"1":{"398":1}}],["simply",{"1":{"439":1,"821":1,"831":1}}],["simplify",{"1":{"290":1,"388":1,"478":1,"659":1,"793":1}}],["simplified",{"1":{"178":1,"462":1}}],["simplifies",{"1":{"157":1,"173":1,"401":1,"402":1,"459":1,"715":1,"722":1,"723":1,"958":1}}],["simplicity",{"0":{"925":1,"934":1},"1":{"214":1,"216":1,"217":1,"220":1,"761":1,"773":1}}],["simpler",{"1":{"694":1,"784":1}}],["simple",{"0":{"538":1,"623":1,"645":1,"648":1,"788":1},"1":{"150":1,"152":1,"160":1,"180":1,"184":1,"349":1,"352":1,"373":1,"470":1,"518":1,"546":1,"588":1,"689":1,"717":1,"749":1,"825":1,"840":1,"843":1,"845":1,"879":1,"908":1,"967":1,"991":1}}],["sidebar",{"0":{"996":1},"1":{"996":1}}],["side",{"1":{"241":1,"306":1,"466":1,"485":1,"491":1,"506":2,"507":1,"640":1},"2":{"485":1}}],["sidegig",{"0":{"47":1}}],["sits",{"1":{"982":1}}],["site",{"1":{"495":1,"506":1}}],["sites",{"1":{"204":1,"406":1}}],["situations",{"1":{"543":1,"703":1,"743":1,"812":1}}],["situation",{"1":{"40":1}}],["six",{"0":{"384":1,"847":1},"1":{"124":1,"847":1}}],["sixth",{"1":{"110":1}}],["sixteenth",{"1":{"104":1}}],["signs",{"1":{"948":1}}],["signatures",{"1":{"587":1}}],["signals",{"1":{"415":1,"948":1}}],["significantly",{"1":{"208":1,"431":1,"625":1,"878":1}}],["significant",{"1":{"199":1,"270":1,"333":1,"445":1,"460":1}}],["sign",{"0":{"81":1,"897":1}}],["signed",{"1":{"3":1}}],["singapore",{"0":{"157":1,"173":1,"368":1,"996":1},"1":{"157":1,"173":1,"368":1,"996":1}}],["singleton",{"0":{"467":1,"615":1},"1":{"467":1,"615":1,"1011":1}}],["single",{"1":{"43":1,"423":2,"466":1,"486":1,"518":1,"538":1,"691":1,"693":1,"740":1,"760":1,"763":1,"779":1,"894":1,"906":1}}],["since",{"1":{"44":1,"93":1,"102":1,"442":1,"896":1}}],["silence",{"1":{"36":1}}],["spontaneous",{"1":{"1037":1}}],["sports",{"1":{"274":1}}],["spite",{"1":{"892":1}}],["spies",{"1":{"787":1}}],["spirit",{"0":{"1047":1},"1":{"67":1,"1025":1,"1031":1}}],["spgroup",{"1":{"368":1}}],["splits",{"1":{"725":1}}],["splitting",{"0":{"476":1,"505":1},"1":{"476":1,"505":2,"512":1,"619":1}}],["split",{"0":{"655":1},"1":{"338":1,"655":1,"1015":1}}],["spa",{"0":{"901":1},"1":{"901":1}}],["spas",{"1":{"894":1}}],["spark",{"1":{"718":1,"821":1,"860":1,"863":1}}],["sparkle",{"1":{"286":1,"1000":1}}],["sparkles",{"0":{"286":1}}],["spacing",{"0":{"379":1,"393":1},"1":{"379":2,"393":1,"619":1}}],["spaces",{"1":{"36":1}}],["space",{"0":{"741":1,"806":1,"823":1},"1":{"36":1,"202":1,"260":1,"288":1,"311":2,"452":1,"635":1}}],["span",{"1":{"181":1}}],["sp",{"1":{"119":1}}],["sprint",{"0":{"66":1,"644":1},"1":{"66":1,"644":2,"766":1,"771":1}}],["speculating",{"0":{"878":1},"1":{"878":1}}],["specialist",{"2":{"1045":1}}],["specialized",{"1":{"361":1,"705":1}}],["specifics",{"1":{"832":1}}],["specifications",{"1":{"697":1}}],["specifically",{"1":{"200":1}}],["specific",{"1":{"36":1,"151":1,"192":1,"284":1,"300":1,"428":1,"455":1,"728":1,"745":1}}],["speech",{"1":{"274":1}}],["speeding",{"0":{"532":1},"1":{"749":1}}],["speeds",{"1":{"389":1,"469":1,"595":1}}],["speed",{"1":{"230":1,"452":1,"480":1,"481":1,"495":1,"633":1,"668":1,"700":1,"731":1,"898":1,"922":1,"1006":1,"1041":1}}],["spent",{"1":{"100":1}}],["spending",{"1":{"339":1,"823":1}}],["spend",{"0":{"45":1,"823":1}}],["sticking",{"1":{"945":1}}],["still",{"1":{"98":2,"888":1,"892":1,"960":1}}],["styling",{"1":{"510":1}}],["styles",{"0":{"516":1},"1":{"390":1,"516":1,"571":1,"702":1,"733":1,"902":1}}],["style",{"0":{"185":1},"1":{"465":1,"474":1,"510":1,"796":1,"800":1,"941":1,"990":1}}],["steroids",{"0":{"931":1}}],["stellar",{"1":{"594":1}}],["steadiness",{"1":{"799":1}}],["steadily",{"1":{"182":1}}],["steady",{"1":{"207":1}}],["stepping",{"1":{"226":1}}],["steps",{"1":{"150":1,"343":1,"352":1,"892":1}}],["step",{"1":{"61":2,"66":1,"291":1,"304":2,"348":2,"369":2,"427":2,"429":2,"431":1,"441":1,"487":2,"546":2,"553":2,"621":2,"623":1,"657":2,"732":2,"898":1,"960":2,"1038":1}}],["stop",{"1":{"716":1}}],["stops",{"1":{"543":1}}],["storm",{"1":{"892":1}}],["stored",{"1":{"637":1}}],["store",{"0":{"855":1},"1":{"418":1,"420":1,"477":1,"729":1,"747":1,"794":1,"959":1}}],["stores",{"0":{"166":1,"721":1},"1":{"165":1,"166":1,"782":1,"971":1}}],["storing",{"0":{"418":1},"1":{"437":1,"708":1,"821":1,"944":1}}],["stories",{"0":{"743":1,"835":1},"1":{"117":1,"378":1,"735":1,"743":2,"766":1,"835":1,"843":1,"992":1}}],["storage",{"1":{"253":1,"477":1,"485":1,"548":1,"560":1,"710":1,"717":1,"719":1,"721":1},"2":{"485":1}}],["storytelling",{"0":{"841":1},"1":{"832":1,"836":1,"948":1,"993":1}}],["storybook",{"2":{"504":1}}],["story",{"0":{"443":1,"771":1,"831":1,"832":1,"936":1,"993":1},"1":{"89":1,"372":1,"771":1,"831":1,"832":1,"834":1,"839":1,"840":1,"841":1,"844":1,"846":1,"1036":1,"1043":1},"2":{"1043":1},"4":{"234":1,"562":1,"563":1,"564":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"936":1,"993":1}}],["stocks",{"1":{"588":1}}],["stock",{"0":{"167":1,"994":1},"1":{"45":1,"167":1,"720":1,"725":1,"994":1}}],["stubs",{"1":{"787":1}}],["stun",{"1":{"527":1}}],["stuart",{"1":{"315":1}}],["studies",{"1":{"899":1,"961":1}}],["studio",{"1":{"102":1,"727":1}}],["study",{"0":{"21":1,"246":1,"462":1,"887":1,"955":1,"1000":1},"1":{"21":1,"236":1,"244":1,"246":1,"248":2,"252":1,"267":1,"462":1,"1000":1},"2":{"52":1,"53":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"319":1,"936":1},"4":{"52":1,"53":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"319":1}}],["stuffing",{"1":{"412":1}}],["stuff",{"1":{"63":1}}],["string",{"1":{"916":2}}],["strings",{"1":{"619":1}}],["strict",{"1":{"569":1,"644":1}}],["strictmode",{"1":{"479":1}}],["strive",{"1":{"95":1}}],["struggles",{"1":{"843":1}}],["struggle",{"0":{"627":1},"1":{"627":1}}],["struggling",{"1":{"344":1}}],["structuring",{"1":{"972":1}}],["structures",{"0":{"837":1},"1":{"284":1,"606":1,"630":1,"635":1,"666":1,"837":1,"847":1},"2":{"211":1,"630":1}}],["structured",{"0":{"415":1},"1":{"199":1,"272":1,"282":1,"415":2,"426":1,"572":1,"792":1,"975":1}}],["structure",{"0":{"96":1,"732":1,"797":1,"803":1,"959":1},"1":{"39":1,"48":1,"50":1,"308":1,"550":1,"593":1,"635":1,"710":1,"758":1,"797":1,"962":1},"2":{"635":1,"959":1,"976":1}}],["structs",{"1":{"227":1}}],["struct",{"0":{"227":1}}],["strength",{"0":{"829":1},"1":{"405":1}}],["strengths",{"1":{"55":1,"214":1,"218":1,"442":1,"804":1,"952":1,"1043":1}}],["stress",{"1":{"385":1}}],["street",{"0":{"258":1},"1":{"258":1}}],["streamlining",{"0":{"887":1}}],["streamline",{"0":{"244":1,"625":1},"1":{"216":1,"250":1,"415":1,"421":1,"628":1,"887":1,"933":1}}],["stream",{"0":{"772":1},"1":{"527":1,"690":1,"762":1,"772":1}}],["streaming",{"0":{"527":1,"528":1,"690":1,"957":1},"1":{"527":1,"690":1,"957":1},"2":{"527":1}}],["streams",{"1":{"246":1}}],["strongly",{"1":{"969":1}}],["stronger",{"1":{"178":1,"836":1}}],["strong",{"1":{"119":1,"136":1,"138":1,"216":1,"219":1,"275":1,"280":1,"291":1,"305":1,"394":1,"547":1,"568":1,"829":1,"831":1,"832":1,"835":1,"993":1}}],["strategy",{"0":{"239":1,"251":1,"508":1,"609":1,"1010":1},"1":{"245":1,"251":2,"423":1,"588":2,"609":1,"975":1},"2":{"609":1}}],["strategies",{"0":{"326":1,"433":1,"506":1,"509":1,"576":1,"878":1},"1":{"205":1,"218":1,"238":1,"239":1,"243":1,"299":1,"407":1,"411":1,"412":1,"433":1,"506":1,"508":1,"634":1,"668":1,"672":1,"875":1,"878":2,"882":1,"908":1,"964":1,"984":1,"985":1,"1002":1,"1004":1,"1010":1}}],["strategic",{"1":{"115":1,"155":1,"325":1,"351":1,"851":1,"1018":1}}],["straightforward",{"1":{"36":1,"439":1}}],["stance",{"0":{"968":1},"1":{"706":1,"968":1}}],["standup",{"0":{"373":1}}],["standardization",{"2":{"638":1}}],["standardized",{"1":{"626":1}}],["standard",{"0":{"216":1,"551":1,"638":1},"1":{"216":1,"217":1,"455":1,"551":1}}],["standards",{"0":{"117":1,"1034":1},"1":{"60":1,"117":1,"248":1,"290":1,"374":1,"504":1,"521":1,"701":1,"919":1,"1034":1},"2":{"1034":1}}],["stands",{"1":{"202":1}}],["stand",{"0":{"32":1},"1":{"328":1}}],["stakeholders",{"1":{"958":1,"988":1}}],["stakes",{"1":{"842":1}}],["stake",{"1":{"598":1}}],["staking",{"0":{"350":1,"367":1},"1":{"367":1}}],["statistical",{"1":{"730":1}}],["statistics",{"0":{"730":1}}],["static",{"1":{"461":1,"506":1,"795":1}}],["status",{"1":{"697":1,"755":1,"768":1}}],["stateful",{"0":{"795":1},"1":{"795":1,"962":1}}],["stateless",{"0":{"795":1},"1":{"795":1,"962":1}}],["statecharts",{"1":{"694":1}}],["statements",{"1":{"991":1}}],["statement",{"1":{"605":1,"780":1,"951":1}}],["states",{"1":{"470":1,"607":2,"622":1,"683":2,"684":1,"687":1,"691":1,"694":2,"695":1,"791":1}}],["state",{"0":{"110":1,"456":1,"488":1,"508":1,"519":1,"607":1,"609":1,"683":1,"684":1,"694":1,"695":1,"990":1},"1":{"106":1,"110":1,"124":1,"456":1,"459":1,"468":1,"470":1,"488":1,"496":1,"507":1,"508":1,"519":1,"607":2,"616":1,"630":1,"655":1,"683":2,"684":1,"686":2,"687":1,"691":2,"694":2,"695":1,"709":1,"795":1,"899":1,"910":1,"956":1,"978":3,"990":1,"1001":1},"2":{"215":1,"456":2,"470":1,"488":1}}],["stable",{"1":{"428":1,"774":1}}],["stability",{"1":{"203":1,"428":1,"1045":1}}],["staffing",{"1":{"179":1}}],["stacks",{"1":{"264":1,"631":1}}],["stack",{"0":{"136":1,"203":1,"574":1},"1":{"136":2,"291":1,"492":1,"496":1,"543":1,"574":1,"576":1,"641":1,"896":1}}],["staged",{"1":{"313":1}}],["stage",{"0":{"93":1,"95":1},"2":{"163":1,"164":1,"173":1}}],["stages",{"0":{"92":1},"1":{"92":1,"358":1,"443":1,"448":1,"800":1}}],["stark",{"2":{"591":1}}],["starknet",{"0":{"591":1},"1":{"591":2}}],["stars",{"1":{"335":1}}],["star",{"1":{"56":1}}],["starting",{"1":{"125":1,"631":1,"857":1,"1044":1}}],["start",{"0":{"742":1,"757":1},"1":{"72":1,"421":1,"495":1,"644":1,"757":1,"793":1}}],["starts",{"0":{"815":1},"1":{"35":1,"335":1,"815":1,"894":1}}],["started",{"0":{"35":1,"380":1},"1":{"65":1,"182":1,"337":1,"546":1,"980":1}}],["startups",{"1":{"182":1,"264":1}}],["startup",{"1":{"24":1,"67":2,"139":1,"173":1,"177":1,"270":1,"368":1},"2":{"67":1,"157":1,"159":1,"166":1,"177":1,"181":1,"182":1,"868":1,"911":1}}],["stays",{"1":{"123":1,"281":1,"316":1}}],["staying",{"1":{"96":1,"203":1,"521":1,"765":1}}],["stay",{"1":{"52":1,"163":1,"190":1,"207":1,"224":1,"1015":1,"1016":1,"1026":1,"1030":1}}],["sargable",{"1":{"975":1},"2":{"975":1}}],["saragable",{"0":{"975":1}}],["sanity",{"1":{"924":1}}],["sandbox",{"2":{"453":1}}],["saturation",{"0":{"808":1},"1":{"808":1,"816":1}}],["satellites",{"1":{"713":1}}],["satisfy",{"1":{"1046":1}}],["satisfying",{"1":{"392":1}}],["satisfaction",{"1":{"424":1,"827":1,"881":1}}],["sample",{"0":{"808":1},"1":{"808":1}}],["sampling",{"1":{"711":1}}],["same",{"0":{"921":1},"1":{"123":1,"202":1,"351":1,"489":1}}],["sake",{"1":{"470":1}}],["savings",{"1":{"316":1}}],["saving",{"0":{"878":1},"1":{"284":1,"452":1,"766":1,"878":1}}],["saves",{"1":{"525":1}}],["save",{"1":{"15":1,"169":1,"180":1}}],["saas",{"1":{"270":1}}],["sacrificing",{"1":{"203":1}}],["saying",{"1":{"188":1}}],["safest",{"1":{"794":1}}],["safer",{"1":{"545":1,"797":1,"941":1}}],["safeguarding",{"1":{"886":1}}],["safeguard",{"1":{"521":1}}],["safely",{"1":{"405":1,"543":1,"747":1}}],["safety",{"0":{"210":1},"1":{"210":1,"405":1,"790":1,"941":1}}],["safe",{"1":{"96":1,"653":1,"698":1,"825":1}}],["salience",{"0":{"706":1}}],["salaries",{"1":{"274":1}}],["salary",{"0":{"73":1,"359":1}}],["salesforce",{"0":{"1018":1},"1":{"1018":1},"2":{"1018":1}}],["sales",{"0":{"5":1},"1":{"5":1,"166":1,"192":1,"632":1,"1018":2}}],["saigon",{"1":{"44":1,"131":1,"311":3}}],["suddenly",{"0":{"948":1}}],["suspenseful",{"1":{"843":1}}],["sustainable",{"1":{"335":1}}],["sufficient",{"1":{"439":1}}],["summit",{"2":{"368":1}}],["summarizing",{"1":{"355":1,"865":1}}],["summarizer",{"0":{"115":1,"625":1},"1":{"625":1}}],["summaries",{"1":{"115":1,"625":1,"883":1}}],["summary",{"1":{"103":1,"116":1,"355":1}}],["suitable",{"1":{"588":1}}],["suitability",{"1":{"220":1}}],["suite",{"1":{"171":1,"185":1,"628":1,"629":1}}],["succeeds",{"1":{"377":1}}],["successful",{"0":{"819":1},"1":{"119":1,"662":1,"761":1,"773":1,"955":1,"967":1}}],["successfully",{"1":{"72":1,"223":1}}],["success",{"0":{"936":1},"1":{"24":1,"250":1,"340":1,"371":1,"628":1,"629":1,"800":1,"870":1,"873":1}}],["such",{"1":{"201":1,"269":1,"278":1,"411":1,"415":1,"433":1,"480":1,"489":1,"543":1,"892":1,"997":1,"1003":1}}],["suggested",{"1":{"111":1,"1001":1}}],["suggests",{"1":{"36":1}}],["supplier",{"1":{"656":1}}],["supporting",{"1":{"746":1}}],["supportive",{"1":{"28":1,"1019":1,"1020":1,"1031":1,"1040":1,"1042":1}}],["supports",{"1":{"202":1,"497":1}}],["support",{"0":{"999":1,"1040":1},"1":{"64":1,"138":1,"179":1,"214":1,"216":1,"219":1,"220":1,"224":1,"306":1,"472":1,"494":1,"613":1,"652":1,"668":1,"762":1,"764":1,"781":1,"836":1,"980":1,"999":1}}],["supervised",{"1":{"434":1,"441":1}}],["supervisor",{"1":{"103":1,"244":1},"2":{"440":1}}],["supervisors",{"0":{"103":1,"440":1},"1":{"103":1,"440":2}}],["supercomputers",{"0":{"257":1}}],["super",{"0":{"160":1}}],["subtests",{"1":{"788":1}}],["subtle",{"1":{"530":1,"948":1}}],["subdomains",{"1":{"753":1}}],["submission",{"1":{"718":1}}],["submit",{"0":{"2":1}}],["subjective",{"0":{"706":1}}],["subjects",{"1":{"671":1}}],["sub",{"1":{"439":1}}],["subsets",{"1":{"728":1}}],["substantial",{"0":{"830":1}}],["substance",{"1":{"230":1}}],["substitution",{"1":{"693":1}}],["subscribe",{"1":{"528":1}}],["subscriber",{"1":{"78":1}}],["subscription",{"0":{"555":1},"1":{"106":1,"555":1},"2":{"555":1}}],["surfaces",{"0":{"907":1}}],["surprise",{"0":{"863":1},"1":{"831":1,"909":1}}],["surprisingly",{"1":{"495":1}}],["surprising",{"1":{"118":1,"120":1,"855":1,"863":1}}],["surge",{"1":{"258":1,"264":1,"449":1}}],["surgeon",{"1":{"157":1}}],["survey",{"1":{"200":1}}],["surrounded",{"1":{"36":1}}],["surely",{"1":{"470":1}}],["sure",{"1":{"15":1,"63":1,"337":1}}],["semaphores",{"1":{"914":1}}],["semantics",{"1":{"463":1,"847":1}}],["semantically",{"1":{"409":1}}],["semantic",{"1":{"409":1}}],["sequence",{"1":{"834":1}}],["sequencing",{"0":{"834":1},"1":{"993":1}}],["sequential",{"1":{"636":2},"2":{"636":2}}],["sequentially",{"1":{"439":1}}],["segregation",{"1":{"693":1}}],["se",{"0":{"566":1},"1":{"566":1}}],["seo",{"1":{"387":1},"2":{"987":1}}],["seventh",{"1":{"1011":1}}],["seventeenth",{"1":{"106":1}}],["several",{"1":{"335":1,"450":1}}],["sep",{"0":{"1009":1}}],["separating",{"1":{"803":1}}],["separate",{"1":{"241":1,"512":1,"612":1}}],["september",{"0":{"264":1,"271":1,"493":1},"1":{"90":1,"1009":1}}],["seem",{"1":{"285":1,"439":1}}],["seek",{"1":{"275":1,"566":1,"664":1}}],["seeking",{"1":{"138":1,"853":1,"951":1}}],["see",{"1":{"269":1,"278":1,"283":1,"309":1,"331":1,"346":1,"430":1,"432":1,"437":1,"683":1,"735":1}}],["seeing",{"1":{"269":1,"278":1}}],["seed",{"1":{"173":1}}],["sea",{"0":{"257":1},"1":{"257":1}}],["seaborn",{"1":{"251":1}}],["seasoned",{"1":{"203":1}}],["seamlessly",{"1":{"497":1}}],["seamless",{"0":{"497":1},"1":{"170":1,"400":1,"404":1,"637":1,"641":1,"666":1,"959":1}}],["search",{"0":{"108":1,"166":1,"222":1,"319":1,"432":1,"640":1,"716":1},"1":{"108":1,"166":2,"222":1,"230":1,"319":1,"432":5,"640":2,"716":2,"979":2,"987":1,"1017":1},"2":{"432":1,"640":2}}],["serde",{"1":{"710":1}}],["seriously",{"1":{"638":1}}],["series",{"0":{"645":1,"648":1,"649":1,"650":1,"657":1},"1":{"107":1,"636":1}}],["service",{"0":{"161":1,"497":1,"650":1,"692":1},"1":{"161":1,"222":1,"270":1,"326":1,"449":1,"497":2,"650":1,"660":1,"692":1,"732":1,"1018":1},"2":{"497":1}}],["services",{"0":{"174":1,"535":1,"617":1,"663":1,"749":1,"930":1},"1":{"138":1,"172":1,"236":1,"237":1,"270":1,"436":1,"617":1,"648":1,"663":2,"749":1,"752":1,"930":1}}],["servers",{"0":{"626":1,"965":1},"1":{"469":1,"606":1,"963":1,"965":1}}],["serverless",{"1":{"270":1,"271":1,"757":1},"2":{"270":1}}],["server",{"0":{"229":1,"456":1,"466":1,"500":1},"1":{"49":1,"206":1,"207":1,"229":1,"241":1,"466":1,"493":1,"506":1,"518":1,"626":1,"640":1,"982":1},"2":{"466":1}}],["serve",{"1":{"43":1,"91":1,"190":1,"351":1,"523":1}}],["selenium",{"0":{"213":1},"1":{"213":2}}],["selects",{"1":{"609":1}}],["selection",{"0":{"417":1},"1":{"809":1}}],["selecting",{"1":{"203":1,"433":1}}],["select",{"0":{"891":1},"1":{"324":1}}],["selected",{"1":{"105":1,"106":1,"114":1,"996":1}}],["self",{"0":{"434":1,"979":1,"1035":1},"1":{"56":1,"281":1,"417":1,"434":1,"493":1,"574":1,"576":1,"634":1,"670":1,"825":1,"1025":1}}],["sessions",{"1":{"625":1}}],["session",{"0":{"397":1},"1":{"104":1,"106":1,"112":1,"113":1,"116":1,"234":1,"235":1,"999":1,"1002":1,"1003":1,"1007":1}}],["sets",{"1":{"224":1,"708":1,"729":1}}],["settings",{"1":{"218":1,"354":1,"370":1,"623":1,"657":1,"829":1,"844":1}}],["setting",{"0":{"316":1},"1":{"213":1,"304":1,"511":1,"846":1,"976":2}}],["settle",{"1":{"66":1}}],["set",{"0":{"347":1,"366":1,"370":1},"1":{"200":1,"347":1,"355":2,"497":1,"635":3,"647":1,"649":1,"718":1,"751":1,"769":1,"872":1}}],["setel",{"0":{"160":1},"1":{"160":1}}],["setup",{"0":{"193":1,"252":1,"401":1,"476":1,"564":1,"933":1},"1":{"1":1,"61":1,"193":1,"284":1,"347":1,"354":1,"370":1,"441":1,"464":1,"481":1,"564":1,"645":1,"690":1,"753":1,"931":1,"933":1}}],["secret",{"0":{"794":1},"1":{"868":1}}],["secrets",{"0":{"237":1},"1":{"747":2,"794":2}}],["sectors",{"1":{"446":1,"449":1}}],["sector",{"0":{"119":1}}],["section",{"1":{"44":1,"220":1,"564":1}}],["seconds",{"1":{"53":1}}],["second",{"0":{"63":1,"205":1,"477":1},"1":{"51":1,"117":1,"123":1,"205":1,"234":1,"243":1,"286":1,"477":1,"674":1}}],["securing",{"0":{"626":1},"1":{"911":1}}],["securities",{"1":{"167":1}}],["security",{"0":{"31":1,"117":1,"520":1,"521":1,"638":1,"911":1,"912":1,"941":1,"965":1},"1":{"117":1,"238":1,"246":1,"248":1,"411":1,"495":1,"520":1,"521":1,"527":1,"551":1,"633":1,"638":2,"660":1,"697":1,"699":1,"700":1,"882":1,"885":1,"912":2,"939":1,"940":1,"941":1,"961":1},"2":{"31":1,"237":1,"238":1,"411":1,"520":1,"521":1,"626":1,"638":1,"911":1,"912":1,"965":1},"4":{"520":1,"521":1,"911":1,"912":1}}],["securely",{"1":{"237":1,"375":1,"747":1,"794":1,"965":1}}],["secure",{"0":{"237":1,"539":1},"1":{"31":3,"136":1,"176":1,"521":1,"539":1,"590":1,"594":1,"596":1,"603":1,"617":1,"626":1,"657":1,"696":1,"698":1,"701":1,"707":1,"781":1,"825":1,"963":1}}],["sentences",{"1":{"990":1}}],["sentiment",{"1":{"406":1}}],["sent",{"1":{"223":1,"626":1}}],["sender",{"1":{"613":1}}],["send",{"1":{"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"191":1,"304":1}}],["sensors",{"1":{"575":2}}],["sensory",{"1":{"566":1}}],["sensible",{"1":{"978":1}}],["sensitivity",{"1":{"579":1}}],["sensitive",{"1":{"7":1,"45":1}}],["sensing",{"0":{"566":1,"575":1,"577":1},"1":{"577":1}}],["sensemaking",{"0":{"946":1,"947":1},"1":{"742":1,"876":1,"946":1,"947":1},"4":{"810":1,"811":1,"946":1,"947":1,"948":1}}],["sense",{"0":{"765":1},"1":{"44":2,"288":1,"736":1,"765":1}}],["senior",{"0":{"1041":1},"1":{"28":1,"138":1,"275":1,"1022":1,"1041":1},"2":{"1041":1}}],["s",{"0":{"80":1,"101":1,"104":1,"109":1,"114":1,"160":1,"168":1,"170":1,"172":1,"174":1,"231":1,"258":2,"259":2,"260":2,"261":1,"327":1,"412":1,"434":1,"599":1,"642":1,"758":1,"825":1,"840":1,"843":1,"905":1,"927":1,"987":1,"996":1,"1005":1},"1":{"6":1,"14":1,"15":1,"33":1,"39":1,"42":1,"49":1,"62":2,"63":1,"69":1,"73":1,"76":1,"84":1,"85":1,"87":1,"90":1,"92":1,"93":1,"96":1,"99":1,"100":1,"101":1,"102":1,"104":1,"106":1,"109":1,"113":2,"114":1,"123":2,"152":1,"154":1,"155":1,"161":1,"169":1,"188":1,"190":1,"191":1,"203":1,"204":2,"207":1,"212":2,"213":1,"214":2,"216":1,"218":1,"219":1,"220":1,"221":2,"222":1,"223":2,"224":2,"228":1,"230":2,"231":1,"232":1,"258":1,"261":1,"271":2,"273":3,"274":4,"275":3,"276":2,"277":1,"283":1,"287":1,"305":1,"309":1,"323":1,"327":1,"330":1,"332":2,"334":1,"338":2,"340":1,"342":1,"343":1,"348":1,"360":1,"363":1,"364":1,"365":1,"368":1,"373":1,"377":1,"380":1,"400":1,"405":1,"412":2,"413":1,"424":2,"427":1,"432":1,"436":1,"437":1,"438":1,"453":1,"477":2,"480":1,"492":2,"493":1,"494":2,"495":2,"496":2,"501":1,"527":2,"538":1,"544":1,"545":1,"570":1,"572":1,"586":1,"591":1,"594":1,"595":1,"596":1,"613":1,"616":1,"623":1,"625":1,"635":2,"637":1,"656":1,"671":1,"708":1,"752":1,"758":2,"761":1,"779":1,"796":1,"799":1,"801":1,"806":1,"825":1,"831":1,"838":1,"840":1,"841":1,"843":1,"844":1,"847":1,"888":1,"894":1,"905":1,"918":1,"925":1,"926":1,"934":1,"939":1,"983":1,"993":1,"994":1,"995":1,"996":1,"998":1,"1005":5,"1006":1,"1007":1,"1008":1,"1015":4,"1016":1,"1017":1,"1031":1,"1032":1,"1033":1,"1044":1},"2":{"598":1}}],["smd",{"1":{"658":1}}],["smoother",{"1":{"746":1,"754":1,"987":1,"1018":1}}],["smooth",{"1":{"286":1,"371":1,"373":1,"386":1,"619":1,"628":1,"644":1,"661":1,"894":1,"972":1}}],["smoothly",{"1":{"1":1,"39":1,"622":1,"744":1}}],["smarkform",{"1":{"205":1}}],["smarter",{"0":{"180":1},"1":{"63":1,"166":1,"438":1,"878":1,"1018":1}}],["smart",{"0":{"6":1,"169":1,"586":1,"597":1,"908":1},"1":{"180":1,"283":1,"546":1,"582":1,"586":1,"590":1,"596":1,"597":1,"603":1,"633":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"856":1,"925":1,"934":1,"940":1,"941":1},"2":{"597":1},"4":{"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"906":1,"907":1,"908":1}}],["smaller",{"1":{"270":1,"439":1,"601":1}}],["small",{"0":{"171":1,"837":1},"1":{"171":1,"201":1,"330":1,"403":1,"623":1,"657":1,"774":1,"837":1,"997":1}}],["soon",{"1":{"862":1}}],["societal",{"1":{"818":1}}],["social",{"0":{"13":1,"460":1},"1":{"13":1,"460":1},"2":{"460":1}}],["sony",{"1":{"785":1}}],["sonnet",{"0":{"255":1},"1":{"255":1,"272":1,"274":1}}],["sops",{"0":{"747":1},"1":{"747":1}}],["sophisticated",{"1":{"411":1}}],["soft",{"1":{"518":1,"667":1,"709":1}}],["software",{"0":{"103":1,"118":1,"120":1,"125":1,"130":1,"214":1,"395":1,"637":1,"646":1,"658":1,"662":1,"665":1,"667":1,"668":1,"689":1,"770":1,"1029":1},"1":{"31":1,"32":1,"58":1,"65":1,"94":1,"95":1,"103":2,"108":1,"118":1,"120":1,"121":1,"123":1,"124":1,"125":2,"159":1,"162":1,"182":1,"214":1,"216":1,"217":1,"219":1,"232":1,"268":1,"270":1,"272":1,"274":1,"277":1,"297":1,"302":1,"333":1,"344":1,"364":1,"395":2,"399":1,"401":1,"404":1,"454":1,"502":2,"520":1,"523":1,"608":1,"637":2,"638":1,"641":1,"646":2,"647":1,"658":1,"659":1,"662":2,"664":1,"665":2,"667":1,"668":1,"669":1,"679":1,"681":1,"688":1,"689":1,"695":1,"715":1,"727":1,"746":1,"748":1,"758":1,"759":1,"761":2,"764":1,"770":2,"772":1,"774":1,"775":1,"778":1,"783":1,"787":1,"802":1,"803":1,"827":1,"872":1,"882":1,"920":1,"956":2,"958":2,"977":1,"985":1,"988":1,"997":1,"1029":2,"1041":1},"2":{"109":1,"125":1,"213":1,"320":1,"614":2,"615":1,"958":2,"972":1,"1023":1,"1025":1,"1029":1}}],["sora",{"0":{"259":1}}],["sorted",{"1":{"729":1}}],["sorts",{"1":{"654":1}}],["sorting",{"0":{"397":2},"1":{"397":1,"654":1},"2":{"654":1}}],["sortable",{"1":{"224":1}}],["sort",{"0":{"105":1,"113":1,"654":1,"726":1},"1":{"105":1,"113":2,"654":4,"726":1}}],["southeast",{"1":{"165":1,"360":1,"1012":1}}],["sourcing",{"0":{"608":1,"682":1},"1":{"144":1,"608":1,"656":1,"682":1,"690":1},"2":{"608":1}}],["sources",{"1":{"888":1,"892":1}}],["source",{"0":{"64":1,"262":1,"408":1},"1":{"64":1,"166":1,"222":1,"229":1,"262":1,"291":1,"408":1,"417":1,"429":1,"441":1,"537":1,"596":1,"670":1,"763":1,"1031":1},"2":{"64":1,"408":1}}],["solves",{"1":{"585":1,"995":1}}],["solve",{"1":{"439":1,"518":1,"590":1,"688":1,"694":1,"702":1,"711":1,"784":1,"967":1}}],["solved",{"1":{"285":1}}],["solving",{"0":{"702":1},"1":{"314":1,"384":1,"423":1,"432":1,"664":1,"702":1,"706":1,"884":1,"953":1}}],["solidity",{"1":{"696":1,"698":1,"699":1}}],["solidifying",{"1":{"207":1}}],["solid",{"0":{"335":1,"693":1},"1":{"693":1,"931":1,"932":1}}],["solicitation",{"1":{"3":1}}],["solana",{"0":{"261":1,"547":1,"549":1,"550":1,"551":2,"552":1,"919":1},"1":{"116":1,"261":1,"546":1,"547":1,"548":2,"549":1,"550":1,"551":3,"552":2,"919":2},"2":{"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"919":1},"4":{"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"919":1}}],["solutions",{"0":{"162":1,"176":1,"939":1},"1":{"67":1,"184":1,"203":1,"224":1,"314":1,"422":1,"595":1,"634":1,"641":1,"652":1,"669":1,"708":1,"754":1,"815":1,"820":1,"823":1,"826":1,"887":1,"907":1,"939":1,"967":1,"973":1,"999":1}}],["solution",{"0":{"203":1,"612":1,"715":1,"743":1,"812":1},"1":{"53":1,"164":1,"180":1,"248":1,"254":1,"470":1,"518":1,"615":1,"623":1,"888":1,"913":1,"969":1}}],["sol",{"0":{"52":1},"1":{"52":1}}],["so",{"1":{"7":1,"45":1,"202":1,"299":1,"328":1,"338":1,"351":1,"405":1,"453":1,"631":1,"824":1,"907":1}}],["something",{"1":{"343":1,"344":1,"543":1,"833":1}}],["sometimes",{"1":{"40":1,"442":1,"881":1}}],["somehow",{"1":{"328":1,"338":1}}],["someone",{"1":{"123":1}}],["some",{"0":{"915":1},"1":{"1":1,"44":1,"269":1,"278":1,"342":1,"445":1,"450":1,"470":1,"471":1,"631":1,"879":1,"892":1}}],["fsm",{"2":{"519":1}}],["fbsc",{"0":{"313":1},"1":{"321":1}}],["fleeting",{"0":{"862":1},"1":{"861":1,"862":1}}],["flexible",{"1":{"152":1,"180":1,"211":1,"326":1,"487":1,"524":1,"596":1,"652":1,"682":1,"692":1,"693":1,"709":1,"713":1,"716":1,"782":1,"796":1,"798":1,"904":1,"980":1}}],["flexibility",{"1":{"58":1,"318":1,"404":1,"466":1,"497":1,"544":1,"613":1,"685":1,"960":1}}],["fluency",{"1":{"847":1}}],["flutter",{"0":{"795":1},"1":{"795":1,"961":1,"962":1}}],["flicker",{"1":{"477":1}}],["flickers",{"0":{"477":1}}],["flaherty",{"1":{"993":1}}],["flakes",{"0":{"929":1},"1":{"921":1,"929":1}}],["flawlessly",{"1":{"337":1}}],["flags",{"0":{"331":1,"746":1},"1":{"331":1,"746":1,"748":1,"797":1}}],["flat",{"1":{"202":1}}],["flows",{"1":{"793":1}}],["flow",{"0":{"994":1},"1":{"242":1,"330":1,"343":1,"772":1,"775":1,"783":2,"994":1}}],["fnb",{"2":{"118":1,"173":1}}],["ferriss",{"1":{"847":1}}],["federation",{"1":{"763":1}}],["federated",{"0":{"594":1},"1":{"594":1}}],["fetching",{"0":{"454":1,"466":1},"1":{"454":1},"2":{"454":1}}],["feb",{"0":{"268":1}}],["february",{"0":{"204":1,"270":1},"1":{"204":1}}],["feel",{"1":{"844":1,"894":1}}],["feelers",{"1":{"573":1}}],["feelings",{"1":{"732":1,"824":1}}],["feeling",{"0":{"568":1,"573":1,"579":1},"1":{"249":1}}],["fees",{"1":{"551":1,"939":1}}],["feedback",{"0":{"113":1,"338":1,"420":1},"1":{"113":2,"178":1,"190":1,"265":1,"292":1,"338":1,"344":1,"397":1,"406":4,"420":2,"441":1,"772":1,"777":1,"808":1,"818":1},"2":{"406":1,"420":1}}],["featuring",{"1":{"205":1,"380":1,"481":1,"661":1,"1015":1}}],["feature",{"0":{"746":1},"1":{"201":1,"228":1,"448":1,"474":1,"477":1,"544":1,"738":1,"746":1,"748":1,"882":1,"918":1}}],["featured",{"1":{"160":1}}],["features",{"0":{"229":1},"1":{"103":1,"113":1,"159":1,"160":1,"203":1,"214":1,"223":1,"229":1,"284":1,"286":2,"288":1,"374":1,"497":1,"551":1,"660":1,"670":1,"746":1,"748":1,"751":1,"976":1,"1002":1}}],["few",{"1":{"152":1,"174":1,"269":1,"278":1}}],["fe",{"0":{"108":1,"568":1},"1":{"108":1}}],["fan",{"1":{"914":2,"915":1}}],["fans",{"1":{"170":1}}],["fatigue",{"1":{"767":1}}],["fault",{"1":{"719":1,"785":1}}],["falsifiability",{"0":{"951":1},"1":{"951":1}}],["false",{"1":{"635":2,"736":1,"951":1}}],["fallback",{"1":{"699":1}}],["fall",{"1":{"444":1,"878":1}}],["familiar",{"1":{"833":1,"848":1,"945":1}}],["familiarity",{"1":{"824":1}}],["familiarize",{"1":{"265":1,"292":1}}],["familar",{"0":{"833":1}}],["family",{"1":{"609":1}}],["famous",{"1":{"580":1}}],["fakes",{"1":{"787":1}}],["fake",{"1":{"336":1}}],["failing",{"1":{"903":1}}],["fail",{"1":{"854":1}}],["fails",{"1":{"377":1,"903":1}}],["failures",{"1":{"342":1,"773":1,"785":1}}],["failure",{"1":{"340":1,"341":1,"700":1,"1023":1}}],["failed",{"1":{"82":1}}],["fair",{"0":{"319":1},"1":{"318":1,"319":1}}],["faqs",{"0":{"301":1}}],["favors",{"1":{"275":1}}],["facts",{"1":{"570":1}}],["factors",{"1":{"382":1,"417":1}}],["factory",{"0":{"110":1},"1":{"110":1,"118":1}}],["facebook",{"1":{"778":1}}],["faced",{"1":{"439":1,"980":1}}],["face",{"0":{"621":1,"842":1},"1":{"423":1,"621":1,"842":1}}],["facilitate",{"0":{"849":1},"1":{"602":1,"628":1,"629":1}}],["facilitating",{"1":{"414":1}}],["facing",{"1":{"179":1,"668":1}}],["fabric",{"0":{"596":1},"1":{"165":1}}],["farewell",{"0":{"82":1}}],["fast",{"0":{"319":1,"491":1},"1":{"67":1,"139":1,"202":1,"203":1,"289":1,"319":1,"387":1,"453":1,"469":1,"640":1,"651":1,"717":1,"718":1,"729":1,"772":1,"777":1,"818":1,"915":1,"979":1}}],["fastest",{"1":{"53":1}}],["faster",{"0":{"53":1,"560":1},"1":{"0":1,"159":1,"168":1,"204":1,"241":1,"380":1,"399":1,"401":1,"402":1,"403":1,"452":1,"481":1,"636":1,"659":1,"702":1,"715":1,"716":1,"728":1,"757":1,"764":1,"784":1,"1018":1}}],["fuzz",{"0":{"535":1},"1":{"535":1}}],["further",{"1":{"492":1}}],["fusion",{"0":{"717":1},"1":{"258":1,"717":1}}],["fuatto",{"3":{"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"529":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"630":1,"642":1}}],["fuel",{"0":{"160":1},"1":{"160":1}}],["fullstack",{"0":{"641":1},"1":{"280":1},"2":{"136":1,"500":1}}],["full",{"0":{"136":1,"716":1},"1":{"136":1,"160":1,"291":1,"311":1,"359":1,"432":1,"492":1,"496":1,"513":1,"641":1,"692":1,"716":1,"802":1}}],["fully",{"1":{"89":1,"284":1,"640":1,"811":1}}],["fungible",{"1":{"552":1,"601":1}}],["functioning",{"1":{"642":1}}],["functions",{"0":{"574":1,"720":1,"900":1},"1":{"493":1,"495":1,"574":1,"642":1,"699":1,"710":1,"720":1}}],["function",{"0":{"414":1,"858":1},"1":{"288":1,"414":2,"552":1,"565":1,"574":1,"576":1,"757":1,"900":1},"2":{"414":1}}],["functionalities",{"1":{"414":1,"586":1}}],["functionality",{"1":{"374":1,"551":1,"589":1,"609":1,"637":1}}],["functional",{"0":{"284":1},"1":{"284":1,"330":1,"666":1,"802":1,"803":2}}],["funds",{"1":{"588":1}}],["fundamentals",{"1":{"875":1,"912":1,"985":1}}],["fundamentally",{"1":{"543":1}}],["fundamental",{"0":{"391":1,"464":1,"898":1},"1":{"499":1,"623":1}}],["fund",{"0":{"181":1,"182":1},"1":{"181":1,"242":1,"249":1},"4":{"181":1,"182":1}}],["funding",{"1":{"164":1,"1010":1},"2":{"181":1,"182":1}}],["fun",{"0":{"52":1},"1":{"1001":1}}],["futures",{"0":{"241":1},"1":{"241":1}}],["future",{"0":{"99":1,"231":1},"1":{"38":1,"231":1,"275":1,"277":1,"282":1,"287":1,"477":1,"494":1,"682":1,"878":1,"890":1,"950":1,"954":1}}],["fictional",{"0":{"838":1}}],["fiction",{"0":{"843":1},"1":{"837":1,"841":1}}],["fiber",{"0":{"896":1},"1":{"661":1,"896":1}}],["fibonacci",{"1":{"89":1}}],["fi",{"0":{"579":1}}],["fix",{"1":{"530":1}}],["fixes",{"1":{"476":1}}],["fixed",{"0":{"321":1,"559":1},"1":{"62":1,"211":1,"313":1,"321":1,"524":1,"559":1,"588":1,"872":1}}],["fiat",{"1":{"347":1,"353":1}}],["figure",{"1":{"330":1}}],["figuring",{"1":{"300":1}}],["figma",{"0":{"284":1,"998":1},"1":{"284":1,"386":1,"390":1,"480":1,"998":2}}],["firebase",{"1":{"793":1}}],["firm",{"1":{"364":1}}],["firms",{"1":{"188":1,"269":1,"278":1}}],["first",{"0":{"103":1,"159":1,"496":1,"523":1,"637":1,"774":1},"1":{"103":2,"107":2,"108":1,"120":1,"164":1,"173":1,"223":1,"283":1,"439":1,"461":1,"476":1,"496":1,"637":1,"678":1,"820":1},"2":{"637":1}}],["fills",{"1":{"735":1}}],["fill",{"0":{"735":1},"1":{"884":1}}],["file",{"0":{"478":1,"719":1,"959":1,"976":1,"1002":1},"1":{"478":1,"486":1,"543":1,"636":1,"719":2,"959":1,"976":1},"2":{"959":2,"976":2}}],["files",{"1":{"185":1,"525":1,"636":1,"711":1,"959":1,"976":1}}],["filter",{"0":{"635":1},"1":{"406":1,"635":1},"2":{"635":1}}],["film",{"0":{"120":1},"1":{"120":1},"2":{"120":1}}],["fields",{"1":{"379":1,"501":1}}],["field",{"1":{"151":1,"440":1,"444":1}}],["finish",{"1":{"978":1}}],["finite",{"0":{"215":1,"519":1,"683":1,"684":1,"1009":1},"1":{"215":1,"519":1,"683":1,"684":1,"686":2,"687":1,"910":1,"1009":1},"2":{"215":1}}],["finds",{"1":{"495":1}}],["find",{"0":{"622":1,"944":1},"1":{"339":1,"392":1,"475":1,"493":1,"622":1,"623":1,"725":1,"727":1,"815":1,"855":1,"944":1,"987":1}}],["findings",{"1":{"674":1,"675":1,"676":1,"677":1,"678":1,"703":1}}],["finding",{"0":{"1043":1},"1":{"35":1,"157":1,"314":1,"978":2,"1028":1,"1045":1}}],["fine",{"0":{"429":1,"1007":1},"1":{"274":1,"429":1,"441":1,"443":1,"763":1,"1007":1},"2":{"890":1}}],["finops",{"1":{"270":1}}],["finance",{"0":{"1001":1},"1":{"589":1,"632":1,"878":1},"2":{"239":1,"878":1}}],["financial",{"0":{"174":1},"1":{"117":1,"174":1,"249":1,"252":1,"375":1,"760":1,"878":2,"1045":1}}],["final",{"1":{"194":1,"630":1}}],["finally",{"1":{"181":1,"495":1}}],["fintech",{"0":{"147":1,"148":1},"1":{"1012":1},"2":{"165":1,"167":1,"172":1,"175":1,"238":1,"240":1,"241":1,"242":1,"243":1,"245":1,"247":1,"249":1,"251":1,"252":1,"253":1,"254":1}}],["fifty",{"1":{"311":1}}],["fifteenth",{"1":{"103":1}}],["fifth",{"1":{"100":1,"677":1,"996":1}}],["five",{"0":{"841":1},"1":{"97":1,"499":1,"567":1,"569":2,"774":1,"841":1}}],["fits",{"1":{"288":1,"1030":1}}],["fit",{"1":{"30":2,"49":1,"332":1,"828":1,"894":1}}],["fidelity",{"0":{"0":1}}],["font",{"1":{"486":2}}],["fonts",{"0":{"486":1},"1":{"486":1},"2":{"486":2}}],["footprint",{"1":{"445":1}}],["footprints",{"1":{"430":1}}],["food",{"0":{"173":1},"1":{"173":1}}],["follows",{"1":{"163":1,"459":1}}],["followed",{"1":{"113":1,"116":1}}],["follow",{"0":{"70":1},"1":{"152":1,"286":1,"352":1,"355":1,"620":1}}],["following",{"1":{"31":1,"351":1,"427":1,"701":1,"976":1,"1044":1}}],["folder",{"1":{"42":1}}],["foundry",{"0":{"582":1,"586":1},"1":{"582":1,"586":1},"2":{"582":1,"586":1}}],["found",{"1":{"480":1,"565":1}}],["founder",{"0":{"868":1},"1":{"480":1,"868":1,"1043":1},"2":{"868":1}}],["founders",{"1":{"177":1,"182":1,"868":1}}],["founded",{"1":{"333":1}}],["foundations",{"1":{"885":1}}],["foundational",{"1":{"285":1,"940":1},"2":{"584":1,"597":1,"598":1}}],["foundation",{"0":{"37":1,"249":1,"252":1,"354":1,"890":1},"1":{"29":1,"33":1,"35":1,"44":1,"45":1,"91":1,"175":1,"190":1,"237":1,"249":1,"269":1,"278":1,"297":1,"304":1,"306":1,"332":1,"346":1,"354":1,"361":1,"370":1,"890":1,"975":1,"1031":1,"1032":1,"1039":1,"1049":1},"2":{"890":1}}],["fourteenth",{"1":{"115":1}}],["fourth",{"1":{"111":1,"288":1,"676":1}}],["four",{"0":{"26":1,"814":1},"1":{"26":1,"358":1,"578":1,"679":1,"775":1,"799":1,"801":1,"814":1,"978":1},"2":{"607":1,"609":1,"610":1,"612":1,"613":1,"614":1,"615":1,"913":1,"960":1}}],["fosters",{"1":{"356":1,"778":1}}],["fostering",{"1":{"105":1,"114":1,"138":1}}],["foster",{"1":{"27":1,"110":1,"111":1,"774":1,"1001":1,"1003":1,"1011":1}}],["focusing",{"1":{"215":1,"245":1,"252":1,"282":1,"286":1,"288":1,"313":1,"391":1,"407":1,"409":1,"554":1,"566":1,"706":1,"709":1,"734":1,"738":1,"741":1,"742":1,"833":1,"836":1,"873":1,"886":1,"904":1,"906":1,"938":1,"954":1}}],["focuses",{"1":{"28":1,"67":1,"209":1,"564":1,"808":1,"818":1}}],["focused",{"1":{"24":1,"67":1,"161":1,"265":1,"292":1,"395":1,"396":1,"572":1,"641":1,"643":1,"765":1,"767":1,"815":1,"826":1,"830":1,"875":1,"1021":1}}],["focus",{"0":{"344":1,"458":1,"873":1,"876":1},"1":{"4":1,"29":1,"36":2,"47":1,"58":1,"103":1,"120":1,"264":1,"266":1,"280":1,"291":1,"297":1,"300":1,"336":1,"339":1,"344":1,"440":1,"458":2,"473":1,"577":1,"740":1,"743":1,"756":1,"766":1,"820":1,"829":1,"869":1,"877":1,"1018":1,"1022":1}}],["forgiveness",{"0":{"879":1,"1002":1}}],["forgetting",{"1":{"862":1}}],["forget",{"1":{"33":1,"931":1}}],["foreground",{"0":{"743":1}}],["forcing",{"0":{"858":1},"1":{"458":1}}],["force",{"1":{"343":1}}],["forming",{"1":{"953":1}}],["form",{"0":{"549":1,"897":1},"1":{"549":1,"619":1,"950":1,"999":1},"2":{"897":1}}],["formed",{"1":{"515":1}}],["forms",{"1":{"388":1,"975":1}}],["formatting",{"1":{"460":1,"472":1}}],["formats",{"0":{"460":1},"1":{"415":1,"710":1,"768":1,"995":1}}],["format",{"0":{"373":1},"1":{"453":1,"469":1,"486":1}}],["formal",{"1":{"151":1,"687":1}}],["fortune",{"1":{"188":1}}],["forward",{"0":{"264":1,"265":1,"266":1,"268":1,"279":1,"280":1,"281":1,"289":1,"291":1,"292":1,"293":1,"982":1},"1":{"40":1,"66":1,"264":1,"265":1,"292":1,"327":1,"340":1,"982":1},"2":{"264":1,"265":1,"266":1,"267":1,"268":1,"279":1,"280":1,"281":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"982":1},"4":{"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"1013":1,"1014":1,"1015":1,"1016":1,"1017":1,"1018":1}}],["for",{"0":{"1":1,"5":1,"7":1,"32":1,"114":1,"118":1,"120":1,"153":1,"156":1,"158":1,"159":1,"160":1,"162":1,"164":1,"166":1,"167":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"180":1,"194":1,"236":1,"238":1,"239":1,"240":1,"243":1,"249":1,"250":1,"252":1,"319":1,"345":1,"350":1,"366":1,"381":1,"409":1,"415":1,"420":1,"423":1,"426":1,"429":1,"435":1,"442":1,"443":1,"445":1,"446":1,"460":1,"465":1,"477":1,"497":1,"527":1,"534":1,"536":1,"561":1,"576":1,"585":1,"586":1,"600":1,"603":1,"640":1,"652":1,"731":1,"740":1,"741":1,"788":1,"819":1,"822":1,"843":1,"879":1,"883":1,"891":1,"939":1,"965":1,"997":1,"1000":1,"1002":1,"1006":1},"1":{"5":1,"14":1,"17":1,"25":1,"27":1,"28":1,"30":1,"39":1,"40":1,"41":1,"47":1,"49":1,"62":1,"90":1,"91":1,"93":2,"100":2,"104":1,"105":2,"106":5,"107":1,"108":1,"110":1,"112":1,"113":2,"114":2,"115":3,"116":1,"120":1,"121":1,"124":1,"131":1,"135":1,"136":1,"138":1,"139":1,"150":1,"151":2,"152":1,"159":2,"160":1,"161":1,"162":1,"164":2,"165":1,"166":1,"167":2,"173":1,"174":1,"178":2,"182":1,"184":1,"185":1,"190":1,"192":1,"193":1,"198":1,"199":1,"200":1,"202":2,"203":1,"204":2,"207":2,"211":1,"214":1,"216":2,"217":1,"218":2,"219":1,"220":2,"222":1,"223":2,"224":2,"225":2,"226":1,"227":1,"228":1,"229":1,"232":2,"233":2,"237":1,"239":1,"240":1,"241":1,"242":1,"243":1,"245":1,"246":1,"247":1,"249":1,"251":1,"252":2,"267":1,"270":1,"273":1,"274":1,"275":1,"282":2,"284":1,"286":4,"288":1,"291":1,"295":1,"296":1,"309":2,"312":1,"317":1,"318":1,"319":1,"325":1,"342":1,"343":1,"345":1,"346":1,"348":2,"355":1,"356":1,"357":1,"358":1,"359":1,"361":1,"364":1,"371":1,"372":1,"373":1,"376":1,"378":1,"379":1,"380":1,"381":1,"383":1,"385":1,"386":2,"387":1,"388":1,"390":1,"392":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"404":1,"406":3,"407":1,"409":1,"413":1,"415":2,"417":1,"420":1,"421":1,"422":1,"423":1,"424":1,"428":1,"429":1,"434":1,"435":1,"439":1,"440":1,"441":1,"443":1,"445":1,"447":1,"450":1,"452":1,"456":1,"457":1,"464":1,"469":1,"470":1,"473":1,"475":1,"477":2,"478":1,"480":1,"481":1,"483":1,"485":1,"486":1,"489":1,"494":1,"496":2,"497":2,"499":1,"508":1,"512":2,"518":3,"523":1,"524":1,"525":1,"526":1,"529":1,"534":1,"536":1,"540":1,"541":1,"543":3,"545":1,"546":1,"548":2,"551":1,"553":1,"558":1,"562":1,"565":1,"568":1,"574":1,"576":1,"578":1,"579":1,"580":1,"582":1,"588":1,"589":1,"606":1,"607":1,"608":1,"616":1,"617":1,"618":1,"623":1,"624":1,"626":2,"631":1,"633":1,"634":2,"635":1,"636":1,"638":2,"640":1,"642":1,"646":1,"648":1,"649":1,"650":1,"652":1,"653":1,"655":1,"657":1,"659":1,"660":1,"661":1,"662":1,"663":1,"666":1,"667":1,"669":1,"670":1,"673":1,"681":1,"682":1,"690":1,"691":1,"692":1,"694":1,"698":1,"699":1,"700":1,"701":1,"707":1,"708":1,"715":1,"716":1,"717":1,"718":1,"719":1,"721":1,"722":1,"725":1,"727":1,"728":1,"732":1,"733":1,"752":1,"753":1,"754":1,"757":1,"758":1,"760":1,"763":1,"764":1,"766":1,"768":1,"772":1,"773":1,"777":1,"781":1,"783":1,"784":1,"785":1,"788":1,"791":1,"794":1,"795":1,"796":1,"797":1,"798":1,"802":1,"803":1,"804":1,"807":1,"825":1,"836":1,"843":1,"849":2,"853":1,"857":1,"858":1,"859":1,"861":1,"864":1,"865":1,"869":1,"879":1,"881":1,"882":1,"883":2,"884":2,"885":1,"887":1,"893":1,"894":4,"906":1,"908":1,"914":1,"925":1,"934":1,"939":1,"941":1,"952":1,"953":1,"958":1,"961":1,"962":1,"965":1,"966":1,"967":1,"969":1,"972":1,"973":1,"975":2,"976":3,"978":2,"979":1,"987":1,"990":1,"995":2,"997":2,"998":2,"1000":1,"1001":1,"1002":2,"1003":1,"1004":1,"1006":1,"1007":2,"1009":1,"1010":1,"1011":1,"1012":1,"1015":2,"1016":1,"1017":2,"1018":1,"1025":1,"1032":1,"1040":1,"1048":1},"4":{"216":1,"217":1,"218":1,"219":1,"220":1,"529":1}}],["fresh",{"1":{"833":1,"848":1,"851":1,"994":1,"1032":1}}],["frequency",{"1":{"807":1}}],["frequently",{"0":{"827":1},"1":{"437":1,"867":1}}],["freewriting",{"1":{"840":1}}],["free",{"1":{"545":1,"630":1,"749":1,"789":1,"1018":1}}],["freelancers",{"1":{"328":1}}],["freedom",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"1025":1}}],["francis",{"1":{"993":1}}],["frame",{"1":{"894":2}}],["frameworks",{"0":{"231":1},"1":{"207":1,"231":1,"271":1,"282":1,"387":1,"454":1,"482":1,"491":1,"596":1,"668":1,"773":1,"894":1,"899":1,"919":1}}],["framework",{"0":{"226":1,"396":1,"475":1,"546":1,"554":1,"969":1},"1":{"4":1,"34":1,"58":1,"226":1,"376":1,"475":1,"480":1,"546":1,"554":1,"576":1,"616":2,"626":1,"877":1,"958":1,"969":1},"2":{"4":1,"462":1,"475":1,"481":1,"554":1}}],["fragile",{"0":{"854":1}}],["fragments",{"1":{"501":1}}],["fragment",{"0":{"501":1},"1":{"501":1,"793":1}}],["fractional",{"1":{"601":2}}],["fractionalization",{"0":{"601":1},"1":{"601":1}}],["fraction",{"0":{"477":1},"1":{"477":1}}],["fraud",{"1":{"176":1}}],["friction",{"1":{"849":2,"854":1}}],["friday",{"0":{"109":1,"327":1},"1":{"66":1,"109":1,"327":2,"625":2}}],["friendly",{"1":{"61":1,"172":1,"178":1,"382":1,"387":1,"388":1,"585":1,"819":1}}],["frontrunning",{"1":{"701":1}}],["fronten",{"2":{"488":1}}],["frontends",{"0":{"465":1},"1":{"465":1}}],["frontend",{"0":{"126":1,"145":1,"156":1,"201":1,"203":1,"204":1,"205":1,"206":1,"207":1,"456":1,"464":1,"465":1,"472":1,"483":1,"492":1,"493":1,"494":1,"495":1,"496":1,"899":1,"999":1,"1008":1,"1009":1},"1":{"28":1,"136":1,"156":1,"201":2,"204":1,"205":1,"241":1,"456":1,"464":1,"465":1,"480":1,"483":2,"494":2,"495":1,"496":1,"500":1,"641":1,"691":1,"768":1,"899":1,"1009":1,"1021":1,"1024":1},"2":{"54":1,"145":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"278":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"458":1,"460":1,"461":1,"463":1,"465":1,"466":1,"467":1,"468":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"477":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"501":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"897":1,"898":1,"899":1,"900":1,"901":1,"903":1,"1021":1,"1024":1,"1028":1,"1031":1},"4":{"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"462":1,"463":1,"464":1,"465":1,"466":1,"467":1,"468":1,"469":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"779":1,"780":1,"781":1,"782":1,"894":1,"895":1,"896":1,"897":1,"898":1,"899":1,"900":1,"901":1,"902":1,"903":1}}],["front",{"1":{"201":2,"207":1,"472":1,"491":1,"1028":1}}],["from",{"0":{"119":1,"165":1,"350":1,"367":1,"384":1,"462":1,"483":1,"516":1,"600":1,"653":1,"721":1,"857":1,"895":1,"1013":1,"1014":1,"1023":1},"1":{"2":1,"22":1,"35":1,"41":1,"55":1,"56":1,"61":1,"62":1,"90":1,"93":1,"96":1,"100":1,"111":1,"112":1,"168":1,"194":1,"204":2,"213":1,"232":1,"264":1,"265":1,"272":1,"292":1,"307":1,"311":2,"315":1,"336":1,"342":1,"350":1,"362":1,"441":1,"443":1,"452":1,"466":1,"473":1,"492":1,"497":1,"516":1,"518":1,"521":1,"547":1,"600":1,"612":1,"614":1,"623":1,"625":1,"631":1,"636":1,"648":1,"686":1,"687":1,"717":1,"721":1,"742":1,"765":1,"794":1,"838":2,"840":1,"857":1,"866":1,"876":1,"953":1,"966":2,"973":1,"993":1,"1001":1,"1013":1,"1014":1,"1019":1,"1021":2,"1023":1,"1026":1,"1028":1,"1033":1,"1043":1,"1044":1,"1049":1}}],["bdd",{"1":{"988":1}}],["bst",{"1":{"979":1}}],["bsts",{"0":{"979":1}}],["btn`",{"1":{"902":1}}],["btc",{"0":{"61":1,"245":1,"251":1,"1010":1},"1":{"61":1,"1010":1},"2":{"600":1}}],["b",{"1":{"746":1}}],["b2b",{"1":{"656":1}}],["blank",{"1":{"866":1}}],["blaming",{"1":{"773":1}}],["blame",{"1":{"341":1}}],["bloat",{"1":{"926":1}}],["bloom",{"0":{"635":1},"1":{"635":1},"2":{"635":1}}],["block",{"1":{"719":1}}],["blocks",{"0":{"593":1},"1":{"499":1,"523":1,"593":1,"636":1}}],["blockers",{"1":{"373":1}}],["blocking",{"0":{"339":1,"894":1},"1":{"779":1}}],["blockchains",{"0":{"942":1},"1":{"547":1,"552":1,"942":1}}],["blockchain",{"0":{"99":1,"176":1,"258":1,"263":1,"585":1,"590":1,"602":1,"653":1,"940":1,"941":1,"942":1},"1":{"28":1,"29":2,"53":1,"116":2,"176":1,"249":1,"258":1,"260":1,"263":1,"268":1,"269":1,"278":1,"520":1,"548":1,"551":1,"584":1,"585":2,"589":1,"590":1,"593":1,"595":2,"596":1,"597":1,"598":1,"602":2,"603":1,"604":1,"605":1,"653":1,"700":1,"919":1,"940":1,"941":1,"942":1},"2":{"53":1,"158":1,"175":1,"176":1,"238":1,"239":1,"240":1,"241":1,"245":1,"247":1,"249":1,"251":1,"253":1,"254":1,"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"582":1,"583":1,"584":1,"585":1,"586":1,"587":1,"588":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"595":1,"596":1,"597":1,"598":1,"599":1,"600":1,"601":1,"602":2,"603":1,"604":1,"605":1,"919":1,"939":1,"940":1,"942":1},"4":{"582":1,"583":1,"584":1,"585":1,"586":1,"587":1,"588":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"595":1,"596":1,"597":1,"598":1,"599":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"939":1,"940":1,"941":1,"942":1}}],["blue",{"0":{"400":1,"404":1,"744":1},"1":{"400":1,"404":1,"744":1,"882":1}}],["blend",{"1":{"302":1,"641":1}}],["bhd",{"0":{"170":1},"1":{"170":2}}],["brevity",{"1":{"470":1}}],["breakdown",{"0":{"803":1}}],["breaker",{"0":{"785":1},"1":{"785":1}}],["breakers",{"1":{"700":1}}],["breakthrough",{"1":{"778":1}}],["breakthroughs",{"0":{"263":1},"1":{"257":1,"263":1}}],["breaks",{"1":{"689":1,"767":1,"958":1}}],["break",{"1":{"439":1}}],["breaking",{"0":{"958":1},"1":{"201":1,"767":1,"848":1}}],["breweries",{"0":{"180":1},"1":{"180":1}}],["briggs",{"1":{"581":1,"801":1}}],["bright",{"1":{"335":1}}],["brief",{"1":{"482":1,"562":1}}],["bridges",{"1":{"500":1,"602":1}}],["bridge",{"0":{"350":1,"602":1},"1":{"350":1,"892":1},"2":{"602":1}}],["bridging",{"1":{"285":1,"762":1}}],["bric",{"0":{"184":1}}],["bringing",{"1":{"368":1}}],["brings",{"1":{"285":1,"495":1,"623":1,"924":1}}],["bring",{"1":{"112":1,"160":1,"198":1}}],["broker",{"0":{"606":1},"1":{"606":1,"642":1}}],["brokers",{"1":{"528":1,"606":1,"642":1}}],["broadly",{"0":{"853":1}}],["broadcast",{"1":{"752":1}}],["broader",{"1":{"327":1}}],["broadened",{"1":{"182":1}}],["broad",{"1":{"184":1,"832":1,"845":1,"863":1}}],["browse",{"1":{"170":1}}],["browsers",{"1":{"469":1,"545":1}}],["browser",{"0":{"163":1},"1":{"163":1,"204":1,"473":1,"497":1,"513":1,"750":1},"2":{"163":1,"164":1}}],["browsing",{"1":{"163":1,"651":1,"661":1}}],["bramble",{"1":{"763":1}}],["branches",{"0":{"830":1},"1":{"746":1,"783":1}}],["branch",{"0":{"745":1},"1":{"745":1}}],["branching",{"1":{"672":1}}],["brand",{"1":{"37":1,"997":1}}],["brac",{"0":{"184":1}}],["brainstorm",{"1":{"845":1}}],["brainstorming",{"0":{"907":1},"1":{"572":1,"907":1}}],["brain",{"0":{"63":1},"1":{"51":1,"63":1,"858":1},"2":{"63":1}}],["balancing",{"0":{"650":1},"1":{"326":1,"576":1,"650":1,"670":1,"835":1,"1048":1}}],["balances",{"1":{"832":1}}],["balancer",{"1":{"650":1}}],["balanced",{"0":{"979":1},"1":{"393":1,"979":1}}],["balance",{"0":{"1039":1},"1":{"50":1,"58":1,"306":1,"310":1,"573":1,"712":1,"994":1,"1039":1,"1041":1}}],["bad",{"1":{"296":1,"406":1,"849":1,"986":1}}],["banking",{"1":{"375":2}}],["bank",{"1":{"172":1,"347":1}}],["batching",{"1":{"603":1}}],["batch",{"0":{"123":1}}],["basis",{"0":{"520":1}}],["basics",{"1":{"416":1,"443":1,"520":1,"526":1,"527":1,"528":1,"546":1,"616":1,"662":1,"760":1,"792":1,"847":1,"989":1}}],["basic",{"1":{"284":1,"523":1,"631":1,"709":1,"769":1,"990":1}}],["basically",{"1":{"63":1}}],["baseline",{"1":{"442":1}}],["basecamp",{"0":{"185":1},"1":{"185":1,"189":1}}],["basehq",{"1":{"159":1}}],["based",{"0":{"692":1,"801":1,"883":1},"1":{"89":1,"97":1,"163":1,"221":1,"238":1,"245":1,"249":1,"336":1,"364":1,"397":1,"418":1,"441":1,"466":1,"474":1,"505":1,"545":1,"552":1,"570":1,"582":1,"607":1,"649":1,"652":2,"654":1,"692":1,"719":1,"737":1,"745":1,"801":1,"892":1,"938":1,"946":1,"947":1,"965":1,"1005":1}}],["base",{"0":{"98":1,"350":1,"352":1,"599":1,"600":1,"709":1},"1":{"63":1,"98":2,"267":1,"350":1,"599":1,"600":1,"709":1},"2":{"63":1}}],["backward",{"1":{"896":1}}],["background",{"0":{"477":1},"1":{"336":1,"339":1,"477":1,"663":1,"739":1}}],["backlog",{"0":{"766":1},"1":{"89":1,"766":2,"983":1}}],["backed",{"1":{"62":2}}],["backend",{"0":{"135":1,"645":1,"984":1,"1019":1},"1":{"135":1,"136":1,"172":1,"241":1,"500":1,"641":1,"643":1,"645":1,"768":1,"926":1,"984":1,"985":1,"1019":1,"1020":1,"1040":1,"1047":1,"1050":1},"2":{"56":1,"135":1,"524":1,"528":1,"653":1,"916":1,"1019":1,"1020":1,"1026":1,"1027":1,"1039":1,"1040":1,"1042":1,"1044":1,"1046":1,"1047":1,"1050":1}}],["back",{"0":{"15":1},"1":{"80":1,"221":1,"279":1,"293":1,"480":1}}],["bien",{"0":{"1046":1},"1":{"1046":1}}],["bienvh",{"3":{"605":1,"939":1}}],["bievh",{"3":{"239":1,"240":1,"242":1,"245":1,"247":1,"251":1,"254":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"564":1,"599":1,"921":1,"922":1,"923":1,"924":1,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1,"935":1,"936":1,"942":1,"995":1}}],["bidirectional",{"1":{"518":1}}],["bids",{"1":{"313":1}}],["billions",{"1":{"721":1}}],["billion",{"1":{"360":1}}],["billing",{"0":{"20":1},"1":{"20":1,"318":1}}],["bill",{"0":{"318":1},"1":{"580":1}}],["biological",{"1":{"315":1}}],["biased",{"1":{"809":1}}],["bias",{"1":{"250":1,"346":1,"704":1,"735":1,"853":1}}],["binary",{"1":{"453":1,"469":1,"979":1}}],["binance",{"0":{"241":1,"242":1,"731":1},"1":{"241":1,"242":1,"243":1,"731":1,"776":1}}],["bindings",{"0":{"225":1}}],["bi",{"0":{"727":1},"1":{"90":1,"190":1,"632":1,"727":1,"981":1}}],["bitcoin",{"0":{"251":1,"600":1},"1":{"61":1,"62":1,"245":1,"251":1,"600":1}}],["bigquery",{"1":{"717":1}}],["big",{"0":{"708":1},"1":{"43":1,"275":1,"567":1,"569":2,"708":1,"719":1,"722":1,"723":1,"978":1,"1017":1,"1018":1},"2":{"635":1,"981":1}}],["bui",{"1":{"1000":1}}],["built",{"1":{"53":1,"157":1,"160":1,"163":1,"164":1,"165":1,"169":1,"175":1,"178":1,"248":1,"335":1,"485":1,"628":1,"629":1,"781":1}}],["builder",{"0":{"798":1,"960":1},"1":{"796":1,"798":1,"960":1,"962":1,"1011":1}}],["builds",{"0":{"556":1,"924":1},"1":{"307":1,"556":1,"557":1,"558":1,"559":1,"703":1,"713":1,"745":1,"806":1,"908":1,"921":2,"922":1,"923":1}}],["building",{"0":{"156":1,"158":1,"160":1,"162":1,"165":1,"166":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"236":1,"239":1,"242":1,"244":1,"250":1,"335":1,"440":1,"442":1,"640":1,"801":1,"886":1,"973":1,"1031":1},"1":{"29":1,"98":1,"136":1,"172":1,"184":1,"188":1,"203":1,"220":1,"235":1,"242":1,"401":1,"403":1,"424":1,"425":1,"440":1,"448":1,"499":1,"521":1,"523":1,"560":1,"616":1,"622":1,"646":1,"774":1,"850":1,"901":1,"907":1,"924":1,"961":1,"964":1,"973":1,"997":1,"999":1,"1031":1},"2":{"1031":1,"1047":1}}],["build",{"0":{"98":1,"178":1,"385":1,"408":1,"487":1,"560":1,"592":1,"620":1,"651":1,"765":1,"800":1,"860":1,"921":1,"923":1},"1":{"0":1,"32":1,"33":1,"38":1,"154":1,"159":1,"165":1,"173":1,"179":1,"182":1,"207":1,"244":1,"284":1,"296":2,"305":1,"326":1,"334":1,"344":1,"392":1,"408":1,"410":1,"462":1,"487":1,"527":1,"545":1,"547":1,"592":1,"620":1,"645":1,"662":1,"715":1,"717":1,"729":1,"736":1,"751":1,"781":1,"782":1,"797":2,"798":1,"832":1,"837":1,"886":1,"899":1,"915":1,"919":1,"922":1,"926":1,"980":1},"4":{"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"995":1}}],["bureau",{"1":{"978":1}}],["burndown",{"0":{"755":1},"1":{"755":1}}],["burnup",{"0":{"755":1},"1":{"755":1}}],["burning",{"1":{"324":1}}],["burnout",{"1":{"324":1}}],["burn",{"0":{"324":1},"2":{"324":1}}],["bulletproof",{"0":{"932":1}}],["bucketing",{"1":{"711":1}}],["buckets",{"0":{"711":1},"1":{"711":1}}],["bumps",{"1":{"700":1}}],["bugs",{"1":{"296":1,"786":1}}],["bunk",{"0":{"525":1}}],["bunch",{"1":{"511":1}}],["bundles",{"1":{"513":1}}],["bundle",{"1":{"480":1}}],["bun",{"1":{"276":1}}],["bubble",{"1":{"275":1}}],["buzz",{"0":{"261":1},"1":{"261":1}}],["bustling",{"1":{"368":1}}],["busy",{"1":{"96":1}}],["businesses",{"0":{"173":1},"1":{"169":1,"173":1,"177":1,"178":1,"314":1,"415":2,"551":1,"884":1,"887":1,"947":1,"1017":1,"1018":1}}],["business",{"0":{"121":1,"435":1},"1":{"45":2,"67":2,"138":1,"155":1,"168":1,"178":2,"362":1,"385":1,"426":1,"435":1,"554":1,"632":1,"680":1,"682":1,"688":2,"692":1,"713":1,"727":1,"730":1,"756":1,"845":1,"873":1,"991":1,"1043":1},"2":{"45":1,"59":1,"67":1,"315":1,"317":1}}],["budgets",{"1":{"872":1}}],["budgeting",{"1":{"313":1},"2":{"313":1,"316":1,"321":1}}],["budget",{"0":{"316":1,"321":1},"1":{"41":1,"52":1,"316":1,"321":1,"395":1,"662":1,"872":1}}],["but",{"1":{"39":1,"45":1,"123":1,"270":1,"311":1,"324":1,"365":1,"421":1,"470":1,"485":1,"631":1,"635":1,"735":1,"818":1,"822":1,"902":1,"945":1,"978":1,"980":1,"990":1,"1035":1}}],["bold",{"1":{"1044":1}}],["box",{"1":{"958":1}}],["boxgeometry",{"1":{"515":1}}],["boilerplate",{"0":{"481":1},"1":{"481":1}}],["bonding",{"1":{"343":1}}],["bonus",{"0":{"5":1,"72":1},"1":{"5":1,"72":1}}],["borderless",{"1":{"364":1}}],["boring",{"1":{"274":1}}],["borrow",{"1":{"150":1}}],["borrowing",{"0":{"150":1}}],["boundary",{"0":{"802":1},"1":{"802":2}}],["boundaries",{"1":{"207":1,"405":1}}],["bounded",{"1":{"680":1}}],["boundless",{"1":{"285":1}}],["bounty",{"1":{"235":1},"2":{"235":1,"643":1}}],["bounties",{"0":{"235":1},"1":{"47":1}}],["bootstrap",{"0":{"516":1},"1":{"516":1,"902":2}}],["boolean",{"1":{"473":1}}],["booming",{"1":{"360":1}}],["boom",{"0":{"258":1}}],["bookkeeping",{"1":{"760":1}}],["book",{"1":{"170":1,"343":1}}],["bookings",{"1":{"171":1}}],["booking",{"0":{"170":1}}],["books",{"1":{"41":1,"150":1,"880":1}}],["boosting",{"1":{"532":1,"851":1,"855":1,"856":1,"860":1}}],["boosted",{"1":{"462":1,"888":1}}],["boosts",{"1":{"437":1,"483":1,"767":1,"848":1,"850":1,"852":1,"864":1}}],["boost",{"1":{"166":1,"171":1,"233":1,"495":1,"554":1,"659":1,"672":1,"716":1,"775":1,"800":1,"861":1,"863":1,"905":1,"908":1,"943":1,"1006":1,"1007":1}}],["bottom",{"0":{"622":1,"857":1},"1":{"622":2,"857":1,"966":1}}],["bottlenecks",{"1":{"184":1,"813":1,"898":1}}],["bot",{"0":{"103":1,"224":1,"625":1,"1010":1},"1":{"224":1,"400":1,"440":1,"1010":1}}],["both",{"1":{"31":1,"49":1,"136":1,"151":1,"167":1,"223":1,"235":1,"285":1,"289":1,"324":1,"446":1,"491":1,"497":2,"518":1,"589":1,"625":1,"1047":1}}],["believable",{"1":{"840":1}}],["believe",{"0":{"328":1},"1":{"303":1,"336":1}}],["bezel",{"1":{"621":1}}],["beside",{"1":{"515":1}}],["besides",{"1":{"330":1,"969":1}}],["best",{"0":{"386":1,"524":1,"788":1,"897":1,"902":1},"1":{"44":1,"45":1,"57":1,"113":1,"218":1,"224":1,"285":1,"286":1,"337":1,"379":1,"386":1,"475":1,"494":1,"508":1,"623":1,"663":1,"672":1,"698":1,"699":1,"727":1,"788":1,"794":1,"826":1,"862":1,"882":1,"917":1,"969":1,"972":1,"973":1,"1002":1}}],["benchmark",{"0":{"532":1},"1":{"532":1}}],["benchstat",{"0":{"532":1},"1":{"532":1}}],["beneath",{"1":{"430":1}}],["benefiting",{"1":{"1021":1}}],["benefit",{"1":{"188":1,"307":1,"359":1}}],["benefits",{"0":{"44":1},"1":{"44":2,"45":1,"348":1,"422":1,"450":1,"527":1,"583":1,"587":1,"601":1,"850":1,"887":1,"890":1,"914":1,"939":1,"998":1}}],["bend",{"1":{"273":1}}],["bedrock",{"1":{"248":1}}],["beforehand",{"1":{"674":1,"675":1,"676":1,"677":1,"678":1}}],["before",{"0":{"562":1},"1":{"184":1,"325":1,"337":1,"374":1,"477":1,"562":1,"844":1,"1017":1}}],["beer",{"1":{"180":1}}],["been",{"1":{"93":1,"100":1,"102":1,"219":1,"270":3,"280":1,"291":1,"316":1,"479":1,"512":1,"642":1,"888":1}}],["beverage",{"0":{"173":1},"1":{"173":1}}],["begin",{"1":{"599":1}}],["beginners",{"1":{"167":1,"588":1,"589":1}}],["begroup",{"1":{"161":1}}],["behind",{"0":{"710":1},"1":{"125":1,"243":1,"511":1,"574":1,"638":1,"1033":1}}],["behaviours",{"0":{"849":1}}],["behavioural",{"1":{"817":1}}],["behaviour",{"0":{"810":2}}],["behaviors",{"1":{"618":1,"742":1,"874":1}}],["behavior",{"0":{"114":1,"227":1,"988":1},"1":{"114":1,"405":2,"430":1,"514":1,"544":1,"567":1,"571":1,"581":1,"607":2,"695":1,"696":1,"809":1,"810":1,"811":1,"849":1,"988":1},"2":{"607":1,"609":1,"612":1,"613":1,"988":1}}],["behavioral",{"0":{"112":1},"1":{"112":1,"377":1,"607":1,"609":1,"612":1,"613":1},"2":{"913":1}}],["behalf",{"1":{"101":1}}],["became",{"1":{"182":1}}],["because",{"1":{"57":1,"296":1,"342":1,"638":1,"1035":2}}],["becoming",{"1":{"269":1,"278":1,"1026":1,"1033":1,"1048":1}}],["becomes",{"1":{"415":1}}],["become",{"1":{"95":1,"125":1,"201":2,"297":1,"411":1,"450":1,"456":1}}],["becorporate",{"0":{"161":1},"1":{"161":1}}],["beyond",{"0":{"342":1},"1":{"47":1,"334":1,"807":1,"818":1,"821":1,"822":1,"845":1,"892":1,"944":1,"946":1,"947":1,"1029":1}}],["beta",{"1":{"205":1,"492":1,"746":1}}],["between",{"0":{"759":1},"1":{"25":1,"53":1,"118":1,"120":1,"212":1,"282":1,"285":1,"288":1,"346":1,"383":1,"399":1,"404":1,"428":1,"482":1,"489":2,"500":1,"552":1,"569":1,"581":1,"591":1,"602":1,"608":1,"622":1,"630":1,"633":1,"688":1,"692":1,"724":1,"744":1,"753":1,"759":1,"790":1,"791":1,"795":1,"804":1,"805":1,"863":1,"904":1,"952":1,"982":1,"1028":1,"1033":1,"1041":1}}],["better",{"0":{"170":1,"172":1,"178":1,"240":1,"242":1,"349":1,"383":1,"884":1},"1":{"0":1,"157":1,"166":1,"167":1,"178":1,"192":1,"204":1,"240":1,"265":1,"283":1,"292":1,"330":1,"344":1,"368":1,"383":1,"388":1,"398":1,"406":1,"430":1,"571":1,"574":1,"578":1,"581":1,"633":1,"669":1,"681":1,"682":1,"689":1,"703":1,"730":1,"732":1,"741":1,"742":1,"754":1,"757":1,"758":1,"760":1,"772":1,"804":1,"806":1,"823":1,"853":1,"861":1,"865":1,"906":1,"937":1,"952":1,"968":1,"987":1}}],["be",{"0":{"476":1,"877":1},"1":{"2":1,"7":1,"11":1,"36":1,"39":1,"40":1,"97":1,"105":1,"106":1,"114":2,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"138":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"194":1,"200":1,"296":1,"300":1,"316":1,"338":1,"344":1,"349":1,"358":1,"415":1,"420":1,"437":1,"442":1,"480":2,"512":1,"515":1,"630":2,"732":1,"733":1,"737":1,"809":1,"877":1,"892":1,"902":1,"916":1,"958":1}}],["being",{"0":{"483":1,"561":1},"1":{"2":1,"155":1,"188":1,"203":1,"224":1,"283":1,"340":1,"421":1,"818":1,"902":1}}],["byzantine",{"0":{"594":1}}],["bybit",{"0":{"255":1},"1":{"255":1}}],["by",{"0":{"241":1,"318":1,"330":1,"421":1,"424":1,"726":4,"828":1,"858":1,"863":1},"1":{"0":1,"4":1,"36":1,"41":1,"48":1,"61":1,"67":1,"97":1,"105":1,"106":1,"110":1,"111":1,"113":1,"114":1,"116":1,"138":1,"157":1,"172":1,"182":1,"185":1,"200":1,"201":1,"202":1,"222":1,"249":1,"272":1,"286":1,"287":1,"304":1,"308":1,"314":1,"333":1,"335":1,"346":1,"348":1,"360":1,"369":1,"382":1,"387":1,"391":1,"397":1,"398":1,"400":1,"403":1,"404":1,"409":1,"416":1,"423":2,"427":2,"428":1,"429":1,"431":1,"437":1,"449":1,"454":1,"458":1,"462":2,"469":1,"475":1,"478":1,"487":1,"498":1,"513":1,"545":1,"546":1,"553":1,"554":1,"577":1,"590":1,"606":1,"614":1,"619":1,"621":1,"622":1,"623":1,"624":1,"625":1,"639":1,"654":2,"657":1,"658":1,"681":1,"685":1,"688":1,"704":1,"705":1,"706":2,"708":1,"711":1,"714":1,"722":1,"723":1,"726":5,"728":1,"731":1,"732":1,"738":1,"740":1,"741":1,"742":1,"743":1,"745":1,"755":1,"757":1,"762":1,"765":1,"767":1,"769":1,"772":1,"775":1,"778":1,"784":1,"790":1,"800":1,"806":1,"813":1,"816":1,"817":1,"823":1,"829":1,"830":1,"831":1,"833":1,"836":1,"838":1,"839":1,"842":1,"848":1,"851":1,"856":1,"858":1,"861":1,"864":1,"865":1,"873":1,"874":1,"877":1,"888":1,"889":1,"892":2,"906":1,"907":1,"909":1,"931":1,"933":1,"935":1,"938":1,"944":1,"945":1,"947":1,"950":1,"951":1,"954":1,"958":1,"959":1,"960":1,"966":1,"967":1,"968":1,"973":1,"978":1,"991":1,"996":1,"1001":1,"1003":2,"1005":1,"1011":1,"1018":1,"1024":1,"1049":1}}],["tldr",{"0":{"902":1},"1":{"916":1}}],["tm",{"0":{"872":1}}],["tmux",{"1":{"777":1}}],["tcp",{"1":{"518":1}}],["ts",{"1":{"480":1}}],["tweaks",{"1":{"1004":1}}],["twists",{"1":{"843":1}}],["twice",{"1":{"479":1}}],["twitter",{"1":{"406":1}}],["two",{"0":{"1009":1},"1":{"159":1,"223":1,"250":1,"311":1,"491":1,"764":1,"987":1}}],["turing",{"0":{"1010":1}}],["turn",{"1":{"527":1,"951":1}}],["turns",{"0":{"537":1},"1":{"477":1}}],["turning",{"1":{"170":1,"850":1,"1010":1}}],["turbocharge",{"0":{"933":1}}],["turborepo",{"1":{"659":1}}],["turbo",{"0":{"462":1},"1":{"462":1}}],["tune",{"1":{"429":1}}],["tuning",{"0":{"429":1,"1007":1},"1":{"274":1,"441":1,"443":1,"1007":1},"2":{"410":1,"412":1,"890":1}}],["tutorial",{"1":{"546":1},"2":{"347":1,"350":1,"353":1,"367":1,"546":1,"651":1,"661":1}}],["tutorials",{"1":{"286":1,"917":1}}],["tuan",{"0":{"28":1,"54":1,"1022":1,"1023":1},"1":{"28":1,"54":1,"1022":1,"1023":1}}],["troubleshoot",{"1":{"430":1,"436":1}}],["tri",{"0":{"1032":1},"1":{"1032":1}}],["trip",{"1":{"1000":1}}],["triple",{"0":{"825":1},"1":{"825":1}}],["trips",{"1":{"52":1}}],["trickery",{"1":{"471":1}}],["tricks",{"0":{"388":1}}],["trillions",{"1":{"445":1}}],["trial",{"1":{"294":1,"358":1}}],["trunk",{"0":{"830":1}}],["truth",{"0":{"814":1},"1":{"814":1}}],["truthly",{"1":{"518":1}}],["truly",{"1":{"325":1,"328":1,"641":1,"647":1,"806":1,"820":1}}],["true",{"1":{"291":1,"605":1,"736":1,"1044":1}}],["trusting",{"1":{"778":1}}],["trusted",{"1":{"577":1,"594":1,"638":1,"715":1}}],["trust",{"1":{"155":1,"238":1,"392":1,"585":1,"594":1,"703":1,"774":1,"810":1}}],["truong",{"0":{"54":1},"1":{"54":1}}],["trees",{"0":{"979":1},"1":{"845":1,"979":3}}],["tree",{"0":{"845":1,"883":1,"895":1},"1":{"488":1,"883":1,"895":1},"2":{"895":1}}],["trend",{"1":{"270":1,"276":1}}],["trending",{"0":{"256":1},"1":{"256":1,"494":1}}],["trends",{"0":{"263":1},"1":{"108":1,"207":1,"260":1,"263":1,"264":2,"268":1,"269":3,"270":1,"274":1,"277":1,"278":3,"360":1,"396":1,"765":1,"997":1,"999":1,"1004":1,"1006":1,"1008":1}}],["trello",{"1":{"189":1}}],["treating",{"1":{"119":1}}],["trying",{"1":{"974":1,"980":1}}],["try",{"1":{"44":1,"344":1,"1038":1}}],["trankhacvy",{"3":{"543":1,"544":1,"987":1}}],["tran",{"0":{"1022":1,"1032":1,"1033":1,"1036":1,"1041":1,"1045":1},"1":{"1022":1,"1032":1,"1033":1,"1036":1,"1041":1,"1045":1},"3":{"499":1}}],["transducers",{"1":{"686":1}}],["transducer",{"0":{"684":1},"1":{"684":1}}],["transport",{"1":{"626":1}}],["transparency",{"0":{"240":1,"329":1},"1":{"27":1,"197":1,"240":1,"318":1,"329":1,"585":1,"697":1},"2":{"329":1}}],["transparent",{"0":{"237":1},"1":{"27":1,"176":1,"237":1,"704":1}}],["translates",{"1":{"894":1}}],["translators",{"1":{"502":1}}],["translations",{"1":{"502":1}}],["translation",{"0":{"502":1},"1":{"502":3,"652":1},"2":{"502":1}}],["transcribes",{"1":{"625":1}}],["transcriber",{"0":{"236":1}}],["transcripts",{"1":{"236":1}}],["transitioning",{"1":{"1045":1}}],["transition",{"0":{"1019":1,"1044":1},"1":{"415":1,"973":1}}],["transitions",{"1":{"206":1,"683":2,"695":1,"793":1}}],["transitional",{"1":{"89":1}}],["transformersjs",{"2":{"640":1}}],["transformers",{"1":{"494":1,"640":1}}],["transformed",{"1":{"238":1,"936":1,"1020":1}}],["transformative",{"1":{"273":1}}],["transformation",{"0":{"119":1,"715":1},"1":{"93":1,"95":1,"119":2,"715":1}}],["transforms",{"1":{"246":1,"471":1,"833":1,"851":1}}],["transforming",{"0":{"851":1},"1":{"242":1,"254":1,"272":1,"284":1,"449":1}}],["transform",{"1":{"162":1,"170":1,"172":1,"375":1,"385":1,"632":1,"778":1}}],["transferring",{"1":{"636":1}}],["transferable",{"1":{"551":1}}],["transfer",{"0":{"240":1,"242":1},"1":{"53":1,"240":1,"242":1,"551":1,"698":1,"762":1,"998":1}}],["transfers",{"0":{"53":1},"1":{"551":1,"552":1,"602":1,"603":1}}],["transactions",{"0":{"600":1},"1":{"587":1,"594":1,"631":1}}],["transactional",{"1":{"239":1}}],["transaction",{"1":{"61":1,"242":1,"591":1,"595":1,"603":1,"707":1,"939":1}}],["trap",{"0":{"458":1},"1":{"458":1}}],["traps",{"1":{"343":1}}],["traversing",{"1":{"442":1}}],["travel",{"0":{"52":1,"248":1},"1":{"52":1,"248":1},"2":{"52":1}}],["traffic",{"1":{"404":1,"518":1,"660":1,"994":1,"1007":1}}],["traces",{"1":{"436":1}}],["traceability",{"1":{"240":1}}],["tracing",{"0":{"425":1,"427":1,"1003":1},"1":{"425":1,"427":2,"444":1,"1003":1},"2":{"427":1}}],["traction",{"1":{"217":1}}],["track",{"1":{"62":1,"169":1,"175":1,"190":1,"281":1,"373":1,"427":1,"642":1,"682":1,"729":1,"755":1,"768":1,"783":1,"1017":1}}],["tracking",{"0":{"242":1,"251":1},"1":{"27":1,"180":2,"242":1,"251":1,"430":1,"525":1,"545":1,"760":1,"776":1}}],["trait",{"0":{"544":1},"1":{"544":1},"2":{"544":1}}],["traits",{"1":{"192":1,"544":1,"567":1,"568":1,"569":2,"571":1,"573":1,"574":1,"575":1,"580":1,"581":1,"799":1,"839":1,"846":1}}],["trains",{"1":{"340":1}}],["training",{"1":{"124":1,"284":1,"406":1,"416":1,"428":3,"441":1,"826":1,"885":1,"892":1,"1021":1}}],["trade",{"0":{"804":1}}],["trader",{"1":{"243":1}}],["traders",{"1":{"167":1,"175":1}}],["traditions",{"1":{"577":1}}],["traditional",{"1":{"201":1,"421":1,"450":1,"497":1,"647":1,"733":1,"743":1,"958":1}}],["trading",{"0":{"110":1,"167":1,"175":1,"238":1,"239":1,"243":1,"252":1,"254":1,"632":1,"1000":1},"1":{"110":1,"167":1,"175":1,"238":1,"243":1,"245":1,"251":1,"252":1,"254":1,"462":1,"632":1}}],["tame",{"0":{"930":1}}],["tangible",{"0":{"873":1},"1":{"873":1}}],["tanstack",{"1":{"495":1}}],["targeting",{"1":{"728":1}}],["targeted",{"1":{"160":1,"815":1}}],["tauri",{"2":{"675":1}}],["taxi",{"1":{"631":1}}],["tai",{"0":{"1047":1},"1":{"1047":1}}],["tailored",{"1":{"624":1}}],["tailwind",{"1":{"205":1,"902":1}}],["taipn",{"3":{"612":1}}],["tackling",{"0":{"456":1,"521":1,"773":1}}],["taynguyen294",{"3":{"524":1}}],["taynguyen",{"3":{"437":1}}],["tag",{"1":{"346":1}}],["tags",{"1":{"110":1,"111":1,"346":1,"996":1,"1001":1,"1003":1,"1011":1}}],["tableau",{"1":{"727":1}}],["table",{"0":{"710":1,"724":2,"731":1},"1":{"253":2,"639":1,"652":1,"710":1,"714":1,"731":1,"788":1,"892":1}}],["tables",{"0":{"253":1},"1":{"635":1,"710":1,"722":1,"724":3}}],["tabs",{"1":{"163":1,"237":1}}],["talked",{"1":{"1006":1}}],["talk",{"0":{"357":1,"404":1,"419":1,"659":1},"1":{"357":1,"942":1}}],["talks",{"0":{"232":1,"1001":1,"1013":1,"1014":1},"1":{"232":1,"406":1,"1013":1,"1014":1}}],["talking",{"0":{"846":1},"1":{"92":1,"846":1}}],["talents",{"1":{"144":1}}],["talented",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"139":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1}}],["talent",{"0":{"260":1,"319":1},"1":{"118":1,"268":1,"275":1,"319":1}}],["takeaways",{"0":{"1013":1,"1014":1},"1":{"1013":1,"1014":1}}],["taken",{"1":{"862":1,"892":1}}],["takes",{"1":{"513":1,"898":1}}],["take",{"0":{"349":1,"856":1,"908":1},"1":{"66":1,"144":1,"216":1,"349":1,"623":1,"638":1,"778":1,"856":1,"889":1},"4":{"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"906":1,"907":1,"908":1}}],["taking",{"1":{"8":1,"96":1,"342":1,"349":1,"851":1,"858":1,"906":1,"908":1,"1018":1}}],["tasked",{"1":{"978":1}}],["tasks",{"0":{"876":1},"1":{"36":1,"157":1,"163":1,"184":1,"212":1,"223":1,"235":1,"371":1,"373":1,"435":1,"439":2,"440":1,"489":1,"498":1,"553":1,"629":1,"732":1,"755":1,"766":1,"779":1,"813":1,"890":1,"894":3,"938":1,"1018":1}}],["task",{"0":{"163":1,"423":1},"1":{"36":1,"163":1,"421":1,"423":1,"439":1,"642":1,"958":1,"978":2,"980":1}}],["typing",{"0":{"576":1},"1":{"858":1}}],["typically",{"1":{"636":1,"878":1}}],["typical",{"1":{"33":1}}],["typography",{"1":{"382":1}}],["typeface",{"1":{"486":1}}],["type",{"0":{"68":1,"88":1,"192":1,"195":1,"196":1,"210":1},"1":{"68":1,"88":1,"195":1,"196":1,"210":1,"387":1,"461":1,"576":1,"579":1,"581":1,"587":1,"605":1,"630":2,"687":1,"724":1}}],["typesafe",{"0":{"500":1},"2":{"500":1}}],["typescript",{"0":{"487":1,"903":1},"1":{"207":1,"461":1,"481":1,"487":1,"495":1,"781":1},"2":{"461":1,"487":1,"514":1,"903":1}}],["types",{"0":{"24":1,"799":1},"1":{"192":1,"347":1,"433":1,"501":1,"544":1,"550":1,"566":1,"568":1,"569":3,"571":1,"574":1,"578":1,"593":1,"602":1,"630":1,"634":1,"671":1,"691":1,"712":1,"775":1,"799":1,"937":1},"2":{"630":1}}],["ten",{"1":{"948":1}}],["tension",{"1":{"832":1,"846":1}}],["tenth",{"1":{"112":1}}],["temperaments",{"1":{"801":1}}],["templates",{"1":{"553":1}}],["template",{"0":{"105":1,"193":1,"913":1},"1":{"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"105":1,"191":1,"193":1,"373":1,"913":2},"2":{"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"191":1},"4":{"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"191":1}}],["te",{"0":{"570":1},"1":{"570":1}}],["texts",{"1":{"865":1}}],["textbox",{"1":{"464":1}}],["text",{"0":{"619":1,"716":1,"893":1},"1":{"274":1,"390":1,"415":1,"431":1,"432":1,"472":1,"619":1,"716":2,"852":1,"892":1}}],["teleport",{"1":{"238":1}}],["telemetry",{"0":{"228":1},"1":{"228":1}}],["tell",{"0":{"991":1},"1":{"30":1,"183":1,"991":1}}],["testability",{"1":{"685":1}}],["tests",{"1":{"457":2,"464":1,"576":1,"750":2,"786":1,"788":2,"803":1,"954":1,"999":1}}],["test",{"0":{"332":1,"457":1,"750":1,"787":1,"788":1,"803":1,"820":1,"824":1},"1":{"332":1,"586":1,"749":1,"768":1,"777":1,"787":1,"788":2,"802":1,"803":1,"920":1},"2":{"332":1}}],["tested",{"1":{"181":1}}],["testing",{"0":{"464":1,"509":1,"524":1,"534":2,"535":1,"656":1,"749":1,"786":1,"788":1,"802":1},"1":{"135":1,"164":1,"232":1,"378":1,"399":1,"401":1,"457":4,"464":1,"509":1,"534":2,"535":1,"635":1,"656":1,"667":1,"697":1,"746":1,"750":1,"761":1,"768":1,"770":1,"787":1,"788":1,"802":1,"803":1,"807":1,"824":1,"828":1,"899":1,"910":1,"917":1,"920":1,"941":1,"984":1,"1034":1},"2":{"464":1,"509":1,"656":1,"988":1}}],["tet",{"0":{"85":1}}],["techie",{"0":{"1036":1},"1":{"1036":1,"1043":1},"2":{"1036":1,"1043":1}}],["techecosystem",{"2":{"368":1}}],["technique",{"0":{"767":1,"990":1},"1":{"387":1,"411":1,"419":1,"434":1,"437":1,"445":1,"450":1,"458":1,"498":1,"510":1,"674":1,"675":1,"676":1,"677":1,"678":1,"767":1,"884":1,"990":1},"2":{"379":1,"390":1,"393":1,"394":1,"397":1,"398":1,"404":1,"462":1,"476":1}}],["techniques",{"0":{"116":1,"233":1,"819":1},"1":{"108":1,"116":1,"229":1,"233":1,"277":1,"282":1,"290":1,"349":1,"394":1,"425":1,"435":1,"480":1,"487":1,"505":1,"526":1,"620":1,"640":1,"700":1,"711":1,"714":1,"828":1,"832":1,"870":1,"880":1,"888":1,"914":1,"920":1,"949":1,"981":1,"992":1,"993":1,"1003":1}}],["technicaldebt",{"2":{"871":1}}],["technical",{"0":{"144":1,"871":1},"1":{"28":2,"124":1,"236":1,"243":1,"244":1,"247":1,"252":1,"624":1,"762":1,"870":1,"871":1,"887":1,"958":1,"988":1,"1007":1,"1021":1}}],["technological",{"1":{"266":1}}],["technologies",{"0":{"283":1},"1":{"41":1,"48":1,"136":1,"203":1,"206":1,"259":1,"285":2,"308":1,"322":1,"362":1,"444":1,"473":1,"494":1,"942":1,"997":1,"1027":1}}],["technology",{"1":{"59":1,"106":1,"119":1,"121":1,"165":1,"176":1,"180":1,"182":1,"203":2,"235":1,"274":1,"277":1,"281":1,"291":1,"358":1,"396":1,"463":1,"548":2,"584":1,"585":1,"593":1,"595":1,"597":1,"598":1,"604":1,"605":1,"673":1,"756":1,"765":1,"822":1,"869":1,"940":1,"945":1,"1001":1}}],["tech",{"0":{"48":1,"105":1,"171":1,"203":1,"267":1,"290":1,"294":1,"308":1,"322":1,"360":1,"1006":1},"1":{"33":1,"48":1,"105":1,"108":1,"118":1,"198":2,"226":1,"232":1,"264":3,"265":1,"267":1,"268":1,"275":2,"281":2,"290":1,"292":1,"302":1,"308":1,"314":1,"360":2,"362":1,"368":1,"664":1,"674":1,"675":1,"676":1,"677":1,"678":1,"997":1,"1036":1,"1045":1,"1047":1},"2":{"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"358":2,"1013":1,"1014":1}}],["terms",{"1":{"888":1}}],["terminal",{"0":{"221":1,"651":1},"1":{"221":1,"651":1}}],["term",{"0":{"418":1},"1":{"29":1,"30":1,"219":1,"359":1,"418":1,"588":1,"669":1,"810":1,"818":1,"827":1,"948":1,"994":1,"1029":1}}],["teamwork",{"1":{"665":1,"667":1,"799":1},"2":{"1040":1}}],["teammate",{"1":{"72":1}}],["teammates",{"1":{"30":1}}],["team",{"0":{"7":1,"55":1,"314":1,"335":1,"340":1,"346":1,"629":1,"702":1,"762":1,"764":1,"768":1,"772":1,"774":1,"775":1,"799":1,"800":1,"801":1,"867":1,"998":1,"1004":1,"1040":1},"1":{"15":1,"17":1,"22":1,"27":1,"37":1,"40":1,"42":1,"49":1,"55":2,"63":1,"65":1,"95":2,"96":1,"100":1,"101":1,"102":1,"103":1,"106":1,"109":1,"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":2,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"160":1,"161":2,"162":2,"165":1,"186":1,"190":1,"192":1,"197":1,"198":2,"199":1,"200":3,"203":1,"244":1,"265":3,"267":2,"292":3,"297":1,"314":1,"330":1,"332":1,"343":1,"345":1,"352":1,"365":2,"368":1,"373":1,"381":1,"390":1,"452":1,"628":1,"629":4,"671":1,"672":1,"702":1,"754":1,"756":1,"758":1,"764":1,"774":1,"775":1,"800":1,"867":3,"870":1,"920":1,"983":2,"985":1,"998":1,"999":1,"1004":1,"1006":1,"1007":1,"1008":1,"1010":1,"1012":2,"1029":1,"1030":1,"1040":1,"1042":1,"1048":1},"2":{"44":1,"93":1,"97":1,"99":1,"101":1,"188":1,"311":1,"315":1,"356":1,"629":1}}],["teams",{"0":{"736":1,"740":1,"826":1},"1":{"0":1,"46":1,"97":1,"119":1,"246":1,"335":1,"371":1,"374":1,"389":1,"483":1,"628":1,"629":1,"657":1,"669":1,"679":1,"702":1,"736":1,"738":1,"739":1,"740":1,"741":1,"742":1,"746":1,"748":1,"756":1,"759":1,"762":2,"766":1,"768":1,"771":1,"772":1,"774":1,"775":1,"800":1,"813":1,"826":1,"874":1,"877":1,"958":1,"1018":1}}],["t",{"0":{"325":1,"703":1,"736":1,"903":1,"991":1},"1":{"6":1,"44":1,"49":1,"63":1,"185":1,"269":1,"278":1,"300":1,"306":1,"328":2,"331":2,"338":1,"342":2,"343":1,"349":1,"477":1,"631":1,"811":1,"868":1,"881":1,"894":1,"903":1,"991":1}}],["tiny",{"1":{"711":1}}],["tinygo",{"0":{"222":1},"1":{"222":1}}],["tim",{"1":{"847":1}}],["timing",{"1":{"644":1}}],["timeouts",{"1":{"915":1}}],["timeframes",{"1":{"878":1}}],["timely",{"1":{"644":1}}],["timeline",{"1":{"161":1,"162":1,"755":1}}],["timestamps",{"1":{"731":1}}],["timescale",{"1":{"253":1}}],["timescaledb",{"0":{"253":1},"2":{"253":1}}],["times",{"1":{"53":1,"243":1,"462":1,"728":1,"757":1,"975":1,"1020":1}}],["time",{"0":{"225":1,"243":1,"534":1,"776":1,"823":1,"827":1,"921":1},"1":{"4":1,"39":1,"50":1,"93":1,"120":1,"175":1,"214":1,"225":1,"241":1,"250":1,"252":1,"284":1,"311":1,"316":1,"324":1,"331":1,"339":1,"359":1,"372":1,"395":1,"415":1,"534":1,"567":1,"588":1,"621":1,"637":1,"640":1,"662":1,"750":1,"766":1,"767":1,"769":1,"776":1,"780":1,"823":1,"824":1,"827":1,"872":1,"888":1,"894":1,"898":1,"907":1,"932":1,"971":1,"1035":1,"1037":1},"2":{"241":1,"637":1}}],["ticks",{"1":{"621":1}}],["tickets",{"1":{"170":1,"768":1}}],["ticket",{"0":{"170":1}}],["ti",{"0":{"580":1},"1":{"570":1}}],["tip",{"2":{"477":1}}],["tips",{"0":{"325":1,"388":1},"1":{"204":1,"288":1,"305":1,"339":1,"372":1,"379":1,"384":1,"493":1,"521":1,"672":1,"699":1,"875":1,"992":1,"995":1,"1006":1},"2":{"6":1,"385":1}}],["title",{"0":{"342":1}}],["tight",{"1":{"161":1,"162":1}}],["tied",{"1":{"488":1,"1000":1}}],["tier",{"1":{"144":1}}],["tieubao",{"3":{"1":1,"3":1,"4":1,"6":1,"7":1,"8":1,"9":1,"12":1,"13":1,"14":1,"16":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"37":1,"38":1,"39":1,"43":1,"44":1,"45":1,"50":1,"51":1,"57":1,"58":1,"60":1,"63":1,"66":1,"67":1,"90":1,"91":1,"92":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"124":1,"152":1,"154":1,"155":1,"158":1,"160":1,"168":1,"169":1,"171":1,"173":1,"174":1,"178":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"194":1,"199":1,"210":1,"281":1,"295":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"310":1,"312":1,"314":1,"315":1,"317":1,"320":1,"321":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"341":1,"342":1,"343":1,"344":1,"364":1,"368":1,"444":1,"522":1,"523":1,"526":1,"531":1,"611":1,"627":1,"646":1,"868":1,"914":1,"918":1,"995":1}}],["til",{"0":{"104":1},"1":{"104":1}}],["thumbs",{"0":{"406":2},"1":{"406":2}}],["thorough",{"1":{"358":1}}],["thought",{"0":{"884":1,"997":1},"1":{"480":1,"570":1,"638":1,"884":1}}],["thoughts",{"1":{"334":1,"974":1}}],["thoughtful",{"1":{"326":1,"823":1}}],["thoughtworks",{"1":{"48":1,"308":1}}],["though",{"1":{"44":1}}],["those",{"1":{"40":1,"270":1,"311":1,"480":1,"485":1,"511":1,"543":1,"894":1}}],["thread",{"0":{"894":1},"1":{"894":1}}],["threads",{"1":{"792":1}}],["threaded",{"1":{"779":1,"894":1}}],["threats",{"0":{"521":1},"1":{"912":1}}],["threejs",{"0":{"515":1},"1":{"515":7},"2":{"515":1},"4":{"515":1}}],["three",{"0":{"377":1,"881":1},"1":{"264":1,"377":1,"441":1,"661":1,"775":1,"878":1,"881":1,"901":1,"943":1}}],["thrashing",{"0":{"468":1},"1":{"468":1}}],["thrilling",{"1":{"280":1}}],["thrive",{"1":{"34":1,"57":1,"336":1,"575":1,"854":1}}],["throughput",{"1":{"939":1}}],["throughout",{"1":{"90":1,"444":1,"738":1}}],["through",{"0":{"614":1},"1":{"4":1,"24":1,"32":1,"34":1,"38":1,"61":1,"105":1,"106":1,"110":1,"111":1,"114":1,"124":1,"160":1,"173":1,"184":1,"198":1,"199":1,"200":1,"235":1,"238":1,"241":1,"242":1,"245":1,"254":1,"284":1,"306":1,"313":1,"326":1,"349":1,"351":1,"372":1,"426":1,"432":1,"442":1,"447":1,"520":1,"543":1,"576":1,"594":1,"606":1,"631":1,"711":1,"719":1,"762":1,"770":1,"774":1,"806":1,"808":1,"826":1,"850":1,"851":1,"855":1,"862":1,"905":1,"909":1,"921":1,"937":1,"948":1,"996":1,"1001":1,"1003":1,"1011":1,"1019":1,"1020":1,"1023":1,"1037":1,"1042":1,"1045":1,"1046":1}}],["thick",{"1":{"947":1}}],["third",{"1":{"94":1,"173":1,"282":1,"360":1,"426":1,"675":1,"752":1,"1001":1}}],["thinkers",{"1":{"573":1}}],["think",{"1":{"154":1,"331":1,"439":1,"623":1,"702":1}}],["thinking",{"0":{"384":1,"395":1,"570":1,"573":1,"580":1,"774":1,"859":1},"1":{"29":1,"384":1,"395":1,"572":1,"702":1,"705":1,"733":1,"773":1,"831":1,"848":2,"851":1,"852":1,"853":1,"856":1,"859":1,"860":1,"861":1,"862":1,"967":1},"2":{"384":1,"395":1}}],["thing",{"0":{"921":1},"1":{"98":1,"294":1,"337":1,"342":1,"978":1}}],["things",{"0":{"384":1},"1":{"39":1,"43":1,"120":1,"283":1,"328":1,"331":1,"338":2,"611":1,"1038":1}}],["this",{"1":{"1":1,"14":1,"20":1,"34":1,"36":1,"39":1,"44":1,"49":1,"58":1,"62":1,"63":1,"65":1,"72":1,"91":2,"94":1,"95":1,"96":1,"106":1,"108":1,"113":1,"123":1,"189":1,"190":1,"194":1,"198":1,"207":1,"209":1,"212":1,"213":1,"216":1,"218":1,"219":1,"220":1,"223":1,"235":1,"241":1,"246":1,"248":1,"251":3,"260":1,"267":1,"269":1,"270":1,"271":1,"277":1,"278":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"294":1,"295":1,"296":1,"297":1,"300":1,"306":1,"307":1,"333":1,"337":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"353":1,"354":1,"361":1,"362":1,"364":1,"366":1,"367":1,"368":1,"369":1,"370":1,"373":1,"381":1,"406":2,"410":1,"411":1,"412":1,"414":1,"415":1,"416":1,"419":1,"420":1,"421":2,"423":2,"424":1,"426":1,"428":2,"431":1,"432":1,"433":1,"437":1,"439":1,"440":1,"441":1,"442":1,"444":1,"445":1,"449":1,"451":1,"470":1,"471":1,"477":1,"480":1,"485":1,"487":1,"489":1,"492":1,"493":1,"494":1,"502":1,"516":1,"529":1,"530":1,"546":1,"548":1,"550":1,"552":1,"583":1,"584":1,"587":1,"588":1,"589":1,"591":1,"592":1,"593":1,"595":1,"597":1,"598":1,"600":1,"601":1,"604":1,"605":1,"607":1,"613":2,"621":1,"625":1,"626":1,"628":1,"629":1,"631":1,"636":1,"637":1,"638":2,"642":1,"686":1,"760":1,"822":1,"867":1,"879":1,"884":1,"886":1,"889":1,"891":1,"892":1,"914":1,"927":1,"941":1,"958":1,"959":2,"972":1,"974":1,"976":1,"980":1,"987":1,"990":1,"995":1,"1000":1,"1015":1,"1016":1}}],["thad",{"1":{"846":1}}],["thangnt294",{"3":{"217":1,"219":1,"530":1}}],["than",{"0":{"560":1,"704":1,"808":1,"809":1,"830":1},"1":{"119":1,"325":1,"335":1,"336":1,"485":1,"511":1,"702":1,"834":1,"876":1,"951":1,"954":1,"991":1}}],["thank",{"0":{"71":1}}],["thanhlmm",{"3":{"468":1}}],["thanhpn",{"3":{"408":1,"416":1,"428":1,"546":1,"583":1,"584":1,"587":1,"591":1,"593":1,"595":1,"597":1,"598":1,"602":1,"604":1,"789":1,"891":1}}],["thanh",{"0":{"29":1,"1028":1,"1048":1},"1":{"29":1,"1028":1,"1048":1},"3":{"9":1,"10":1,"11":1,"12":1,"15":1,"21":1,"46":1,"48":1,"51":1,"59":1,"64":1,"166":1,"177":1,"197":1,"198":1,"200":1,"203":1,"208":1,"236":1,"238":1,"243":1,"244":1,"250":1,"252":1,"264":1,"265":1,"266":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"289":1,"291":1,"292":1,"293":1,"308":1,"309":1,"319":1,"322":1,"348":1,"356":1,"357":1,"358":1,"362":1,"365":1,"404":1,"407":1,"409":1,"417":1,"418":1,"433":1,"434":1,"446":1,"447":1,"449":1,"452":1,"456":1,"458":1,"465":1,"473":1,"477":1,"480":1,"489":1,"491":1,"498":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"511":1,"638":1,"641":1,"869":1,"886":1,"890":1,"898":1,"911":1}}],["that",{"0":{"163":1,"178":1,"820":1,"873":1},"1":{"15":1,"30":1,"31":1,"32":1,"40":1,"44":1,"47":1,"52":1,"53":1,"69":1,"72":1,"73":1,"76":1,"79":1,"82":1,"84":1,"85":1,"87":1,"91":2,"95":1,"118":1,"119":1,"156":1,"157":1,"158":1,"160":2,"163":2,"164":1,"165":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"178":2,"179":1,"180":1,"188":2,"190":1,"191":1,"194":1,"197":1,"201":1,"202":1,"223":1,"236":1,"238":1,"246":1,"249":2,"265":1,"269":2,"277":1,"278":2,"280":1,"283":1,"287":2,"288":1,"289":1,"291":1,"292":1,"299":1,"316":1,"320":1,"328":1,"334":1,"338":1,"341":1,"342":2,"349":1,"355":1,"365":1,"389":1,"391":1,"392":1,"405":1,"411":1,"421":1,"422":1,"423":1,"428":3,"431":2,"437":1,"439":1,"454":1,"455":1,"458":1,"459":1,"463":1,"467":1,"473":1,"474":1,"477":1,"480":2,"484":1,"486":1,"490":1,"497":2,"500":1,"502":3,"512":1,"514":1,"515":1,"518":1,"525":1,"529":1,"530":1,"543":2,"544":1,"547":1,"548":1,"557":1,"564":1,"587":1,"588":1,"595":1,"601":1,"605":2,"607":1,"609":1,"611":1,"612":1,"613":1,"620":1,"622":1,"624":1,"630":1,"631":2,"635":2,"637":1,"638":1,"640":1,"642":2,"647":1,"651":1,"654":1,"733":1,"737":1,"778":1,"786":1,"811":1,"815":1,"819":1,"825":1,"827":1,"831":1,"832":1,"836":1,"839":1,"840":1,"849":1,"868":1,"873":1,"874":1,"884":1,"894":2,"904":1,"918":1,"932":1,"935":1,"944":1,"945":1,"946":1,"950":1,"958":1,"974":1,"980":1,"982":1,"987":2,"988":1,"992":1,"993":1,"1018":1,"1036":1,"1046":1}}],["theories",{"0":{"814":1},"1":{"814":1,"950":1,"953":1,"954":1}}],["theorem",{"0":{"712":1},"1":{"712":1}}],["theoretical",{"1":{"565":1}}],["theory",{"0":{"444":1,"801":1},"1":{"994":1}}],["thecodister",{"3":{"422":1}}],["then",{"0":{"948":1},"1":{"223":1,"328":1,"515":1,"894":1}}],["these",{"1":{"201":1,"277":1,"282":1,"286":1,"288":1,"331":1,"334":1,"365":1,"411":1,"413":1,"607":1,"628":1,"629":1,"664":1,"712":1,"799":1,"878":1,"888":1,"890":1,"914":1,"958":1,"987":2,"1018":1}}],["theme",{"1":{"266":1,"267":1,"351":1,"830":1,"836":1}}],["themes",{"1":{"116":1,"832":1,"833":1,"995":1}}],["themselves",{"1":{"158":1}}],["them",{"0":{"285":1,"848":1},"1":{"158":1,"159":1,"161":1,"162":1,"169":1,"179":1,"182":1,"288":1,"300":1,"305":2,"314":1,"342":1,"343":1,"349":1,"407":1,"439":1,"515":2,"630":1,"634":1,"736":1,"747":1,"795":1,"844":1,"855":1,"879":1,"972":1,"987":3}}],["there",{"1":{"122":1,"126":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"140":1,"141":1,"142":1,"143":1,"145":1,"146":1,"147":1,"148":1,"149":1,"188":2,"216":1,"270":1,"296":4,"342":1,"470":1,"477":1,"480":1,"735":1,"889":1}}],["they",{"0":{"737":1},"1":{"39":1,"97":1,"179":1,"283":1,"306":1,"331":1,"336":2,"338":1,"420":1,"463":1,"480":1,"490":1,"520":1,"550":1,"584":1,"587":1,"593":1,"597":1,"601":1,"602":1,"604":1,"605":1,"612":1,"631":1,"638":1,"683":1,"759":1,"801":1,"987":2,"1017":1,"1035":2}}],["their",{"0":{"164":1,"975":1},"1":{"28":1,"45":1,"46":1,"47":2,"53":1,"72":1,"120":1,"157":1,"159":2,"160":1,"161":3,"162":3,"164":3,"166":3,"167":1,"168":1,"170":1,"172":2,"173":1,"177":1,"178":1,"180":1,"182":1,"211":1,"267":1,"285":1,"287":2,"338":1,"410":1,"415":2,"421":1,"434":1,"442":1,"445":1,"447":1,"452":1,"466":1,"475":1,"480":2,"501":1,"514":1,"524":1,"525":1,"528":2,"529":1,"550":1,"559":1,"571":1,"577":1,"584":1,"587":1,"589":1,"593":1,"597":2,"601":1,"602":1,"604":2,"605":1,"623":2,"638":1,"654":1,"687":1,"703":1,"724":1,"753":1,"774":1,"804":1,"805":1,"838":1,"877":1,"884":1,"890":2,"891":2,"892":1,"914":1,"939":1,"946":1,"952":1,"972":1,"1001":1,"1017":1,"1024":1}}],["the",{"0":{"23":1,"26":1,"92":1,"93":1,"95":1,"97":1,"99":1,"100":1,"106":1,"110":2,"117":1,"119":1,"159":1,"164":1,"185":1,"218":1,"220":1,"221":1,"231":2,"282":1,"286":1,"297":1,"315":1,"316":1,"330":1,"332":1,"333":1,"337":1,"342":1,"343":1,"379":1,"385":1,"393":1,"444":1,"449":1,"475":1,"484":1,"521":1,"561":1,"562":1,"563":1,"569":1,"600":1,"609":2,"610":1,"612":1,"614":2,"625":1,"642":1,"651":1,"664":1,"715":1,"733":1,"743":1,"766":1,"768":1,"797":2,"806":1,"812":1,"818":1,"823":1,"830":2,"833":1,"839":2,"847":1,"857":1,"890":1,"894":1,"895":1,"898":1,"902":1,"921":1,"926":1,"958":1,"960":1,"967":1,"972":1,"987":1,"993":1,"1009":1,"1013":1,"1014":1},"1":{"1":2,"3":1,"4":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"15":1,"16":2,"17":2,"18":1,"19":2,"20":1,"21":2,"22":2,"24":1,"26":1,"27":1,"29":1,"30":2,"31":1,"33":1,"36":1,"38":1,"39":1,"40":2,"43":1,"44":1,"45":5,"49":1,"53":2,"54":3,"55":1,"56":1,"57":1,"61":1,"66":3,"67":1,"68":1,"69":2,"70":1,"71":2,"72":1,"73":2,"74":3,"75":2,"76":2,"77":2,"78":2,"79":2,"80":1,"81":2,"82":2,"83":1,"84":2,"85":2,"86":3,"87":2,"88":1,"89":5,"91":4,"92":1,"93":1,"94":1,"95":1,"96":1,"97":2,"98":1,"100":1,"101":1,"102":1,"103":2,"104":1,"105":2,"106":4,"108":2,"109":1,"110":2,"111":1,"113":3,"114":1,"116":2,"117":1,"120":1,"121":2,"122":2,"123":2,"124":2,"125":3,"126":2,"127":2,"128":2,"129":2,"130":2,"132":2,"133":2,"134":2,"136":3,"137":2,"138":1,"140":2,"141":2,"142":2,"143":2,"144":1,"145":2,"146":2,"147":2,"148":2,"149":2,"150":1,"153":1,"158":1,"160":2,"163":1,"165":1,"171":1,"179":2,"181":1,"182":2,"183":1,"185":1,"189":1,"191":2,"194":2,"195":1,"196":1,"198":1,"200":2,"201":1,"202":1,"203":4,"206":1,"207":5,"208":2,"209":1,"212":5,"215":1,"216":1,"217":1,"219":1,"220":2,"221":1,"223":1,"224":1,"227":1,"230":2,"231":2,"235":3,"238":1,"241":1,"243":1,"244":3,"247":1,"248":1,"249":3,"251":1,"258":2,"260":1,"264":3,"265":1,"266":2,"267":5,"269":2,"270":1,"271":4,"272":4,"273":3,"275":1,"276":4,"277":5,"278":2,"279":1,"281":3,"282":6,"283":1,"284":1,"285":3,"286":4,"287":2,"288":2,"290":3,"291":3,"292":1,"293":1,"296":1,"307":1,"311":6,"315":2,"316":3,"323":1,"324":2,"325":1,"329":1,"330":1,"332":3,"333":1,"334":1,"337":1,"338":2,"341":5,"342":3,"343":3,"346":1,"351":4,"352":2,"355":2,"356":1,"357":1,"358":1,"360":2,"365":1,"366":1,"368":1,"375":1,"379":1,"387":1,"395":1,"402":1,"403":1,"405":1,"406":5,"411":2,"412":2,"413":1,"414":2,"415":4,"416":1,"417":1,"418":1,"419":1,"420":3,"421":3,"422":2,"423":1,"424":2,"426":1,"427":1,"428":6,"430":3,"431":6,"434":1,"436":1,"439":4,"440":2,"441":2,"442":5,"443":1,"444":3,"446":1,"447":1,"448":1,"449":3,"452":1,"454":1,"456":2,"458":1,"459":1,"460":2,"461":1,"463":1,"466":2,"467":2,"468":2,"469":1,"470":1,"473":2,"474":1,"475":1,"477":5,"478":1,"479":3,"480":3,"484":1,"487":1,"488":1,"489":1,"490":1,"491":2,"493":2,"494":1,"495":1,"496":2,"497":1,"498":1,"500":1,"502":1,"510":1,"511":7,"512":1,"513":3,"515":1,"517":2,"518":3,"519":1,"520":1,"523":1,"527":1,"528":1,"529":1,"530":3,"536":1,"537":2,"540":2,"541":1,"543":6,"546":2,"547":1,"548":5,"551":2,"552":1,"554":1,"557":1,"561":1,"562":1,"563":1,"565":2,"567":1,"568":1,"569":1,"571":1,"574":1,"575":1,"576":1,"579":1,"580":1,"583":1,"588":3,"589":2,"590":1,"591":3,"600":1,"601":1,"606":1,"607":1,"609":5,"610":1,"612":1,"613":2,"614":3,"616":1,"620":1,"622":1,"623":2,"625":2,"630":1,"631":1,"635":2,"636":2,"637":1,"638":1,"642":2,"644":1,"648":2,"651":1,"662":1,"666":1,"672":1,"673":1,"674":1,"675":1,"676":1,"677":2,"678":1,"685":1,"692":1,"693":1,"694":1,"701":1,"702":1,"706":1,"707":1,"708":1,"709":1,"710":1,"712":1,"724":1,"727":1,"733":1,"735":2,"738":1,"753":1,"758":1,"759":1,"760":1,"761":1,"767":1,"773":1,"780":1,"783":1,"784":1,"785":2,"788":2,"790":1,"791":2,"794":3,"795":1,"798":1,"799":1,"801":1,"804":1,"805":1,"812":2,"814":1,"815":1,"816":1,"819":1,"820":2,"825":1,"830":1,"831":1,"833":2,"834":1,"838":1,"839":1,"840":1,"844":1,"846":1,"852":1,"857":1,"861":1,"864":1,"867":1,"869":1,"877":2,"878":2,"881":1,"884":1,"886":1,"887":3,"888":4,"889":3,"890":2,"891":1,"892":1,"894":3,"895":3,"896":2,"898":2,"900":1,"902":1,"903":1,"904":2,"906":2,"908":1,"909":1,"913":4,"916":1,"919":1,"923":1,"924":1,"925":2,"926":1,"928":1,"930":1,"934":2,"935":1,"937":1,"942":1,"943":1,"951":1,"952":1,"953":1,"958":5,"959":1,"960":1,"962":1,"966":3,"968":1,"969":1,"971":1,"974":2,"975":4,"976":3,"978":10,"980":1,"982":1,"987":2,"989":1,"996":1,"997":2,"998":2,"999":3,"1000":2,"1001":3,"1002":1,"1003":2,"1004":1,"1008":1,"1009":1,"1010":3,"1012":1,"1013":1,"1014":1,"1015":1,"1016":1,"1017":1,"1018":2,"1019":1,"1022":1,"1024":2,"1025":1,"1026":1,"1027":1,"1033":3,"1036":2,"1037":1,"1039":1,"1040":1,"1041":2,"1043":1,"1044":1,"1045":1,"1046":2,"1047":2,"1050":1},"4":{"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"993":1}}],["tolerant",{"0":{"879":1},"1":{"879":1}}],["tolerance",{"1":{"712":1,"719":1,"785":1}}],["todolist",{"1":{"645":1}}],["today",{"1":{"92":1,"203":1}}],["total",{"1":{"631":1,"902":1}}],["touch",{"1":{"831":1}}],["tour",{"0":{"615":1,"913":1}}],["toughness",{"1":{"326":1}}],["ton",{"0":{"599":1,"942":1},"1":{"599":1,"942":2},"2":{"599":1,"942":1}}],["toan",{"0":{"1031":1},"1":{"1031":1}}],["toanbku",{"3":{"441":1,"488":1}}],["toanhq",{"3":{"202":1}}],["towards",{"1":{"628":1,"629":1,"884":1}}],["toward",{"1":{"415":1,"492":1,"824":1,"997":1,"1048":1}}],["too",{"1":{"428":1,"769":1,"812":1}}],["took",{"1":{"337":1}}],["toolkit",{"0":{"481":1},"1":{"481":1,"582":1}}],["tooling",{"0":{"1004":1},"1":{"475":1,"1004":1},"2":{"234":1,"312":1,"425":1,"448":1,"562":1,"563":1,"564":1,"1015":1,"1016":1}}],["toolings",{"1":{"225":1,"277":1}}],["tool",{"0":{"229":1,"887":1,"965":1},"1":{"115":1,"151":1,"163":1,"164":1,"185":1,"207":1,"221":1,"229":1,"402":1,"415":1,"480":1,"530":1,"625":1,"626":1,"651":1,"656":1,"668":1,"715":1,"859":1,"887":1,"935":1,"958":1,"965":1,"997":1,"1005":1},"2":{"481":1,"497":1,"660":1,"914":1}}],["tools",{"0":{"232":1,"312":1,"727":1,"778":1,"968":1},"1":{"103":1,"107":1,"166":1,"171":1,"178":1,"203":1,"204":1,"205":1,"206":1,"207":1,"235":1,"238":1,"248":1,"264":1,"272":1,"275":1,"283":1,"286":1,"312":1,"349":1,"358":1,"380":1,"390":1,"429":1,"436":1,"438":1,"454":1,"481":1,"492":1,"493":1,"494":1,"513":1,"541":1,"553":1,"596":1,"608":1,"632":1,"647":1,"659":1,"673":1,"706":1,"727":1,"752":1,"778":1,"781":1,"797":2,"822":1,"880":1,"887":1,"899":1,"917":1,"968":1,"973":1,"981":1,"984":1,"987":2,"999":1,"1000":1,"1004":1,"1015":1,"1016":1,"1018":1},"2":{"514":1}}],["toggle",{"1":{"459":1}}],["toggling",{"1":{"284":1}}],["together",{"1":{"63":1,"152":1,"155":1,"178":1,"302":1,"345":1,"368":1,"381":1,"423":1,"502":1,"987":1}}],["tokenomics",{"0":{"1001":1}}],["tokenomy",{"0":{"158":1},"1":{"158":1}}],["token",{"0":{"307":1,"412":1,"551":2,"600":1,"701":1},"1":{"153":1,"307":1,"410":1,"412":1,"551":3,"552":2,"600":1,"601":1,"603":1,"701":2,"888":1,"919":1,"997":1},"2":{"307":1,"552":1}}],["tokens",{"0":{"552":1},"1":{"61":1,"389":1,"504":1,"551":1,"552":3,"601":1}}],["topologies",{"1":{"775":1,"983":1}}],["toplogies",{"0":{"775":1}}],["top",{"1":{"144":1,"207":1,"270":1,"430":1,"443":1,"727":1,"880":1,"966":1}}],["topics",{"1":{"103":1,"104":1,"105":1,"106":1,"107":1,"110":1,"111":1,"113":1,"114":1,"116":1,"117":1,"327":1,"346":1,"842":1,"940":1,"961":1,"972":1,"981":1,"985":1,"996":1,"997":1,"999":1,"1001":2,"1002":1,"1003":2,"1009":1,"1011":1},"2":{"584":1,"597":1,"598":1},"4":{"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"462":1,"463":1,"464":1,"465":1,"466":1,"467":1,"468":1,"469":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":1,"583":1,"584":1,"585":1,"586":1,"587":1,"588":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"595":1,"596":1,"597":1,"598":1,"599":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"624":1,"625":1,"626":1,"627":1,"628":1,"629":1,"630":1,"631":1,"632":1,"633":1,"634":1,"635":1,"636":1,"637":1,"638":1,"639":1,"640":1,"641":1,"642":1,"643":1,"644":1,"645":1,"646":1,"647":1,"648":1,"649":1,"650":1,"651":1,"652":1,"653":1,"654":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":1,"661":1,"662":1,"663":1,"664":1,"665":1,"666":1,"667":1,"668":1,"669":1,"670":1,"671":1,"672":1,"673":1,"679":1,"680":1,"681":1,"682":1,"683":1,"684":1,"685":1,"686":1,"687":1,"688":1,"689":1,"690":1,"691":1,"692":1,"693":1,"694":1,"695":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"702":1,"703":1,"704":1,"705":1,"706":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1,"724":1,"725":1,"726":1,"727":1,"728":1,"729":1,"730":1,"731":1,"732":1,"733":1,"734":1,"735":1,"736":1,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"743":1,"744":1,"745":1,"746":1,"747":1,"748":1,"749":1,"750":1,"751":1,"752":1,"753":1,"754":1,"755":1,"756":1,"757":1,"758":1,"759":1,"760":1,"761":1,"762":1,"763":1,"764":1,"765":1,"766":1,"767":1,"768":1,"769":1,"770":1,"771":1,"772":1,"773":1,"774":1,"775":1,"776":1,"777":1,"778":1,"779":1,"780":1,"781":1,"782":1,"783":1,"784":1,"785":1,"786":1,"787":1,"788":1,"789":1,"790":1,"791":1,"792":1,"793":1,"794":1,"795":1,"796":1,"797":1,"798":1,"799":1,"800":1,"801":1,"802":1,"803":1,"804":1,"805":1,"806":1,"807":1,"808":1,"809":1,"810":1,"811":1,"812":1,"813":1,"814":1,"815":1,"816":1,"817":1,"818":1,"819":1,"820":1,"821":1,"822":1,"823":1,"824":1,"825":1,"826":1,"827":1,"828":1,"829":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":1,"839":1,"840":1,"841":1,"842":1,"843":1,"844":1,"845":1,"846":1,"847":1,"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"860":1,"861":1,"862":1,"863":1,"864":1,"865":1,"866":1,"870":1,"871":1,"872":1,"873":1,"874":1,"875":1,"876":1,"877":1,"878":1,"879":1,"880":1,"881":1,"882":1,"883":1,"884":1,"885":1,"886":1,"887":1,"888":1,"889":1,"890":1,"891":1,"892":1,"893":1,"894":1,"895":1,"896":1,"897":1,"898":1,"899":1,"900":1,"901":1,"902":1,"903":1,"904":1,"905":1,"906":1,"907":1,"908":1,"909":1,"910":1,"911":1,"912":1,"913":1,"914":1,"915":1,"916":1,"917":1,"918":1,"919":1,"920":1,"921":1,"922":1,"923":1,"924":1,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1,"934":1,"935":1,"936":1,"937":1,"938":1,"939":1,"940":1,"941":1,"942":1,"943":1,"944":1,"945":1,"946":1,"947":1,"948":1,"949":1,"950":1,"951":1,"952":1,"953":1,"954":1,"955":1,"956":1,"957":1,"958":1,"959":1,"960":1,"961":1,"962":1,"963":1,"964":1,"965":1,"966":1,"967":1,"968":1,"969":1,"970":1,"971":1,"972":1,"973":1,"974":1,"975":1,"976":1,"977":1,"978":1,"979":1,"980":1,"981":1,"982":1,"983":1,"984":1,"985":1,"986":1,"987":1,"988":1,"989":1,"990":1,"991":1,"992":1,"993":1,"994":1}}],["topic",{"1":{"45":1,"111":1,"200":1,"280":1,"291":1,"355":1}}],["tom",{"0":{"1030":1},"1":{"998":1,"1008":1,"1030":1},"3":{"48":1,"165":1,"308":1}}],["to",{"0":{"36":1,"39":1,"61":2,"78":1,"100":1,"169":1,"197":1,"202":1,"208":1,"213":1,"218":1,"220":1,"225":1,"244":1,"247":1,"253":1,"284":1,"285":1,"320":1,"347":2,"348":1,"349":1,"350":2,"353":1,"354":1,"365":1,"367":1,"370":2,"385":1,"416":1,"419":2,"433":1,"438":1,"440":1,"451":1,"457":1,"462":1,"464":1,"469":1,"485":1,"551":2,"564":1,"600":1,"625":1,"630":1,"636":1,"665":1,"715":1,"721":1,"722":1,"723":1,"733":1,"743":1,"765":1,"766":1,"812":2,"813":1,"848":1,"849":1,"855":1,"865":1,"871":1,"872":1,"877":1,"884":1,"893":2,"895":1,"908":1,"911":1,"914":1,"944":1,"998":1,"1009":1,"1019":1},"1":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"14":1,"15":1,"18":1,"23":1,"24":1,"27":1,"28":1,"30":2,"31":2,"35":1,"36":3,"39":1,"41":1,"42":2,"43":1,"44":1,"45":5,"50":1,"51":2,"53":1,"54":1,"55":1,"56":1,"57":1,"60":1,"61":3,"62":2,"64":1,"66":3,"69":3,"71":2,"72":3,"73":3,"74":2,"75":2,"76":3,"78":2,"79":1,"80":2,"81":1,"82":1,"83":1,"84":3,"85":3,"86":1,"87":3,"89":2,"91":2,"93":1,"94":1,"95":3,"98":2,"104":1,"107":1,"110":1,"111":2,"112":2,"116":2,"117":1,"118":2,"119":1,"120":1,"122":2,"124":1,"125":3,"126":2,"127":2,"128":2,"129":2,"130":2,"131":3,"132":2,"133":2,"134":2,"135":1,"136":1,"137":2,"138":3,"139":1,"140":2,"141":2,"142":2,"143":2,"145":2,"146":2,"147":2,"148":2,"149":2,"150":1,"152":1,"153":1,"154":1,"158":2,"159":1,"160":1,"161":1,"165":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"174":1,"177":1,"178":1,"179":1,"180":1,"182":1,"183":1,"186":2,"188":2,"189":1,"190":1,"191":3,"192":3,"193":1,"194":2,"198":2,"200":2,"201":2,"202":1,"203":1,"204":1,"207":3,"212":3,"213":3,"216":2,"219":1,"221":1,"223":1,"233":1,"235":1,"239":1,"240":1,"241":1,"243":1,"244":1,"248":2,"249":1,"250":1,"251":2,"252":1,"253":2,"265":2,"267":5,"270":2,"272":2,"274":1,"276":1,"279":1,"280":1,"281":1,"283":2,"284":1,"285":2,"286":2,"287":1,"288":2,"289":1,"290":2,"291":1,"292":2,"293":1,"297":3,"300":1,"303":1,"304":2,"305":3,"309":1,"311":1,"313":1,"314":1,"318":1,"320":1,"323":1,"324":2,"325":1,"326":1,"327":3,"330":2,"331":1,"332":2,"337":1,"338":2,"339":1,"340":2,"342":2,"343":1,"344":2,"345":1,"346":2,"347":3,"348":1,"350":2,"351":1,"352":1,"353":2,"354":3,"355":2,"356":1,"357":1,"358":1,"360":1,"361":1,"362":3,"365":1,"366":1,"367":2,"368":1,"370":3,"372":1,"373":1,"375":1,"376":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"386":2,"387":1,"388":1,"389":1,"390":1,"391":2,"392":2,"393":1,"394":2,"395":1,"401":1,"403":2,"405":2,"406":1,"408":1,"410":1,"411":3,"412":1,"413":2,"415":2,"416":2,"417":1,"418":2,"419":1,"420":2,"421":2,"422":2,"423":3,"424":2,"426":1,"427":2,"428":2,"429":1,"431":1,"432":2,"433":2,"435":1,"436":1,"438":1,"439":3,"440":2,"442":2,"443":1,"445":3,"447":1,"451":1,"452":1,"453":1,"457":1,"458":2,"459":2,"462":1,"463":1,"464":2,"466":2,"467":1,"470":3,"471":2,"472":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":2,"480":4,"486":1,"487":2,"488":1,"490":1,"491":1,"497":2,"498":1,"501":2,"502":3,"504":1,"508":1,"509":1,"510":1,"511":1,"513":1,"515":1,"516":2,"517":1,"518":2,"520":1,"521":1,"526":1,"527":1,"530":1,"535":1,"539":1,"540":1,"543":1,"544":1,"545":1,"546":1,"553":1,"554":1,"571":1,"573":1,"574":1,"576":1,"578":1,"581":1,"582":1,"585":1,"586":1,"587":1,"588":1,"589":2,"592":1,"594":1,"599":1,"600":2,"602":1,"605":2,"607":1,"609":1,"613":1,"617":1,"619":2,"620":2,"621":1,"622":1,"623":3,"625":1,"626":1,"628":1,"629":1,"630":2,"631":3,"632":1,"633":1,"634":1,"635":1,"637":1,"638":2,"641":1,"642":2,"644":1,"645":1,"646":1,"648":1,"649":1,"650":1,"651":1,"652":2,"653":1,"655":1,"657":1,"658":1,"661":1,"662":1,"663":1,"671":2,"672":1,"673":1,"677":1,"679":1,"680":1,"681":1,"682":1,"684":1,"689":1,"690":1,"693":1,"695":1,"696":2,"697":2,"698":1,"700":2,"704":1,"706":1,"709":1,"710":1,"713":1,"716":1,"717":3,"718":1,"720":3,"721":1,"723":2,"724":1,"725":1,"726":2,"727":1,"729":2,"731":2,"732":3,"733":1,"735":2,"737":2,"739":1,"742":1,"743":2,"744":2,"745":2,"747":2,"748":1,"750":2,"751":2,"752":2,"753":1,"754":2,"755":1,"756":1,"757":1,"758":1,"759":1,"761":1,"764":1,"765":2,"766":2,"768":2,"769":2,"770":1,"771":1,"772":2,"774":1,"775":1,"776":2,"777":2,"778":2,"779":1,"780":2,"782":1,"784":2,"785":2,"786":2,"787":2,"789":2,"790":1,"793":1,"794":2,"795":1,"796":2,"797":1,"798":1,"800":1,"803":1,"807":1,"808":1,"810":1,"811":1,"814":1,"816":2,"817":1,"818":1,"819":1,"820":2,"821":1,"822":1,"823":1,"824":1,"825":1,"826":1,"827":1,"828":1,"829":1,"830":1,"831":1,"832":2,"834":1,"835":1,"836":1,"837":2,"838":2,"840":1,"841":1,"843":1,"846":1,"847":1,"848":1,"849":1,"852":1,"854":1,"856":2,"858":1,"860":1,"861":1,"862":2,"864":1,"865":2,"866":1,"868":1,"870":1,"871":1,"872":1,"873":2,"875":1,"876":1,"877":2,"878":1,"879":2,"880":1,"884":2,"886":1,"887":1,"888":2,"889":2,"892":2,"893":1,"894":4,"898":2,"899":1,"901":1,"902":3,"905":1,"908":1,"910":1,"911":2,"912":1,"913":1,"914":1,"915":2,"916":2,"917":1,"918":1,"919":1,"920":1,"924":1,"927":1,"930":1,"935":1,"938":2,"940":1,"944":1,"945":2,"946":2,"947":1,"949":2,"950":1,"951":1,"954":1,"956":1,"957":2,"959":4,"960":1,"963":1,"964":1,"965":2,"967":1,"968":1,"969":1,"971":1,"972":2,"973":2,"974":1,"975":1,"977":1,"978":4,"980":4,"981":1,"983":1,"985":1,"987":3,"989":1,"990":1,"991":1,"992":1,"994":1,"996":1,"997":1,"998":1,"1000":1,"1001":2,"1003":1,"1006":2,"1007":1,"1009":1,"1011":1,"1017":2,"1018":2,"1019":1,"1021":1,"1023":1,"1025":1,"1026":2,"1028":1,"1029":1,"1030":1,"1032":1,"1033":1,"1035":1,"1036":1,"1038":1,"1042":1,"1043":1,"1044":1,"1045":1,"1048":1,"1049":1},"4":{"848":1,"849":1,"850":1,"851":1,"852":1,"853":1,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"906":1,"907":1,"908":1}}]],"serializationVersion":2}}