<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>behavior-pattern on Dwarves Foundation</title><link>https://memo.d.foundation/tags/behavior-pattern/</link><description>Recent content in behavior-pattern on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2024 Dwarves Foundation.</copyright><lastBuildDate>Fri, 12 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/behavior-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Visitor design pattern, the concept, problem solution and use cases</title><link>https://memo.d.foundation/playground/01_literature/visitor-design-pattern/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/visitor-design-pattern/</guid><description>What is the Visitor Design Pattern? Visitor is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.</description></item><item><title>Strategy design pattern, the concept, use cases and difference with the state design pattern</title><link>https://memo.d.foundation/playground/01_literature/strategy-design-pattern/</link><pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/strategy-design-pattern/</guid><description>Problem statement The separation of a renowned cookbook, by cuisine culture, into distinct cookbooks(strategies on how to cook dishes): The owner restaurant of the cookbook keeps a single cookbook to prevent the leaking of trade secrets.</description></item></channel></rss>