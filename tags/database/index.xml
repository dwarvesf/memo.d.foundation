<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Dwarves Foundation</title><link>https://memo.d.foundation/tags/database/</link><description>Recent content in Database on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Thu, 02 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Database hardening for a trading platform</title><link>https://memo.d.foundation/playground/use-cases/database-hardening-for-trading-platform/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/use-cases/database-hardening-for-trading-platform/</guid><description>Introduction Database vulnerabilities are a silent threat in trading platforms. They lurk in unrestricted access controls, posing risks of data breaches, operational disruptions, and loss of client trust.</description></item><item><title>Natural Language to Database Queries: Text-to-MongoDB</title><link>https://memo.d.foundation/playground/ai/text-to-mongodb/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/ai/text-to-mongodb/</guid><description>graph TD A[Natural Language Interface] --&amp;gt; B{Data Access} B --&amp;gt; C[Non-Technical Users] B --&amp;gt; D[Data Scientists] B --&amp;gt; E[Business Analysts] A --&amp;gt; F{Analytics} F --&amp;gt; G[Real-Time Insights] F --&amp;gt; H[Interactive Exploration] F --&amp;gt; I[Agentic Workflows] A --&amp;gt; J{Data Integration} J --&amp;gt; K[Cross-Database Queries] J --&amp;gt; L[Cross-Domain Analysis] There are a lot of external efforts in creating text2sql LLMs and workflows to facilitate in Retrieval Augmented Generation and agentic workflows.</description></item><item><title>Database design Circular</title><link>https://memo.d.foundation/playground/01_literature/database-design-circular/</link><pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/database-design-circular/</guid><description>In the database solution design, there is the bad practices is called circular references.
What&amp;rsquo;s circular in the database? Imagining one type of circular reference in SQL is made when a first table references a second and that second table references the first table.</description></item><item><title>Quick Learning Vector Database</title><link>https://memo.d.foundation/playground/01_literature/engineering/data/quick-learning-vector-database/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/engineering/data/quick-learning-vector-database/</guid><description>Motivation of Vector Database The motivation of this thoughts that trying to discover the LLMs and Generative AI In order to create or build, train any models there are multiple factors will need to be considered: lakes of data, metadata, data management, infrastructure, etc.</description></item><item><title>SQL Saragable Queries and Their Impact on Database Performance</title><link>https://memo.d.foundation/playground/01_literature/engineering/backend/sql-sargable-queries-and-their-impact-on-database-performance/</link><pubDate>Thu, 14 Sep 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/engineering/backend/sql-sargable-queries-and-their-impact-on-database-performance/</guid><description>Structured Query Language (SQL) is widely used for managing data in relational database management systems (RDBMS). In the context of SQL, the optimization of database queries forms the foundation for efficient data retrieval, providing quicker response times and increasing overall database performance.</description></item><item><title>Multi-column index in DB</title><link>https://memo.d.foundation/playground/00_fleeting/202301191192-multi-column-index-in-db/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202301191192-multi-column-index-in-db/</guid><description>Multi-column index in DB
Databases support creating composite indexes (index on multiple columns). If you specify the columns in the right order in the index definition, a single composite index can speed up several kinds of queries on the same table.</description></item><item><title>Materialized View Pattern</title><link>https://memo.d.foundation/playground/00_fleeting/202211141513-materialized-view-pattern/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202211141513-materialized-view-pattern/</guid><description>Materialized View Pattern TL,DR; Versus &amp;ldquo;normal&amp;rdquo; view
A normal view provides ease-of-use and flexibility features, but it DOES NOT speed up data access A Materialized view is the cache of views.</description></item><item><title>Sql Practices Orm Vs Plain Sql</title><link>https://memo.d.foundation/playground/01_literature/sql-practices-orm-vs-plain-sql/</link><pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/sql-practices-orm-vs-plain-sql/</guid><description>Definition Raw: make all query by self from scratch ORM: Object relational mapping: programing technique for converting data between incompatible type systems using OOP SQL Generator: utility sql tool for generate Entity model, query.</description></item></channel></rss>