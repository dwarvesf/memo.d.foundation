<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Dwarves Foundation</title><link>https://memo.d.foundation/tags/javascript/</link><description>Recent content in javascript on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Mitigate blocking the main thread</title><link>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</guid><description>We all know that for web applications, perceived performance is highly importance for our users. For data intensive SPAs with CPU-intensive tasks, the single-threaded nature of Javascript starts to hinder the application&amp;rsquo;s perceived performance when you cannot fit those CPU-intensive tasks into a 16.</description></item><item><title>Why DOM manipulation is slow?</title><link>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</guid><description>Actually, the DOM is not slow. Adding or removing a DOM node is not much more than setting a property on the JS object.</description></item><item><title>JavaScript modules</title><link>https://memo.d.foundation/playground/frontend/javascript-modules/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/javascript-modules/</guid><description>Modules have always been a part of JavaScript development and providing mechanisms for splitting JavaScript programs up into separate modules that can be imported when needed was the absolutely necessity for JavaScript developers.</description></item><item><title>Parallelism in JavaScript</title><link>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</guid><description>Most of applications nowadays are created with the aim to be on the web. JavaScript has become a mainstream programming language to support the direction.</description></item></channel></rss>