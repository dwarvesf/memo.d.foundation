<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend, on Dwarves Foundation</title><link>https://memo.d.foundation/tags/frontend/</link><description>Recent content in Frontend, on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Sun, 04 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>A Fragment Colocation Pattern with React &amp; Apollo GraphQL</title><link>https://memo.d.foundation/playground/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql/</guid><description>When working with complex GraphQL schemas, it&amp;rsquo;s common to have shared fields across different types. A fragment colocation pattern allows us to define fragments alongside their corresponding components, resulting in a more cohesive and maintainable codebase.</description></item></channel></rss>