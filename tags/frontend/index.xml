<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on Dwarves Foundation</title><link>https://memo.d.foundation/tags/frontend/</link><description>Recent content in Frontend on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2024 Dwarves Foundation.</copyright><lastBuildDate>Mon, 20 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>Frontend Report January 2025</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-january-2025/</link><pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-january-2025/</guid><description>React React 19 is officially here The moment we&amp;rsquo;ve all been waiting for! React 19 has officially landed. React 19 is here with game-changing features!</description></item><item><title>Frontend Report Second Half of November 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-second-half-of-november-2024/</link><pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-second-half-of-november-2024/</guid><description>A second half of November 2024 frontend roundup featuring React Router v7, Tailwind CSS v4 Beta, and Vite 6.0. Explore tools like Next Cloudinary, Extism, and SmarkForm, plus insights on SSR cost-effectiveness, JavaScript Symbols, and new CSS strategies.</description></item><item><title>Frontend Report First Half of November 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-first-half-of-november-2024/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-first-half-of-november-2024/</guid><description>This report provides a detailed look at the significant developments in frontend development during the first half of November 2024. It covers the latest updates, tools, and approaches shaping the frontend scene, including React 19&amp;rsquo;s full-stack features, XState for managing state, Shopify&amp;rsquo;s move to React Native, improvements in Next.</description></item><item><title>Frontend Report October 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-october-2024/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-october-2024/</guid><description>This month’s newsletter highlights key advancements in web development, including React’s new compiler beta and top updates from Next.js Conf 2024, featuring optimizations like Edge Functions and React Server Components.</description></item><item><title>Frontend Report September 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-september-2024/</link><pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-september-2024/</guid><description>This roundup covers the latest in React, Next.js, and web development. React Server Actions are now Server Functions, and there&amp;rsquo;s a deep dive into the React 19 compiler.</description></item><item><title>Frontend Report August 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-august-2024/</link><pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-august-2024/</guid><description>A comprehensive August 2024 update on key advancements in React 19, Next.js 15, and web development tools. Highlights include new async transitions, server components, SSR performance comparisons, and emerging technologies in the web development landscape.</description></item><item><title>Frontend Report July 2024</title><link>https://memo.d.foundation/playground/frontend/report/frontend-report-july-2024/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/report/frontend-report-july-2024/</guid><description>The report for July 2024 gives you a snapshot of what’s happening in the world of web development. React is evolving with Server Components, and Next.</description></item><item><title>Partners Network</title><link>https://memo.d.foundation/consulting/partners-network/</link><pubDate>Thu, 07 Mar 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/consulting/partners-network/</guid><description>We seek for Partners, individuals and companies likewise, to develop a co-creation system driven by mutual purposes and interests.
With our average deal size at $30,000, a partner can generate at least $2,400 per project.</description></item><item><title>Market report January 2024</title><link>https://memo.d.foundation/playground/market-report/2024-january/</link><pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/market-report/2024-january/</guid><description>Trends on our radar Here are some of the few trends we are seeing across the industry, in our projects, as well as our community.</description></item><item><title>Introducing HTMX - Navigating the Advantages and Concerns</title><link>https://memo.d.foundation/playground/01_literature/engineering/introducing-htmx-navigating-the-advantages-and-concerns/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/engineering/introducing-htmx-navigating-the-advantages-and-concerns/</guid><description>What is HTMX HTMX is a hypermedia-oriented Javscript library for creating dynamic website with minimal Javascript code. Specifically, it extend HTML as a hypermedia and address the issues with legacy HTML applications.</description></item><item><title>WebSockets</title><link>https://memo.d.foundation/playground/frontend/websockets/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/websockets/</guid><description>What are WebSockets Previously, creating web applications that need bidirectional require a HTTP polling for updating the data from the server.</description></item><item><title>Window and iframe communication</title><link>https://memo.d.foundation/playground/frontend/window-and-iframe-communication/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/window-and-iframe-communication/</guid><description>When working with web development, communicating between a main window and an embedded iframe is often necessary for various tasks, such as content creation or widget implementation.</description></item><item><title>Adoption Of Pnpm</title><link>https://memo.d.foundation/playground/01_literature/adoption-of-pnpm/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/adoption-of-pnpm/</guid><description>We&amp;rsquo;re excited to share that the Dwarves team has officially decided to switch to pnpm as our primary package management tool.</description></item><item><title>Applying Mock Service Worker (MSW) for Seamless Web Development</title><link>https://memo.d.foundation/playground/frontend/applying-mock-service-worker-msw-for-seamless-web-development/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/applying-mock-service-worker-msw-for-seamless-web-development/</guid><description>Introduction Mock Service Worker (MSW) is an API mocking library that leverages the Service Worker API to intercept requests. It offers unique features that set it apart from traditional mocking libraries, making it a go-to choice for developers.</description></item><item><title>Render optimization in data-fetching libraries</title><link>https://memo.d.foundation/playground/frontend/render-optimization-in-data-fetching-libraries/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/render-optimization-in-data-fetching-libraries/</guid><description>Data-fetching libraries are software tools or frameworks that can help improve the performance and scalability of your application by handling network requests and data processing more efficiently.</description></item><item><title>Scroll-driven animations</title><link>https://memo.d.foundation/playground/frontend/scroll-driven-animations/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/scroll-driven-animations/</guid><description>Scroll-driven animations are popular effects used in web design. They are animations that are connected to the scroll position of a scroll container.</description></item><item><title>React Server Components, NextJs Route and Data Fetching</title><link>https://memo.d.foundation/playground/frontend/react-server-component/</link><pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react-server-component/</guid><description>React Server Components, NextJs Route and Data Fetching React Server Components (RSCs) offer the flexibility to decide where to render components based on their purpose, diverging from the client-side rendering approach of Single-Page Applications.</description></item><item><title>URL formats for sharing via social networks</title><link>https://memo.d.foundation/playground/frontend/url-formats-for-sharing-via-social-networks/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/url-formats-for-sharing-via-social-networks/</guid><description>Why? With the rise of social platforms like Facebook, Twitter and LinkedIn, it&amp;rsquo;s easier than ever to share URLs with a large audience quickly and efficiently.</description></item><item><title>Shadow DOM</title><link>https://memo.d.foundation/playground/frontend/shadow-dom/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/shadow-dom/</guid><description>I&amp;rsquo;m currently working on a new application called Javis, which operates as a Chrome extension. Functioning as an AI assistant, Javis is designed to facilitate a smooth and enriching web browsing experience for users.</description></item><item><title>Choosing The Right Javascript Framework A Deep Dive Into React Vs Angular Vs Vue</title><link>https://memo.d.foundation/playground/01_literature/choosing-the-right-javascript-framework-a-deep-dive-into-react-vs-angular-vs-vue/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/choosing-the-right-javascript-framework-a-deep-dive-into-react-vs-angular-vs-vue/</guid><description>Selecting the ideal JavaScript framework can be a daunting task, particularly when faced with an abundance of highly resourceful and capable options.</description></item><item><title>Retain scroll position in infinite scroll</title><link>https://memo.d.foundation/playground/frontend/retain-scroll-position-in-infinite-scroll/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/retain-scroll-position-in-infinite-scroll/</guid><description>Infinite scroll - Benefits and Challenges Infinite scroll has become a popular web design technique in recent years, as it offers several benefits over traditional pagination models such as reducing page load times or minimizing the need for users to browse through multiple pages.</description></item><item><title>What is PNPM Compare To NPM/Yarn</title><link>https://memo.d.foundation/playground/frontend/what-is-pnpm-compare-to-npmyarn/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/what-is-pnpm-compare-to-npmyarn/</guid><description>What is PNPM? At Dwarves Foundation, we are always on the lookout for new tech. Researching PNPM was originally from research on what package manager Next.</description></item><item><title>Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit</title><link>https://memo.d.foundation/playground/01_literature/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</guid><description>Accelerate Project Initiation with Advanced NextJS-Boilerplate &amp;amp; React-Toolkit In today&amp;rsquo;s fast-paced world of software development, project initiation can often be a challenging and time-consuming process, with teams facing issues such as inconsistent code quality, slow setup times, and suboptimal workflows.</description></item><item><title>I18n Frontend Guideline</title><link>https://memo.d.foundation/playground/01_literature/i18n-frontend-guideline/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/i18n-frontend-guideline/</guid><description>In a front-end web application, locales are used to determine the language and geographic location of the user and to display the appropriate content to them.</description></item><item><title>Swift: Micro frontend design system for e-commerce</title><link>https://memo.d.foundation/consulting/case-study/swift/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/consulting/case-study/swift/</guid><description>Previously on Why Micro-Frontend, we took a look into what is Micro-Frontend architecture, as well as some core concepts behind it.</description></item><item><title>Frontend</title><link>https://memo.d.foundation/careers/archived/frontend/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/careers/archived/frontend/</guid><description>WE ARE LOOKING FOR A FRONTEND ENGINEER TO JOIN OUR TEAM IN SAIGON. Join a team of developers and designers dedicated to creating products people love to use</description></item><item><title>Why We Chose Our Tech Stack Accelerating Development With A Robust Frontend Solution</title><link>https://memo.d.foundation/playground/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution/</guid><description>At Dwarves Foundation, we pride ourselves on being a team of seasoned technology experts, passionate about crafting innovative solutions for our clients.</description></item><item><title>Tackling Server State complexity in Frontend Development</title><link>https://memo.d.foundation/playground/frontend/tackling-server-state-complexity-in-frontend-development/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/tackling-server-state-complexity-in-frontend-development/</guid><description>Frontend development has become increasingly complex over the years, and with it, the need for efficient state management. Global State is one such programming pattern that has emerged as a solution to the problem of prop drilling.</description></item><item><title>Variable Fonts</title><link>https://memo.d.foundation/playground/frontend/variable-fonts/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/variable-fonts/</guid><description>What&amp;rsquo;s variable font? Variable fonts - officially known as OpenType Font Variations - are a font format that allows for a single font file to contain multiple variations of a typeface, such as different weights, widths, and styles, that can be dynamically adjusted in real-time using font variations.</description></item><item><title>When should we use useReducer instead of useState?</title><link>https://memo.d.foundation/playground/frontend/when-should-we-use-usereducer-instead-of-usestate/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/when-should-we-use-usereducer-instead-of-usestate/</guid><description>Imagine we have a component with multiple states. It is simple enough not to use state management libraries. useState is surely a choice for the sake of brevity and clarity.</description></item><item><title>Mixpanel</title><link>https://memo.d.foundation/playground/frontend/mixpanel/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mixpanel/</guid><description>Mixpanel is a powerful analytics platform that assists companies in monitoring and analyzing user behavior on their websites and mobile applications.</description></item><item><title>Validation with Zod</title><link>https://memo.d.foundation/playground/frontend/validation-with-zod/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/validation-with-zod/</guid><description>Zod is the TypeScript-first schema validation library with static type inference. It&amp;rsquo;s functional approach to data validation is parse-dont-validate-in-typescript which parses the data in order to validate and catch errors.</description></item><item><title>Invoking component functions in React</title><link>https://memo.d.foundation/playground/00_fleeting/202301091379-invoking-component-functions-in-react/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202301091379-invoking-component-functions-in-react/</guid><description>What happens if you invoked the component function directly in React?: Let&amp;rsquo;s take a look at this example:
const ExampleComponent = () =&amp;gt;{ const [input, setInput] = useState('') //do something here } export const App = () =&amp;gt;{ const [show, setShow] = useState(false) return ( &amp;lt;div&amp;gt; &amp;lt;button onClick={() =&amp;gt; setShow(!</description></item><item><title>Parse, don't validate in TypeScript</title><link>https://memo.d.foundation/playground/frontend/parse-dont-validate-in-typescript/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/parse-dont-validate-in-typescript/</guid><description>The &amp;ldquo;parse, don&amp;rsquo;t validate&amp;rdquo; approach is all about processing incoming data and failing in a controlled manner if parsing fails. It is all about leveraging trustworthy, secure, and typed data structures within your code and ensuring that all incoming data is handled at the very edges of your systems.</description></item><item><title>Webassembly</title><link>https://memo.d.foundation/playground/frontend/webassembly/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/webassembly/</guid><description>What WebAssembly (abbreviated Wasm) was launched in 2017 as a low-level assembly-like language with a compact binary format, so it’s fast to load, execute, and run with near-native performance.</description></item><item><title>Sign-in Form Best Practices</title><link>https://memo.d.foundation/playground/00_fleeting/202210172128-sign-in-form-best-practices/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/00_fleeting/202210172128-sign-in-form-best-practices/</guid><description>Sign-in Form Best Practices Use meaningful HTML elements: &amp;lt;form&amp;gt;, &amp;lt;input&amp;gt;, &amp;lt;label&amp;gt;, and &amp;lt;button&amp;gt;. Label each input with a &amp;lt;label&amp;gt;. Use element attributes to access built-in browser features: type, name, autocomplete, required.</description></item><item><title>Singleton Design Pattern in Javascript</title><link>https://memo.d.foundation/playground/frontend/singleton-design-pattern-in-javascript/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/singleton-design-pattern-in-javascript/</guid><description>Overview For global state management in some frameworks like ReactJs; we already have Redux, React Context, Recoil, and Mobx&amp;hellip; for handling that.</description></item><item><title>An Introduction to Atomic CSS</title><link>https://memo.d.foundation/playground/frontend/an-introduction-to-atomic-css/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/an-introduction-to-atomic-css/</guid><description>Definition A definition to Atomic CSS:
Atomic CSS is the approach to CSS architecture that favors small, single-purpose classes with names based on visual function.</description></item><item><title>Intro to IndexedDB</title><link>https://memo.d.foundation/playground/frontend/intro-to-indexeddb/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/intro-to-indexeddb/</guid><description>Overview &amp;amp; When to use IndexedDB IndexedDB is a low-level API for client-side storage like localStorage and cookies. But this built-in non-relational database is much more powerful than those 2 counterparts.</description></item><item><title>The fundamental of web performance</title><link>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</link><pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</guid><description>The key to improving your website speed is to understand where the bottlenecks are, and how much time each step takes.</description></item><item><title>The fundamental of web performance</title><link>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</link><pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/the-fundamental-of-web-performance/</guid><description>The key to improving your website speed is to understand where the bottlenecks are, and how much time each step takes.</description></item><item><title>WAI-ARIA</title><link>https://memo.d.foundation/playground/frontend/wai-aria/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/wai-aria/</guid><description>Since modern websites and applications contain huge amounts of dynamic content and complex components with no semantics to describe what they mean, users with disabilities, those dependent on assistive technologies such as Screen Reader, text-to-speech or screen magnification tools might suffer to interact with those components.</description></item><item><title>Build polymorphic React components with Typescript</title><link>https://memo.d.foundation/playground/frontend/build-polymorphic-react-components-with-typescript/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/build-polymorphic-react-components-with-typescript/</guid><description>Let&amp;rsquo;s say we want to create a Text component with React and Typescript. A basic implementation could look like:
import React from 'react' type TextProps = { children: React.</description></item><item><title>Cameras in ThreeJS</title><link>https://memo.d.foundation/playground/frontend/threejs/cameras-in-threejs/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/threejs/cameras-in-threejs/</guid><description>ThreeJS is a JavaScript 3D library that allows developers to develop and describe data in 3 dimensions, and then convert them into 2 dimensions and display them on HTML Canvas.</description></item><item><title>Prevent Layout Thrashing</title><link>https://memo.d.foundation/playground/frontend/prevent-layout-thrashing/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/prevent-layout-thrashing/</guid><description>What is Layout Thrashing Layout thrashing means forcing the browser to calculate a layout that is never rendered to the screen, which hurts performance.</description></item><item><title>Pure CSS Parallax</title><link>https://memo.d.foundation/playground/frontend/pure-css-parallax/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/pure-css-parallax/</guid><description>This article demonstrates how to use CSS transforms, perspective and some scaling trickery to create a pure CSS parallax scrolling website.</description></item><item><title>CSS Container Queries</title><link>https://memo.d.foundation/playground/frontend/css-container-queries/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/css-container-queries/</guid><description>Published on August 30, 2022, Chrome 105 included Container Queries, one of the most highly requested features in CSS.
The Problem With Media Queries When we want to create a responsive layout, we can use media queries to adjust styles based on the screen size of the device viewing our site.</description></item><item><title>HSL Color</title><link>https://memo.d.foundation/playground/frontend/hsl-color/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/hsl-color/</guid><description>Frontend engineers use Hexadecimal color codes to represent colors, but they have some limitations:
Hexadecimal color codes are difficult to write and adjust, requiring the use of a third-party application to get right.</description></item><item><title>Mitigate blocking the main thread</title><link>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mitigate-blocking-the-main-thread/</guid><description>We all know that for web applications, perceived performance is highly importance for our users. For data intensive SPAs with CPU-intensive tasks, the single-threaded nature of Javascript starts to hinder the application&amp;rsquo;s perceived performance when you cannot fit those CPU-intensive tasks into a 16.</description></item><item><title>CSS in JS</title><link>https://memo.d.foundation/playground/frontend/css-in-js/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/css-in-js/</guid><description>CSS-in-JS is a styling technique where Javascript is used to style the component. These are multiple implementations of this concept in the form of libraries such as emotion, styled-component, JSS.</description></item><item><title>Dark mode flickers a white background for a fraction of a second</title><link>https://memo.d.foundation/playground/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second/</guid><description>The dark mode feature uses local storage to store a user&amp;rsquo;s preference for future usage. The problem is that when the dark mode is enabled and the page is reloaded, there&amp;rsquo;s a flicker of white background all over the page before it turns dark.</description></item><item><title>Why DOM manipulation is slow?</title><link>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-dom-manipulation-is-slow/</guid><description>Actually, the DOM is not slow. Adding or removing a DOM node is not much more than setting a property on the JS object.</description></item><item><title>Why Virtual DOM is fast?</title><link>https://memo.d.foundation/playground/frontend/why-virtual-dom-is-fast/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/why-virtual-dom-is-fast/</guid><description>React and Vue, two popular front-end frameworks, both use Virtual DOM to improve page rendering efficiency. Understanding the concept of Virtual DOM sheds light on an important aspect of performance optimization on the client side.</description></item><item><title>ViteJS native modules</title><link>https://memo.d.foundation/playground/frontend/vitejs-native-modules/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/vitejs-native-modules/</guid><description>Before ES modules was supported in the browser, we have no native mechanism for authoring javascript-modules in a modularized fashion. That is why the concept of &amp;ldquo;bundling&amp;rdquo; and tools like Webpack, Rollup, and Parcel exist to improve the development experience for frontend developers.</description></item><item><title>JavaScript modules</title><link>https://memo.d.foundation/playground/frontend/javascript-modules/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/javascript-modules/</guid><description>Modules have always been a part of JavaScript development and providing mechanisms for splitting JavaScript programs up into separate modules that can be imported when needed was the absolutely necessity for JavaScript developers.</description></item><item><title>Atomic Design Pattern</title><link>https://memo.d.foundation/playground/frontend/atomic-design-pattern/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/atomic-design-pattern/</guid><description>Atomic design pattern Atomic design is a methodology for crafting design systems with five key fundamental building blocks, which, when combined, promote consistency, modularity, and scalability.</description></item><item><title>React Native New Architecture</title><link>https://memo.d.foundation/playground/01_literature/react-native-new-architecture/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/react-native-new-architecture/</guid><description>Introducing react-native&amp;rsquo;s new architecture changes that boost performance, bringing react-native back into the race with Flutter
Introduction of react-native React Native is a JavaScript framework for writing high-performance mobile apps that leverage iOS and Android native components.</description></item><item><title>Focus trap</title><link>https://memo.d.foundation/playground/frontend/focus-trap/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/focus-trap/</guid><description>Focus trap is a web technique to improve accessibility by forcing keyboard focus inside a DOM element, to prevent the user navigating outside that element.</description></item><item><title>HTML inert</title><link>https://memo.d.foundation/playground/frontend/html-inert/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/html-inert/</guid><description>inert is a boolean HTML property that makes the browser ignore the user input events for an element, including focus events and events from assistive technologies.</description></item><item><title>useEffect double calls in React 18</title><link>https://memo.d.foundation/playground/frontend/useeffect-double-calls-in-react-18/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/useeffect-double-calls-in-react-18/</guid><description>In the React 18 version, the useEffect hook has been updated to called twice compare to only one in the older version in StrictMode.</description></item><item><title>React 18</title><link>https://memo.d.foundation/playground/frontend/react-18/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/react-18/</guid><description>React 18 was released in March 2022. This release focuses on performance improvements and updating the rendering engine.
React 18 Feature Quick Guide Now let&amp;rsquo;s look at each of these updates in more detail.</description></item><item><title>Remix Versus Nextjs</title><link>https://memo.d.foundation/playground/frontend/remix-versus-nextjs/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/remix-versus-nextjs/</guid><description>A brief comparison between Remix and Next.js frameworks
Introduction of Remix Remix describes itself as:
Remix is an edge native, full-stack JavaScript framework for building modern, fast, and resilient user experiences.</description></item><item><title>Zaplib post-mortem</title><link>https://memo.d.foundation/playground/frontend/zaplib-post-mortem/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/zaplib-post-mortem/</guid><description>Zaplib is a frontend framework that helps to port your JS/TS app to Rust/Wasm. This idea was found after the founder&amp;rsquo;s painful work at https://webviz.</description></item><item><title>Parallelism in JavaScript</title><link>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/parallelism-in-javascript/</guid><description>Most of applications nowadays are created with the aim to be on the web. JavaScript has become a mainstream programming language to support the direction.</description></item><item><title>MPA, SPA and Partial Hydration</title><link>https://memo.d.foundation/playground/frontend/mpa-spa-and-partial-hydration/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/mpa-spa-and-partial-hydration/</guid><description>If you&amp;rsquo;ve been on Twitter lately, you might&amp;rsquo;ve seen the term &amp;ldquo;Partial Hydration&amp;rdquo; as well as MPA going along and hyped by web advocates, wondering what about them?</description></item><item><title>Using Correct Html Element To Increase Website Accessibility</title><link>https://memo.d.foundation/playground/frontend/using-correct-html-element-to-increase-website-accessibility/</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/using-correct-html-element-to-increase-website-accessibility/</guid><description>Website Accessibility Website Accessibility is a term for approaching a website of which the potential user are people with disabilities (eye disorders or illiterate).</description></item><item><title>Remove Unused CSS Styles From Bootstrap Using Purgecss</title><link>https://memo.d.foundation/playground/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss/</guid><description>Introduction Reducing assets size is one of the most practical ways to speed up your web application. I have a simple use case, lets imagine your HTML file looks like this</description></item><item><title>Jotai</title><link>https://memo.d.foundation/playground/_radar/jotai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/_radar/jotai/</guid><description>Description Jotai takes an atomic approach to global React state management with a model inspired by Recoil.
What’s better about this method or library Build state by combining atoms and renders are automatically optimized based on atom dependency.</description></item><item><title>Remix</title><link>https://memo.d.foundation/playground/_radar/remix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/_radar/remix/</guid><description>Description Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience.</description></item><item><title>Zustand</title><link>https://memo.d.foundation/playground/_radar/zustand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/_radar/zustand/</guid><description>Description A small, fast and scalable bearbones state-management solution using simplified flux principles. Has a comfy API based on hooks, isn&amp;rsquo;t boilerplatey or opinionated.</description></item></channel></rss>