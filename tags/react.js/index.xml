<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>react.js on Dwarves Foundation</title><link>https://memo.d.foundation/tags/react.js/</link><description>Recent content in react.js on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Thu, 06 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/react.js/index.xml" rel="self" type="application/rss+xml"/><item><title>Different Ways To Test React Application</title><link>https://memo.d.foundation/playground/01_literature/different-ways-to-test-react-application/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/different-ways-to-test-react-application/</guid><description>Introduction There are 2 practical types of testing a front end application: test its implementation details (unit test, integration test combine with assert states of the component being tested) or testing its behavior base on perspective (e2e, integration test).</description></item><item><title>Hoc Renderprops And Hook In Reactjs</title><link>https://memo.d.foundation/playground/01_literature/hoc-renderprops-and-hook-in-reactjs/</link><pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/hoc-renderprops-and-hook-in-reactjs/</guid><description>Introduction HOC, Render-props, hook are different techniques to create reusable or composable logic in React.js.
Take a look at the use case where we have a button to toggle the visibility of some text:</description></item></channel></rss>