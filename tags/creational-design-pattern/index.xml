<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>creational-design-pattern on Dwarves Foundation</title><link>https://memo.d.foundation/tags/creational-design-pattern/</link><description>Recent content in creational-design-pattern on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Mon, 10 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/creational-design-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduce the Builder pattern and its use cases</title><link>https://memo.d.foundation/playground/01_literature/builder-design-pattern/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/01_literature/builder-design-pattern/</guid><description>Problem statement We want to create complex object without worrying too much about the hows, we could use Factory pattern to abstract away those details and just give us the output, but the drawback is you get a fixed same object everytime.</description></item></channel></rss>