<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fronten on Dwarves Foundation</title><link>https://memo.d.foundation/tags/fronten/</link><description>Recent content in fronten on Dwarves Foundation</description><generator>Hugo</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2024 Dwarves Foundation.</copyright><lastBuildDate>Mon, 27 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/fronten/index.xml" rel="self" type="application/rss+xml"/><item><title>Preserving and Resetting state in React</title><link>https://memo.d.foundation/playground/frontend/preserving-and-resetting-state-in-react/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/playground/frontend/preserving-and-resetting-state-in-react/</guid><description>Why should you read this article? Understand how state in React works const [isPlayerA, setIsPlayerA] = useState(true) function Counter(name) { const [score, setScore] = useState(0) return ( &amp;lt;&amp;gt; &amp;lt;div&amp;gt; {name}: {score} &amp;lt;/div&amp;gt; &amp;lt;button onClick={() =&amp;gt; setScore(score + 1)}&amp;gt;+1&amp;lt;/button&amp;gt; &amp;lt;/&amp;gt; ) } // ---------- // Do you think they are the same?</description></item></channel></rss>