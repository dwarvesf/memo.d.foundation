name: Deploy Markdown to Arweave

on:
  workflow_dispatch: # Keep manual trigger
  push:
    branches:
      - main
    paths:
      - 'db/vault.parquet' # Only trigger on changes to this file

concurrency:
  group: ${{ github.repository }}-workflow
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout contents repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DWARVES_PAT }}
          submodules: recursive
          fetch-depth: 1

      - name: Get changed files
        id: changed-files
        run: |
          # Install DuckDB
          wget -q https://github.com/duckdb/duckdb/releases/download/v1.2.1/duckdb_cli-linux-amd64.zip
          unzip -q duckdb_cli-linux-amd64.zip
          chmod +x duckdb

          # Query for files that have perma_storage_id = 'true'
          CHANGED_FILES=$(./duckdb -csv -noheader -c "SELECT COALESCE(STRING_AGG(file_path, ','), '') FROM 'db/vault.parquet' WHERE should_deploy_perma_storage = true AND perma_storage_id IS NULL;" | tr -d '"')

          # Output the results
          echo "Found markdown files for permanent storage: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Install Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Install Arweave
        run: pnpm add -D arweave

      - name: Create wallet file
        run: |
          echo '${{ secrets.ARWEAVE_WALLET_JSON }}' > wallet.json
          chmod 600 wallet.json

      - name: Process markdown files
        id: deploy
        if: steps.changed-files.outputs.files != ''
        env:
          MOCHI_PROFILE_API: ${{ secrets.MOCHI_PROFILE_API }}
        run: |
          npx tsx scripts/deploy-arweave.ts '${{ steps.changed-files.outputs.files }}'

      - name: Commit and push changes
        uses: ./.github/actions/git-commit-push
        with:
          commit-message: 'chore(ci): reindex'

      - name: Notify Discord on Success
        if: success() && steps.changed-files.outputs.files != ''
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: '✅ Arweave Deployment Completed'
          description: 'Markdown files have been successfully deployed to Arweave permanent storage'
          color: 0x00ff00

      - name: Notify Discord on Failure
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: '❌ Arweave Deployment Failed'
          description: 'Failed to deploy markdown files to Arweave. Please check the workflow logs.'
          color: 0xff0000
