{"pageProps":{"directoryTree":{"/pinned":{"label":"Pinned Notes","children":{"/playbook/operations/ogif":{"label":"OGIF - Oh God It's Friday","children":{}}}},"/":{"label":"Home","children":{"/consulting":{"label":"Consulting","children":{"/consulting/case-study":{"label":"Case Study","children":{"/consulting/case-study/screenz-ai":{"label":"Screenz.ai","children":{}},"/consulting/case-study/kafi":{"label":"Kafi","children":{}},"/consulting/case-study/droppii":{"label":"Droppii","children":{}},"/consulting/case-study/konvoy":{"label":"Konvoy","children":{}},"/consulting/case-study/cimb":{"label":"CIMB","children":{}},"/consulting/case-study/swift":{"label":"Swift","children":{}},"/consulting/case-study/startupvn":{"label":"StartupVN","children":{}},"/consulting/case-study/open-fabric":{"label":"Open Fabric","children":{}},"/consulting/case-study/icrosschain":{"label":"iCrosschain","children":{}},"/consulting/case-study/hedge-foundation":{"label":"Hedge Foundation","children":{}},"/consulting/case-study/searchio":{"label":"Search.io","children":{}},"/consulting/case-study/tokenomy":{"label":"Tokenomy","children":{}},"/consulting/case-study/basehq":{"label":"BaseHQ","children":{}},"/consulting/case-study/momos":{"label":"Momos","children":{}},"/consulting/case-study/attrace":{"label":"Attrace","children":{}},"/consulting/case-study/setel":{"label":"Setel","children":{}},"/consulting/case-study/joinpara":{"label":"JoinPara","children":{}},"/consulting/case-study/relay":{"label":"Relay","children":{}},"/consulting/case-study/naru":{"label":"Naru","children":{}},"/consulting/case-study/mudah":{"label":"Mudah","children":{}},"/consulting/case-study/reapit":{"label":"Reapit","children":{}},"/consulting/case-study/aharooms":{"label":"Aharooms","children":{}},"/consulting/case-study/begroup":{"label":"beGroup","children":{}},"/consulting/case-study/airwatt":{"label":"AirWatt","children":{}},"/consulting/case-study/voconic":{"label":"Voconic","children":{}},"/consulting/case-study/sol":{"label":"Sol","children":{}},"/consulting/case-study/dental-marketplace":{"label":"Dental Marketplace","children":{}},"/consulting/case-study/bhd":{"label":"BHD Cinema","children":{}}}},"/consulting/market-report":{"label":"Market Report","children":{"/consulting/market-report/event-takeaways-2nd":{"label":"2nd Talks and Takeaways","children":{}},"/consulting/market-report/event-takeaways-1st":{"label":"1st Talks and Takeaways","children":{}},"/consulting/market-report/2025-28th-feb":{"label":"#9: Bybit Loses $1.5B in Hack, Claude 3.7 Sonnet Drops, and OpenArt Designs Characters","children":{}},"/consulting/market-report/2025-21th-feb":{"label":"#8: R1 1776 Goes Open-Source, Cardex Gets Hacked, and Grok-3 Debuts","children":{}},"/consulting/market-report/2025-14th-feb":{"label":"#7: 10x AI Cost Reduction, Lyftâ€™s 2026 Robotaxi Milestone, and Solana ETF Buzz","children":{}},"/consulting/market-report/2025-7th-feb":{"label":"#6 Trending Products, DeepSeek Wave, and Ethereum Predictions","children":{}},"/consulting/market-report/2025-17th-jan":{"label":"#5 VC Trends, Blockchain Breakthroughs, and AI Innovations","children":{}},"/consulting/market-report/2025-10th-jan":{"label":"#4 AI Supercomputers, Mini AI PCs, SEA VC","children":{}},"/consulting/market-report/2025-3rd-jan":{"label":"#3 AI at CES, Wall Street Boom, Blockchain Trends","children":{}},"/consulting/market-report/2024-27th-dec":{"label":"#2 AI Talent Wars, OpenAIâ€™s New Models, Hyperliquid","children":{}},"/consulting/market-report/2024-13th-dec":{"label":"#1 Gemini 2.0, OpenAIâ€™s Sora,  a16zâ€™s Predictions","children":{}}}},"/consulting/wala":{"label":"Wala","children":{"/consulting/wala/43-factory":{"label":"43 Factory","children":{}},"/consulting/wala/dzs-media":{"label":"DZS Media","children":{}},"/consulting/wala/sp-group":{"label":"SP Group","children":{}}}},"/consulting/partners-network":{"label":"Partners Network","children":{}},"/consulting/readme":{"label":"Consulting Team","children":{}}}},"/handbook":{"label":"Handbook","children":{"/handbook/navigate-changes":{"label":"Navigate changes","children":{}},"/handbook/community":{"label":"Community","children":{"/handbook/community/icy-worth":{"label":"How much is your ICY worth","children":{}},"/handbook/community/icy-swap":{"label":"How to swap ICY to BTC","children":{}},"/handbook/community/icy":{"label":"ICY","children":{}},"/handbook/community/discord":{"label":"Discord","children":{}},"/handbook/community/earn":{"label":"Earn","children":{}},"/handbook/community/radar":{"label":"Radar","children":{}},"/handbook/community/sharing":{"label":"Sharing knowledge","children":{}},"/handbook/community/showcase":{"label":"Showcase","children":{}},"/handbook/community/memo":{"label":"Memo","children":{}}}},"/handbook/guides":{"label":"Guides","children":{"/handbook/guides/check-in-at-office":{"label":"Office check-in process for earning ICY","children":{}},"/handbook/guides/leave-request":{"label":"Leave request","children":{}},"/handbook/guides/configure-the-company-email":{"label":"Configure your company email","children":{}},"/handbook/guides/one-on-one-meeting":{"label":"1-on-1 meetings","children":{}},"/handbook/guides/continuing-education-allowance":{"label":"Continuing education allowance","children":{}},"/handbook/guides/reimbursement":{"label":"Reimbursement","children":{}},"/handbook/guides/email-communication-and-use":{"label":"Email Communication and Use","children":{}},"/handbook/guides/password-sharing":{"label":"Password Sharing","children":{}},"/handbook/guides/asset-request":{"label":"Assets","children":{}},"/handbook/guides/effective-meeting":{"label":"Effective meetings","children":{}},"/handbook/guides/conduct-a-meeting":{"label":"How to conduct a meeting","children":{}}}},"/handbook/making-a-career":{"label":"Making a career","children":{}},"/handbook/as-a-community":{"label":"As a community","children":{}},"/handbook/knowledge-base":{"label":"Knowledge base","children":{}},"/handbook/stock-option-plan":{"label":"Stock option plan","children":{}},"/handbook/compliance":{"label":"Compliance","children":{}},"/handbook/mma":{"label":"MMA","children":{}},"/handbook/hybrid-working":{"label":"Hybrid Working","children":{}},"/handbook/routine":{"label":"Work routine","children":{}},"/handbook/ventures":{"label":"Ventures arm","children":{}},"/handbook/purpose":{"label":"Purpose","children":{}},"/handbook/benefits-and-perks":{"label":"Benefits & perks","children":{}},"/handbook/dwarves-foundation-is-you":{"label":"You are Dwarves Foundation","children":{}},"/handbook/getting-started":{"label":"ðŸ’Ž Getting started","children":{}},"/handbook/how-we-hire":{"label":"How we hire","children":{}},"/handbook/how-we-spend-money":{"label":"How we spend money","children":{}},"/handbook/misc":{"label":"Misc","children":{"/handbook/misc/marketing-assets":{"label":"Marketing assets","children":{}}}},"/handbook/moonlighting":{"label":"Moonlighting","children":{}},"/handbook/places-to-work":{"label":"Places to work","children":{}},"/handbook/security-rules":{"label":"Security rules","children":{}},"/handbook/tools-and-systems":{"label":"Tools and systems","children":{}},"/handbook/what-we-stand-for":{"label":"What we stand for","children":{}},"/handbook/what-we-value":{"label":"What we value","children":{}},"/handbook/where-we-work":{"label":"Where we work","children":{}},"/handbook/who-does-what":{"label":"Who does what","children":{}},"/handbook/faq":{"label":"FAQ","children":{}},"/handbook/how-we-work":{"label":"How we work","children":{}}}},"/playground":{"label":"Playground","children":{"/playground/01_literature":{"label":"01_literature","children":{"/playground/01_literature/evolutionary-database-design":{"label":"Evolutionary Database Design: Managing Change and Scaling with the System","children":{}},"/playground/01_literature/design":{"label":"Design","children":{"/playground/01_literature/design/product-design-commentary-20241122":{"label":"Product Design Commentary #7: Hyper-personalization - How AI improves user experience personalization","children":{}},"/playground/01_literature/design/product-design-commentary-20241115":{"label":"Product Design Commentary #6: AI in Design - Cool ideas and how to make them happen","children":{}},"/playground/01_literature/design/product-design-commentary-20241101":{"label":"Product Design Commentary #5: Figma to SwiftUI (functional code) with Claude AI","children":{}},"/playground/01_literature/design/product-design-commentary-20241018":{"label":"Product Design Commentary #4: Generative AI UX design patterns","children":{}},"/playground/01_literature/design/product-design-commentary-20241011":{"label":"Product Design Commentary #3: The art of prompting in AI-human interaction","children":{}},"/playground/01_literature/design/product-design-commentary-20241004":{"label":"Product Design Commentary #2: Unpacking the sparkles icon and AI onboarding challenges","children":{}},"/playground/01_literature/design/product-design-commentary-20240927":{"label":"Product Design Commentary #1: New technologies changing UX/UI and product design","children":{}}}},"/playground/01_literature/giving-a-talk-checklist":{"label":"Giving a talk","children":{}},"/playground/01_literature/database-design-circular":{"label":"Database design Circular","children":{}},"/playground/01_literature/a-lens-to-modern-data-engineering":{"label":"A Lens to Modern Data Engineering","children":{}},"/playground/01_literature/security":{"label":"Security","children":{"/playground/01_literature/security/a-holistic-guide-to-security":{"label":"A Holistic Guide to Security","children":{}},"/playground/01_literature/security/how-i-came-up-with-our-security-standard":{"label":"How I came up with our Security Standard","children":{}}}},"/playground/01_literature/record-reward-sharing-culture":{"label":"Record and reward sharing at Dwarves","children":{}},"/playground/01_literature/designing-for-forgiveness":{"label":"Designing for Forgiveness: Creating Error-Tolerant Interfaces","children":{}},"/playground/01_literature/design-file-sharing-system-part-2-permission-and-password":{"label":"Design file-sharing system - Part 2: Permission & Password","children":{}},"/playground/01_literature/designing-a-model-with-dynamic-properties":{"label":"Designing a model with dynamic properties","children":{}},"/playground/01_literature/hybrid-search":{"label":"Evaluating search engine in RAG systems","children":{}},"/playground/01_literature/design-file-sharing-system-part-1-directory-structure":{"label":"Design file-sharing system - Part 1: Directory Structure","children":{}},"/playground/01_literature/using-foundry-for-evm-smart-contract-developement":{"label":"Using Foundry for EVM smart contract development","children":{}},"/playground/01_literature/creating-a-fully-local-search-engine-on-memo":{"label":"Building a Local Search Engine for Our Memo Website","children":{}},"/playground/01_literature/observer-pattern":{"label":"Introduce the Observer pattern and its use cases","children":{}},"/playground/01_literature/visitor-design-pattern":{"label":"Visitor design pattern, the concept, problem solution and use cases","children":{}},"/playground/01_literature/strategy-design-pattern":{"label":"Strategy design pattern, the concept, use cases and difference with the state design pattern","children":{}},"/playground/01_literature/vietnam-tech-ecosystem-report":{"label":"Vietnam Tech Ecosystem 2024 Report","children":{}},"/playground/01_literature/how-we-crafted-the-ogif-summarizer-bot-to-streamline-weekly-knowledge-sharing":{"label":"How we crafted the OGIF summarizer bot to streamline weekly knowledge-sharing","children":{}},"/playground/01_literature/feedback-mechanism":{"label":"Design feedback mechanism for LLM applications","children":{}},"/playground/01_literature/local-first-software":{"label":"Local-first Software","children":{}},"/playground/01_literature/error-handling-in-rust":{"label":"Error handling on Rust","children":{}},"/playground/01_literature/engineering":{"label":"Engineering","children":{"/playground/01_literature/engineering/backend":{"label":"Backend","children":{"/playground/01_literature/engineering/backend/bloom-filter":{"label":"Bloom Filter","children":{}},"/playground/01_literature/engineering/backend/introduction-to-crdt":{"label":"Introduction to CRDT","children":{}},"/playground/01_literature/engineering/backend/sql-sargable-queries-and-their-impact-on-database-performance":{"label":"SQL Saragable Queries and Their Impact on Database Performance","children":{}},"/playground/01_literature/engineering/backend/the-removal-of-apache-kafkas-dependency-on-zookeeper":{"label":"The removal of Apache Kafka's dependency on Zookeeper","children":{}},"/playground/01_literature/engineering/backend/sql-and-how-it-relates-to-disk-reads-and-writes":{"label":"SQL and how it relates to Disk Reads and Writes","children":{}}}},"/playground/01_literature/engineering/data":{"label":"Data","children":{"/playground/01_literature/engineering/data/data-pipeline-design-framework":{"label":"Data Pipeline Design Framework","children":{}},"/playground/01_literature/engineering/data/quick-learning-vector-database":{"label":"Quick Learning Vector Database","children":{}},"/playground/01_literature/engineering/data/mapreduce":{"label":"MapReduce","children":{}}}},"/playground/01_literature/engineering/google-data-fusion":{"label":"Google Data Fusion","children":{}},"/playground/01_literature/engineering/google-dataproc":{"label":"Google Dataproc","children":{}},"/playground/01_literature/engineering/introducing-htmx-navigating-the-advantages-and-concerns":{"label":"Introducing HTMX - Navigating the Advantages and Concerns","children":{}},"/playground/01_literature/engineering/typesafe-client-server":{"label":"Typesafe Client Server","children":{}},"/playground/01_literature/engineering/url-redirect-vs-rewrite":{"label":"URL Redirect vs. Rewrite; Whatâ€™s the difference?","children":{}}}},"/playground/01_literature/template-method-design-pattern":{"label":"A Tour of Template method pattern with Golang","children":{}},"/playground/01_literature/command-pattern":{"label":"Command Pattern","children":{}},"/playground/01_literature/radix-sort":{"label":"Radix Sort","children":{}},"/playground/01_literature/state-pattern":{"label":"State Pattern","children":{}},"/playground/01_literature/dynamic-liquidity-market-a-new-form-of-concentrated-liquidity-amm-on-solana":{"label":"Dynamic Liquidity Market Maker - a new form of concentrated liquidity AMM on Solana","children":{}},"/playground/01_literature/memo-knowledge-base-meeting":{"label":"Memo Knowledge Base Meeting","children":{}},"/playground/01_literature/peep-nft":{"label":"Claim your Peeps NFT","children":{}},"/playground/01_literature/recording-flow":{"label":"How We Set Up a Recording Workflow for Dwarves Office Hours","children":{}},"/playground/01_literature/memo-publication-workflow":{"label":"Memo Publication Workflow","children":{}},"/playground/01_literature/history-of-structured-output-for-llms":{"label":"History of Structured Outputs for LLMs","children":{}},"/playground/01_literature/builder-design-pattern":{"label":"Introduce the Builder pattern and its use cases","children":{}},"/playground/01_literature/how-to-make-a-moc":{"label":"How to make a MOC","children":{}},"/playground/01_literature/prototype-design-pattern":{"label":"Going Through use cases of the prototype design pattern and it place among the creational patterns","children":{}},"/playground/01_literature/singleton-design-pattern":{"label":"A tour of Singleton design pattern with Golang","children":{}},"/playground/01_literature/echelon-x-singapore-2024-where-innovations-meet-inspiration":{"label":"Echelon X Singapore 2024: Where Innovations Meet Inspiration","children":{}},"/playground/01_literature/c4-modelling":{"label":"Breaking Down Complexity: The Role of Abstractions and UML in C4 Modelling","children":{}},"/playground/01_literature/dollar-cost-averaging":{"label":"Dollar Cost Averaging (DCA)","children":{}},"/playground/01_literature/how-i-create-content-for-multiple-platforms-at-dwarves":{"label":"How I Create Content for Multiple Platforms at Dwarves","children":{}},"/playground/01_literature/understanding-saving-investing-and-speculating-key-differences-and-strategies":{"label":"Understanding Saving, Investing, and Speculating: Key Differences and Strategies","children":{}},"/playground/01_literature/writing-content-for-multimedia-guidelines":{"label":"Writing Content for Multimedia Guidelines","children":{}},"/playground/01_literature/how-to-earn-reward-from-staking-dfg":{"label":"How to earn reward from staking DFG","children":{}},"/playground/01_literature/how-to-transfer-dfg-from-eth-to-base-for-staking":{"label":"How to bridge $DFG from Ethereum Mainnet to Base Network for staking","children":{}},"/playground/01_literature/design-less-present-more-with-deckset":{"label":"Design less, present more with Deckset","children":{}},"/playground/01_literature/level-up-your-markdown-memos":{"label":"Level Up Your Markdown Memos: Avoiding Common Pitfalls","children":{}},"/playground/01_literature/tech-canvas":{"label":"Tech Canvas","children":{}},"/playground/01_literature/how-to-recap-a-publication":{"label":"Recapping A publication","children":{}},"/playground/01_literature/lifecycle-of-a-publication":{"label":"Life cycle of a publication","children":{}},"/playground/01_literature/how-to-set-up-environment-for-editing-memo":{"label":"How to set up environment to edit memo","children":{}},"/playground/01_literature/how-to-take-better-screenshots-on-mac":{"label":"How To Take Better Screenshots On Mac","children":{}},"/playground/01_literature/how-to-push-content-on-note-d":{"label":"How to push content on memo.d.foundation","children":{}},"/playground/01_literature/labs-weekly-catchup-5":{"label":"Labs Weekly Catchup #5","children":{}},"/playground/01_literature/labs-weekly-catchup-4":{"label":"Labs Weekly Catchup #4","children":{}},"/playground/01_literature/labs-weekly-catchup-3":{"label":"Labs Weekly Catchup #3","children":{}},"/playground/01_literature/labs-weekly-catchup-2":{"label":"Labs Weekly Catchup #2","children":{}},"/playground/01_literature/labs-weekly-catchup-1":{"label":"Labs Weekly Catchup #1","children":{}},"/playground/01_literature/labs-who-we-are":{"label":"Labs - Who we are","children":{}},"/playground/01_literature/readme":{"label":"Dwarves Memo","children":{}},"/playground/01_literature/duckdb-demo-and-showcase":{"label":"DuckDB demo and showcase","children":{}},"/playground/01_literature/salary-advance":{"label":"$icy Salary Advance","children":{}},"/playground/01_literature/how-rd-contributes-to-performance-review":{"label":"How R&D contributes to Performance Review","children":{}},"/playground/01_literature/knowledge-journey":{"label":"Knowledge Journey","children":{}},"/playground/01_literature/labs-new-member-onboarding":{"label":"Labs - New Member Onboarding","children":{}},"/playground/01_literature/labs-roadmap-nov-23-update":{"label":"Labs Roadmap (Nov 23 update)","children":{}},"/playground/01_literature/labs-topic-proposal-progress-tracking":{"label":"Labs - Topic proposal & progress tracking","children":{}},"/playground/01_literature/labs-x-consulting-workflow":{"label":"Labs x Consulting Workflow","children":{}},"/playground/01_literature/reward-model-nomination":{"label":"Reward Model & Nomination","children":{}},"/playground/01_literature/our-view-on-fullstack-engineering":{"label":"Our View On Fullstack Engineering","children":{}},"/playground/01_literature/adoption-of-pnpm":{"label":"Adoption Of Pnpm","children":{}},"/playground/01_literature/working-on-a-project-interview-assessment-at-dwarves":{"label":"Working On A Project Interview Assessment At Dwarves","children":{}},"/playground/01_literature/how-we-created-an-ai-powered-interview-system-using-openais-chatgpt":{"label":"How We Created An Ai Powered Interview System Using Openais Chatgpt","children":{}},"/playground/01_literature/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms":{"label":"Easy Prompt Engineering For Business Use And Mitigating Risks In Llms","children":{}},"/playground/01_literature/exploring-machine-learning-approaches-for-fine-tuning-llama-models":{"label":"Exploring Machine Learning Approaches For Fine Tuning Llama Models","children":{}},"/playground/01_literature/managing-dataflow-and-sql-database-with-concurrency-control":{"label":"Managing Dataflow And Sql Database With Concurrency Control","children":{}},"/playground/01_literature/choosing-the-right-javascript-framework-a-deep-dive-into-react-vs-angular-vs-vue":{"label":"Choosing The Right Javascript Framework A Deep Dive Into React Vs Angular Vs Vue","children":{}},"/playground/01_literature/design-system-for-layer-2-using-zk-rollup":{"label":"Design System For Layer 2 Using Zk Rollup","children":{}},"/playground/01_literature/lessons-learned-from-being-a-part-of-corporate-micro-frontend-implementation":{"label":"Lessons Learned From Being A Part Of Corporate Micro Frontend Implementation","children":{}},"/playground/01_literature/cost-of-react-native":{"label":"Cost Of React Native","children":{}},"/playground/01_literature/lessons-learned-from-concurrency-practices-in-blockchain-projects":{"label":"Lessons Learned From Concurrency Practices In Blockchain Projects","children":{}},"/playground/01_literature/database-designs-for-multilingual-apps":{"label":"Database Designs For Multilingual Apps","children":{}},"/playground/01_literature/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit":{"label":"Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit","children":{}},"/playground/01_literature/how-blue-green-deployment-helped-mochi":{"label":"How Blue Green Deployment Helped Mochi","children":{}},"/playground/01_literature/i18n-frontend-guideline":{"label":"I18n Frontend Guideline","children":{}},"/playground/01_literature/radio-talk-61-monorepo":{"label":"Radio Talk 61 Monorepo","children":{}},"/playground/01_literature/from-multi-repo-to-monorepo-a-case-study-with-nghenhan-turbo-monorepo":{"label":"From Multi Repo To Monorepo A Case Study With Nghenhan Turbo Monorepo","children":{}},"/playground/01_literature/radio-talk-60-blue-green-deployment":{"label":"Radio Talk 60 Blue Green Deployment","children":{}},"/playground/01_literature/growth-is-our-universal-language":{"label":"Growth Is Our Universal Language","children":{}},"/playground/01_literature/the-key-of-security-mechanisms-in-tackling-cyber-threats":{"label":"The Key Of Security Mechanisms In Tackling Cyber Threats","children":{}},"/playground/01_literature/responsibility":{"label":"Responsibility","children":{}},"/playground/01_literature/configure-the-company-email":{"label":"Configure The Company Email","children":{}},"/playground/01_literature/tech-event-in-the-latest-transforming-healthcare-with-technology":{"label":"Tech Event In The Latest Transforming Healthcare With Technology","children":{}},"/playground/01_literature/from-data-to-backend-an-apprentice-sharing":{"label":"From Data To Backend An Apprentice Sharing","children":{}},"/playground/01_literature/data-analyst-in-retail-trading":{"label":"Data Analyst In Retail Trading","children":{}},"/playground/01_literature/passing-the-probation-get-3-upvotes":{"label":"Passing The Probation Get 3 Upvotes","children":{}},"/playground/01_literature/react-native-new-architecture":{"label":"React Native New Architecture","children":{}},"/playground/01_literature/writing":{"label":"Writing","children":{"/playground/01_literature/writing/state-explain-link":{"label":"State, Explain, Link - An all-purpose writing technique","children":{}}}},"/playground/01_literature/dwarves-radio-talk-17-conduct-a-1-1-session":{"label":"Dwarves Radio Talk 17 Conduct A 1 1 Session","children":{}},"/playground/01_literature/dwarves-radio-talk-16-run-an-effective-performance-review":{"label":"Dwarves Radio Talk 16 Run An Effective Performance Review","children":{}},"/playground/01_literature/understanding-an-application-design":{"label":"Understanding An Application Design","children":{}},"/playground/01_literature/sql-practices-orm-vs-plain-sql":{"label":"Sql Practices Orm Vs Plain Sql","children":{}},"/playground/01_literature/what-i-learned-on-design-thinking-and-software-development":{"label":"What I Learned On Design Thinking And Software Development","children":{}},"/playground/01_literature/six-things-i-extracted-from-design-thinking":{"label":"Six Things I Extracted From Design Thinking","children":{}},"/playground/01_literature/gitflow-pull-request":{"label":"Gitflow Pull Request","children":{}},"/playground/01_literature/git-commit-message-convention":{"label":"Git Commit Message Convention","children":{}},"/playground/01_literature/are-we-really-engineers":{"label":"Are We Really Engineers","children":{}},"/playground/01_literature/how-we-setup-cicd":{"label":"How We Setup Cicd","children":{}},"/playground/01_literature/getting-started-with-webflow":{"label":"Getting Started With Webflow","children":{}},"/playground/01_literature/ui-design-best-practices-dwarves":{"label":"Ui Design Best Practices Dwarves","children":{}},"/playground/01_literature/xpc-services-on-macos-app-using-swift":{"label":"Xpc Services On Macos App Using Swift","children":{}},"/playground/01_literature/the-correct-way-to-build-kpi":{"label":"The Correct Way To Build Kpi","children":{}},"/playground/01_literature/domain-insight-research-framework":{"label":"Domain Insight Research Framework","children":{}},"/playground/01_literature/asking-as-a-junior":{"label":"Asking As A Junior","children":{}},"/playground/01_literature/infinite-image-gallery-with-r3f-an-approach":{"label":"Infinite Image Gallery With R3f An Approach","children":{}},"/playground/01_literature/market":{"label":"Market","children":{"/playground/01_literature/market/an-overview-of-micro-investment-in-real-estate":{"label":"An Overview Of Micro Investment In Real Estate","children":{}}}},"/playground/01_literature/grid-and-layout":{"label":"Grid And Layout","children":{}},"/playground/01_literature/startups-vs-junior-designers":{"label":"Startups Vs Junior Designers","children":{}},"/playground/01_literature/gestalt-principles-in-ui-design":{"label":"Gestalt Principles In Ui Design","children":{}},"/playground/01_literature/aarrr-framework-in-a-nutshell":{"label":"Aarrr Framework In A Nutshell","children":{}},"/playground/01_literature/a-quick-intro-to-webassembly":{"label":"A Quick Intro To Webassembly","children":{}},"/playground/01_literature/sdk-event-sourcing":{"label":"Sdk Event Sourcing","children":{}},"/playground/01_literature/software-development-life-cycle-101":{"label":"Software Development Life Cycle 101","children":{}},"/playground/01_literature/introduce-to-dwarves-memo":{"label":"Introduce To Dwarves Memo","children":{}},"/playground/01_literature/daemons-and-services-programming-guide":{"label":"Daemons And Services Programming Guide","children":{}},"/playground/01_literature/remote-moderated-usability-testing":{"label":"Remote Moderated Usability Testing","children":{}},"/playground/01_literature/an-alternative-to-tm":{"label":"An Alternative To Tm","children":{}},"/playground/01_literature/how-a-design-system-work":{"label":"How A Design System Work","children":{}},"/playground/01_literature/software-modeling":{"label":"Software Modeling","children":{}},"/playground/01_literature/reusability-in-software-development":{"label":"Reusability In Software Development","children":{}},"/playground/01_literature/blockchain-for-designers":{"label":"Blockchain For Designers","children":{}},"/playground/01_literature/design-better-mobile-application":{"label":"Design Better Mobile Application","children":{}},"/playground/01_literature/introduction-to-software-craftsmanship":{"label":"Introduction To Software Craftsmanship","children":{}},"/playground/01_literature/domain-glossary":{"label":"Domain Glossary","children":{}},"/playground/01_literature/architecture-decision-record":{"label":"Architecture Decision Record","children":{}},"/playground/01_literature/build-an-assistant-on-the-terminal":{"label":"Build An Assistant On The Terminal","children":{}},"/playground/01_literature/create-circular-text-using-swiftui":{"label":"Create Circular Text Using Swiftui","children":{}},"/playground/01_literature/draw-watch-face-using-swiftui":{"label":"Draw Watch Face Using Swiftui","children":{}},"/playground/01_literature/applied-security-basis":{"label":"Applied Security Basis","children":{}},"/playground/01_literature/swiftui":{"label":"Swiftui","children":{}},"/playground/01_literature/bunk-license-check":{"label":"Bunk License Check","children":{}},"/playground/01_literature/well-crafted-software":{"label":"Well Crafted Software","children":{}},"/playground/01_literature/objective":{"label":"Objective","children":{}},"/playground/01_literature/project-management":{"label":"Project Management","children":{}},"/playground/01_literature/kubernetes-helm-101":{"label":"Kubernetes Helm 101","children":{}},"/playground/01_literature/what-is-kubernetes":{"label":"What Is Kubernetes","children":{}},"/playground/01_literature/traits-to-assess-during-an-interview":{"label":"Traits To Assess During An Interview","children":{}},"/playground/01_literature/recursively-export-file-pattern-in-javascript-es6-application":{"label":"Recursively Export File Pattern In Javascript Es6 Application","children":{}},"/playground/01_literature/playaround-with-clojure":{"label":"Playaround With Clojure","children":{}},"/playground/01_literature/playaround-with-rust":{"label":"Playaround With Rust","children":{}},"/playground/01_literature/overview-on-broker-pattern-in-distributed-system":{"label":"Overview On Broker Pattern In Distributed System","children":{}},"/playground/01_literature/fundamental-end-to-end-frontend-testing-with-cypress":{"label":"Fundamental End To End Frontend Testing With Cypress","children":{}},"/playground/01_literature/uidynamicanimator":{"label":"Uidynamicanimator","children":{}},"/playground/01_literature/reproduce-apple-find-me-bottom-menu-view":{"label":"Reproduce Apple Find Me Bottom Menu View","children":{}},"/playground/01_literature/build-a-passcode-view-with-swift":{"label":"Build A Passcode View With Swift","children":{}},"/playground/01_literature/istio":{"label":"Istio","children":{}},"/playground/01_literature/different-ways-to-test-react-application":{"label":"Different Ways To Test React Application","children":{}},"/playground/01_literature/federated-byzantine":{"label":"Federated Byzantine","children":{}},"/playground/01_literature/fabric-hyperledger-architecture-explanation":{"label":"Fabric Hyperledger Architecture Explanation","children":{}},"/playground/01_literature/setup-react-project-with-webpack-and-babel":{"label":"Setup React Project With Webpack And Babel","children":{}},"/playground/01_literature/split-and-reuse-code-in-react-application":{"label":"Split And Reuse Code In React Application","children":{}},"/playground/01_literature/hoc-renderprops-and-hook-in-reactjs":{"label":"Hoc Renderprops And Hook In Reactjs","children":{}},"/playground/01_literature/resource-assignment":{"label":"Resource Assignment","children":{}},"/playground/01_literature/the-principle-of-spacing-in-ui-design-part-2":{"label":"The Principle Of Spacing In Ui Design Part 2","children":{}},"/playground/01_literature/finite-state-machine":{"label":"Finite State Machine","children":{}},"/playground/01_literature/card-sorting-and-a-glimpse-at-experimental-sorting-session":{"label":"Card Sorting And A Glimpse At Experimental Sorting Session","children":{}},"/playground/01_literature/about-devops":{"label":"About Devops","children":{}},"/playground/01_literature/our-daily-standup-format":{"label":"Our Daily Standup Format","children":{}},"/playground/01_literature/good-design-understanding":{"label":"Good Design Understanding","children":{}},"/playground/01_literature/competency-mapping":{"label":"Competency Mapping","children":{}},"/playground/01_literature/design-resourcestools":{"label":"Design Resourcestools","children":{}},"/playground/01_literature/design-tips-tricks":{"label":"Design Tips Tricks","children":{}},"/playground/01_literature/design-system":{"label":"Design System","children":{}},"/playground/01_literature/design-workflow":{"label":"Design Workflow","children":{}},"/playground/01_literature/three-levels-of-design":{"label":"Three Levels Of Design","children":{}},"/playground/01_literature/ui-design-fundamental":{"label":"Ui Design Fundamental","children":{}},"/playground/01_literature/ux-model":{"label":"Ux Model","children":{}},"/playground/01_literature/the-principle-of-spacing-in-ui-design-part-1":{"label":"The Principle Of Spacing In Ui Design Part 1","children":{}},"/playground/01_literature/be-careful-with-your-code-splitting-setup":{"label":"Be Careful With Your Code Splitting Setup","children":{}},"/playground/01_literature/qc-onboarding":{"label":"Qc Onboarding","children":{}},"/playground/01_literature/dcos-series-part-5-gitlab":{"label":"Dcos Series Part 5 Gitlab","children":{}},"/playground/01_literature/dcos-series-part-4-deploy-simple-application-with-backend-database":{"label":"Dcos Series Part 4 Deploy Simple Application With Backend Database","children":{}},"/playground/01_literature/dcos-series-part-3-service-discovery-and-load-balancing":{"label":"Dcos Series Part 3 Service Discovery And Load Balancing","children":{}},"/playground/01_literature/dcos-series-part-2-deploy-simple-applications":{"label":"Dcos Series Part 2 Deploy Simple Applications","children":{}},"/playground/01_literature/dcos-series-part-1-quick-look-installation":{"label":"Dcos Series Part 1 Quick Look Installation","children":{}},"/playground/01_literature/skill-of-software-engineer":{"label":"Skill Of Software Engineer","children":{}},"/playground/01_literature/docker-registry":{"label":"Docker Registry","children":{}},"/playground/01_literature/agile-using-clickup-as-agile-management-tool":{"label":"Agile Using Clickup As Agile Management Tool","children":{}},"/playground/01_literature/agile-how-to-create-clickup-tickets":{"label":"Agile How To Create Clickup Tickets","children":{}},"/playground/01_literature/considering-factors-for-performance-evaluating":{"label":"Considering Factors For Performance Evaluating","children":{}},"/playground/01_literature/how-we-contribute-to-homebrew":{"label":"How We Contribute To Homebrew","children":{}},"/playground/01_literature/the-10x-engineer":{"label":"The 10x Engineer","children":{}},"/playground/01_literature/definition-of-done":{"label":"Definition Of Done","children":{}},"/playground/01_literature/estimation-in-agile":{"label":"Estimation In Agile","children":{}},"/playground/01_literature/sprint-lifecycle":{"label":"Sprint Lifecycle","children":{}},"/playground/01_literature/remote-prepare-and-get-going":{"label":"Remote Prepare And Get Going","children":{}},"/playground/01_literature/docker-microcontainers":{"label":"Docker Microcontainers","children":{}}}},"/playground/00_fleeting":{"label":"00_fleeting","children":{"/playground/00_fleeting/automata":{"label":"Automata","children":{}},"/playground/00_fleeting/error-handling-patterns":{"label":"Error Handling Patterns","children":{}},"/playground/00_fleeting/founder-liquidity":{"label":"Founder Liquidity","children":{}},"/playground/00_fleeting/why-hollywood-and-gaming-struggle-with-ai":{"label":"Why Hollywood and gaming struggle with AI","children":{}},"/playground/00_fleeting/subscription-pricing-models":{"label":"Subscription Pricing Models","children":{}},"/playground/00_fleeting/erlang-fsm":{"label":"Erlang Finite State Machine","children":{}},"/playground/00_fleeting/rust-trait":{"label":"Rust Trait","children":{}},"/playground/00_fleeting/explaining-gradient-descent-in-machine-learning-with-a-simple-analogy":{"label":"Explaining Gradient Descent in Machine Learning with a simple analogy","children":{}},"/playground/00_fleeting/organize-team-know-how-with-zettelkasten-method":{"label":"Organize team know-how with Zettelkasten Method","children":{}},"/playground/00_fleeting/how-to-talk-to-chatgpt-effectively":{"label":"How to talk to ChatGPT effectively","children":{}},"/playground/00_fleeting/202302281019-case-study-write-heavy-scalable-and-reliable-inventory-platform":{"label":"Case study: Write-heavy scalable and reliable inventory platform","children":{}},"/playground/00_fleeting/202301191192-multi-column-index-in-db":{"label":"Multi-column index in DB","children":{}},"/playground/00_fleeting/202301091379-invoking-component-functions-in-react":{"label":"Invoking component functions in React","children":{}},"/playground/00_fleeting/202212131609-how-to-deal-with-technical-debt-in-scrum":{"label":"How to deal with technical debt in Scrum","children":{}},"/playground/00_fleeting/202211141287-go-json-parsing":{"label":"Go JSON parser: number <-> interface","children":{}},"/playground/00_fleeting/202211141513-materialized-view-pattern":{"label":"Materialized View Pattern","children":{}},"/playground/00_fleeting/202211081111-error-messaging":{"label":"Error Messaging","children":{}},"/playground/00_fleeting/202210172128-sign-in-form-best-practices":{"label":"Sign-in Form Best Practices","children":{}},"/playground/00_fleeting/202210162154-the-best-of-css-tldr":{"label":"The Best of CSS TLDR","children":{}},"/playground/00_fleeting/202210150019-migration-planning":{"label":"Migration Planning","children":{}},"/playground/00_fleeting/202210131000-behavior-driven-development":{"label":"Behavior Driven Development","children":{}},"/playground/00_fleeting/202210131516-react-fiber":{"label":"React Fiber","children":{}},"/playground/00_fleeting/202210122014-forward-proxy":{"label":"Forward Proxy","children":{}}}},"/playground/_radar":{"label":"_radar","children":{"/playground/_radar/readme":{"label":"Tech Radar","children":{}},"/playground/_radar/apache-spark":{"label":"Apache Spark","children":{}},"/playground/_radar/ant-design":{"label":"Ant Design","children":{}},"/playground/_radar/apache-kafka":{"label":"Apache Kafka","children":{}},"/playground/_radar/argocd":{"label":"Argocd","children":{}},"/playground/_radar/astro":{"label":"Astro","children":{}},"/playground/_radar/backstage":{"label":"Backstage","children":{}},"/playground/_radar/blue-green-deployment":{"label":"Blue Green Deployment","children":{}},"/playground/_radar/browserstack":{"label":"Browserstack","children":{}},"/playground/_radar/carbon":{"label":"Carbon","children":{}},"/playground/_radar/chatgpt-assistance":{"label":"Chatgpt Assistance","children":{}},"/playground/_radar/chromatic":{"label":"Chromatic","children":{}},"/playground/_radar/clickhouse":{"label":"Clickhouse","children":{}},"/playground/_radar/cloudflare-workers":{"label":"Cloudflare Workers","children":{}},"/playground/_radar/codecept":{"label":"Codecept","children":{}},"/playground/_radar/commitlint":{"label":"Commitlint","children":{}},"/playground/_radar/copilot":{"label":"Copilot","children":{}},"/playground/_radar/cucumber":{"label":"Cucumber","children":{}},"/playground/_radar/cypress":{"label":"Cypress","children":{}},"/playground/_radar/dapr":{"label":"Dapr","children":{}},"/playground/_radar/deno":{"label":"Deno","children":{}},"/playground/_radar/detox":{"label":"Detox","children":{}},"/playground/_radar/devcontainers":{"label":"Devcontainers","children":{}},"/playground/_radar/devpod":{"label":"Devpod","children":{}},"/playground/_radar/dora-metrics":{"label":"Dora Metrics","children":{}},"/playground/_radar/duckdb":{"label":"Duckdb","children":{}},"/playground/_radar/earthly":{"label":"Earthly","children":{}},"/playground/_radar/elixir-umbrella-project":{"label":"Elixir Umbrella Project","children":{}},"/playground/_radar/elixir":{"label":"Elixir","children":{}},"/playground/_radar/erlang":{"label":"Erlang","children":{}},"/playground/_radar/error-logging-convention":{"label":"Error Logging Convention","children":{}},"/playground/_radar/eslint":{"label":"Eslint","children":{}},"/playground/_radar/event-sourcing":{"label":"Event Sourcing","children":{}},"/playground/_radar/excalidraw":{"label":"Excalidraw","children":{}},"/playground/_radar/expo":{"label":"Expo","children":{}},"/playground/_radar/figma":{"label":"Figma","children":{}},"/playground/_radar/formal-verification":{"label":"Formal Verification","children":{}},"/playground/_radar/fullstack-tracing":{"label":"Fullstack Tracing","children":{}},"/playground/_radar/gestalt-principle":{"label":"Gestalt Principle","children":{}},"/playground/_radar/github-actions":{"label":"Github Actions","children":{}},"/playground/_radar/golang":{"label":"Golang","children":{}},"/playground/_radar/grafana":{"label":"Grafana","children":{}},"/playground/_radar/graylog":{"label":"Graylog","children":{}},"/playground/_radar/headless-ui":{"label":"Headless Ui","children":{}},"/playground/_radar/hoppscotch":{"label":"Hoppscotch","children":{}},"/playground/_radar/ipfs":{"label":"Ipfs","children":{}},"/playground/_radar/jotai":{"label":"Jotai","children":{}},"/playground/_radar/k6":{"label":"K6","children":{}},"/playground/_radar/k9s":{"label":"K9s","children":{}},"/playground/_radar/kaniko":{"label":"Kaniko","children":{}},"/playground/_radar/kotlin":{"label":"Kotlin","children":{}},"/playground/_radar/kubeseal-sops":{"label":"Kubeseal Sops","children":{}},"/playground/_radar/ladle":{"label":"Ladle","children":{}},"/playground/_radar/langchain":{"label":"Langchain","children":{}},"/playground/_radar/large-language-model-llm":{"label":"Large Language Model Llm","children":{}},"/playground/_radar/loki":{"label":"Loki","children":{}},"/playground/_radar/makefile":{"label":"Makefile","children":{}},"/playground/_radar/micro-frontend":{"label":"Micro Frontend","children":{}},"/playground/_radar/monorepo":{"label":"Monorepo","children":{}},"/playground/_radar/msw":{"label":"Msw","children":{}},"/playground/_radar/n6n":{"label":"N6n","children":{}},"/playground/_radar/nestjs":{"label":"Nestjs","children":{}},"/playground/_radar/netlify":{"label":"Netlify","children":{}},"/playground/_radar/newrelic":{"label":"Newrelic","children":{}},"/playground/_radar/nextjs":{"label":"Nextjs","children":{}},"/playground/_radar/nodejs":{"label":"Nodejs","children":{}},"/playground/_radar/nostrum":{"label":"Nostrum","children":{}},"/playground/_radar/nx":{"label":"Nx","children":{}},"/playground/_radar/orval":{"label":"Orval","children":{}},"/playground/_radar/page-object-model":{"label":"Page Object Model","children":{}},"/playground/_radar/partytown":{"label":"Partytown","children":{}},"/playground/_radar/phaser":{"label":"Phaser","children":{}},"/playground/_radar/phoenix":{"label":"Phoenix","children":{}},"/playground/_radar/playwright":{"label":"Playwright","children":{}},"/playground/_radar/pnpm":{"label":"Pnpm","children":{}},"/playground/_radar/progressive-delivery":{"label":"Progressive Delivery","children":{}},"/playground/_radar/prometheus":{"label":"Prometheus","children":{}},"/playground/_radar/prompt-engineering":{"label":"Prompt Engineering","children":{}},"/playground/_radar/qwik":{"label":"Qwik","children":{}},"/playground/_radar/radix-ui":{"label":"Radix Ui","children":{}},"/playground/_radar/react-hook-form":{"label":"React Hook Form","children":{}},"/playground/_radar/react-llm":{"label":"React Llm","children":{}},"/playground/_radar/react-native":{"label":"React Native","children":{}},"/playground/_radar/react-query":{"label":"React Query","children":{}},"/playground/_radar/react-server-component":{"label":"React Server Component","children":{}},"/playground/_radar/react-testing-library":{"label":"React Testing Library","children":{}},"/playground/_radar/react":{"label":"React","children":{}},"/playground/_radar/reinforcement-learning-from-human-feedback":{"label":"Reinforcement Learning From Human Feedback","children":{}},"/playground/_radar/remix":{"label":"Remix","children":{}},"/playground/_radar/replayio":{"label":"Replayio","children":{}},"/playground/_radar/reverse-engineering":{"label":"Reverse Engineering","children":{}},"/playground/_radar/rust":{"label":"Rust","children":{}},"/playground/_radar/selenium":{"label":"Selenium","children":{}},"/playground/_radar/semantic-release-auto-release":{"label":"Semantic Release Auto Release","children":{}},"/playground/_radar/sentry":{"label":"Sentry","children":{}},"/playground/_radar/serverlessq":{"label":"Serverlessq","children":{}},"/playground/_radar/solidity":{"label":"Solidity","children":{}},"/playground/_radar/solidjs":{"label":"Solidjs","children":{}},"/playground/_radar/stern":{"label":"Stern","children":{}},"/playground/_radar/svelte":{"label":"Svelte","children":{}},"/playground/_radar/swagger":{"label":"Swagger","children":{}},"/playground/_radar/swift-ui":{"label":"Swift Ui","children":{}},"/playground/_radar/swift":{"label":"Swift","children":{}},"/playground/_radar/swr":{"label":"Swr","children":{}},"/playground/_radar/tailwindcss":{"label":"Tailwindcss","children":{}},"/playground/_radar/tauri":{"label":"Tauri","children":{}},"/playground/_radar/team-topologies":{"label":"Team Topologies","children":{}},"/playground/_radar/timeline":{"label":"Timeline","children":{"/playground/_radar/timeline/create-working-devcontainer-for-nextjs-boilerplate":{"label":"Create Working Devcontainer For Nextjs Boilerplate","children":{}},"/playground/_radar/timeline/open-source-devpod-paperspace-provider":{"label":"Open Source Devpod Paperspace Provider","children":{}},"/playground/_radar/timeline/create-working-devcontainer-for-go-api":{"label":"Create Working Devcontainer For Go Api","children":{}},"/playground/_radar/timeline/fe-23-training-type-safe-client-server":{"label":"Fe 23 Training Type Safe Client Server","children":{}},"/playground/_radar/timeline/first-introduced-use-of-duckdb-in-consolelabs-logconsoleso":{"label":"First Introduced Use Of Duckdb In Consolelabs Logconsoleso","children":{}},"/playground/_radar/timeline/add-type-safe-client-server-support-for-next-boilerplate":{"label":"Add Type Safe Client Server Support For Next Boilerplate","children":{}},"/playground/_radar/timeline/building-reliable-apps-sentry-and-distributed-tracing-for-effective-monitoring":{"label":"Building Reliable Apps Sentry And Distributed Tracing For Effective Monitoring","children":{}},"/playground/_radar/timeline/an-engineering-story-map-for-llms":{"label":"An Engineering Story Map For Llms","children":{}},"/playground/_radar/timeline/exploring-resumable-server-side-rendering-with-qwik":{"label":"Exploring Resumable Server Side Rendering With Qwik","children":{}},"/playground/_radar/timeline/challenge-faced-when-researching-rlhf-with-open-assistant":{"label":"Challenge Faced When Researching Rlhf With Open Assistant","children":{}},"/playground/_radar/timeline/embracing-go-1210s-slog-a-unified-logging-interface-with-benchmarks-against-zerolog-and-zap":{"label":"Embracing Go 1210s Slog A Unified Logging Interface With Benchmarks Against Zerolog And Zap","children":{}},"/playground/_radar/timeline/adoption-of-pnpm":{"label":"Adoption Of Pnpm","children":{}},"/playground/_radar/timeline/diagnosing-and-resolving-performance-issues-with-pprof-and-trace-in-go":{"label":"Diagnosing And Resolving Performance Issues With Pprof And Trace In Go","children":{}},"/playground/_radar/timeline/migrate-yarn-to-pnpm-in-fortress":{"label":"Migrate Yarn To Pnpm In Fortress","children":{}},"/playground/_radar/timeline/level-up-your-testing-game-harnessing-gomock-for-unbeatable-unit-testing-in-go":{"label":"Level Up Your Testing Game Harnessing Gomock For Unbeatable Unit Testing In Go","children":{}},"/playground/_radar/timeline/migrate-yarn-to-pnpm-in-nghe-nhan-droppii":{"label":"Migrate Yarn To Pnpm In Nghe Nhan Droppii","children":{}},"/playground/_radar/timeline/common-design-patterns-in-golang-part-1":{"label":"Common Design Patterns In Golang Part 1","children":{}},"/playground/_radar/timeline/go-training-2023-from-basic-to-advanced":{"label":"Go Training 2023 From Basic To Advanced","children":{}},"/playground/_radar/timeline/llms-accuracy-self-refinement":{"label":"Llms Accuracy Self Refinement","children":{}},"/playground/_radar/timeline/adversarial-prompting":{"label":"Adversarial Prompting","children":{}},"/playground/_radar/timeline/chunking-strategies-to-overcome-context-limitation-in-llm":{"label":"Chunking Strategies To Overcome Context Limitation In Llm","children":{}},"/playground/_radar/timeline/dealing-with-long-term-memory-of-chatbot":{"label":"Dealing With Long Term Memory Of Chatbot","children":{}},"/playground/_radar/timeline/error-handling-and-failure-management-in-a-go-system":{"label":"Error Handling And Failure Management In A Go System","children":{}},"/playground/_radar/timeline/migrate-yarn-to-pnpm-in-nextjs-boilerplate":{"label":"Migrate Yarn To Pnpm In Nextjs Boilerplate","children":{}},"/playground/_radar/timeline/lessons-learned-building-an-llm-chatbot-a-case-study":{"label":"Lessons Learned Building An Llm Chatbot A Case Study","children":{}},"/playground/_radar/timeline/foundation-model":{"label":"Foundation Model","children":{}},"/playground/_radar/timeline/integrate-zod-to-nextjs-boilerplate":{"label":"Integrate Zod To Nextjs Boilerplate","children":{}},"/playground/_radar/timeline/llm-query-caching":{"label":"Llm Query Caching","children":{}},"/playground/_radar/timeline/build-your-chatbot-with-open-source-large-language-models":{"label":"Build Your Chatbot With Open Source Large Language Models","children":{}},"/playground/_radar/timeline/integrate-playwright-x-codecept-with-discord":{"label":"Integrate Playwright X Codecept With Discord","children":{}},"/playground/_radar/timeline/overcoming-distributed-system-challenges-using-golang":{"label":"Overcoming Distributed System Challenges Using Golang","children":{}},"/playground/_radar/timeline/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms":{"label":"Easy Prompt Engineering For Business Use And Mitigating Risks In Llms","children":{}},"/playground/_radar/timeline/migrate-headlessui-to-radixui":{"label":"Migrate Headlessui To Radixui","children":{}},"/playground/_radar/timeline/llm-101-enhance-developer-productivity":{"label":"Llm 101 Enhance Developer Productivity","children":{}},"/playground/_radar/timeline/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines":{"label":"Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines","children":{}},"/playground/_radar/timeline/lessons-learned-from-being-a-part-of-corporate-microfrontend-implementation":{"label":"Lessons Learned From Being A Part Of Corporate Microfrontend Implementation","children":{}},"/playground/_radar/timeline/migrate-yarn-to-pnpm-in-react-toolkit":{"label":"Migrate Yarn To Pnpm In React Toolkit","children":{}},"/playground/_radar/timeline/lessons-learned-from-concurrency-practices-in-blockchain-projects":{"label":"Lessons Learned From Concurrency Practices In Blockchain Projects","children":{}},"/playground/_radar/timeline/applying-mock-service-worker-msw-for-seamless-web-development":{"label":"Applying Mock Service Worker Msw For Seamless Web Development","children":{}},"/playground/_radar/timeline/integrate-playwright-to-run-e2e-test-with-fortress":{"label":"Integrate Playwright To Run E2e Test With Fortress","children":{}},"/playground/_radar/timeline/from-multi-repo-to-monorepo-a-case-study-with-nghenhan":{"label":"From Multi Repo To Monorepo A Case Study With Nghenhan","children":{}},"/playground/_radar/timeline/case-study-how-blue-green-deployment-help-mochi":{"label":"Case Study How Blue Green Deployment Help Mochi","children":{}},"/playground/_radar/timeline/develop-codecept-to-integrate-with-fortress":{"label":"Develop Codecept To Integrate With Fortress","children":{}},"/playground/_radar/timeline/case-study-from-multiple-repo-to-monorepo-at-nghe-nhan":{"label":"Case Study From Multiple Repo To Monorepo At Nghe Nhan","children":{}},"/playground/_radar/timeline/apply-blue-green-deployment-to-mochi":{"label":"Apply Blue Green Deployment To Mochi","children":{}},"/playground/_radar/timeline/memo-blue-green-deployment":{"label":"Memo Blue Green Deployment","children":{}},"/playground/_radar/timeline/brainery-blue-green-deployment":{"label":"Brainery Blue Green Deployment","children":{}},"/playground/_radar/timeline/brainery-validation-with-zod":{"label":"Brainery Validation With Zod","children":{}},"/playground/_radar/timeline/brainery-progressive-delivery":{"label":"Brainery Progressive Delivery","children":{}},"/playground/_radar/timeline/memo-react-native-new-architecture":{"label":"Memo React Native New Architecture","children":{}},"/playground/_radar/timeline/backend-for-call-requests-to-binance-and-get-data-from-multiple-platforms":{"label":"Backend For Call Requests To Binance And Get Data From Multiple Platforms","children":{}},"/playground/_radar/timeline/create-backend-monorepo-to-share-code-and-manage-multiple-services-in-one-repo":{"label":"Create Backend Monorepo To Share Code And Manage Multiple Services In One Repo","children":{}},"/playground/_radar/timeline/nextjs-boilerplate":{"label":"Nextjs Boilerplate","children":{}},"/playground/_radar/timeline/apply-page-object-model-structure-to-wego":{"label":"Apply Page Object Model Structure To Wego","children":{}},"/playground/_radar/timeline/apply-page-object-model-structure-to-aharooms":{"label":"Apply Page Object Model Structure To Aharooms","children":{}},"/playground/_radar/timeline/apply-page-object-model-structure-to-artzy":{"label":"Apply Page Object Model Structure To Artzy","children":{}},"/playground/_radar/timeline/apply-page-object-model-structure-to-sci":{"label":"Apply Page Object Model Structure To Sci","children":{}},"/playground/_radar/timeline/build-automation-for-sci":{"label":"Build Automation For Sci","children":{}},"/playground/_radar/timeline/apply-page-object-model-structure-to-basehq":{"label":"Apply Page Object Model Structure To Basehq","children":{}},"/playground/_radar/timeline/mdx-document-for":{"label":"Mdx Document For","children":{}},"/playground/_radar/timeline/develop":{"label":"Develop","children":{}},"/playground/_radar/timeline/apply-monorepos-to-repit-to-resolve-the-problem-of-consistency":{"label":"Apply Monorepos To Repit To Resolve The Problem Of Consistency","children":{}},"/playground/_radar/timeline/learn-typescript-as-a-mandatory-to-develop-reapit-foundation":{"label":"Learn Typescript As A Mandatory To Develop Reapit Foundation","children":{}},"/playground/_radar/timeline/develop-sdk-integration-demo-for-sajari":{"label":"Develop Sdk Integration Demo For Sajari","children":{}},"/playground/_radar/timeline/live-view":{"label":"Live View","children":{}},"/playground/_radar/timeline/migrate-aharooms-pms-to-typescript":{"label":"Migrate Aharooms Pms To Typescript","children":{}},"/playground/_radar/timeline/create-api-service-for-urbox-to-sync-orders-from-3rd-parties-and-manage-shipment":{"label":"Create Api Service For Urbox To Sync Orders From 3rd Parties And Manage Shipment","children":{}},"/playground/_radar/timeline/nghenhan-microservices":{"label":"Nghenhan Microservices","children":{}},"/playground/_radar/timeline/radio-talk-65-fullstack-type-safe-with-trpc":{"label":"Radio Talk 65 Fullstack Type Safe With Trpc","children":{}},"/playground/_radar/timeline/understanding-test-doubles-an-in-depth-look":{"label":"Understanding Test Doubles An In Depth Look","children":{}},"/playground/_radar/timeline/radio-talk-64-coding-best-practice-that-optimizing-go-compiler":{"label":"Radio Talk 64 Coding Best Practice That Optimizing Go Compiler","children":{}},"/playground/_radar/timeline/reward-model":{"label":"Reward Model","children":{}},"/playground/_radar/timeline/q-learning":{"label":"Q Learning","children":{}},"/playground/_radar/timeline/sum-command":{"label":"Sum Command","children":{}},"/playground/_radar/timeline/reinforcement-learning":{"label":"Reinforcement Learning","children":{}},"/playground/_radar/timeline/react-server-component":{"label":"React Server Component","children":{}},"/playground/_radar/timeline/select-vector-database-for-llm":{"label":"Select Vector Database For Llm","children":{}},"/playground/_radar/timeline/workaround-with-openais-token-limit-with-langchain":{"label":"Workaround With Openais Token Limit With Langchain","children":{}},"/playground/_radar/timeline/working-with-langchain-document-loaders":{"label":"Working With Langchain Document Loaders","children":{}},"/playground/_radar/timeline/the-cost-of-react-native":{"label":"The Cost Of React Native","children":{}},"/playground/_radar/timeline/state-of-frontend-2023-react-vs-angular-vs-vue":{"label":"State Of Frontend 2023 React Vs Angular Vs Vue","children":{}},"/playground/_radar/timeline/unit-testing-best-practices-in-golang":{"label":"Unit Testing Best Practices In Golang","children":{}},"/playground/_radar/timeline/what-is-pnpm":{"label":"What Is Pnpm","children":{}},"/playground/_radar/timeline/tackling-server-state-complexity-in-frontend-development":{"label":"Tackling Server State Complexity In Frontend Development","children":{}},"/playground/_radar/timeline/why-we-chose-our-tech-stack":{"label":"Why We Chose Our Tech Stack","children":{}},"/playground/_radar/timeline/why-micro-frontend":{"label":"Why Micro Frontend","children":{}},"/playground/_radar/timeline/radio-talk-monorepo":{"label":"Radio Talk Monorepo","children":{}},"/playground/_radar/timeline/radio-talk-blue-green-deployment":{"label":"Radio Talk Blue Green Deployment","children":{}},"/playground/_radar/timeline/radio-talk-a-demo-of-query-engine-postgresql-vs-apache-spark":{"label":"Radio Talk A Demo Of Query Engine Postgresql Vs Apache Spark","children":{}},"/playground/_radar/timeline/rnd-team-mentioned-apache-spark-as-a-solution-to-handle-query-big-data":{"label":"Rnd Team Mentioned Apache Spark As A Solution To Handle Query Big Data","children":{}},"/playground/_radar/timeline/radio-talk-engineering-health-metrics":{"label":"Radio Talk Engineering Health Metrics","children":{}},"/playground/_radar/timeline/radio-talk-nextjs-13":{"label":"Radio Talk Nextjs 13","children":{}},"/playground/_radar/timeline/radio-talk-using-nextjs-as-a-fullstack-framework":{"label":"Radio Talk Using Nextjs As A Fullstack Framework","children":{}},"/playground/_radar/timeline/use-yup-to-validate-form-values-in-droppii":{"label":"Use Yup To Validate Form Values In Droppii","children":{}},"/playground/_radar/timeline/vitejs-native-modules":{"label":"Vitejs Native Modules","children":{}},"/playground/_radar/timeline/radio-talk-introduction-to-apache-spark":{"label":"Radio Talk Introduction To Apache Spark","children":{}},"/playground/_radar/timeline/vercel-switching-their-packages-from-yarn-to-pnpm-caught-our-attention":{"label":"Vercel Switching Their Packages From Yarn To Pnpm Caught Our Attention","children":{}},"/playground/_radar/timeline/radio-talk-remix-vs-nextjs":{"label":"Radio Talk Remix Vs Nextjs","children":{}},"/playground/_radar/timeline/radio-talk-turborepo":{"label":"Radio Talk Turborepo","children":{}},"/playground/_radar/timeline/react-toolkit-migrate-from-lerna-to-turporepo":{"label":"React Toolkit Migrate From Lerna To Turporepo","children":{}},"/playground/_radar/timeline/use-monorepos-to-build-v3-of-react-sdk-for-searchio":{"label":"Use Monorepos To Build V3 Of React Sdk For Searchio","children":{}},"/playground/_radar/timeline/react-toolkit":{"label":"React Toolkit","children":{}},"/playground/_radar/timeline/use-nx-for-managing-basehq-frontend-monorepos":{"label":"Use Nx For Managing Basehq Frontend Monorepos","children":{}},"/playground/_radar/timeline/practice-and-using-selenium-in-setel-project":{"label":"Practice And Using Selenium In Setel Project","children":{}},"/playground/_radar/timeline/urbox-backend-api":{"label":"Urbox Backend Api","children":{}},"/playground/_radar/timeline/using-k6-in-setel":{"label":"Using K6 In Setel","children":{}},"/playground/_radar/timeline/use-monorepos-to-resolve-the-problem-of-sharing-ui-components-in-aharoom":{"label":"Use Monorepos To Resolve The Problem Of Sharing Ui Components In Aharoom","children":{}},"/playground/_radar/timeline/a-case-study-interview-into-micro-frontends-building-design-system-for-e-commerce-platform":{"label":"A Case Study Interview Into Micro Frontends Building Design System For E Commerce Platform","children":{}},"/playground/_radar/timeline/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit":{"label":"Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit","children":{}},"/playground/_radar/timeline/adapt-cucumber-as-a-bdd-for-wego":{"label":"Adapt Cucumber As A Bdd For Wego","children":{}}}},"/playground/_radar/timescaledb":{"label":"Timescaledb","children":{}},"/playground/_radar/tla":{"label":"Tla","children":{}},"/playground/_radar/trunk-based-development":{"label":"Trunk Based Development","children":{}},"/playground/_radar/turborepo":{"label":"Turborepo","children":{}},"/playground/_radar/type-safe-client-server":{"label":"Type Safe Client Server","children":{}},"/playground/_radar/typescript":{"label":"Typescript","children":{}},"/playground/_radar/ui-documentation":{"label":"Ui Documentation","children":{}},"/playground/_radar/uno-css":{"label":"Uno Css","children":{}},"/playground/_radar/upptime":{"label":"Upptime","children":{}},"/playground/_radar/v-model":{"label":"V Model","children":{}},"/playground/_radar/vector-database":{"label":"Vector Database","children":{}},"/playground/_radar/vercel":{"label":"Vercel","children":{}},"/playground/_radar/vitejs":{"label":"Vitejs","children":{}},"/playground/_radar/volta":{"label":"Volta","children":{}},"/playground/_radar/wasm":{"label":"Wasm","children":{}},"/playground/_radar/webdriverio":{"label":"Webdriverio","children":{}},"/playground/_radar/webflow":{"label":"Webflow","children":{}},"/playground/_radar/yup":{"label":"Yup","children":{}},"/playground/_radar/zod":{"label":"Zod","children":{}},"/playground/_radar/zustand":{"label":"Zustand","children":{}}}},"/playground/blockchain":{"label":"Blockchain","children":{"/playground/blockchain/build-custom-ai-agent-with-elizaos":{"label":"Build custom AI Agent with ElizaOS","children":{}},"/playground/blockchain/web3-development-with-foundry":{"label":"Web3 Development with Foundry","children":{}},"/playground/blockchain/cross-chain-transfers-implementing-a-token-swap-from-base-chain-to-bitcoin":{"label":"Implement a Token Swap from the Base chain to Bitcoin for cross-chain transactions","children":{}},"/playground/blockchain/ton_core_concept":{"label":"Ton's base concepts","children":{}},"/playground/blockchain/ton_blockchain_of_blockchains":{"label":"Ton: Blockchain of blockchains","children":{}},"/playground/blockchain/introduce-to-solana-token-2022-new-standard-to-create-a-token-in-solana":{"label":"Introduce to Solana Token 2022 - new standard to create a token in solana","children":{}},"/playground/blockchain/solana-core-concept":{"label":"Solana core concepts","children":{}},"/playground/blockchain/metaplex-nft-compression":{"label":"Metaplex NFT Compression","children":{}},"/playground/blockchain/plonky2":{"label":"Plonky2","children":{}},"/playground/blockchain/polygon-zkevm-architecture":{"label":"Polygon zkEVM architecture","children":{}},"/playground/blockchain/starknet-architecture":{"label":"StarkNet architecture","children":{}},"/playground/blockchain/zk-snarks":{"label":"zk-SNARKs","children":{}},"/playground/blockchain/layer-2":{"label":"Layer 2: Scaling Solutions for Ethereum","children":{}},"/playground/blockchain/solana-account":{"label":"Solana Account","children":{}},"/playground/blockchain/foundational-topics":{"label":"Foundational Topics","children":{"/playground/blockchain/foundational-topics/zero-knowledge-proofs":{"label":"Zero-knowledge Proofs","children":{}},"/playground/blockchain/foundational-topics/blocks":{"label":"Blocks","children":{}},"/playground/blockchain/foundational-topics/distributed-systems":{"label":"Distributed systems","children":{}},"/playground/blockchain/foundational-topics/pos":{"label":"PoS","children":{}},"/playground/blockchain/foundational-topics/smart-contract":{"label":"Smart Contract","children":{}},"/playground/blockchain/foundational-topics/topics":{"label":"Topics","children":{}}}},"/playground/blockchain/multisign-wallet":{"label":"Multisign wallet","children":{}},"/playground/blockchain/anchor-framework":{"label":"Anchor framework","children":{}},"/playground/blockchain/blockchain-bridge":{"label":"Blockchain Bridge","children":{}},"/playground/blockchain/nft-fractionalization":{"label":"NFT Fractionalization","children":{}},"/playground/blockchain/how-tokens-work-on-solana":{"label":"How Tokens Work on Solana","children":{}},"/playground/blockchain/liquidity-pool":{"label":"Liquidity pool","children":{}}}},"/playground/frontend":{"label":"Frontend","children":{"/playground/frontend/report":{"label":"Report","children":{"/playground/frontend/report/frontend-report-march-2025":{"label":"Frontend Report March 2025","children":{}},"/playground/frontend/report/frontend-report-february-2025":{"label":"February 2025","children":{}},"/playground/frontend/report/frontend-report-january-2025":{"label":"January 2025","children":{}},"/playground/frontend/report/frontend-report-second-half-of-november-2024":{"label":"Nov 2024 (Second Half)","children":{}},"/playground/frontend/report/frontend-report-first-half-of-november-2024":{"label":"Nov 2024 (First Half)","children":{}},"/playground/frontend/report/frontend-report-october-2024":{"label":"October 2024","children":{}},"/playground/frontend/report/frontend-report-september-2024":{"label":"September 2024","children":{}},"/playground/frontend/report/frontend-report-august-2024":{"label":"August 2024","children":{}},"/playground/frontend/report/frontend-report-july-2024":{"label":"July 2024","children":{}}}},"/playground/frontend/react":{"label":"React","children":{"/playground/frontend/react/code-splitting":{"label":"Code splitting","children":{}},"/playground/frontend/react/component-composition-patterns":{"label":"Component composition patterns","children":{}},"/playground/frontend/react/design-system-integration":{"label":"Design system integration","children":{}},"/playground/frontend/react/hook-architecture":{"label":"Hook architecture","children":{}},"/playground/frontend/react/rendering-strategies":{"label":"Rendering strategies","children":{}},"/playground/frontend/react/state-management-strategy":{"label":"State management strategy","children":{}},"/playground/frontend/react/testing-strategies":{"label":"Testing strategies","children":{}}}},"/playground/frontend/websockets":{"label":"WebSockets","children":{}},"/playground/frontend/from-markup-to-pixels-a-look-inside-the-dom-cssom-and-render-tree":{"label":"From Markup to Pixels - A look inside the DOM, CSSOM, and Render Tree","children":{}},"/playground/frontend/window-and-iframe-communication":{"label":"Window and iframe communication","children":{}},"/playground/frontend/applying-mock-service-worker-msw-for-seamless-web-development":{"label":"Applying Mock Service Worker (MSW) for Seamless Web Development","children":{}},"/playground/frontend/render-optimization-in-data-fetching-libraries":{"label":"Render optimization in data-fetching libraries","children":{}},"/playground/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql":{"label":"A Fragment Colocation Pattern with React & Apollo GraphQL","children":{}},"/playground/frontend/scroll-driven-animations":{"label":"Scroll-driven animations","children":{}},"/playground/frontend/react-server-component":{"label":"React Server Components, NextJs Route and Data Fetching","children":{}},"/playground/frontend/url-formats-for-sharing-via-social-networks":{"label":"URL formats for sharing via social networks","children":{}},"/playground/frontend/shadow-dom":{"label":"Shadow DOM","children":{}},"/playground/frontend/retain-scroll-position-in-infinite-scroll":{"label":"Retain scroll position in infinite scroll","children":{}},"/playground/frontend/continuous-translation":{"label":"Continuous Translation","children":{}},"/playground/frontend/what-is-pnpm-compare-to-npmyarn":{"label":"What is PNPM Compare To NPM/Yarn","children":{}},"/playground/frontend/why-micro-frontend":{"label":"Why Micro Frontend","children":{}},"/playground/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution":{"label":"Why We Chose Our Tech Stack Accelerating Development With A Robust Frontend Solution","children":{}},"/playground/frontend/tackling-server-state-complexity-in-frontend-development":{"label":"Tackling Server State complexity in Frontend Development","children":{}},"/playground/frontend/variable-fonts":{"label":"Variable Fonts","children":{}},"/playground/frontend/when-should-we-use-usereducer-instead-of-usestate":{"label":"When should we use useReducer instead of useState?","children":{}},"/playground/frontend/preserving-and-resetting-state-in-react":{"label":"Preserving and Resetting state in React","children":{}},"/playground/frontend/mixpanel":{"label":"Mixpanel","children":{}},"/playground/frontend/validation-with-zod":{"label":"Validation with Zod","children":{}},"/playground/frontend/parse-dont-validate-in-typescript":{"label":"Parse, don't validate in TypeScript","children":{}},"/playground/frontend/webassembly":{"label":"Webassembly","children":{}},"/playground/frontend/singleton-design-pattern-in-javascript":{"label":"Singleton Design Pattern in Javascript","children":{}},"/playground/frontend/an-introduction-to-atomic-css":{"label":"An Introduction to Atomic CSS","children":{}},"/playground/frontend/intro-to-indexeddb":{"label":"Intro to IndexedDB","children":{}},"/playground/frontend/the-fundamental-of-web-performance":{"label":"The fundamental of web performance","children":{}},"/playground/frontend/wai-aria":{"label":"WAI-ARIA","children":{}},"/playground/frontend/build-polymorphic-react-components-with-typescript":{"label":"Build polymorphic React components with Typescript","children":{}},"/playground/frontend/threejs":{"label":"Threejs","children":{"/playground/frontend/threejs/cameras-in-threejs":{"label":"Cameras in ThreeJS","children":{}}}},"/playground/frontend/prevent-layout-thrashing":{"label":"Prevent Layout Thrashing","children":{}},"/playground/frontend/pure-css-parallax":{"label":"Pure CSS Parallax","children":{}},"/playground/frontend/css-container-queries":{"label":"CSS Container Queries","children":{}},"/playground/frontend/hsl-color":{"label":"HSL Color","children":{}},"/playground/frontend/mitigate-blocking-the-main-thread":{"label":"Mitigate blocking the main thread","children":{}},"/playground/frontend/css-in-js":{"label":"CSS in JS","children":{}},"/playground/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second":{"label":"Dark mode flickers a white background for a fraction of a second","children":{}},"/playground/frontend/why-dom-manipulation-is-slow":{"label":"Why DOM manipulation is slow?","children":{}},"/playground/frontend/why-virtual-dom-is-fast":{"label":"Why Virtual DOM is fast?","children":{}},"/playground/frontend/vitejs-native-modules":{"label":"ViteJS native modules","children":{}},"/playground/frontend/javascript-modules":{"label":"JavaScript modules","children":{}},"/playground/frontend/atomic-design-pattern":{"label":"Atomic Design Pattern","children":{}},"/playground/frontend/focus-trap":{"label":"Focus trap","children":{}},"/playground/frontend/html-inert":{"label":"HTML inert","children":{}},"/playground/frontend/useeffect-double-calls-in-react-18":{"label":"useEffect double calls in React 18","children":{}},"/playground/frontend/react-18":{"label":"React 18","children":{}},"/playground/frontend/remix-versus-nextjs":{"label":"Remix Versus Nextjs","children":{}},"/playground/frontend/zaplib-post-mortem":{"label":"Zaplib post-mortem","children":{}},"/playground/frontend/parallelism-in-javascript":{"label":"Parallelism in JavaScript","children":{}},"/playground/frontend/mpa-spa-and-partial-hydration":{"label":"MPA, SPA and Partial Hydration","children":{}},"/playground/frontend/micro-frontends-microservices-for-frontend-development":{"label":"Micro Frontends Microservices For Frontend Development","children":{}},"/playground/frontend/using-correct-html-element-to-increase-website-accessibility":{"label":"Using Correct Html Element To Increase Website Accessibility","children":{}},"/playground/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss":{"label":"Remove Unused CSS Styles From Bootstrap Using Purgecss","children":{}}}},"/playground/use-cases":{"label":"Use Cases","children":{"/playground/use-cases/service_monitoring_with_upptime":{"label":"Secure and transparent uptime monitoring with Upptime and GitHub secrets","children":{}},"/playground/use-cases/create-slides-with-overleaf":{"label":"Create slides with Overleaf and ChatGPT","children":{}},"/playground/use-cases/optimize-init-load-time-for-trading-platform":{"label":"Optimizing initial load time for a Trading Platform","children":{}},"/playground/use-cases/ai-interview-platform-mvp":{"label":"Building MVP for AI-driven interview platform","children":{}},"/playground/use-cases/optimizing-ui-for-effective-investment-experience":{"label":"Hedge Foundation - Optimizing UI for effective investment experience","children":{}},"/playground/use-cases/implement-binance-future-pnl-analysis-page":{"label":"Implement Binance Futures PNL analysis page by Phoenix LiveView","children":{}},"/playground/use-cases/migrate-normal-table-to-timescale-table":{"label":"Migrate regular tables into TimescaleDB hypertables to improve query performance","children":{}},"/playground/use-cases/bitcoin-alt-performance-tracking":{"label":"Tracking Bitcoin-Altcoin Performance Indicators in BTC Hedging Strategy","children":{}},"/playground/use-cases/database-hardening-for-trading-platform":{"label":"Database hardening for a trading platform","children":{}},"/playground/use-cases/data-archive-and-recovery":{"label":"Building a data archive and recovery strategy for high-volume trading system","children":{}},"/playground/use-cases/persist-history-using-data-snapshot-pattern":{"label":"Implementing data snapshot pattern to persist historical data","children":{}},"/playground/use-cases/ai-ruby-travel-assistant-chatbot":{"label":"AI-powered Ruby travel assistant","children":{}},"/playground/use-cases/building-chatbot-agent-for-project-management-tool":{"label":"Building chatbot agent to streamline project management","children":{}},"/playground/use-cases/building-data-pipeline-ogif-transcriber":{"label":"Building data pipeline for OGIF transcriber","children":{}},"/playground/use-cases/centralized-monitoring-setup-for-trading-platform":{"label":"Setup centralized monitoring system for Hedge Foundation trading platform","children":{}},"/playground/use-cases/binance-transfer-matching":{"label":"Building better Binance transfer tracking","children":{}},"/playground/use-cases/crypto-market-outperform-chart-rendering":{"label":"Visualizing crypto market performance: BTC-Alt dynamic indicators in Golang","children":{}},"/playground/use-cases/enhancing-cryptocurrency-transfer-logger":{"label":"Transfer mapping: enhancing loggers for better transparency","children":{}},"/playground/use-cases/reconstructing_trading_pnl_data_pipeline_approach":{"label":"Reconstructing historical trading PnL: a data pipeline approach","children":{}},"/playground/use-cases/ai-powered-monthly-project-reports":{"label":"Project reports system: a case study","children":{}}}},"/playground/ai":{"label":"AI","children":{"/playground/ai/securing-your-remote-mcp-servers":{"label":"Securing your remote MCP servers","children":{}},"/playground/ai/tool-level-security-for-remote-mcp-servers":{"label":"Tool-Level Security for Remote MCP Servers","children":{}},"/playground/ai/model-context-protocol":{"label":"Intro to Model Context Protocol","children":{}},"/playground/ai/building-llm-system":{"label":"Building LLM System","children":{"/playground/ai/building-llm-system/quantization-in-llm":{"label":"Quantization for large language models","children":{}},"/playground/ai/building-llm-system/graphrag":{"label":"GraphRAG - Building a knowledge graph for RAG system","children":{}},"/playground/ai/building-llm-system/guardrails-in-llm":{"label":"Guardrails in llm","children":{}},"/playground/ai/building-llm-system/react-in-llm":{"label":"ReAct(Reason + Act) in LLM","children":{}},"/playground/ai/building-llm-system/rewoo-in-llm":{"label":"ReWOO: Reasoning without observation - A deeper look","children":{}},"/playground/ai/building-llm-system/model-selection":{"label":"Model selection","children":{}},"/playground/ai/building-llm-system/logs-pillar":{"label":"Logging","children":{}},"/playground/ai/building-llm-system/metric-pillar":{"label":"Metrics","children":{}},"/playground/ai/building-llm-system/observability-in-ai-platforms":{"label":"Observability in AI platforms","children":{}},"/playground/ai/building-llm-system/trace-pillar":{"label":"Tracing","children":{}},"/playground/ai/building-llm-system/intent-classification-by-llm":{"label":"Intent classification by LLM","children":{}},"/playground/ai/building-llm-system/llm-as-a-judge":{"label":"LLM as a judge","children":{}},"/playground/ai/building-llm-system/use-cases-for-llm-applications":{"label":"Use cases for LLM applications","children":{}},"/playground/ai/building-llm-system/the-rise-of-ai-applications-with-llm":{"label":"The rise of AI applications with LLM","children":{}},"/playground/ai/building-llm-system/evaluation-guideline-for-llm-application":{"label":"Evaluation guidelines for LLM applications","children":{}},"/playground/ai/building-llm-system/prevent-prompt-injection":{"label":"Prevent prompt injection","children":{}},"/playground/ai/building-llm-system/building-llm-system":{"label":"Â§ Building LLM system","children":{}},"/playground/ai/building-llm-system/multi-agent-collaboration-for-task-completion":{"label":"Multi-agent collaboration for task completion","children":{}},"/playground/ai/building-llm-system/multimodal-in-rag":{"label":"Multimodal in rag","children":{}}}},"/playground/ai/digest":{"label":"Digest","children":{"/playground/ai/digest/ai-digest-02":{"label":"AI digest #2 New command Aider, OpenHands, Qwen2.5 Coder 32B, Predicted Output","children":{}},"/playground/ai/digest/ai-digest-01":{"label":"AI digest #1 Aider reasoning, OpenAI Realtime API, Cline - pre Claude-dev ","children":{}}}},"/playground/ai/copilots":{"label":"Copilots","children":{"/playground/ai/copilots/projects-operations":{"label":"Project Operations Copilots","children":{}},"/playground/ai/copilots/team-copilots":{"label":"Team Copilots","children":{}}}},"/playground/ai/text-to-mongodb":{"label":"Natural Language to Database Queries: Text-to-MongoDB","children":{}},"/playground/ai/use-cases":{"label":"Use Cases","children":{"/playground/ai/use-cases/salesforce":{"label":"Salesforce use cases","children":{}},"/playground/ai/use-cases/yelp":{"label":"Yelp use cases","children":{}}}},"/playground/ai/evaluate-chatbot-agent-by-simulated-user":{"label":"Evaluate Chatbot Agent by User Simulation","children":{}},"/playground/ai/journey-of-thought-prompting":{"label":"Journey of Thought Prompting: Harnessing AI to Craft Better Prompts","children":{}},"/playground/ai/llm-tracing-in-ai-system":{"label":"LLM tracing in AI system","children":{}},"/playground/ai/caching-with-rag-system":{"label":"Evaluating caching in RAG systems","children":{}},"/playground/ai/generative-ui":{"label":"What is Generative UI?","children":{}},"/playground/ai/re-ranking-in-rag":{"label":"Re-ranking in RAG","children":{}},"/playground/ai/function-calling":{"label":"Function calling in AI agents","children":{}},"/playground/ai/building-llm-powered-tools-with-dify":{"label":"Streamlining Internal Tool Development with Managed LLMOps: A Dify Case Study","children":{}},"/playground/ai/thumbs-up-and-thumbs-down-pattern":{"label":"Thumbs up and Thumbs down pattern","children":{}},"/playground/ai/supervisor-ai-agents":{"label":"Building Agent Supervisors to Generate Insights","children":{}},"/playground/ai/raptor-llm-retrieval":{"label":"RAPTOR: Tree-based Retrieval for Language Models","children":{}},"/playground/ai/proximal-policy-optimization":{"label":"Proximal Policy Optimization","children":{}},"/playground/ai/a-grand-unified-theory-of-the-ai-hype-cycle":{"label":"A Grand Unified Theory of the AI Hype Cycle","children":{}},"/playground/ai/developing-rapidly-with-generative-ai":{"label":"Developing rapidly with Generative AI","children":{}},"/playground/ai/rlhf-with-open-assistant":{"label":"RLHF with Open Assistant","children":{}},"/playground/ai/story-map-for-llms":{"label":"Story map for LLMs","children":{}},"/playground/ai/adversarial-prompting":{"label":"Adversarial Prompting in Prompt Engineering","children":{}},"/playground/ai/chunking-strategies-to-overcome-context-limitation-in-llm":{"label":"Chunking strategies to overcome context limitation in LLM","children":{}},"/playground/ai/llms-accuracy-self-refinement":{"label":"LLM's Accuracy - Self Refinement","children":{}},"/playground/ai/llm-query-caching":{"label":"Query Caching for Large Language Models","children":{}},"/playground/ai/reinforcement-learning":{"label":"Introduction to Reinforcement Learning and Its Application with LLMs","children":{}},"/playground/ai/foundation-model":{"label":"Foundation Models: The Latest Advancement in AI","children":{}},"/playground/ai/select-vector-database-for-llm":{"label":"Select Vector Database for LLM","children":{}},"/playground/ai/build-your-chatbot-with-open-source-large-language-models":{"label":"Build your chatbot with open source Large Language Models","children":{}},"/playground/ai/workaround-with-openais-token-limit-with-langchain":{"label":"Workaround with OpenAI's token limit with Langchain","children":{}},"/playground/ai/working-with-langchain-document-loaders":{"label":"Working with langchain document loaders","children":{}}}},"/playground/go":{"label":"Go","children":{"/playground/go/weekly":{"label":"Weekly","children":{"/playground/go/weekly/dec-13":{"label":"#24 Go 1.24 testing/synctest experiment for time and concurrency testing","children":{}},"/playground/go/weekly/dec-06":{"label":"#23 Draft Release Notes for Go 1.24 and weak pointers in Go","children":{}},"/playground/go/weekly/nov-29":{"label":"#22 GoMLX: ML in Go without Python","children":{}},"/playground/go/weekly/nov-22":{"label":"#21 Go sync.Once is Simple","children":{}},"/playground/go/weekly/nov-15":{"label":"#20 Go Turns 15","children":{}},"/playground/go/weekly/nov-08":{"label":"#19 Writing secure Go code","children":{}},"/playground/go/weekly/nov-01":{"label":"#18 Fuzz Testing Go HTTP Services","children":{}},"/playground/go/weekly/oct-25":{"label":"#17 Leveraging benchstat Projects in Go benchmark and Go Plan9 memo on 450% speeding up calculations","children":{}},"/playground/go/weekly/oct-18":{"label":"#16 Understand sync.Map","children":{}},"/playground/go/weekly/oct-11":{"label":"#15 Go embed and Reflect","children":{}},"/playground/go/weekly/oct-04":{"label":"#14 Compile-time eval & SQLite with wazero","children":{}},"/playground/go/weekly/sep-27":{"label":"#13 Compiler Quests and Vector Vexations","children":{}},"/playground/go/weekly/sep-20":{"label":"#12 CLI Tools for K8s, REST, and Terminals","children":{}},"/playground/go/weekly/sep-13":{"label":"#11 Actors, Frameworks, and the Future of Go","children":{}},"/playground/go/weekly/sep-06":{"label":"#10 Script, Telemetry","children":{}},"/playground/go/weekly/aug-30":{"label":"#9 TinyGo, SQLite vector search, and Permify","children":{}},"/playground/go/weekly/aug-23":{"label":"#8 GoNB, kubetrim, and GopherCon UK 2024","children":{}},"/playground/go/weekly/aug-16":{"label":"#7 Go 1.23, Websockets, and Structs","children":{}},"/playground/go/weekly/aug-09":{"label":"#6 Cogent Core, Russ Cox stepping down","children":{}},"/playground/go/weekly/aug-02":{"label":"#5 Go 1.23 features, Memory, Minecraft, and More","children":{}},"/playground/go/weekly/jul-26":{"label":"#4 Ethical Hacking, HTTP Requests, Mac App Development","children":{}},"/playground/go/weekly/jul-12":{"label":"#3 Generic Collections, Generics Constraints, AI Bot","children":{}},"/playground/go/weekly/jul-05":{"label":"#2 Go 1.23 Iterators","children":{}},"/playground/go/weekly/june-27":{"label":"#1 eBPF and PGO Optimization Techniques","children":{}}}},"/playground/go/extension-interface-pattern":{"label":"Go extension interface pattern","children":{}},"/playground/go/go-import":{"label":"Go import design: using git repo path","children":{}},"/playground/go/go-package":{"label":"Package first design","children":{}},"/playground/go/go-generics-type-safety":{"label":"How does Go achieve type safety when it enables generics?","children":{}},"/playground/go/go-for-enterprise":{"label":"Go For Enterprise","children":{"/playground/go/go-for-enterprise/who-using-golang-in-enterprise":{"label":"Who is using Go in enterprise?","children":{}},"/playground/go/go-for-enterprise/enterprise-standard-language":{"label":"Go as an Enterprise Standard Language","children":{}},"/playground/go/go-for-enterprise/how-to-use-go-in-enterprise":{"label":"How to use Go in the Enterprise","children":{}},"/playground/go/go-for-enterprise/when-to-use-golang-in-enterprise":{"label":"When to use Go in the Enterprise","children":{}},"/playground/go/go-for-enterprise/why-enterprise-chose-java":{"label":"Why Enterprise Chose Java","children":{}},"/playground/go/go-for-enterprise/why-go":{"label":"Why Go?","children":{}}}},"/playground/go/compute-union-2-finite-automata":{"label":"Efficient Union of Finite Automata in Golang: A Practical Approach","children":{}},"/playground/go/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines":{"label":"Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines","children":{}},"/playground/go/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq":{"label":"Message Queues And Streaming Platforms Eg Kafka Nats Rabbitmq","children":{}},"/playground/go/unit-testing-best-practices-in-golang":{"label":"Unit Testing Best Practices In Golang","children":{}},"/playground/go/profiling-in-go":{"label":"Profiling in Go","children":{}},"/playground/go/go-in-software-engineering":{"label":"Go In Software Engineering","children":{}},"/playground/go/go-concurrency":{"label":"Go Concurrency","children":{}},"/playground/go/slice-and-array-in-golang":{"label":"Slice And Array In Golang","children":{}},"/playground/go/use-go-selenium-to-crawl-data":{"label":"Use Go Selenium To Crawl Data","children":{}},"/playground/go/connecting-vim-with-golang":{"label":"Connecting Vim With Golang","children":{}}}},"/playground/market-report":{"label":"Market Report","children":{"/playground/market-report/2024-october":{"label":"October 2024","children":{}},"/playground/market-report/2024-september":{"label":"September 2024","children":{}},"/playground/market-report/2024-august":{"label":"August 2024","children":{}},"/playground/market-report/2024-july":{"label":"July 2024","children":{}},"/playground/market-report/2024-may":{"label":"May 2024","children":{}},"/playground/market-report/2024-april":{"label":"April 2024","children":{}},"/playground/market-report/2024-march":{"label":"March 2024","children":{}},"/playground/market-report/2024-february":{"label":"February 2024","children":{}},"/playground/market-report/2024-january":{"label":"January 2024","children":{}},"/playground/market-report/2023-december":{"label":"December 2023","children":{}}}},"/playground/devbox":{"label":"Devbox","children":{"/playground/devbox/devbox":{"label":"Â§ Devbox","children":{}},"/playground/devbox/story":{"label":"Story","children":{"/playground/devbox/story/devbox-production-success-story":{"label":"Devbox in Production: Our Success Story","children":{}},"/playground/devbox/story/devbox-local-development-env":{"label":"Using Devbox to setup local development environment","children":{}},"/playground/devbox/story/devbox-nix-and-our-devbox-adoption":{"label":"The overview into Nix & how we use Devbox @ Dwarves","children":{}},"/playground/devbox/story/devbox-docker-adoption-and-challenges":{"label":"Our Docker adoption and its challenges","children":{}},"/playground/devbox/story/devbox-a-world-before-docker":{"label":"The world before Docker","children":{}}}},"/playground/devbox/guide":{"label":"Guide","children":{"/playground/devbox/guide/containerless":{"label":"Ditch the Containers: Go Containerless with Devbox","children":{}},"/playground/devbox/guide/devboxjson":{"label":"Devbox.json: Your Project's DNA","children":{}},"/playground/devbox/guide/run-your-own-shell":{"label":"Devbox Shell: Your Dev Environment, Your Rules","children":{}}}},"/playground/devbox/introduction":{"label":"Introduction","children":{"/playground/devbox/introduction/the-reason-for-being":{"label":"The reason for being","children":{}},"/playground/devbox/introduction/why-devbox-but-not-nix":{"label":"Devbox vs Nix: Why We Chose Simplicity","children":{}}}},"/playground/devbox/research":{"label":"Research","children":{"/playground/devbox/research/content-addressable-storage-in-docker":{"label":"Devbox vs Nix: Why We Chose Simplicity","children":{}},"/playground/devbox/research/fixed-output-derivation":{"label":"Fixed-output Derivation in Nix","children":{}},"/playground/devbox/research/nix-is-faster-than-docker-build":{"label":"Nix is Faster Than Docker Build","children":{}},"/playground/devbox/research/pinning-nixpkgs":{"label":"Pinning nixpkgs in Nix","children":{}},"/playground/devbox/research/shadow-copies":{"label":"Shadow Copies in Docker Builds","children":{}},"/playground/devbox/research/unstable-package-installation":{"label":"Unstable Package Installation in Docker","children":{}}}}}}}},"/careers":{"label":"Careers","children":{"/careers/archived":{"label":"Archived","children":{"/careers/archived/full-stack-engineer":{"label":"Full-Stack Engineer","children":{}},"/careers/archived/executive-assistant":{"label":"Executive Assistant","children":{}},"/careers/archived/technical-recruiter":{"label":"Technical Recruiter","children":{}},"/careers/archived/backend-engineer-go-elixir-rust":{"label":"Backend Engineer, Go/Elixir/Rust","children":{}},"/careers/archived/react-native-developer":{"label":"React Native Developer","children":{}},"/careers/archived/android-developer":{"label":"Mobile Engineer, Android","children":{}},"/careers/archived/community-executive":{"label":"Community Executive","children":{}},"/careers/archived/data-engineering":{"label":"Energy - Data Engineering","children":{}},"/careers/archived/devops":{"label":"DevOps Engineer - FinTech","children":{}},"/careers/archived/frontend-developer-junior":{"label":"Junior Frontend Developer","children":{}},"/careers/archived/frontend":{"label":"Frontend","children":{}},"/careers/archived/ios-developer":{"label":"iOS Developer - EnergyTech","children":{}},"/careers/archived/macos-developer":{"label":"Software Engineer, macOS","children":{}},"/careers/archived/product-designer-new-grad":{"label":"Product Designer, New Grad","children":{}},"/careers/archived/product-designer":{"label":"Product Designer","children":{}},"/careers/archived/qc-automation":{"label":"QC Engineer, Automation - Logistics","children":{}},"/careers/archived/qc-manual":{"label":"Fintech - QC Engineer, Manual","children":{}},"/careers/archived/reactjs-web-engineer":{"label":"Web Engineer, React.js","children":{}},"/careers/archived/visual-designer":{"label":"Visual Designer","children":{}},"/careers/archived/android":{"label":"Android","children":{}},"/careers/archived/golang":{"label":"Golang","children":{}},"/careers/archived/intern":{"label":"Intern","children":{}},"/careers/archived/ios":{"label":"iOS Developer","children":{}},"/careers/archived/qa":{"label":"QA Engineer","children":{}}}},"/careers/open-positions":{"label":"Open Positions","children":{"/careers/open-positions/business-development-manager":{"label":"Business Development","children":{}},"/careers/open-positions/growth":{"label":"Growth","children":{}}}},"/careers/life":{"label":"Life","children":{"/careers/life/dat-nguyen":{"label":"Dat Nguyen","children":{}},"/careers/life/software-design-group":{"label":"Software Design Group","children":{}},"/careers/life/hieu-vu":{"label":"Hieu Vu","children":{}},"/careers/life/nam-nguyen":{"label":"Nam Nguyen","children":{}},"/careers/life/an-tran":{"label":"An Tran","children":{}},"/careers/life/tom-nguyen":{"label":"Tom Nguyen","children":{}},"/careers/life/anh-tran":{"label":"Anh Tran","children":{}},"/careers/life/thanh-pham":{"label":"Thanh Pham","children":{}}}},"/careers/additional-info":{"label":"Additional Info","children":{"/careers/additional-info/culture-handbook":{"label":"Culture Handbook","children":{}},"/careers/additional-info/how-we-hire":{"label":"How we hire","children":{}},"/careers/additional-info/how-we-work":{"label":"How we work","children":{}},"/careers/additional-info/making-a-career":{"label":"Making a career","children":{}},"/careers/additional-info/the-manifesto":{"label":"The Manifesto","children":{}},"/careers/additional-info/what-we-stand-for":{"label":"What we stand for","children":{}},"/careers/additional-info/what-we-value":{"label":"What we value","children":{}},"/careers/additional-info/where-we-work":{"label":"Where we work","children":{}},"/careers/additional-info/life-at-dwarves":{"label":"Life at Dwarves","children":{}},"/careers/additional-info/benefits-and-perks":{"label":"Benefits And Perks","children":{}}}},"/careers/hiring":{"label":"Hiring","children":{"/careers/hiring/readme":{"label":"Careers","children":{}}}},"/careers/apprentice":{"label":"Apprentice","children":{"/careers/apprentice/batch-of-2022":{"label":"Batch of 2022","children":{}},"/careers/apprentice/2022-meet-ngoc-thanh-pham":{"label":"Meet the Mentors: Ngoc Thanh Pham","children":{}},"/careers/apprentice/2022-meet-tuan-dao":{"label":"Meet the Mentors: Tuan Dao","children":{}},"/careers/apprentice/apprentice":{"label":"Apprentice Program","children":{}}}}}},"/playbook":{"label":"Playbook","children":{"/playbook/operations":{"label":"Operations","children":{"/playbook/operations/checklists":{"label":"Checklists","children":{"/playbook/operations/checklists/leave-and-request-checklist":{"label":"Leave Request","children":{}},"/playbook/operations/checklists/offboarding-checklist":{"label":"Offboarding","children":{}},"/playbook/operations/checklists/artifact-checklist":{"label":"Back up Artifact","children":{}},"/playbook/operations/checklists/project-archive":{"label":"Project Archive","children":{}},"/playbook/operations/checklists/project-case-study":{"label":"Project Case Study","children":{}},"/playbook/operations/checklists/project-communication":{"label":"Project Communication","children":{}},"/playbook/operations/checklists/project-handover":{"label":"Project Handover","children":{}},"/playbook/operations/checklists/project-initialization":{"label":"Project Initialization","children":{}},"/playbook/operations/checklists/assets-checklist":{"label":"Assets","children":{}},"/playbook/operations/checklists/billing-checklist":{"label":"Billing","children":{}},"/playbook/operations/checklists/candidate-checklist":{"label":"Candidate","children":{}},"/playbook/operations/checklists/consulting-contract-checklist":{"label":"Consulting Contract","children":{}},"/playbook/operations/checklists/hiring-checklist":{"label":"Hiring","children":{}},"/playbook/operations/checklists/onboarding-checklist":{"label":"Onboarding","children":{}},"/playbook/operations/checklists/unemployment-social-health-insurance":{"label":"Unemployment, Social, Health Insurance","children":{}},"/playbook/operations/checklists/vietnam-invoice-checklist":{"label":"Vietnam Invoice","children":{}}}},"/playbook/operations/project-schedule-delivery-guidelines":{"label":"Project Delivery Schedule and Guidelines","children":{}},"/playbook/operations/ogif":{"label":"OGIF - Oh God It's Friday","children":{}},"/playbook/operations/red-flags":{"label":"Red Flags","children":{}},"/playbook/operations/focus-on-software-delivery":{"label":"Focus On Software Delivery","children":{}},"/playbook/operations/are-you-helping":{"label":"Are You Helping","children":{}},"/playbook/operations/the-inner-circle":{"label":"The Inner Circle","children":{}},"/playbook/operations/mbti-type-intj":{"label":"MBTI Type INTJ","children":{}},"/playbook/operations/mbti-type-istp":{"label":"MBTI Type ISTP","children":{}},"/playbook/operations/mbti-type-estj":{"label":"MBTI Type ESTJ","children":{}},"/playbook/operations/mbti-type-istj":{"label":"MBTI Type ISTJ","children":{}},"/playbook/operations/applying-myersbriggs-type-indicator-in-hr":{"label":"Applying Myersbriggs Type Indicator In Hiring","children":{}},"/playbook/operations/the-four-preferences":{"label":"The Four Preferences","children":{}},"/playbook/operations/making-decision-as-a-team-member":{"label":"Making Decision As A Team Member","children":{}},"/playbook/operations/adjust-the-way-we-work-in-basecamp-style":{"label":"Adjust The Way We Work In Basecamp Style","children":{}},"/playbook/operations/beyond-the-title":{"label":"Beyond The Title","children":{}},"/playbook/operations/go-the-extra-mile":{"label":"Go The Extra Mile","children":{}},"/playbook/operations/the-dwarves-runs-by-ideas":{"label":"The Dwarves Runs By Ideas","children":{}},"/playbook/operations/a-tips-of-hiring-dont":{"label":"A Tips Of Hiring - Do & Don't","children":{}},"/playbook/operations/the-dwarves-culture-handbook":{"label":"The Dwarves Culture Handbook","children":{}},"/playbook/operations/delegation-and-believe-it-will-work":{"label":"Delegation And Believe It Will Work","children":{}},"/playbook/operations/constructive-feedback":{"label":"Constructive Feedback","children":{}},"/playbook/operations/transparency":{"label":"Transparency","children":{}},"/playbook/operations/bric-a-brac":{"label":"Bric A Brac","children":{}},"/playbook/operations/account":{"label":"Account","children":{}},"/playbook/operations/avoid-burn-out":{"label":"Avoid Burn Out","children":{}},"/playbook/operations/writing-management-objectives-in-smart":{"label":"Writing Management Objectives In Smart","children":{}},"/playbook/operations/building-a-solid-high-performing-team":{"label":"Building A Solid High Performing Team","children":{}},"/playbook/operations/hiring-for-operations-team":{"label":"Hiring For Operations Team","children":{}},"/playbook/operations/annual-bonus-for-sales":{"label":"Annual bonus for sales","children":{}},"/playbook/operations/bunk-license-check":{"label":"Bunk license check","children":{}},"/playbook/operations/collaboration-guidelines":{"label":"Collaboration Guidelines","children":{}},"/playbook/operations/compliance-check-process":{"label":"Compliance Check Process","children":{}},"/playbook/operations/email-template":{"label":"Email Template","children":{"/playbook/operations/email-template/assignment-invitation-2":{"label":"Assignment Inviation (Skip pre-assessment)","children":{}},"/playbook/operations/email-template/assignment-invitation":{"label":"Assignment Inviation","children":{}},"/playbook/operations/email-template/confirm-resume-date":{"label":"Confirm Employee's Resume Date Day","children":{}},"/playbook/operations/email-template/farewell":{"label":"Farewell Letter","children":{}},"/playbook/operations/email-template/follow-up-onboarding-items":{"label":"Follow-up Onboarding Items","children":{}},"/playbook/operations/email-template/hung-king-commemoration-day":{"label":"Hung King Commemoration Day","children":{}},"/playbook/operations/email-template/information-about-resource-change":{"label":"Inform about resource change","children":{}},"/playbook/operations/email-template/international-labour-day":{"label":"International Labour Day","children":{}},"/playbook/operations/email-template/interview-invitation":{"label":"Interview Invitation","children":{}},"/playbook/operations/email-template/milestone-sign-off":{"label":"Milestone sign-off","children":{}},"/playbook/operations/email-template/national-day":{"label":"National Day","children":{}},"/playbook/operations/email-template/new-year-day":{"label":"New Year Day","children":{}},"/playbook/operations/email-template/offer-letter":{"label":"Offer Letter","children":{}},"/playbook/operations/email-template/referral-bonus-confirmation-note":{"label":"Referral Bonus Confirmation Note","children":{}},"/playbook/operations/email-template/rejection-email":{"label":"Rejection","children":{}},"/playbook/operations/email-template/salary-increment":{"label":"Salary Increment Announcement","children":{}},"/playbook/operations/email-template/tet-holiday":{"label":"Tet Holiday","children":{}},"/playbook/operations/email-template/thank-you-letter":{"label":"Thank you letter","children":{}},"/playbook/operations/email-template/welcome-onboard":{"label":"Welcome Onboard","children":{}},"/playbook/operations/email-template/welcome-to-dwarves-update":{"label":"Welcome to Dwarves Updates","children":{}}}},"/playbook/operations/naming-convention":{"label":"Naming convention","children":{}},"/playbook/operations/delegate-work-not-responsibility":{"label":"Delegate Work Not Responsibility","children":{}},"/playbook/operations/types-of-employees":{"label":"Types Of Employees","children":{}},"/playbook/operations/hiring-approach":{"label":"Hiring Approach","children":{}},"/playbook/operations/the-okr":{"label":"The OKR","children":{}},"/playbook/operations/our-metrics-for-performance-review":{"label":"Our Metrics For Performance Review","children":{}},"/playbook/operations/make-remote-working-works":{"label":"Make Remote Working Works","children":{}},"/playbook/operations/blocking-distraction":{"label":"Blocking Distraction","children":{}},"/playbook/operations/effective-meeting":{"label":"Effective Meeting","children":{}},"/playbook/operations/our-policy-for-remote-working":{"label":"Our Policy For Remote Working","children":{}}}},"/playbook/business":{"label":"Business","children":{"/playbook/business/pricing-model-bill-by-hours":{"label":"Pricing model: Bill by hours","children":{}},"/playbook/business/invoice":{"label":"Invoice","children":{}},"/playbook/business/nda":{"label":"NDA","children":{}},"/playbook/business/collaboration-guideline":{"label":"Collaboration Guideline","children":{}},"/playbook/business/df-workflow":{"label":"Dwarves Workflow","children":{}},"/playbook/business/fbsc":{"label":"FBSC","children":{}},"/playbook/business/how-to-work-with-clients":{"label":"How to work with clients","children":{}},"/playbook/business/service-feedbacks":{"label":"Service Feedbacks","children":{}},"/playbook/business/setting-the-budget":{"label":"Setting The Budget","children":{}},"/playbook/business/fixed-budget-scope-controlled":{"label":"Fixed Budget Scope Controlled","children":{}},"/playbook/business/the-adjacent-possible":{"label":"The Adjacent Possible","children":{}}}},"/playbook/engineering":{"label":"Engineering","children":{"/playbook/engineering/estimation-guidelines":{"label":"Estimation Guidelines","children":{}},"/playbook/engineering/presentation":{"label":"monitoring","children":{}},"/playbook/engineering/repo-icon":{"label":"release","children":{}}}},"/playbook/design":{"label":"Design","children":{"/playbook/design/design-system":{"label":"lean-canvas","children":{}},"/playbook/design/ia":{"label":"nda","children":{}},"/playbook/design/ix":{"label":"IA","children":{}},"/playbook/design/aarrr":{"label":"aarrr","children":{}},"/playbook/design/design-sprint":{"label":"Design Sprint","children":{}},"/playbook/design/lean-canvas":{"label":"Lean Canvas","children":{}},"/playbook/design/prototype":{"label":"Low-fidelity prototype: UI Design","children":{}},"/playbook/design/ui":{"label":"UI","children":{}},"/playbook/design/ux":{"label":"UX","children":{}},"/playbook/design/wireframe":{"label":"wireframe","children":{}}}}}},"/earn":{"label":"Earn","children":{"/earn/readme":{"label":"Open Bounties","children":{}}}},"/updates":{"label":"Updates","children":{"/updates/changelog":{"label":"Changelog","children":{"/updates/changelog/2025-whats-new-march":{"label":"What's New in March 2025","children":{}},"/updates/changelog/2025-whats-new-february":{"label":"What's New in February 2025","children":{}},"/updates/changelog/2024-in-review":{"label":"2024 In Review","children":{}},"/updates/changelog/2024-whats-new-december":{"label":"What's New in December 2024","children":{}},"/updates/changelog/2024-summit-building-bonds-our-way":{"label":"Summit 2024: Building bonds our way","children":{}},"/updates/changelog/2024-whats-new-november":{"label":"What's New in November 2024","children":{}},"/updates/changelog/2024-whats-new-oct":{"label":"What's New in October 2024","children":{}},"/updates/changelog/2024-whats-new-september":{"label":"What's New in September 2024","children":{}},"/updates/changelog/2024-navigating-changes":{"label":"Navigating changes","children":{}},"/updates/changelog/2024-whats-new-august":{"label":"What's New in August 2024","children":{}},"/updates/changelog/2024-whats-new-july":{"label":"What's New in July 2024","children":{}},"/updates/changelog/2024-semi-annual-review":{"label":"State of Dwarves: 2024 Semi-annual Review","children":{}},"/updates/changelog/2024-whats-new-june":{"label":"What's New in June 2024","children":{}},"/updates/changelog/2024-whats-new-may":{"label":"What's New in May 2024","children":{}},"/updates/changelog/2024-community-meet-up":{"label":"Dwarvesâ€™ 2nd community offline meet-up","children":{}},"/updates/changelog/2024-whats-new-april":{"label":"What's New in April 2024","children":{}},"/updates/changelog/2024-whats-new-march":{"label":"What's New in March 2024","children":{}},"/updates/changelog/2024-whats-new-february":{"label":"What's New in February 2024","children":{}},"/updates/changelog/2024-whats-new-january":{"label":"What's New in January 2024","children":{}},"/updates/changelog/2023-whats-new-december":{"label":"What's New in December 2023","children":{}},"/updates/changelog/readme":{"label":"Changelog","children":{}},"/updates/changelog/2023-whats-new-november":{"label":"What's New in November 2023","children":{}},"/updates/changelog/2023-whats-new-october":{"label":"What's New in October 2023","children":{}},"/updates/changelog/2023-happy":{"label":"Happy 2023","children":{}},"/updates/changelog/2022-dwarves-of-the-year":{"label":"Dwarves Of The Year 2022","children":{}},"/updates/changelog/2022-in-review":{"label":"2022 In Review","children":{}},"/updates/changelog/2022-summit-engineering-a-good-time":{"label":"Summit 2022: Engineering A Good Time","children":{}},"/updates/changelog/road-to-100":{"label":"Road To 100","children":{}},"/updates/changelog/2022-whats-new-may":{"label":"What's New in May 2022","children":{}},"/updates/changelog/2022-whats-new-january":{"label":"What's New in January 2022","children":{}},"/updates/changelog/2021-whats-new-december":{"label":"What's New in December 2021","children":{}},"/updates/changelog/2021-dwarves-of-the-year":{"label":"Dwarves Of The Year 2021","children":{}},"/updates/changelog/2021-whats-new-july":{"label":"What's New in July 2021","children":{}},"/updates/changelog/2020-in-review":{"label":"2020 In Review","children":{}},"/updates/changelog/2021-in-review":{"label":"2021 In Review","children":{}},"/updates/changelog/2019-in-review":{"label":"2019 In Review","children":{}},"/updates/changelog/2018-in-review":{"label":"2018 In Review","children":{}}}},"/updates/ogif":{"label":"OGIF","children":{"/updates/ogif/41-20250314":{"label":"#41 ICY-BTC, GitHub Bot, MCP-DB, Pocket Turing","children":{}},"/updates/ogif/28-20241018":{"label":"#28 Go sync.Map, AI UX, Yelp AI, LLM Patterns, Git Analysis","children":{}},"/updates/ogif/27-20241011":{"label":"#27 Go weekly, Frontend, AI UX, Finite Automata","children":{}},"/updates/ogif/26-20241004":{"label":"#26 Design insights, Go tools, Trading app, Chatbots, Essays","children":{}},"/updates/ogif/25-20240927":{"label":"#25 Team updates, Hybrid work, AI insights, Go weekly","children":{}},"/updates/ogif/24-20240920":{"label":"#24 Go weekly, AI workflows, Team AI demo, Figma-UI with Claude","children":{}},"/updates/ogif/23-20240913":{"label":"#23 Go weekly, FE report, Hybrid work, AI agents","children":{}},"/updates/ogif/22-20240906":{"label":"#22 Hybrid work, Tech report, Go weekly, AI demo","children":{}},"/updates/ogif/21-20240830":{"label":"#21 Community engagement, Go weekly, Journey of thought for prompt engineering","children":{}},"/updates/ogif/20-20240823":{"label":"#20 Go weekly, Dynamic objects, Devbox, LLM tracing, Cursor AI","children":{}},"/updates/ogif/19-20240821":{"label":"#19 Go weekly, UI design, File sharing, Dify AI","children":{}},"/updates/ogif/18-20240809":{"label":"#18 Go weekly, RAG, UI, FE updates","children":{}},"/updates/ogif/17-20240802":{"label":"#17 Community Call July, C4 Model, Interview Life in the US","children":{}},"/updates/ogif/16-20240726":{"label":"#16 Go weekly, Dune query, AI voice clone, RAG re-ranking","children":{}},"/updates/ogif/15-20240719":{"label":"#15 AI Supervisors, Local-first Software, Code Completion, Bot Commands","children":{}},"/updates/ogif/14-20240712":{"label":"#14 Generic Collections, Pricing Models, and OGIF Summarizer","children":{}},"/updates/ogif/13-20240705":{"label":"#13 Go Weekly updates, Radix Sort, Human Feedback Mechanism, and effective ChatGPT usage","children":{}},"/updates/ogif/12-20240628":{"label":"#12 June updates, Go Performance, eBPF, PGO, Multimodal RAG","children":{}},"/updates/ogif/11-20240621":{"label":"#11 Design patterns: template method & visitor, Radix sort, and weekly tech commentary","children":{}},"/updates/ogif/10-20240614":{"label":"#10 Behavioral Patterns and Map Content Organization","children":{}},"/updates/ogif/9-20240607":{"label":"#9 What's next for June and Behavior Design Patterns","children":{}},"/updates/ogif/7-20240517":{"label":"#7 Echelon EXPO, Programming patterns, and Moonlighting","children":{}},"/updates/ogif/6-20240510":{"label":"#6 Factory Pattern, Erlang State Machines, and Trading Process","children":{}},"/updates/ogif/5-20240503":{"label":"#5 Singapore Market Report, C4 Modelling, Memo's Nested Sidebar","children":{}},"/updates/ogif/4-20240426":{"label":"#4 DCA, Devbox","children":{}},"/updates/ogif/3-20240419":{"label":"#3 Generative AI, Tokenomics, and Finance Talks","children":{}},"/updates/ogif/2-20240412":{"label":"#2 Devbox as the new Docker, Security Standards, and Understanding Liquidity","children":{}},"/updates/ogif/1-20240405":{"label":"#1 Markdown Presentations, Research Pipeline, Screenshots How-to","children":{}},"/updates/ogif/readme":{"label":"OGIF - Oh God It's Friday","children":{}}}},"/updates/forward-engineering":{"label":"Forward Engineering","children":{"/updates/forward-engineering/2024-2025":{"label":20242025,"children":{}},"/updates/forward-engineering/2024-quarter-3":{"label":"Quarter 3 2024","children":{}},"/updates/forward-engineering/2023-november":{"label":"November 2023","children":{}},"/updates/forward-engineering/2023-october":{"label":"October 2023","children":{}},"/updates/forward-engineering/2023-august":{"label":"August 2023","children":{}},"/updates/forward-engineering/2023-june":{"label":"June 2023","children":{}},"/updates/forward-engineering/2023-may":{"label":"May 2023","children":{}},"/updates/forward-engineering/2023-march":{"label":"March 2023","children":{}},"/updates/forward-engineering/2023-december":{"label":"December 2023","children":{}},"/updates/forward-engineering/2022":{"label":2022,"children":{}},"/updates/forward-engineering/tech-radar-volume-03":{"label":"Tech Radar Volume 03","children":{}},"/updates/forward-engineering/tech-radar-volume-02":{"label":"Tech Radar Volume 02","children":{}},"/updates/forward-engineering/tech-radar-volume-01":{"label":"Tech Radar Volume 01","children":{}},"/updates/forward-engineering/tech-radar-the-introduction":{"label":"Tech Radar Introduction","children":{}}}},"/updates/digest":{"label":"Digest","children":{"/updates/digest/15-new-year-gathering":{"label":"#15 New year gathering","children":{}},"/updates/digest/14-back-to-the-office":{"label":"#14 Hybrid work harmony","children":{}},"/updates/digest/13-more-than-lines-of-code":{"label":"#13 More than lines of code","children":{}},"/updates/digest/12-summer-moments":{"label":"#12 Summer moments","children":{}},"/updates/digest/11-come-grow-with-us":{"label":"#11 Come grow with us","children":{}},"/updates/digest/10-from-lean-to-learner":{"label":"#10 From lean to learner","children":{}},"/updates/digest/9-a-little-more-speed-for-summer":{"label":"#9 A little more speed for summer","children":{}},"/updates/digest/8-then-came-the-last-days-of-may":{"label":"#8 Then came the last days of May","children":{}},"/updates/digest/7-a-journey-through-time":{"label":"#7 A journey through time","children":{}},"/updates/digest/6-stay-for-the-culture":{"label":"#6 Come for the conversation, stay for the culture","children":{}},"/updates/digest/5-delay-the-gratification":{"label":"#5 Endure the hardship, delay the gratification","children":{}},"/updates/digest/4-finding-your-authentic-tribe":{"label":"#4 Finding your authentic tribe","children":{}},"/updates/digest/3-we-all-start-somewhere":{"label":"#3 We all start somewhere","children":{}},"/updates/digest/2-walk-around-learn-around":{"label":"#2 Walk around learn around","children":{}},"/updates/digest/1-what-do-you-stand-for":{"label":"#1 What do you stand for?","children":{}},"/updates/digest/readme":{"label":"Digest","children":{}}}},"/updates/newsletter":{"label":"Newsletter","children":{"/updates/newsletter/knowledge-base":{"label":"Build your knowledge base","children":{}},"/updates/newsletter/dwarve-updates-ai-llm":{"label":"The Stage of AI and LLM at Dwarves","children":{}},"/updates/newsletter/readme":{"label":"_base","children":{}},"/updates/newsletter/growth-stages":{"label":"The Stage of Growth at Dwarves","children":{}},"/updates/newsletter/the-next-leading-chairs":{"label":"The Next Leading Chairs","children":{}},"/updates/newsletter/blockchain-and-data":{"label":"The future is blockchain and data","children":{}},"/updates/newsletter/hiring-stages":{"label":"The stages of hiring at Dwarves","children":{}},"/updates/newsletter/2021-in-review":{"label":"It's a wrap: 2021 in Review","children":{}},"/updates/newsletter/engineering-org-structure":{"label":"Engineering Organizational Structure","children":{}},"/updates/newsletter/path-to-growth":{"label":"The Path To Growth at Dwarves","children":{}},"/updates/newsletter/engineer-performance-review":{"label":"Engineer Performance Review","children":{}},"/updates/newsletter/project-compliance":{"label":"Project Compliance","children":{}},"/updates/newsletter/dalat-office":{"label":"Da Lat Office","children":{}},"/updates/newsletter/dwarves-updates":{"label":"Dwarves Updates","children":{}}}},"/updates/culture-test":{"label":"Culture Test","children":{}},"/updates/fund":{"label":"Fund","children":{"/updates/fund/dwarves-ventures-fund-1":{"label":"Dwarves Ventures Fund 1","children":{}},"/updates/fund/dwarves-ventures-fund-0":{"label":"Dwarves Ventures Fund 0","children":{}}}}}}}},"/tags":{"label":"Popular Tags","children":{"/tags/ai":{"label":"#ai","children":{},"count":58},"/tags/hiring":{"label":"#hiring","children":{},"count":61},"/tags/case-study":{"label":"#case-study","children":{},"count":29},"/tags/handbook":{"label":"#handbook","children":{},"count":43},"/tags/business":{"label":"#business","children":{},"count":10},"/tags/growth":{"label":"#growth","children":{},"count":2},"/tags/consulting":{"label":"#consulting","children":{},"count":24},"/tags/market-report":{"label":"#market-report","children":{},"count":34},"/tags/tech-report":{"label":"#tech-report","children":{},"count":15},"/tags/software-development":{"label":"#software-development","children":{},"count":1},"/tags/database-management":{"label":"#database-management","children":{},"count":1},"/tags/icy":{"label":"#icy","children":{},"count":10},"/tags/career":{"label":"#career","children":{},"count":44},"/tags/full-stack":{"label":"#full-stack","children":{},"count":1},"/tags/engineer":{"label":"#engineer","children":{},"count":3},"/tags/ux-ui":{"label":"#ux-ui","children":{},"count":13},"/tags/product-design":{"label":"#product-design","children":{},"count":7},"/tags/report":{"label":"#report","children":{},"count":8},"/tags/checklist":{"label":"#checklist","children":{},"count":17},"/tags/presentation":{"label":"#presentation","children":{},"count":1},"/tags/business-development":{"label":"#business-development","children":{},"count":1},"/tags/database":{"label":"#database","children":{},"count":8},"/tags/sql":{"label":"#sql","children":{},"count":4},"/tags/data-modeling":{"label":"#data-modeling","children":{},"count":1},"/tags/data-engineering":{"label":"#data-engineering","children":{},"count":4},"/tags/system-design":{"label":"#system-design","children":{},"count":2},"/tags/architecture":{"label":"#architecture","children":{},"count":4},"/tags/etl":{"label":"#etl","children":{},"count":3},"/tags/automata":{"label":"#automata","children":{},"count":1},"/tags/fintech":{"label":"#fintech","children":{},"count":16},"/tags/mobile":{"label":"#mobile","children":{},"count":1},"/tags/wala":{"label":"#wala","children":{},"count":3},"/tags/fnb":{"label":"#fnb","children":{},"count":2},"/tags/film":{"label":"#film","children":{},"count":1},"/tags/go":{"label":"#go","children":{},"count":5},"/tags/error":{"label":"#error","children":{},"count":1},"/tags/startup":{"label":"#startup","children":{},"count":9},"/tags/shares":{"label":"#shares","children":{},"count":1},"/tags/founder":{"label":"#founder","children":{},"count":1},"/tags/entertainment":{"label":"#entertainment","children":{},"count":1},"/tags/life-at-dwarves":{"label":"#life-at-dwarves","children":{},"count":8},"/tags/hybrid-working":{"label":"#hybrid-working","children":{},"count":3},"/tags/guide":{"label":"#guide","children":{},"count":10},"/tags/security":{"label":"#security","children":{},"count":10},"/tags/reward":{"label":"#reward","children":{},"count":3},"/tags/team":{"label":"#team","children":{},"count":47},"/tags/community":{"label":"#community","children":{},"count":40},"/tags/design":{"label":"#design","children":{},"count":31},"/tags/ux":{"label":"#ux","children":{},"count":2},"/tags/directory-structure":{"label":"#directory-structure","children":{},"count":2},"/tags/file-management":{"label":"#file-management","children":{},"count":2},"/tags/file-system":{"label":"#file-system","children":{},"count":2},"/tags/permissions":{"label":"#permissions","children":{},"count":1},"/tags/database-modelling":{"label":"#database-modelling","children":{},"count":1},"/tags/people":{"label":"#people","children":{},"count":25},"/tags/operations":{"label":"#operations","children":{},"count":75},"/tags/llm":{"label":"#llm","children":{},"count":76},"/tags/rag":{"label":"#rag","children":{},"count":5},"/tags/search":{"label":"#search","children":{},"count":1},"/tags/evaluation":{"label":"#evaluation","children":{},"count":3},"/tags/project":{"label":"#project","children":{},"count":16},"/tags/billbyhours":{"label":"#billbyhours","children":{},"count":1},"/tags/careers":{"label":"#careers","children":{},"count":2},"/tags/engineering":{"label":"#engineering","children":{},"count":64},"/tags/delivery":{"label":"#delivery","children":{},"count":2},"/tags/subscription":{"label":"#subscription","children":{},"count":1},"/tags/pricing":{"label":"#pricing","children":{},"count":1},"/tags/product":{"label":"#product","children":{},"count":1},"/tags/blockchain":{"label":"#blockchain","children":{},"count":50},"/tags/evm":{"label":"#evm","children":{},"count":5},"/tags/foundry":{"label":"#foundry","children":{},"count":2},"/tags/search-engine":{"label":"#search-engine","children":{},"count":1},"/tags/duckdb":{"label":"#duckdb","children":{},"count":3},"/tags/transformers.js":{"label":"#transformers.js","children":{},"count":1},"/tags/hybrid-search":{"label":"#hybrid-search","children":{},"count":1},"/tags/erlang":{"label":"#erlang","children":{},"count":1},"/tags/elixir":{"label":"#elixir","children":{},"count":5},"/tags/fsm":{"label":"#fsm","children":{},"count":1},"/tags/design-pattern":{"label":"#design-pattern","children":{},"count":9},"/tags/gang-of-four":{"label":"#gang-of-four","children":{},"count":9},"/tags/observer-pattern":{"label":"#observer-pattern","children":{},"count":1},"/tags/behavior-pattern":{"label":"#behavior-pattern","children":{},"count":2},"/tags/visitor-design-pattern":{"label":"#visitor-design-pattern","children":{},"count":1},"/tags/strategy-design-pattern":{"label":"#strategy-design-pattern","children":{},"count":1},"/tags/ogif":{"label":"#ogif","children":{},"count":29},"/tags/guidelines":{"label":"#guidelines","children":{},"count":3},"/tags/feedback":{"label":"#feedback","children":{},"count":2},"/tags/mechanism":{"label":"#mechanism","children":{},"count":1},"/tags/local-first":{"label":"#local-first","children":{},"count":1},"/tags/crdt":{"label":"#crdt","children":{},"count":2},"/tags/data-synchronization":{"label":"#data-synchronization","children":{},"count":1},"/tags/data-ownership":{"label":"#data-ownership","children":{},"count":1},"/tags/real-time-collaboration":{"label":"#real-time-collaboration","children":{},"count":1},"/tags/rust":{"label":"#rust","children":{},"count":10},"/tags/trait":{"label":"#trait","children":{},"count":1},"/tags/error-handling":{"label":"#error-handling","children":{},"count":1},"/tags/data-structure":{"label":"#data-structure","children":{},"count":1},"/tags/bloom-filter":{"label":"#bloom-filter","children":{},"count":1},"/tags/big-o":{"label":"#big-o","children":{},"count":1},"/tags/behavioral-pattern":{"label":"#behavioral-pattern","children":{},"count":1},"/tags/golang":{"label":"#golang","children":{},"count":44},"/tags/behavior-patterns":{"label":"#behavior-patterns","children":{},"count":2},"/tags/algorithms":{"label":"#algorithms","children":{},"count":1},"/tags/sorting":{"label":"#sorting","children":{},"count":1},"/tags/network":{"label":"#network","children":{},"count":2},"/tags/machine-learning":{"label":"#machine-learning","children":{},"count":2},"/tags/zettelkasten":{"label":"#zettelkasten","children":{},"count":1},"/tags/prompt":{"label":"#prompt","children":{},"count":1},"/tags/chatgpt":{"label":"#chatgpt","children":{},"count":1},"/tags/solana":{"label":"#solana","children":{},"count":7},"/tags/amm":{"label":"#amm","children":{},"count":1},"/tags/memo":{"label":"#memo","children":{},"count":14},"/tags/instructions":{"label":"#instructions","children":{},"count":10},"/tags/guideline":{"label":"#guideline","children":{},"count":15},"/tags/ops":{"label":"#ops","children":{},"count":2},"/tags/nft":{"label":"#nft","children":{},"count":3},"/tags/workflow":{"label":"#workflow","children":{},"count":4},"/tags/recording":{"label":"#recording","children":{},"count":1},"/tags/history":{"label":"#history","children":{},"count":1},"/tags/creational-design-pattern":{"label":"#creational-design-pattern","children":{},"count":1},"/tags/moc":{"label":"#moc","children":{},"count":3},"/tags/software-design":{"label":"#software-design","children":{},"count":2},"/tags/software-architecture":{"label":"#software-architecture","children":{},"count":3},"/tags/graphical-notation":{"label":"#graphical-notation","children":{},"count":2},"/tags/energy":{"label":"#energy","children":{},"count":1},"/tags/techecosystem":{"label":"#techecosystem","children":{},"count":1},"/tags/summit":{"label":"#summit","children":{},"count":4},"/tags/crypto":{"label":"#crypto","children":{},"count":1},"/tags/content":{"label":"#content","children":{},"count":6},"/tags/investment":{"label":"#investment","children":{},"count":1},"/tags/personal-finance":{"label":"#personal-finance","children":{},"count":1},"/tags/dfg":{"label":"#dfg","children":{},"count":2},"/tags/tutorial":{"label":"#tutorial","children":{},"count":5},"/tags/standardization":{"label":"#standardization","children":{},"count":1},"/tags/work-adoption":{"label":"#work-adoption","children":{},"count":1},"/tags/research":{"label":"#research","children":{},"count":3},"/tags/field-notes":{"label":"#field-notes","children":{},"count":1},"/tags/innovation":{"label":"#innovation","children":{},"count":2},"/tags/radar":{"label":"#radar","children":{},"count":10},"/tags/bounty":{"label":"#bounty","children":{},"count":4},"/tags/communications":{"label":"#communications","children":{},"count":3},"/tags/token":{"label":"#token","children":{},"count":2},"/tags/brain":{"label":"#brain","children":{},"count":1},"/tags/knowledge-base":{"label":"#knowledge-base","children":{},"count":1},"/tags/engineering/data":{"label":"#engineering/data","children":{},"count":5},"/tags/data-pipeline":{"label":"#data-pipeline","children":{},"count":1},"/tags/vector-database":{"label":"#vector-database","children":{},"count":4},"/tags/partners":{"label":"#partners","children":{},"count":1},"/tags/brainery":{"label":"#brainery","children":{},"count":2},"/tags/devops":{"label":"#devops","children":{},"count":5},"/tags/google-cloud":{"label":"#google-cloud","children":{},"count":1},"/tags/google-data-studio":{"label":"#google-data-studio","children":{},"count":1},"/tags/google-data-fusion":{"label":"#google-data-fusion","children":{},"count":1},"/tags/reliability":{"label":"#reliability","children":{},"count":2},"/tags/cdap":{"label":"#cdap","children":{},"count":1},"/tags/data":{"label":"#data","children":{},"count":14},"/tags/google-dataproc":{"label":"#google-dataproc","children":{},"count":1},"/tags/hadoop":{"label":"#hadoop","children":{},"count":2},"/tags/streaming":{"label":"#streaming","children":{},"count":1},"/tags/earn":{"label":"#earn","children":{},"count":2},"/tags/ecommerce":{"label":"#ecommerce","children":{},"count":2},"/tags/dropshipping":{"label":"#dropshipping","children":{},"count":1},"/tags/dwarves":{"label":"#dwarves","children":{},"count":23},"/tags/work":{"label":"#work","children":{},"count":18},"/tags/internal":{"label":"#internal","children":{},"count":10},"/tags/discussion":{"label":"#discussion","children":{},"count":6},"/tags/event":{"label":"#event","children":{},"count":7},"/tags/labs":{"label":"#labs","children":{},"count":28},"/tags/catchup":{"label":"#catchup","children":{},"count":5},"/tags/policies":{"label":"#policies","children":{},"count":1},"/tags/home":{"label":"#home","children":{},"count":2},"/tags/tauri":{"label":"#tauri","children":{},"count":1},"/tags/htmx":{"label":"#htmx","children":{},"count":2},"/tags/frontend":{"label":"#frontend","children":{},"count":68},"/tags/performance":{"label":"#performance","children":{},"count":37},"/tags/culture":{"label":"#culture","children":{},"count":10},"/tags/emplpoyee":{"label":"#emplpoyee","children":{},"count":1},"/tags/estimation":{"label":"#estimation","children":{},"count":1},"/tags/code-generation":{"label":"#code-generation","children":{},"count":1},"/tags/typesafe":{"label":"#typesafe","children":{},"count":1},"/tags/fullstack":{"label":"#fullstack","children":{},"count":2},"/tags/lifeatdwarves":{"label":"#lifeatdwarves","children":{},"count":1},"/tags/craftsmanship":{"label":"#craftsmanship","children":{},"count":1},"/tags/workshop":{"label":"#workshop","children":{},"count":1},"/tags/demo":{"label":"#demo","children":{},"count":1},"/tags/performance-review":{"label":"#performance-review","children":{},"count":2},"/tags/assessment":{"label":"#assessment","children":{},"count":1},"/tags/knowledge":{"label":"#knowledge","children":{},"count":2},"/tags/tech-radar":{"label":"#tech-radar","children":{},"count":1},"/tags/evaluating-tech":{"label":"#evaluating-tech","children":{},"count":1},"/tags/process":{"label":"#process","children":{},"count":9},"/tags/updates":{"label":"#updates","children":{},"count":41},"/tags/distributed-system":{"label":"#distributed-system","children":{},"count":1},"/tags/data-types":{"label":"#data-types","children":{},"count":1},"/tags/data-structures":{"label":"#data-structures","children":{},"count":2},"/tags/client":{"label":"#client","children":{},"count":6},"/tags/guidline":{"label":"#guidline","children":{},"count":1},"/tags/playbook":{"label":"#playbook","children":{},"count":3},"/tags/software":{"label":"#software","children":{},"count":11},"/tags/framework":{"label":"#framework","children":{},"count":6},"/tags/productivity":{"label":"#productivity","children":{},"count":7},"/tags/learning":{"label":"#learning","children":{},"count":4},"/tags/system design":{"label":"#system design","children":{},"count":1},"/tags/enterprise":{"label":"#enterprise","children":{},"count":10},"/tags/australia":{"label":"#australia","children":{},"count":1},"/tags/sargable-queries":{"label":"#sargable-queries","children":{},"count":1},"/tags/zookeeper":{"label":"#zookeeper","children":{},"count":1},"/tags/kafka":{"label":"#kafka","children":{},"count":1},"/tags/sequential-reads":{"label":"#sequential-reads","children":{},"count":1},"/tags/sequential-writes":{"label":"#sequential-writes","children":{},"count":1},"/tags/random-reads":{"label":"#random-reads","children":{},"count":1},"/tags/random-writes":{"label":"#random-writes","children":{},"count":1},"/tags/url-redirect":{"label":"#url-redirect","children":{},"count":1},"/tags/url-rewrite":{"label":"#url-rewrite","children":{},"count":1},"/tags/http":{"label":"#http","children":{},"count":1},"/tags/seo":{"label":"#seo","children":{},"count":1},"/tags/dx":{"label":"#dx","children":{},"count":1},"/tags/machine learning":{"label":"#machine learning","children":{},"count":1},"/tags/r&d":{"label":"#r&d","children":{},"count":1},"/tags/web":{"label":"#web","children":{},"count":9},"/tags/micro-frontend":{"label":"#micro-frontend","children":{},"count":3},"/tags/backend":{"label":"#backend","children":{},"count":4},"/tags/tool":{"label":"#tool","children":{},"count":3},"/tags/technique":{"label":"#technique","children":{},"count":9},"/tags/vietnam":{"label":"#vietnam","children":{},"count":1},"/tags/write-heavy":{"label":"#write-heavy","children":{},"count":1},"/tags/inventory-platform":{"label":"#inventory-platform","children":{},"count":1},"/tags/scalability":{"label":"#scalability","children":{},"count":1},"/tags/doordash":{"label":"#doordash","children":{},"count":1},"/tags/low-latency":{"label":"#low-latency","children":{},"count":1},"/tags/observability":{"label":"#observability","children":{},"count":5},"/tags/teamwork":{"label":"#teamwork","children":{},"count":2},"/tags/leadership":{"label":"#leadership","children":{},"count":4},"/tags/multi-column-index":{"label":"#multi-column-index","children":{},"count":1},"/tags/index":{"label":"#index","children":{},"count":1},"/tags/composite-index":{"label":"#composite-index","children":{},"count":1},"/tags/react":{"label":"#react","children":{},"count":15},"/tags/hooks":{"label":"#hooks","children":{},"count":2},"/tags/components":{"label":"#components","children":{},"count":1},"/tags/scrum":{"label":"#scrum","children":{},"count":2},"/tags/technicaldebt":{"label":"#technicaldebt","children":{},"count":1},"/tags/projectmanagement":{"label":"#projectmanagement","children":{},"count":1},"/tags/email":{"label":"#email","children":{},"count":22},"/tags/decoder":{"label":"#decoder","children":{},"count":1},"/tags/json":{"label":"#json","children":{},"count":1},"/tags/materialized-view":{"label":"#materialized-view","children":{},"count":1},"/tags/data-warehouse":{"label":"#data-warehouse","children":{},"count":1},"/tags/mapreduce":{"label":"#mapreduce","children":{},"count":1},"/tags/distributed":{"label":"#distributed","children":{},"count":3},"/tags/form":{"label":"#form","children":{},"count":1},"/tags/uilibraries":{"label":"#uilibraries","children":{},"count":1},"/tags/migrations":{"label":"#migrations","children":{},"count":1},"/tags/agile":{"label":"#agile","children":{},"count":6},"/tags/behavior-driven-development":{"label":"#behavior-driven-development","children":{},"count":1},"/tags/testing":{"label":"#testing","children":{},"count":4},"/tags/ubiquitous-language":{"label":"#ubiquitous-language","children":{},"count":1},"/tags/forward-proxy":{"label":"#forward-proxy","children":{},"count":1},"/tags/payment":{"label":"#payment","children":{},"count":1},"/tags/apprenticeship":{"label":"#apprenticeship","children":{},"count":4},"/tags/remote":{"label":"#remote","children":{},"count":12},"/tags/showcase":{"label":"#showcase","children":{},"count":1},"/tags/practice":{"label":"#practice","children":{},"count":6},"/tags/senior":{"label":"#senior","children":{},"count":1},"/tags/internship":{"label":"#internship","children":{},"count":4},"/tags/swap":{"label":"#swap","children":{},"count":2},"/tags/quant":{"label":"#quant","children":{},"count":1},"/tags/radio":{"label":"#radio","children":{},"count":3},"/tags/writing":{"label":"#writing","children":{},"count":1},"/tags/english":{"label":"#english","children":{},"count":1},"/tags/apprentice":{"label":"#apprentice","children":{},"count":1},"/tags/designer":{"label":"#designer","children":{},"count":1},"/tags/meeting":{"label":"#meeting","children":{},"count":4},"/tags/us":{"label":"#us","children":{},"count":4},"/tags/mbti":{"label":"#mbti","children":{},"count":6},"/tags/intj":{"label":"#intj","children":{},"count":1},"/tags/istp":{"label":"#istp","children":{},"count":1},"/tags/estj":{"label":"#estj","children":{},"count":1},"/tags/istj":{"label":"#istj","children":{},"count":1},"/tags/personalities":{"label":"#personalities","children":{},"count":1},"/tags/management":{"label":"#management","children":{},"count":4},"/tags/early-stage":{"label":"#early-stage","children":{},"count":3},"/tags/design-thinking":{"label":"#design-thinking","children":{},"count":2},"/tags/healthcare":{"label":"#healthcare","children":{},"count":1},"/tags/browser-extension":{"label":"#browser-extension","children":{},"count":2},"/tags/git":{"label":"#git","children":{},"count":2},"/tags/marketplace":{"label":"#marketplace","children":{},"count":2},"/tags/tips":{"label":"#tips","children":{},"count":10},"/tags/real-estate":{"label":"#real-estate","children":{},"count":1},"/tags/nocode":{"label":"#nocode","children":{},"count":1},"/tags/hospitality":{"label":"#hospitality","children":{},"count":1},"/tags/ride-hailing":{"label":"#ride-hailing","children":{},"count":1},"/tags/iot":{"label":"#iot","children":{},"count":1},"/tags/macos":{"label":"#macos","children":{},"count":3},"/tags/swift":{"label":"#swift","children":{},"count":7},"/tags/partnership":{"label":"#partnership","children":{},"count":1},"/tags/pm":{"label":"#pm","children":{},"count":4},"/tags/travel":{"label":"#travel","children":{},"count":1},"/tags/operation":{"label":"#operation","children":{},"count":7},"/tags/idea":{"label":"#idea","children":{},"count":1},"/tags/ventures":{"label":"#ventures","children":{},"count":3},"/tags/purpose":{"label":"#purpose","children":{},"count":2},"/tags/wasm":{"label":"#wasm","children":{},"count":2},"/tags/transparency":{"label":"#transparency","children":{},"count":1},"/tags/event-sourcing":{"label":"#event-sourcing","children":{},"count":1},"/tags/sdlc":{"label":"#sdlc","children":{},"count":1},"/tags/modeling":{"label":"#modeling","children":{},"count":2},"/tags/goal":{"label":"#goal","children":{},"count":2},"/tags/license":{"label":"#license","children":{},"count":1},"/tags/template":{"label":"#template","children":{},"count":20},"/tags/k8s":{"label":"#k8s","children":{},"count":1},"/tags/js":{"label":"#js","children":{},"count":2},"/tags/clojure":{"label":"#clojure","children":{},"count":1},"/tags/react.js":{"label":"#react.js","children":{},"count":2},"/tags/employee":{"label":"#employee","children":{},"count":2},"/tags/onboarding":{"label":"#onboarding","children":{},"count":1},"/tags/company":{"label":"#company","children":{},"count":1},"/tags/tooling":{"label":"#tooling","children":{},"count":9},"/tags/human-resource":{"label":"#human-resource","children":{},"count":1},"/tags/dcos":{"label":"#dcos","children":{},"count":5},"/tags/docker":{"label":"#docker","children":{},"count":11},"/tags/okr":{"label":"#okr","children":{},"count":1},"/tags/oss":{"label":"#oss","children":{},"count":1},"/tags/newsletter":{"label":"#newsletter","children":{},"count":45},"/tags/web3":{"label":"#web3","children":{},"count":4},"/tags/monitoring":{"label":"#monitoring","children":{},"count":2},"/tags/upptime":{"label":"#upptime","children":{},"count":1},"/tags/mcp":{"label":"#mcp","children":{},"count":3},"/tags/overleaf":{"label":"#overleaf","children":{},"count":1},"/tags/slide":{"label":"#slide","children":{},"count":1},"/tags/office-hours":{"label":"#office-hours","children":{},"count":28},"/tags/discord":{"label":"#discord","children":{},"count":35},"/tags/btc":{"label":"#btc","children":{},"count":1},"/tags/forward-engineering":{"label":"#forward-engineering","children":{},"count":14},"/tags/tech-community":{"label":"#tech-community","children":{},"count":1},"/tags/weekly-digest":{"label":"#weekly-digest","children":{},"count":15},"/tags/wrap-up":{"label":"#wrap-up","children":{},"count":7},"/tags/real-time":{"label":"#real-time","children":{},"count":1},"/tags/phoenix-live-view":{"label":"#phoenix-live-view","children":{},"count":1},"/tags/timescaledb":{"label":"#timescaledb","children":{},"count":1},"/tags/go-weekly":{"label":"#go-weekly","children":{},"count":24},"/tags/finance":{"label":"#finance","children":{},"count":1},"/tags/protocol":{"label":"#protocol","children":{},"count":1},"/tags/agents":{"label":"#agents","children":{},"count":4},"/tags/defi":{"label":"#defi","children":{},"count":2},"/tags/aider":{"label":"#aider","children":{},"count":2},"/tags/qwen2.5":{"label":"#qwen2.5","children":{},"count":1},"/tags/openhand":{"label":"#openhand","children":{},"count":1},"/tags/predicted output":{"label":"#predicted output","children":{},"count":1},"/tags/project-management":{"label":"#project-management","children":{},"count":1},"/tags/copilots":{"label":"#copilots","children":{},"count":2},"/tags/team-management":{"label":"#team-management","children":{},"count":1},"/tags/mongodb":{"label":"#mongodb","children":{},"count":1},"/tags/salesforce":{"label":"#salesforce","children":{},"count":1},"/tags/use cases":{"label":"#use cases","children":{},"count":2},"/tags/design-system":{"label":"#design-system","children":{},"count":1},"/tags/storybook":{"label":"#storybook","children":{},"count":1},"/tags/hook":{"label":"#hook","children":{},"count":1},"/tags/cline":{"label":"#cline","children":{},"count":1},"/tags/realtime api":{"label":"#realtime api","children":{},"count":1},"/tags/interface":{"label":"#interface","children":{},"count":1},"/tags/import":{"label":"#import","children":{},"count":1},"/tags/package":{"label":"#package","children":{},"count":1},"/tags/yelp":{"label":"#yelp","children":{},"count":1},"/tags/generics":{"label":"#generics","children":{},"count":2},"/tags/log":{"label":"#log","children":{},"count":1},"/tags/pillar":{"label":"#pillar","children":{},"count":3},"/tags/metric":{"label":"#metric","children":{},"count":1},"/tags/tracing":{"label":"#tracing","children":{},"count":1},"/tags/intent-classification":{"label":"#intent-classification","children":{},"count":1},"/tags/prompting":{"label":"#prompting","children":{},"count":1},"/tags/changelog":{"label":"#changelog","children":{},"count":1},"/tags/test":{"label":"#test","children":{},"count":1},"/tags/language":{"label":"#language","children":{},"count":5},"/tags/ai-agents":{"label":"#ai-agents","children":{},"count":2},"/tags/ai-evaluation":{"label":"#ai-evaluation","children":{},"count":1},"/tags/prompt-engineering":{"label":"#prompt-engineering","children":{},"count":4},"/tags/ai-integration":{"label":"#ai-integration","children":{},"count":1},"/tags/networking":{"label":"#networking","children":{},"count":7},"/tags/finite-automata":{"label":"#finite-automata","children":{},"count":1},"/tags/pattern-matching":{"label":"#pattern-matching","children":{},"count":1},"/tags/state-machines":{"label":"#state-machines","children":{},"count":1},"/tags/java":{"label":"#java","children":{},"count":1},"/tags/programming":{"label":"#programming","children":{},"count":1},"/tags/caching":{"label":"#caching","children":{},"count":1},"/tags/devbox":{"label":"#devbox","children":{},"count":17},"/tags/nix":{"label":"#nix","children":{},"count":9},"/tags/generative-ui":{"label":"#generative-ui","children":{},"count":1},"/tags/function-calling":{"label":"#function-calling","children":{},"count":1},"/tags/ton":{"label":"#ton","children":{},"count":2},"/tags/ai-powered":{"label":"#ai-powered","children":{},"count":1},"/tags/pattern":{"label":"#pattern","children":{},"count":1},"/tags/supervisor-architecture":{"label":"#supervisor-architecture","children":{},"count":1},"/tags/document-processing":{"label":"#document-processing","children":{},"count":1},"/tags/information-retrieval":{"label":"#information-retrieval","children":{},"count":1},"/tags/iterators":{"label":"#iterators","children":{},"count":1},"/tags/reinforcement-learning":{"label":"#reinforcement-learning","children":{},"count":3},"/tags/kernel-programing":{"label":"#kernel-programing","children":{},"count":1},"/tags/anchor":{"label":"#anchor","children":{},"count":2},"/tags/containerization":{"label":"#containerization","children":{},"count":4},"/tags/virtualization":{"label":"#virtualization","children":{},"count":4},"/tags/meet-up":{"label":"#meet-up","children":{},"count":4},"/tags/meetup":{"label":"#meetup","children":{},"count":2},"/tags/motivation":{"label":"#motivation","children":{},"count":1},"/tags/cybersecurity":{"label":"#cybersecurity","children":{},"count":2},"/tags/serverless":{"label":"#serverless","children":{},"count":1},"/tags/doty":{"label":"#doty","children":{},"count":5},"/tags/websocket":{"label":"#websocket","children":{},"count":1},"/tags/protocols":{"label":"#protocols","children":{},"count":1},"/tags/nextjs":{"label":"#nextjs","children":{},"count":2},"/tags/open-source":{"label":"#open-source","children":{},"count":2},"/tags/rendering":{"label":"#rendering","children":{},"count":1},"/tags/dom":{"label":"#dom","children":{},"count":3},"/tags/cssom":{"label":"#cssom","children":{},"count":1},"/tags/render-tree":{"label":"#render-tree","children":{},"count":1},"/tags/iframe":{"label":"#iframe","children":{},"count":1},"/tags/postmessage":{"label":"#postmessage","children":{},"count":1},"/tags/mock-service-worker":{"label":"#mock-service-worker","children":{},"count":1},"/tags/api-mocking":{"label":"#api-mocking","children":{},"count":1},"/tags/web-development-tool":{"label":"#web-development-tool","children":{},"count":1},"/tags/data-fetching":{"label":"#data-fetching","children":{},"count":1},"/tags/frontend,":{"label":"#frontend,","children":{},"count":1},"/tags/graphql":{"label":"#graphql","children":{},"count":1},"/tags/reactjs":{"label":"#reactjs","children":{},"count":2},"/tags/scroll-driven-animations":{"label":"#scroll-driven-animations","children":{},"count":1},"/tags/animations":{"label":"#animations","children":{},"count":1},"/tags/intersection-observer":{"label":"#intersection-observer","children":{},"count":1},"/tags/server-component":{"label":"#server-component","children":{},"count":1},"/tags/caching-data":{"label":"#caching-data","children":{},"count":1},"/tags/social-networks":{"label":"#social-networks","children":{},"count":1},"/tags/foundation-model":{"label":"#foundation-model","children":{},"count":1},"/tags/fine-tuning":{"label":"#fine-tuning","children":{},"count":1},"/tags/vector database":{"label":"#vector database","children":{},"count":1},"/tags/shadow-dom":{"label":"#shadow-dom","children":{},"count":1},"/tags/web-api":{"label":"#web-api","children":{},"count":1},"/tags/swr-infinite":{"label":"#swr-infinite","children":{},"count":1},"/tags/web-design":{"label":"#web-design","children":{},"count":1},"/tags/tuning-llm":{"label":"#tuning-llm","children":{},"count":2},"/tags/langchain":{"label":"#langchain","children":{},"count":1},"/tags/translation":{"label":"#translation","children":{},"count":1},"/tags/profiling":{"label":"#profiling","children":{},"count":1},"/tags/state-mangement":{"label":"#state-mangement","children":{},"count":1},"/tags/global-state-management":{"label":"#global-state-management","children":{},"count":1},"/tags/css":{"label":"#css","children":{},"count":5},"/tags/fonts":{"label":"#fonts","children":{},"count":1},"/tags/variable-fonts":{"label":"#variable-fonts","children":{},"count":1},"/tags/state-management":{"label":"#state-management","children":{},"count":2},"/tags/component":{"label":"#component","children":{},"count":1},"/tags/proof-of-knowledge":{"label":"#proof-of-knowledge","children":{},"count":1},"/tags/fronten":{"label":"#fronten","children":{},"count":1},"/tags/typescript":{"label":"#typescript","children":{},"count":4},"/tags/analytics-tools":{"label":"#analytics-tools","children":{},"count":1},"/tags/analytics-platform":{"label":"#analytics-platform","children":{},"count":1},"/tags/software engineer":{"label":"#software engineer","children":{},"count":1},"/tags/parsing":{"label":"#parsing","children":{},"count":1},"/tags/technology":{"label":"#technology","children":{},"count":5},"/tags/validation":{"label":"#validation","children":{},"count":1},"/tags/webassembly":{"label":"#webassembly","children":{},"count":1},"/tags/sandbox":{"label":"#sandbox","children":{},"count":1},"/tags/zk-rollup":{"label":"#zk-rollup","children":{},"count":2},"/tags/polygon":{"label":"#polygon","children":{},"count":1},"/tags/starknet":{"label":"#starknet","children":{},"count":1},"/tags/ethereum":{"label":"#ethereum","children":{},"count":2},"/tags/zero-knowledge":{"label":"#zero-knowledge","children":{},"count":1},"/tags/atomic-css":{"label":"#atomic-css","children":{},"count":1},"/tags/client-side":{"label":"#client-side","children":{},"count":1},"/tags/storage":{"label":"#storage","children":{},"count":1},"/tags/frontend/performance":{"label":"#frontend/performance","children":{},"count":2},"/tags/wai-aria":{"label":"#wai-aria","children":{},"count":1},"/tags/accessibility":{"label":"#accessibility","children":{},"count":4},"/tags/polymorphic-component":{"label":"#polymorphic-component","children":{},"count":1},"/tags/threejs":{"label":"#threejs","children":{},"count":1},"/tags/web-performance":{"label":"#web-performance","children":{},"count":2},"/tags/html":{"label":"#html","children":{},"count":4},"/tags/animation":{"label":"#animation","children":{},"count":1},"/tags/zk-proof":{"label":"#zk-proof","children":{},"count":1},"/tags/guides":{"label":"#guides","children":{},"count":1},"/tags/responsive-design":{"label":"#responsive-design","children":{},"count":1},"/tags/hsl":{"label":"#hsl","children":{},"count":1},"/tags/javascript":{"label":"#javascript","children":{},"count":4},"/tags/css-in-js":{"label":"#css-in-js","children":{},"count":1},"/tags/tip":{"label":"#tip","children":{},"count":1},"/tags/dark-mode":{"label":"#dark-mode","children":{},"count":1},"/tags/multisign-wallet":{"label":"#multisign-wallet","children":{},"count":1},"/tags/virtual-dom":{"label":"#virtual-dom","children":{},"count":1},"/tags/native-modules":{"label":"#native-modules","children":{},"count":1},"/tags/vitejs":{"label":"#vitejs","children":{},"count":1},"/tags/esm":{"label":"#esm","children":{},"count":1},"/tags/modules":{"label":"#modules","children":{},"count":1},"/tags/blockchain-bridge":{"label":"#blockchain-bridge","children":{},"count":1},"/tags/foundational-topics":{"label":"#foundational-topics","children":{},"count":5},"/tags/distributed-systems":{"label":"#distributed-systems","children":{},"count":1},"/tags/pos":{"label":"#pos","children":{},"count":1},"/tags/smart-contract":{"label":"#smart-contract","children":{},"count":1},"/tags/atomic-design":{"label":"#atomic-design","children":{},"count":1},"/tags/a11y":{"label":"#a11y","children":{},"count":1},"/tags/useeffect":{"label":"#useeffect","children":{},"count":1},"/tags/concurrency":{"label":"#concurrency","children":{},"count":2},"/tags/parallelism":{"label":"#parallelism","children":{},"count":1},"/tags/liquidity":{"label":"#liquidity","children":{},"count":1},"/tags/engineering/frontend":{"label":"#engineering/frontend","children":{},"count":1},"/tags/funding":{"label":"#funding","children":{},"count":2},"/tags/wfh":{"label":"#wfh","children":{},"count":1},"/tags/tech radar":{"label":"#tech radar","children":{},"count":1},"/tags/policy":{"label":"#policy","children":{},"count":1},"/tags/vim":{"label":"#vim","children":{},"count":1}}}},"slug":["playground","01_literature","engineering"],"childMemos":[{"content":"\n## What is Bloom Filter?\nA Bloom Filter is a probabilistic data structure used for testing whether an element is a member of a set or not. It's space-efficient compared to other data structures like hash tables, but it may give false positives (indicating that an element is in the set when it's not) and never gives false negatives (indicating that an element is not in the set when it actually is not).\n\n![](assets/bloom-filter_bloom_filter.webp)\n\n## How Bloom Filter work?\n\n`Initialization`: You start with a bit array of size `m` (usually a large prime number) initially set to all zeros, and `k` different hash functions.\n\n`Adding Elements`: When you want to add an element to the Bloom Filter, you run it through each of the `k` hash functions, each of which maps the element to one of the `m` bits in the array. You then set those bits to `1`.\n\n`Checking Membership`: To check if an element is in the Bloom Filter, you again run it through each of the `k` hash functions. If all `k` bits are set to `1` in the bit array, the element is probably in the set. If any of the bits are `0`, then the element is definitely not in the set. However, due to potential hash collisions, `false positives are possible`.\n\n## When to use?\nImagine that you have a system which millions user, and then you have a user table which had millions of records. So everytime a new user is registered, you have to query millions records table to check username is existed or not which cost `Time complexity = O(n)` (`n` will be vary upto millions) in case not aggregate further. Instead of that, you can `Checking membership` in Bloom Filter which just have `Time complexity = O(k)` (k is constant number of hash function) and then response to user that username is alreay existed. The result has a small probability of false positive(username not existed but response existed) due to potential hash collion but it acceptable by notify user can register with other username.\n\nBesides above scenario, Bloom Filter can apply in other case like:\n\n- `Caching Systems`: Bloom Filters are commonly used in caching systems to quickly check if a requested item is likely to be in the cache before performing a more expensive lookup. This helps in reducing cache misses and improving overall system performance.\n\n- `Data Deduplication`: In systems where duplicate data needs to be identified and eliminated efficiently, Bloom Filters can help quickly determine whether a new data item is a duplicate of an existing item in the dataset.\n\n- `Web Crawlers and Search Engines`: Bloom Filters can be used in web crawlers and search engines to quickly check whether a URL has been visited or indexed before, reducing redundant crawling or indexing efforts.\n\n- `Spell Checkers`: Bloom Filters can be employed in spell checkers to quickly determine if a word is misspelled by checking against a large dictionary of correctly spelled words.\n\n- `Network Routing`: In networking applications, Bloom Filters can be used to quickly filter out packets or messages that are not likely to match certain criteria, reducing the computational load on routers and improving network performance.\n\n- `Blockchain and Distributed Systems`: In distributed systems like blockchain networks, Bloom Filters can be utilized for lightweight and efficient synchronization of data among nodes, reducing the amount of data that needs to be transmitted.\n\nOverall, Bloom Filters are suitable for applications where memory usage needs to be minimized, and a small probability of false positives is acceptable. However, they are not suitable for scenarios where false positives are unacceptable or where exact membership information is required.\n\n## Pros and Cons?\n### Pros:\n\n- `Space Efficiency`: Bloom Filters are very space-efficient compared to other data structures like hash tables or trees. They require only a fraction of the space that would be needed to store the actual set of elements.\n\n- `Fast Membership Testing`: Bloom Filters provide constant-time (O(k)) complexity for membership testing, regardless of the size of the set. This makes them suitable for large datasets where quick membership checks are required.\n\n- `No False Negatives`: Bloom Filters never produce false negatives. If the filter says an element is not in the set, it's guaranteed to be absent. This property is useful in applications where false negatives are unacceptable.\n\n- `Versatility`: Bloom Filters are versatile and can be used in various applications such as caching, spell checking, network routing, and more. They are particularly useful in scenarios where approximate membership testing is acceptable.\n\n### Cons:\n\n- `False Positives`: Bloom Filters can produce false positives, indicating that an element is in the set when it's not. The probability of false positives increases with the number of elements in the set and the parameters chosen for the Bloom Filter (e.g., size of the bit array and number of hash functions).\n\n- `Cannot Remove Elements`: Bloom Filters do not support element removal. Once an element is added to the filter, it cannot be removed without resorting to complex techniques or resetting the filter entirely.\n\n- `Parameter Sensitivity`: The performance and effectiveness of a Bloom Filter are highly sensitive to the parameters chosen, such as the size of the bit array (m) and the number of hash functions (k). Selecting inappropriate parameters can lead to higher false positive rates or increased memory usage.\n\n- `Limited Operations`: Bloom Filters support only two primary operations: adding elements and checking for membership. They do not support other common operations like element retrieval or iteration over the elements in the set.\n\n- `Hash Function Dependency`: Bloom Filters rely heavily on hash functions for their operation. The quality of the hash functions used can significantly impact the performance and effectiveness of the Bloom Filter.\n\n## Simple Implementation:\n\nNowadays, many cache system integrated bloom filter as a feature. Can use it without implementation, but if you want try to hand-on. the simple implementation is a example:\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"hash/crc32\"\n\t\"hash/fnv\"\n)\n\ntype BloomFilter struct {\n\tbitArray []bool\n\tsize     uint\n\thashFunc []func(data string) uint\n}\n\nfunc NewBloomFilter(size uint) *BloomFilter {\n\tbf := &BloomFilter{\n\t\tbitArray: make([]bool, size),\n\t\tsize:     size,\n\t\thashFunc: []func(data string) uint{\n\t\t\tfunc(data string) uint { return uint(fnv.New32().Sum32()) },\n\t\t\tfunc(data string) uint { return uint(crc32.ChecksumIEEE([]byte(data))) },\n\t\t\t// Add more hash functions here if needed\n\t\t},\n\t}\n\treturn bf\n}\n\nfunc (bf *BloomFilter) Add(data string, numHash int) error {\n\tif numHash > len(bf.hashFunc) {\n\t\treturn fmt.Errorf(\"number of hash functions exceeds the limit\")\n\t}\n\tfor i := 0; i < numHash; i++ {\n\t\tindex := bf.hashFunc[i](data) % bf.size\n\t\tbf.bitArray[index] = true\n\t}\n\treturn nil\n}\n\nfunc (bf *BloomFilter) Contains(data string) bool {\n\tfor _, hashFunc := range bf.hashFunc {\n\t\tindex := hashFunc(data) % bf.size\n\t\tif !bf.bitArray[index] {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nfunc main() {\n\tbloomFilter := NewBloomFilter(100)\n\n\t// Add user identities to the Bloom Filter\n\tuserIdentities := []string{\"user123\", \"user456\", \"user789\"}\n\tfor _, identity := range userIdentities {\n\t\tbloomFilter.Add(identity, 2)\n\t}\n\n\t// Check for existence of user identities\n\tfmt.Println(bloomFilter.Contains(\"user123\")) // true\n\tfmt.Println(bloomFilter.Contains(\"user789\")) // true\n\tfmt.Println(bloomFilter.Contains(\"user999\")) // false\n}\n```","title":"Bloom Filter","short_title":"","description":"A Bloom Filter is a probabilistic data structure used for testing whether an element is a member of a set or not. It's space-efficient compared to other data structures like hash tables, but it may give false positives (indicating that an element is in the set when it's not) and never gives false negatives (indicating that an element is not in the set when it actually is not)...","tags":["data-structure","bloom-filter","big-o"],"pinned":false,"draft":false,"hiring":false,"authors":["hoangnnh"],"date":"Fri Jun 28 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/backend/bloom-filter.md","slugArray":["playground","01_literature","engineering","backend","bloom-filter"]},{"content":"\n## What is CRDT?\nConflict-free Replicated Data Types (CRDTs) (aka convergent replicated data type or commutative replicated data type) are data structures that can be replicated across multiple computers in a network, where the replicas can be updated independently and concurrently without coordination between them, and enable operations to always converge to a final state consistent among all replicas.\n\n![](assets/introduction-to-crdt_b41416acdcc17fd248cefbd2f333fb6e_md5.webp)\n\n## Why CRDT?\n### Addressing Data Modification Dilemma\nThere are two approaches to handling concurrent modifications in distributed systems:\n\n1. **Strongly Consistent Replication**: In this approach, replicas coordinate for modifications to ensure strong consistency. However, this coordination sacrifices performance and can be limited by the Cap Theorem. The CAP theorem states that in a distributed system, it's impossible to simultaneously guarantee consistency (every read receives the most recent write), availability (every request receives a response), and partition tolerance (the system continues to operate despite network partitions).\n2. **Optimistic Replication**: In optimistic replication, users can independently modify data without coordination, which enhances performance. However, this approach may lead to conflicts when multiple replicas receive conflicting modifications. To address conflicts, replicas communicate and resolve conflicts automatically.\n\n### Role of CRDTs\nCRDTs (Conflict-free Replicated Data Types) play a crucial role in **optimistic replication systems**. They enable seamless merging of data modifications by performing replication as commutative operations. CRDTs ensure that conflicting modifications from different replicas are resolved automatically, eliminating the need for special conflict resolution code or user intervention. This makes CRDTs a valuable tool for maintaining consistency in distributed systems while maximizing performance.\n\n## How to use CRDT?\nCRDTs (Conflict-free Replicated Data Types) are a powerful tool for ensuring data consistency and synchronization in various applications. Here are some examples of how CRDTs can be applied:\n\n**Applications of CRDTs**\n\n- _Mobile Apps_: CRDTs enable seamless synchronization of data across multiple devices used by a single user. This ensures that the user can access and modify their data from any device without conflicts or inconsistencies.\n- _Distributed Databases_: CRDTs play a crucial role in maintaining data integrity in distributed databases. They allow replicas of the database to be located in different locations while still ensuring that updates and modifications to the data are propagated correctly across all replicas.\n- _Collaboration Software_: CRDTs are particularly useful in collaboration software where multiple users can simultaneously make changes to the same file or data. By using CRDTs, conflicts between concurrent changes can be automatically resolved without the need for centralized coordination or locking mechanisms.\n- _Large-scale Data Storage Systems_: CRDTs are instrumental in building large-scale data storage systems that require global scalability. By replicating data using CRDTs, these systems can handle high volumes of data and distribute it across multiple nodes, allowing for efficient and reliable access to the data.\n\n**Decentralized Operation**\n\n- One of the key advantages of CRDTs is that they support decentralized operation. Unlike traditional systems that rely on a single server, CRDTs can thrive in peer-to-peer networks and other decentralized settings. This makes them well-suited for applications and environments where a central authority is not desirable or feasible.\n\n## Conclusion\nIn short, Conflict-free Replicated Data Types (CRDTs) play a pivotal role in managing conflict resolution. It guarantees the seamless merging of data into a coherent state, irrespective of the modifications made on distinct replicas. Importantly, CRDTs automate this merging process, eliminating the necessity for specialized conflict resolution code or user intervention.\n\nUnlike systems relying on algorithms utilized by platforms such as Google Docs, Trello, and Figma, CRDTs don't presuppose the reliance on a single server. This distinctive quality allows CRDTs to seamlessly integrate into peer-to-peer networks and various decentralized settings, setting them apart in the landscape of distributed data management.\n\n## References\n- https://crdt.tech/\n- https://redis.com/blog/diving-into-crdts/\n- https://jakelazaroff.com/words/an-interactive-intro-to-crdts/#user-content-fn-cvrdt\n- https://www.infoq.com/presentations/crdt-production/\n","title":"Introduction to CRDT","short_title":"","description":"Conflict-free Replicated Data Types (CRDTs) (aka convergent replicated data type or commutative replicated data type) are data structures that can be replicated across multiple computers in a network, where the replicas can be updated independently and concurrently without coordination between them, and enable operations to always converge to a final state consistent among all replicas.","tags":["distributed-system","crdt","data-types","data-structures"],"pinned":false,"draft":false,"hiring":false,"authors":["fuatto"],"date":"Sun Nov 05 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/backend/introduction-to-crdt.md","slugArray":["playground","01_literature","engineering","backend","introduction-to-crdt"]},{"content":"\n## What are random and sequential reads and writes?\nRandom and sequential reads and writes refer to the way data is accessed, read, and written on hard disks\n\n![](assets/sql-and-how-it-relates-to-disk-reads-and-writes_disk-sequential-random-access.webp)\n\nSequential read/write operations involve accessing data in a continuous, linear manner. This typically occurs when transferring large files or accessing a large file on the drive. In sequential read/write operations, the drive can read or write data from a series of blocks, allowing for faster performance.\n\nRandom read/write operations, on the other hand, involve accessing small files scattered throughout the drive. This is common when opening multiple files or applications simultaneously, such as a Word document, a spreadsheet, and a web browser. In random read/write operations, the drive needs to access data from random blocks repeatedly, which can result in slower performance. Hard drives have a harder time with random operations compared to SSDs, as the read/write head has to position itself to get the requested data, increasing seek time.\n\nTL;DR: Sequential reads and writes involve accessing data in a continuous, linear manner, while random reads and writes involve accessing small files scattered throughout the drive. Hard drives generally perform better in sequential operations compared to random operations due to the physical limitations of the read/write head.\n\n## What does this mean for database design?\nRandom and sequential reads and writes have implications for CQRS (Command Query Responsibility Segregation) and database design. CQRS is an architectural pattern that separates read and write operations for a data store, allowing for optimized performance, scalability, and security.\n\nIn the context of random and sequential reads and writes, CQRS can benefit from the separation of read and write operations. For example, the read side can use a schema optimized for queries, which may involve more random reads, while the write side can use a schema optimized for updates, which may involve more sequential writes. This separation allows for independent scaling of read and write workloads, potentially reducing lock contentions and improving overall performance.\n\nMoreover, CQRS can take advantage of different storage technologies for read and write operations, such as using SSDs for random reads and traditional hard drives for sequential writes. This flexibility can lead to better performance and resource utilization, depending on the specific use case and requirements of the application.\n\n## SQL Operation on Disk reads/writes\nIn the context of SQL operations and hard disk actions, different SQL operations can result in either sequential or random read/write actions on the hard disk. Here's a breakdown of some common SQL operations and their corresponding hard disk actions:\n\n1. **SELECT**: Reading data from a table can be either sequential or random, depending on the query and the organization of the data on the disk. If the data is well-organized and the query accesses contiguous blocks, it can result in sequential reads. However, if the data is scattered across the disk, it can result in random reads.\n\n2. **INSERT**: Inserting new data into a table can be either sequential or random, depending on the organization of the data and the table structure. For example, if the data is appended to the end of the table, it can result in sequential writes. However, if the data is inserted into various locations within the table, it can result in random writes.\n\n3. **UPDATE**: Updating existing data in a table can result in random read/write operations, as the data to be updated may be scattered across the disk.\n\n4. **DELETE**: Deleting data from a table can also result in random read/write operations, as the data to be deleted may be scattered across the disk.\n\n5. **INDEX**ing: Creating or updating indexes can result in both sequential and random read/write operations, depending on the organization of the data and the index structure. For example, creating a clustered index can result in sequential writes, while creating a non-clustered index can result in random writes.\n\n## Optimizing SQL for better sequential reads/writes\nTo optimize PostgreSQL database performance for sequential reads and writes, you can follow these general recommendations:\n\n1. **Table partitioning**: Partition large tables into smaller, more manageable pieces to improve query performance and reduce the amount of data that needs to be scanned.\n\n2. **Indexing**: Create appropriate indexes to speed up query execution and minimize random disk access. Be cautious not to over-index, as it can slow down write operations.\n\n3. **Optimize query execution**: Use the **EXPLAIN** command to analyze query plans and identify potential bottlenecks. Optimize queries by rewriting them or adjusting configuration parameters to improve performance.\n\n4. **Separate tablespaces on different disk drives**: Physically store each tablespace on a different disk drive to prevent the disk from being overloaded with I/O operation requests.\n\n5. **Tune configuration parameters**: Customize PostgreSQL configuration parameters, such as shared_buffers, work_mem, and maintenance_work_mem, to improve read and write performance.\n\n6. **Write-Ahead Log (WAL) configuration**: Adjust WAL configuration parameters, such as wal_buffers, checkpoint_timeout, and checkpoint_completion_target, to optimize write performance.\n\n7. **Filesystem optimization**: Disable `atime` (the timestamp at which the file was last accessed) for the data files to save CPU cycles).\n\n8. **Use CLUSTER or pg_repack**: Reorganize the table data to match the index order, which can improve the performance of sequential scans.\n\nRemember that each PostgreSQL database server's environment is different, so it's essential to test and adjust these recommendations according to your specific needs and use case.\n\n## Conclusion\nIn summary, SQL operations can result in either sequential or random read/write actions on the hard disk, depending on the organization of the data, the table structure, and the specific operation being performed. The impact of sequential and random reads and writes on SQL database performance can be significant, and it is important to design the database disk storage in such a way that maximum sequential I/O may be performed to optimize performance.\n\n## References\n-  https://www.redhat.com/architect/pros-and-cons-cqrs\n-  https://www.baeldung.com/cs/sequential-vs-random-write\n-  https://superuser.com/questions/1325962/sequential-vs-random-i-o-on-ssds\n-  https://medium.com/design-microservices-architecture-with-patterns/cqrs-design-pattern-in-microservices-architectures-5d41e359768c\n-  https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs\n-  https://www.howtogeek.com/769286/sequential-vs-random-read-write-operations-for-storage/\n-  https://www.usenix.org/legacyurl/impact-sequential-and-random-io\n-  http://www.eventstore.com/cqrs-pattern\n-  https://medium.com/codex/cqrs-design-pattern-5-things-you-should-know-ecaab3f406cc\n-  https://stackoverflow.com/questions/2100584/difference-between-sequential-write-and-random-write\n-  https://www.redhat.com/architect/illustrated-cqrs\n-  https://kislayverma.medium.com/architecture-pattern-cqrs-7a91e9050b0d\n-  https://www.techpowerup.com/forums/threads/sequential-r-w-vs-random-r-w.268820/\n-  https://itnext.io/a-practical-guide-to-cqrs-af4e2d797383\n-  https://anarsolutions.com/when-to-go-for-cqrs-design-pattern/\n-  https://superuser.com/questions/1474993/trying-to-understand-random-access-write-versus-sequential-access-writes\n-  https://docs.aws.amazon.com/prescriptive-guidance/latest/modernization-data-persistence/cqrs-pattern.html\n-  https://blog.risingstack.com/when-to-use-cqrs/\n-  https://news.ycombinator.com/item?id=35878961\n-  https://www.upsolver.com/blog/cqrs-event-sourcing-build-database-architecture\n-  https://betterprogramming.pub/cqrs-software-architecture-pattern-the-good-the-bad-and-the-ugly-e9d6e7a34daf\n-  https://condusiv.com/sequential-io-always-outperforms-random-io-on-hard-disk-drives-or-ssds/\n-  https://www.linkedin.com/pulse/how-cqrs-solves-problem-overloading-transactional-database-gontu-1e\n-  https://dba.stackexchange.com/questions/285809/do-databases-optimize-random-write-and-read-operations\n","title":"SQL and how it relates to Disk Reads and Writes","short_title":"","description":"Sequential read/write operations involve accessing data in a continuous, linear manner. This typically occurs when transferring large files or accessing a large file on the drive. In sequential read/write operations, the drive can read or write data from a series of blocks, allowing for faster performance...","tags":["engineering","data-engineering","sequential-reads","sequential-writes","random-reads","random-writes"],"pinned":false,"draft":false,"hiring":false,"authors":["monotykamary"],"date":"Wed Sep 06 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/backend/sql-and-how-it-relates-to-disk-reads-and-writes.md","slugArray":["playground","01_literature","engineering","backend","sql-and-how-it-relates-to-disk-reads-and-writes"]},{"content":"\nStructured Query Language (SQL) is widely used for managing data in relational database management systems (RDBMS). In the context of SQL, the optimization of database queries forms the foundation for efficient data retrieval, providing quicker response times and increasing overall database performance. One key strategy to optimize SQL queries involves the concept of \"Sargable\" queries.\n\n\"Sargable\" is derived from \"Search ARGument ABLE,\" signifying that a query can successfully utilize indexes for efficient execution. It is a term that was initially introduced in a 1979 research paper titled \"Access Path Selection in a Relational Database Management System\" authored by P. Griffiths Selinger et al. (DBA.StackExchange.com). The fundamental idea behind sargable queries is geared towards forming SQL statements that allow the query execution engine to make the best use of indexes whenever available.\n\n## Sargable vs. Non-Sargable Queries\nA central feature differentiating sargable from non-sargable queries is the manner in which operations are executed on indexed columns. Non-sargable queries include function calls or operations that use an indexed field in the WHERE clause, a feature that hinders the usage of indexes.\n\n|Non-sargable Query|Sargable Query|\n|---|---|\n|`SELECT * FROM myTable WHERE SUBSTRING(myColumn, 1, 3) = 'ABC';`|`SELECT * FROM myTable WHERE myColumn LIKE 'ABC%';`|\n|`SELECT * FROM myTable WHERE DATEDIFF(day, myDate, GETDATE()) = 7;`|`SELECT * FROM myTable WHERE myDate >= DATEADD(day, -7, GETDATE()) AND myDate < GETDATE();`|\n|`SELECT * FROM myTable WHERE ISNULL(myColumn, 'N/A') = 'N/A';`|`SELECT * FROM myTable WHERE myColumn IS NULL;`|\n\n### Wildcards\nAttempting to use wildcards at the beginning of a string in a LIKE clause also tends to create non-sargable conditions. For instance, the condition `WHERE name LIKE '%prefix%'` usually results in a table or index scan, which is significantly slower than an index seek.\n\nLet's consider a simple example. Suppose we have a table called \"Customers\" with columns \"CustomerID\", \"Name\", and \"Address\". We want to find all customers who live in a particular city. A non-sargable query would be:\n\n``` sql\nSELECT * FROM Customers WHERE Address LIKE '%New York%';\n```\n\nThis query is not sargable because the LIKE operator does not allow the query engine to use an index on the Address column. However, we can modify the query to make it sargable:\n\n```sql\nSELECT * FROM Customers WHERE Address = 'New York';\n```\n\nNow, the query engine can use an index on the Address column to optimize the search process.\n\n### Handling NULL values\nAnother important aspect of sargable queries is handling NULL values properly. The returned dataset will be empty if we do not handle NULL values correctly. For example, consider the following query:\n\n```sql\nSELECT * FROM Customers WHERE Name IS NOT NULL;\n```\n\nThis query is not sargable because the `IS NOT NULL` predicate does not allow the query engine to use an index. To make this query sargable, we can modify it to:\n\n```sql\nSELECT * FROM Customers WHERE Name IS NOT NULL AND Address IS NOT NULL;\n```\n\nNow, the query engine can use an index on the Name and Address columns to optimize the search process.\n\n### Calling with functions\nA non-sargable query may look like `WHERE YEAR(dateColumn) = 2022`. The problem with such a query is that it requires evaluation of the function `YEAR(dateColumn)` for each row in the table, thus preventing us to use any pre-existing index on `dateColumn`, an operation leading to inefficient table scans.\n\nSargable queries aim at performing operations responsibly by avoiding function calls on indexed columns whenever possible. For instance, reversing the non-sargable condition from\n\n```sql\nSELECT *\nFROM myTable\nWHERE YEAR(dateColumn) = 2023;\n```\n\nto\n\n```sql\nSELECT *\nFROM myTable\nWHERE dateColumn >= '2023-01-01' AND dateColumn < '2024-01-01';\n```\n\nallows the query optimizer to use our indexes and not run the function on every row.\n\n## Impact on Performance\nThe distinction between sargable and non-sargable queries lies primarily in how efficiently they facilitate usage of indexes. Sargable queries allow the database engine to perform index seeks, a process whereby only the matching data in index pages are read, hence reducing the consumption of [input/output (IO) resources and time]().\n\nSeveral advantages come from employing sargable queries. The main benefit lies in leveraging indexes, thereby improving search speed. Depending on the data type and column values, diverse index types such as clustered indexes, non-clustered indexes, and columnstore indexes can be used.\n\n## Conclusion\nIn modern databases, where massive data sizes are common, improving query performance can significantly impact the overall system speed and efficiency. Sargable queries provide a crucial optimization strategy that should be taken into account during SQL programming and query design.\n\nBy understanding how sargable queries can take advantage and efficiently use indexes, database administrators, and developers can significantly boost search speeds and performance. Furthermore, ways to convert non-sargable queries into sargable queries by avoiding function calls on indexed columns and leveraging efficient use of the LIKE operator and wildcards should be studied for regular practice.\n\n## References\n- https://stackoverflow.com/questions/799584/what-makes-a-sql-statement-sargable\n- https://www.sqlshack.com/how-to-use-sargable-expressions-in-t-sql-queries-performance-advantages-and-examples/\n- https://www.tech-recipes.com/uncategorized/sargable-queries-in-sql-server-with-examples/\n- https://www.mssqltips.com/sqlservertip/6795/improve-sql-server-query-performance-searchable-arguments/\n- https://dba.stackexchange.com/questions/162263/what-does-the-word-sargable-really-mean\n","title":"SQL Saragable Queries and Their Impact on Database Performance","short_title":"","description":"Structured Query Language (SQL) is widely used for managing data in relational database management systems (RDBMS). In the context of SQL, the optimization of database queries forms the foundation for efficient data retrieval, providing quicker response times and increasing overall database performance. One key strategy to optimize SQL queries involves the concept of \"Sargable\" queries...","tags":["sql","database","sargable-queries","performance"],"pinned":false,"draft":false,"hiring":false,"authors":["monotykamary"],"date":"Thu Sep 14 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/backend/sql-sargable-queries-and-their-impact-on-database-performance.md","slugArray":["playground","01_literature","engineering","backend","sql-sargable-queries-and-their-impact-on-database-performance"]},{"content":"\n## Before the removal\n### Importance of Zookeeper\nKafka has been using [Zookeeper](https://cwiki.apache.org/confluence/display/ZOOKEEPER/ProjectDescription) for a variety of important functions. It uses Zookeeper to keep track of which brokers are part of the Kafka cluster. This is a critical task, as it enables Kafka to ensure that each broker is working properly and that the entire cluster is functioning as intended.\n\nAdditionally, Zookeeper is responsible for electing the leader of a given partition. This is a complex task that requires significant computational power, and Zookeeper is well-suited to handle it.\n\nAnother important function that Zookeeper performs for Kafka is storing configurations for topics/permissions and current offsets of each consumer group. Managing configurations is critical for ensuring that Kafka is able to function properly as a distributed system and that each consumer is receiving the correct information.\n\nFinally, Zookeeper sends health-check notifications to Kafka for a variety of events. This includes new topics being created, brokers coming up or dying, and topics being deleted.\n\n### Downsides to Zookeeper\nDespite its many advantages, there are also some downsides to using Zookeeper. One challenge is that the Kafka Controller state or metadata often does not match the Zookeeper state. This can lead to confusion and make it difficult to determine the current state of the cluster.\n\nAdditionally, there can be performance issues when a broker joins or leaves a cluster, as Zookeeper can be overloaded by a high number of leader elections. Despite these challenges, many organizations continue to find Zookeeper to be a valuable tool in managing their Kafka clusters, and Kafka continues to rely on it for its important functions.\n\n## Why \nThe Kafka Controller **state** or **metadata** often does not match the Zookeeper state. Despite this, Kafka uses Zookeeper for several important tasks. For example, it keeps track of which brokers are a part of the Kafka cluster and is responsible for electing the leader of a given partition. Additionally, it stores configurations for topics/permissions and current offsets of each consumer group. Lastly, it sends health-check notifications to Kafka for events such as new topics being created, brokers coming up or dying, and topics being deleted.\n\nOne of the advantages of using Zookeeper is simpler deployment and configuration, as it is a *separate Java service*. However, there are also some downsides to using Zookeeper. Performance issues occur when a broker joins or leaves a cluster, as Zookeeper can be overloaded by a high number of leader elections. In addition, scaling Kafka only supports a limited number of partitions, up to **200k partitions**.\n\nDespite the potential challenges, Kafka continues to rely on Zookeeper for its important functions, and many organizations continue to find it a valuable tool in managing their Kafka clusters.\n\n## Architecture\n![](assets/the-removal-of-apache-kafka's-dependency-on-zookeeper_kafka_architecture.webp)\n\n### In the old architecture\nThe controller is a crucial component of the system that manages the state of the Kafka cluster. Upon election, the controller loads its state from a Zookeeper quorum consisting of multiple nodes. This state includes information about topics, their partitions, and the brokers that host these partitions. Once the controller has loaded its state, it begins pushing updates to other nodes in the cluster using `LeaderAndIsr` and `UpdateMetadata` messages. These updates ensure that all nodes in the cluster are aware of the latest state of the system, and that they can take appropriate actions in response to changes in this state. Overall, the controller plays a critical role in ensuring the smooth functioning and reliability of the Kafka cluster.\n\n![](assets/the-removal-of-apache-kafka's-dependency-on-zookeeper_kafka-controller-apis.webp)\n\n### In **KRaft Mode**\nKafka has been using Zookeeper for various critical tasks, such as keeping track of which brokers are part of the Kafka cluster, electing leaders for partitions, storing configurations for topics/permissions, and current offsets of each consumer group, and sending health-check notifications to Kafka.\n\nDespite its advantages, using Zookeeper also poses challenges when it comes to performance and consistency in Kafka's metadata. For example, Zookeeper can be overloaded by a high number of leader elections, especially when a broker joins or leaves a cluster. Additionally, Kafka Controller state or metadata often does not match the Zookeeper state, leading to confusion and difficulty in determining the current state of the cluster.\n\nTo address these challenges, Kafka introduced KRaft mode, which replaces the Zookeeper quorum with the Controller quorum. The Controller quorum manages all metadata stored in Zookeeper, including topics, partitions, ISRs, and configs, among others. An active controller is elected using [Raft](https://raft.github.io/), a consensus algorithm that does not rely on any external system. The leader controller handles RPC calls from the brokers, while the follower controllers replicate the data written to the active controller to be ready in case the active controller fails.\n\nWith the KRaft mode, the controller quorum does not need to load state from Zookeeper when the leadership changes, which significantly improves performance. Instead, the brokers fetch updates from the active controller via the new `MetadataFetch` API, tracking the offset of the last update fetched and only requesting newer updates.\n\nKafka's KRaft mode offers various advantages over Zookeeper, such as simpler deployment and configuration since Zookeeper is a separate Java service. Furthermore, it addresses the performance issues associated with Zookeeper, especially when a broker joins or leaves a cluster, by reducing the number of leader elections.\n\nIn conclusion, KRaft mode is a crucial improvement to Kafka's architecture, ensuring smooth functioning and reliability of the Kafka cluster by providing a better alternative to Zookeeper for managing Kafka's metadata.\n\n![](assets/the-removal-of-apache-kafka's-dependency-on-zookeeper_time-shutdown-operations-kafka.webp)\n\nFor simple local setup, can refer to [Apache Kafka's quickstart guide](https://kafka.apache.org/quickstart) . For more detailed configurations, you can refer to [Kafka's kraft config](https://kafka.apache.org/documentation/#kraft_config) \n\n## References\n- [https://www.conduktor.io/kafka/zookeeper-with-kafka/](https://www.conduktor.io/kafka/zookeeper-with-kafka/ \"https://www.conduktor.io/kafka/zookeeper-with-kafka/\")\n- [https://developer.confluent.io/learn/kraft/](https://developer.confluent.io/learn/kraft/ \"https://developer.confluent.io/learn/kraft/\")\n- [https://raft.github.io/](https://raft.github.io/ \"https://raft.github.io/\")\n- [https://cwiki.apache.org/confluence/display/KAFKA/KIP-500%3A+Replace+ZooKeeper+with+a+Self-Managed+Metadata+Quorum](https://cwiki.apache.org/confluence/display/KAFKA/KIP-500%3A+Replace+ZooKeeper+with+a+Self-Managed+Metadata+Quorum \"https://cwiki.apache.org/confluence/display/KAFKA/KIP-500%3A+Replace+ZooKeeper+with+a+Self-Managed+Metadata+Quorum\")\n- [https://kafka.apache.org/documentation/#zk](https://kafka.apache.org/documentation/#zk \"https://kafka.apache.org/documentation/#zk\")\n","title":"The removal of Apache Kafka's dependency on Zookeeper","short_title":"","description":"Kafka has been using Zookeeper for a variety of important functions. It uses Zookeeper to keep track of which brokers are part of the Kafka cluster. This is a critical task, as it enables Kafka to ensure that each broker is working properly and that the entire cluster is functioning as intended...","tags":["engineering","zookeeper","kafka"],"pinned":false,"draft":false,"hiring":false,"authors":["fuatto"],"date":"Wed Sep 13 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/backend/the-removal-of-apache-kafkas-dependency-on-zookeeper.md","slugArray":["playground","01_literature","engineering","backend","the-removal-of-apache-kafkas-dependency-on-zookeeper"]},{"content":"\n## Motivation of Designing Data Pipeline Framework\n\nTo improve and strongly go-live the data pipeline, besides apply best practices and pillar for Data Pipeline Native Solution, a design framework and pattern are robustly help us in:\n\n- Follow typical data pipeline\n- Organize pipeline and adopt market\n- Refer the other people use besides yours\n\nIts easy to follow if we will discuss the pattern and solution with SWAT and pros/cons analysis and aks ourself for initiative questions such as: when to use and when not to use.\n\n## Choosing your data pipeline by\n\n### 1. Ask Question\n\n- Need historical data in output ?\n  - Yes ? Replayable source ?\n  - No ? Non-Replayable source ?\n  - Size of data to be pulled\n    - Large: Time raged\n    - Small: Full Snapshot\n    - Only past n period: Lookback\n    - Streaming data: Streaming\n  - Transformational Complexity\n    - Standard: In-Transform\n    - Depends on time of run or input value/MDM: Conditional flow\n    - Multi teams: Disconnected pipeline/Follow fatten data pattern and post-transform\n  - Is sink append only?\n    - Yes: Non-overwritable sink\n    - No: Overwritable sink\n  - If Idempotent pipeline possible: Source overwrite sink\n\n### 2. Source and Sink\n\nBefore designing data pipeline and perform magic in data movement, we have to understand where we are and where we will go to help us direct the proper direction.\n\n- Source: data systems where provide input(s) to data pipeline\n- Sink: data systems where retrieve output(s) from data pipeline\n\n#### 2.1 Source replayability\n\nCan we answer question **What did the data look like n period ago (n can be min/hour/day/months/years)** ?\nTo able to answer that question, the data source need to support a data journey from every state of data. For example, Event stream, web server logs, delta change in database likes create/update/delete (CDC), ect.\n\n#### 2.2 Source Ordering\n\nDoes source system is event streaming or log-out event and push data into data pipeline in order? Especially streaming data. List of techniques are using to handle such as \"backoff\", \"watermaking\", \"handling late event\" need to be address when dealing with order events.\n\n#### 2.3 Sink Overwritability\n\nOverwrite is required to prevent duplication of data processing and makes data more controllable and avoid partial data when pipeline fails. The unique key is used for tracking and overwriting data in:\n\n- Overwritable sinks:\n  - Database table has primary key\n  - Cloud Storage has unique run id/row_id\n- Non-overwritable sinks: Kafka queue/Streaming queue, then we have to store immediately and post-process events\n\n### 3. Data pipeline patterns\n\nBefore jumping into any specific or pattern of system design for data pipeline, remember **Every solution need to be under consideration (pros/cons)**, there are 3 questions referred from experts in data foundation:\n\n1. Extraction: How the data in source systems will be ingested (pull/push) ?\n2. Behavior: When an error occurs, how data pipeline will re-act to ? (self-healing/bypass/refill)\n3. Structural: What is the structure and variety of processing layer of task/transformation in data pipeline (multi-hop routing)\n\nNow, detailing what we are taking\n\n#### 3.1 Extraction\n\n##### 3.1.1 Time ranged/Delta\n\nData pipeline only pulls the data corresponding to a specific time frame like daily/hourly/...\n**Notes**: we need to update sink/destination reasonably by Slowly Changing on table to capture current state of data.\n- **Pros**\n   - Fast data pulls, only necessary data\n   - Parallelize running of pipeline from single source\n- **Cons**\n  - More complicated when building Slowly Changing and build UPSERTs/MERGE INTOs statement to update latest data\n  - Rely on source system to support replayable where pipeline will capture the time frame and delta\n\n##### 3.1.2 Snapshot\n\nData pipeline scan and pull entire data from the source, and we need a additional column named **run_id** (on Database or new folder in cloud storage system) that uniquely identifies each pipeline run. Later used for data versioning.\n\n- **Pros**\n  - Simple to build the data pipeline\n  - Easy to track when issue happened\n  - Data versioning for each run\n  - Simplify table structure\n- **Cons**\n  - Need to pull data from replica database, not primary one\n  - Latency, slow execution\n  - Schema changes may break the pipeline, whereas can be resolved by Infer Schema/Tooling like Delta lake\n  - Store too much data leads to cost escalation\n  - Not suitable for event data and large data\n\n##### 3.1.3 Lookback\n\nAs an advanced data processing, lookback helps to handle source system which are continuously update and has late arriving events for particular record. That help to answer aggregate metric for the past n period because the data in fact table being changed.\n\n- **Pros**\n  - Great fit for fact data with KPI Dashboard tracking\n  - Easy to build and maintain in Apache Beam where we careless about deployment. Focus on programing model-watermark-fired events...\n- **Cons**\n  - Report and Dashboard makes confusion for end-user if data late events are come a lot\n\n##### 3.1.4 Streaming\n\nEach record flows through data pipeline with enriched, registered, filtered, ect as needed. This is popular topic on market because users want to see the data as soon as possible\n\n- **Pros**\n  - Low latency\n  - Real Quick look and action on data\n- **Cons**\n  - Have to handle scaling in downstream at high traffic and can break data pipeline\n  - Source replayable is required for handling issue of failure/outage\n  - Decoupling pattern for data pipeline to isolate source - pipeline - sink\n\n#### 3.2 Behavioral\n\n##### 3.2.1 Idempotent\n\nData pipeline does not cause duplication data/partial data/schema changes whenever it runs numerous time with the same inputs.\n\nTo implement the Idempotent data pipeline: the delete-write pattern is strongly recommended with highly carefulness. It require we understand sink systems mechanism.\n\nExample: for database SQL\n\n```sql\nCREATE TEMP TABLE TEMP_YYYY_MM_DD\nAS\nSELECT c1,\n    c2,\n    SOME_TRANSFORMATION_FUNCTION(c3) as c3\nFROM stage_table\nWHERE day = 'yyyy-mm-dd';\n\n-- note the delete-write pattern\nDELETE FROM final_table\nWHERE day = 'yyyy-mm-dd';\n\nINSERT INTO final_table(c1, c2, c3)\nSELECT c1,\n    c2,\n    c3\nFROM TEMP_YYYY_MM_DD;\n\nDROP TEMP TABLE TEMP_YYYY_MM_DD;\n```\n\n- **Pros**\n  - Easy to build, maintain, further reruns and backfills\n  - Easy to tracking data lineage\n\n- **Cons**\n  - Longer dev time\n  - Hard to maintain with changing requirements\n  - Good fit for OLAP and Relational Database\n\n##### 3.2.2 Self-healing\n\nThe straightforward design for self-healing pipeline is all unprocessed data will be \"catch-up\" for the next cycle run when an error occurs during a run.\nWhereas time ranged pipeline simply automatically run from the last checkpoint failed run before starting the run, or full snapshot doesn't need to care historical data, or lookback pipeline will skip failed run, Self-healing behavior need a meta running table to control the checkpoint and run_id that it can be challenging during implementation.\n\n- **Pros**\n  - Reduce alert fatigue and monitoring\n  - Well handle an interruption and broken from upstream\n  - Combine with idempotent runs, catch-up pipeline will handle as re-try flow\n- **Cons**\n  - Code bus may not be caught be debug as most assume pipeline would self-heal\n  - System may be crashed by re-try as many time\n  - Need to ensure overwritability on sink, no duplication, no partial\n  - Need to handle metadata of pipeline\n\n#### 3.3 Structural\n\n##### 3.3.1 Multi-hop pipeline\n\nAn idea of multi-hop is keeping data separated at different levals/layer of cleanliness. Multiple layers of transformation help:\n\n- Catch issues as soon as data quality checks after each layer with specific method for each layer\n- Debug issue as fast as alerting and following a consistent pattern of applying transformation. (example: Type Error/Schema Error --> Check layer 1/Cleansing, Transform Erorr --> Check layer 2, Enrich Error --> Check layer 3 and so on...)\n- The staging tables/temp table are key concept to figure out data structural layer, preferred approaches in here for vary standard and popular today:\n\n1. [Stage/Intermediate/Marts from dbt](https://docs.getdbt.com/guides/best-practices/how-we-structure/1-guide-overview)\n2. [Medallion architect from Databrick](https://docs.databricks.com/lakehouse/medallion.html)\n\n- **Pros**\n   - Rerun only failed transformations and their dependencies\n   - Build new logic at any step of data processing\n   - Pinpoint data if an issue occurred in the code. Debug step by step.\n- **Cons**\n  - Storage costs since we are storing copies of dataset from various layers\n  - Processing costs with large data and rerun data\n\n##### 3.3.2 Conditional/ Dynamic pipeline\n\nAdditional consideration when keep an eye on th exploding complexity when pipeline grows and evolves. The requirement may need complex flows and pipeline do have different tasks based on different condition based on input. For example, we organize tasks in pipeline when input from user changes frequently.\n\n- **Pros**\n  - One pipeline(repo) to control data flow(data lineage)\n  - Easy to deliver complex requirement of data flow\n- **Cons**\n  - Hard to debug, slow to develop\n  - Critical thinking about design pattern(OOP)\n  - Difficult for testing when need to simulate all the different input scenarios\n\n##### 3.3.3 Disconnected pipeline - Connected source storage\n\nDisconnected data pipeline depend on data sinks of other data pipelines, but careless data sources. Define boundary of data pipeline based on Ontology/Semantic\n\n- **Pros**\n  - Quick to build\n  - De-coupling development where teams can implement independently\n- **Cons**\n  - Hard to debug, tracking data lineage across system\n  - Hard to define SLAs\n\n### 4. Conclusion\n\nThe post provides idea how to get starting to consider and figure out the best fit for resolving problem, and how a typical question made when we are asked to create and organize data flows through data pipeline.\n\nLast but not least, because of making development go well and maintenance more efficiency, the communication and get feedback are critical important during design and implement. Apply Scum method in software development is the best of choice.\n\nI must lack of knowledge and experience and please email me if you have any questions, comments or advices.\nHave a talk and make it better.\n","title":"Data Pipeline Design Framework","short_title":"","description":"To improve and strongly go-live the data pipeline, besides apply best practices and pillar for Data Pipeline Native Solution, a design framework and pattern are robustly help us in...","tags":["engineering/data","data-pipeline"],"pinned":false,"draft":false,"hiring":false,"authors":["longddl"],"date":"Fri Mar 15 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/data/data-pipeline-design-framework.md","slugArray":["playground","01_literature","engineering","data","data-pipeline-design-framework"]},{"content":"\n## What is MapReduce?\nLet's start with an example.\n\nWe are the head of census bureau for the state of California and tasked with finding the finding the population of all cities in California. All the resources we want are ready but we have only four months to finish the task. Calculating the population of all cities for a big state like california is not an easy task. The sensible thing to do is to divide the state by city and make individuals in charge of each city to calculate the population of each city where he is in charge of.\n\n![](assets/mapreduce_mr-example-1.webp)\n\nFor illustration purpose, there are three cities: San Francisco (SFO), San Jose (SJOSE) and LA.\n\nPerson 1 will be in charge for SFO, person 2 will be in charge for San Jose, and person 3 will be in charge of LA.\n\nWe have divided California into cities and each city is assigned to a person and he is responsible for finding the population of the assigned city. We now need to give instructions to each person on what they have to do. Thus, we ask each person to go to a home knock on the door and when someone answers the door, ask how many people live in the home and note it down.  Each one notes down the city they're responsible for and the number of people live in the home. Then, the person has to go to the next home and repeat the same process until he covers all homes in the assigned city.\n\nFor a person who covers SFO, he goes to first home, there are five people in the home so he note down `SFO 5`, three people are living in the second home so he note down `SFO 3`, so on.  It's a classic divide and conquer approach.\nSame instructions will be carried out by everyone involved person 2 will go to San Jose and Person 2 will do the same in LA. When each person is done with their assigned city, we ask them to submit their results to the state's headquarters.\nWe'll have a person in the headquarters to receive the results from all cities and aggregate them by city to come up with population of each city for the entire state.\nTherefore, four months in with this strategy, we're able to calculate the population of california.\n\n![](assets/mapreduce_mr-example-2.webp)\n\nNext year, we're asked to do the same job, we have all the resources we want but this time we have two months to finish the task. So we would simply double the number of people to perform the task. We will divide SFO into two divisions and add one person to each division and we will do the same thing for San Jose and LA. Each person responsible for a division will perform the same task as before, we can also do the same thing at the headquarters.\n\nLet's divide the headquarters into two: `CA HQ 1` and `CA HQ 2` and one person to each division.  With twice as much people, we can finish the task in half the time but there is one small problem, we want the census takers for SFO, called `SFO 1` and `SFO 2`, send their results to either `CA HQ 1` or `CA HQ 2`.\n\nWe don't want `SFO 1` sending results to `CA HQ 1` and `SFO 2` sending their results to `CA HQ 2` because this would result an population count for SFO divided between `CA HQ 1` or `CA HQ 2`.  That is not ideal because we want consolidated population count by city, not partial counts.\n\nSo, what we can do is to instruct census takers in `SFO 1` and `SFO 2` to send their results to either `CA HQ 1` or `CA HQ 2`.  Similarly we should instruct census takers for San Jose and LA, they should either send it to `CA HQ 1` or `CA HQ 2`.\nWith this model, again, we were able to complete the census calculation in two months.\n\nIf next year if we were asked to do the same thing in a month, we know exactly what to do and we can simply double the resources and apply our model. Now, we have a good enough model, not only the model works but it also can scale.\n\nThe model we have here is called _MapReduce_. MapReduce is a programming model for distributed computing. It's not a programming language, it is a programming model which we can use to process huge data sets in a distributed fashion.\n\n![](assets/mapreduce_mr-example-3.webp)\n\nNow let's look at the faces involved in Mapreduce. The phase where individuals collect the population of their assigned city or part of the city is called a [_Map phase]().\n\nThe individual person involved in the actual calculation is called the _Mapper_ and the city or the part of the city he is working with is known as the _Input Split_.\nThe output from each mapper is a _Key Value pair_ as we can see the key is `SFO` the value is `5` or the key is `SJSOE` the value is `2`.\n\nThe phase where you aggregate the intermediate results from each city or mappers in the headquarters is called the _Reduced phase_ and the individuals who work in the headquarters are known as _Reducers_ because they reduce or consolidate the output from many different mappers. Each reducer will produce a result set.\n\nThe phase in which the values from the different mappers are copied or transferred to reducers is known as the _Shuffle phase_. The shuffle phase comes in between map and the reduced phase. Therefore, map phase, shuffle phase and reduce face are the three phases of Mapreduce.\n\n## Summary\nMapReduce is:\n\n- A distributed programming model for processing large data sets\n- Conceived at Google and Hadoop's adapt this programming model.\n- Can be implemented in any programming language and Hadoop supports a lot of programming language to write Mapreduce programs. We can write a Mapreduce program in Scala, Python, C/C++ and of course Java.\n- Mapreduce is not a programming language, it is a programming model.\n- Hadoop implements Mapreduce so that the Mapreduce system in Hadoop manages the communicationsm, data transfer, parallel execution across the distributed servers or nodes.\n","title":"MapReduce","short_title":"","description":"We are the head of census bureau for the state of California and tasked with finding the finding the population of all cities in California. All the resources we want are ready but we have only four months to finish the task. Calculating the population of all cities for a big state like california is not an easy task. The sensible thing to do is to divide the state by city and make individuals in charge of each city to calculate the population of each city where he is in charge of...","tags":["engineering/data","mapreduce","distributed","hadoop"],"pinned":false,"draft":false,"hiring":false,"authors":["dudaka"],"date":"Mon Oct 24 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/data/mapreduce.md","slugArray":["playground","01_literature","engineering","data","mapreduce"]},{"content":"\n## Motivation of Vector Database\n\n- The motivation of this thoughts that trying to discover the LLMs and Generative AI\n- In order to create or build, train any models there are multiple factors will need to be considered: lakes of data, metadata, data management, infrastructure, etc.\n- Vector Databases are used like underlying of Gen AI\n- Where everything are tokenized, vectorized and serialized into a single language\n- Explored blog posts, articles from [What is a AWS Vector Database?](https://aws.amazon.com/what-is/vector-databases/)\n\n## Learning Notes\n\n- Data from internet/database/users are inputted and converted and encoded (video, speech, images, text, etc.) to a vector using a vector embedding model such as Gemini, OpenAI, etc.\n- Developing Products: Drant*, Milvus*, redis, pgvector(extension), Pinecone, LanceDB, oracle, MongoDB(Atlas), AthenaDB\n- Different with Relation DB where in Vector Database has multiple dimensions (**legacy from multi-dimensional data mode**l)\n- Data structure: save the vector; don't define the structure for the table.\n- How to query data? Query the vector that is similar to others in DB base on algorithms (KNN and could be different/better model as I think)\n- Indexing the data in the database, Indexing Algorithms: Flat, HNSW, IVF ==> I think we have room for optimizing the caches and indexes.\n\n- Working flow of Vector Database with Gen AI:\n  - An embedding model converts the data to a vector data structure. (We need to optimize the algorithm for the huge of parameters)\n  - Convert the input(end-user) to a vector.\n  - Querying data in the database.\n  - Compare the query vector with the database/cache to find out the resources in the DB\n\n- Diagram to describe the Working Flow\n\n![](assets/quick-learning-vector-database_ab8dc870fb19553f7616442fe4e9e6c5_md5.webp)\n\n- Benefits:\n  - Flexibility: schemaless, non-structured\n  - Scalability: bucketing data, dynamic programming\n  - Speed/ performance: Search vector\n  - Standardization: formatting all data into a single format\n\n- Use cases:\n  - Feeding Realtime data for LLMs models\n  - Resolving searching problems\n  - Serving Video/Image recognition problems\n  - Better similarity recommendation with contexts and situations\n\n- Technical Challenges:\n  - Performance: indexing for Flat (elastic search, redis, pgvector) querying using vector\n  - Optimize long-term caching memory\n  - Hardware optimization for hosting and computing data\n  - Improve KNN performance models\n","title":"Quick Learning Vector Database","short_title":"","description":"The motivation of this thoughts that trying to discover the LLMs and Generative AI...","tags":["engineering/data","vector-database","database"],"pinned":false,"draft":false,"hiring":false,"authors":["longddl"],"date":"Fri Mar 15 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/data/quick-learning-vector-database.md","slugArray":["playground","01_literature","engineering","data","quick-learning-vector-database"]},{"content":"\n## Introduction\n![](assets/google-data-fusion_896575dd6ac0fba37e7e2c0771c3dd6d_md5.webp)\n\nGoogle Data Fusion is a fully managed, cloud-native data integration service that enables users to efficiently build and manage ETL/ELT data pipelines. It is designed to streamline data engineering tasks for enterprise users and is built on top of the open-source project CDAP\n\n.Â Key features and benefits of Google Data Fusion include:\n\n- **Graphical User Interface**: Data Fusion offers a convenient drag-and-drop interface for building data pipelines, making it easier for users to focus on insights and actions rather than writing code.\n- **Flexibility**: While the UI provides a quick and easy way to create pipelines, Data Fusion is also extensible, allowing users to add custom code when needed**[2](https://gcloud.devoteam.com/blog/what-is-google-cloud-data-fusion/)**.\n- **GCP-native Architecture**: Data Fusion is fully integrated and supported by Google Cloud Platform, unlocking the scalability, reliability, security, and privacy guarantees of Google Cloud.\n- **Data Governance**: Data Fusion includes built-in features for data governance, such as end-to-end data lineage, integration metadata, and cloud-native security and data protection services.\n- **Integration with Google Cloud Services**: Data Fusion connects with various Google Cloud services, such as Cloud Storage, BigQuery, and Cloud Spanner, allowing users to create, manage, and analyze data in a centralized manner.\n\nOverall, Google Data Fusion simplifies data engineering tasks and enables users to focus on data analytics and deriving insights for better customer service and operational efficiency\n\n## Use Cases\nGoogle Cloud Data Fusion is a powerful tool for building and managing data pipelines, and its use cases are diverse and expanding. Here are some of the most common and impactful ways organizations are using it:\n\n**Data Integration and ETL:**\n\n- **Consolidating data from multiple sources:**Â Data Fusion simplifies data ingestion from various on-premises, cloud, and SaaS applications, unifying it into a single repository for analysis. Examples include CRM, ERP, social media, and sensor data.\n- **Transforming and enriching data:**Â Data Fusion offers a wide range of data transformation tools, including filtering, sorting, aggregation, and joining, enabling you to clean, enrich, and prepare data for specific use cases.\n- **Building data warehouses and lakes:**Â Data Fusion seamlessly integrates with Google BigQuery and other data storage solutions, facilitating the creation of centralized data repositories for analytics and reporting.\n\n**Data Migration and Modernization:**\n\n- **Migrating data to the cloud:**Â Data Fusion simplifies the process of migrating on-premises data to Google Cloud, providing a managed and scalable solution for organizations looking to modernize their data infrastructure.\n- **Replicating data between cloud platforms:**Â Data Fusion enables seamless data replication between different cloud environments, including Google Cloud Platform, AWS, and Azure, ensuring data consistency and availability.\n\n**Real-time Data Processing and Analytics:**\n\n- **Building real-time data pipelines:**Â Data Fusion supports Apache Spark, allowing you to create real-time data pipelines for near-instantaneous insights and decision-making based on streaming data feeds.\n- **Enabling real-time dashboards and reports:**Â Data Fusion can be used to feed data into real-time dashboards and reports, providing stakeholders with immediate visibility into critical business metrics.\n- **Triggering actions based on data events:**Â Data Fusion can be used to trigger actions based on specific data events, such as sending alerts, updating records, or initiating workflows in other systems.\n\n**Additional Use Cases:**\n\n- **Data governance and compliance:**Â Data Fusion offers features like data lineage tracking and auditing, ensuring data quality and compliance with regulations.\n- **Self-service data access:**Â Data Fusion empowers business users with self-service data access capabilities, allowing them to explore and analyze data without needing technical expertise.\n- **Building custom data connectors:**Â Data Fusion provides a framework for building custom connectors to integrate with niche applications and data sources.\n\nThese are just a few examples, and the possibilities for using Data Fusion are vast. Its flexibility, scalability, and ease of use make it a valuable tool for organizations looking to unlock the potential of their data.\n\n## Pricing\nGoogle Data Fusion have some pricing tier in the following table:\n![](assets/google-data-fusion_3af0d3138685ed2467a3d6edba263858_md5.webp)\n\nComparison between the tiers:\n![](assets/google-data-fusion_2276aa22c8381226ba65f2ef143bdd57_md5.webp)\n\n## How to setup Data fusion:\n### Prerequisites:\n1. **Google Cloud Platform Account:** Ensure that you have a Google Cloud Platform (GCP) account. If you don't have one, you can sign up [here](https://cloud.google.com/).\n2. **Enable the Cloud Data Fusion API:** In the GCP Console, navigate to the API & Services > Dashboard. Search for \"Cloud Data Fusion API\" and enable it.\n3. **Install and Configure Google Cloud SDK:** Install the [Google Cloud SDK](https://cloud.google.com/sdk) on your local machine. After installation, run **`gcloud init`** to set up your credentials and project.\n\n### Steps to Set Up Google Cloud Data Fusion:\n1. **Create a Cloud Storage Bucket:** Create a Cloud Storage bucket to store the artifacts and metadata required by Cloud Data Fusion. Replace **`[BUCKET_NAME]`** with your desired bucket name.\n    \n    ```bash\n    bashCopy code\n    gsutil mb -l [REGION] gs://[BUCKET_NAME]\n    \n    ```\n    \n2. **Create a Cloud Data Fusion Instance:** Use the following command to create a Cloud Data Fusion instance. Replace **`[INSTANCE_NAME]`** with your desired instance name, and **`[REGION]`** with the region where you want to deploy the instance.\n    \n    ```bash\n    bashCopy code\n    gcloud data-fusion instances create [INSTANCE_NAME] \\\\\n      --region=[REGION] \\\\\n      --zone=[ZONE] \\\\\n      --network=[NETWORK_NAME] \\\\\n      --subnet=[SUBNET_NAME] \\\\\n      --bucket-uri=gs://[BUCKET_NAME]/[DIRECTORY]\n    \n    ```\n    \n    - **`-zone`**: Specify the zone for the instance.\n    - **`-network`**: Specify the VPC network name.\n    - **`-subnet`**: Specify the subnet within the network.\n    - **`-bucket-uri`**: Specify the Cloud Storage bucket URI.\n3. **Access Cloud Data Fusion UI:** After the instance is created, you can access the Cloud Data Fusion UI using the generated endpoint. Navigate to the URL displayed in the command output.\n    \n    ```bash\n    bashCopy code\n    gcloud data-fusion instances describe [INSTANCE_NAME] --region=[REGION]\n    \n    ```\n    \n4. **Connect to the Cloud Data Fusion UI:** Open the provided URL in a web browser to access the Cloud Data Fusion UI. Log in using your Google Cloud credentials.\n    \n5. **Explore and Create Pipelines:** Once you're in the Cloud Data Fusion UI, you can start exploring and creating ETL pipelines using the visual interface.\n    \n\nRemember to replace placeholders like **`[REGION]`**, **`[BUCKET_NAME]`**, **`[INSTANCE_NAME]`**\n\n## How to setup a simple ETL with Google Data Fusion ( with GCP console):\nIn this demo weâ€™ll setup a simple ETL pipeline to import, transform load a csv file to a Google Big query data table\n\n### Step 1: go to the Big Query console page and create a dataset and table:\n- On the top left corner of the main page of Big query select add and add a dataset. Then click on the three dot simple on the left side of the data set name to add a table. Right after that. you should see this screem to add a table.\n\t- ![](assets/google-data-fusion_0228e14fdc9b93e5c79eacc7a7ed89a6_md5.webp)\n- Fill in the table name (the only mandatory field that left blank after you do the previous step). You can tweak others setting if you want to. Then click Create Table.\n\n## Step 2: Go to your Google Data Fusion instance\n- Go to your Data Fusion page and locate your data fusion instance. You should be see it listed right after you go the main page of Data fusion console.\n- Click on the instance you should be able to see a prompt like this:\n\t- ![](assets/google-data-fusion_2ff260eafe1164c146b66e07b719a065_md5.webp)\n- Click the View Instance link. You should see the landing page of Google Data Fusion instance. Click on Studio button to start designing pipelines. You should see a screen like this:\n\t- ![](assets/google-data-fusion_3c40db19ec1af62c3c8afa9699051d72_md5.webp)\n\n## Step 3: Preparing you CSV file on GCS\n- Create a bucket and push you CSV to the storage. I prepared mine like this.\n\t- ![](assets/google-data-fusion_1be5c2f7bb9170fd0267c2d30ee6388a_md5.webp)\n\n### Step 4: Start designing your first pipeline\n- Weâ€™ll create a GCS as a source of data so on the search bar, search for â€˜gcsâ€™ and drag the â€˜GCSâ€™ simple in the `Source` section to the canvas\n\t- ![](assets/google-data-fusion_149533894219b81b80c9af8473dcb666_md5.webp)\n- Click on `Properties` and you should be able to see a screen like this.\n\t- ![](assets/google-data-fusion_5a415fd557838d4d98816e3cc25561e4_md5.webp)\n- Click on `Browse` to browse through the files you uploaded to GCS. Locate your csv data source file and select it.\n\t- ![](assets/google-data-fusion_e79e3ac84c23e2bf3f2358112b709abf_md5.webp)\n- (Optional) Enable the `Enable Quoted Values` and `Use First Row as Header` toggles and click on `Get Schema`. You should able to find your data schema on the right side of the screen\n\t- ![](assets/google-data-fusion_5f466ca7e1d9ebc587d1c83d4dc71f8b_md5.webp)\n- You finished setting up the source CSV. Go on and click the `X` button on the top right next to `Validate` button.\n- Next, youâ€™ll need to transform data to match you expected schema. Search for `wrangler` on the search bar and drag out `Wrangler` in the  `Transform` section and drag an arrow from `GCS` box to it for Wrangler to recognize the input schema.\n\t- ![](assets/google-data-fusion_3c77659f8f80214120f60e97847544dd_md5.webp)\n- Then click on `properties` of the the `Wrangler` box.\n\t- ![](assets/google-data-fusion_acc19ad5ede5df8d029145c516c3ab45_md5.webp)\n- Here you can transform your data. Defines you output schema on the left and properties in the middle section. Here Iâ€™ll just left it like it is since it a simple demo.\n- Click on the top right `X` button to go back to the canvas.\n- Next, youâ€™ll need a storage for you output data. Search `bigquery` in the search box and drag out `Bigquery` box from the `Sink` section and connect it to the `Wrangler` box.\n\t- ![](assets/google-data-fusion_81e1fe6503f40c31fecc7c752d0e56ac_md5.webp)\n- Click on `Properties` of the Bigquery box youâ€™ll find this screen.\n\t- ![](assets/google-data-fusion_5ef7b2f2dd57fb04cfc2610003f96a00_md5.webp)\n- You can find you input data schema on the left side of the screen. Here click on `Browse` to locate your Bigquery data table that you created in step 1 (Mine is `annual_enterprise_survey` in this case) and select it by double click.\n\t- ![](assets/google-data-fusion_fc06439858c80d305ed6a7a1ed62b650_md5.webp)\n- (Optional) you can force the destination table of match you input schema by turn on these toggle.\n\t- ![](assets/google-data-fusion_7dfdc307f3b75f41fb65ab0fa6bd683e_md5.webp)\n- Click on the `X` again to go back to the canvas. You completed your first pipeline.\n\n### Step 5: Deploy and Run your pipeline\n- Naming your pipeline ( the name must be unique in the instance). Click on the `Name your pipeline` text on the top left of the screen.\n\t- ![](assets/google-data-fusion_a86d6d3174b32df8be3ba475f8c65a7a_md5.webp)\n- Then click on `Deploy` button on the top right to deploy the pipeline.\n\t- ![](assets/google-data-fusion_f77c1ab73acf0eb740cbd3f0fea3fe60_md5.webp)\n- Wait for the deploy process to complete. You will face this screen\n\t- ![](assets/google-data-fusion_ebe7e25e86bc52a44be5beefcef5008c_md5.webp)\n- Click on the `Run` button at the top center of the screen and wait for it to execute pipelines.\n\t- ![](assets/google-data-fusion_5cf5dec00239ca3db4a54f690b8ae233_md5.webp)\n- After the the status show `Succeeded` you can check your destination table for the output data.\n\t- ![](assets/google-data-fusion_b06407f4aa745186225988b9d32881cc_md5.webp)\n- Here is the end result data in your Bigquery data table.\n\t- ![](assets/google-data-fusion_c9056f816907b772d3da1ebd68ab328b_md5.webp)\n\nAnd thatâ€™s it, youâ€™re done. Congrat on your first data pipeline with Google Data Fusion.\n","title":"Google Data Fusion","short_title":"","description":"Google Data Fusion is a fully managed, cloud-native data integration service that enables users to efficiently build and manage ETL/ELT data pipelines. It is designed to streamline data engineering tasks for enterprise users and is built on top of the open-source project CDAP.","tags":["brainery","engineering/data","devops","google-cloud","Google-Data-Studio","google-data-fusion","ETL","reliability","CDAP","data-engineering","data"],"pinned":false,"draft":false,"hiring":false,"authors":["mickwan1234"],"date":"Wed Jan 24 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/google-data-fusion.md","slugArray":["playground","01_literature","engineering","google-data-fusion"]},{"content":"\n## Introduction\n![](assets/google-dataproc_387aafdc8f7994ea37449a1015265907_md5.webp)\n\nGoogle Dataproc is a fast and easy-to-use, fully managed cloud service for running Apache Spark and Hadoop workloads. It allows users to process and analyze large-scale data efficiently and at scale. Key features and benefits of Google Dataproc include:\n\n- **Fast and Scalable Processing**: Dataproc enables users to run Apache Spark and Hadoop workloads on Google Cloud Platform, taking advantage of its scalable infrastructure and resources.\n- **Integration with Google Cloud Services**: Dataproc integrates seamlessly with other Google Cloud services, such as BigQuery, Cloud Storage, and Cloud Spanner, allowing users to access and analyze data in a centralized manner**[1](https://cloud.google.com/dataproc)**\n- **Data Analytics and Machine Learning**: Dataproc supports data scientists and engineers in building and deploying machine learning models, as well as analyzing data using custom-built applications and open-source libraries.\n- **Managed and Secure Environment**: Google Dataproc provides a fully managed and secure environment for running data processing workloads, ensuring that users can focus on their data analysis and insights without worrying about infrastructure management**[1](https://cloud.google.com/dataproc)**.\n\nOverall, Google Dataproc simplifies big data processing and analysis by providing a fast, scalable, and integrated platform for running Apache Spark and Hadoop workloads on Google Cloud Platform.\n\n## Use cases\nGoogle Cloud Dataproc has a wide range of use cases for processing large datasets and running big data applications. Here are some of the most popular examples:\n\n**Batch processing:**\n\n- **Data warehousing and ETL:**Â Dataproc can be used to extract, transform, and load (ETL) data from various sources into data warehouses like BigQuery.Â It can also be used to process and clean large datasets for data analysis.\n- **Log processing:**Â Dataproc can be used to analyze massive log files from web applications, servers, and other systems to identify trends and troubleshoot issues.\n- **Financial analysis:**Â Dataproc can be used to analyze large financial datasets for fraud detection, risk assessment, and portfolio management.\n- **Scientific simulations:**Â Dataproc can be used to run large-scale scientific simulations in fields like physics, chemistry, and biology.\n- **Image processing:**Â Dataproc can be used to process and analyze large collections of images and videos for applications like object recognition, facial recognition, and image classification.\n\n**Real-time processing:**\n\n- **Data streaming:**Â Dataproc can be used to process data streams in real-time for applications like fraud detection, anomaly detection, and event processing.\n- **Internet of Things (IoT):**Â Dataproc can be used to analyze data from IoT devices in real-time for applications like environmental monitoring, predictive maintenance, and smart city management.\n- **Machine learning:**Â Dataproc can be used to train and deploy machine learning models on large datasets.\n\n**Other use cases:**\n\n- **Web scraping:**Â Dataproc can be used to scrape data from websites at scale.\n- **Social media analysis:**Â Dataproc can be used to analyze large social media datasets for sentiment analysis, topic modeling, and social network analysis.\n- **Genomics:**Â Dataproc can be used to analyze large genomic datasets for research and clinical applications.\n\n## Pricing\n[Dataproc on Compute Engine](https://cloud.google.com/dataproc)Â pricing is based on the size of Dataproc clusters and the duration of time that they run. The size of a cluster is based on the aggregate number ofÂ [virtual CPUs (vCPUs)](https://cloud.google.com/compute/docs/machine-types)Â across the entire cluster, including the master and worker nodes. The duration of a cluster is the length of time between cluster creation and cluster stopping or deletion.\n\nThe Dataproc pricing formula is:Â `$0.010 * # of vCPUs * hourly duration`.\n\nAlthough the pricing formula is expressed as an hourly rate, Dataproc is billed by the second, and all Dataproc clusters are billed in one-second clock-time increments, subject to a 1-minute minimum billing. Usage is stated in fractional hours (for example, 30 minutes is expressed as 0.5 hours) in order to apply hourly pricing to second-by-second use.\n\nDataproc pricing is in addition to theÂ [Compute Engine per-instance price](https://cloud.google.com/compute/pricing)Â for each virtual machine (seeÂ [Use of other Google Cloud resources](https://cloud.google.com/dataproc/pricing#use_of_other_google_cloud_resources)).\n\nAs an example, consider a cluster (with master and worker nodes) that has the following configuration:\n\n|Item|Machine Type|Virtual CPUs|Attached persistent disk|Number in cluster|\n|---|---|---|---|---|\n|Master Node|n1-standard-4|4|500 GB|1|\n|Worker Nodes|n1-standard-4|4|500 GB|5|\n\nThis Dataproc cluster has 24 virtual CPUs, 4 for the master and 20 spread across the workers. For Dataproc billing purposes, the pricing for this cluster would be based on those 24 virtual CPUs and the length of time the cluster ran (assuming no nodes are scaled down or preempted). If the cluster runs for 2 hours, the Dataproc pricing would use the following formula:\n\n`Dataproc charge = # of vCPUs * hours * Dataproc price = 24 * 2 * $0.01 = $0.48`\n\nIn this example, the cluster would also incur charges for Compute Engine and Standard Persistent Disk Provisioned Space in addition to the Dataproc charge (seeÂ [Use of other Google Cloud resources](https://cloud.google.com/dataproc/pricing#use_of_other_google_cloud_resources)). TheÂ [billing calculator](https://cloud.google.com/products/calculator)Â can be used to determine separate Google Cloud resource costs.\n\n## How to setup a Dataproc cluster\n### Prerequisites:\n1. **Google Cloud Platform Account:**\n    - You need a GCP account. If you don't have one, you can sign up for a free trial at [Google Cloud Console](https://console.cloud.google.com/).\n2. **Enable Billing:**\n    - Make sure you have billing enabled for your GCP project.\n3. **Install Google Cloud SDK:**\n    - Install the [Google Cloud SDK](https://cloud.google.com/sdk/docs/install) on your local machine. This SDK includes the **`gcloud`** command-line tool, which you'll use to interact with GCP.\n4. **Create a GCP Project:**\n    - Create a GCP project if you don't already have one. You can do this through the [GCP Console](https://console.cloud.google.com/).\n5. **Enable APIs:**\n    - Enable the necessary APIs for Dataproc and other services. You can do this through the [APIs & Services > Dashboard](https://console.cloud.google.com/apis/dashboard) section in the GCP Console.\n\n### Set Up a Dataproc Cluster:\nNow that you have the prerequisites in place, you can proceed to set up a Dataproc cluster:\n\n1. **Open Cloud Shell:**\n    \n    - Open the [Google Cloud Console](https://console.cloud.google.com/).\n    - Click on the \"Activate Cloud Shell\" button in the upper right corner.\n2. **Create a Dataproc Cluster:**\n    \n    - Use the following **`gcloud`** command to create a Dataproc cluster. Adjust the parameters as needed.\n        \n        ```bash\n        bashCopy code\n        gcloud dataproc clusters create CLUSTER_NAME \\\\\n          --region REGION \\\\\n          --num-workers NUM_WORKERS \\\\\n          --worker-machine-type MACHINE_TYPE \\\\\n          --master-machine-type MASTER_MACHINE_TYPE\n        ```\n        \n        Replace the placeholders (**`CLUSTER_NAME`**, **`REGION`**, **`NUM_WORKERS`**, **`MACHINE_TYPE`**, **`MASTER_MACHINE_TYPE`**) with your desired values.\n        \n3. **Access the Cluster:**\n    \n    - Once the cluster is created, you can access the master node using SSH. You can find the SSH command in the Dataproc cluster details in the GCP Console.\n4. **Run Jobs:**\n    \n    - Submit jobs to your Dataproc cluster using tools like Apache Spark or Hadoop. You can submit jobs using the **`gcloud dataproc jobs submit`** command.\n5. **Delete the Cluster:**\n    \n    - When you're done with the cluster, remember to delete it to avoid incurring unnecessary costs.\n        \n        ```bash\n        bashCopy code\n        gcloud dataproc clusters delete CLUSTER_NAME --region REGION\n        ```\n        \n        Replace the placeholders with your cluster's name and region.\n        \n\n## How to deploy a Spark job on Dataproc (Using Google cloud console)\n### Step 1: In the created cluster click on `Submit Job` button on the top right of the main console screen\n![](assets/google-dataproc_63ff07262ca89f53636f0cbf3ac31e7f_md5.webp)\n\n### Step 2: Fill all necessary field in the job creation modal:\n![](assets/google-dataproc_bcea66253717094f382ba5f6a600ec5d_md5.webp)\n- Job ID: job unique name across the cluster\n- Job Type: the type of the job that you submit to Dataproc including (in this demo weâ€™ll use PySpark):\n![](assets/google-dataproc_f83159ba2f2f39b3012c233685a6944e_md5.webp)\n- Main file: the directory of main job file from GCS or HDFS or inside the compute engine.\n- All others field is optional.\n- After you fill in the necessary input i should be something like this:\n![](assets/google-dataproc_6fa510f032671ede4c6f2958d31e4536_md5.webp)\n\n- Then press `Submit` to submit the job\n\n### Step 3:\nAfter submitting the job you should be able to similar screen to this:\n![](assets/google-dataproc_887de3a75e864cf1da75c2b91ac502cb_md5.webp)\n\nWait for the job status change to succeeded (or failed):\n![](assets/google-dataproc_062214d530d570f03dee791c4b32241e_md5.webp)\n\nAnd that is how you run a Spark ( or Hadoop) job on Google Cloud Dataproc.\nFull video step by step:\n![](assets/google-dataproc_830c086903ad2dcaf7bdece0af8e3647_md5_compressed.mp4)\n\n","title":"Google Dataproc","short_title":"","description":"Google Dataproc is a fast and easy-to-use, fully managed cloud service for running Apache Spark and Hadoop workloads. It allows users to process and analyze large-scale data efficiently and at scale.","tags":["brainery","engineering/data","data","data-engineering","google-dataproc","hadoop","streaming","ETL"],"pinned":false,"draft":false,"hiring":false,"authors":["mickwan1234"],"date":"Wed Jan 24 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/google-dataproc.md","slugArray":["playground","01_literature","engineering","google-dataproc"]},{"content":"\n## What is HTMX\nHTMX is a hypermedia-oriented Javscript library for creating dynamic website with minimal Javascript code. Specifically, it extend HTML as a hypermedia and address the issues with legacy HTML applications.\nGiving user access to `AJAX`, `Websocket`, `Server Sent Event (SSE)`, `Css Transition`, ...\n\n## Hypermedia-Oriented\n`Hypermedia-Oriented` approach involves clients and servers sharing a common understanding of a set of hypermedia elements in data representations. Clients can use elements to trigger requests, navigate states while Servers provide the necessary hypermedia options in the responses. \nIn this way, any modification in server side wont break the client application as long as the client can recognize the defined hypermedia options.\n\n## The Core Concept Of HTMX\n### Extending HTML with Attributes\nHTMX extend the core idea of HTML as a hypertext by adding additional anchor attributes for allowing more possibilities such as:\n\n- Allow any element to send request, not just `form` element.\n- Allow any HTTP method, not just `POST` and `GET` can be used.\n- Allow more event, not just `click` or `form submit` can trigger requests.\n- All other elements now can be the target for update by the request, not alway the entire `window`.\n- Allow using `AJAX`, `Websocket`, `SSE` without writing Javascript.\n\n### Let's see a simple example: Active search\n```html\n<input type=\"text\" name=\"q\"\n    hx-get=\"/trigger_delay\"\n    hx-trigger=\"keyup changed delay:500ms\"\n    hx-target=\"#search-results\"\n    placeholder=\"Search...\"\n>\n<div id=\"search-results\"></div>\n```\n- `hx-get` attribute holds the API endpoint and HTTP method for sending request after triggered.\n- `hx-trigger` defines the condition for the event to be triggered. In this case, it will fire a GET request 500 milliseconds after key up event only if the input has been changed.\n- `hx-target` targets the element that will be inserted into by server response data.\n\nThis example showcases how HTMX simplifies the creation of interactive user interfaces. It replaces the need for extensive JavaScript (or the need for React) code in various common UI techniques, including infinite scrolling, toasts, conditional rendering, loading indicators, error handling, paging, and [websockets]() and SSE integration. HTMX offers a more streamlined approach to web development. [Explore more examples](https://htmx.org/examples/)\n\n### The role of Javascript in Htmx\nWhile HTMX aims to minimize the need for JavaScript, it still provides a small set of APIs for interaction with HTMX.\nFor instance, these method are tailored to support htmx-styled AJAX requests:\n\n```javascript\nhtmx.ajax('GET', '/example', '#myDiv')\n\nhtmx.ajax('GET', '/example', {target:'#myDiv', swap:'outerHTML'})\n\nhtmx.ajax('GET', '/example', '#myDiv').then(() => {\n    // this code will be executed after the 'htmx:afterOnLoad' event,\n    // and before the 'htmx:xhr:loadend' event\n    console.log('Content inserted successfully!');\n});\n```\n\n### Server Generate Events \nHTMX also facilitates the triggering of events on the client-side, based on server responses. For instance, a response containing the header `HX-Trigger: contacts-updated` will trigger the `contacts-updated` event at the specified HTML element, and the corresponding event listener will be activated.\n```html\n<table hx-get=\"/contacts/table\" hx-trigger=\"contacts-updated from:body\"> (2)\n    ...\n</table>\n\n<script>\n    document.body.addEventListener(\"contacts-updated\", function(evt){\n        alert(\"contacts-updated was triggered!\");\n    })\n</script>\n```\nOr listen only to the status code of server responses\n```javascript\ndocument.body.addEventListener('htmx:beforeSwap', function(evt) { (1)\n    if(evt.detail.xhr.status === 404){ (2)\n    // If the response code is a 404, show the user a dialog\n        showNotFoundError();\n    }\n});\n```\n\n[More about Htmx Usage](https://hypermedia.systems/book/contents/)\n\n## The Advantages Of HTMX\n### Minimal Of Javacsript - Reduce Development Complexity\nHTMX reduces an amount of Javascript code needed to create a dynamic Web applications. This approach leads to a more cleaner and maintainable code base.\n\n### Improved Performance\nHTMX is lightweight, leading to faster initial page loads and reduced client-side processing. This results in a better user experience, especially for web applications with frequent UI updates. However, in large-scale applications with frequent UI updates, React is better in performance thanks to its virtual DOM.\n\n### Locality of Behaviour (LoB)\nHTMX emphasizes the locality of behavior, enabling developers to understand code functionality within a small, self-contained portion. This enhances code transparency and maintainability while streamlining development efforts.\n\n### Product Agility\nHTMX works in improving product agility as it has been proven in [a real-world transition from React to htmx](https://htmx.org/essays/a-real-world-react-to-htmx-port/).\n\n## The Concerns With HTMX\n### Violation of Separation of Concerns (SOC)\nHTMX can blur the lines between data management and presentation, as backends must respond with HTMX content rather than traditional RESTful APIs with Json. As a result, some many different clients such as mobile app, browser, ... might not able to consume the API.\n\n### Trade-Offs in Control\nUsing HTMX mean shifting in the balance of control between the client and server. The client is kept as *\"slim\"* as possible and do all the *\"heavy lifting\"* on the Backend. While, this might be a good thing for Backend Engineers but may require adjustments in development practices.\n\n## When To Use ? \nHTMX is a game-changer in web development, streamlining your codebase and team dynamics. Consider HTMX when your website:\n- Need rapid initial rendering and strong SEO.\n- Primarily display Text and Images.\n- Focus on CRUD operations.\n- Employs well-defined UI blocks that update separately.\n\nHTMX may not be the best fit when:\n- Your UI has complex interdependencies.\n- Offline functionality is essential.\n- Frequent UI updates are the norm.\n- Your team is not yet HTMX-savvy.\n\n## Conclusion\nHTMX offers a fresh approach to web development, enhancing product agility and simplifying the creation of dynamic, interactive web applications. While it comes with some considerations, it opens up new possibilities in web development and offers an appealing alternative to traditional JavaScript frameworks.\n\n## References\n- https://www.youtube.com/watch?v=3GObi93tjZI&t=1406s\n- https://hypermedia.systems/\n- https://www.reddit.com/r/htmx/comments/r13e9i/xtmx_limitations_and_pitfalls/\n- https://www.builder.io/blog/htmx-vs-react\n- https://htmx.org/examples/\n","title":"Introducing HTMX - Navigating the Advantages and Concerns","short_title":"","description":"A comprehensive exploration of HTMX, a JavaScript library that extends HTML as a hypermedia, addressing the limitations of legacy HTML applications.","tags":["htmx","frontend"],"pinned":false,"draft":false,"hiring":false,"authors":["namanh"],"date":"Mon Dec 18 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/introducing-htmx-navigating-the-advantages-and-concerns.md","slugArray":["playground","01_literature","engineering","introducing-htmx-navigating-the-advantages-and-concerns"]},{"content":"\n### Motivation\nIn traditional software development, defining models and API clients is a fundamental step when using strongly-typed languages.\n\n- **Models**: represent various data structures such as objects, request parameters, and response types.\n- **API client**: acts as an intermediary, handling requests to the backend and binding the data to the models.\n\nSyncing these elements between the backend and frontend is important in the software development process.However, this synchronization is often manual and error-prone, leading to inconsistencies that can cause runtime failures and bugs. \nTo address this challenge, typesafe client-server architecture introduces a code generation layer that bridges the gap between frontend and backend more effectively.\n\nUsing API definitions in JSON or YAML format as the single source of truth, the code generator automatically validates and generates the necessary models and API clients for the frontend and corresponding models and API endpoints for the backend. This ensures that both ends of the application speak the same \"data language,\" and any changes in the API are reflected on both sides promptly and accurately.\n\n![](assets/typesafe-client-server.webp)\n\nThis automated approach not only minimizes human error but also streamlines the development process, as developers can now focus on building features rather than fixing mismatches between the FE and BE. By adopting this typesafe client-server system, teams can enhance collaboration, accelerate time-to-market, and deliver a more reliable product.\n\n### Benefits\n- **Enhanced Reliability**: The automatic code generation ensures consistency between the frontend and backend, reducing the risk of runtime failures.\n- **Early Error Detection**: Any inconsistencies or errors in the API are detected during the code generation process, allowing for early detection and resolution.\n- **Improved Developer Productivity**: Developers can focus on feature development instead of manual synchronization tasks, increasing overall productivity.\n- **Security Enhancements**: The typesafe client-server architecture helps prevent security vulnerabilities by ensuring that data is properly handled and transferred between the frontend and backend.\n- **Documentation and Collaboration**: API definitions serve as documentation and a common language for developers and stakeholders, facilitating collaboration and understanding.\n- **Refactoring and Scalability**: When changes are made to the API, the code generation process helps identify and update affected areas, making refactoring and scalability easier.\n\n### How to use effectively\n- **API First Development**: Start by designing API definitions that accurately represent the desired functionality and data structures.\n- **Automate Code Generation**: Set up automation tools to generate code whenever changes are made to the API definitions. This ensures that the frontend and backend stay in sync.\n- **Continuous Integration**: As part of the CI/CD pipeline, validate the API definitions and ensure that the auto-generated code does not have manual edits. This maintains the integrity of the synchronization process.\n- **Testing**: Conduct thorough unit and integration tests for both the frontend and backend. With Swagger, automated tests can be generated and run based on the API definitions, further ensuring the reliability of the system.\n- **Documentation**: Utilize tools like Swagger UI or ReDoc to provide interactive API documentation. This helps developers and non-technical stakeholders understand and experiment with the API.\n- **Version Control**: As the API evolves, make sure to version it to manage changes effectively and maintain backward compatibility.\n\n### Supported frameworks/tools\n[openapi-generator](https://openapi-generator.tech/): Official tool to validate Swagger spec and generate clients. Using Axios for client requests.\n[Orval](https://next.orval.dev/): Generate code in various clients (axios, swr, react-queryâ€¦). Support mock data with [msw](https://mswjs.io/) and [faker](https://fakerjs.dev/)\n\n### References\n- https://openapi-generator.tech\n- https://orval.dev\n- https://docs.stoplight.io/docs/spectral/eb68e7afd463e-spectral-in-java-script\n- https://swagger.io/specification\n- https://trpc.io\n","title":"Typesafe Client Server","short_title":"","description":"A code generation layer that bridges the gap between frontend and backend more effectively.","tags":["code-generation","typesafe","fullstack"],"pinned":false,"draft":false,"hiring":false,"authors":["antran"],"date":"Wed Dec 06 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/typesafe-client-server.md","slugArray":["playground","01_literature","engineering","typesafe-client-server"]},{"content":"\nWhen working with websites and managing the computers that show them, we run into two important ideas: redirect URLs and rewrite URLs. These ideas are like tools that help us make websites work better for people. They help us make websites easier to find on search engines, and they help us make the paths on websites smoother. In this guide, we're going to explore these tools together. We'll learn what makes them different and how we can use them to make websites even cooler.\n\n## Redirect URLs: Navigating the Path\nA redirect URL is a technique used to guide users from one URL to another, often due to a webpage's relocation, restructuring, or a change in content. Imagine it as a virtual signpost that ensures visitors reach their desired destination without wandering in the digital wilderness. Redirects come in various flavors, but the two most common types are:\n\n### 1. 301 Permanent Redirect\nThe 301 redirect is a magician's wand for SEO. It indicates that a page has moved permanently to a new location, preserving almost all of its link equity and SEO juice. This not only assists users in finding the new location but also guides search engines to update their indexes.\n\n### 2. 302 Temporary Redirect\nThe 302 redirect is more like a \"Come back soon\" note. It informs browsers and search engines that a page has temporarily moved. While it does redirect users to a new location, it's not meant for permanent changes.\n\n**How Redirect URLs Work: A Closer Look**\n1. The user types a URL into the browser's address bar or clicks on a link.\n2. The server follows predefined rules, directing requests for the URL to be externally redirected to a new URL. The server then instructs the user's browser to go to this new URL.\n3. The browser automatically navigates to the new URL.\n4. The server provides the browser with the content of the new URL, which users can then view in their browser.\n\n## Rewrite URLs: Crafting the Illusion\nIf redirect URLs are signposts, then rewrite URLs are masterful illusions. URL rewriting involves modifying the URL that a user enters or clicks on, usually to make it more user-friendly, descriptive, or structured. This modification is typically done on the server side before the request is processed. The rewritten URL is then used to fetch the appropriate resource or content from the server.\n\n### 1. Clean URLs\nRewrite URLs can transform complex, dynamic URLs into clean, human-readable versions. For instance, converting `https://example.com/products.php?id=123` into `https://example.com/products/123`.\n\n### 2. SEO Enhancement\nClean, concise URLs not only appeal to users but also win favor with search engines. Rewriting URLs to include relevant keywords can boost SEO efforts and improve search engine ranking. For instance:\n\n|Good URL|Bad URL|\n|---|---|\n|https://ahrefs.com/blog/seo-friendly-urls/|https://ahrefs.com/blog/seo-friendly-urls/?utm_source=google&utm_medium=cpc&utm_campaign=seo|\n|https://moz.com/blog/15-seo-best-practices-for-structuring-urls|https://moz.com/blog/15-seo-best-practices-for-structuring-urls?ref=homepage&date=2023-09-05|\n|https://seranking.com/blog/create-seo-friendly-url/|https://seranking.com/blog/index.php?post_id=1234&create-seo-friendly-url|\n\n### 3. Improved User Experience\nRewrite URLs can enhance the user experience by making URLs more memorable, shareable, and aesthetically pleasing. A user is more likely to click on `https://example.com/contact` than a convoluted URL.\n\n**How Rewrite URLs Work: A Closer Look**\nNow, let's delve into the process of how URL rewriting works using an example:\n1. The user types http://example.com/product/macbook-pro into the browser's address bar or clicks on a link.\n2. The server follows predefined rules and rewrites http://my-app/product/macbook-pro to http://my-app/product?id=macbook-pro. The server processes the rewritten URL and returns the content to the browser.\n\n## Key Differences and How to Choose\nRedirect URLs and rewrite URLs share a common goal: to lead users to the right place. However, they achieve this goal differently:\n\n- **Purpose**: Redirect URLs are about physically moving users from one URL to another, while rewrite URLs focus on altering the appearance of URLs.\n  \n- **Type of Change**: Redirects involve a change in the browser's URL bar, while URL rewriting doesn't change the URL displayed in the browser.\n\n- **HTTP Response**: Redirects typically use HTTP status codes like 301 or 302, signaling browsers and search engines about the nature of the move. URL rewriting doesn't change the HTTP response.\n\n**Choosing the Right Approach**: If you're moving or restructuring content, use redirect URLs. If you want cleaner, SEO-friendly URLs without changing the content's location, opt for URL rewriting.\n\n## Conclusion\nRedirect URLs and rewrite URLs are threads that weave together seamless user experiences, enhanced SEO, and organized website structures. By understanding the step-by-step processes of these techniques, you hold the power to guide users through the digital landscape and leave an indelible mark on the virtual world.\n\n## References\n- https://en.wikipedia.org/wiki/URL_redirection\n- https://en.wikipedia.org/wiki/Rewrite_engine\n- https://weblogs.asp.net/owscott/rewrite-vs-redirect-what-s-the-difference\n","title":"URL Redirect vs. Rewrite; Whatâ€™s the difference?","short_title":"","description":"When working with websites and managing the computers that show them, we run into two important ideas: redirect URLs and rewrite URLs. These ideas are like tools that help us make websites work better for people. They help us make websites easier to find on search engines, and they help us make the paths on websites smoother. In this guide, we're going to explore these tools together. We'll learn what makes them different and how we can use them to make websites even cooler.","tags":["engineering","url-redirect","url-rewrite","http","seo"],"pinned":false,"draft":false,"hiring":false,"authors":["trankhacvy"],"date":"Wed Sep 06 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","filePath":"playground/01_literature/engineering/url-redirect-vs-rewrite.md","slugArray":["playground","01_literature","engineering","url-redirect-vs-rewrite"]}],"isListPage":true},"__N_SSG":true}