{"pageProps":{"directoryTree":{"/pinned":{"label":"Pinned Notes","children":{"/culture/readme":{"label":"Notes on our culture","children":{}},"/culture/ogif-intro":{"label":"OGIF - Oh God It's Friday","children":{}}}},"/":{"label":"Home","children":{"/earn":{"label":"Earn","children":{"/earn/000-productivity":{"label":"Productivity","children":{}},"/earn/001-quality":{"label":"Software Quality","children":{}},"/earn/002-open-source":{"label":"Open Source","children":{}},"/earn/003-liquidity":{"label":"Liquidity","children":{}},"/earn/readme":{"label":"👾 Open bounties","children":{}}}},"/playground":{"label":"Playground","children":{"/playground/rfc":{"label":"RFC","children":{"/playground/rfc/readme":{"label":"RFCs","children":{}},"/playground/rfc/000-template":{"label":"000 RFC template","children":{}}}},"/playground/topics":{"label":"Topics","children":{"/playground/topics/blockchain":{"label":"Blockchain","children":{"/playground/topics/blockchain/build-custom-ai-agent-with-elizaos":{"label":"Build custom AI Agent with ElizaOS","children":{}},"/playground/topics/blockchain/web3-development-with-foundry":{"label":"Web3 Development with Foundry","children":{}},"/playground/topics/blockchain/cross-chain-transfers-implementing-a-token-swap-from-base-chain-to-bitcoin":{"label":"Implement a Token Swap from the Base chain to Bitcoin for cross-chain transactions","children":{}},"/playground/topics/blockchain/ton_core_concept":{"label":"Ton's base concepts","children":{}},"/playground/topics/blockchain/ton_blockchain_of_blockchains":{"label":"Ton: Blockchain of blockchains","children":{}},"/playground/topics/blockchain/introduce-to-solana-token-2022-new-standard-to-create-a-token-in-solana":{"label":"Introduce to Solana Token 2022 - new standard to create a token in solana","children":{}},"/playground/topics/blockchain/solana-core-concept":{"label":"Solana core concepts","children":{}},"/playground/topics/blockchain/metaplex-nft-compression":{"label":"Metaplex NFT Compression","children":{}},"/playground/topics/blockchain/plonky2":{"label":"Plonky2","children":{}},"/playground/topics/blockchain/polygon-zkevm-architecture":{"label":"Polygon zkEVM architecture","children":{}},"/playground/topics/blockchain/starknet-architecture":{"label":"StarkNet architecture","children":{}},"/playground/topics/blockchain/zk-snarks":{"label":"zk-SNARKs","children":{}},"/playground/topics/blockchain/layer-2":{"label":"Layer 2: Scaling Solutions for Ethereum","children":{}},"/playground/topics/blockchain/solana-account":{"label":"Solana Account","children":{}},"/playground/topics/blockchain/foundational-topics":{"label":"Foundational Topics","children":{"/playground/topics/blockchain/foundational-topics/zero-knowledge-proofs":{"label":"Zero-knowledge Proofs","children":{}},"/playground/topics/blockchain/foundational-topics/blocks":{"label":"Blocks","children":{}},"/playground/topics/blockchain/foundational-topics/distributed-systems":{"label":"Distributed systems","children":{}},"/playground/topics/blockchain/foundational-topics/pos":{"label":"PoS","children":{}},"/playground/topics/blockchain/foundational-topics/smart-contract":{"label":"Smart Contract","children":{}},"/playground/topics/blockchain/foundational-topics/topics":{"label":"Topics","children":{}}}},"/playground/topics/blockchain/multisign-wallet":{"label":"Multisign wallet","children":{}},"/playground/topics/blockchain/anchor-framework":{"label":"Anchor framework","children":{}},"/playground/topics/blockchain/blockchain-bridge":{"label":"Blockchain Bridge","children":{}},"/playground/topics/blockchain/nft-fractionalization":{"label":"NFT Fractionalization","children":{}},"/playground/topics/blockchain/how-tokens-work-on-solana":{"label":"How Tokens Work on Solana","children":{}},"/playground/topics/blockchain/liquidity-pool":{"label":"Liquidity pool","children":{}}}},"/playground/topics/frontend":{"label":"Frontend","children":{"/playground/topics/frontend/report":{"label":"Report","children":{"/playground/topics/frontend/report/frontend-report-march-2025":{"label":"March 2025","children":{}},"/playground/topics/frontend/report/frontend-report-february-2025":{"label":"February 2025","children":{}},"/playground/topics/frontend/report/frontend-report-january-2025":{"label":"January 2025","children":{}},"/playground/topics/frontend/report/frontend-report-second-half-of-november-2024":{"label":"Nov 2024 (Second Half)","children":{}},"/playground/topics/frontend/report/frontend-report-first-half-of-november-2024":{"label":"Nov 2024 (First Half)","children":{}},"/playground/topics/frontend/report/frontend-report-october-2024":{"label":"October 2024","children":{}},"/playground/topics/frontend/report/frontend-report-september-2024":{"label":"September 2024","children":{}},"/playground/topics/frontend/report/frontend-report-august-2024":{"label":"August 2024","children":{}},"/playground/topics/frontend/report/frontend-report-july-2024":{"label":"July 2024","children":{}}}},"/playground/topics/frontend/react":{"label":"React","children":{"/playground/topics/frontend/react/code-splitting":{"label":"Code splitting","children":{}},"/playground/topics/frontend/react/component-composition-patterns":{"label":"Component composition patterns","children":{}},"/playground/topics/frontend/react/design-system-integration":{"label":"Design system integration","children":{}},"/playground/topics/frontend/react/hook-architecture":{"label":"Hook architecture","children":{}},"/playground/topics/frontend/react/rendering-strategies":{"label":"Rendering strategies","children":{}},"/playground/topics/frontend/react/state-management-strategy":{"label":"State management strategy","children":{}},"/playground/topics/frontend/react/testing-strategies":{"label":"Testing strategies","children":{}}}},"/playground/topics/frontend/websockets":{"label":"WebSockets","children":{}},"/playground/topics/frontend/from-markup-to-pixels-a-look-inside-the-dom-cssom-and-render-tree":{"label":"From Markup to Pixels - A look inside the DOM, CSSOM, and Render Tree","children":{}},"/playground/topics/frontend/window-and-iframe-communication":{"label":"Window and iframe communication","children":{}},"/playground/topics/frontend/adoption-of-pnpm":{"label":"Adoption Of Pnpm","children":{}},"/playground/topics/frontend/applying-mock-service-worker-msw-for-seamless-web-development":{"label":"Applying Mock Service Worker (MSW) for Seamless Web Development","children":{}},"/playground/topics/frontend/render-optimization-in-data-fetching-libraries":{"label":"Render optimization in data-fetching libraries","children":{}},"/playground/topics/frontend/a-fragment-colocation-pattern-with-react-apollo-graphql":{"label":"A Fragment Colocation Pattern with React & Apollo GraphQL","children":{}},"/playground/topics/frontend/scroll-driven-animations":{"label":"Scroll-driven animations","children":{}},"/playground/topics/frontend/react-server-component":{"label":"React Server Components, NextJs Route and Data Fetching","children":{}},"/playground/topics/frontend/url-formats-for-sharing-via-social-networks":{"label":"URL formats for sharing via social networks","children":{}},"/playground/topics/frontend/shadow-dom":{"label":"Shadow DOM","children":{}},"/playground/topics/frontend/choosing-the-right-javascript-framework-a-deep-dive-into-react-vs-angular-vs-vue":{"label":"Choosing The Right Javascript Framework A Deep Dive Into React Vs Angular Vs Vue","children":{}},"/playground/topics/frontend/lessons-learned-from-being-a-part-of-corporate-micro-frontend-implementation":{"label":"Lessons Learned From Being A Part Of Corporate Micro Frontend Implementation","children":{}},"/playground/topics/frontend/retain-scroll-position-in-infinite-scroll":{"label":"Retain scroll position in infinite scroll","children":{}},"/playground/topics/frontend/continuous-translation":{"label":"Continuous Translation","children":{}},"/playground/topics/frontend/what-is-pnpm-compare-to-npmyarn":{"label":"What is PNPM Compare To NPM/Yarn","children":{}},"/playground/topics/frontend/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit":{"label":"Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit","children":{}},"/playground/topics/frontend/i18n-frontend-guideline":{"label":"I18n Frontend Guideline","children":{}},"/playground/topics/frontend/from-multi-repo-to-monorepo-a-case-study-with-nghenhan-turbo-monorepo":{"label":"From Multi Repo To Monorepo A Case Study With Nghenhan Turbo Monorepo","children":{}},"/playground/topics/frontend/why-micro-frontend":{"label":"Why Micro Frontend","children":{}},"/playground/topics/frontend/why-we-chose-our-tech-stack-accelerating-development-with-a-robust-frontend-solution":{"label":"Why We Chose Our Tech Stack Accelerating Development With A Robust Frontend Solution","children":{}},"/playground/topics/frontend/tackling-server-state-complexity-in-frontend-development":{"label":"Tackling Server State complexity in Frontend Development","children":{}},"/playground/topics/frontend/variable-fonts":{"label":"Variable Fonts","children":{}},"/playground/topics/frontend/when-should-we-use-usereducer-instead-of-usestate":{"label":"When should we use useReducer instead of useState?","children":{}},"/playground/topics/frontend/preserving-and-resetting-state-in-react":{"label":"Preserving and Resetting state in React","children":{}},"/playground/topics/frontend/mixpanel":{"label":"Mixpanel","children":{}},"/playground/topics/frontend/validation-with-zod":{"label":"Validation with Zod","children":{}},"/playground/topics/frontend/parse-dont-validate-in-typescript":{"label":"Parse, don't validate in TypeScript","children":{}},"/playground/topics/frontend/webassembly":{"label":"Webassembly","children":{}},"/playground/topics/frontend/singleton-design-pattern-in-javascript":{"label":"Singleton Design Pattern in Javascript","children":{}},"/playground/topics/frontend/an-introduction-to-atomic-css":{"label":"An Introduction to Atomic CSS","children":{}},"/playground/topics/frontend/intro-to-indexeddb":{"label":"Intro to IndexedDB","children":{}},"/playground/topics/frontend/the-fundamental-of-web-performance":{"label":"The fundamental of web performance","children":{}},"/playground/topics/frontend/wai-aria":{"label":"WAI-ARIA","children":{}},"/playground/topics/frontend/build-polymorphic-react-components-with-typescript":{"label":"Build polymorphic React components with Typescript","children":{}},"/playground/topics/frontend/threejs":{"label":"Threejs","children":{"/playground/topics/frontend/threejs/cameras-in-threejs":{"label":"Cameras in ThreeJS","children":{}}}},"/playground/topics/frontend/prevent-layout-thrashing":{"label":"Prevent Layout Thrashing","children":{}},"/playground/topics/frontend/pure-css-parallax":{"label":"Pure CSS Parallax","children":{}},"/playground/topics/frontend/css-container-queries":{"label":"CSS Container Queries","children":{}},"/playground/topics/frontend/hsl-color":{"label":"HSL Color","children":{}},"/playground/topics/frontend/mitigate-blocking-the-main-thread":{"label":"Mitigate blocking the main thread","children":{}},"/playground/topics/frontend/css-in-js":{"label":"CSS in JS","children":{}},"/playground/topics/frontend/dark-mode-flickers-a-white-background-for-a-fraction-of-a-second":{"label":"Dark mode flickers a white background for a fraction of a second","children":{}},"/playground/topics/frontend/why-dom-manipulation-is-slow":{"label":"Why DOM manipulation is slow?","children":{}},"/playground/topics/frontend/why-virtual-dom-is-fast":{"label":"Why Virtual DOM is fast?","children":{}},"/playground/topics/frontend/vitejs-native-modules":{"label":"ViteJS native modules","children":{}},"/playground/topics/frontend/javascript-modules":{"label":"JavaScript modules","children":{}},"/playground/topics/frontend/atomic-design-pattern":{"label":"Atomic Design Pattern","children":{}},"/playground/topics/frontend/focus-trap":{"label":"Focus trap","children":{}},"/playground/topics/frontend/html-inert":{"label":"HTML inert","children":{}},"/playground/topics/frontend/useeffect-double-calls-in-react-18":{"label":"useEffect double calls in React 18","children":{}},"/playground/topics/frontend/react-18":{"label":"React 18","children":{}},"/playground/topics/frontend/remix-versus-nextjs":{"label":"Remix Versus Nextjs","children":{}},"/playground/topics/frontend/zaplib-post-mortem":{"label":"Zaplib post-mortem","children":{}},"/playground/topics/frontend/parallelism-in-javascript":{"label":"Parallelism in JavaScript","children":{}},"/playground/topics/frontend/mpa-spa-and-partial-hydration":{"label":"MPA, SPA and Partial Hydration","children":{}},"/playground/topics/frontend/micro-frontends-microservices-for-frontend-development":{"label":"Micro Frontends Microservices For Frontend Development","children":{}},"/playground/topics/frontend/using-correct-html-element-to-increase-website-accessibility":{"label":"Using Correct Html Element To Increase Website Accessibility","children":{}},"/playground/topics/frontend/fundamental-end-to-end-frontend-testing-with-cypress":{"label":"Fundamental End To End Frontend Testing With Cypress","children":{}},"/playground/topics/frontend/different-ways-to-test-react-application":{"label":"Different Ways To Test React Application","children":{}},"/playground/topics/frontend/hoc-renderprops-and-hook-in-reactjs":{"label":"Hoc Renderprops And Hook In Reactjs","children":{}},"/playground/topics/frontend/remove-unused-css-styles-from-bootstrap-using-purgecss":{"label":"Remove Unused CSS Styles From Bootstrap Using Purgecss","children":{}},"/playground/topics/frontend/be-careful-with-your-code-splitting-setup":{"label":"Be Careful With Your Code Splitting Setup","children":{}}}},"/playground/topics/ai":{"label":"AI","children":{"/playground/topics/ai/securing-your-remote-mcp-servers":{"label":"Securing your remote MCP servers","children":{}},"/playground/topics/ai/tool-level-security-for-remote-mcp-servers":{"label":"Tool-Level Security for Remote MCP Servers","children":{}},"/playground/topics/ai/model-context-protocol":{"label":"Intro to Model Context Protocol","children":{}},"/playground/topics/ai/digest":{"label":"Digest","children":{"/playground/topics/ai/digest/ai-digest-02":{"label":"AI digest #2 New command Aider, OpenHands, Qwen2.5 Coder 32B, Predicted Output","children":{}},"/playground/topics/ai/digest/ai-digest-01":{"label":"AI digest #1 Aider reasoning, OpenAI Realtime API, Cline - pre Claude-dev ","children":{}}}},"/playground/topics/ai/copilots":{"label":"Copilots","children":{"/playground/topics/ai/copilots/projects-operations":{"label":"Project Operations Copilots","children":{}},"/playground/topics/ai/copilots/team-copilots":{"label":"Team Copilots","children":{}}}},"/playground/topics/ai/text-to-mongodb":{"label":"Natural Language to Database Queries: Text-to-MongoDB","children":{}},"/playground/topics/ai/use-cases":{"label":"Use Cases","children":{"/playground/topics/ai/use-cases/salesforce":{"label":"Salesforce use cases","children":{}},"/playground/topics/ai/use-cases/yelp":{"label":"Yelp use cases","children":{}}}},"/playground/topics/ai/building-llm-system":{"label":"Building LLM System","children":{"/playground/topics/ai/building-llm-system/trace-pillar":{"label":"Tracing","children":{}},"/playground/topics/ai/building-llm-system/use-cases-for-llm-applications":{"label":"Use cases for LLM applications","children":{}},"/playground/topics/ai/building-llm-system/quantization-in-llm":{"label":"Quantization for large language models","children":{}},"/playground/topics/ai/building-llm-system/graphrag":{"label":"GraphRAG - Building a knowledge graph for RAG system","children":{}},"/playground/topics/ai/building-llm-system/guardrails-in-llm":{"label":"Guardrails in LLM","children":{}},"/playground/topics/ai/building-llm-system/react-in-llm":{"label":"ReAct(Reason + Act) in LLM","children":{}},"/playground/topics/ai/building-llm-system/rewoo-in-llm":{"label":"ReWOO: Reasoning without observation - A deeper look","children":{}},"/playground/topics/ai/building-llm-system/model-selection":{"label":"Model selection","children":{}},"/playground/topics/ai/building-llm-system/logs-pillar":{"label":"Logging","children":{}},"/playground/topics/ai/building-llm-system/metric-pillar":{"label":"Metrics","children":{}},"/playground/topics/ai/building-llm-system/observability-in-ai-platforms":{"label":"Observability in AI platforms","children":{}},"/playground/topics/ai/building-llm-system/intent-classification-by-llm":{"label":"Intent classification by LLM","children":{}},"/playground/topics/ai/building-llm-system/llm-as-a-judge":{"label":"LLM as a judge","children":{}},"/playground/topics/ai/building-llm-system/the-rise-of-ai-applications-with-llm":{"label":"The rise of AI applications with LLM","children":{}},"/playground/topics/ai/building-llm-system/evaluation-guideline-for-llm-application":{"label":"Evaluation guidelines for LLM applications","children":{}},"/playground/topics/ai/building-llm-system/prevent-prompt-injection":{"label":"Prevent prompt injection","children":{}},"/playground/topics/ai/building-llm-system/building-llm-system":{"label":"§ Building LLM system","children":{}},"/playground/topics/ai/building-llm-system/multi-agent-collaboration-for-task-completion":{"label":"Multi-agent collaboration for task completion","children":{}},"/playground/topics/ai/building-llm-system/multimodal-in-rag":{"label":"Multimodal in RAG","children":{}}}},"/playground/topics/ai/evaluate-chatbot-agent-by-simulated-user":{"label":"Evaluate Chatbot Agent by User Simulation","children":{}},"/playground/topics/ai/journey-of-thought-prompting":{"label":"Journey of Thought Prompting: Harnessing AI to Craft Better Prompts","children":{}},"/playground/topics/ai/llm-tracing-in-ai-system":{"label":"LLM tracing in AI system","children":{}},"/playground/topics/ai/caching-with-rag-system":{"label":"Evaluating caching in RAG systems","children":{}},"/playground/topics/ai/generative-ui":{"label":"What is Generative UI?","children":{}},"/playground/topics/ai/hybrid-search":{"label":"Evaluating search engine in RAG systems","children":{}},"/playground/topics/ai/re-ranking-in-rag":{"label":"Re-ranking in RAG","children":{}},"/playground/topics/ai/function-calling":{"label":"Function calling in AI agents","children":{}},"/playground/topics/ai/thumbs-up-and-thumbs-down-pattern":{"label":"Thumbs up and Thumbs down pattern","children":{}},"/playground/topics/ai/supervisor-ai-agents":{"label":"Building Agent Supervisors to Generate Insights","children":{}},"/playground/topics/ai/how-we-crafted-the-ogif-summarizer-bot-to-streamline-weekly-knowledge-sharing":{"label":"How we crafted the OGIF summarizer bot to streamline weekly knowledge-sharing","children":{}},"/playground/topics/ai/raptor-llm-retrieval":{"label":"RAPTOR: Tree-based Retrieval for Language Models","children":{}},"/playground/topics/ai/proximal-policy-optimization":{"label":"Proximal Policy Optimization","children":{}},"/playground/topics/ai/explaining-gradient-descent-in-machine-learning-with-a-simple-analogy":{"label":"Explaining Gradient Descent in Machine Learning with a simple analogy","children":{}},"/playground/topics/ai/developing-rapidly-with-generative-ai":{"label":"Developing rapidly with Generative AI","children":{}},"/playground/topics/ai/rlhf-with-open-assistant":{"label":"RLHF with Open Assistant","children":{}},"/playground/topics/ai/story-map-for-llms":{"label":"Story map for LLMs","children":{}},"/playground/topics/ai/chunking-strategies-to-overcome-context-limitation-in-llm":{"label":"Chunking strategies to overcome context limitation in LLM","children":{}},"/playground/topics/ai/llm-s-accuracy-self-refinement":{"label":"LLM's Accuracy - Self Refinement","children":{}},"/playground/topics/ai/llm-query-caching":{"label":"Query Caching for Large Language Models","children":{}},"/playground/topics/ai/reinforcement-learning":{"label":"Introduction to Reinforcement Learning and Its Application with LLMs","children":{}},"/playground/topics/ai/how-we-created-an-ai-powered-interview-system-using-openais-chatgpt":{"label":"How We Created An AI Powered Interview System Using Openais Chatgpt","children":{}},"/playground/topics/ai/foundation-model":{"label":"Foundation Models: The Latest Advancement in AI","children":{}},"/playground/topics/ai/select-vector-database-for-llm":{"label":"Select Vector Database for LLM","children":{}},"/playground/topics/ai/exploring-machine-learning-approaches-for-fine-tuning-llama-models":{"label":"Exploring Machine Learning Approaches For Fine Tuning Llama Models","children":{}},"/playground/topics/ai/workaround-with-openai-s-token-limit-with-langchain":{"label":"Workaround with OpenAI's token limit with Langchain","children":{}},"/playground/topics/ai/working-with-langchain-document-loaders":{"label":"Working with langchain document loaders","children":{}},"/playground/topics/ai/building-llm-powered-tools-with-dify":{"label":"Streamlining Internal Tool Development with Managed LLMOps: A Dify Case Study","children":{}},"/playground/topics/ai/a-grand-unified-theory-of-the-ai-hype-cycle":{"label":"A Grand Unified Theory of the AI Hype Cycle","children":{}},"/playground/topics/ai/adversarial-prompting":{"label":"Adversarial Prompting in Prompt Engineering","children":{}},"/playground/topics/ai/build-your-chatbot-with-open-source-large-language-models":{"label":"Build your chatbot with open source Large Language Models","children":{}}}},"/playground/topics/golang":{"label":"Golang","children":{"/playground/topics/golang/weekly":{"label":"Weekly","children":{"/playground/topics/golang/weekly/dec-13":{"label":"#24 Go 1.24 testing/synctest experiment for time and concurrency testing","children":{}},"/playground/topics/golang/weekly/dec-06":{"label":"#23 Draft Release Notes for Go 1.24 and weak pointers in Go","children":{}},"/playground/topics/golang/weekly/nov-29":{"label":"#22 GoMLX: ML in Go without Python","children":{}},"/playground/topics/golang/weekly/nov-22":{"label":"#21 Go sync.Once is Simple","children":{}},"/playground/topics/golang/weekly/nov-15":{"label":"#20 Go Turns 15","children":{}},"/playground/topics/golang/weekly/nov-08":{"label":"#19 Writing secure Go code","children":{}},"/playground/topics/golang/weekly/nov-01":{"label":"#18 Fuzz Testing Go HTTP Services","children":{}},"/playground/topics/golang/weekly/oct-25":{"label":"#17 Leveraging benchstat Projects in Go benchmark and Go Plan9 memo on 450% speeding up calculations","children":{}},"/playground/topics/golang/weekly/oct-18":{"label":"#16 Understand sync.Map","children":{}},"/playground/topics/golang/weekly/oct-11":{"label":"#15 Go embed and Reflect","children":{}},"/playground/topics/golang/weekly/oct-04":{"label":"#14 Compile-time eval & SQLite with wazero","children":{}},"/playground/topics/golang/weekly/sep-27":{"label":"#13 Compiler Quests and Vector Vexations","children":{}},"/playground/topics/golang/weekly/sep-20":{"label":"#12 CLI Tools for K8s, REST, and Terminals","children":{}},"/playground/topics/golang/weekly/sep-13":{"label":"#11 Actors, Frameworks, and the Future of Go","children":{}},"/playground/topics/golang/weekly/sep-06":{"label":"#10 Script, Telemetry","children":{}},"/playground/topics/golang/weekly/aug-30":{"label":"#9 TinyGo, SQLite vector search, and Permify","children":{}},"/playground/topics/golang/weekly/aug-23":{"label":"#8 GoNB, kubetrim, and GopherCon UK 2024","children":{}},"/playground/topics/golang/weekly/aug-16":{"label":"#7 Go 1.23, Websockets, and Structs","children":{}},"/playground/topics/golang/weekly/aug-09":{"label":"#6 Cogent Core, Russ Cox stepping down","children":{}},"/playground/topics/golang/weekly/aug-02":{"label":"#5 Go 1.23 features, Memory, Minecraft, and More","children":{}},"/playground/topics/golang/weekly/jul-26":{"label":"#4 Ethical Hacking, HTTP Requests, Mac App Development","children":{}},"/playground/topics/golang/weekly/jul-12":{"label":"#3 Generic Collections, Generics Constraints, AI Bot","children":{}},"/playground/topics/golang/weekly/jul-05":{"label":"#2 Go 1.23 Iterators","children":{}},"/playground/topics/golang/weekly/june-27":{"label":"#1 eBPF and PGO Optimization Techniques","children":{}}}},"/playground/topics/golang/extension-interface-pattern":{"label":"Go extension interface pattern","children":{}},"/playground/topics/golang/go-import":{"label":"Go import design: using git repo path","children":{}},"/playground/topics/golang/go-package":{"label":"Package first design","children":{}},"/playground/topics/golang/go-generics-type-safety":{"label":"How does Go achieve type safety when it enables generics?","children":{}},"/playground/topics/golang/go-for-enterprise":{"label":"Go For Enterprise","children":{"/playground/topics/golang/go-for-enterprise/who-using-golang-in-enterprise":{"label":"Who is using Go in enterprise?","children":{}},"/playground/topics/golang/go-for-enterprise/enterprise-standard-language":{"label":"Go as an Enterprise Standard Language","children":{}},"/playground/topics/golang/go-for-enterprise/how-to-use-go-in-enterprise":{"label":"How to use Go in the Enterprise","children":{}},"/playground/topics/golang/go-for-enterprise/when-to-use-golang-in-enterprise":{"label":"When to use Go in the Enterprise","children":{}},"/playground/topics/golang/go-for-enterprise/why-enterprise-chose-java":{"label":"Why Enterprise Chose Java","children":{}},"/playground/topics/golang/go-for-enterprise/why-go":{"label":"Why Go?","children":{}}}},"/playground/topics/golang/compute-union-2-finite-automata":{"label":"Efficient Union of Finite Automata in Golang: A Practical Approach","children":{}},"/playground/topics/golang/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines":{"label":"Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines","children":{}},"/playground/topics/golang/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq":{"label":"Message Queues And Streaming Platforms Eg Kafka Nats Rabbitmq","children":{}},"/playground/topics/golang/unit-testing-best-practices-in-golang":{"label":"Unit Testing Best Practices In Golang","children":{}},"/playground/topics/golang/profiling-in-go":{"label":"Profiling in Go","children":{}},"/playground/topics/golang/go-in-software-engineering":{"label":"Go In Software Engineering","children":{}},"/playground/topics/golang/bunk-license-check":{"label":"Bunk license check","children":{}},"/playground/topics/golang/go-concurrency":{"label":"Go Concurrency","children":{}},"/playground/topics/golang/slice-and-array-in-golang":{"label":"Slice And Array In Golang","children":{}},"/playground/topics/golang/use-go-selenium-to-crawl-data":{"label":"Use Go Selenium To Crawl Data","children":{}},"/playground/topics/golang/connecting-vim-with-golang":{"label":"Connecting Vim With Golang","children":{}}}},"/playground/topics/data":{"label":"Data","children":{"/playground/topics/data/a-lens-to-modern-data-engineering":{"label":"A Lens to Modern Data Engineering","children":{}},"/playground/topics/data/creating-a-fully-local-search-engine-on-memo":{"label":"Building a Local Search Engine for Our Memo Website","children":{}},"/playground/topics/data/managing-dataflow-and-sql-database-with-concurrency-control":{"label":"Managing Dataflow And Sql Database With Concurrency Control","children":{}},"/playground/topics/data/data-analyst-in-retail-trading":{"label":"Data Analyst In Retail Trading","children":{}}}},"/playground/topics/devbox":{"label":"Devbox","children":{"/playground/topics/devbox/devbox":{"label":"§ Devbox","children":{}},"/playground/topics/devbox/story":{"label":"Story","children":{"/playground/topics/devbox/story/devbox-production-success-story":{"label":"Devbox in Production: Our Success Story","children":{}},"/playground/topics/devbox/story/devbox-local-development-env":{"label":"Using Devbox to setup local development environment","children":{}},"/playground/topics/devbox/story/devbox-nix-and-our-devbox-adoption":{"label":"The overview into Nix & how we use Devbox @ Dwarves","children":{}},"/playground/topics/devbox/story/devbox-docker-adoption-and-challenges":{"label":"Our Docker adoption and its challenges","children":{}},"/playground/topics/devbox/story/devbox-a-world-before-docker":{"label":"The world before Docker","children":{}}}},"/playground/topics/devbox/guide":{"label":"Guide","children":{"/playground/topics/devbox/guide/containerless":{"label":"Ditch the Containers: Go Containerless with Devbox","children":{}},"/playground/topics/devbox/guide/devboxjson":{"label":"Devbox.json: Your Project's DNA","children":{}},"/playground/topics/devbox/guide/run-your-own-shell":{"label":"Devbox Shell: Your Dev Environment, Your Rules","children":{}}}},"/playground/topics/devbox/introduction":{"label":"Introduction","children":{"/playground/topics/devbox/introduction/the-reason-for-being":{"label":"The reason for being","children":{}},"/playground/topics/devbox/introduction/why-devbox-but-not-nix":{"label":"Devbox vs Nix: Why We Chose Simplicity","children":{}}}},"/playground/topics/devbox/research":{"label":"Research","children":{"/playground/topics/devbox/research/content-addressable-storage-in-docker":{"label":"Devbox vs Nix: Why We Chose Simplicity","children":{}},"/playground/topics/devbox/research/fixed-output-derivation":{"label":"Fixed-output Derivation in Nix","children":{}},"/playground/topics/devbox/research/nix-is-faster-than-docker-build":{"label":"Nix is Faster Than Docker Build","children":{}},"/playground/topics/devbox/research/pinning-nixpkgs":{"label":"Pinning nixpkgs in Nix","children":{}},"/playground/topics/devbox/research/shadow-copies":{"label":"Shadow Copies in Docker Builds","children":{}},"/playground/topics/devbox/research/unstable-package-installation":{"label":"Unstable Package Installation in Docker","children":{}}}}}},"/playground/topics/llm":{"label":"LLM","children":{"/playground/topics/llm/feedback-mechanism":{"label":"Design feedback mechanism for LLM applications","children":{}},"/playground/topics/llm/how-to-talk-to-chatgpt-effectively":{"label":"How to talk to ChatGPT effectively","children":{}},"/playground/topics/llm/history-of-structured-output-for-llms":{"label":"History of Structured Outputs for LLMs","children":{}},"/playground/topics/llm/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms":{"label":"Easy Prompt Engineering For Business Use And Mitigating Risks In Llms","children":{}}}},"/playground/topics/engineering":{"label":"Engineering","children":{"/playground/topics/engineering/our-view-on-fullstack-engineering":{"label":"Our View On Fullstack Engineering","children":{}},"/playground/topics/engineering/are-we-really-engineers":{"label":"Are We Really Engineers","children":{}},"/playground/topics/engineering/reusability-in-software-development":{"label":"Reusability In Software Development","children":{}},"/playground/topics/engineering/introduction-to-software-craftsmanship":{"label":"Introduction To Software Craftsmanship","children":{}},"/playground/topics/engineering/architecture-decision-record":{"label":"Architecture Decision Record","children":{}},"/playground/topics/engineering/well-crafted-software":{"label":"Well Crafted Software","children":{}},"/playground/topics/engineering/skill-of-software-engineer":{"label":"Skill Of Software Engineer","children":{}},"/playground/topics/engineering/the-10x-engineer":{"label":"The 10x Engineer","children":{}}}},"/playground/topics/softskills":{"label":"Softskills","children":{"/playground/topics/softskills/asking-as-a-junior":{"label":"Asking As A Junior","children":{}}}},"/playground/topics/product":{"label":"Product","children":{"/playground/topics/product/aarrr-framework-in-a-nutshell":{"label":"AARRR Framework In A Nutshell","children":{}}}},"/playground/topics/pm":{"label":"Pm","children":{"/playground/topics/pm/an-alternative-to-tm":{"label":"An Alternative To Tm","children":{}},"/playground/topics/pm/project-management":{"label":"Project Management","children":{}},"/playground/topics/pm/our-daily-standup-format":{"label":"Our Daily Standup Format","children":{}},"/playground/topics/pm/definition-of-done":{"label":"Definition Of Done","children":{}},"/playground/topics/pm/estimation-in-agile":{"label":"Estimation In Agile","children":{}}}},"/playground/topics/security":{"label":"Security","children":{"/playground/topics/security/applied-security-basis":{"label":"Applied Security Basis","children":{}}}}}},"/playground/notes":{"label":"Notes","children":{"/playground/notes/evolutionary-database-design":{"label":"Evolutionary Database Design: Managing Change and Scaling with the System","children":{}},"/playground/notes/giving-a-talk-checklist":{"label":"Giving a talk","children":{}},"/playground/notes/database-design-circular":{"label":"Database design Circular","children":{}},"/playground/notes/automata":{"label":"Automata","children":{}},"/playground/notes/error-handling-patterns":{"label":"Error handling patterns","children":{}},"/playground/notes/founder-liquidity":{"label":"Founder Liquidity","children":{}},"/playground/notes/why-hollywood-and-gaming-struggle-with-ai":{"label":"Why Hollywood and gaming struggle with AI","children":{}},"/playground/notes/security":{"label":"Security","children":{"/playground/notes/security/a-holistic-guide-to-security":{"label":"A Holistic Guide to Security","children":{}},"/playground/notes/security/how-i-came-up-with-our-security-standard":{"label":"How I came up with our Security Standard","children":{}}}},"/playground/notes/record-reward-sharing-culture":{"label":"Record and reward sharing at Dwarves","children":{}},"/playground/notes/designing-for-forgiveness":{"label":"Designing for Forgiveness: Creating Error-Tolerant Interfaces","children":{}},"/playground/notes/design-file-sharing-system-part-2-permission-and-password":{"label":"Design file-sharing system - Part 2: Permission & Password","children":{}},"/playground/notes/designing-a-model-with-dynamic-properties":{"label":"Designing a model with dynamic properties","children":{}},"/playground/notes/design-file-sharing-system-part-1-directory-structure":{"label":"Design file-sharing system - Part 1: Directory Structure","children":{}},"/playground/notes/subscription-pricing-models":{"label":"Subscription Pricing Models","children":{}},"/playground/notes/using-foundry-for-evm-smart-contract-developement":{"label":"Using Foundry for EVM smart contract development","children":{}},"/playground/notes/erlang-fsm":{"label":"Erlang Finite State Machine","children":{}},"/playground/notes/observer-pattern":{"label":"Introduce the Observer pattern and its use cases","children":{}},"/playground/notes/visitor-design-pattern":{"label":"Visitor design pattern, the concept, problem solution and use cases","children":{}},"/playground/notes/strategy-design-pattern":{"label":"Strategy design pattern, the concept, use cases and difference with the state design pattern","children":{}},"/playground/notes/vietnam-tech-ecosystem-report":{"label":"Vietnam Tech Ecosystem 2024 Report","children":{}},"/playground/notes/local-first-software":{"label":"Local-first Software","children":{}},"/playground/notes/error-handling-in-rust":{"label":"Error handling on Rust","children":{}},"/playground/notes/rust-trait":{"label":"Rust Trait","children":{}},"/playground/notes/engineering":{"label":"Engineering","children":{"/playground/notes/engineering/backend":{"label":"Backend","children":{"/playground/notes/engineering/backend/bloom-filter":{"label":"Bloom Filter","children":{}},"/playground/notes/engineering/backend/introduction-to-crdt":{"label":"Introduction to CRDT","children":{}},"/playground/notes/engineering/backend/sql-sargable-queries-and-their-impact-on-database-performance":{"label":"SQL Saragable Queries and Their Impact on Database Performance","children":{}},"/playground/notes/engineering/backend/the-removal-of-apache-kafkas-dependency-on-zookeeper":{"label":"The removal of Apache Kafka's dependency on Zookeeper","children":{}},"/playground/notes/engineering/backend/sql-and-how-it-relates-to-disk-reads-and-writes":{"label":"SQL and how it relates to Disk Reads and Writes","children":{}}}},"/playground/notes/engineering/data":{"label":"Data","children":{"/playground/notes/engineering/data/data-pipeline-design-framework":{"label":"Data Pipeline Design Framework","children":{}},"/playground/notes/engineering/data/quick-learning-vector-database":{"label":"Quick Learning Vector Database","children":{}},"/playground/notes/engineering/data/mapreduce":{"label":"MapReduce","children":{}}}},"/playground/notes/engineering/google-data-fusion":{"label":"Google Data Fusion","children":{}},"/playground/notes/engineering/google-dataproc":{"label":"Google Dataproc","children":{}},"/playground/notes/engineering/introducing-htmx-navigating-the-advantages-and-concerns":{"label":"Introducing HTMX - Navigating the Advantages and Concerns","children":{}},"/playground/notes/engineering/typesafe-client-server":{"label":"Typesafe Client Server","children":{}},"/playground/notes/engineering/golang-for-high-performance-video-streaming":{"label":"Leveraging Golang and WebRTC for High-Performance Video Streaming","children":{}},"/playground/notes/engineering/url-redirect-vs-rewrite":{"label":"URL Redirect vs. Rewrite; What’s the difference?","children":{}},"/playground/notes/engineering/devops":{"label":"Devops","children":{"/playground/notes/engineering/devops/deploy-branch-with-vercel-cli":{"label":"deploy-branch-with-vercel-cli","children":{}},"/playground/notes/engineering/devops/testing-aws-services-locally-with-localstack":{"label":"testing-aws-services-locally-with-localstack","children":{}},"/playground/notes/engineering/devops/kubeseal-sops":{"label":"kubeseal-sops","children":{}},"/playground/notes/engineering/devops/feature-flags":{"label":"feature-flags","children":{}},"/playground/notes/engineering/devops/progressive-delivery":{"label":"progressive-delivery","children":{}},"/playground/notes/engineering/devops/blue-green-deployment":{"label":"blue-green-deployment","children":{}}}}}},"/playground/notes/template-method-design-pattern":{"label":"A Tour of Template method pattern with Golang","children":{}},"/playground/notes/command-pattern":{"label":"Command Pattern","children":{}},"/playground/notes/radix-sort":{"label":"Radix Sort","children":{}},"/playground/notes/state-pattern":{"label":"State Pattern","children":{}},"/playground/notes/organize-team-know-how-with-zettelkasten-method":{"label":"Organize team know-how with Zettelkasten Method","children":{}},"/playground/notes/dynamic-liquidity-market-a-new-form-of-concentrated-liquidity-amm-on-solana":{"label":"Dynamic Liquidity Market Maker - a new form of concentrated liquidity AMM on Solana","children":{}},"/playground/notes/memo-knowledge-base-meeting":{"label":"Memo Knowledge Base Meeting","children":{}},"/playground/notes/peep-nft":{"label":"Claim your Peeps NFT","children":{}},"/playground/notes/recording-flow":{"label":"How We Set Up a Recording Workflow for Dwarves Office Hours","children":{}},"/playground/notes/memo-publication-workflow":{"label":"Memo Publication Workflow","children":{}},"/playground/notes/builder-design-pattern":{"label":"Introduce the Builder pattern and its use cases","children":{}},"/playground/notes/how-to-make-a-moc":{"label":"How to make a MOC","children":{}},"/playground/notes/prototype-design-pattern":{"label":"Going Through use cases of the prototype design pattern and it place among the creational patterns","children":{}},"/playground/notes/singleton-design-pattern":{"label":"A tour of Singleton design pattern with Golang","children":{}},"/playground/notes/echelon-x-singapore-2024-where-innovations-meet-inspiration":{"label":"Echelon X Singapore 2024: Where Innovations Meet Inspiration","children":{}},"/playground/notes/c4-modelling":{"label":"Breaking Down Complexity: The Role of Abstractions and UML in C4 Modelling","children":{}},"/playground/notes/dollar-cost-averaging":{"label":"Dollar Cost Averaging (DCA)","children":{}},"/playground/notes/how-i-create-content-for-multiple-platforms-at-dwarves":{"label":"How I Create Content for Multiple Platforms at Dwarves","children":{}},"/playground/notes/understanding-saving-investing-and-speculating-key-differences-and-strategies":{"label":"Understanding Saving, Investing, and Speculating: Key Differences and Strategies","children":{}},"/playground/notes/writing-content-for-multimedia-guidelines":{"label":"Writing Content for Multimedia Guidelines","children":{}},"/playground/notes/how-to-earn-reward-from-staking-dfg":{"label":"How to earn reward from staking DFG","children":{}},"/playground/notes/how-to-transfer-dfg-from-eth-to-base-for-staking":{"label":"How to bridge $DFG from Ethereum Mainnet to Base Network for staking","children":{}},"/playground/notes/design-less-present-more-with-deckset":{"label":"Design less, present more with Deckset","children":{}},"/playground/notes/level-up-your-markdown-memos":{"label":"Level Up Your Markdown Memos: Avoiding Common Pitfalls","children":{}},"/playground/notes/how-to-recap-a-publication":{"label":"Recapping A publication","children":{}},"/playground/notes/lifecycle-of-a-publication":{"label":"Life cycle of a publication","children":{}},"/playground/notes/how-to-set-up-environment-for-editing-memo":{"label":"How to set up environment to edit memo","children":{}},"/playground/notes/_how-to-setup-crypto-wallet-to-withdraw-icy":{"label":"How to set up crypto wallet to withdraw ICY","children":{}},"/playground/notes/_how-to-withdraw-icy":{"label":"How to withdraw ICY","children":{}},"/playground/notes/how-to-take-better-screenshots-on-mac":{"label":"How To Take Better Screenshots On Mac","children":{}},"/playground/notes/how-to-push-content-on-note-d":{"label":"How to push content on memo.d.foundation","children":{}},"/playground/notes/labs-weekly-catchup-5":{"label":"Labs Weekly Catchup #5","children":{}},"/playground/notes/labs-weekly-catchup-4":{"label":"Labs Weekly Catchup #4","children":{}},"/playground/notes/labs-weekly-catchup-3":{"label":"Labs Weekly Catchup #3","children":{}},"/playground/notes/labs-weekly-catchup-2":{"label":"Labs Weekly Catchup #2","children":{}},"/playground/notes/labs-weekly-catchup-1":{"label":"Labs Weekly Catchup #1","children":{}},"/playground/notes/duckdb-demo-and-showcase":{"label":"DuckDB demo and showcase","children":{}},"/playground/notes/icy-in-2024":{"label":"$icy in 2024","children":{}},"/playground/notes/salary-advance":{"label":"$icy Salary Advance","children":{}},"/playground/notes/icy-dfg":{"label":"💠 df protocol, $icy and $dfg","children":{}},"/playground/notes/how-rd-contributes-to-performance-review":{"label":"How R&D contributes to Performance Review","children":{}},"/playground/notes/knowledge-journey":{"label":"Knowledge Journey","children":{}},"/playground/notes/labs-roadmap-nov-23-update":{"label":"Labs Roadmap (Nov 23 update)","children":{}},"/playground/notes/reward-model-nomination":{"label":"Reward Model & Nomination","children":{}},"/playground/notes/working-on-a-project-interview-assessment-at-dwarves":{"label":"Working On A Project Interview Assessment At Dwarves","children":{}},"/playground/notes/design-system-for-layer-2-using-zk-rollup":{"label":"Design System For Layer 2 Using Zk Rollup","children":{}},"/playground/notes/cost-of-react-native":{"label":"Cost Of React Native","children":{}},"/playground/notes/lessons-learned-from-concurrency-practices-in-blockchain-projects":{"label":"Lessons Learned From Concurrency Practices In Blockchain Projects","children":{}},"/playground/notes/database-designs-for-multilingual-apps":{"label":"Database Designs For Multilingual Apps","children":{}},"/playground/notes/how-blue-green-deployment-helped-mochi":{"label":"How Blue Green Deployment Helped Mochi","children":{}},"/playground/notes/radio-talk-61-monorepo":{"label":"Radio Talk 61 Monorepo","children":{}},"/playground/notes/radio-talk-60-blue-green-deployment":{"label":"Radio Talk 60 Blue Green Deployment","children":{}},"/playground/notes/202302281019-case-study-write-heavy-scalable-and-reliable-inventory-platform":{"label":"Case study: Write-heavy scalable and reliable inventory platform","children":{}},"/playground/notes/growth-is-our-universal-language":{"label":"Growth Is Our Universal Language","children":{}},"/playground/notes/202301191192-multi-column-index-in-db":{"label":"Multi-column index in DB","children":{}},"/playground/notes/202301091379-invoking-component-functions-in-react":{"label":"Invoking component functions in React","children":{}},"/playground/notes/the-key-of-security-mechanisms-in-tackling-cyber-threats":{"label":"The Key Of Security Mechanisms In Tackling Cyber Threats","children":{}},"/playground/notes/202212131609-how-to-deal-with-technical-debt-in-scrum":{"label":"How to deal with technical debt in Scrum","children":{}},"/playground/notes/responsibility":{"label":"Responsibility","children":{}},"/playground/notes/configure-the-company-email":{"label":"Configure The Company Email","children":{}},"/playground/notes/tech-event-in-the-latest-transforming-healthcare-with-technology":{"label":"Tech Event In The Latest Transforming Healthcare With Technology","children":{}},"/playground/notes/202211141287-go-json-parsing":{"label":"Go JSON parser: number <-> interface","children":{}},"/playground/notes/202211141513-materialized-view-pattern":{"label":"Materialized View Pattern","children":{}},"/playground/notes/202211081111-error-messaging":{"label":"Error Messaging","children":{}},"/playground/notes/202210172128-sign-in-form-best-practices":{"label":"Sign-in Form Best Practices","children":{}},"/playground/notes/202210162154-the-best-of-css-tldr":{"label":"The Best of CSS TLDR","children":{}},"/playground/notes/202210150019-migration-planning":{"label":"Migration Planning","children":{}},"/playground/notes/202210131000-behavior-driven-development":{"label":"Behavior Driven Development","children":{}},"/playground/notes/202210131516-react-fiber":{"label":"React Fiber","children":{}},"/playground/notes/202210122014-forward-proxy":{"label":"Forward Proxy","children":{}},"/playground/notes/passing-the-probation-get-3-upvotes":{"label":"Passing The Probation Get 3 Upvotes","children":{}},"/playground/notes/writing":{"label":"Writing","children":{"/playground/notes/writing/state-explain-link":{"label":"State, Explain, Link - An all-purpose writing technique","children":{}}}},"/playground/notes/dwarves-radio-talk-17-conduct-a-1-1-session":{"label":"Dwarves Radio Talk 17 Conduct A 1 1 Session","children":{}},"/playground/notes/dwarves-radio-talk-16-run-an-effective-performance-review":{"label":"Dwarves Radio Talk 16 Run An Effective Performance Review","children":{}},"/playground/notes/understanding-an-application-design":{"label":"Understanding An Application Design","children":{}},"/playground/notes/sql-practices-orm-vs-plain-sql":{"label":"Sql Practices Orm Vs Plain Sql","children":{}},"/playground/notes/what-i-learned-on-design-thinking-and-software-development":{"label":"What I Learned On Design Thinking And Software Development","children":{}},"/playground/notes/six-things-i-extracted-from-design-thinking":{"label":"Six Things I Extracted From Design Thinking","children":{}},"/playground/notes/gitflow-pull-request":{"label":"Gitflow Pull Request","children":{}},"/playground/notes/git-commit-message-convention":{"label":"Git Commit Message Convention","children":{}},"/playground/notes/how-we-setup-cicd":{"label":"How We Setup Cicd","children":{}},"/playground/notes/getting-started-with-webflow":{"label":"Getting Started With Webflow","children":{}},"/playground/notes/ui-design-best-practices-dwarves":{"label":"UI Design Best Practices Dwarves","children":{}},"/playground/notes/xpc-services-on-macos-app-using-swift":{"label":"Xpc Services On Macos App Using Swift","children":{}},"/playground/notes/the-correct-way-to-build-kpi":{"label":"The Correct Way To Build Kpi","children":{}},"/playground/notes/domain-insight-research-framework":{"label":"Domain Insight Research Framework","children":{}},"/playground/notes/infinite-image-gallery-with-r3f-an-approach":{"label":"Infinite Image Gallery With R3f An Approach","children":{}},"/playground/notes/market":{"label":"Market","children":{"/playground/notes/market/an-overview-of-micro-investment-in-real-estate":{"label":"An Overview Of Micro Investment In Real Estate","children":{}}}},"/playground/notes/grid-and-layout":{"label":"Grid And Layout","children":{}},"/playground/notes/startups-vs-junior-designers":{"label":"Startups Vs Junior Designers","children":{}},"/playground/notes/gestalt-principles-in-ui-design":{"label":"Gestalt Principles In UI Design","children":{}},"/playground/notes/a-quick-intro-to-webassembly":{"label":"A Quick Intro To Webassembly","children":{}},"/playground/notes/sdk-event-sourcing":{"label":"Sdk Event Sourcing","children":{}},"/playground/notes/software-development-life-cycle-101":{"label":"Software Development Life Cycle 101","children":{}},"/playground/notes/introduce-to-dwarves-memo":{"label":"Introduce To Dwarves Memo","children":{}},"/playground/notes/daemons-and-services-programming-guide":{"label":"Daemons And Services Programming Guide","children":{}},"/playground/notes/remote-moderated-usability-testing":{"label":"Remote Moderated Usability Testing","children":{}},"/playground/notes/how-a-design-system-work":{"label":"How A Design System Work","children":{}},"/playground/notes/software-modeling":{"label":"Software Modeling","children":{}},"/playground/notes/blockchain-for-designers":{"label":"Blockchain For Designers","children":{}},"/playground/notes/design-better-mobile-application":{"label":"Design Better Mobile Application","children":{}},"/playground/notes/domain-glossary":{"label":"Domain Glossary","children":{}},"/playground/notes/build-an-assistant-on-the-terminal":{"label":"Build An Assistant On The Terminal","children":{}},"/playground/notes/create-circular-text-using-swiftui":{"label":"Create Circular Text Using Swiftui","children":{}},"/playground/notes/draw-watch-face-using-swiftui":{"label":"Draw Watch Face Using Swiftui","children":{}},"/playground/notes/swiftui":{"label":"Swiftui","children":{}},"/playground/notes/bunk-license-check":{"label":"Bunk License Check","children":{}},"/playground/notes/objective":{"label":"Objective","children":{}},"/playground/notes/kubernetes-helm-101":{"label":"Kubernetes Helm 101","children":{}},"/playground/notes/what-is-kubernetes":{"label":"What Is Kubernetes","children":{}},"/playground/notes/traits-to-assess-during-an-interview":{"label":"Traits To Assess During An Interview","children":{}},"/playground/notes/recursively-export-file-pattern-in-javascript-es6-application":{"label":"Recursively Export File Pattern In Javascript Es6 Application","children":{}},"/playground/notes/playaround-with-clojure":{"label":"Playaround With Clojure","children":{}},"/playground/notes/playaround-with-rust":{"label":"Playaround With Rust","children":{}},"/playground/notes/overview-on-broker-pattern-in-distributed-system":{"label":"Overview On Broker Pattern In Distributed System","children":{}},"/playground/notes/uidynamicanimator":{"label":"Uidynamicanimator","children":{}},"/playground/notes/reproduce-apple-find-me-bottom-menu-view":{"label":"Reproduce Apple Find Me Bottom Menu View","children":{}},"/playground/notes/build-a-passcode-view-with-swift":{"label":"Build A Passcode View With Swift","children":{}},"/playground/notes/istio":{"label":"Istio","children":{}},"/playground/notes/federated-byzantine":{"label":"Federated Byzantine","children":{}},"/playground/notes/fabric-hyperledger-architecture-explanation":{"label":"Fabric Hyperledger Architecture Explanation","children":{}},"/playground/notes/split-and-reuse-code-in-react-application":{"label":"Split And Reuse Code In React Application","children":{}},"/playground/notes/resource-assignment":{"label":"Resource Assignment","children":{}},"/playground/notes/the-principle-of-spacing-in-ui-design-part-2":{"label":"The Principle Of Spacing In UI Design Part 2","children":{}},"/playground/notes/card-sorting-and-a-glimpse-at-experimental-sorting-session":{"label":"Card Sorting And A Glimpse At Experimental Sorting Session","children":{}},"/playground/notes/about-devops":{"label":"About Devops","children":{}},"/playground/notes/good-design-understanding":{"label":"Good Design Understanding","children":{}},"/playground/notes/competency-mapping":{"label":"Competency Mapping","children":{}},"/playground/notes/design-resourcestools":{"label":"Design Resourcestools","children":{}},"/playground/notes/design-tips-tricks":{"label":"Design Tips Tricks","children":{}},"/playground/notes/design-system":{"label":"Design System","children":{}},"/playground/notes/design-workflow":{"label":"Design Workflow","children":{}},"/playground/notes/three-levels-of-design":{"label":"Three Levels Of Design","children":{}},"/playground/notes/ui-design-fundamental":{"label":"UI Design Fundamental","children":{}},"/playground/notes/ux-model":{"label":"UX Model","children":{}},"/playground/notes/the-principle-of-spacing-in-ui-design-part-1":{"label":"The Principle Of Spacing In UI Design Part 1","children":{}},"/playground/notes/qc-onboarding":{"label":"Qc Onboarding","children":{}},"/playground/notes/dcos-series-part-5-gitlab":{"label":"Dcos Series Part 5 Gitlab","children":{}},"/playground/notes/dcos-series-part-4-deploy-simple-application-with-backend-database":{"label":"Dcos Series Part 4 Deploy Simple Application With Backend Database","children":{}},"/playground/notes/dcos-series-part-3-service-discovery-and-load-balancing":{"label":"Dcos Series Part 3 Service Discovery And Load Balancing","children":{}},"/playground/notes/dcos-series-part-2-deploy-simple-applications":{"label":"Dcos Series Part 2 Deploy Simple Applications","children":{}},"/playground/notes/dcos-series-part-1-quick-look-installation":{"label":"Dcos Series Part 1 Quick Look Installation","children":{}},"/playground/notes/docker-registry":{"label":"Docker Registry","children":{}},"/playground/notes/agile-using-clickup-as-agile-management-tool":{"label":"Agile Using Clickup As Agile Management Tool","children":{}},"/playground/notes/considering-factors-for-performance-evaluating":{"label":"Considering Factors For Performance Evaluating","children":{}},"/playground/notes/how-we-contribute-to-homebrew":{"label":"How We Contribute To Homebrew","children":{}},"/playground/notes/sprint-lifecycle":{"label":"Sprint Lifecycle","children":{}},"/playground/notes/docker-microcontainers":{"label":"Docker Microcontainers","children":{}},"/playground/notes/remote-prepare-and-get-going":{"label":"Remote Prepare And Get Going","children":{}}}},"/playground/onboarding":{"label":"Labs - New Member Onboarding","children":{}},"/playground/schedule":{"label":"Labs x Consulting Workflow","children":{}}}},"/radar":{"label":"Radar","children":{"/radar/index":{"label":"Index","children":{"/radar/index/readme":{"label":"Tech Radar","children":{}},"/radar/index/apache-spark":{"label":"Apache Spark","children":{}},"/radar/index/ant-design":{"label":"Ant Design","children":{}},"/radar/index/apache-kafka":{"label":"Apache Kafka","children":{}},"/radar/index/argocd":{"label":"Argocd","children":{}},"/radar/index/astro":{"label":"Astro","children":{}},"/radar/index/backstage":{"label":"Backstage","children":{}},"/radar/index/blue-green-deployment":{"label":"Blue Green Deployment","children":{}},"/radar/index/browserstack":{"label":"Browserstack","children":{}},"/radar/index/carbon":{"label":"Carbon","children":{}},"/radar/index/chatgpt-assistance":{"label":"Chatgpt Assistance","children":{}},"/radar/index/chromatic":{"label":"Chromatic","children":{}},"/radar/index/clickhouse":{"label":"Clickhouse","children":{}},"/radar/index/cloudflare-workers":{"label":"Cloudflare Workers","children":{}},"/radar/index/codecept":{"label":"Codecept","children":{}},"/radar/index/commitlint":{"label":"Commitlint","children":{}},"/radar/index/copilot":{"label":"Copilot","children":{}},"/radar/index/cucumber":{"label":"Cucumber","children":{}},"/radar/index/cypress":{"label":"Cypress","children":{}},"/radar/index/dapr":{"label":"Dapr","children":{}},"/radar/index/deno":{"label":"Deno","children":{}},"/radar/index/detox":{"label":"Detox","children":{}},"/radar/index/devcontainers":{"label":"Devcontainers","children":{}},"/radar/index/devpod":{"label":"Devpod","children":{}},"/radar/index/dora-metrics":{"label":"Dora Metrics","children":{}},"/radar/index/duckdb":{"label":"Duckdb","children":{}},"/radar/index/earthly":{"label":"Earthly","children":{}},"/radar/index/elixir-umbrella-project":{"label":"Elixir Umbrella Project","children":{}},"/radar/index/elixir":{"label":"Elixir","children":{}},"/radar/index/erlang":{"label":"Erlang","children":{}},"/radar/index/error-logging-convention":{"label":"Error Logging Convention","children":{}},"/radar/index/eslint":{"label":"Eslint","children":{}},"/radar/index/event-sourcing":{"label":"Event Sourcing","children":{}},"/radar/index/excalidraw":{"label":"Excalidraw","children":{}},"/radar/index/expo":{"label":"Expo","children":{}},"/radar/index/figma":{"label":"Figma","children":{}},"/radar/index/formal-verification":{"label":"Formal Verification","children":{}},"/radar/index/fullstack-tracing":{"label":"Fullstack Tracing","children":{}},"/radar/index/gestalt-principle":{"label":"Gestalt Principle","children":{}},"/radar/index/github-actions":{"label":"Github Actions","children":{}},"/radar/index/golang":{"label":"Golang","children":{}},"/radar/index/grafana":{"label":"Grafana","children":{}},"/radar/index/graylog":{"label":"Graylog","children":{}},"/radar/index/headless-ui":{"label":"Headless UI","children":{}},"/radar/index/hoppscotch":{"label":"Hoppscotch","children":{}},"/radar/index/ipfs":{"label":"Ipfs","children":{}},"/radar/index/jotai":{"label":"Jotai","children":{}},"/radar/index/k6":{"label":"K6","children":{}},"/radar/index/k9s":{"label":"K9s","children":{}},"/radar/index/kaniko":{"label":"Kaniko","children":{}},"/radar/index/kotlin":{"label":"Kotlin","children":{}},"/radar/index/kubeseal-sops":{"label":"Kubeseal Sops","children":{}},"/radar/index/ladle":{"label":"Ladle","children":{}},"/radar/index/langchain":{"label":"Langchain","children":{}},"/radar/index/large-language-model-llm":{"label":"Large Language Model LLM","children":{}},"/radar/index/loki":{"label":"Loki","children":{}},"/radar/index/makefile":{"label":"Makefile","children":{}},"/radar/index/micro-frontend":{"label":"Micro Frontend","children":{}},"/radar/index/monorepo":{"label":"Monorepo","children":{}},"/radar/index/msw":{"label":"Msw","children":{}},"/radar/index/n6n":{"label":"N6n","children":{}},"/radar/index/nestjs":{"label":"Nestjs","children":{}},"/radar/index/netlify":{"label":"Netlify","children":{}},"/radar/index/newrelic":{"label":"Newrelic","children":{}},"/radar/index/nextjs":{"label":"Nextjs","children":{}},"/radar/index/nodejs":{"label":"Nodejs","children":{}},"/radar/index/nostrum":{"label":"Nostrum","children":{}},"/radar/index/nx":{"label":"Nx","children":{}},"/radar/index/orval":{"label":"Orval","children":{}},"/radar/index/page-object-model":{"label":"Page Object Model","children":{}},"/radar/index/partytown":{"label":"Partytown","children":{}},"/radar/index/phaser":{"label":"Phaser","children":{}},"/radar/index/phoenix":{"label":"Phoenix","children":{}},"/radar/index/playwright":{"label":"Playwright","children":{}},"/radar/index/pnpm":{"label":"Pnpm","children":{}},"/radar/index/progressive-delivery":{"label":"Progressive Delivery","children":{}},"/radar/index/prometheus":{"label":"Prometheus","children":{}},"/radar/index/prompt-engineering":{"label":"Prompt Engineering","children":{}},"/radar/index/qwik":{"label":"Qwik","children":{}},"/radar/index/radix-ui":{"label":"Radix UI","children":{}},"/radar/index/react-hook-form":{"label":"React Hook Form","children":{}},"/radar/index/react-llm":{"label":"React LLM","children":{}},"/radar/index/react-native":{"label":"React Native","children":{}},"/radar/index/react-query":{"label":"React Query","children":{}},"/radar/index/react-server-component":{"label":"React Server Component","children":{}},"/radar/index/react-testing-library":{"label":"React Testing Library","children":{}},"/radar/index/react":{"label":"React","children":{}},"/radar/index/reinforcement-learning-from-human-feedback":{"label":"Reinforcement Learning From Human Feedback","children":{}},"/radar/index/remix":{"label":"Remix","children":{}},"/radar/index/replayio":{"label":"Replayio","children":{}},"/radar/index/reverse-engineering":{"label":"Reverse Engineering","children":{}},"/radar/index/rust":{"label":"Rust","children":{}},"/radar/index/selenium":{"label":"Selenium","children":{}},"/radar/index/semantic-release-auto-release":{"label":"Semantic Release Auto Release","children":{}},"/radar/index/sentry":{"label":"Sentry","children":{}},"/radar/index/serverlessq":{"label":"Serverlessq","children":{}},"/radar/index/solidity":{"label":"Solidity","children":{}},"/radar/index/solidjs":{"label":"Solidjs","children":{}},"/radar/index/stern":{"label":"Stern","children":{}},"/radar/index/svelte":{"label":"Svelte","children":{}},"/radar/index/swagger":{"label":"Swagger","children":{}},"/radar/index/swift-ui":{"label":"Swift UI","children":{}},"/radar/index/swift":{"label":"Swift","children":{}},"/radar/index/swr":{"label":"Swr","children":{}},"/radar/index/tailwindcss":{"label":"Tailwindcss","children":{}},"/radar/index/tauri":{"label":"Tauri","children":{}},"/radar/index/team-topologies":{"label":"Team Topologies","children":{}},"/radar/index/timescaledb":{"label":"Timescaledb","children":{}},"/radar/index/tla":{"label":"Tla","children":{}},"/radar/index/trunk-based-development":{"label":"Trunk Based Development","children":{}},"/radar/index/turborepo":{"label":"Turborepo","children":{}},"/radar/index/type-safe-client-server":{"label":"Type Safe Client Server","children":{}},"/radar/index/typescript":{"label":"Typescript","children":{}},"/radar/index/ui-documentation":{"label":"UI Documentation","children":{}},"/radar/index/uno-css":{"label":"Uno Css","children":{}},"/radar/index/upptime":{"label":"Upptime","children":{}},"/radar/index/v-model":{"label":"V Model","children":{}},"/radar/index/vector-database":{"label":"Vector Database","children":{}},"/radar/index/vercel":{"label":"Vercel","children":{}},"/radar/index/vitejs":{"label":"Vitejs","children":{}},"/radar/index/volta":{"label":"Volta","children":{}},"/radar/index/wasm":{"label":"Wasm","children":{}},"/radar/index/webdriverio":{"label":"Webdriverio","children":{}},"/radar/index/webflow":{"label":"Webflow","children":{}},"/radar/index/yup":{"label":"Yup","children":{}},"/radar/index/zod":{"label":"Zod","children":{}},"/radar/index/zustand":{"label":"Zustand","children":{}}}},"/radar/readme":{"label":"Tech radar index","children":{}}}},"/updates":{"label":"Updates","children":{"/updates/forward":{"label":"Forward","children":{"/updates/forward/vol-01":{"label":"Vol 01","children":{"/updates/forward/vol-01/istio":{"label":"New Member","children":{}}}},"/updates/forward/market-commentary":{"label":"Market Commentary","children":{"/updates/forward/market-commentary/event-takeaways-2nd":{"label":"2nd Talks and Takeaways","children":{}},"/updates/forward/market-commentary/event-takeaways-1st":{"label":"1st Talks and Takeaways","children":{}},"/updates/forward/market-commentary/2025-28th-feb":{"label":"#9: Bybit Loses $1.5B in Hack, Claude 3.7 Sonnet Drops, and OpenArt Designs Characters","children":{}},"/updates/forward/market-commentary/2025-21th-feb":{"label":"#8: R1 1776 Goes Open-Source, Cardex Gets Hacked, and Grok-3 Debuts","children":{}},"/updates/forward/market-commentary/2025-14th-feb":{"label":"#7: 10x AI Cost Reduction, Lyft’s 2026 Robotaxi Milestone, and Solana ETF Buzz","children":{}},"/updates/forward/market-commentary/2025-7th-feb":{"label":"#6 Trending Products, DeepSeek Wave, and Ethereum Predictions","children":{}},"/updates/forward/market-commentary/2025-17th-jan":{"label":"#5 VC Trends, Blockchain Breakthroughs, and AI Innovations","children":{}},"/updates/forward/market-commentary/2025-10th-jan":{"label":"#4 AI Supercomputers, Mini AI PCs, SEA VC","children":{}},"/updates/forward/market-commentary/2025-3rd-jan":{"label":"#3 AI at CES, Wall Street Boom, Blockchain Trends","children":{}},"/updates/forward/market-commentary/2024-27th-dec":{"label":"#2 AI Talent Wars, OpenAI’s New Models, Hyperliquid","children":{}},"/updates/forward/market-commentary/2024-13th-dec":{"label":"#1 Gemini 2.0, OpenAI’s Sora,  a16z’s Predictions","children":{}}}},"/updates/forward/2025-02":{"label":"20242025","children":{}},"/updates/forward/product-design":{"label":"Product Design","children":{"/updates/forward/product-design/product-design-commentary-20241122":{"label":"Product Design Commentary #7: Hyper-personalization - How AI improves user experience personalization","children":{}},"/updates/forward/product-design/product-design-commentary-20241115":{"label":"Product Design Commentary #6: AI in Design - Cool ideas and how to make them happen","children":{}},"/updates/forward/product-design/product-design-commentary-20241101":{"label":"Product Design Commentary #5: Figma to SwiftUI (functional code) with Claude AI","children":{}},"/updates/forward/product-design/product-design-commentary-20241018":{"label":"Product Design Commentary #4: Generative AI UX design patterns","children":{}},"/updates/forward/product-design/product-design-commentary-20241011":{"label":"Product Design Commentary #3: The art of prompting in AI-human interaction","children":{}},"/updates/forward/product-design/product-design-commentary-20241004":{"label":"Product Design Commentary #2: Unpacking the sparkles icon and AI onboarding challenges","children":{}},"/updates/forward/product-design/product-design-commentary-20240927":{"label":"Product Design Commentary #1: New technologies changing UX/UI and product design","children":{}}}},"/updates/forward/market-report":{"label":"Market Report","children":{"/updates/forward/market-report/2024-october":{"label":"October 2024","children":{}},"/updates/forward/market-report/2024-september":{"label":"September 2024","children":{}},"/updates/forward/market-report/2024-august":{"label":"August 2024","children":{}},"/updates/forward/market-report/2024-july":{"label":"July 2024","children":{}},"/updates/forward/market-report/2024-may":{"label":"May 2024","children":{}},"/updates/forward/market-report/2024-april":{"label":"April 2024","children":{}},"/updates/forward/market-report/2024-march":{"label":"March 2024","children":{}},"/updates/forward/market-report/2024-february":{"label":"February 2024","children":{}},"/updates/forward/market-report/2024-january":{"label":"January 2024","children":{}},"/updates/forward/market-report/2023-december":{"label":"December 2023","children":{}}}},"/updates/forward/2024-09":{"label":"September 2024","children":{}},"/updates/forward/2023-11":{"label":"November 2023","children":{}},"/updates/forward/2023-10":{"label":"October 2023","children":{}},"/updates/forward/2023-08":{"label":"August 2023","children":{}},"/updates/forward/2023-06":{"label":"June 2023","children":{}},"/updates/forward/2023-05":{"label":"May 2023","children":{}},"/updates/forward/2023-03":{"label":"March 2023","children":{}},"/updates/forward/2023-12":{"label":"December 2023","children":{}},"/updates/forward/2022":{"label":"2022","children":{}},"/updates/forward/volume-03":{"label":"Tech Radar Volume 03","children":{}},"/updates/forward/volume-02":{"label":"Tech Radar Volume 02","children":{}},"/updates/forward/volume-01":{"label":"Tech Radar Volume 01","children":{}},"/updates/forward/readme":{"label":"Forward Engineering","children":{}}}},"/updates/build-log":{"label":"Build Log","children":{"/updates/build-log/service_monitoring_with_upptime":{"label":"Secure and transparent uptime monitoring with Upptime and GitHub secrets","children":{}},"/updates/build-log/create-slides-with-overleaf":{"label":"Create slides with Overleaf and ChatGPT","children":{}},"/updates/build-log/optimize-init-load-time-for-trading-platform":{"label":"Optimizing initial load time for a Trading Platform","children":{}},"/updates/build-log/ai-interview-platform-mvp":{"label":"Building MVP for AI-driven interview platform","children":{}},"/updates/build-log/optimizing-ui-for-effective-investment-experience":{"label":"Hedge Foundation - Optimizing UI for effective investment experience","children":{}},"/updates/build-log/implement-binance-future-pnl-analysis-page":{"label":"Implement Binance Futures PNL analysis page by Phoenix LiveView","children":{}},"/updates/build-log/migrate-normal-table-to-timescale-table":{"label":"Migrate regular tables into TimescaleDB hypertables to improve query performance","children":{}},"/updates/build-log/bitcoin-alt-performance-tracking":{"label":"Tracking Bitcoin-Altcoin Performance Indicators in BTC Hedging Strategy","children":{}},"/updates/build-log/database-hardening-for-trading-platform":{"label":"Database hardening for a trading platform","children":{}},"/updates/build-log/data-archive-and-recovery":{"label":"Building a data archive and recovery strategy for high-volume trading system","children":{}},"/updates/build-log/persist-history-using-data-snapshot-pattern":{"label":"Implementing data snapshot pattern to persist historical data","children":{}},"/updates/build-log/ai-ruby-travel-assistant-chatbot":{"label":"AI-powered Ruby travel assistant","children":{}},"/updates/build-log/building-chatbot-agent-for-project-management-tool":{"label":"Building chatbot agent to streamline project management","children":{}},"/updates/build-log/building-data-pipeline-ogif-transcriber":{"label":"Building data pipeline for OGIF transcriber","children":{}},"/updates/build-log/centralized-monitoring-setup-for-trading-platform":{"label":"Setup centralized monitoring system for Hedge Foundation trading platform","children":{}},"/updates/build-log/binance-transfer-matching":{"label":"Building better Binance transfer tracking","children":{}},"/updates/build-log/crypto-market-outperform-chart-rendering":{"label":"Visualizing crypto market performance: BTC-Alt dynamic indicators in Golang","children":{}},"/updates/build-log/enhancing-cryptocurrency-transfer-logger":{"label":"Transfer mapping: enhancing loggers for better transparency","children":{}},"/updates/build-log/reconstructing_trading_pnl_data_pipeline_approach":{"label":"Reconstructing historical trading PnL: a data pipeline approach","children":{}},"/updates/build-log/ai-powered-monthly-project-reports":{"label":"Project reports system: a case study","children":{}}}},"/updates/ogif":{"label":"OGIF","children":{"/updates/ogif/41-20250314":{"label":"#41 ICY-BTC, GitHub Bot, MCP-DB, Pocket Turing","children":{}},"/updates/ogif/39-20250207":{"label":"#39 Frontend report, DB Scaling, AI Workflow","children":{}},"/updates/ogif/38-20250117":{"label":"#38 Erlang automata, AI Trends, Year-End Awards","children":{}},"/updates/ogif/37-20241227":{"label":"#37 AI Fine-tuning, Data archiving, Datalakes","children":{}},"/updates/ogif/28-20241018":{"label":"#28 Go sync.Map, AI UX, Yelp AI, LLM Patterns, Git Analysis","children":{}},"/updates/ogif/27-20241011":{"label":"#27 Go weekly, Frontend, AI UX, Finite Automata","children":{}},"/updates/ogif/26-20241004":{"label":"#26 Design insights, Go tools, Trading app, Chatbots, Essays","children":{}},"/updates/ogif/25-20240927":{"label":"#25 Team updates, Hybrid work, AI insights, Go weekly","children":{}},"/updates/ogif/24-20240920":{"label":"#24 Go weekly, AI workflows, Team AI demo, Figma-UI with Claude","children":{}},"/updates/ogif/23-20240913":{"label":"#23 Go weekly, FE report, Hybrid work, AI agents","children":{}},"/updates/ogif/22-20240906":{"label":"#22 Hybrid work, Tech report, Go weekly, AI demo","children":{}},"/updates/ogif/21-20240830":{"label":"#21 Community engagement, Go weekly, Journey of thought for prompt engineering","children":{}},"/updates/ogif/20-20240823":{"label":"#20 Go weekly, Dynamic objects, Devbox, LLM tracing, Cursor AI","children":{}},"/updates/ogif/19-20240821":{"label":"#19 Go weekly, UI design, File sharing, Dify AI","children":{}},"/updates/ogif/18-20240809":{"label":"#18 Go weekly, RAG, UI, FE updates","children":{}},"/updates/ogif/17-20240802":{"label":"#17 Community Call July, C4 Model, Interview Life in the US","children":{}},"/updates/ogif/16-20240726":{"label":"#16 Go weekly, Dune query, AI voice clone, RAG re-ranking","children":{}},"/updates/ogif/15-20240719":{"label":"#15 AI Supervisors, Local-first Software, Code Completion, Bot Commands","children":{}},"/updates/ogif/14-20240712":{"label":"#14 Generic Collections, Pricing Models, and OGIF Summarizer","children":{}},"/updates/ogif/13-20240705":{"label":"#13 Go Weekly updates, Radix Sort, Human Feedback Mechanism, and effective ChatGPT usage","children":{}},"/updates/ogif/12-20240628":{"label":"#12 June updates, Go Performance, eBPF, PGO, Multimodal RAG","children":{}},"/updates/ogif/11-20240621":{"label":"#11 Design patterns: template method & visitor, Radix sort, and weekly tech commentary","children":{}},"/updates/ogif/10-20240614":{"label":"#10 Behavioral Patterns and Map Content Organization","children":{}},"/updates/ogif/9-20240607":{"label":"#9 What's next for June and Behavior Design Patterns","children":{}},"/updates/ogif/7-20240517":{"label":"#7 Echelon EXPO, Programming patterns, and Moonlighting","children":{}},"/updates/ogif/6-20240510":{"label":"#6 Factory Pattern, Erlang State Machines, and Trading Process","children":{}},"/updates/ogif/5-20240503":{"label":"#5 Singapore Market Report, C4 Modelling, Memo's Nested Sidebar","children":{}},"/updates/ogif/4-20240426":{"label":"#4 DCA, Devbox","children":{}},"/updates/ogif/3-20240419":{"label":"#3 Generative AI, Tokenomics, and Finance Talks","children":{}},"/updates/ogif/2-20240412":{"label":"#2 Devbox as the new Docker, Security Standards, and Understanding Liquidity","children":{}},"/updates/ogif/1-20240405":{"label":"#1 Markdown Presentations, Research Pipeline, Screenshots How-to","children":{}},"/updates/ogif/readme":{"label":"OGIF - Oh God It's Friday","children":{}}}},"/updates/changelog":{"label":"Changelog","children":{"/updates/changelog/2024-10-25-knowledge-base":{"label":"Build your knowledge base","children":{}},"/updates/changelog/2024-09-13-dwarve-updates-ai-llm":{"label":"The Stage of AI and LLM at Dwarves","children":{}},"/updates/changelog/readme":{"label":"Dwarves Updates","children":{}},"/updates/changelog/2023-09-12-growth-stages":{"label":"The Stage of Growth at Dwarves","children":{}},"/updates/changelog/2022-08-26-the-next-leading-chairs":{"label":"The Next Leading Chairs","children":{}},"/updates/changelog/2022-06-26-blockchain-and-data":{"label":"The future is blockchain and data","children":{}},"/updates/changelog/2022-03-31-hiring-stages":{"label":"The stages of hiring at Dwarves","children":{}},"/updates/changelog/2021-12-30-2021-in-review":{"label":"It's a wrap: 2021 in Review","children":{}},"/updates/changelog/2021-12-01-engineering-org-structure":{"label":"Engineering Organizational Structure","children":{}},"/updates/changelog/2021-10-31-path-to-growth":{"label":"The Path To Growth at Dwarves","children":{}},"/updates/changelog/2021-09-29-engineer-performance-review":{"label":"Engineer Performance Review","children":{}},"/updates/changelog/2021-08-23-project-compliance":{"label":"Project Compliance","children":{}},"/updates/changelog/2021-07-11-dalat-office":{"label":"Da Lat Office","children":{}},"/updates/changelog/2021-06-10-dwarves-updates":{"label":"Dwarves Updates","children":{}}}},"/updates/wala":{"label":"WALA","children":{"/updates/wala/001-43-factory":{"label":"43 Factory","children":{}},"/updates/wala/002-dzs-media":{"label":"DZS Media","children":{}},"/updates/wala/003-sp-group":{"label":"SP Group","children":{}},"/updates/wala/readme":{"label":"WALA","children":{}}}}}},"/consulting":{"label":"Consulting","children":{"/consulting/case-study":{"label":"Case Study","children":{"/consulting/case-study/screenz-ai":{"label":"Screenz.ai","children":{}},"/consulting/case-study/kafi":{"label":"Kafi","children":{}},"/consulting/case-study/droppii":{"label":"Droppii","children":{}},"/consulting/case-study/konvoy":{"label":"Konvoy","children":{}},"/consulting/case-study/cimb":{"label":"CIMB","children":{}},"/consulting/case-study/swift":{"label":"Swift","children":{}},"/consulting/case-study/startupvn":{"label":"StartupVN","children":{}},"/consulting/case-study/open-fabric":{"label":"Open Fabric","children":{}},"/consulting/case-study/icrosschain":{"label":"iCrosschain","children":{}},"/consulting/case-study/hedge-foundation":{"label":"Hedge Foundation","children":{}},"/consulting/case-study/searchio":{"label":"Search.io","children":{}},"/consulting/case-study/tokenomy":{"label":"Tokenomy","children":{}},"/consulting/case-study/basehq":{"label":"BaseHQ","children":{}},"/consulting/case-study/momos":{"label":"Momos","children":{}},"/consulting/case-study/attrace":{"label":"Attrace","children":{}},"/consulting/case-study/setel":{"label":"Setel","children":{}},"/consulting/case-study/joinpara":{"label":"JoinPara","children":{}},"/consulting/case-study/relay":{"label":"Relay","children":{}},"/consulting/case-study/naru":{"label":"Naru","children":{}},"/consulting/case-study/mudah":{"label":"Mudah","children":{}},"/consulting/case-study/reapit":{"label":"Reapit","children":{}},"/consulting/case-study/aharooms":{"label":"Aharooms","children":{}},"/consulting/case-study/begroup":{"label":"beGroup","children":{}},"/consulting/case-study/airwatt":{"label":"AirWatt","children":{}},"/consulting/case-study/voconic":{"label":"Voconic","children":{}},"/consulting/case-study/sol":{"label":"Sol","children":{}},"/consulting/case-study/dental-marketplace":{"label":"Dental Marketplace","children":{}},"/consulting/case-study/bhd":{"label":"BHD Cinema","children":{}}}},"/consulting/bill-by-hours":{"label":"Pricing model: Bill by hours","children":{}},"/consulting/partners-network":{"label":"Partners Network","children":{}},"/consulting/readme":{"label":"💼 Consulting team","children":{}},"/consulting/collaboration-guideline":{"label":"Collaboration Guideline","children":{}},"/consulting/fbsc":{"label":"FBSC","children":{}},"/consulting/how-to-work-with-clients":{"label":"How to work with clients","children":{}},"/consulting/service-feedbacks":{"label":"Service feedbacks","children":{}},"/consulting/setting-the-budget":{"label":"Setting The Budget","children":{}},"/consulting/fixed-budget-scope-controlled":{"label":"Fixed Budget Scope Controlled","children":{}},"/consulting/the-adjacent-possible":{"label":"The Adjacent Possible","children":{}}}},"/handbook":{"label":"Handbook","children":{"/handbook/navigate-changes":{"label":"Navigate changes","children":{}},"/handbook/community":{"label":"Community","children":{"/handbook/community/icy-worth":{"label":"How much is your ICY worth","children":{}},"/handbook/community/icy-swap":{"label":"How to swap ICY to BTC","children":{}},"/handbook/community/icy":{"label":"ICY","children":{}},"/handbook/community/discord":{"label":"Discord","children":{}},"/handbook/community/earn":{"label":"Earn","children":{}},"/handbook/community/readme":{"label":"Radar","children":{}},"/handbook/community/radar":{"label":"Radar","children":{}},"/handbook/community/sharing":{"label":"Sharing knowledge","children":{}},"/handbook/community/showcase":{"label":"Showcase","children":{}},"/handbook/community/memo":{"label":"Memo","children":{}}}},"/handbook/guides":{"label":"Guides","children":{"/handbook/guides/check-in-at-office":{"label":"Office check-in process for earning ICY","children":{}},"/handbook/guides/leave-request":{"label":"Leave request","children":{}},"/handbook/guides/nda":{"label":"NDA & Agreements","children":{}},"/handbook/guides/configure-company-email":{"label":"Configure your company email","children":{}},"/handbook/guides/one-on-one-meeting":{"label":"1-on-1 meetings","children":{}},"/handbook/guides/continuing-education-allowance":{"label":"Continuing education allowance","children":{}},"/handbook/guides/reimbursement":{"label":"Reimbursement","children":{}},"/handbook/guides/email-communication-and-use":{"label":"Email use","children":{}},"/handbook/guides/password-sharing":{"label":"Password Sharing","children":{}},"/handbook/guides/asset-request":{"label":"Request an asset","children":{}},"/handbook/guides/effective-meeting":{"label":"Effective meetings","children":{}},"/handbook/guides/conduct-a-meeting":{"label":"How to conduct a meeting","children":{}}}},"/handbook/making-a-career":{"label":"Making a career","children":{}},"/handbook/as-a-community":{"label":"As a community","children":{}},"/handbook/knowledge-base":{"label":"Knowledge base","children":{}},"/handbook/stock-option-plan":{"label":"Stock option plan","children":{}},"/handbook/readme":{"label":"📔 Handbook","children":{}},"/handbook/compliance":{"label":"Compliance","children":{}},"/handbook/mma":{"label":"MMA","children":{}},"/handbook/hybrid-working":{"label":"Hybrid Working","children":{}},"/handbook/routine":{"label":"Work routine","children":{}},"/handbook/ventures":{"label":"Ventures arm","children":{}},"/handbook/purpose":{"label":"Purpose","children":{}},"/handbook/benefits-and-perks":{"label":"Benefits & perks","children":{}},"/handbook/dwarves-foundation-is-you":{"label":"You are Dwarves Foundation","children":{}},"/handbook/getting-started":{"label":"💎 Getting started","children":{}},"/handbook/how-we-hire":{"label":"How we hire","children":{}},"/handbook/how-we-spend-money":{"label":"How we spend money","children":{}},"/handbook/misc":{"label":"Misc","children":{"/handbook/misc/marketing-assets":{"label":"Marketing assets","children":{}}}},"/handbook/moonlighting":{"label":"Moonlighting","children":{}},"/handbook/places-to-work":{"label":"Places to work","children":{}},"/handbook/security-rules":{"label":"Security rules","children":{}},"/handbook/tools-and-systems":{"label":"Tools and systems","children":{}},"/handbook/what-we-stand-for":{"label":"What we stand for","children":{}},"/handbook/what-we-value":{"label":"What we value","children":{}},"/handbook/where-we-work":{"label":"Where we work","children":{}},"/handbook/who-does-what":{"label":"Who does what","children":{}},"/handbook/faq":{"label":"FAQs","children":{}},"/handbook/how-we-work":{"label":"How we work","children":{}}}},"/careers":{"label":"Careers","children":{"/careers/archived":{"label":"Archived","children":{"/careers/archived/full-stack-engineer":{"label":"Full-Stack Engineer","children":{}},"/careers/archived/executive-assistant":{"label":"Executive Assistant","children":{}},"/careers/archived/technical-recruiter":{"label":"Technical Recruiter","children":{}},"/careers/archived/backend-engineer-go-elixir-rust":{"label":"Backend Engineer, Go/Elixir/Rust","children":{}},"/careers/archived/react-native-developer":{"label":"React Native Developer","children":{}},"/careers/archived/android-developer":{"label":"Mobile Engineer, Android","children":{}},"/careers/archived/community-executive":{"label":"Community Executive","children":{}},"/careers/archived/data-engineering":{"label":"Energy - Data Engineering","children":{}},"/careers/archived/devops":{"label":"DevOps Engineer - FinTech","children":{}},"/careers/archived/frontend-developer-junior":{"label":"Junior Frontend Developer","children":{}},"/careers/archived/frontend":{"label":"Frontend","children":{}},"/careers/archived/ios-developer":{"label":"iOS Developer - EnergyTech","children":{}},"/careers/archived/macos-developer":{"label":"Software Engineer, macOS","children":{}},"/careers/archived/product-designer-new-grad":{"label":"Product Designer, New Grad","children":{}},"/careers/archived/product-designer":{"label":"Product Designer","children":{}},"/careers/archived/qc-automation":{"label":"QC Engineer, Automation - Logistics","children":{}},"/careers/archived/qc-manual":{"label":"Fintech - QC Engineer, Manual","children":{}},"/careers/archived/reactjs-web-engineer":{"label":"Web Engineer, React.js","children":{}},"/careers/archived/visual-designer":{"label":"Visual Designer","children":{}},"/careers/archived/android":{"label":"Android","children":{}},"/careers/archived/golang":{"label":"Golang","children":{}},"/careers/archived/intern":{"label":"Intern","children":{}},"/careers/archived/ios":{"label":"iOS Developer","children":{}},"/careers/archived/qa":{"label":"QA Engineer","children":{}}}},"/careers/open-positions":{"label":"Open Positions","children":{"/careers/open-positions/business-manager":{"label":"Business Development Manager","children":{}},"/careers/open-positions/growth-lead":{"label":"Growth Lead","children":{}}}},"/careers/life":{"label":"Life","children":{"/careers/life/2024-09-26-29-dat-nguyen":{"label":"Dat Nguyen","children":{}},"/careers/life/2024-02-19-28-duyen-tran":{"label":"Duyen Tran","children":{}},"/careers/life/2024-01-22-27-tri-tran":{"label":"Tri Tran","children":{}},"/careers/life/2024-01-03-25-khoi-nguyen":{"label":"Khoi Nguyen","children":{}},"/careers/life/2023-12-13-24-tai-pham":{"label":"Tai Pham","children":{}},"/careers/life/2023-12-12-23-hieu-nghia":{"label":"Hieu Nghia","children":{}},"/careers/life/2023-11-27-22-cat-nguyen":{"label":"Cat Nguyen","children":{}},"/careers/life/2023-11-20-21-minh-cloud":{"label":"Minh Cloud","children":{}},"/careers/life/2023-11-13-20-hoai-khang":{"label":"Hoai Khang","children":{}},"/careers/life/2023-11-03-19-vi-tran":{"label":"Vi Tran","children":{}},"/careers/life/2023-10-30-18-tuan-tran":{"label":"Tuan Tran","children":{}},"/careers/life/2023-10-16-16-kim-ngan":{"label":"Kim Ngan","children":{}},"/careers/life/2023-10-13-17-hoang-nguyen":{"label":"Hoang Nguyen","children":{}},"/careers/life/2023-10-09-15-khoi-ngo":{"label":"Khoi Ngo","children":{}},"/careers/life/2023-10-02-14-dat-pham":{"label":"Dat Pham","children":{}},"/careers/life/2023-09-29-13-bien-vo":{"label":"Bien Vo","children":{}},"/careers/life/2023-09-18-12-toan-ho":{"label":"Toan Ho","children":{}},"/careers/life/2023-09-05-11-dinh-nam":{"label":"Dinh Nam","children":{}},"/careers/life/2023-08-17-10-cuong-mai":{"label":"Cuong Mai","children":{}},"/careers/life/2023-08-07-9-hoang-anh":{"label":"Hoang Anh","children":{}},"/careers/life/2023-06-30-7-khac-vy":{"label":"Khac Vy","children":{}},"/careers/life/group":{"label":"Group","children":{"/careers/life/group/2023-06-01-software-design-group":{"label":"Software Design Group","children":{}}}},"/careers/life/2022-09-21-7-my-anh":{"label":"My Anh","children":{}},"/careers/life/2022-08-11-6-hieu-vu":{"label":"Hieu Vu","children":{}},"/careers/life/2022-08-04-6-duy-nguyen":{"label":"Duy Nguyen","children":{}},"/careers/life/2022-08-03-5-nam-nguyen":{"label":"Nam Nguyen","children":{}},"/careers/life/2022-07-22-4-an-tran":{"label":"An Tran","children":{}},"/careers/life/2022-03-17-3-tom-nguyen":{"label":"Tom Nguyen","children":{}},"/careers/life/2022-02-25-2-anh-tran":{"label":"Anh Tran","children":{}},"/careers/life/2022-02-14-1-thanh-pham":{"label":"Thanh Pham","children":{}},"/careers/life/2021-03-31-0-tuan-dao":{"label":"Tuan Dao","children":{}},"/careers/life/2021-03-11-0-phat-nguyen":{"label":"Phat Nguyen","children":{}},"/careers/life/2020-05-08-0-thanh-pham":{"label":"Thanh Pham","children":{}},"/careers/life/2020-04-10-0-huy-nguyen":{"label":"Huy Nguyen","children":{}}}},"/careers/culture":{"label":"Culture","children":{}},"/careers/manifesto":{"label":"Manifesto","children":{}},"/careers/internship":{"label":"Internship","children":{"/careers/internship/2019":{"label":"2019","children":{"/careers/internship/2019/2019":{"label":"Spring Internship 2019","children":{}}}}}},"/careers/apprentice":{"label":"Apprentice","children":{"/careers/apprentice/2022":{"label":"2022","children":{"/careers/apprentice/2022/batch-of-2022":{"label":"Batch of 2022","children":{}},"/careers/apprentice/2022/2022-meet-ngoc-thanh-pham":{"label":"Thanh Pham","children":{}},"/careers/apprentice/2022/2022-meet-tuan-dao":{"label":"Tuan Dao","children":{}}}},"/careers/apprentice/apprentice":{"label":"Apprentice program","children":{}}}},"/careers/readme":{"label":"👋 Join the Dwarves","children":{}}}},"/opensource":{"label":"Opensource","children":{"/opensource/readme":{"label":"☀️ Open source","children":{}}}},"/culture":{"label":"Culture","children":{"/culture/culture-test":{"label":"The culture test","children":{}},"/culture/readme":{"label":"Notes on our culture","children":{}},"/culture/ogif-intro":{"label":"OGIF - Oh God It's Friday","children":{}},"/culture/red-flags":{"label":"Red flags","children":{}},"/culture/focus-on-delivery":{"label":"Focus on delivery","children":{}},"/culture/the-inner-circle":{"label":"The inner circle","children":{}},"/culture/making-decision":{"label":"Making decision as a team member","children":{}},"/culture/beyond-the-title":{"label":"Beyond the title","children":{}},"/culture/go-the-extra-mile":{"label":"Go the extra mile","children":{}},"/culture/runs-by-ideas":{"label":"The Dwarves runs by ideas","children":{}},"/culture/a-tips-of-hiring-dont":{"label":"A tips of hiring - Do & Don't","children":{}},"/culture/culture-handbook":{"label":"The Dwarves culture handbook","children":{}},"/culture/people-matter":{"label":"How people matter should work","children":{}},"/culture/delegation-and-believe-it-will-work":{"label":"Delegation and believe it will work","children":{}},"/culture/constructive-feedback":{"label":"Constructive feedback","children":{}},"/culture/transparency":{"label":"Transparency","children":{}},"/culture/account-management-strategy":{"label":"Account management strategies","children":{}},"/culture/avoid-burn-out":{"label":"Avoid burn out","children":{}},"/culture/high-performing-team":{"label":"Building a solid high performing team","children":{}},"/culture/delegate-work-not-responsibility":{"label":"Delegate work, not responsibility","children":{}},"/culture/blocking-distraction":{"label":"Blocking distraction","children":{}}}},"/playbook":{"label":"Playbook","children":{"/playbook/operations":{"label":"Operations","children":{"/playbook/operations/checklists":{"label":"Checklists","children":{"/playbook/operations/checklists/leave-and-request-checklist":{"label":"Leave Request","children":{}},"/playbook/operations/checklists/offboarding-checklist":{"label":"Offboarding","children":{}},"/playbook/operations/checklists/artifact-checklist":{"label":"Back up Artifact","children":{}},"/playbook/operations/checklists/project-archive":{"label":"Project Archive","children":{}},"/playbook/operations/checklists/project-case-study":{"label":"Project Case Study","children":{}},"/playbook/operations/checklists/project-communication":{"label":"Project Communication","children":{}},"/playbook/operations/checklists/project-handover":{"label":"Project Handover","children":{}},"/playbook/operations/checklists/project-initialization":{"label":"Project Initialization","children":{}},"/playbook/operations/checklists/assets-checklist":{"label":"Assets","children":{}},"/playbook/operations/checklists/billing-checklist":{"label":"Billing","children":{}},"/playbook/operations/checklists/candidate-checklist":{"label":"Candidate","children":{}},"/playbook/operations/checklists/consulting-contract-checklist":{"label":"Consulting Contract","children":{}},"/playbook/operations/checklists/hiring-checklist":{"label":"Hiring","children":{}},"/playbook/operations/checklists/onboarding-checklist":{"label":"Onboarding","children":{}},"/playbook/operations/checklists/unemployment-social-health-insurance":{"label":"Unemployment, Social, Health Insurance","children":{}},"/playbook/operations/checklists/vietnam-invoice-checklist":{"label":"Vietnam Invoice","children":{}}}},"/playbook/operations/how-to-conduct-delivery-reports":{"label":"How to conduct delivery reports","children":{}},"/playbook/operations/how-we-do-effective-planning-and-reporting":{"label":"How we do effective planning and reporting","children":{}},"/playbook/operations/project-schedule-delivery-guidelines":{"label":"Project Delivery Schedule and Guidelines","children":{}},"/playbook/operations/mbti-type-intj":{"label":"MBTI Type INTJ","children":{}},"/playbook/operations/mbti-type-istp":{"label":"MBTI Type ISTP","children":{}},"/playbook/operations/mbti-type-estj":{"label":"MBTI Type ESTJ","children":{}},"/playbook/operations/mbti-type-istj":{"label":"MBTI Type ISTJ","children":{}},"/playbook/operations/applying-myersbriggs-type-indicator-in-hr":{"label":"Applying Myersbriggs Type Indicator In Hiring","children":{}},"/playbook/operations/the-four-preferences":{"label":"The Four Preferences","children":{}},"/playbook/operations/adjust-the-way-we-work-in-basecamp-style":{"label":"Adjust The Way We Work In Basecamp Style","children":{}},"/playbook/operations/bric-a-brac":{"label":"Bric A Brac","children":{}},"/playbook/operations/writing-management-objectives-in-smart":{"label":"Writing Management Objectives In Smart","children":{}},"/playbook/operations/hiring-for-operations-team":{"label":"Hiring For Operations Team","children":{}},"/playbook/operations/annual-bonus-for-sales":{"label":"Annual bonus for sales","children":{}},"/playbook/operations/collaboration-guidelines":{"label":"Collaboration Guidelines","children":{}},"/playbook/operations/compliance-check-process":{"label":"Compliance Check Process","children":{}},"/playbook/operations/email-template":{"label":"Email Template","children":{"/playbook/operations/email-template/assignment-invitation-2":{"label":"Assignment Inviation (Skip pre-assessment)","children":{}},"/playbook/operations/email-template/assignment-invitation":{"label":"Assignment Inviation","children":{}},"/playbook/operations/email-template/confirm-resume-date":{"label":"Confirm Employee's Resume Date Day","children":{}},"/playbook/operations/email-template/farewell":{"label":"Farewell Letter","children":{}},"/playbook/operations/email-template/follow-up-onboarding-items":{"label":"Follow-up Onboarding Items","children":{}},"/playbook/operations/email-template/hung-king-commemoration-day":{"label":"Hung King Commemoration Day","children":{}},"/playbook/operations/email-template/information-about-resource-change":{"label":"Inform about resource change","children":{}},"/playbook/operations/email-template/international-labour-day":{"label":"International Labour Day","children":{}},"/playbook/operations/email-template/interview-invitation":{"label":"Interview Invitation","children":{}},"/playbook/operations/email-template/milestone-sign-off":{"label":"Milestone sign-off","children":{}},"/playbook/operations/email-template/national-day":{"label":"National Day","children":{}},"/playbook/operations/email-template/new-year-day":{"label":"New Year Day","children":{}},"/playbook/operations/email-template/offer-letter":{"label":"Offer Letter","children":{}},"/playbook/operations/email-template/referral-bonus-confirmation-note":{"label":"Referral Bonus Confirmation Note","children":{}},"/playbook/operations/email-template/rejection-email":{"label":"Rejection","children":{}},"/playbook/operations/email-template/salary-increment":{"label":"Salary Increment Announcement","children":{}},"/playbook/operations/email-template/tet-holiday":{"label":"Tet Holiday","children":{}},"/playbook/operations/email-template/thank-you-letter":{"label":"Thank you letter","children":{}},"/playbook/operations/email-template/welcome-onboard":{"label":"Welcome Onboard","children":{}},"/playbook/operations/email-template/welcome-to-dwarves-update":{"label":"Welcome to Dwarves Updates","children":{}}}},"/playbook/operations/naming-convention":{"label":"Naming convention","children":{}},"/playbook/operations/setup-email-template":{"label":"Setup email template in Gmail","children":{}},"/playbook/operations/types-of-employees":{"label":"Types Of Employees","children":{}},"/playbook/operations/hiring-approach":{"label":"Hiring Approach","children":{}},"/playbook/operations/the-okr":{"label":"The OKR","children":{}},"/playbook/operations/our-metrics-for-performance-review":{"label":"Our Metrics For Performance Review","children":{}},"/playbook/operations/make-remote-working-works":{"label":"Make Remote Working Works","children":{}},"/playbook/operations/our-policy-for-remote-working":{"label":"Our Policy For Remote Working","children":{}}}},"/playbook/engineering":{"label":"Engineering","children":{"/playbook/engineering/estimation-guidelines":{"label":"Estimation Guidelines","children":{}},"/playbook/engineering/presentation":{"label":"monitoring","children":{}},"/playbook/engineering/repo-icon":{"label":"release","children":{}}}},"/playbook/design":{"label":"Design","children":{"/playbook/design/design-system":{"label":"Design System","children":{}},"/playbook/design/ia-design":{"label":"Information Architecture","children":{}},"/playbook/design/ix-design":{"label":"IX","children":{}},"/playbook/design/aarrr":{"label":"AARRR","children":{}},"/playbook/design/design-sprint":{"label":"Design Sprint","children":{}},"/playbook/design/lean-canvas":{"label":"Lean Canvas","children":{}},"/playbook/design/prototype":{"label":"Low-fidelity prototype: UI Design","children":{}},"/playbook/design/ui-design":{"label":"UI","children":{}},"/playbook/design/ux-design":{"label":"UX","children":{}},"/playbook/design/wireframe":{"label":"wireframe","children":{}}}},"/playbook/readme":{"label":"Playbook","children":{}}}},"/fund":{"label":"Fund","children":{"/fund/ventures-fund-1":{"label":"Dwarves Ventures Fund 1","children":{}},"/fund/ventures-fund-0":{"label":"Dwarves Ventures Fund 0","children":{}}}}}},"/tags":{"label":"Popular Tags","children":{"/tags/earn":{"label":"#earn","children":{},"count":8},"/tags/productivity":{"label":"#productivity","children":{},"count":13},"/tags/quality":{"label":"#quality","children":{},"count":3},"/tags/open-source":{"label":"#open-source","children":{},"count":3},"/tags/liquidity":{"label":"#liquidity","children":{},"count":2},"/tags/rfc":{"label":"#RFC","children":{},"count":2},"/tags/icy":{"label":"#icy","children":{},"count":13},"/tags/blockchain":{"label":"#blockchain","children":{},"count":47},"/tags/ai":{"label":"#AI","children":{},"count":58},"/tags/evm":{"label":"#evm","children":{},"count":5},"/tags/web3":{"label":"#web3","children":{},"count":4},"/tags/foundry":{"label":"#foundry","children":{},"count":2},"/tags/frontend":{"label":"#frontend","children":{},"count":67},"/tags/market-report":{"label":"#market-report","children":{},"count":32},"/tags/security":{"label":"#security","children":{},"count":10},"/tags/mcp":{"label":"#MCP","children":{},"count":3},"/tags/btc":{"label":"#btc","children":{},"count":1},"/tags/swap":{"label":"#swap","children":{},"count":2},"/tags/golang":{"label":"#golang","children":{},"count":50},"/tags/go-weekly":{"label":"#go-weekly","children":{},"count":24},"/tags/llm":{"label":"#LLM","children":{},"count":76},"/tags/protocol":{"label":"#protocol","children":{},"count":2},"/tags/tooling":{"label":"#tooling","children":{},"count":9},"/tags/aider":{"label":"#aider","children":{},"count":2},"/tags/qwen2.5":{"label":"#qwen2.5","children":{},"count":1},"/tags/openhand":{"label":"#openhand","children":{},"count":1},"/tags/predicted output":{"label":"#predicted output","children":{},"count":1},"/tags/project-management":{"label":"#project-management","children":{},"count":1},"/tags/copilots":{"label":"#copilots","children":{},"count":2},"/tags/team-management":{"label":"#team-management","children":{},"count":1},"/tags/mongodb":{"label":"#mongodb","children":{},"count":1},"/tags/database":{"label":"#database","children":{},"count":8},"/tags/salesforce":{"label":"#salesforce","children":{},"count":1},"/tags/use cases":{"label":"#use cases","children":{},"count":2},"/tags/data-engineering":{"label":"#data-engineering","children":{},"count":5},"/tags/system-design":{"label":"#system-design","children":{},"count":2},"/tags/architecture":{"label":"#architecture","children":{},"count":4},"/tags/etl":{"label":"#etl","children":{},"count":3},"/tags/react":{"label":"#react","children":{},"count":15},"/tags/performance":{"label":"#performance","children":{},"count":17},"/tags/design-system":{"label":"#design-system","children":{},"count":1},"/tags/storybook":{"label":"#storybook","children":{},"count":1},"/tags/hook":{"label":"#hook","children":{},"count":1},"/tags/testing":{"label":"#testing","children":{},"count":4},"/tags/cline":{"label":"#cline","children":{},"count":1},"/tags/realtime api":{"label":"#realtime api","children":{},"count":1},"/tags/interface":{"label":"#interface","children":{},"count":1},"/tags/import":{"label":"#import","children":{},"count":1},"/tags/package":{"label":"#package","children":{},"count":1},"/tags/yelp":{"label":"#yelp","children":{},"count":1},"/tags/generics":{"label":"#generics","children":{},"count":2},"/tags/observability":{"label":"#observability","children":{},"count":5},"/tags/tracing":{"label":"#tracing","children":{},"count":1},"/tags/pillar":{"label":"#pillar","children":{},"count":3},"/tags/enterprise":{"label":"#enterprise","children":{},"count":10},"/tags/language":{"label":"#language","children":{},"count":5},"/tags/ai-agents":{"label":"#ai-agents","children":{},"count":2},"/tags/ai-evaluation":{"label":"#ai-evaluation","children":{},"count":1},"/tags/prompt-engineering":{"label":"#prompt-engineering","children":{},"count":4},"/tags/networking":{"label":"#networking","children":{},"count":7},"/tags/finite-automata":{"label":"#finite-automata","children":{},"count":1},"/tags/pattern-matching":{"label":"#pattern-matching","children":{},"count":1},"/tags/state-machines":{"label":"#state-machines","children":{},"count":1},"/tags/java":{"label":"#java","children":{},"count":1},"/tags/programming":{"label":"#programming","children":{},"count":1},"/tags/rag":{"label":"#RAG","children":{},"count":5},"/tags/caching":{"label":"#caching","children":{},"count":1},"/tags/moc":{"label":"#moc","children":{},"count":3},"/tags/devbox":{"label":"#devbox","children":{},"count":17},"/tags/nix":{"label":"#nix","children":{},"count":9},"/tags/case-study":{"label":"#case-study","children":{},"count":29},"/tags/generative-ui":{"label":"#generative-ui","children":{},"count":1},"/tags/search":{"label":"#search","children":{},"count":1},"/tags/evaluation":{"label":"#evaluation","children":{},"count":3},"/tags/docker":{"label":"#docker","children":{},"count":11},"/tags/function-calling":{"label":"#function-calling","children":{},"count":1},"/tags/ton":{"label":"#ton","children":{},"count":2},"/tags/search-engine":{"label":"#search-engine","children":{},"count":1},"/tags/duckdb":{"label":"#duckdb","children":{},"count":3},"/tags/transformers.js":{"label":"#transformers.js","children":{},"count":1},"/tags/hybrid-search":{"label":"#hybrid-search","children":{},"count":1},"/tags/feedback":{"label":"#feedback","children":{},"count":2},"/tags/pattern":{"label":"#pattern","children":{},"count":1},"/tags/supervisor-architecture":{"label":"#supervisor-architecture","children":{},"count":1},"/tags/ogif":{"label":"#OGIF","children":{},"count":32},"/tags/guidelines":{"label":"#guidelines","children":{},"count":3},"/tags/document-processing":{"label":"#document-processing","children":{},"count":1},"/tags/information-retrieval":{"label":"#information-retrieval","children":{},"count":1},"/tags/mechanism":{"label":"#mechanism","children":{},"count":1},"/tags/iterators":{"label":"#iterators","children":{},"count":1},"/tags/reinforcement-learning":{"label":"#reinforcement-learning","children":{},"count":3},"/tags/kernel-programing":{"label":"#kernel-programing","children":{},"count":1},"/tags/machine-learning":{"label":"#machine-learning","children":{},"count":2},"/tags/prompt":{"label":"#prompt","children":{},"count":1},"/tags/chatgpt":{"label":"#chatgpt","children":{},"count":1},"/tags/solana":{"label":"#solana","children":{},"count":7},"/tags/defi":{"label":"#DeFi","children":{},"count":2},"/tags/anchor":{"label":"#anchor","children":{},"count":2},"/tags/containerization":{"label":"#containerization","children":{},"count":4},"/tags/virtualization":{"label":"#virtualization","children":{},"count":4},"/tags/history":{"label":"#history","children":{},"count":1},"/tags/websocket":{"label":"#websocket","children":{},"count":1},"/tags/protocols":{"label":"#protocols","children":{},"count":1},"/tags/dwarves":{"label":"#dwarves","children":{},"count":19},"/tags/radar":{"label":"#radar","children":{},"count":9},"/tags/rendering":{"label":"#rendering","children":{},"count":1},"/tags/dom":{"label":"#dom","children":{},"count":3},"/tags/cssom":{"label":"#cssom","children":{},"count":1},"/tags/render-tree":{"label":"#render-tree","children":{},"count":1},"/tags/engineering":{"label":"#engineering","children":{},"count":58},"/tags/iframe":{"label":"#iframe","children":{},"count":1},"/tags/postmessage":{"label":"#postmessage","children":{},"count":1},"/tags/dx":{"label":"#dx","children":{},"count":1},"/tags/vector-database":{"label":"#vector-database","children":{},"count":4},"/tags/mock-service-worker":{"label":"#mock-service-worker","children":{},"count":1},"/tags/api-mocking":{"label":"#api-mocking","children":{},"count":1},"/tags/web-development-tool":{"label":"#web-development-tool","children":{},"count":1},"/tags/data-fetching":{"label":"#data-fetching","children":{},"count":1},"/tags/frontend,":{"label":"#frontend,","children":{},"count":1},"/tags/graphql":{"label":"#graphql","children":{},"count":1},"/tags/reactjs":{"label":"#reactjs","children":{},"count":2},"/tags/scroll-driven-animations":{"label":"#scroll-driven-animations","children":{},"count":1},"/tags/animations":{"label":"#animations","children":{},"count":1},"/tags/intersection-observer":{"label":"#intersection-observer","children":{},"count":1},"/tags/nextjs":{"label":"#nextjs","children":{},"count":1},"/tags/server-component":{"label":"#server-component","children":{},"count":1},"/tags/caching-data":{"label":"#caching-data","children":{},"count":1},"/tags/social-networks":{"label":"#social-networks","children":{},"count":1},"/tags/tool":{"label":"#tool","children":{},"count":3},"/tags/practice":{"label":"#practice","children":{},"count":5},"/tags/foundation-model":{"label":"#foundation-model","children":{},"count":1},"/tags/fine-tuning":{"label":"#fine-tuning","children":{},"count":1},"/tags/vector database":{"label":"#vector database","children":{},"count":1},"/tags/shadow-dom":{"label":"#shadow-dom","children":{},"count":1},"/tags/web-api":{"label":"#web-api","children":{},"count":1},"/tags/machine learning":{"label":"#machine learning","children":{},"count":1},"/tags/r&d":{"label":"#r&d","children":{},"count":1},"/tags/data":{"label":"#data","children":{},"count":14},"/tags/backend":{"label":"#backend","children":{},"count":5},"/tags/web":{"label":"#web","children":{},"count":9},"/tags/framework":{"label":"#framework","children":{},"count":6},"/tags/micro-frontend":{"label":"#micro-frontend","children":{},"count":3},"/tags/swr-infinite":{"label":"#swr-infinite","children":{},"count":1},"/tags/web-design":{"label":"#web-design","children":{},"count":1},"/tags/tuning-llm":{"label":"#tuning-llm","children":{},"count":2},"/tags/langchain":{"label":"#langchain","children":{},"count":1},"/tags/translation":{"label":"#translation","children":{},"count":1},"/tags/profiling":{"label":"#profiling","children":{},"count":1},"/tags/technique":{"label":"#technique","children":{},"count":9},"/tags/nft":{"label":"#nft","children":{},"count":3},"/tags/state-mangement":{"label":"#state-mangement","children":{},"count":1},"/tags/global-state-management":{"label":"#global-state-management","children":{},"count":1},"/tags/css":{"label":"#css","children":{},"count":5},"/tags/fonts":{"label":"#fonts","children":{},"count":1},"/tags/variable-fonts":{"label":"#variable-fonts","children":{},"count":1},"/tags/state-management":{"label":"#state-management","children":{},"count":2},"/tags/component":{"label":"#component","children":{},"count":1},"/tags/proof-of-knowledge":{"label":"#proof-of-knowledge","children":{},"count":1},"/tags/fronten":{"label":"#fronten","children":{},"count":1},"/tags/hooks":{"label":"#hooks","children":{},"count":2},"/tags/typescript":{"label":"#typescript","children":{},"count":4},"/tags/analytics-tools":{"label":"#analytics-tools","children":{},"count":1},"/tags/analytics-platform":{"label":"#analytics-platform","children":{},"count":1},"/tags/parsing":{"label":"#parsing","children":{},"count":1},"/tags/validation":{"label":"#validation","children":{},"count":1},"/tags/webassembly":{"label":"#webassembly","children":{},"count":1},"/tags/sandbox":{"label":"#sandbox","children":{},"count":1},"/tags/zk-rollup":{"label":"#zk-rollup","children":{},"count":2},"/tags/polygon":{"label":"#polygon","children":{},"count":1},"/tags/starknet":{"label":"#starknet","children":{},"count":1},"/tags/ethereum":{"label":"#ethereum","children":{},"count":2},"/tags/zero-knowledge":{"label":"#zero-knowledge","children":{},"count":1},"/tags/network":{"label":"#network","children":{},"count":2},"/tags/design-pattern":{"label":"#design-pattern","children":{},"count":9},"/tags/atomic-css":{"label":"#atomic-css","children":{},"count":1},"/tags/client-side":{"label":"#client-side","children":{},"count":1},"/tags/storage":{"label":"#storage","children":{},"count":1},"/tags/frontend/performance":{"label":"#frontend/performance","children":{},"count":2},"/tags/wai-aria":{"label":"#wai-aria","children":{},"count":1},"/tags/accessibility":{"label":"#accessibility","children":{},"count":4},"/tags/polymorphic-component":{"label":"#polymorphic-component","children":{},"count":1},"/tags/threejs":{"label":"#threejs","children":{},"count":1},"/tags/web-performance":{"label":"#web-performance","children":{},"count":2},"/tags/html":{"label":"#html","children":{},"count":4},"/tags/animation":{"label":"#animation","children":{},"count":1},"/tags/zk-proof":{"label":"#zk-proof","children":{},"count":1},"/tags/guides":{"label":"#guides","children":{},"count":1},"/tags/responsive-design":{"label":"#responsive-design","children":{},"count":1},"/tags/hsl":{"label":"#hsl","children":{},"count":1},"/tags/javascript":{"label":"#javascript","children":{},"count":4},"/tags/css-in-js":{"label":"#css-in-js","children":{},"count":1},"/tags/tip":{"label":"#tip","children":{},"count":1},"/tags/dark-mode":{"label":"#dark-mode","children":{},"count":1},"/tags/multisign-wallet":{"label":"#multisign-wallet","children":{},"count":1},"/tags/virtual-dom":{"label":"#virtual-dom","children":{},"count":1},"/tags/native-modules":{"label":"#native-modules","children":{},"count":1},"/tags/vitejs":{"label":"#vitejs","children":{},"count":1},"/tags/esm":{"label":"#esm","children":{},"count":1},"/tags/tutorial":{"label":"#tutorial","children":{},"count":7},"/tags/modules":{"label":"#modules","children":{},"count":1},"/tags/blockchain-bridge":{"label":"#blockchain-bridge","children":{},"count":1},"/tags/foundational-topics":{"label":"#foundational-topics","children":{},"count":5},"/tags/distributed-systems":{"label":"#distributed-systems","children":{},"count":1},"/tags/pos":{"label":"#pos","children":{},"count":1},"/tags/smart-contract":{"label":"#smart-contract","children":{},"count":1},"/tags/atomic-design":{"label":"#atomic-design","children":{},"count":1},"/tags/a11y":{"label":"#a11y","children":{},"count":1},"/tags/useeffect":{"label":"#useeffect","children":{},"count":1},"/tags/token":{"label":"#token","children":{},"count":2},"/tags/report":{"label":"#report","children":{},"count":8},"/tags/radio":{"label":"#radio","children":{},"count":2},"/tags/wasm":{"label":"#wasm","children":{},"count":2},"/tags/rust":{"label":"#rust","children":{},"count":10},"/tags/concurrency":{"label":"#concurrency","children":{},"count":2},"/tags/parallelism":{"label":"#parallelism","children":{},"count":1},"/tags/engineering/frontend":{"label":"#engineering/frontend","children":{},"count":1},"/tags/tips":{"label":"#tips","children":{},"count":6},"/tags/design":{"label":"#design","children":{},"count":31},"/tags/pm":{"label":"#pm","children":{},"count":2},"/tags/operation":{"label":"#operation","children":{},"count":4},"/tags/operations":{"label":"#operations","children":{},"count":60},"/tags/project":{"label":"#project","children":{},"count":13},"/tags/js":{"label":"#js","children":{},"count":2},"/tags/react.js":{"label":"#react.js","children":{},"count":2},"/tags/scrum":{"label":"#scrum","children":{},"count":2},"/tags/data-structures":{"label":"#data-structures","children":{},"count":2},"/tags/software":{"label":"#software","children":{},"count":5},"/tags/agile":{"label":"#agile","children":{},"count":5},"/tags/vim":{"label":"#vim","children":{},"count":1},"/tags/hiring":{"label":"#hiring","children":{},"count":21},"/tags/handbook":{"label":"#handbook","children":{},"count":47},"/tags/business":{"label":"#business","children":{},"count":5},"/tags/growth":{"label":"#growth","children":{},"count":2},"/tags/monitoring":{"label":"#monitoring","children":{},"count":2},"/tags/upptime":{"label":"#upptime","children":{},"count":1},"/tags/consulting":{"label":"#consulting","children":{},"count":22},"/tags/tech-report":{"label":"#tech-report","children":{},"count":11},"/tags/overleaf":{"label":"#overleaf","children":{},"count":1},"/tags/slide":{"label":"#slide","children":{},"count":1},"/tags/office-hours":{"label":"#office-hours","children":{},"count":31},"/tags/discord":{"label":"#discord","children":{},"count":32},"/tags/fintech":{"label":"#fintech","children":{},"count":16},"/tags/software-development":{"label":"#software-development","children":{},"count":1},"/tags/database-management":{"label":"#database-management","children":{},"count":1},"/tags/ux-ui":{"label":"#ux-ui","children":{},"count":13},"/tags/forward-engineering":{"label":"#forward-engineering","children":{},"count":14},"/tags/career":{"label":"#career","children":{},"count":39},"/tags/fullstack":{"label":"#fullstack","children":{},"count":2},"/tags/real-time":{"label":"#real-time","children":{},"count":1},"/tags/phoenix-live-view":{"label":"#phoenix-live-view","children":{},"count":1},"/tags/timescaledb":{"label":"#timescaledb","children":{},"count":1},"/tags/finance":{"label":"#finance","children":{},"count":1},"/tags/product-design":{"label":"#product-design","children":{},"count":7},"/tags/agents":{"label":"#agents","children":{},"count":4},"/tags/checklist":{"label":"#checklist","children":{},"count":17},"/tags/presentation":{"label":"#presentation","children":{},"count":1},"/tags/labs":{"label":"#labs","children":{},"count":22},"/tags/sql":{"label":"#sql","children":{},"count":4},"/tags/data-modeling":{"label":"#data-modeling","children":{},"count":1},"/tags/knowledge":{"label":"#knowledge","children":{},"count":2},"/tags/updates":{"label":"#updates","children":{},"count":14},"/tags/automata":{"label":"#automata","children":{},"count":1},"/tags/mobile":{"label":"#mobile","children":{},"count":3},"/tags/wala":{"label":"#WALA","children":{},"count":4},"/tags/fnb":{"label":"#fnb","children":{},"count":2},"/tags/film":{"label":"#film","children":{},"count":1},"/tags/error":{"label":"#error","children":{},"count":1},"/tags/community":{"label":"#community","children":{},"count":15},"/tags/startup":{"label":"#startup","children":{},"count":9},"/tags/shares":{"label":"#shares","children":{},"count":1},"/tags/founder":{"label":"#founder","children":{},"count":1},"/tags/entertainment":{"label":"#entertainment","children":{},"count":1},"/tags/log":{"label":"#log","children":{},"count":1},"/tags/metric":{"label":"#metric","children":{},"count":1},"/tags/intent-classification":{"label":"#intent-classification","children":{},"count":1},"/tags/prompting":{"label":"#prompting","children":{},"count":1},"/tags/culture":{"label":"#culture","children":{},"count":12},"/tags/test":{"label":"#test","children":{},"count":1},"/tags/life-at-dwarves, ai-developer, hybrid-work":{"label":"#life-at-dwarves, ai-developer, hybrid-work","children":{},"count":1},"/tags/hybrid-working":{"label":"#hybrid-working","children":{},"count":1},"/tags/guide":{"label":"#guide","children":{},"count":11},"/tags/team":{"label":"#team","children":{},"count":13},"/tags/newsletter":{"label":"#newsletter","children":{},"count":11},"/tags/ai-integration":{"label":"#ai-integration","children":{},"count":1},"/tags/reward":{"label":"#reward","children":{},"count":1},"/tags/ux":{"label":"#UX","children":{},"count":2},"/tags/directory-structure":{"label":"#directory-structure","children":{},"count":2},"/tags/file-management":{"label":"#file-management","children":{},"count":2},"/tags/file-system":{"label":"#file-system","children":{},"count":2},"/tags/permissions":{"label":"#permissions","children":{},"count":1},"/tags/database-modelling":{"label":"#database-modelling","children":{},"count":1},"/tags/nda":{"label":"#NDA","children":{},"count":1},"/tags/compliance":{"label":"#compliance","children":{},"count":2},"/tags/people":{"label":"#people","children":{},"count":27},"/tags/delivery":{"label":"#delivery","children":{},"count":3},"/tags/reporting":{"label":"#reporting","children":{},"count":1},"/tags/engagement":{"label":"#engagement","children":{},"count":2},"/tags/subscription":{"label":"#subscription","children":{},"count":1},"/tags/pricing":{"label":"#pricing","children":{},"count":1},"/tags/product":{"label":"#product","children":{},"count":1},"/tags/erlang":{"label":"#erlang","children":{},"count":1},"/tags/elixir":{"label":"#elixir","children":{},"count":5},"/tags/fsm":{"label":"#fsm","children":{},"count":1},"/tags/gang-of-four":{"label":"#gang-of-four","children":{},"count":9},"/tags/observer-pattern":{"label":"#observer-pattern","children":{},"count":1},"/tags/behavior-pattern":{"label":"#behavior-pattern","children":{},"count":2},"/tags/visitor-design-pattern":{"label":"#visitor-design-pattern","children":{},"count":1},"/tags/ai-powered":{"label":"#ai-powered","children":{},"count":1},"/tags/strategy-design-pattern":{"label":"#strategy-design-pattern","children":{},"count":1},"/tags/local-first":{"label":"#local-first","children":{},"count":1},"/tags/crdt":{"label":"#crdt","children":{},"count":2},"/tags/data-synchronization":{"label":"#data-synchronization","children":{},"count":1},"/tags/data-ownership":{"label":"#data-ownership","children":{},"count":1},"/tags/real-time-collaboration":{"label":"#real-time-collaboration","children":{},"count":1},"/tags/error-handling":{"label":"#error-handling","children":{},"count":1},"/tags/trait":{"label":"#trait","children":{},"count":1},"/tags/data-structure":{"label":"#data-structure","children":{},"count":1},"/tags/bloom-filter":{"label":"#bloom-filter","children":{},"count":1},"/tags/big-o":{"label":"#big-o","children":{},"count":1},"/tags/behavioral-pattern":{"label":"#behavioral-pattern","children":{},"count":1},"/tags/behavior-patterns":{"label":"#behavior-patterns","children":{},"count":2},"/tags/algorithms":{"label":"#algorithms","children":{},"count":1},"/tags/sorting":{"label":"#sorting","children":{},"count":1},"/tags/zettelkasten":{"label":"#zettelkasten","children":{},"count":1},"/tags/amm":{"label":"#amm","children":{},"count":1},"/tags/memo":{"label":"#memo","children":{},"count":3},"/tags/instructions":{"label":"#instructions","children":{},"count":10},"/tags/guideline":{"label":"#guideline","children":{},"count":14},"/tags/ops":{"label":"#ops","children":{},"count":2},"/tags/workflow":{"label":"#workflow","children":{},"count":4},"/tags/recording":{"label":"#recording","children":{},"count":1},"/tags/creational-design-pattern":{"label":"#creational-design-pattern","children":{},"count":1},"/tags/software-design":{"label":"#software-design","children":{},"count":2},"/tags/software-architecture":{"label":"#software-architecture","children":{},"count":3},"/tags/graphical-notation":{"label":"#graphical-notation","children":{},"count":2},"/tags/techecosystem":{"label":"#techecosystem","children":{},"count":1},"/tags/summit":{"label":"#summit","children":{},"count":1},"/tags/energy":{"label":"#energy","children":{},"count":1},"/tags/crypto":{"label":"#crypto","children":{},"count":1},"/tags/content":{"label":"#content","children":{},"count":6},"/tags/investment":{"label":"#investment","children":{},"count":1},"/tags/personal-finance":{"label":"#personal-finance","children":{},"count":1},"/tags/overview":{"label":"#overview","children":{},"count":1},"/tags/dfg":{"label":"#dfg","children":{},"count":6},"/tags/standardization":{"label":"#standardization","children":{},"count":1},"/tags/work-adoption":{"label":"#work-adoption","children":{},"count":1},"/tags/code of conduct":{"label":"#code of conduct","children":{},"count":1},"/tags/communications":{"label":"#communications","children":{},"count":3},"/tags/brain":{"label":"#brain","children":{},"count":1},"/tags/knowledge-base":{"label":"#knowledge-base","children":{},"count":1},"/tags/engineering/data":{"label":"#engineering/data","children":{},"count":5},"/tags/data-pipeline":{"label":"#data-pipeline","children":{},"count":1},"/tags/payment":{"label":"#payment","children":{},"count":2},"/tags/partners":{"label":"#partners","children":{},"count":1},"/tags/cybersecurity":{"label":"#cybersecurity","children":{},"count":2},"/tags/serverless":{"label":"#serverless","children":{},"count":1},"/tags/life-at-dwarves, community-contributor, techie-project":{"label":"#life-at-dwarves, community-contributor, techie-project","children":{},"count":1},"/tags/htmx":{"label":"#htmx","children":{},"count":2},"/tags/brainery":{"label":"#brainery","children":{},"count":2},"/tags/devops":{"label":"#devops","children":{},"count":13},"/tags/google-cloud":{"label":"#google-cloud","children":{},"count":1},"/tags/google-data-studio":{"label":"#google-data-studio","children":{},"count":1},"/tags/google-data-fusion":{"label":"#google-data-fusion","children":{},"count":1},"/tags/reliability":{"label":"#reliability","children":{},"count":3},"/tags/cdap":{"label":"#cdap","children":{},"count":1},"/tags/google-dataproc":{"label":"#google-dataproc","children":{},"count":1},"/tags/hadoop":{"label":"#hadoop","children":{},"count":2},"/tags/streaming":{"label":"#streaming","children":{},"count":1},"/tags/life-at-dwarves, alumni, career-growth":{"label":"#life-at-dwarves, alumni, career-growth","children":{},"count":1},"/tags/bounty":{"label":"#bounty","children":{},"count":2},"/tags/life-at-dwarves, backend-engineer, continuous-learning":{"label":"#life-at-dwarves, backend-engineer, continuous-learning","children":{},"count":1},"/tags/ecommerce":{"label":"#ecommerce","children":{},"count":2},"/tags/dropshipping":{"label":"#dropshipping","children":{},"count":1},"/tags/work":{"label":"#work","children":{},"count":14},"/tags/internal":{"label":"#internal","children":{},"count":11},"/tags/discussion":{"label":"#discussion","children":{},"count":6},"/tags/event":{"label":"#event","children":{},"count":6},"/tags/catchup":{"label":"#catchup","children":{},"count":5},"/tags/home":{"label":"#home","children":{},"count":1},"/tags/tauri":{"label":"#tauri","children":{},"count":1},"/tags/life-at-dwarves, backend-engineer, community-building":{"label":"#life-at-dwarves, backend-engineer, community-building","children":{},"count":1},"/tags/life-at-dwarves, backend-engineer, personal-development":{"label":"#life-at-dwarves, backend-engineer, personal-development","children":{},"count":1},"/tags/engineer":{"label":"#engineer","children":{},"count":1},"/tags/estimation":{"label":"#estimation","children":{},"count":1},"/tags/code-generation":{"label":"#code-generation","children":{},"count":1},"/tags/typesafe":{"label":"#typesafe","children":{},"count":1},"/tags/internship":{"label":"#internship","children":{},"count":2},"/tags/life-at-dwarves, backend-engineer, teamwork":{"label":"#life-at-dwarves, backend-engineer, teamwork","children":{},"count":1},"/tags/workshop":{"label":"#workshop","children":{},"count":1},"/tags/demo":{"label":"#demo","children":{},"count":1},"/tags/webrtc":{"label":"#webrtc","children":{},"count":1},"/tags/video-streaming":{"label":"#video-streaming","children":{},"count":1},"/tags/performance-review":{"label":"#performance-review","children":{},"count":1},"/tags/assessment":{"label":"#assessment","children":{},"count":1},"/tags/tech-radar":{"label":"#tech-radar","children":{},"count":1},"/tags/evaluating-tech":{"label":"#evaluating-tech","children":{},"count":1},"/tags/process":{"label":"#process","children":{},"count":8},"/tags/life-at-dwarves, product-executive, personal-growth":{"label":"#life-at-dwarves, product-executive, personal-growth","children":{},"count":1},"/tags/life-at-dwarves, frontend-engineer, community-member":{"label":"#life-at-dwarves, frontend-engineer, community-member","children":{},"count":1},"/tags/distributed-system":{"label":"#distributed-system","children":{},"count":1},"/tags/data-types":{"label":"#data-types","children":{},"count":1},"/tags/life-at-dwarves, communication-specialist, remote-work":{"label":"#life-at-dwarves, communication-specialist, remote-work","children":{},"count":1},"/tags/life-at-dwarves, qa-engineer, mentorship":{"label":"#life-at-dwarves, qa-engineer, mentorship","children":{},"count":1},"/tags/life-at-dwarves, qa-engineer, quality-standards":{"label":"#life-at-dwarves, qa-engineer, quality-standards","children":{},"count":1},"/tags/guidline":{"label":"#guidline","children":{},"count":1},"/tags/budgeting":{"label":"#budgeting","children":{},"count":3},"/tags/client":{"label":"#client","children":{},"count":1},"/tags/learning":{"label":"#learning","children":{},"count":3},"/tags/system design":{"label":"#system design","children":{},"count":1},"/tags/playbook":{"label":"#playbook","children":{},"count":3},"/tags/life-at-dwarves, backend-engineer, learning-culture":{"label":"#life-at-dwarves, backend-engineer, learning-culture","children":{},"count":1},"/tags/life-at-dwarves, backend-engineer, mentorship":{"label":"#life-at-dwarves, backend-engineer, mentorship","children":{},"count":3},"/tags/life-at-dwarves":{"label":"#life-at-dwarves","children":{},"count":2},"/tags/backend-engineer":{"label":"#backend-engineer","children":{},"count":1},"/tags/remote-work":{"label":"#remote-work","children":{},"count":1},"/tags/life-at-dwarves, frontend-engineer, community-building":{"label":"#life-at-dwarves, frontend-engineer, community-building","children":{},"count":1},"/tags/australia":{"label":"#australia","children":{},"count":1},"/tags/sargable-queries":{"label":"#sargable-queries","children":{},"count":1},"/tags/zookeeper":{"label":"#zookeeper","children":{},"count":1},"/tags/kafka":{"label":"#kafka","children":{},"count":1},"/tags/sequential-reads":{"label":"#sequential-reads","children":{},"count":1},"/tags/sequential-writes":{"label":"#sequential-writes","children":{},"count":1},"/tags/random-reads":{"label":"#random-reads","children":{},"count":1},"/tags/random-writes":{"label":"#random-writes","children":{},"count":1},"/tags/url-redirect":{"label":"#url-redirect","children":{},"count":1},"/tags/url-rewrite":{"label":"#url-rewrite","children":{},"count":1},"/tags/http":{"label":"#http","children":{},"count":1},"/tags/seo":{"label":"#SEO","children":{},"count":1},"/tags/life-at-dwarves, frontend-engineer, community-learning":{"label":"#life-at-dwarves, frontend-engineer, community-learning","children":{},"count":1},"/tags/life-at-dwarves, engineer, work-culture":{"label":"#life-at-dwarves, engineer, work-culture","children":{},"count":1},"/tags/life-at-dwarves, software-engineer, mentorship":{"label":"#life-at-dwarves, software-engineer, mentorship","children":{},"count":1},"/tags/nghenhan":{"label":"#nghenhan","children":{},"count":1},"/tags/hedge-foundation":{"label":"#hedge-foundation","children":{},"count":1},"/tags/remote-caching":{"label":"#remote-caching","children":{},"count":1},"/tags/deployment":{"label":"#deployment","children":{},"count":1},"/tags/target-branch":{"label":"#target-branch","children":{},"count":1},"/tags/vercel":{"label":"#vercel","children":{},"count":1},"/tags/research":{"label":"#research","children":{},"count":2},"/tags/aws":{"label":"#aws","children":{},"count":1},"/tags/aws-s3":{"label":"#aws-s3","children":{},"count":1},"/tags/localstack":{"label":"#localstack","children":{},"count":1},"/tags/vietnam":{"label":"#vietnam","children":{},"count":1},"/tags/write-heavy":{"label":"#write-heavy","children":{},"count":1},"/tags/inventory-platform":{"label":"#inventory-platform","children":{},"count":1},"/tags/scalability":{"label":"#scalability","children":{},"count":1},"/tags/doordash":{"label":"#doordash","children":{},"count":1},"/tags/low-latency":{"label":"#low-latency","children":{},"count":1},"/tags/sharing":{"label":"#sharing","children":{},"count":1},"/tags/management":{"label":"#management","children":{},"count":12},"/tags/teamwork":{"label":"#teamwork","children":{},"count":1},"/tags/multi-column-index":{"label":"#multi-column-index","children":{},"count":1},"/tags/index":{"label":"#index","children":{},"count":1},"/tags/composite-index":{"label":"#composite-index","children":{},"count":1},"/tags/components":{"label":"#components","children":{},"count":1},"/tags/technicaldebt":{"label":"#technicaldebt","children":{},"count":1},"/tags/projectmanagement":{"label":"#projectmanagement","children":{},"count":1},"/tags/email":{"label":"#email","children":{},"count":22},"/tags/decoder":{"label":"#decoder","children":{},"count":1},"/tags/json":{"label":"#json","children":{},"count":1},"/tags/materialized-view":{"label":"#materialized-view","children":{},"count":1},"/tags/data-warehouse":{"label":"#data-warehouse","children":{},"count":1},"/tags/mapreduce":{"label":"#mapreduce","children":{},"count":1},"/tags/distributed":{"label":"#distributed","children":{},"count":3},"/tags/form":{"label":"#form","children":{},"count":1},"/tags/uilibraries":{"label":"#uilibraries","children":{},"count":1},"/tags/migrations":{"label":"#migrations","children":{},"count":1},"/tags/behavior-driven-development":{"label":"#behavior-driven-development","children":{},"count":1},"/tags/ubiquitous-language":{"label":"#ubiquitous-language","children":{},"count":1},"/tags/forward-proxy":{"label":"#forward-proxy","children":{},"count":1},"/tags/secret":{"label":"#secret","children":{},"count":1},"/tags/kubeseal":{"label":"#kubeseal","children":{},"count":1},"/tags/sops":{"label":"#sops","children":{},"count":1},"/tags/feature-flags":{"label":"#feature-flags","children":{},"count":1},"/tags/progressive-delivery":{"label":"#progressive-delivery","children":{},"count":1},"/tags/dora":{"label":"#dora","children":{},"count":1},"/tags/apprenticeship":{"label":"#apprenticeship","children":{},"count":3},"/tags/life-at-dwarves, apprenticeship, backend-engineer":{"label":"#life-at-dwarves, apprenticeship, backend-engineer","children":{},"count":1},"/tags/remote":{"label":"#remote","children":{},"count":7},"/tags/showcase":{"label":"#showcase","children":{},"count":1},"/tags/life-at-dwarves, backend-engineer, golang":{"label":"#life-at-dwarves, backend-engineer, golang","children":{},"count":1},"/tags/life-at-dwarves, operations, techie-story":{"label":"#life-at-dwarves, operations, techie-story","children":{},"count":1},"/tags/life-at-dwarves, devops-engineer, personal-growth":{"label":"#life-at-dwarves, devops-engineer, personal-growth","children":{},"count":1},"/tags/life-at-dwarves, senior-engineer, mentorship":{"label":"#life-at-dwarves, senior-engineer, mentorship","children":{},"count":1},"/tags/quant":{"label":"#quant","children":{},"count":1},"/tags/writing":{"label":"#writing","children":{},"count":1},"/tags/english":{"label":"#english","children":{},"count":1},"/tags/life-at-dwarves, data-engineer, remote-work":{"label":"#life-at-dwarves, data-engineer, remote-work","children":{},"count":1},"/tags/apprentice":{"label":"#apprentice","children":{},"count":1},"/tags/life-at-dwarves, ui-designer, design-communication":{"label":"#life-at-dwarves, ui-designer, design-communication","children":{},"count":1},"/tags/blue-green-deployement":{"label":"#blue-green-deployement","children":{},"count":1},"/tags/deployment-strategy":{"label":"#deployment-strategy","children":{},"count":1},"/tags/production-traffic":{"label":"#production-traffic","children":{},"count":1},"/tags/resiliency":{"label":"#resiliency","children":{},"count":1},"/tags/life-at-dwarves, engineering-manager, mentorship":{"label":"#life-at-dwarves, engineering-manager, mentorship","children":{},"count":1},"/tags/meeting":{"label":"#meeting","children":{},"count":3},"/tags/us":{"label":"#us","children":{},"count":4},"/tags/funding":{"label":"#funding","children":{},"count":2},"/tags/ventures":{"label":"#ventures","children":{},"count":3},"/tags/mbti":{"label":"#mbti","children":{},"count":6},"/tags/intj":{"label":"#intj","children":{},"count":1},"/tags/istp":{"label":"#istp","children":{},"count":1},"/tags/estj":{"label":"#estj","children":{},"count":1},"/tags/istj":{"label":"#istj","children":{},"count":1},"/tags/personalities":{"label":"#personalities","children":{},"count":1},"/tags/early-stage":{"label":"#early-stage","children":{},"count":3},"/tags/design-thinking":{"label":"#design-thinking","children":{},"count":2},"/tags/healthcare":{"label":"#healthcare","children":{},"count":1},"/tags/browser-extension":{"label":"#browser-extension","children":{},"count":2},"/tags/git":{"label":"#git","children":{},"count":2},"/tags/life-at-dwarves, software-engineer, growth-mindset":{"label":"#life-at-dwarves, software-engineer, growth-mindset","children":{},"count":1},"/tags/life-at-dwarves, backend-engineer, career-change":{"label":"#life-at-dwarves, backend-engineer, career-change","children":{},"count":1},"/tags/marketplace":{"label":"#marketplace","children":{},"count":2},"/tags/real-estate":{"label":"#real-estate","children":{},"count":1},"/tags/nocode":{"label":"#nocode","children":{},"count":1},"/tags/hospitality":{"label":"#hospitality","children":{},"count":1},"/tags/ride-hailing":{"label":"#ride-hailing","children":{},"count":1},"/tags/iot":{"label":"#iot","children":{},"count":1},"/tags/macos":{"label":"#macos","children":{},"count":3},"/tags/swift":{"label":"#swift","children":{},"count":7},"/tags/partnership":{"label":"#partnership","children":{},"count":1},"/tags/travel":{"label":"#travel","children":{},"count":1},"/tags/innovation":{"label":"#innovation","children":{},"count":1},"/tags/purpose":{"label":"#purpose","children":{},"count":2},"/tags/delegate":{"label":"#delegate","children":{},"count":2},"/tags/transparency":{"label":"#transparency","children":{},"count":1},"/tags/event-sourcing":{"label":"#event-sourcing","children":{},"count":1},"/tags/sdlc":{"label":"#sdlc","children":{},"count":1},"/tags/life-at-dwarves, frontend-engineer, design-engineering":{"label":"#life-at-dwarves, frontend-engineer, design-engineering","children":{},"count":1},"/tags/modeling":{"label":"#modeling","children":{},"count":1},"/tags/life-at-dwarves, software-engineer, engineering-values":{"label":"#life-at-dwarves, software-engineer, engineering-values","children":{},"count":1},"/tags/burn-out":{"label":"#burn-out","children":{},"count":1},"/tags/goal":{"label":"#goal","children":{},"count":2},"/tags/license":{"label":"#license","children":{},"count":1},"/tags/template":{"label":"#template","children":{},"count":20},"/tags/k8s":{"label":"#k8s","children":{},"count":1},"/tags/clojure":{"label":"#clojure","children":{},"count":1},"/tags/employee":{"label":"#employee","children":{},"count":1},"/tags/onboarding":{"label":"#onboarding","children":{},"count":1},"/tags/assets":{"label":"#assets","children":{},"count":1},"/tags/marketing":{"label":"#marketing","children":{},"count":1},"/tags/human-resource":{"label":"#human-resource","children":{},"count":1},"/tags/dcos":{"label":"#dcos","children":{},"count":5},"/tags/okr":{"label":"#okr","children":{},"count":1},"/tags/oss":{"label":"#oss","children":{},"count":1},"/tags/policy":{"label":"#policy","children":{},"count":1}}}},"content":"<h3 id=\"topics-and-highlights\">Topics and Highlights</h3>\n<ul>\n<li><strong>Session setup &#x26; check-in</strong>: Kicked off with a casual vibe, confirming no all-hands this week and setting up three talks. Phát skipped his slot, and the team troubleshooted screen sharing for demos.</li>\n<li><strong>AI fine-tuning overview</strong>: Explored fine-tuning vs. retraining, using a doctor’s note example to show how fine-tuning embeds knowledge while retraining leans on token-heavy prompts.</li>\n<li><strong>Fine-tuning demo</strong>: Showcased a Duty 40 Mini fine-tuning job on Open AI (~4800 tokens), comparing pre- and post-tuning results, with a nod to local vs. hosted model trade-offs.</li>\n<li><strong>Data archiving essentials</strong>: Biên broke down archiving vs. backup for apps with 50K-1M daily transactions, focusing on metadata, cloud storage, and recovery to optimize query performance.</li>\n<li><strong>Archiving tools &#x26; Q&#x26;A</strong>: Highlighted tools like AWS, Google Cloud, and Timescale, plus hot/warm/cold storage options (Azure, Backblaze), with audience questions on scheduling and platform quirks.</li>\n<li><strong>Datalake foundations</strong>: An traced datalakes from 1980s databases to today’s cloud systems, contrasting warehouse ETL (structured) with datalake ELT (raw data) workflows.</li>\n<li><strong>Notion’s datalake scaling</strong>: Detailed Notion’s growth to 96 instances and 400+ shards by 2023, shifting from warehouse to datalake with Debezium CDC, Kafka, Hudi, and S3 for analytics.</li>\n<li><strong>Interactive wrap-up</strong>: Fielded questions on datalake vs. replication, async processing, and external data handling (e.g., social media), ending with reflections on big data skillset.</li>\n</ul>\n<h3 id=\"vietnamese-transcript\">Vietnamese transcript</h3>\n<p><strong>[00:00]</strong> Hình như tuần sau mới có all-hand. Không thấy ai tạo event gì hết, chắc tuần này cứ bình thường thôi nhá. Anh em kiểm tra xem màn hình sharing có vấn đề gì không. Hay lên luôn nhỉ? Hôm nay chắc có ba bài thôi đâu đó. Phát vừa bảo tuần này cậu không có gì mới, chắc skip hôm nay rồi. Anh em thử share màn hình cá nhân xem sao nào. Xem trước được không?</p>\n<p><strong>[10:42]</strong> Theo lịch chắc anh nhỉ, để em lên trước nhá. Fine-tuning này, chủ đề này không mới lắm đâu. Bài này chỉ là 100.5 thôi, không phải 101, nên chỉ giới thiệu sơ sơ, chưa đi sâu được đâu. Tại em cũng mù mờ lắm, nên chắc giới thiệu sơ vậy thôi. Hôm nay em giới thiệu bài fine-tuning. Đây là agenda của bài này nè.</p>\n<p><strong>[12:24]</strong> Introduction là nếu mọi người dùng AI, chắc có nghe tới khái niệm fine-tuning rồi. AI có mấy mô hình đa số được fit vào dữ liệu từ một ngày nào đó, với mấy cái data privacy hoặc data của domain riêng. Dữ liệu này không xuất hiện trong knowledge của mô hình nền tảng (foundation model). Để mô hình có được kiến thức đó, người ta thường dùng retraining, đúng không? Nhưng còn một cách khác gọi là fine-tuning. Cuối bài, em sẽ so sánh hai cách này, xem lúc nào nên dùng cái nào, lúc nào không.</p>\n<p><strong>[13:08]</strong> Trước mắt, cứ hiểu fine-tuning như cách để mở rộng kiến thức cho mô hình nền tảng vậy. Fine-tuning là gì? Hiểu đơn giản là mọi người retrain lại mô hình, lấy một mô hình nền, đưa vào một dataset gì đó để fine-tune, nghĩa là retrain lại nó. Sau khi fine-tune xong, ta được một mô hình đã điều chỉnh, gọi là fine-tuned model.</p>\n<p><strong>[13:44]</strong> Tại sao fine-tuning mang được kiến thức mới? Hiểu đơn giản là trong một AI model, kiến thức được lưu qua mấy cái mạng nơ-ron. Fine-tuning sẽ cập nhật các weight, các thông số của mạng nơ-ron đó, để nó phù hợp với kiến thức mới. Khi ném kiến thức mới vào, mấy cái weight thay đổi, lúc này mô hình đã được cập nhật kiến thức rồi.</p>\n<p><strong>[14:19]</strong> Khi ném kiến thức mới vào, mấy cái weight thay đổi, lúc này mô hình đã được cập nhật kiến thức rồi. Khi fine-tune mô hình trong thực tế, không phải chỉ ném dataset vào rồi retrain là xong. Đúng là ra một mô hình fine-tuned, nhưng không biết cái mô hình sau retrain này có tốt hay không. Em sẽ giới thiệu một workflow mà bên ngoài thường dùng để fine-tune.</p>\n<p><strong>[14:59]</strong> Cái flow này, nó gồm nhiều bước như thế này. Mọi người có thể chia thành hai cụm, hai cụm nhá. Cái flow này, em sẽ chia thành hai cụm. Em đi qua cụm một trước. Cụm đầu tiên là cụm ở bên trái, hiểu đơn giản là một base model ban đầu. Sau đó, mọi người có một dataset mới, một cái gì đó mới, mọi người quăng vô, fine-tune nó. Rồi nó ra một model, mọi người sẽ supervise nó, có nghĩa là mọi người retrain nó dưới kiểu là retrain nó.</p>\n<p><strong>[15:38]</strong> Sẽ cho nó thêm kiến thức, với input này thì output sẽ ra như này. Nó sẽ ra một cái gọi là supervised fine-tuning. Sau đó, để em đi qua phần tiếp. OK, cái fine-tuning này là retrain on data, nghĩa là sẽ cho một cặp input-output trong dataset để nó học. Nó sẽ học được những kiến thức mới đó. Để bước này hoàn hảo, dataset phải được clean. Nó phải clean, không được lẫn với những cái khác. Nghĩa là nó phải specific cho cái domain mà mình muốn train nó.</p>\n<p><strong>[16:31]</strong> Quay lại hình này, sau khi mọi người có một cái model đã được retrain xong, mọi người mang lên production, mọi người dùng, đúng không? Lúc này, bên ngoài sẽ sử dụng một cái system gọi là human feedback. Kiểu như là response của model này có làm bạn hài lòng không, chấm từ 1 tới N sao, kiểu vậy á. Mọi người sẽ collect cái data đó. Nó nằm ở bước này, mọi người sẽ thu thập human feedback từ cái retrained model của mọi người.</p>\n<p><strong>[17:06]</strong> Dựa vào cái feedback đó, mọi người gọi bước này hơi tốn tài nguyên chút. Mọi người sẽ phải retrain một cái model riêng. Cái model này dùng để đánh giá xem response này được chấm bao nhiêu điểm. Kế đó, mọi người tới bước thứ ba, bước cuối. Ở bước này, mọi người sẽ dùng thuật toán như reinforcement learning để kết hợp với cái retrained model và cái reward model của mọi người.</p>\n<p><strong>[17:46]</strong> Mọi người retrain, mọi người lại fine-tune cái model một lần nữa. Nó sẽ ra cho mọi người một cái gọi là model tối ưu. Cái vòng lặp này cứ tiếp tục, tiếp tục mãi. Mọi người có cái model đã retrain xong, thu thập human feedback, rồi kết hợp ba cái đó để retrain cái model thêm lần nữa. Càng ngày, cái model sẽ càng ok hơn với những gì mà mình muốn. Đó là cái flow mà em thấy bên ngoài, trong production, người ta hay dùng.</p>\n<p><strong>[18:24]</strong> Trong quá trình fine-tuning, ,ọi người sẽ thường nghe tới khái niệm gọi là catastrophic forgetting. Nghĩa là sao? Nghĩa là khi mọi người retrain kiến thức mới vào, nó sẽ làm giảm performance với những kiến thức cũ. Tại sao chuyện này xảy ra? Như em đã nói, kiến thức của một model dựa vào mấy cái weight, dựa vào kiến trúc của cái model đó và những tham số của nó. Tham số dynamic trong một model là mấy cái weight. Khi mọi người retrain, mấy cái weight này thay đổi, đúng không?</p>\n<p><strong>[19:00]</strong> Khi nó thay đổi, có phải là kiến thức cũ sẽ bị giảm bớt độ chính xác đi không? Nếu trong dataset của mọi người có nhiều dữ liệu bị overfitting, nghĩa là dataset của mọi người quá đúng, quá đúng trong cái dataset đó. Khi một người quăng cái gì mới vào, nó sẽ sai với những cái cũ đi. Người ta gọi đó là overfitting, nghĩa là nó bị fold in quá mức vào những cái training data. Khi gặp data mới, nó sẽ giảm performance.</p>\n<p><strong>[19:42]</strong> Nên lúc này, bên ngoài người ta sử dụng một kỹ thuật gọi là parameter-efficient fine-tuning, gọi là PEFT. Nó có nhiều cách, nhiều kỹ thuật trong method này, như LoRA này kia. Nhưng trung quy, đa số bọn họ không phải update hết tất cả các weight trong cái model đó. Bọn họ sẽ chỉ đóng băng những layer nào không cần thiết. Họ sẽ đóng băng mấy cái layer không cần thiết, rồi chỉ update một số lượng nhất định các weight thôi. Để tránh trường hợp kiến thức cũ bị mất đi quá nhiều. Đó là cái cơ bản. Còn sâu hơn về mấy cái algorithm đằng sau, mọi người có thể tự tìm hiểu.</p>\n<p><strong>[20:27]</strong> Quay lại câu hỏi lúc ban đầu, ha, nó với retraining khác nhau thế nào, nên dùng cái nào? Có cái bảng đây, mọi người có thể dễ dàng nhận ra. Retraining là dữ liệu phụ thuộc vào database của mọi người. Cứ quăng vào, quăng vào, lúc nào data cũng được update liên tục. Còn fine-tuning là mọi người retrain lại model, nên lúc nào data cũng chỉ ở cái chỗ mà mọi người đã retrain thôi.</p>\n<p><strong>[21:16]</strong> Kế tiếp là customize and learning style. Nghĩa là cái retraining, mục đích của nó là cho mình một cái knowledge base để mình lấy mấy cái knowledge base đó ra tham chiếu, sử dụng. Còn fine-tuning thì sao? Nó upgrade cái não của model lên, để nó có sẵn cái knowledge đó luôn. Còn mấy cái ở dưới thì chắc mọi người tự tìm hiểu tiếp ha.</p>\n<p><strong>[21:57]</strong> Em có một cái ví dụ như vậy. Ví dụ như là mọi người muốn làm một cái system để giải thích những cái note của bác sĩ, đúng không? Những cái note của bác sĩ, mọi người có thể biết là những cái note của bác sĩ nó có rất là nhiều từ chuyên ngành. Và những từ chuyên ngành đó nó còn viết tắt, viết kiểu luộm thuộm nữa.</p>\n<p><strong>[22:44]</strong> Nếu mọi người sử dụng fine-tuning á, mọi người sẽ cho nó học hết tất cả những cái kiến thức luộm thuộm, những cái shorthand, những cái handwriting đó của bác sĩ. Nên khi mọi người input một cái note của bác sĩ vô, nó sẽ trả lời được rất đúng. Còn nếu mọi người dùng retraining á, khi mọi người input một cái note của bác sĩ vô, nó sẽ kiếm được những cái relevant data, mang ra đọc. Nhưng bản chất là cái model nó không hiểu được những từ đó, nên nó cũng sẽ không đưa cho mọi người một câu trả lời chính xác.</p>\n<p><strong>[23:16]</strong> Mọi người có thể hiểu như này: fine-tuning là mình nhờ một bác sĩ đọc một cái note của bác sĩ. Còn retraining là mọi người đưa cho một người có kiến thức rất rộng đọc một cái note của bác sĩ. Người đó có thể kiến thức rất rộng, nhưng về mấy cái chuyên ngành, mấy cái chuyên ngành thật sự, thì nó không đủ sâu như của một bác sĩ thực thụ. Nên độ chính xác sẽ không cao.</p>\n<p><strong>[23:57]</strong> Thứ hai, mọi người có thể nói, bây giờ với retraining, mình dùng một cái system prompt để list hết mấy cái shorthand của bác sĩ ra trong system prompt, nó sẽ tự hiểu thôi. Nhưng làm vậy, mọi người sẽ bị tốn token, đúng không? Tại vì khi mọi người dùng retraining, mọi người lấy hết cái retraining data ra, quăng một cái knowledge retraining vô, lại cộng thêm đống cái zero-shot, mấy cái description, mấy cái đi kèm theo nó trong một cái prompt á, thì nó rất tốn token.</p>\n<p><strong>[24:34]</strong> Và khi ở trong một cái long conversation với một cái model, nó đâu phải chỉ dựa vào câu hỏi của mình đâu. Nó sẽ dựa vào tất cả các cuộc trò chuyện từ trước tới giờ của mình mà nó trả lời cho mình. Lúc này, nó sẽ dẫn tới trường hợp là nó bị limit bởi token. Đó là cái drawback khi sử dụng retraining, là nó sẽ tốn token. Tại vì mọi người cần token để chạy cái system prompt của mọi người nữa. Còn fine-tuning, bản chất là model nó đã có kiến thức rồi, nên không cần phải có system prompt.</p>\n<p><strong>[25:14]</strong> Đó là sơ qua về fine-tuning. Chắc có cái demo cho mọi người xem sẽ rõ hơn ha. Bây giờ em sẽ fine-tune một cái model là Duty 40 Mini ha. Em có một cái dataset như này. Ừ, như này thì mỗi thứ nó sẽ có một cái system như retraining, rồi user hỏi cái này thì muốn nó trả lời vậy, đúng không? Em cộng 10 cái, 10 record trong cái dataset này, em sẽ fine-tune nó.</p>\n<p><strong>[26:13]</strong> Trước khi fine-tune, em sẽ cho nó chạy qua một đoạn code để em estimate được. Tại vì em dùng Open AI, nên sẽ tốn tiền. Nên mình sẽ tính được estimate là nó sẽ charge mình bao nhiêu. Em dùng xong, khúc cuối nó sẽ kiểu, tầm khoảng 4800, sắp xỉ 4800 token. Cái này chỉ là tham khảo thôi, nhưng em thấy nó cũng đúng. Sau đó, em sẽ upload cái file data này lên Open AI. Nó sẽ cho em cái file ở trên cái Open AI của em.</p>\n<p><strong>[27:03]</strong> Rồi em sẽ training nó. Em sẽ tạo một cái fine-tuning job. Lúc này, ở trên Open AI, nó sẽ chạy một cái job này. Mọi người có thể lên đây, mọi người đọc, mọi người quan sát. Nó sẽ không trả kết quả liền, nó sẽ tạo một cái job để pending ra đó, để trên Open AI nó fine-tune cho mình. Trong lúc chờ, mình có thể theo dõi quá trình của nó như thế nào. Sau khi xong đâu rồi, nó sẽ thông báo cho mình. Mình cứ stamp cái câu này, cứ check cái câu này để coi nó đã hoàn thành hay chưa. Mình đọc ở cái chỗ đó.</p>\n<p><strong>[27:58]</strong> Sau khi xong, nó sẽ cho mình mấy cái result status. Sau khi fine-tune xong, với cùng một câu hỏi, ví dụ đây là cái câu hỏi em sử dụng, em dùng câu hỏi này. Cái câu hỏi này gần giống với một cái record trong đống dataset của em. Sau khi em chạy, nó sẽ trả lời như vậy. Nhưng trước khi fine-tune, em dùng một cái model bình thường nha, model bình thường thì nó sẽ trả lời kiểu vậy.</p>\n<p><strong>[28:49]</strong> Có nghĩa là em fine-tune thì nó đã thành công. Đó là cái cách em sử dụng Open AI để fine-tune một cái model. Demo của em tới đây thôi. Anh em có câu hỏi gì không? Đúng rồi, cái này demo em xài tuning chứ để tự fine-tune bằng local mà xịn xịn thì chắc không đủ đồ. Dạ, đồ ngon nhõ thôi. Thực ra có mấy cái model trước, tô nó trên LoRA các thứ, cũng có thể demo được. Nhưng tô không, bài này easy, bài này kiểu một...</p>\n<p><strong>[29:47]</strong> Lẻ tẻ trầm mấy á. Đúng, chắc cũng ổn mà. Nói chung, những đội enterprise hay không muốn tốn thời gian xây dựng GPU thì sẽ dùng cách này. Diagram GPT hồi trước, GPT-4o Mini ra thì fine-tuning đã miễn phí, dùng cái này cũng tiện lợi cho họ. Cái cửa hàng demo cho anh em là sử dụng một cái như kiểu service ấy. Open AI cung cấp service fine-tuning, đưa lên mấy cái model của nó luôn. Mình pick mấy cái model, chắc là pick model mini á. Chắc chi phí nó không cao lắm.</p>\n<p><strong>[30:37]</strong> Đấy cũng là một cách. Nhưng vấn đề thực ra là mình vẫn không phải người own cái model đấy. Bản chất là vẫn host ở trên server của họ. Còn có một cách khác là tự build server và tự running. Trường hợp hôm nay đã khác. Anh em xem, hôm qua em có thử một cái model có 3 billion parameter thôi. Nhưng nó chạy hai ba tiếng, nó chưa xong đâu anh. Thực ra bài này, cái version nó đơn giản hơn một cái bây giờ, nhỏ hơn của bài trước. đầu.</p>\n<p><strong>[31:26]</strong> Nó là một cái full flow liên quan đến gì ta, reinforcement feedback. Ý là cái em giới thiệu ở bên ngoài production á, là khi người ta tuning á. Người ta không phải chỉ fine-tune xong là dùng liền, người ta phải đánh giá lại coi nó có đúng không. Người ta phải cho nó vô cái cycle để càng cải tiến cái fine-tuned model nữa, kiểu vậy. Đây là một cái flow như vậy. Bản chất nó cũng model thôi, đâu có gì đâu. Quan trọng là mọi người biết được những cái cost để đánh giá cái approach thôi.</p>\n<p><strong>[32:05]</strong> Tại ra nó vẫn là bài toán accuracy, đúng không? Mình chọn cách nào để làm cái output nó chính xác hơn. Những cái method như retraining hay fine-tuning, nó sẽ có những nhược điểm khác nhau. Và thực ra kể cả fine-tuning, nó cũng có nhiều method fine-tuning khác nhau. Chắc là cần đi sâu hơn để xác định mấy cái đó. Cái này vẫn hơi general. Chắc vậy, Hoàng. Nếu có điều kiện thì chắc đi sâu hơn tí nữa.</p>\n<p><strong>[32:48]</strong> Sâu hơn theo kiểu là có mấy cái method liên quan đến phần retraining các thứ. Sử dụng fine-tuning method á, có một số cái method nó tương đối tiết kiệm về mặt tài nguyên. Tất nhiên, nó sẽ đánh đổi với một số thứ khác, kiểu vậy. Giới thiệu cái đó để anh em xem thử đâu đó. Mọi người hỏi, Đạt hỏi là khi nào cần fine-tuning. Nói là fine-tuning cần khi mà mọi người muốn nó có một cái kiến thức, một cái specific topic nào đó. Mọi người có thể cân nhắc sử dụng fine-tuning.</p>\n<p><strong>[33:39]</strong> Nhưng trong tất cả trường hợp, em thấy bên ngoài, đa số mọi người sẽ prefer dùng retraining. Tại vì nó dễ và tốn ít tài nguyên hơn. Nhưng một số trường hợp như lúc này, cái ví dụ em nói về cái note của bác sĩ á, suppose là nên dùng tuning. Rồi tùy cái kiến trúc, tùy cái mình chia system của mình ra nhiều system nhỏ, system nhỏ nó như thế nào nữa, tùy. Có thể có một vài cái use case như kiểu chúng nó muốn host mấy cái model bé bé, model bé chẳng hạn.</p>\n<p><strong>[34:18]</strong> Chỉ kiểu dành để làm một cái task cụ thể thôi. Ví dụ như phân tích thời tiết, độ ẩm các thứ để perform cái action nào đấy. Ví dụ như thay đổi cái theme của điện thoại hay để chỉ action nào đấy chẳng hạn. Có thể retrain cái model bé bé để chỉ cần làm chuyện đó thôi, không cần phải cần network các thứ gì cả. Chắc vậy. Từ giờ chắc là Biên ha?</p>\n<p><strong>[36:13]</strong> Dụng cái và build cái recovery process cho nó. Chi tiết như nào thì nó sẽ có một vài phần chính. Trước tiên là cái lý do mà mình cần cái kỹ thuật này và so sánh nó với một cái quen thuộc hơn là backup. Sau đó là đi vào việc để mình build và những cái mình cần để ý, những cái gì. Đầu tiên là trên thực tế, thường có những tổ chức, những công ty mà chạy những cái app với lưu lượng dữ liệu cao á. Ví dụ như giao dịch chứng khoán này nọ. Như em ví dụ này là kiểu 50.000 transaction.</p>\n<p><strong>[37:12]</strong> Như em ví dụ này là kiểu 50.000 mỗi ngày là ít á, kiểu vọt lên 500.000, triệu transaction mỗi ngày. Sau khoảng thời gian, cái lượng data nó sẽ phồng lên rất rất lớn, ảnh hưởng đến cái việc mà mình query data và ảnh hưởng đến cái trải nghiệm người dùng. Trong những cái data đó, sẽ có những cái data mà dùng rồi thì nó rất ít được access lại nữa. Ví dụ như lịch sử trên 7 năm trước chẳng hạn. Nó sẽ dẫn đến một cái vấn đề, làm sao để mình giải quyết cái đống data đó. Nên mình mới dùng cái kỹ thuật là data archiving.</p>\n<p><strong>[38:14]</strong> Nó sẽ có những cái lợi ích để counter lại những chuyện bên trên. Đầu tiên là cái data mà mình sử dụng, mà nó set liên tục á, query ghi đọc liên tục á, thì nó thường tốn chi phí cao. Mình sẽ dùng cái kỹ thuật này, mình sẽ đem data của mình bỏ qua một cái chỗ khác, chi phí rẻ hơn, access ít hơn. Từ đó, nó sẽ làm tăng được cái performance của app của mình trong việc query hay aggregate data các thứ.</p>\n<p><strong>[39:07]</strong> Về mặt pháp lý hay reusable, những cái data đó nó sẽ được bảo vệ an toàn, không bị ảnh hưởng bởi những yếu tố bên ngoài. Để sau này khi mình dùng lại, mình có thể lấy ra dùng được. Như mọi người hay nói, mọi người sẽ liên tưởng đến cái data backup, thường dùng trong việc restore data, restore cái system hay app nếu có lỗi xảy ra. Mà hai thằng này, nó sẽ khác nhau ở chỗ là data backup á, nó sẽ dùng cho cái việc hotfix cái system nhiều hơn. Còn cái thằng archiving...</p>\n<p><strong>[39:59]</strong> Data archiving thì nó hướng về cái việc lưu trữ data một cách lâu dài. Nó sẽ có cái chi tiết so sánh như này. Để mình đi build một cái architecture, một cái system để archive data, xong rồi dùng nó để recovery lúc mình cần thì sẽ làm như sau. Mọi người thấy, nó sẽ có ba cái note chính. Thứ nhất là mình lưu data lại, mình dùng metadata để interact với những cái data đó, rồi mình bỏ lên một chỗ, ví dụ như những cái cloud-based service, cloud storage service, để mình lưu trữ cái data đó.</p>\n<p><strong>[40:51]</strong> Về chi tiết, để lưu trữ cái dữ liệu á, đầu tiên mình phải xác định những cái dữ liệu cần được lưu trữ. Phải phân tích xem dữ liệu nào hay được sử dụng, dữ liệu nào không được sử dụng, ít được truy cập. Sẽ có nhiều công cụ để mình làm những cái đó. Ví dụ như phân tích từ business requirement, hoặc từ các công cụ phân tích, mấy cái công cụ phân tích á. Từ đó, mình mới biết cái data nào là cần, cái nào có thể đem đi archive lại.</p>\n<p><strong>[42:05]</strong> Sau đó, mình sẽ gói nó lại, dùng một vài biện pháp như vector hóa nó, encode nó, rồi dùng checksum các thứ để đảm bảo cái data nó sẽ đúng. Sau này, khi mình sử dụng lại, mình truy cập lại một cách nhanh chóng. Tại vì những cái database này, nó gói lại ở một cái storage khác với cái mình hay set, nên mình cần phải lưu lại cái metadata của nó. Ví dụ như lưu theo tháng ha, hoặc lưu theo account, để sau mình query lại thì dễ hơn.</p>\n<p><strong>[43:07]</strong> Sau khi archive xong, mình muốn sử dụng lại á, thì vừa đây là cái ví dụ em để recovery. Mình sẽ tận dụng những cái metadata lúc nãy, mình search lại những cái block data mà mình cần, rồi đưa về cái môi trường tính toán lại nó khi cần thiết. Cái này nó có lợi ích là khi mình làm những chuyện này, nó sẽ không tác động đến cái data production của cái ứng dụng đang chạy. Mình có thể làm song song được. Mình muốn làm gì với nó thì làm, không chọc ngoáy vào trong cái production, sẽ đảm bảo an toàn được.</p>\n<p><strong>[43:51]</strong> Cho cái trải nghiệm người dùng, như sản phẩm của mình đó. Nói đến đây, có một vài cái practice cho việc sử dụng, xây dựng cái hệ thống này. Nó cũng đơn giản lắm nhỉ. Mình sẽ phải review lại những cái policy mà mình đặt ra để cái hệ thống này chạy, xem data nó có trọn vẹn hay không. Mình sẽ automation những cái step của cái process này. Hiện tại cũng có nhiều tool hỗ trợ mình rồi, ví dụ như AWS, hay Google, đều có những cái như...</p>\n<p><strong>[45:14]</strong> Google Cloud chẳng hạn. Mình chỉ cần viết những cái đơn giản để đẩy lên trên đó thôi. Và mình không thể thiếu cái monitoring để xem data này có hoạt động tốt hay không. Xong rồi, có những kỹ thuật khác như checksum này nọ, để đảm bảo data của mình luôn trọn vẹn. Khi mình cần, cũng sẽ có những chiến lược như schedule trước cái data. Tại vì những cái data này nó tồn tại lâu, nó cũng sẽ lớn, cũng sẽ phồng lên trên cái storage, cái cloud storage mà mình dùng để lưu trữ nó.</p>\n<p><strong>[46:05]</strong> Nên sẽ có những chiến lược như khi nào cần thì phải schedule trước, bao nhiêu thời gian đó để nó replicate data cho mình chẳng hạn. Kế của em chỉ như vậy thôi. Lý thuyết kiểu để giải quyết cái mục đích cuối cùng là nói mọi người về việc giải quyết những cái data tồn động lâu dài, nhưng không sử dụng đến nhiều trong cái hệ thống mà mình build thôi. Ví dụ như bên ngân hàng chẳng hạn, sẽ có kiểu user trade, trade của user nó lên đến cả trăm triệu record chẳng hạn.</p>\n<p><strong>[46:45]</strong> Sau này, nó sẽ lên nữa. Tức là query những cái data gần thôi, nhưng nó cũng rất tốn thời gian, kiểu vậy. Đó là những cái mà em nói hôm nay, hết. Mọi người có hỏi gì không? Khi mà store data, zip data, là mình sẽ zip một cái đoạn fragment trong quá khứ mà nó không sử dụng data đấy cho mục đích hiện tại, đúng không? Dạ, đúng rồi, đúng rồi. Đồng ý, việc em sẽ phải xóa. Khi xong, em phải xóa cái đó, đúng rồi. Nên mình sẽ có những cái load lại để tính toán khi cần.</p>\n<p><strong>[47:41]</strong> Nên mình mới có mấy cái kiểu để mình làm nó an toàn. Mình có hỏi kìa. Em chưa biết cái cơm của Thỏ có biết cái này không, so sánh được không? Đứng ra là Timescale, nó có cơ chế move chunk. Ví dụ là mình compression như bình thường thôi. Thêm về cái vụ là mình có hot, warm, và cold storage. Ví dụ mình backup hàng tuần thì để trên hot storage của Azure. Nếu là cũ quá, ví dụ 2, 3, 4, 5 năm, thì để trên cold storage của Azure, hoặc là Backblaze. Nó sẽ có riêng cái dịch vụ cho mình move cái chất data đó.</p>\n<p><strong>[48:53]</strong> Đúng cái vị trí object hoặc block storage, mình tương tác với Timescale để đảm bảo lúc mình cần tiết kiệm tiền với data cũ. Có thể tiết kiệm được, vốn có thể query, với trade-off là mình sẽ query hơi chậm với data hơi cũ thôi. Dạ, cái em hiểu là để tùy vào cái platform mình dùng để build ha anh. Ví dụ như bên Microsoft thì cũng sẽ có những cái tùy vào thời gian của database, hoặc tùy vào tuổi thọ của data, hay dung lượng này nọ, thì sẽ có những cái level khác nhau.</p>\n<p><strong>[49:40]</strong> Ví dụ nó sẽ có delay, hay bình thường vẫn access, hay delay cho những cái mà không dùng một thời gian lâu nữa. Cái đó là để mình cụ thể trên từng tool thôi. Còn chung chung, nó là anh đang cái này làm gì thì đứng ra là Timescale thì phù hợp cho cái kiểu pattern này, cho về time series. Bên phía Azure thì họ làm cho nó phù hợp với status, hơi giống như Timescale, nhưng nó kiểu giúp mình partition và shard đúng theo kiểu mình mong muốn.</p>\n<p><strong>[50:39]</strong> Mỗi một cái nó sẽ có ưu điểm, nhược điểm riêng. Với AWS thì đứng ra là với cái dịch vụ này thì phải coi chừng cái hardware cho lưu cái data này, nó có ổn định không. Ví dụ bên phía Azure cold storage thì nó dùng đĩa, đĩa gì ta, đĩa hơi khá đặc trưng. Phải dùng cái máy laser để in vào trong đó. Nên query rất nhanh, nhưng insert thì cũng hơi chậm, kiểu insert một đống cũng mất vài phút. Vì phải có một cái laser cứng để in ở trên đó, không có virtualization layer.</p>\n<p><strong>[51:23]</strong> Mỗi một service và mỗi một cái kiểu tool mình dùng cho compress và lưu trữ sẽ có ưu điểm, nhược điểm riêng, theo cái platform mình subscribe. Dạ, đúng rồi. Cái này không chỉ là mấy cái tool kiểu như AWS hay Google service. Nó là kiểu mình cũng có thể cân nhắc cho cái business của mình nữa. Nên cái này kiểu chung chung thôi. Còn từng platform, nó sẽ dùng những kỹ thuật khác nhau. Mục đích chung cuối cùng là để giải quyết cái vấn đề data nó lớn lên, nhưng ảnh hưởng đến cái việc mình query, mình nó chạy thôi</p>\n<p><strong>[52:16]</strong> Nhiều cách giải quyết cho câu chuyện optimize query, đúng không? Khi mà vấn đề là do data quá lớn, thì có một vài cách. Cách của biên là một cách, tức là sẽ có một phần data mình đang không xài đến, thì ta cắt đi ra, lưu đâu đấy. Về sau mà có cần đến past data thì insert lại xài sau. Còn mình để đâu đó tầm bao nhiêu phần trăm data hiện tại, đủ để xài mục đích hiện tại, query đi nó nhanh hơn.</p>\n<p><strong>[52:59]</strong> Còn một số cách khác thì xài thằng tooling, có một số kiểu database hay kiểu như Timescale, thì nó sẽ optimize luôn cho chuyện query với lượng data lớn lớn. Em nghĩ là bên dưới thì nó cũng sẽ tự động kiểu nó buff lên đâu đó, nó giữ giúp mình thôi, đúng không anh? Nên mình tỉ mỉ bên dưới, mình dùng là interface thôi. Cái bên dưới thì gần gần như nhau, như các em ta. Cảm ơn biên, vậy thôi. Chắc bài cuối của An, không biết có liên quan không. Không biết còn liên quan một tí gì đến cái cộng đồng viên không.</p>\n<p><strong>[54:00]</strong> Chắc có thì chắc cũng nói sơ sơ thôi, cũng không nhiều cái. Cũng gần giống như bài của Biên, nhưng use case cũng gần giống á. Nó mở rộng ra tí thôi. Tí rồi thì bài này là nói sơ về cái datalake với lại cái use case của thằng Notion. Mình nói cái datalake trước. Datalake thì chắc mọi người nghe miết rồi, xưa giờ cũng hơi lâu rồi đó. Mình nhìn lại cái quá trình phát triển của tụi datalake này, coi là mình đang đi tới đâu.</p>\n<p><strong>[54:54]</strong> Thật ra từ lúc bắt đầu, hồi tầm 1980 gì đó, là thời đại của thằng database, mấy thằng database warehouse, mấy cái mà mình đang xài hiện tại á. Về table các kiểu, tạo table rồi xử lý data. Sau này, tới cái đợt tầm năm 2000 các kiểu, tụi mấy thằng big tech bắt đầu thu thập data nhiều á. Rồi nó tận dụng mấy data đó, thì mới sinh ra mấy thằng để giải quyết vấn đề lưu trữ data và xử lý data trên dữ liệu lớn. Như là mấy dữ liệu lưu theo dạng file đồ á. Mấy cái này, mấy thuật ngữ như là cái MapReduce này nè.</p>\n<p><strong>[55:44]</strong> Hình như trong cái memo của mình có một bài về MapReduce. Nếu mọi người không biết thì có thể search lại, tìm đọc thử xem cái MapReduce hồi xưa nó làm cái gì. Nó là cái tiền thân của tuổi. Sau này nó tích hợp vô thôi, giờ không xài nữa, nhưng chắc là nó tích hợp sẵn hết rồi. Sau cái thời gian phát triển của thằng này, mới bắt đầu 2010, thì mới đẻ ra, trước 2010 tí, đẻ ra khái niệm về datalake, big data, cloud, là cái internal data warehouse á, trên cloud á. Nó cloud thôi.</p>\n<p><strong>[56:28]</strong> Sau này, cái đợt bây giờ á, thì nó bắt đầu phát triển hơn nữa, là về cái lake và datamart. Lake chắc bản chất là kết hợp giữa mấy cái của tụi datalake và cái warehouse thôi, để rồi đặt thành cái house. Như là mấy thằng như thằng Datadog, nó đang làm sao không biết, nhưng mình chắc là đang nói về cái này hơi đi sau thời đại tí. Để tập trung vào, chắc mình coi sơ một cái data architecture chung chung trước. Cái này, bữa cái bài của Tom có đăng, cũng có một cái diagram. Nó cũng tinh gọn hơn cái này, tinh gọn hơn tí, là cũng về cái data đi qua mấy cái layer, là processing rồi mới tới thằng gì đó.</p>\n<p><strong>[57:20]</strong> Cái này nó sẽ thể hiện rõ hơn tí, là trong một cái datalake, mình sẽ lưu những loại data gì. So với thằng data warehouse, mình chỉ lưu mấy thằng structured data thôi, hoặc là mấy cái như lưu table data clean hết rồi. Còn thằng datalake này thì nó raw data, nó sẽ cả structured, unstructured, semi-structured data luôn. Nó sẽ lưu dạng raw, sau đó nó mới xử lý data, transform data, rồi nó quăng qua cho cái đám bên BI analytics, hoặc là quăng vô cái warehouse khác để chứa cái data đã được process rồi á.</p>\n<p><strong>[58:18]</strong> Còn cái layer mà analytics sandbox này, thì nó là một cái layer để cho tụi data scientist, hoặc mấy thằng mà cần dùng cái raw data, process data, mà nó không ảnh hưởng tới cái process chính. Bên đây á, thì nó sẽ làm việc trên cái sandbox này để xử lý data cho tụi mấy thằng đó, mấy thằng cần raw data, nhưng không ảnh hưởng trực tiếp tới cái ruồng chính. Cái giống như hồi nãy Biên có nói á, có làm á đó, là nó sẽ lấy data, rồi nó lưu ở đâu đó để sử dụng sau này, hoặc để process gì đó không biết, nhưng mà nó không muốn ảnh hưởng tới process chính của cái app, thì nó sẽ là cái đống này.</p>\n<p><strong>[59:09]</strong> Ở chỗ này, mọi người thấy là mình có khái niệm là cái ETL á, là extract, transform, và load. Bên cái warehouse xưa giờ mình làm á, nó sẽ là extract, transform, và load, nó đi theo thứ tự đó luôn. Nhưng trong cái này, mình sẽ thấy rõ là cái thằng datalake á, nó sẽ là extract và load trước. Rồi sau khi nào cần á, nó bắt đầu process data, là transform. Transform sẽ đứng sau, load sẽ đứng trước. Đó là cái khác biệt giữa hai thằng.</p>\n<p><strong>[59:52]</strong> Đây là chỗ so sánh khác biệt giữa thằng data warehouse và datalake thôi. Đó là dữ liệu bên warehouse, nó được clean, structured, organized thành cái table. Còn thằng này thì nó lưu dạng file, raw data các thứ, semi-structured rồi đó, CSV hoặc mấy cái JSON. Cái process nó cũng sẽ khác nhau giữa thằng lake và lake này. Truy vấn thì thằng warehouse sẽ truy vấn bằng SQL, còn kia thì xử lý trực tiếp trên cái dữ liệu luôn. Mấy thằng hỗ trợ xử lý trực tiếp dữ liệu, như thằng Spark đó, thì nó sẽ hỗ trợ mấy cái đó. Nói qua về cái thằng Notion.</p>\n<p><strong>[01:00:46]</strong> Datalake thì cái use case của thằng Notion, mọi người biết là Notion mình xài cũng hơi nhiều rồi đó. Hồi xưa, nó cũng đi từ từ thôi. Mấy cái tổ chức, mấy cái block hồi xưa, nó tổ chức thì cũng kiểu data bình thường, giống như mình, là mấy cái app nhỏ nhỏ. Mấy cái block của nó bắt đầu tăng dần. Block của nó được hiểu là mấy cái gì, rồi nó sẽ bao gồm cái title trong trong đó. Nó sẽ gọi là block. Số lượng block của nó tăng lên liên tục theo ngày giờ.</p>\n<p><strong>[01:01:35]</strong> Gì đó thì bắt đầu sau này, nó phình ra, nó sẽ bắt đầu sử dụng mấy cái kỹ thuật như là sharding, sharding xưa. Như nhớ có bài của Hải Vũ có xe gì đó, nó scale horizontally. Nó bắt đầu tách ra sharding này nọ, rồi mấy cái instance. Trong giai đoạn từ 2021 đến 2023, nó sẽ có 32 instance. Mỗi instance sẽ có 15 cái shard. Rồi từ 2023 trở đi á, nó bắt đầu chia lại, nó lại tăng lên. Số lượng tăng lên nữa, thì đó là 96 cái instance. Và mỗi cái instance, nó sẽ là 5 cái shard. Nhân lên tầm 400 mấy á, bốn trăm mấy.</p>\n<p><strong>[01:02:27]</strong> Để mà xử lý thì lúc này, nó hơi to, đúng không? Khi mà data nó bắt đầu to lên á, nó sẽ có những nhu cầu. Sau này sẽ có những nhu cầu về cái analytics, hoặc là mấy cái về làm bên machine learning á, tập dữ liệu này nọ, mẹo mẹo rồi. Nó sẽ bắt đầu setup một cái data warehouse architecture của nó. Cái này là cái tiền thân trước khi setup cái datalake. Nó sẽ làm data warehouse để xử lý data. Cái luồng cơ bản của nó setup để thu thập data, mấy cái về thay đổi data của mấy cái block trong từng shard.</p>\n<p><strong>[01:03:21]</strong> Nó sẽ sử dụng cái file transfer để nó ingest mấy cái data từ mấy shard này nè. Nó đổ về cái gì, rồi nó gộp mấy thằng đó lại thành một cái single database to. Cái này sẽ gặp khó khăn trong việc là nãy mình nói, nó đang có khoảng bốn trăm mấy cái shard, đúng không? Nó sẽ gặp khó khăn trong việc là quản lý bốn trăm mấy connection thằng này. Xong rồi mấy cái khó khăn trong việc scaling. Số lượng data thay đổi trong mỗi cái block của thằng Notion, nó xảy ra thường xuyên và nó rất nặng, sẽ...</p>\n<p><strong>[01:04:13]</strong> Gây khó khăn trong việc đọc ghi trong cái table to này. Sau đó, nó mới bắt đầu setup một cái internal datalake của nó. Cái internal datalake này, có note là nó sẽ không thay thế thằng này hoàn toàn, mà nó chỉ sử dụng cái mới thôi. Còn cái này, nó vẫn tận dụng trong một vài tác vụ, kiểu nhẹ hơn, cho mấy cái table thay đổi data không có nặng lắm. Với lại nó cần cái gì. Còn thằng này, nó expect cái luồng này á, là nó sẽ đánh những cái data nó cần để cho những mục đích mà analytics hoặc là machine learning.</p>\n<p><strong>[01:05:08]</strong> Data nó có thể chấp nhận cái độ trễ là vài tiếng, vài phút, tiếng gì đó. Nó sẽ sử dụng cái data trong đây. Cái lượng setup thì cũng đơn giản thôi. Nó sẽ sử dụng cái thằng Debezium CDC này nè. Nó là cái capture data change á, để nó watch cái thằng database này, bắn về Kafka. Sau khi nó bắn cái đống event data change về Kafka, thì có một thằng bên đây là Hudi hay gì đó, nó lấy event đó, nó quăng về thằng S3. Rồi bắt đầu từ thằng này, thằng nào muốn sử dụng thì vô đây, nó lấy về, nó setup tiếp, xài data warehouse hoặc xài mấy cái chủ đích về shard gì đó, thì vô đây nó lấy, nó xài.</p>\n<p><strong>[01:05:51]</strong> Cái đó là cái thật ra, cái case Notion. Chắc là có thể xài thằng này thử. Vì nó cũng là cái thằng đứng ở ngoài, nó watch vô cái đống đó. Nếu mà xài AWS hay retraining á, sẽ xài cái một là cái thằng Redshift hay gì quên rồi. Nó sẽ watch thằng đó, những thay đổi trên cái database, xong rồi nó sẽ lưu hết về trong một cái bucket hay cái gì đó. Xong rồi từ đó, mình bắt đầu xử lý sau. Cái luồng bên này là có thể sử dụng cái này. Hồi nãy setup một cái demo, nhưng mà có vẻ hơi fail rồi.</p>\n<p><strong>[01:06:51]</strong> Tại vì nó chưa có được cái thằng server, nên là nó fail. Để sau đi, rồi chắc chỉ có như đó. Với lại có cái kiểu góc nhìn đó, là cái process này nè. Là cái process mà chắc tụi enterprise, nó sẽ có thể áp dụng. Nó là process kiểu chung chung mà đa số tụi enterprise sau này, em nghĩ là nó có thể. Nhu cầu của nó khi mà cái data lớn lên á, thì cái nhu cầu của nó cũng sẽ đi theo hướng này thôi. Đó là nó cần data, thu thập data để làm cái gì đó, và không ảnh hưởng tới cái luồng chính.</p>\n<p><strong>[01:07:52]</strong> Mình thì xưa giờ toàn focus vào cái việc làm việc với mấy cái model AI. Nhưng mà mình nghĩ là sau này, mình cũng cần cái skill set gì đó để mình biết cách xử lý những data như thế này, tụi mà nó data lớn hơn kiểu vậy. Cho xin lỗi cái, anh nào đây? Anh đang nhìn nhận cái process này, thì nó khác gì với chuyện là mình replicate cái database của mình ra một instance khác để phục vụ chuyện retraining ấy anh? Là tại vì ở đây, đứng ra là ý ở đây, thật ra là kiểu em đang sinh giống như kiểu sinh data sang một...</p>\n<p><strong>[01:08:54]</strong> Cái shard khác, đúng không? Data warehouse, đúng không? Và sử dụng upload kit process cho những cái tác vụ mà nó không, kiểu mình làm mình làm async được ấy, chứ không cần phải trực tiếp trên nguồn data chính. Câu hỏi là đối với cả mấy cái model dạng như sharding hay sử dụng master-slave ấy, thì sao không theo kiểu cứ duplicate cái database của mình ra thôi? Duplicate data thì nó vẫn chỉ là một cái data warehouse ở dưới dạng table ha. Còn thật ra cái này, nó chỉ là cái process, nghĩa là một process cho database thôi</p>\n<p><strong>[01:09:40]</strong></p>\n<p>. Nó có thể có những cái event khác. Như là ví dụ, mình sẽ có nhiều cái external data, không hẳn là mình chỉ có một cái battery, database không. Ví dụ mình có mấy cái capture như là từ social media, hoặc là mấy cái tụm lum la nào đó, chả biết. Nhưng mà nó có thể là nhiều loại data khác nhau, gom về, quăng qua thằng này. Thằng Hudi bạn này, nó sẽ là thằng chịu trách nhiệm xử lý cái raw data đó, để nó quăng vào cái thằng S3 này. Nó lưu...</p>\n<p><strong>[01:10:23]</strong></p>\n<p>Mọi thứ dưới cái đống này. Nó vô luôn, mọi thứ về dạng file gì đó, gom hết vô đây, để bắt đầu sau này, mấy thằng ngoài sao n mới có cái slot để xử lý. Thật ra tụi nó cũng có một câu hỏi là tại sao không dùng mấy thằng database như MySQL hay PostgreSQL á? Nó sẽ có mấy cái... Tại sao phải sử dụng cái thằng capture data change mà không sử dụng mấy thằng đó? Mấy thằng đó, nó có cơ chế để streaming mấy cái event change của nó luôn. Mấy thằng đó, event stream, nó thường sẽ stream trực tiếp từ database này qua database khác.</p>\n<p><strong>[01:11:09]</strong></p>\n<p>Còn thằng này, nó sẽ là capture cái event đó và đưa đâu cũng được. Vì là nếu mình không có thằng Kafka này ở đây á, thì mình cần một service nào đó, mình cần cái real-time data xử lý liền luôn á, mình không cần phải vô Kafka. Cái thằng CDC này vẫn có thể bypass qua đó được, kiểu kiểu vậy, chứ không hẳn là từ database sang database kiểu như vậy. Ta cũng có nhìn ý là kiểu, thấy là nếu mà theo góc nhìn về operation chẳng hạn ấy. Tất nhiên nếu mà có multiple datasource và sử dụng những cái partition tool các thứ, nó khác nhau ấy.</p>\n<p><strong>[01:11:50]</strong></p>\n<p>Database khác nhau, thì cái này cũng sẽ cả, thật ra là gom nó lại vào một cái datalake, sao cho một số cái tác vụ, nó cụ thể thôi ấy. Thực ra là một số team, như kiểu team AI hay team về mặt làm report, hay data, thì người ta cũng sẽ chỉ cần work trên cái data warehouse này thôi, kiểu vậy. Hoặc là có extend cho bên nào khác nữa, thì cũng sẽ make sense, phân vùng data riêng cho từng cái team riêng, đúng không? Có họ thêm cái vụ mà cái button, cái button ETL bên database bình thường với cả bên datalake, thì nó sẽ là ELT, đúng không?</p>\n<p><strong>[01:12:39]</strong></p>\n<p>Đúng rồi, ELT, anh sẽ hiểu là mình extract, nghĩa là mình tìm đúng file, đúng không? Mình load cái file đấy lên đây, và transform nó thành dạng kiểu structured data ha. Ý là nó sẽ transform, nó chỉ là cái action, nó xảy ra ở sau khi mình có raw data rồi. Còn ETL, nghĩa là extract là sẽ lấy data từ cái đám data source á. Xong rồi nó sẽ có cái quá trình log thẳng vào cái raw data, thẳng vào mấy cái gì đó của mình. Nó gọi là cái raw landing, cái layer raw landing. Xong rồi mình mới có cái gọi là transform.</p>\n<p><strong>[01:13:34]</strong> Sau đó, sau cái landing sẽ có transform để xử lý data, thì nó sẽ ra sau. Còn cái thằng kia là nó extract xong, rồi transform, nó mới quăng thẳng vào cái warehouse, đó là cái database của mình. Hay anh em có hỏi gì không? Rồi, cảm ơn An, đúng rồi. Anh em nhé, rồi bye anh em, mỗi tuần vui vẻ.</p>\n<hr>\n<h3 id=\"english-transcript\">English transcript</h3>\n<p><strong>[00:00]</strong> It seems like the all-hands meeting is next week. I don’t see anyone creating any events, so this week will probably just be normal, right? Guys, check if there’s any issue with screen sharing. Should we just start? Today, I think we’ll have about three presentations. Phát just said he doesn’t have anything new this week, so he’ll probably skip today. Guys, try sharing your personal screens and see how it goes. Can we preview it first?</p>\n<p><strong>[10:42]</strong> According to the schedule, it’s probably you, right, bro? Let me go first then. This fine-tuning topic, it’s not really that new. This presentation is just 100.5, not 101, so it’s only a brief intro, not going deep into it yet. Honestly, I’m pretty clueless about it too, so I’ll just give a quick overview. Today, I’ll present about fine-tuning. Here’s the agenda for this session.</p>\n<p><strong>[12:24]</strong> The introduction is, if you guys use AI, you’ve probably heard of the concept of fine-tuning. AI has these models that are mostly fitted to data from some specific day, with stuff like data privacy or data from a particular domain. That data doesn’t show up in the knowledge of the foundation model. To get that knowledge into the model, people usually use retraining, right? But there’s another way called fine-tuning. At the end of this, I’ll compare these two methods, looking at when to use which one and when not to.</p>\n<p><strong>[13:08]</strong> For now, just think of fine-tuning as a way to expand the knowledge of a foundation model. What is fine-tuning? Simply put, you retrain the model. You take a foundation model, feed it a dataset to fine-tune it, meaning you retrain it. After fine-tuning, you get an adjusted model, called a fine-tuned model.</p>\n<p><strong>[13:44]</strong> Why does fine-tuning bring in new knowledge? Simply put, in an AI model, knowledge is stored through neural networks. Fine-tuning updates the weights, the parameters of that neural network, to fit the new knowledge. When you throw new knowledge in, those weights change, and at that point, the model has updated its knowledge.</p>\n<p><strong>[14:19]</strong> When you throw new knowledge in, the weights change, and at that point, the model has updated its knowledge. When fine-tuning a model in practice, it’s not just about throwing a dataset in and retraining it. Sure, you get a fine-tuned model, but you don’t know if that retrained model is any good. I’ll introduce a workflow that people outside commonly use for fine-tuning.</p>\n<p><strong>[14:59]</strong> This flow, it’s got several steps like this. You can split it into two clusters, two clusters, alright? This flow, I’ll divide it into two clusters. I’ll go through the first cluster first. The first cluster is the one on the left, simply understood as a base model to start with. Then, you have a new dataset, something new, you throw it in, fine-tune it. Then it produces a model, and you supervise it, meaning you retrain it in a way that’s like retraining it.</p>\n<p><strong>[15:38]</strong> It’ll add more knowledge, with this input, the output will come out like this. It results in something called supervised fine-tuning. After that, let me move to the next part. Alright, this fine-tuning is retraining on data, meaning you give it a pair of input-output in the dataset for it to learn. It’ll pick up that new knowledge. For this step to be perfect, the dataset has to be clean. It has to be clean, not mixed with other stuff. Meaning it has to be specific to the domain we want to train it on.</p>\n<p><strong>[16:31]</strong></p>\n<p>Back to this diagram, after you have a model that’s been retrained, you bring it to production, you use it, right? At this point, people outside use a system called human feedback. It’s like, does the response from this model satisfy you? Rate it from 1 to N stars, something like that. You’ll collect that data. It’s part of this step—you’ll gather human feedback from that retrained model of yours.</p>\n<p><strong>[17:06]</strong> Based on that feedback, people call this step a bit resource-intensive. You’ll have to retrain a separate model. That model is used to evaluate how many points this response gets. Next, you move to the third step, the final one. In this step, you’ll use algorithms like reinforcement learning to combine it with the retrained model and your reward model.</p>\n<p><strong>[17:46]</strong> You retrain, you fine-tune the model one more time. It’ll give you something called an optimized model. This loop keeps going, going forever. You have a retrained model, collect human feedback, then combine those three things to retrain the model again. The more you do it, the better the model gets at what we want. That’s the flow I’ve seen people use out there in production.</p>\n<p><strong>[18:24]</strong> During the fine-tuning process, you’ll often hear about a concept called catastrophic forgetting. What does that mean? It means when you retrain with new knowledge, it reduces performance on the old knowledge. Why does this happen? As I said, a model’s knowledge depends on its weights, its architecture, and its parameters. The dynamic parameters in a model are those weights. When you retrain, those weights change, right?</p>\n<p><strong>[19:00]</strong> When they change, doesn’t that mean the old knowledge gets less accurate? If your dataset has a lot of overfitting data, meaning your dataset is too perfect, too perfect within that dataset, then when someone throws something new in, it’ll mess up the old stuff. They call that overfitting, meaning it’s folded in too much to the training data. When it encounters new data, performance drops.</p>\n<p><strong>[19:42]</strong> So at this point, people out there use a technique called parameter-efficient fine-tuning, or PEFT. It has lots of methods, techniques within this approach, like LoRA and stuff. But generally, most of them don’t update all the weights in the model. They’ll just freeze the layers that aren’t necessary. They freeze those unneeded layers and only update a certain number of weights. That’s to avoid losing too much of the old knowledge. That’s the basic idea. For deeper stuff about the algorithms behind it, you can look it up yourselves.</p>\n<p><strong>[20:27]</strong> Back to the question from the start, how’s it different from retraining, and which should we use? There’s a table here, you can easily see it. Retraining depends on your database. You keep throwing stuff in, throwing stuff in, and the data gets updated constantly. But with fine-tuning, you retrain the model, so the data stays only where you retrained it.</p>\n<p><strong>[21:16]</strong> Next is customize and learning style. Meaning, retraining’s purpose is to give us a knowledge base that we can pull from to reference and use. But fine-tuning? It upgrades the model’s brain, so it has that knowledge built-in already. The stuff below that, you guys can probably look into it more yourselves, yeah?</p>\n<p><strong>[21:57]</strong> I’ve got an example like this. For instance, say you want to build a system to explain doctors’ notes, right? Doctors’ notes, as you might know, have tons of technical terms. And those technical terms are often abbreviated, written all sloppy too.</p>\n<p><strong>[22:44]</strong> If you guys use fine-tuning, you’ll make it learn all that messy knowledge, the shorthand stuff, the handwriting stuff from doctors. So when you input a doctor’s note, it’ll give you a really accurate answer. But if you use retraining, when you input a doctor’s note, it’ll find the relevant data and pull it up to read. But the thing is, the model doesn’t actually understand those terms, so it won’t give you an accurate answer either.</p>\n<p><strong>[23:16]</strong> You can think of it like this: fine-tuning is like asking a doctor to read a doctor’s note. Retraining is like giving it to someone with really broad knowledge to read a doctor’s note. That person might know a ton, but when it comes to the specialized stuff, the real technical terms, they don’t have the depth of an actual doctor. So the accuracy won’t be high.</p>\n<p><strong>[23:57]</strong> Second, you might say, alright, with retraining, we can use a system prompt to list out all the doctor’s shorthand in the system prompt, and it’ll figure it out on its own. But doing that, you’ll end up using a lot of tokens, right? Because when you use retraining, you pull out all the retraining data, throw in a retraining knowledge base, plus a bunch of zero-shot stuff, descriptions, and whatever else goes with it in a prompt, that takes up a ton of tokens.</p>\n<p><strong>[24:34]</strong> And when you’re in a long conversation with a model, it’s not like it only relies on your question. It bases its answers on all the conversations you’ve had with it from the start. At that point, it leads to a situation where it’s limited by tokens. That’s the drawback of using retraining—it eats up tokens. Because you need tokens to run your system prompt too. But with fine-tuning, the thing is, the model already has the knowledge, so you don’t need a system prompt.</p>\n<p><strong>[25:14]</strong> That’s a quick rundown on fine-tuning. Probably having a demo for you guys to see would make it clearer, yeah? Now I’ll fine-tune a model called Duty 40 Mini. I’ve got a dataset like this. Yup, like this, each thing has a system like retraining, then the user asks this and wants it to answer like that, right? I’ve got 10 things, 10 records in this dataset, and I’ll fine-tune it.</p>\n<p><strong>[26:13]</strong> Before fine-tuning, I’ll run it through a piece of code so I can estimate it. Since I’m using Open AI, it’ll cost money. So we’ll calculate an estimate of how much it’ll charge me. After I run it, at the end it’s like, around 4800, close to 4800 tokens. This is just a reference, but I think it’s pretty accurate. Then I’ll upload this data file to Open AI. It’ll give me the file up on my Open AI account.</p>\n<p><strong>[27:03]</strong> Then I’ll train it. I’ll create a fine-tuning job. At this point, on Open AI, it’ll run this job. You guys can go up here, read it, check it out. It won’t give results right away, it’ll create a job and leave it pending there, so Open AI can fine-tune it for us. While waiting, we can track how the process is going. Once it’s done, it’ll notify us. We just keep stamping this sentence, checking this sentence to see if it’s finished or not. We read it from that spot.</p>\n<p><strong>[27:58]</strong> Once it’s done, it’ll give us some result statuses. After fine-tuning, with the same question. For example, this is the question I used, I used this question, it’s pretty close to one of the records in my dataset pile. After I run it, it’ll answer like this. But before fine-tuning, I used a normal model, just a regular model, and it answered like that.</p>\n<p><strong>[28:49]</strong> Meaning, when I fine-tuned it, it worked. That’s how I used Open AI to fine-tune a model. That’s it for my demo. Any questions, guys? Yeah, for this demo, I used tuning, but to do fine-tuning locally with something fancy, I probably don’t have the gear. Yup, just small-time gear. Actually, with some earlier models, I ran them on LoRA and stuff, and they could’ve been demoed too. But I didn’t, this one’s easy, it’s like a basic one.</p>\n<p><strong>[29:47]</strong> A bit scattered and slow, huh? Yeah, it’s probably fine though. Generally, enterprise teams or those who don’t want to spend time building GPUs will use this method. Back with Diagram GPT, when GPT-4o Mini came out, fine-tuning was free, so using this was pretty convenient for them. The demo shop for you guys is using something like a service. Open AI provides a fine-tuning service, putting it right up on their models. We pick some models probably the mini ones, I guess. The cost probably isn’t too high.</p>\n<p><strong>[30:37]</strong> That’s one way to do it. But the issue is, we’re still not the ones owning that model. The thing is, it’s still hosted on their server. There’s another way, like building your own server and running it yourself. Today’s case was different. Check it out, guys, yesterday I tried a model with just 3 billion parameters. But it ran for two or three hours and still wasn’t done, bro. Actually, this one, its version is simpler than what we have now, smaller than the previous one from earlier.</p>\n<p><strong>[31:26]</strong> It’s a full flow related to what was it reinforcement feedback. The point is, what I introduced about production out there is when people tune stuff. They don’t just fine-tune it and use it right away, they have to evaluate it again to see if it’s right. They put it into a cycle to keep improving the fine-tuned model, something like that. This is one of those flows. At its core, it’s just a model, nothing special. The key is you guys knowing the costs to judge the approach.</p>\n<p><strong>[32:05]</strong> Because it’s still about accuracy, right? We pick a method to make the output more accurate. Methods like retraining or fine-tuning they’ve got different downsides. And honestly, even with fine-tuning, there are lots of different fine-tuning methods. We’d probably need to dig deeper to figure those out. This is still kinda general. Probably so, Hoàng. If we’ve got the chance, we should dive a bit deeper.</p>\n<p><strong>[32:48]</strong> Deeper in the sense of looking at methods related to retraining and stuff. With fine-tuning methods, some of them are pretty resource-efficient. Of course, there’s a trade-off with some other stuff, like that. I’m introducing this so you guys can check it out somewhere. People asked—Đạt asked when we need fine-tuning. I’d say fine-tuning is needed when you want it to have knowledge on a specific topic. You can consider using fine-tuning then.</p>\n<p><strong>[33:39]</strong> But in all cases, from what I’ve seen out there, most people prefer retraining. Because it’s easier and uses fewer resources. But in some cases, like right now, the example I gave about doctors’ notes, I’d suppose tuning is better. Then it depends on the architecture, how we split our system into smaller systems, what those smaller systems are like it varies. There might be some use cases where they want to host small models, tiny ones maybe.</p>\n<p><strong>[34:18]</strong> Just for doing a specific task. Like analyzing weather, humidity, stuff like that, to perform some action. For example, changing your phone’s theme or triggering some action or whatever. You could retrain a small model just for that, no need for a network or anything fancy. Probably like that. From now on, it’s Biên’s turn, yeah?</p>\n<p><strong>[36:13]</strong> Using it and building a recovery process for it. How it works in detail, it’s got a few main parts. First is the reason we need this technique and comparing it to something more familiar like backup. Then it’s about how we build it and the things we need to watch out for, what stuff. To start, in reality, there are often organizations, companies running apps with high data traffic. Like stock trading stuff, for example. My example here is something like 50,000 transactions.</p>\n<p><strong>[37:12]</strong> My example is like 50,000 a day is low it could shoot up to 500,000, a million transactions a day. After a while, that data volume swells up huge, affecting how we query data and impacting the user experience. In that data, there’s stuff that, once used, barely gets accessed again. Like history from over 7 years ago, for instance. That leads to a problem how do we deal with that pile of data? So we use a technique called data archiving.</p>\n<p><strong>[38:14]</strong> It’s got benefits to counter those issues up there. First off, the data we use, the stuff that’s constantly being set, queried, read, and written all the time, it usually costs a lot. With this technique, we take our data and move it somewhere else, somewhere cheaper with less access. That way, it boosts our app’s performance when querying or aggregating data and such.</p>\n<p><strong>[39:07]</strong> In terms of legal stuff or reusability, that data will be kept safe, not affected by external factors. So later, when we need to use it again, we can pull it out and use it. As people often say, you’ll think of data backup, which is usually used to restore data, restore the system, or the app if something goes wrong. But these two things are different in that data backup is more for hotfixing the system. As for archiving data archiving focuses on storing data long-term.</p>\n<p><strong>[39:59]</strong> It has a detailed comparison like this. To build an architecture, a system to archive data, and then use it for recovery when we need it, here’s how it works. You guys see, it has three main notes. First, we store the data, we use metadata to interact with that data, then we put it somewhere, like cloud-based services or cloud storage services, to keep that data stored.</p>\n<p><strong>[40:51]</strong> In detail, to store the data, first we have to figure out which data needs to be stored. We need to analyze which data gets used a lot, which doesn’t get used, or gets accessed rarely. There are lots of tools to help us do that. For example, analyzing from business requirements or using analytics tools, those analytics tools. From there, we figure out which data is necessary, which can be archived.</p>\n<p><strong>[42:05]</strong> After that, we’ll package it up, using a few methods like vectorizing it, encoding it, then using checksums and stuff to make sure the data stays correct. Later, when we use it again, we can access it quickly. Because these databases are packaged in a storage different from what we usually set, we need to save its metadata. For instance, store it by month, yeah, or by account, so it’s easier to query later.</p>\n<p><strong>[43:07]</strong> After archiving, when we want to use it again, just now I gave an example for recovery. We’ll use that metadata from earlier, search for the data blocks we need, then bring it back to the computing environment when necessary. The benefit here is that when we do this stuff, it doesn’t mess with the production data of the running app. We can do it in parallel. Whatever we want to do with it, we do, without poking around in production, so it keeps things safe.</p>\n<p><strong>[43:51]</strong> For the user experience, like our product. Speaking of this, there are a few practices for using and building this system. It’s pretty simple, right? We’ll have to review the policies we set up for this system to run, check if the data stays intact. We’ll automate the steps of this process. Nowadays, there are plenty of tools supporting us already, like AWS or Google, they’ve got stuff like...</p>\n<p><strong>[45:14]</strong> Google Cloud, for example. We just need to write some simple stuff to push it up there. And we can’t skip monitoring to see if this data is working well or not. Then, there are other techniques like checksums and such, to ensure our data always stays intact. When we need it, there’ll also be strategies like scheduling the data beforehand. Because this data sticks around for a long time, it’ll grow big, it’ll swell up in the storage, the cloud storage we use to keep it.</p>\n<p><strong>[46:05]</strong> So there’ll be strategies like, when we need it, we have to schedule in advance, how much time it’ll take to replicate the data for us, for instance. That’s my plan, that’s it. The theory is kind of to address the ultimate goal of explaining to you guys about handling data that sticks around long-term but isn’t used much in the system we build. Like in banking, for example, there’s stuff like user trades, user trades hitting hundreds of millions of records or something.</p>\n<p><strong>[46:45]</strong> Later on, it’ll grow even more. Meaning querying just the recent data, but it still takes a ton of time, something like that. That’s what I talked about today, done. Any questions, guys? When we store data, zip data, it’s like we zip up a fragment from the past that doesn’t use that data for current purposes, right? Yup, exactly, exactly. Agreed, I’ll have to delete it. Once it’s done, I’ve got to delete that, yeah. So we’ll have ways to reload it for calculations when needed.</p>\n<p><strong>[47:41]</strong> That’s why we’ve got these methods to keep it safe. I’ve got a question over here. I don’t know if Thỏ’s crew knows about this, can we compare it? Standing out is Timescale, it’s got a chunk-moving mechanism. For example, we compress it like normal. Plus, there’s this thing about having hot, warm, and cold storage. Like, if we back up weekly, it goes on Azure’s hot storage. If it’s too old, say 2, 3, 4, 5 years, then it’s on Azure’s cold storage or Backblaze. It’s got a separate service for us to move that data stuff.</p>\n<p><strong>[48:53]</strong> Right to the object or block storage spot, we interact with Timescale to make sure we save money with old data when we need to. It can save costs, it can still query, with the trade-off being that querying is a bit slow with older data. Yup, what I get is it depends on the platform we use to build, right, bro? For example, with Microsoft, it’ll depend on the database’s timing or the data’s lifespan or capacity and stuff, so there’ll be different levels.</p>\n<p><strong>[49:40]</strong> For example, there’ll be delays, or normal access still, or delays for stuff that hasn’t been used in a long time. That’s for us to specify on each tool. But generally, it’s like, bro, what’s this doing? Standing out is Timescale, it fits this kind of pattern, for time series stuff. On Azure’s side, they make it fit the status, kinda like Timescale, but it helps us partition and shard the way we want.</p>\n<p><strong>[50:39]</strong> Each one has its own pros and cons. With AWS, standing out is that with this service, you’ve got to watch the hardware storing this data, whether it’s stable or not. For example, Azure’s cold storage uses disks, what kind of disks, some pretty unique ones. They’ve got to use a laser machine to burn it in there. So querying is super fast, but inserting is kinda slow, like inserting a bunch takes a few minutes. Because it needs a hard laser to burn it on there, no virtualization layer.</p>\n<p><strong>[51:23]</strong> Each service and each type of tool we use for compressing and storing has its own pros and cons, depending on the platform we subscribe to. Yup, exactly. This isn’t just about tools like AWS or Google services. It’s like we can also weigh it for our business too. So this is kinda general. Each platform uses different techniques. The ultimate common goal is to tackle the issue of data growing big but affecting how we query, how it runs.</p>\n<p><strong>[52:16]</strong> Lots of ways to solve the query optimization problem, right? When the issue is that the data’s too big, there are a few approaches. Biên’s way is one approach, meaning there’s a chunk of data we’re not using, so we cut it out, store it somewhere. Later, if we need past data, we insert it back to use it. For now, we keep some percentage of current data, enough for current purposes, so querying is faster.</p>\n<p><strong>[52:59]</strong> Other ways use tooling, some database types, like Timescale, optimize querying for huge data right off the bat. I think underneath, it kinda auto-buffs it somewhere, holds it for us, right, bro? So we fuss over the details underneath, we just use the interface. Underneath, it’s pretty much the same, like us kids. Thanks, Biên, that’s it. Probably An’s last piece, not sure if it’s related. Not sure if it ties a bit to the community stuff.</p>\n<p><strong>[54:00]</strong> If there is, it’s probably just a quick rundown, not a lot. Pretty similar to Biên’s piece, but the use case is kinda close too. It expands a bit more. Alright, so this piece is a quick talk about datalakes and Notion’s use case. Let’s talk datalakes first. Datalakes, you guys have probably heard about them tons, been around for a while now. Let’s look back at how these datalakes evolved, see where we’re at.</p>\n<p><strong>[54:54]</strong> Actually, from the start, around 1980 or something, it was the era of databases, database warehouses, the stuff we’re using now. Table stuff, creating tables and processing data. Later, around the 2000s or so, the big tech folks started collecting tons of data. They used that data, so new stuff popped up to handle storing and processing data on big datasets. Like data stored as files and such. These things, terms like MapReduce, for instance.</p>\n<p><strong>[55:44]</strong> I think in my memo, there’s an article on MapReduce. If you guys don’t know, you can search it up, check it out to see what MapReduce did back then. It was the ancestor of this era. Later, it just got integrated in, not used standalone anymore, but it’s probably all built-in now. After that development phase, around 2010, it started giving birth, a bit before 2010, to concepts like datalakes, big data, cloud, internal data warehouses on the cloud. It’s just cloud stuff.</p>\n<p><strong>[56:28]</strong> Now, these days, it’s evolving further, into lakes and datamarts. Lakes are probably just a mix of datalake stuff and warehouses, then turned into a house. Like Datadog or whatever they’re doing, I don’t know, but we’re probably talking about this a bit behind the times. To focus in, let’s take a quick look at a general data architecture first. This one, Tom’s piece the other day posted it, had a diagram too. It’s a bit more streamlined than this, a bit more concise, about data going through layers, processing then to some other thing.</p>\n<p><strong>[57:20]</strong> This one shows it a bit clearer, about what kinds of data we store in a datalake. Compared to a data warehouse, we only store structured data, or stuff like table data that’s all cleaned up. But this datalake, it’s raw data, it’ll handle structured, unstructured, semi-structured data all together. It stores it raw, then it processes the data, transforms it, and tosses it over to the BI analytics crew or into another warehouse to hold the processed data.</p>\n<p><strong>[58:18]</strong> Then there’s this analytics sandbox layer, which is a layer for data scientists or folks who need to use raw data, process data, without messing with the main process. Over here, they’ll work on this sandbox to handle data for those guys, the ones who need raw data but don’t directly affect the main flow. It’s like what Biên said earlier, doing that stuff, taking data and storing it somewhere for later use or to process something, I don’t know, but it doesn’t want to mess with the app’s main process, so it’s this pile.</p>\n<p><strong>[59:09]</strong> Here, you guys see we’ve got this concept called ETL, extract, transform, and load. With warehouses, what we’ve done so far is extract, transform, and load, it follows that order straight up. But in this one, you’ll clearly see the datalake does extract and load first. Then when it’s needed, it starts processing the data, that’s transform. Transform comes after, load comes before. That’s the difference between the two.</p>\n<p><strong>[59:52]</strong> This is just the spot comparing the differences between data warehouses and datalakes. With warehouses, the data is cleaned, structured, organized into tables. But this one stores it as files, raw data and stuff, semi-structured already, CSV or JSON files. The processing is different between this lake and that lake too. Querying, the warehouse uses SQL, while over there, it processes directly on the data itself. Tools that support direct data processing, like Spark, handle that stuff. Moving on to Notion.</p>\n<p><strong>[01:00:46]</strong> For datalakes, the use case of Notion, you guys know we’ve been using Notion quite a bit already. Back in the day, it started slow. The organizations, the blocks from before, they were organized like normal data, just like us, small apps. Its blocks started growing gradually. Blocks are understood as what, and they’ll include the title in there. They call it a block. The number of blocks keeps increasing constantly by the day and hour.</p>\n<p><strong>[01:01:35]</strong> Something like that, then later it started swelling up, and it began using techniques like sharding, old-school sharding. Like I remember Hải Vũ’s article mentioning something about it, scaling horizontally. It started splitting into sharding and stuff, then instances. From 2021 to 2023, it had 32 instances. Each instance had 15 shards. Then from 2023 onward, it started splitting again, increasing even more. The number went up again, so that’s 96 instances. And each instance had 5 shards. Multiply that, it’s around 400-something, four hundred and some.</p>\n<p><strong>[01:02:27]</strong> To handle that, at this point it’s pretty big, right? When the data starts getting big, it’ll have some needs. Later on, it’ll have needs for analytics or stuff related to machine learning, datasets and tricks and all that. It started setting up its own data warehouse architecture. This was the precursor before setting up the datalake. It did a data warehouse to process data. The basic flow it set up was to collect data, stuff about data changes in the blocks across each shard.</p>\n<p><strong>[01:03:21]</strong> It used file transfers to ingest the data from these shards here. It dumped it into something, then merged those things into one big single database. This ran into issues because, like I said earlier, it’s got about four hundred-something shards, right? It struggled with managing four hundred-something connections for this thing. Plus the scaling challenges. The amount of data changing in each block of Notion happens often and is super heavy, so it made reading and writing in this big table tough.</p>\n<p><strong>[01:04:13]</strong> After that, it started setting up its own internal datalake. This internal datalake has a note that it won’t completely replace this one, it just uses the new stuff. The old one, it still uses for some tasks, lighter ones, for tables where data changes aren’t too heavy. And it needs something. But this one, it expects this flow to tag the data it needs for purposes like analytics or machine learning.</p>\n<p><strong>[01:05:08]</strong> The data can handle a delay of a few hours, a few minutes, something like that. It’ll use the data in here. The setup amount is pretty simple. It uses this thing, Debezium CDC, you know. It’s the capture data change thing, to watch this database and shoot it over to Kafka. After it shoots that pile of event data changes to Kafka, there’s a thing over here, Hudi or something, that grabs those events and tosses them to S3. Then from this point, whoever wants to use it goes in here, grabs it, sets it up further, uses it for data warehouses or some shard-related purposes, they take it from here and use it.</p>\n<p><strong>[01:05:51]</strong> That’s actually the Notion case. We could probably try using this thing. Because it’s also one of those that stands outside, watching that pile. If we use AWS or retraining, it’d use something like Redshift or whatever, I forget. It’d watch that, the changes on the database, then save it all into a bucket or something. From there, we start processing afterward. This flow here could use that. Earlier, I set up a demo, but it kinda flopped.</p>\n<p><strong>[01:06:51]</strong> Because it didn’t have the server yet, so it failed. Let’s leave it for later, probably just that much for now. Plus there’s this perspective, this process here. It’s a process that enterprise folks could probably apply. It’s a kinda general process that most enterprises later on, I think, might use. Their needs, when the data grows big, will probably head in this direction anyway. It’s that they need data, collect data to do something, without messing with the main flow.</p>\n<p><strong>[01:07:52]</strong> For us, so far we’ve always focused on working with AI models. But I think later on, we’ll also need some skill set to know how to handle data like this, stuff where the data’s bigger, you know. Sorry, which bro is this? You’re looking at this process, how’s it different from us replicating our database to another instance for retraining purposes, bro? Because here, standing out, the point is, it’s like I’m kinda generating data to another different shard, right?</p>\n<p><strong>[01:08:54]</strong> And using an upload kit process for tasks that don’t, like, we can do async, you know, instead of needing to work directly on the main data source. The question is, for all those models like sharding or using master-slave setups, why not just duplicate our database? Duplicating data, it’s still just a data warehouse in table form, yeah. But actually this, it’s just a process, meaning a process for the database.</p>\n<p><strong>[01:09:40]</strong> It could have other events. Like, for example, we’ll have lots of external data, not just one battery, a database, you know. Say we’ve got captures from social media or some random messy stuff, who knows. But it could be lots of different data types, gathered up, tossed to this thing. This Hudi buddy here, it’s the one responsible for processing that raw data, to throw it into this S3 thing. It stores everything under this pile.</p>\n<p><strong>[01:10:23]</strong> It goes right in, everything in some file format, all dumped in here, so later on, the outside folks have a slot to process it. Actually, they had a question too, why not use databases like MySQL or PostgreSQL? They’ve got their own... Why use this capture data change thing instead of those? Those ones, they’ve got mechanisms to stream their event changes already. With them, event streams usually stream straight from one database to another.</p>\n<p><strong>[01:11:09]</strong> But this one, it captures that event and sends it wherever. Because if we don’t have this Kafka here, we’d need some service, we’d need real-time data processed right away, without going through Kafka. This CDC thing can still bypass to there, kinda like that, not exactly from database to database like that. We also noticed something, like, it feels like, from an operations angle, for instance. Of course, if there are multiple datasources and we use partition tools and stuff, they’re different.</p>\n<p><strong>[01:11:50]</strong> Different databases, so this will also, actually, bundle it into a datalake, so some tasks are specific, you know. Actually, some teams, like the AI team or the reporting team or data folks, they’d probably just need to work on this data warehouse, like that. Or if it extends to other sides too, it’d make sense, splitting data zones for each team separately, right? They added this thing about the button, the ETL button in regular databases versus datalakes, it’d be ELT, right?</p>\n<p><strong>[01:12:39]</strong> Yup, ELT, you’d get it as extract, meaning we find the right file, right? We load that file up here and transform it into something like structured data, yeah. The idea is it transforms, it’s just an action, it happens after we’ve got the raw data. But ETL means extract is pulling data from the data source pile. Then it’s got a process to log straight into the raw data, straight into some stuff of ours. They call it raw landing, the raw landing layer. Then we’ve got what’s called transform.</p>\n<p><strong>[01:13:34]</strong> After that, after the landing, there’s transform to process the data, so it comes out later. But the other one extracts, then transforms, then tosses it straight into the warehouse, that’s our database. Any questions, guys? Alright, thanks An, yup. See you, guys, bye, have a fun week</p>","frontmatter":{"tags":["office-hours","ogif","discord"],"title":"OGIF Office Hours #37 - AI Fine-Tuning, Data Archiving, and Datalake Scaling with Notion","short_title":"#37 AI Fine-tuning, Data archiving, Datalakes","date":"2024-12-29T00:00:00.000Z","description":"In OGIF 37, our team dives into AI fine-tuning with an Open AI demo, data archiving for high-traffic apps, and datalake scaling via Notion’s use case. Join us for a session packed with practical insights and collaborative Q&A to boost our technical skills.","authors":["innno_"]},"slug":["updates","ogif","37-20241227"],"backlinks":[],"tocItems":[{"id":"topics-and-highlights","value":"Topics and Highlights","depth":3,"children":[]},{"id":"vietnamese-transcript","value":"Vietnamese transcript","depth":3,"children":[]},{"id":"english-transcript","value":"English transcript","depth":3,"children":[]}],"metadata":{"created":"Sun Dec 29 2024 00:00:00 GMT+0000 (Coordinated Universal Time)","updated":null,"author":"innno_","coAuthors":[],"tags":["office-hours","ogif","discord"],"folder":"updates/ogif","wordCount":13659,"readingTime":"69m","characterCount":74667,"blocksCount":163,"tokenId":"","permaStorageId":"","title":"OGIF Office Hours #37 - AI Fine-Tuning, Data Archiving, and Datalake Scaling with Notion","authorRole":"","image":"","firstImage":null},"isListPage":false},"__N_SSG":true}