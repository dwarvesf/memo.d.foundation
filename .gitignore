# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test
docker-compose.local.yml

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# hugo dev-related files
resources
.hugo_build.lock
content/
!src/lib/content/

# MacOS files
.DS_Store
.DocumentRevisions-V100
.Spotlight-V100
.Trash*

# secrets
.secrets

# environment files
.env
.env.local
# database files
vault.duckdb*

# vtt transcript files
*.vtt

# The directory Mix will write compiled artifacts to.
**/_build/

# If you run "mix test --cover", coverage assets end up here.
**/cover/

# The directory Mix downloads your dependencies sources to.
**/deps/

# Where third-party dependencies like ExDoc output generated docs.
**/doc/

# Ignore .fetch files in case you like to edit your project deps locally.
/.fetch

# If the VM crashes, it generates a dump, let's ignore it too.
erl_crash.dump

# Also ignore archive artifacts (built via "mix archive.build").
*.ez

# Ignore package tarball (built via "mix hex.build").
memo-*.tar

# Temporary files, for example, from tests.
/tmp/

# Build artifacts and logs from elixir-ls
**/.elixir_ls/
**/.elixir-tools/

# Devbox artifacts
/.devbox/
.aider*

# node_modules
node_modules
package-lock.json
package.json

# next.js build
.next
out
public/content

# cache
.memo_export_cache.json
.submodule_update_cache

# mint-related
wallet.json
duckdb
duckdb_*.zip

# writing guidelines
.write/
.tmp/
docs/tone/

# scripts output
scripts/notion/notion-output/

# test output
coverage/
